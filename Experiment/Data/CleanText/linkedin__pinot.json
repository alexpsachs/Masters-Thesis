{
    "kishoreg": "We are working on a wiki that details Pinot v/s other solutions. Will keep you posted.\n. @Jackie-Jiang do we have any numbers that can be published externally?.\nArup, we had some numbers for the TPCH data but not sure if you can get to\nany conclusion by looking at those numbers. To be honest, benchmarks will\nfavor the projects that publish them.\nTake a look at the perf numbers published by Uber. They evaluated Pinot and\nDruid on the same data set.\nhttps://www.slideshare.net/XIANGFU3/pinot-near-realtime-analytics-uber\nMy suggestion is to try out both Pinot and Druid for your use case. It\nshould not be drastically different if you are using the standard inverted\nindex. But if you enable star tree index, depending on your queries, you\nmight see orders of magnitude difference.\nHope this helps.\nOn Tue, Nov 14, 2017 at 8:03 AM, Arup Malakar notifications@github.com\nwrote:\n\nHi @raviarin https://github.com/raviarin,\nThanks for your comment, as someone who is evaluating druid and pinot, I\nam trying to understand how they are different. Has there been any\ncomparison made since your last comment? I noticed the\npinot-druid-benchmark\nhttps://github.com/linkedin/pinot/tree/master/contrib/pinot-druid-benchmark\nrepo, are there any published benchmarks?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3#issuecomment-344306662, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z4hq_QIND8uU3N-IrI4RBHFd_DKkks5s2bnugaJpZM4E_RaO\n.\n. Architecture is very similar - lambda. Pinot has a new component called\nminion which will remove the need to have an offline component but this is\nnot ready for production. There is no SPOF in Pinot. Use of Helix for\ncluster management is a big plus point for Pinot. It enables self\nserve scenarios such as create table, rebalance tables, tag nodes, create\ncustom topology etc. Almost all the operations can be done dynamically\nwithout needing to restart the servers. I haven't operated a Druid cluster,\nso I can't really comment on the cluster management aspects of Druid, apart\nfrom the fact that it needs an additional MySQL.\n\nData format\n\nDruid mandates inverted index for all columns whereas it's optional in\n   pinot and can be generated on demand when the query pattern changes. This\n   can impact the segment size drastically.\nDifferent encodings supported in Pinot - dictionary encoded, RLE for\n   sorted columns, no dictionary snappy compression. These can be configured\n   for each column.\nStar tree index is definitely a big differentiator - this basically\n   means you get Druid + Kylin in one system and you can choose the mode based\n   on your qps and latency requirements.\n\nQuery execution model is very different\nPinot has a planning phase and execution phase and has the concept of\noperator tree similar to how most DBs work. This means Pinot can do\noptimizations on a per query basis and base it on the metadata of the\nsegment. For e.g if there are filters on two columns - one of them has\ninverted index and the other does not. Irrespective of how the predicates\nappear in the query - Pinot will reorder the predicate evaluation\nappropriately. This is just an example, there are many other scenarios. In\npractice, we have seen blindly having inverted index on columns performs\nworse than having an inverted index on key columns and use scan based\nfilter for remaining columns.\nIn contrast, Druid has a constant plan - use an inverted index to get the\nmatching docs, scan the filtered docs and perform group by/aggregation.\nFeatures\n\nMost of the commonly used features are available in both Pinot and\n   Druid. I think Druid does have support for Theta Sketches and Hyperloglog\n   for distinct. Pinot as of now only supports HyperLogLog.\nGroup by along with top k result accuracy - by default we found Pinot\n   group by results are more accurate than Druid. In both systems, there is\n   some trimming done at node level (returning all results from each node will\n   be inefficient). But in  Druid, we found that it trims the result at\n   segment level as well. This might show up as Druid being a bit better for\n   some queries in terms of latency but the results can be highly inaccurate.\n\nDocumentation\n\nDruid definitely has better documentation than Pinot :-).\n\nHope this helps.\nNote: I haven't really looked deep into Druid code base nor have I operated\na Druid cluster, so some of the info I have provided might be outdated. If\nthere are any Druid users reading this, please feel free to add your\ncomments.\nthanks,\nKishore G\nOn Wed, Nov 15, 2017 at 8:08 AM, Arup Malakar notifications@github.com\nwrote:\n\nKishore, thanks for your comment. Fair point regarding the benchmarks, and\nthe slides are very helpful.\nIs it fair in assuming that druid and pinot covers the same use cases.\nApart from support for star tree index, are there any differences in\nphilosophy or tradeoffs made in pinot compared to druid?\nI think what I am asking is apart from perf difference for my use cases,\nare there anything else you think would be worth considering in the\nevaluation?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3#issuecomment-344641009, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7ZwcQeLVrRxvGWsOQI2ZVmubD9tNbks5s2wxcgaJpZM4E_RaO\n.\n. Yes, you can get the exact distinct count in Pinot.\nhttps://www.linkedin.com/me/profile-views/ is powered by Pinot and computes\nexact distinct count.\n\nOn Wed, Nov 15, 2017 at 10:06 AM, Maxime Beauchemin \nnotifications@github.com wrote:\n\n@kishoreg https://github.com/kishoreg I heard it may be possible to get\nnon-probabilistic distinct counts on the segmentation key in Pinot, is that\nthe case?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3#issuecomment-344678185, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z5oCW3wByhuINRXeXAPSbrAz1M9wks5s2ygTgaJpZM4E_RaO\n.\n. We support both modes but we don't capitalize on partitioned data as of now\nfor distinct operators. Let me explain -  We can ensure that segment with\nsame hash always gets assigned to the same node replica. The execution plan\nis the same for both cases although I see your point that the query could\nhave been completely evaluated within the server node and broker could have\nsummed up the numbers from each server. This should be straightforward to\nadd such an aggregation operator to compute distinct from partitioned data.\n\nOn Wed, Nov 15, 2017 at 1:59 PM Maxime Beauchemin notifications@github.com\nwrote:\n\nCan you explain what that execution plan looks like? Is it achieved with\nan additional \"partial shuffle\" or by having nodes taking on all of the\nsegments in their hash-space?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3#issuecomment-344742353, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z3Geepf-TUvGmbNR93Nx4f47YWUyks5s217IgaJpZM4E_RaO\n.\n. Pinot doesn't support explicit hints. We set the partitioning scheme in the\ntable config e.g Data is partitioned on userId. During execution, if Pinot\nsees a predicate on column userId such as userId=X, it automatically\nfilters out all other segments that don't belong to this partition. We\nstore the partition hash as part of each segment metadata. The broker\ncomputes the subset of segments to process and routes the query to nodes\nhosting these segments. These segments can be spread across the entire\ncluster or few nodes (X) depending on the segment assignment strategy.Note\nthat X can 1, in which case entire gets executed on 1 node.\n\nWe don't do per day shuffle yet. Feel free to start another thread to go\nover this in detail.\nOn Thu, Nov 16, 2017 at 9:31 AM, Maxime Beauchemin <notifications@github.com\n\nwrote:\nLet me clarify on my side, hoping to get a clearer understanding.\nSo say if my data is segmented by both day and userid, to facilitate both\nbatch loading (allowing the drop/reload segments for a set of days) and\nuserid to help with accurate distinct count.\nNow if I want to get non-probabilistic DAUs out of this, what does the\nquery (any SQL-hints?) and execution plan look like? Assuming I have say 32\nbuckets per day, does that mean each compute node will scan 32 segments and\nkeep tabs of each userid, or will there be some sort of per-day shuffle\nphase?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3#issuecomment-344998204, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z3-Y1joiqS6hzNzRS0fsHxNl2ka7ks5s3HFegaJpZM4E_RaO\n.\n. Adding to what Dhaval said, there  is a way to configure a column\nas the leading key. For example, if you have userData, userId can be the\nleading key. We create a different type of index (sorted index) for the\nleading keys and we have seen that this improves the performance\nsignificantly (especially when queries contain filters on this column)\n\nThanks for pointing out the missing documentation. We will add it.\nthanks,\nKishore G\nOn Thu, Jun 11, 2015 at 5:38 PM, Dhaval notifications@github.com wrote:\n\nhey @alvinhom https://github.com/alvinhom , pinot does create and use\ninverted index for dimensional filtering, we use roaring bitmap for\ninverted index compression. Using and creating Inverted index is\nconfigurable on a per column basis, sometimes simply sorting the date on a\ncolumn which is always filtered upon is good enough to achieve fast query\nresponse times, in which case we can avoid using inverted index to filter\non other columns, this helps us to server more data off of ram.\nHope that helps, Also the google groups should be up soon.\nRegards\nDhaval\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/7#issuecomment-111314929.\n. Hi,\n\nUnfortunately the numbers we have cannot be shared since they represent\nLinkedIn data. We are working on using tpch data and will update you once\nwe have that.\nYou will definitely need to keep the data in memory to get sub second\nresponse time. Assuming average speed of 40 to 50 million documents per\nsecond (note this also depends on the number of columns specified in the\nquery), you should be able to get this in 2 or 3 boxes for 1 billion\ndocuments (This depends on the number of columns and column type).\nIn most cases, these numbers depends on the data and query pattern. We\napply various optimization techniques depending on the use case. If you can\nprovide additional details such as schema, query pattern we can definitely\nhelp you come up with the right configuration.\nthanks,\nKishore G\nOn Sat, Sep 5, 2015 at 9:11 AM, makareth notifications@github.com wrote:\n\nAt this time, no Google search yields any information regarding the\nperformance of the product. Setting up a benchmark result page would be\ngreat indeed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/12#issuecomment-137971900.\n. The instructions provided should work for cluster mode as well. I think the\nproblem is that\nhttps://github.com/linkedin/pinot/blob/b565c3d1cbebc03d0c1e97750a19fb617344675b/pinot-tools/src/main/java/com/linkedin/pinot/tools/admin/command/StartControllerCommand.java\nexecute method that is hardcoding controllerHost to localhost.\n\nconf.setControllerHost(\"localhost\");\nchanging this to conf.setControllerHost(\nnetAddress.getLocalHost().getHostName()); should fix it. Can you give it a\ntry and let us know?. Feel free to submit a patch\nthanks,\nKishore G\nOn Wed, Jun 24, 2015 at 8:43 PM, Mayank Shrivastava \nnotifications@github.com wrote:\n\nAs mentioned in the pinot-admin wiki, pinot-admin currently works on local\nhost. Pinot Broker/Server/Controller should be started on local host using\npinot-admin. It will have cluster mode support in future. Hope this\nclarifies.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/13#issuecomment-115091847.\n. What happens if one of the servers crashes (the server process itself), I\nunderstand that the second server will consume 100% of the messages while\nthe second server is down (I can see that the broker query returns about\nhalf of the documets numbers in this case), but how can I add the second\nserver again (if at all) in order to restore the original setup ?\n\nThere are two scenarios,\n1. adding a new server\nIn this case, the new server will start handling 1/2 of the total msgs. I\nthink, there is a need to tag the new machine with the same name as the old\none. I know there is an api for this buts its probably not documented. (we\nwill provide a command to do this).\n.Bringing the failed server back up\nIn this case, the messages will again be distributed equally among the two\nnodes. There is no need to make any additional modifications to the tag as\nin previous case.\nIn general, you want to use have multiple replicas to handle failures.\nBroker: Have more than one broker will provide you fault tolerance. The\nrequest can be forwarded to any live broker.\nController: Simply start multiple controllers, there is leader election\namong the controllers and only one controller will manage the cluster. If\nthe leader fails, a new leader is elected and it starts managing the\ncluster.\nServer: Here when you create a resource, you specify the number of replicas\nneeded for each segment. Typically we use 3 replicas in our deployment. In\ncase of failure, broker automatically detects the failures and routes the\nqueries to live servers.\nHope this helps.\nThanks,\nKishore G\nOn Thu, Jun 25, 2015 at 4:02 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nCurrently, the realtime consumption in Pinot uses the high level consumer\nwhich leads to the behavior you're seeing.\nIf you want to create two servers that consume from Kafka, each of them\nshould get their own consumer group ID so that they each get all of the\ndata; since the realtime segment boundaries include offsets, all replicas\nof the realtime segments should contain the same data, so a server node\nthat crashes does not change the query results.\nThis is not ideal and it's on our roadmap to improve Kafka consumption.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/16#issuecomment-115424476.\n. Can you provide additional context such as you schema, sample record etc.\nCan you reproduce this easily? we can add some logging to get more info.\n\nthanks,\nKishore G\nOn Mon, Jun 29, 2015 at 8:18 PM, binlijin notifications@github.com wrote:\n\n2015/06/29 11:48:33.386 INFO\n[com.linkedin.pinot.core.data.manager.realtime.RealtimeSegmentDataManager]\n[] Trying to build segment!\n2015/06/29 11:48:33.394 INFO\n[com.linkedin.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl]\n[] Start building StatsCollector!\n2015/06/29 11:49:59.837 ERROR\n[com.linkedin.pinot.core.data.manager.realtime.RealtimeSegmentDataManager]\n[] Caught exception in the realtime indexing thread\njava.lang.IndexOutOfBoundsException\nat java.nio.Buffer.checkIndex(Buffer.java:538)\nat java.nio.DirectByteBuffer.getLong(DirectByteBuffer.java:766)\nat\ncom.linkedin.pinot.core.index.reader.impl.FixedByteWidthRowColDataFileReader.getLong(FixedByteWidthRowColDataFileReader.java:204)\nat\ncom.linkedin.pinot.core.index.readerwriter.impl.FixedByteSingleColumnSingleValueReaderWriter.getLong(FixedByteSingleColumnSingleValueReaderWriter.java:140)\nat\ncom.linkedin.pinot.core.realtime.impl.RealtimeSegmentImpl.getRawValueRowAt(RealtimeSegmentImpl.java:539)\nat\ncom.linkedin.pinot.core.realtime.converter.RealtimeSegmentRecordReader.next(RealtimeSegmentRecordReader.java:78)\nat\ncom.linkedin.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl.build(SegmentIndexCreationDriverImpl.java:105)\nat\ncom.linkedin.pinot.core.realtime.converter.RealtimeSegmentConverter.build(RealtimeSegmentConverter.java:88)\nat\ncom.linkedin.pinot.core.data.manager.realtime.RealtimeSegmentDataManager$2.run(RealtimeSegmentDataManager.java:153)\nat java.lang.Thread.run(Thread.java:744)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/22.\n. Can you come online on https://gitter.im/linkedin/pinot, I will provide you\nthe instructions to add additional logging.\n\nOn Mon, Jun 29, 2015 at 10:36 PM, binlijin notifications@github.com wrote:\n\nI can reproduce it easily, because when the data reach 5000000 then cause\ndump segment and the exception will throw.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/22#issuecomment-116974912.\n. Do you have real-time or only offline\nOn Jul 1, 2015 11:50 PM, \"dongyanfeng\" notifications@github.com wrote:\nQuery the data sometimes more sometimes less, more is correct\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/25#issuecomment-117933816.\n. hi,\n\ncan you hop on to gitter https://gitter.im/linkedin/pinot.\nOn Thu, Jul 2, 2015 at 1:03 AM, dongyanfeng notifications@github.com\nwrote:\n\nHas nothing to do with the restart the server node, apparently associated\nwith replicas\u3002\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/25#issuecomment-117951412.\n. yes. you can set the start time, end time explicitly while generating the\nsegments. It is a requirement for the segment names to be unique.\n\nOn Thu, Jul 2, 2015 at 10:07 AM, Joe notifications@github.com wrote:\n\nthe segments d1 generate seems to conflict with d2's\nd1's segments\n/user/pinot/pv-segments/20150629/kuaizhan-pvs_16615_16615_1.tar.gz\n/user/pinot/pv-segments/20150629/kuaizhan-pvs_16615_16615_2.tar.gz\n/user/pinot/pv-segments/20150629/kuaizhan-pvs_16615_16615_3.tar.gz\n.......\nd2's segments\n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16615_0.tar.gz\n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16615_1.tar.gz\n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16616_4.tar.gz\n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16616_16616_10.tar.gz\n......\nboth has\n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16615_1.tar.gz, the\n16615 is the field days_since_epoch?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/27#issuecomment-118094278.\n. Hi,\n\nCan you confirm that mvn install package -DskipTests command was\nsuccessful. Also can you list output of the following command.\ncd pinot-distribution/target/pinot-0.016-pkg;\nfind . -name *.jar\nOn Mon, Jul 20, 2015 at 12:50 AM, oferoh notifications@github.com wrote:\n\nAfter i run this script\ngit clone https://github.com/linkedin/pinot.git\ncd pinot\nmvn install package -DskipTests\ncd pinot-distribution/target/pinot-0.016-pkg\nchmod +x bin/*.sh\nbin/quick-start-offline.sh\nIm getting this error Error: Could not find or load main class\ncom.linkedin.pinot.tools.Quickstart\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/29.\n. That looks correct. Is this on Windows and you are using cygwin by any\nchance?\n\nAlso try running sh -x bin/quick-start-offline.sh, that might give me more\ninformation on how the classpath is set up\nthanks,\nKishore G\nOn Tue, Jul 21, 2015 at 9:34 PM, oferoh notifications@github.com wrote:\n\nThank you Kishoreg for helping\nas you can the package install correctly\n[image: image]\nhttps://cloud.githubusercontent.com/assets/11095042/8817935/e6668c22-3042-11e5-88dd-710c143f27f0.png\nhere is the output\n./lib/antlr-2.7.7.jar\n./lib/antlr-3.4.jar\n./lib/antlr-runtime-3.4.jar\n./lib/args4j-2.32.jar\n./lib/async-http-client-1.9.22.jar\n./lib/avro-1.7.6.jar\n./lib/commons-beanutils-1.8.3.jar\n./lib/commons-beanutils-core-1.8.0.jar\n./lib/commons-cli-1.2.jar\n./lib/commons-codec-1.6.jar\n./lib/commons-collections-3.2.1.jar\n./lib/commons-compress-1.4.1.jar\n./lib/commons-configuration-1.6.jar\n./lib/commons-csv-1.0.jar\n./lib/commons-digester-1.8.jar\n./lib/commons-fileupload-1.2.2.jar\n./lib/commons-httpclient-3.1.jar\n./lib/commons-io-2.1.jar\n./lib/commons-lang-2.6.jar\n./lib/commons-lang3-3.1.jar\n./lib/commons-logging-1.1.1.jar\n./lib/commons-math-2.1.jar\n./lib/commons-validator-1.4.0.jar\n./lib/fastjson-1.1.24.jar\n./lib/fastutil-6.5.9.jar\n./lib/guava-11.0.2.jar\n./lib/helix-core-0.6.4.jar\n./lib/httpclient-4.1.3.jar\n./lib/httpcore-4.2.4.jar\n./lib/jackson-annotations-2.2.3.jar\n./lib/jackson-core-2.2.3.jar\n./lib/jackson-core-asl-1.8.8.jar\n./lib/jackson-databind-2.2.3.jar\n./lib/jackson-dataformat-csv-2.2.3.jar\n./lib/jackson-dataformat-smile-2.2.3.jar\n./lib/jackson-dataformat-xml-2.2.3.jar\n./lib/jackson-dataformat-yaml-2.2.3.jar\n./lib/jackson-mapper-asl-1.8.8.jar\n./lib/jackson-module-jaxb-annotations-2.2.3.jar\n./lib/JavaFastPFOR-0.0.13.jar\n./lib/javax.servlet-3.0.0.v201112011016.jar\n./lib/javax.servlet-api-3.0.1.jar\n./lib/jetty-ajp-8.1.14.v20131031.jar\n./lib/jetty-continuation-8.1.8.v20121106.jar\n./lib/jetty-http-8.1.8.v20121106.jar\n./lib/jetty-io-8.1.14.v20131031.jar\n./lib/jetty-security-8.1.8.v20121106.jar\n./lib/jetty-server-8.1.8.v20121106.jar\n./lib/jetty-servlet-8.1.8.v20121106.jar\n./lib/jetty-util-8.1.14.v20131031.jar\n./lib/jetty-webapp-8.1.8.v20121106.jar\n./lib/jetty-xml-8.1.8.v20121106.jar\n./lib/jline-0.9.94.jar\n./lib/joda-time-2.0.jar\n./lib/jopt-simple-3.2.jar\n./lib/json-20080701.jar\n./lib/jsr305-1.3.9.jar\n./lib/kafka-clients-0.8.2.0.jar\n./lib/kafka_2.10-0.8.2.0.jar\n./lib/libthrift-0.9.1.jar\n./lib/log4j-1.2.17.jar\n./lib/lz4-1.2.0.jar\n./lib/metrics-core-2.2.0.jar\n./lib/netty-3.10.3.Final.jar\n./lib/netty-all-4.0.27.Final.jar\n./lib/org.restlet-2.2.1.jar\n./lib/org.restlet.ext.fileupload-2.2.1.jar\n./lib/org.restlet.ext.jackson-2.2.1.jar\n./lib/org.restlet.ext.jetty-2.2.1.jar\n./lib/paranamer-2.3.jar\n./lib/pinot-api-0.016.jar\n./lib/pinot-broker-0.016.jar\n./lib/pinot-common-0.016.jar\n./lib/pinot-controller-0.016.jar\n./lib/pinot-core-0.016.jar\n./lib/pinot-hadoop-0.016.jar\n./lib/pinot-perf-0.016.jar\n./lib/pinot-server-0.016.jar\n./lib/pinot-tools-0.016.jar\n./lib/pinot-transport-0.016.jar\n./lib/RoaringBitmap-0.4.9.jar\n./lib/scala-library-2.10.4.jar\n./lib/slf4j-api-1.7.7.jar\n./lib/slf4j-log4j12-1.7.7.jar\n./lib/snakeyaml-1.12.jar\n./lib/snappy-java-1.0.5.jar\n./lib/ST4-4.0.4.jar\n./lib/stax-api-1.0-2.jar\n./lib/stax2-api-3.1.3.jar\n./lib/stringtemplate-3.2.1.jar\n./lib/swagger-ui-2.1.8-M1.jar\n./lib/tyrus-standalone-client-1.5.jar\n./lib/woodstox-core-asl-4.2.0.jar\n./lib/xz-1.0.jar\n./lib/zkclient-0.1.jar\n./lib/zkclient-0.3.jar\n./lib/zookeeper-3.3.4.jar\n./repo/antlr/antlr/2.7.7/antlr-2.7.7.jar\n./repo/args4j/args4j/2.32/args4j-2.32.jar\n./repo/com/101tec/zkclient/0.3/zkclient-0.3.jar\n./repo/com/alibaba/fastjson/1.1.24/fastjson-1.1.24.jar\n./repo/com/fasterxml/jackson/core/jackson-annotations/2.2.3/jackson-annotations-2.2.3.jar\n./repo/com/fasterxml/jackson/core/jackson-core/2.2.3/jackson-core-2.2.3.jar\n./repo/com/fasterxml/jackson/core/jackson-databind/2.2.3/jackson-databind-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.2.3/jackson-dataformat-csv-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.2.3/jackson-dataformat-smile-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.2.3/jackson-dataformat-xml-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.2.3/jackson-dataformat-yaml-2.2.3.jar\n./repo/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.2.3/jackson-module-jaxb-annotations-2.2.3.jar\n./repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar\n./repo/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\n./repo/com/google/guava/guava/11.0.2/guava-11.0.2.jar\n./repo/com/linkedin/pinot/pinot-broker/0.016/pinot-broker-0.016.jar\n./repo/com/linkedin/pinot/pinot-common/0.016/pinot-common-0.016.jar\n./repo/com/linkedin/pinot/pinot-controller/0.016/pinot-controller-0.016.jar\n./repo/com/linkedin/pinot/pinot-core/0.016/pinot-core-0.016.jar\n./repo/com/linkedin/pinot/pinot-server/0.016/pinot-server-0.016.jar\n./repo/com/linkedin/pinot/pinot-tools/0.016/pinot-tools-0.016.jar\n./repo/com/linkedin/pinot/pinot-transport/0.016/pinot-transport-0.016.jar\n./repo/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar\n./repo/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar\n./repo/commons-beanutils/commons-beanutils/1.8.3/commons-beanutils-1.8.3.jar\n./repo/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar\n./repo/commons-cli/commons-cli/1.2/commons-cli-1.2.jar\n./repo/commons-codec/commons-codec/1.6/commons-codec-1.6.jar\n./repo/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar\n./repo/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar\n./repo/commons-digester/commons-digester/1.8/commons-digester-1.8.jar\n./repo/commons-fileupload/commons-fileupload/1.2.2/commons-fileupload-1.2.2.jar\n./repo/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar\n./repo/commons-io/commons-io/2.1/commons-io-2.1.jar\n./repo/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\n./repo/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar\n./repo/commons-validator/commons-validator/1.4.0/commons-validator-1.4.0.jar\n./repo/io/netty/netty-all/4.0.27.Final/netty-all-4.0.27.Final.jar\n./repo/it/unimi/dsi/fastutil/6.5.9/fastutil-6.5.9.jar\n./repo/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar\n./repo/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar\n./repo/jline/jline/0.9.94/jline-0.9.94.jar\n./repo/joda-time/joda-time/2.0/joda-time-2.0.jar\n./repo/log4j/log4j/1.2.17/log4j-1.2.17.jar\n./repo/me/lemire/integercompression/JavaFastPFOR/0.0.13/JavaFastPFOR-0.0.13.jar\n./repo/net/jpountz/lz4/lz4/1.2.0/lz4-1.2.0.jar\n./repo/net/sf/jopt-simple/jopt-simple/3.2/jopt-simple-3.2.jar\n./repo/org/antlr/antlr/3.4/antlr-3.4.jar\n./repo/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar\n./repo/org/antlr/ST4/4.0.4/ST4-4.0.4.jar\n./repo/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar\n./repo/org/apache/avro/avro/1.7.6/avro-1.7.6.jar\n./repo/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar\n./repo/org/apache/commons/commons-csv/1.0/commons-csv-1.0.jar\n./repo/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar\n./repo/org/apache/commons/commons-math/2.1/commons-math-2.1.jar\n./repo/org/apache/helix/helix-core/0.6.4/helix-core-0.6.4.jar\n./repo/org/apache/httpcomponents/httpclient/4.1.3/httpclient-4.1.3.jar\n./repo/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar\n./repo/org/apache/kafka/kafka-clients/0.8.2.0/kafka-clients-0.8.2.0.jar\n./repo/org/apache/kafka/kafka_2.10/0.8.2.0/kafka_2.10-0.8.2.0.jar\n./repo/org/apache/thrift/libthrift/0.9.1/libthrift-0.9.1.jar\n./repo/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar\n./repo/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar\n./repo/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar\n./repo/org/codehaus/woodstox/stax2-api/3.1.3/stax2-api-3.1.3.jar\n./repo/org/codehaus/woodstox/woodstox-core-asl/4.2.0/woodstox-core-asl-4.2.0.jar\n./repo/org/eclipse/jetty/jetty-ajp/8.1.14.v20131031/jetty-ajp-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-continuation/8.1.14.v20131031/jetty-continuation-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-http/8.1.14.v20131031/jetty-http-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-io/8.1.14.v20131031/jetty-io-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-security/8.1.8.v20121106/jetty-security-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-server/8.1.8.v20121106/jetty-server-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-servlet/8.1.8.v20121106/jetty-servlet-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-util/8.1.14.v20131031/jetty-util-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-webapp/8.1.8.v20121106/jetty-webapp-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-xml/8.1.8.v20121106/jetty-xml-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar\n./repo/org/glassfish/tyrus/bundles/tyrus-standalone-client/1.5/tyrus-standalone-client-1.5.jar\n./repo/org/json/json/20080701/json-20080701.jar\n./repo/org/restlet/jee/org.restlet/2.2.1/org.restlet-2.2.1.jar\n./repo/org/restlet/jee/org.restlet.ext.fileupload/2.2.1/org.restlet.ext.fileupload-2.2.1.jar\n./repo/org/restlet/jee/org.restlet.ext.jackson/2.2.1/org.restlet.ext.jackson-2.2.1.jar\n./repo/org/restlet/jse/org.restlet/2.2.1/org.restlet-2.2.1.jar\n./repo/org/restlet/jse/org.restlet.ext.jetty/2.2.1/org.restlet.ext.jetty-2.2.1.jar\n./repo/org/roaringbitmap/RoaringBitmap/0.4.9/RoaringBitmap-0.4.9.jar\n./repo/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar\n./repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar\n./repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar\n./repo/org/tukaani/xz/1.0/xz-1.0.jar\n./repo/org/webjars/swagger-ui/2.1.8-M1/swagger-ui-2.1.8-M1.jar\n./repo/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar\n./repo/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/29#issuecomment-123560875.\n. Can you IM us at https://gitter.im/linkedin/pinot\n\nOn Tue, Jul 21, 2015 at 11:25 PM, oferoh notifications@github.com wrote:\n\nDear Kishore\nYes im using windows with gitbash to run the command can you suggest\notherwise\nI tried to run the command the you give me with this tool\nhttp://sourceforge.net/projects/unxutils/\nand i did get this output\n[image: image]\nhttps://cloud.githubusercontent.com/assets/11095042/8819266/6773fb1e-3053-11e5-8517-fdee4e21421d.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/29#issuecomment-123575946.\n. Perfect.\nOn Jul 22, 2015 12:24 AM, \"oferoh\" notifications@github.com wrote:\nThank you very much\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/29#issuecomment-123589069.\n. Is this real time only?.  Ping me on https://gitter.im/linkedin/pinot when\nyou get a chance\n\nOn Tue, Jul 21, 2015 at 4:34 PM, Joe Betz notifications@github.com wrote:\n\nJust hit the below NPE, I believe it was triggered by this query:\nSELECT COUNT(timestamp) FROM spans WHERE timestamp BETWEEN 1435708800 AND 1437519830 GROUP BY toServiceName\njava.lang.NullPointerException\n    at com.linkedin.pinot.core.operator.MCombineOperator.trimToSize(MCombineOperator.java:257)\n    at com.linkedin.pinot.core.operator.MCombineOperator.nextBlock(MCombineOperator.java:246)\n    at com.linkedin.pinot.core.operator.UResultOperator.nextBlock(UResultOperator.java:52)\n    at com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:58)\n    at com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:133)\n    at com.linkedin.pinot.server.request.SimpleRequestHandler.processRequest(SimpleRequestHandler.java:81)\n    at com.linkedin.pinot.transport.netty.NettyServer$NettyChannelInboundHandler.channelRead(NettyServer.java:218)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)\n    at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:242)\n    at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:339)\n    at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:324)\n    at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:847)\n    at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:511)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:468)\n    at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:382)\n    at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:354)\n    at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:111)\n    at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:137)\n    at java.lang.Thread.run(Thread.java:745)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/30.\n. Thanks Joe. Can you list the contents of index directory on each of the\nservers. In one of your earlier messages, you mentioned there were few\ncrashes. Did you clean up index directory before restarting?\n\nIf you haven't specified the data dir during start up, it should be under\n/tmp/pinotServerData.\nthanks,\nKishore G\nOn Aug 6, 2015 11:21 AM, \"Joe Betz\" notifications@github.com wrote:\n\nYes, real time only.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/30#issuecomment-128465032.\n. These class are auto generated. Did you run mvn install -DskipTests?\n\nthanks,\nKishore G\nOn Sun, Aug 2, 2015 at 4:10 AM, \u5b59\u4fee\u9e4f notifications@github.com wrote:\n\nWhen I downloaded the latest pinot code, two classes are missing, could\nyou please solve the problem?\nimport com.linkedin.pinot.pql.parsers.PQLLexer;\nimport com.linkedin.pinot.pql.parsers.PQLParser;\npublic class PQLCompiler extends AbstractCompiler {\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/35.\n. Thanks. If you don't mind, can you submit a patch.\n\nOn Fri, Aug 7, 2015 at 3:37 AM, dongyanfeng notifications@github.com\nwrote:\n\nSegmentOnlineOfflineStateModelFactory.class\n,method:onBecomeOfflineFromOnline has a bug.\nline 279 : INSTANCE_DATA_MANAGER.removeSegment(segmentId);\nin IndexSegmentImpl.class.\nline 116: indexContainerMap.get(column).getInvertedIndex().close();\nthrows NullPointException.\nindexContainerMap.get(column) return value is null.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/39.\n. Hi Johnny,\n\nThanks for the patch. Can you please submit a patch that applies cleanly. There are two many conflicts. It also makes it easier for us to review the patch.\nthanks,\nKishore G\n. Hi Joe,\nI dont think Pinot supports that inbuilt udf. But it should be easy to add\nthose. Let me check if our new antlr grammar can support such syntax. Is\nthat the only way Graphana can query data sources?\nOn Tue, Sep 8, 2015 at 8:41 PM, Joe Betz notifications@github.com wrote:\n\nI've been working on adding Pinot as a datasource to Grafana, a\nvisualization tool for time series charts.\nI'm looking for the the best way to query Pinot.\nIn InfluxDB's query language, grouping results into time buckets is\nusually done like:\nSELECT MEAN(value) FROM measure WHERE time > (now() - 1h) GROUP BY time(5m)\nWhere the result set would look something like\n{\n  \"columns\": [\"value\", \"time\"],\n  \"results\": [\n    [40,1441756680100],\n    [45,1441756680200],\n    [43,1441756680300],\n    ...\n  ]\n}\nAnd can easily be plotted.\nDoes Pinot support this sort of query? I've been trying a few group by\nqueries but have been unable to formulate one that provides this sort of\ngrouped response. If this is not yet supported, would it be possible to add\nsupport?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/48.\n. https://github.com/linkedin/pinot/pull/899\n\nhttps://github.com/linkedin/pinot/pull/648\nBoth are pending review. Once these two PR's get in, there is very little\nwork needed to support UDF's\nOn Wed, Dec 14, 2016 at 4:37 AM, archmind notifications@github.com wrote:\n\nAny update on this feature?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/48#issuecomment-267023508, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z0P0tkcqBL8jfnsxtUI9jZDZ4Zfkks5rH-MLgaJpZM4F5_Ku\n.\n. You are right. Using Thread.currentThread.join should help.\n\nOn Wed, Sep 9, 2015 at 5:09 PM, viktoraseev notifications@github.com\nwrote:\n\nHello,\nJust found a strange issue - quickstart consumes 100% of one core. I'm\nusing it for local development/testing on mac pro. As result, fun is always\nrunning, which is uncomfortable.\nAfter quick investigations found that code:\n/pinot-tools/src/main/java/com/linkedin/pinot/tools/Quickstart.java\nlong st = System.currentTimeMillis();\n    while (true) {\n      if (System.currentTimeMillis() - st >= (60 * 60) * 1000) {\n        break;\n      }\n    }\nIs it possible to add Thread.yeld() or Thread.sleep() here to reduce\nburden?\nThank you!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/49.\n. That should be ok. We can add a time that wakes up after 1 hour and exits.\n\nOn Wed, Sep 9, 2015 at 11:36 PM, viktoraseev notifications@github.com\nwrote:\n\nHmm, I see some logic at this code, that runs quickstart for exactly one\nhour. Thread.currentThread.join() will deadlock current thread, so that\ncode will never run. Is that ok?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/49#issuecomment-139130496.\n. Mayank, whats the issue?\n\nOn Tue, Sep 22, 2015 at 11:32 AM, Mayank Shrivastava \nnotifications@github.com wrote:\n\nI am able to reproduce the problem at my end. We will look at this and\nupdate with a fix.\nThanks,\nMayank\nOn Mon, Sep 21, 2015 at 7:40 PM, izzizz notifications@github.com wrote:\n\n\nShowClusterInfo\n\n!!com.linkedin.pinot.tools.admin.command.ShowClusterInfoCommand$ClusterInfo\nbrokerInfoList:\n- name: Broker_172.17.2.238_8099\n  state: ONLINE\n  tags: [DefaultTenant_BROKER]\n  clusterName: TestPinot\n  controllerInfo: {leaderName: 172.17.2.238_9000}\n  serverInfoList:\n- name: Server_172.17.2.238_8098\n  state: ONLINE\n  tags: [DefaultTenant_OFFLINE, DefaultTenant_REALTIME]\n  tableInfoList:\n- segmentInfoList:\n- name:\n  flights_REALTIME__Server_172.17.2.238_8098__flights_REALTIME_1442802699313_0__0__1442802699482\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  tableName: flights_REALTIME\n  tag: flights_REALTIME\n- segmentInfoList:\n- name: flights_10227_10591_13\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_10592_10956_14\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_10957_11322_15\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_11323_11687_16\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_11688_12052_17\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_12053_12417_18\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_12418_12783_19\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_12784_13148_20\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_13149_13513_21\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_13514_13878_22\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_13879_14244_23\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_14245_14609_24\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_14610_14974_25\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_14975_15339_26\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_15340_15705_27\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_15706_16070_28\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_16071_16435_29\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_6481_6512_0\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_6513_6542_1\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_6543_6573_2\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_6574_6939_3\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_6940_7304_4\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_7305_7669_5\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_7670_8034_6\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_8035_8400_7\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_8401_8765_8\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_8766_9130_9\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_9131_9495_10\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_9496_9861_11\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n- name: flights_9862_10226_12\n  segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  tableName: flights_OFFLINE\n  tag: flights_OFFLINE\n- As to data and scripts, I followed the tutorial How To Use Pinot\n  https://github.com/linkedin/pinot/wiki/How-To-Use-Pinot, used the\n  dataset https://github.com/linkedin/pinot/wiki/flights.tar.gz in\n  it(as well as the table schema), scripts were described in my first post.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50#issuecomment-142164119.\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50#issuecomment-142374753.\n. This is a regression,we will push the fix shortly.\nOn Sep 18, 2015 3:18 AM, \"izzizz\" notifications@github.com wrote:\nCaught exception while reducing results\njava.lang.UnsupportedOperationException\nat java.util.AbstractList.remove(AbstractList.java:161)\nat java.util.AbstractList$Itr.remove(AbstractList.java:374)\nat java.util.AbstractList.removeRange(AbstractList.java:571)\nat java.util.AbstractList.clear(AbstractList.java:234)\nat\ncom.linkedin.pinot.core.query.selection.SelectionOperatorUtils.getSelectionColumns(SelectionOperatorUtils.java:99)\nat\ncom.linkedin.pinot.core.query.selection.SelectionOperatorUtils.render(SelectionOperatorUtils.java:156)\nat\ncom.linkedin.pinot.core.query.reduce.DefaultReduceService.reduceOnSelectionResults(DefaultReduceService.java:201)\nat\ncom.linkedin.pinot.core.query.reduce.DefaultReduceService.reduceOnDataTable(DefaultReduceService.java:157)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler$1.call(BrokerRequestHandler.java:305)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler$1.call(BrokerRequestHandler.java:302)\nat\ncom.linkedin.pinot.common.metrics.AbstractMetrics.timePhase(AbstractMetrics.java:103)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler.getDataTableFromBrokerRequest(BrokerRequestHandler.java:302)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler.processSingleTableBrokerRequest(BrokerRequestHandler.java:157)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler.processBrokerRequest(BrokerRequestHandler.java:123)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet$1.call(PinotClientRequestServlet.java:141)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet$1.call(PinotClientRequestServlet.java:136)\nat\ncom.linkedin.pinot.common.metrics.AbstractMetrics.timePhase(AbstractMetrics.java:103)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet.handleRequest(PinotClientRequestServlet.java:135)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet.doPost(PinotClientRequestServlet.java:84)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:688)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:770)\nat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)\nat\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\nat\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\nat\norg.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)\nat\norg.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\nat\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)\nat\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)\nat\norg.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\nat\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)\nat\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\nat\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\nat org.eclipse.jetty.server.Server.handle(Server.java:365)\nat\norg.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)\nat\norg.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)\nat\norg.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)\nat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\nat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\nat\norg.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\nat\norg.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)\nat\norg.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\nat\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\nat\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\nat java.lang.Thread.run(Thread.java:745)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/51.\n. Its fixed. Please pull the latest\n\nOn Fri, Sep 18, 2015 at 8:13 AM, kishore g g.kishore@gmail.com wrote:\n\nThis is a regression,we will push the fix shortly.\nOn Sep 18, 2015 3:18 AM, \"izzizz\" notifications@github.com wrote:\n\nCaught exception while reducing results\njava.lang.UnsupportedOperationException\nat java.util.AbstractList.remove(AbstractList.java:161)\nat java.util.AbstractList$Itr.remove(AbstractList.java:374)\nat java.util.AbstractList.removeRange(AbstractList.java:571)\nat java.util.AbstractList.clear(AbstractList.java:234)\nat\ncom.linkedin.pinot.core.query.selection.SelectionOperatorUtils.getSelectionColumns(SelectionOperatorUtils.java:99)\nat\ncom.linkedin.pinot.core.query.selection.SelectionOperatorUtils.render(SelectionOperatorUtils.java:156)\nat\ncom.linkedin.pinot.core.query.reduce.DefaultReduceService.reduceOnSelectionResults(DefaultReduceService.java:201)\nat\ncom.linkedin.pinot.core.query.reduce.DefaultReduceService.reduceOnDataTable(DefaultReduceService.java:157)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler$1.call(BrokerRequestHandler.java:305)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler$1.call(BrokerRequestHandler.java:302)\nat\ncom.linkedin.pinot.common.metrics.AbstractMetrics.timePhase(AbstractMetrics.java:103)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler.getDataTableFromBrokerRequest(BrokerRequestHandler.java:302)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler.processSingleTableBrokerRequest(BrokerRequestHandler.java:157)\nat\ncom.linkedin.pinot.requestHandler.BrokerRequestHandler.processBrokerRequest(BrokerRequestHandler.java:123)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet$1.call(PinotClientRequestServlet.java:141)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet$1.call(PinotClientRequestServlet.java:136)\nat\ncom.linkedin.pinot.common.metrics.AbstractMetrics.timePhase(AbstractMetrics.java:103)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet.handleRequest(PinotClientRequestServlet.java:135)\nat\ncom.linkedin.pinot.broker.servlet.PinotClientRequestServlet.doPost(PinotClientRequestServlet.java:84)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:688)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:770)\nat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:669)\nat\norg.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:455)\nat\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:137)\nat\norg.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:560)\nat\norg.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:231)\nat\norg.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1072)\nat\norg.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:382)\nat\norg.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:193)\nat\norg.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1006)\nat\norg.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:135)\nat\norg.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:116)\nat org.eclipse.jetty.server.Server.handle(Server.java:365)\nat\norg.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:485)\nat\norg.eclipse.jetty.server.AbstractHttpConnection.content(AbstractHttpConnection.java:937)\nat\norg.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.content(AbstractHttpConnection.java:998)\nat org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:865)\nat org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:240)\nat\norg.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:82)\nat\norg.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:667)\nat\norg.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:52)\nat\norg.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)\nat\norg.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)\nat java.lang.Thread.run(Thread.java:745)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/51.\n. I think this is fixed, please reopen if not\n. Having is not yet supported. Hopefully we can get to this asap\n\n\nOn Mon, Jul 11, 2016 at 10:25 PM, taotaojs notifications@github.com wrote:\n\nHi, Does Pinot support the Having? We need the feature!\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/53#issuecomment-231940645, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AAz7Z74OODa1tLCVxxZHNZld7HdsoGQHks5qUyVlgaJpZM4GGmN2\n.\n. Hi Flowyi,\n\nThe first two should be available by end of this year. Having clause is\nsomething we are not sure if/when we would add.\nthanks\nKishore\nOn Tue, Oct 27, 2015 at 7:48 PM, Flowyi notifications@github.com wrote:\n\nBesides, when should I expect the next stable release, and the new\nfeatures it will contains?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/58#issuecomment-151705985.\n. LGTM. will apply the patch. Thanks\n. Found the issue, we fail to compare the second column if the first column is same. https://github.com/linkedin/pinot/blob/bcf6dc5f34dfd13c1a2e2b1ae5750b4b07b9f254/pinot-core/src/main/java/com/linkedin/pinot/core/query/selection/SelectionOperatorService.java#L285\n\nFix is to not return if the compareTo returns 0 within the for loop\n. what do you intend to pass in the properties? Can you describe the scenario where existing code does not work\n. This is definitely useful. Its amazing you were able to figure out all this without any documentation.\nYou can set the timeout in the dashboards config.yml   by specifying idleTimeout. See http://www.dropwizard.io/0.7.0/docs/manual/configuration.html#connectors\nI don't see the error you are seeing in heatmap. Let me see if there is something obvious that might happen for sparse tables. \n. closing since its already applied\n. LGTM. Thanks for the patch.\n. Hi Greg,\nThis is good idea and something that has been pending from our side. We\nwill get this done over the holidays.\nthanks,\nKishore G\nOn Fri, Dec 11, 2015 at 2:42 PM, Greg Brandt notifications@github.com\nwrote:\n\nIt would be great to switch to GitHub PR-based development and review as\nopposed to pushing from internal LinkedIn branches.\nThis will help expand the community around Pinot and make it a first-class\npiece of open source software.\nCurrently Druid does a much better job of engaging the community, and\nPinot will not be able to compete under its current model.\nThis will also allow key Pinot engineers (@dhaval2025\nhttps://github.com/dhaval2025, @fx19880617\nhttps://github.com/fx19880617) to maintain a higher level of engagement\nif they can.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/71.\n. Good point. We use appassembler to auto-generate our start scripts. We can probably create a  big jar and use that to launch commands. Let me know if you can submit a patch \n. Actually appassembler has the option to use wild card. We can configure this plugin to set useWildcardClassPath=true  http://www.mojohaus.org/appassembler/appassembler-maven-plugin/assemble-mojo.html\n\nMind giving it a try and see if it works for you?\n. Using0.3 should be fine\nOn Jan 3, 2016 7:26 PM, \"xuyang2\" notifications@github.com wrote:\n\n@kishoreg https://github.com/kishoreg Thanks for reply\nFound two dependency conflicts when using flat repo.\n// same filename: org.restlet-2.2.1.jar\npinot-controller -> org.restlet.jse:org.restlet:2.2.1\npinot-controller -> org.restlet.jee:org.restlet.ext.jackson -> org.restlet.jee:org.restlet:2.2.1\n// api not compatible\npinot-common -> org.apache.kafka:kafka_2.10:0.8.2.0 -> com.101tec:zkclient:0.3\npinot-common -> org.apache.helix:helix-core:0.6.5 -> com.github.sgroschupf:zkclient:0.1\nI think the first one is easy to fix. Just remove\norg.restlet.jse:org.restlet:2.2.1 from pinot-controller's dependencies.\nNot sure how to deal with the zkclient conflict.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/75#issuecomment-168571793.\n. We don't generate index on any column by default. Can you upload the data set you generated. \n. we dont do that by default. In most cases having  index on all columns results is not needed  but I agree having a feature  that can generate index on all columns by default can be helpful. Let me create an issue.\n. Thanks, do you have a patch?. \n. LGTM. Merging\n. Merged\n. does this mean we will not allow posting payload along with the push call. What do you think about supporting both? Ability to send segment data or a url to download it from.\n. If we create broker resource in Auto mode, we can probably rely on Helix to\nachieve this functionality.\n\nOn Wed, Jan 27, 2016 at 11:04 AM, Xiang Fu notifications@github.com wrote:\n\nI assign 4 boxes as broker(defaultTenant), then add a table.\nThen I add 4 more boxes to the same tenants.\nSince the new 4 boxes are added as the same tenant name with old 4 boxes,\nso I assume new brokers should be added to the brokerResources idealstates,\nbut they are not.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/82.\n. Thanks. I can enable travis on github.\n. can you update this PR, would like to apply it\n. Awesome thanks for doing this. Do the test cases pass?\n. I applied this as part of another RB.\n. We have something equivalent called star tree index. This can be enabled\nwhile generating the segment by setting -enableStarTreeIndex=true\n\nBy default, it will create roll up for all dimensions. Note: this creates\nroll up only if required, which can be controlled by setting maxLeafRecords.\nTry it out and let us know. We will provide detailed instructions on a\ngithub page today.\nOn Thu, Mar 17, 2016 at 7:53 PM, superwood notifications@github.com wrote:\n\nFor performance considerations \uff0c Can I create \"roll up\" table for query?\nThe big table A have some dimensions ,\ndimension1 dimension2 dimension3 dimensions4 ..... metrics\ndimension1 dimension2 dimension3 dimensions4 ..... metrics\nAnd the frequent query \"select sum(metrics) from A where dimension1= and\ndimension2= \" will scan all the table for sum metrics.\nif there is a \"roll up \" table for A name A1:\ndimension1 dimension2 metrics\ndimension1 dimension2 metrics\nThe query \"select sum(metrics) from A where dimension1= and dimension2= \"\nwill search data from A1 which is aggregated from A.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/87\n. we cut releases directly from master branch.\n\nOn Mon, Mar 21, 2016 at 8:46 AM, superwood notifications@github.com wrote:\n\nwhich is the latest stable release version? The master ? The v0.0.17?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/90\n. we should close the propertystore and helixadmin else zk connection will be pending\n. I can do that change while applying the PR\n. If we change the segment upload command to take in a download url, this should just work?. Note controller will still have to download the segment to look at the metadata but it can download it locally and delete it after assigning the segments to servers\n. we should strive to keep the logic on the servers as it is. All the heavy lifting needs to be done by the controller. I like the idea of supporting multiple types of pushes.\n. Is it possible to check if the old session is still active, similar to what Helix does?. For e.g. if Helix sees an live instance ephemeral node, it waits for 30 seconds before retrying.\n. other changes look good to me. Did you address subbu's comment\n. LGTM.\n. LGTM\n. LGTM. Subbu, I am merging this. I am assuming this should not interfere with incrementing/decrementing read/write locks\n. Can you run pinot-admin.sh showClusterInfo\nOn Apr 5, 2016 11:08 PM, \"ChenJianJunCJJ\" notifications@github.com wrote:\nThe whole cluster(zookeeper, kafka, pinot broker, pinot server, pinot\ncontroller) can be start.\n\"netstat -npl|grep java \"shows that port:2191,2123,19092,7000,8000,9000\nare open.\nPinot broker return \"null\", when i send a query.\n{\n    \"traceInfo\": {},\n    \"numDocsScanned\": 0,\n    \"aggregationResults\": [],\n    \"timeUsedMs\": 0,\n    \"segmentStatistics\": [],\n    \"exceptions\": [],\n    \"totalDocs\": 0\n}\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/100\n. There should be only one zookeeper started at 2123. Can you print the\noutput of ./quick-start-realtime.sh.\n\nOn Wed, Apr 6, 2016 at 1:43 AM, ChenJianJunCJJ notifications@github.com\nwrote:\n\nI find two zookeeper started. The ones address is \"localhost:2191\",\nanothers \"localhost:2123\".\nKafka start in \"localhost:2191\", Pinot cluster start in\n\"localhost:2123\".It sames Kafka and Pinot cluster not in the same\nzookeeper.It is that OK?\n`\n_zookeeperInstance = ZkStarter.startLocalZkServer();// \"localhost:2191\"\nfinal KafkaServerStartable kafkaStarter =\n    KafkaStarterUtils.startServer(KafkaStarterUtils.DEFAULT_KAFKA_PORT, KafkaStarterUtils.DEFAULT_BROKER_ID,\n        KafkaStarterUtils.DEFAULT_ZK_STR, KafkaStarterUtils.getDefaultKafkaConfiguration());\n`\nbut\npublic void startAll() throws Exception {\nStartZookeeper();//\"localhost:2123\"\nStartController();\nStartBroker();\nStartServer();\n}\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/100#issuecomment-206223221\n. This was already fixed, just updated github\n\nOn Wed, Apr 13, 2016 at 11:22 AM, Xiang Fu notifications@github.com wrote:\n\n\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/linkedin/pinot/pull/102\nCommit Summary\n- Adding license header for MapBasedPairResultHolder\nFile Changes\n- M\n  pinot-core/src/main/java/com/linkedin/pinot/core/operator/groupby/MapBasedPairResultHolder.java\n  https://github.com/linkedin/pinot/pull/102/files#diff-0 (15)\nPatch Links:\n- https://github.com/linkedin/pinot/pull/102.patch\n- https://github.com/linkedin/pinot/pull/102.diff\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/pull/102\n. whats the partitionId here? is this kafka partitionId?\n. LGTM\n. Can you add instructions on how to configure various segment fetchers. You can add it to this PR and/or on a separate github page. \n. Merged, travis failures are because of another issue that is already fixed in another commit.\n. How do you plan to use this interface. I am not sure the interface is clear. Why does it take Object?. Should we use DateTime object instead?\n. convertor looks good but few things are missing. This conversion should be applicable to both realtime and offline. We added transformer to transform data types. We should add this logic to the same place.\nI am thinking if its better to templatize the converter Converter. But this can be done in another PR.\n. Pinot does not support pagination for aggregation/group\n\nOn Tue, Apr 26, 2016 at 3:07 AM, debug529 notifications@github.com wrote:\n\n@fx19880617 https://github.com/fx19880617 thanks! how about the paging\nwhich contains group by condition?\n/Top 5 run scorers of the year 2000/\nselect sum('runs') from baseballStats where yearID=2000 group by\nplayerName top 5 limit 0\nit returned top 5 records, Bug if I want to get 5 to 10 records?\nselect sum('runs') from baseballStats where yearID=2000 group by\nplayerName limit 5,5\nbut it default returned top 10, This is not correct\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/111#issuecomment-214691933\n. is this diff from master? looks like diff from the previous PR. Can you confirm. This is looking better.\n. LGTM. Minor comments. \n. Merged.\n. LGTM. \n. LGTM. Will merge.\n. I thought there was another option to initialize it with Zookeeper and we\nwould listen to EXTERNAVIEW. Looks like that not the case.\n\nOn Tue, May 10, 2016 at 5:02 PM, Xiang Fu notifications@github.com wrote:\n\nWe init com.linkedin.pinot.client.Connection with the brokerlist fetched\nfrom ConnectionFactory.\nBut if one of the broker failed after connection initialized, then we will\nhave issues.\nAny plan to fix this?\nSome possible solutions:\n1. putting data change listener on /EXTERNALVIEW/brokerResource and update\nbroker list when change happens;\n2. retry on other nodes + active fetch online broker list when fails\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/120\n. LGTM. \n. Looking into it.\n\nOn Fri, Jun 10, 2016 at 1:33 PM, laloyd notifications@github.com wrote:\n\nduring mvn package I saw this too:\nes/jdk1.8.0_51.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the\ntwo will be used. Which one is undefined.\nRunning com.linkedin.pinot.common.TestSchema\nfile:/Users/laloyd/src/3rdparty/pinot/pinot-common/target/test-classes/data1.schema\nNot extracting plain file\nfile:/Users/laloyd/src/3rdparty/pinot/pinot-common/target/test-classes/data1.schema\ndefaultNullValueFromString value -1\ndefaultNullValueFromString value\ndefaultNullValueFromString value -1\ndefaultNullValueFromString value\ndefaultNullValueFromString value -1.0\nTests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.772 sec\n<<< FAILURE! - in com.linkedin.pinot.common.TestSchema\ntest2(com.linkedin.pinot.common.TestSchema) Time elapsed: 0.087 sec <<<\nFAILURE!\norg.codehaus.jackson.map.JsonMappingException: N/A (through reference\nchain:\ncom.linkedin.pinot.common.data.Schema[\"metricFieldSpecs\"]->com.linkedin.pinot.common.data.MetricFieldSpec[\"defaultNullValue\"])\nat com.linkedin.pinot.common.TestSchema.test2(TestSchema.java:59)\nCaused by: java.lang.NullPointerException\nat com.linkedin.pinot.common.TestSchema.test2(TestSchema.java:59)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/123#issuecomment-225288273, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AAz7Z5U0aIOzNb9iHhxKglq3vk_nr_8Bks5qKcn8gaJpZM4Ig7dr\n.\n. Is this happening in new code. Can you add give me your schema json file.\n\nOn Sun, May 22, 2016 at 9:59 PM, caozhenhuamail notifications@github.com\nwrote:\n\nAbout Error: org.codehaus.jackson.map.JsonMappingException: N/A (through\nreference chain:\ncom.linkedin.pinot.common.data.Schema[\"timeFieldSpec\"]->com.linkedin.pinot.common.data.TimeFieldSpec[\"defaultNullValue\"])\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/124\n. looks like you have created a realtime table for flights. Have you\nconfigured the kafka topic for flights data. Do you see any errors in\nserver log?\n\nOn Thu, May 26, 2016 at 6:53 PM, ChenJianJunCJJ notifications@github.com\nwrote:\n\nThere are no error or exception in \"pinotBroker.log\". I use the web\nconsole (http://controllerHost:9000/query/#) to interact with Pinot.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/125#issuecomment-222041490, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AAz7Z6ccYhPSObhCqw_eLhRleJmZrUNKks5qFk6NgaJpZM4InXAe\n.\n. Pinot does not have support for sketches as of now. Its work in progress.\n\ntopN is supported, by default group by aggregation query in Pinot always\ndoes topN N=10 by default.\nYes, you use top N to limit the rows returned by group By.\nOn Tue, Aug 30, 2016 at 8:52 PM, Chanh Le notifications@github.com wrote:\n\n@jfim https://github.com/jfim\nI have a fews question.\n-\nHow about support datasketches for counting unique more effeicently?\n   Ref: http://druid.io/docs/0.9.1.1/development/extensions-core/\n   datasketches-aggregators.html\n   -\nWhat about the TopN instead of group by?\n   Ref: http://druid.io/docs/0.9.1.1/querying/topnquery.html\n   -\nI have 10 billion rows in table Is that limit the rows when group by?\n   Does TopN help here?\nThanks.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/126#issuecomment-243651398, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7ZxkGVG8D4d5-GP-8zVl89OP9VuwAks5qlPqBgaJpZM4IneHn\n.\n. LGTM: Minor comments, feel free create another PR to address the comments if needed. Did travis run succeed for this PR?\n. LGTM\n. LGTM\n. LGTM. Make sure we have the pre condition while we are initializing the key generator\n. LGTM\n. +1 for the feature. Are there any other alternatives other than forcing current segment to be flushed?\n. +1 to what jfim said. We need to make sure this works with new design as well.\n. @tkao1000  can we close this?\n. # Solution 1:\n\nHigh level idea: Pinot already mandates registering a schema for a realtime table. We can easily extend this to offline table as well and make it mandatory if clients need support for default value. On loading a segment we can simply look at the columns in the schema and segment. If we find columns missing, we can create a sorted forward index column. We will have only one value in this column which will be derived using the default value in the schema. Once we generate this, rest of the query execution code should work as usual.\nThings to consider\n- Should we update the segment metadata when we add new columns. Till now we have always avoided modifying the segment.\n- What happens to already loaded segments, should we force restart of server or make use of segmentrefresh command to force reload of segment\n- What happens if the default value changes. With new segment format version, we don't support  remove yet.\n- Some of the existing usecases might rely on existing behavior where we skip segments that dont contain columns in query. We need to make sure the performance is not degraded for such use cases.\nThoughts?\n. @antumbde Good point about MV columns. I am guessing its ok to have sorted forward index even for MV columns as long as default value is just one element. \nAdwait I am not sure if I get 4. Are you saying we should use default value even if we don't generate new sorted index file for new columns?\nIf we have to do that, then we can completely avoid creating the file as @jfim suggested and create them when needed in memory.\n. @antumbde Got it. No, I don't intend to keep the previous behavior. we will process both s1 and s2 as you suggested. I was more concerned about performance. lets say the query is select sum(foo) from myTable. Earlier, we would skip segments which don't have column 'foo' but now we will end up scanning all segments to compute the sum. Answers should match given default value for foo is 0\n. Update the PR. Tested locally for v1/v2 format. Also added support for updating the default value for v1/v2 format (v3 does not support index removal as of now).\nAdded a new class schemaEvolutionHandler that does bulk of the work. \nImplementation details\n- looks at schema from ZK and segment metadata. \n- computes the action required on a per column basis NEW_DIMENSION, UPDATE_DIMENSION etc\n- creates the new columns in a temp directory\n- computes the new metadata based on columns added\n- once all files are generated in temp directory, we update the original segment\n- returns the new segmentMetadata\nTESTING\nI did some manual testing where I ran schemaEvolutionHandler on a segment and started the server. Verified that we are able to retrieve the newly added column.\nTBD\n- write a unit test case to capture all data types (i manually tested for STRING dimension, we need tests for all data types for dimensions and metrics)\n-  write an integration test to create a segment with 5 columns and upload the schema with 5 + additional columns (1 for each data type and dimension/metric combination) and then start the server\n- refresh test case - similar to previous test case but we change the schema after server has started and loaded the segment. We need to either use refresh message or change the segment state to OFFLINE and back to ONLINE to force reload.\n. I will respond to the comments. Please start working on the unit tests.\nOn Mon, Jul 11, 2016 at 3:47 PM, Jackie-Jiang notifications@github.com\nwrote:\n\nShould I take this change and work on all the issues, or add unit tests\nafter you fix the comments and check in this PR?\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/161#issuecomment-231888535, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AAz7ZxZ1DhHKN2cwLzI8cTSrCtZP6zkkks5qUsgIgaJpZM4Ivpt6\n.\n. For operation, I prefer one method to trigger re-load, either refresh message or http based. while http based feels simple and easier its much harder to control and handle faults. For e.g. with refresh message based, we can control how many segments are getting re-loaded at once across cluster,table etc. With http we have to re-implement throttling. For long running tasks, we need to handle faults - what if controller goes down, what if server goes down or not responding etc. Helix provides us all these features already. \n\nIf the end goal is for user to know the result, then we can have a call to controller that waits until schema updates are processed before responding. Note that Helix message can also have status updates, current implementation of message handler in pinot does not use that feature.\nOther option is to have nodes automatically watch for schema updates and trigger segment refresh. It makes sense to do this once we have this feature well tested in production.\n. LGTM. I tested it by loading sample table and posted a schema with new field and disable/enabled the segments. I saw that new column was generated for v1 format\n. why can't we simply cache it in getData based on the url, we can also have the logic to check if it exists in cache in getData method \n. LGTM. Please add the description and the perf improvement numbers\n. Can you please use this code and load a segment generated by old code to make sure this is backwards compatible. Also generate a new segment using this code and load it using old code.\n@kishoreg I have added a unit test that will test backwards compatibility. Please look at it and let me know if it is good enough. I will also be doing some manual testing. \n. How about changing existing code to always use number of instances or  use\na new variable numConsumerGroups and falls back to replication if it does\nnot exist.\nOn Thu, Jul 14, 2016 at 5:10 AM, Subbu Subramaniam <notifications@github.com\n\nwrote:\nAs we move forward,\nI discovered that the table config information for realtime tables has\n\"replication\" field. For high-level consumers, this value must match the\nnumber of instances. For low-level consumers, this value is independent of\nthe number of instances.\nI am considering introducing another config variable called\nreplicasPerPartition.\nOnly realtime table code will pay attention to this value, when low-level\nconsumers are enabled.\nDoesn't look pretty, but I don't see an alternative (other than\nintroducing a new config variable). The old one is already called\n\"replication\" ...\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/178#issuecomment-232518092, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AAz7Z7wDkVya5QvMoZ01EQBdulgFDVeCks5qVXdlgaJpZM4IxkOA\n.\n. do we have a test case for cardinality product exceed long.max?\n. LGTM. Eventually it will be great to get to have proper classes to parse and hold the various parts of the segment name according to the mode. \n. Lgtm\n. Good job. JF. This should fix the occasional imbalance we see in segment assignment. What will happen in case idealstate is empty?\n. LGTM\nI found the answer. We consider all nodes for assignment, we were incorrectly using external view to compute the current assignment instead of idealstate. While this is ok when all nodes are up, it breaks when few nodes are down. Your PR fixes that.\n. @Jackie-Jiang That is a valid concern but that is beyond the scope of this PR. We should eventually move to AUTO rebalance and Helix will take care of the assignment/failure/expansion scenario.\n. can you add the test case that fails in previous code and passes with your change\n. LGTM\n. @fx19880617 want to work on this? Looks straight forward. @jfim do we need to change grammar for this?\n. This is supported by Pinot. See https://github.com/apache/incubator-pinot/pull/1192. Thanks for cleaning this. Is it possible to add a method that returns the type given segment name.\nLgtm\n. lgtm\n. do you have a query when this happens? Is it happening in avg?\n. @MubeenAfzal did that answer your question?\n. LGTM. Pls confirm that logging is done only once during server start up\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM. What did you think about writing a regex for parsing directory name and segment name\n. LGTM\n. LGTM\n. was the binary file addition intentional?\n. LGTM.\n. LGTM\n. LGTM\n. LGTM. please take care of the comments before merging\n. LGTM. Please add a description.\n. changing type to list --> is this backward compatible \n. LGTM. while you are on this, can you add two more fields -  comments/description, issue status (fixed, in progress, wont fix, recovered etc).\n. instead of just checking for >0, can we check for certain percentage of total value. Even having .1% threshold will remove lot of noise. I think we had this check may be it got lost during re-factoring.\n. We don't have the support to read parquet format yet. Should be trivial to\nadd one.\n\nOn Jul 22, 2016 11:29 PM, \"shouhm\" notifications@github.com wrote:\n\nIs it possible to support reading parquet format file(instead of json +\nschema) made from segment generation? The purpose to do this is\nautomatically load some data transform without providing a user specified\nschema.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/308, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z3yBpBN629xmkx55NLY3makczV3zks5qYQULgaJpZM4JS_Z2\n.\n. Yes, it is feasible and valuable to do that. \n\nSee the current readers here. https://github.com/apache/incubator-pinot/blob/master/pinot-core/src/main/java/org/apache/pinot/core/data/readers\nAdding ORC and Parquet Readers is easy. Once the readers are implemented, add them to the RecordReaderFactory. \nhttps://github.com/apache/incubator-pinot/blob/master/pinot-core/src/main/java/org/apache/pinot/core/data/readers/RecordReaderFactory.java\nWant to give it a shot?\n. whats blocking this from being merged?\n. lgtm\n. LGTM. You rock!\n. lgtm\n. No, we dont support compression for large results. Definitely a good feature to support. When you say large - does it mean 10k, 100k or 1m?\n. Will these queries have group by or just select + filter. I am thinking if its better for servers to send compressed response to broker and broker simply concatenate them and sends it across.\n. Does that mean broker will act as pass through i.e  it just concatenates the responses from the servers.\n. @antumbde can you elaborate on the solution. I get the cursor part from client but how would it work between broker and server.\n. Lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. everything else looks good, can you clarify if this works for both REALTIME/OFFLINE tables\n. Lgtm\n. LGTM\n. i think we need to change selectBroker method as well\n. LGTM\n. Please add a test case for sortedinvertedindexfilter \n. LGTM, prefer to have a unit test for sortedinvertedindexfilteroperator, please create an issue for that\n. LGTM\n. if we have a previous max time we can use that in the query. LGTM apart from that\n. LGTM\n. is it a good time to start using Helix algo's for placement. Lei just added zone/rack aware placement strategy in Helix. \nRavi -regarding placement based on load, \nthere are two options \n1. look at the load during initial placement  ONLY\n2. periodically change the mapping if the load has changed.\nAre you suggesting both #1 and #2?\n. Lgtm\n. lgtm apart from the hard coded days\n. lgtm\n. LGTM\n. lgtm\n. please check if this is used as part of broker response. It might break compatibility if we have broker and server on different version\n. No, we dont have any example specifically for spark/flink. But the logic is simple, you instantiate indexsegmentcreator and pass in record reader. Take a look at CreateSegmentCommand class\n. LGTM\n. LGTM, may be rename dbi to something else. I dont think we are using dbi now\n. Lgtm\n. lgtm\n. LGTM\n. LGTM\n. why do we need jcabi-log dependency. Did not see it getting used any where\n. LGTM\n. LGTM. please take care of the minor comments\n. LGTM\n. change json_val from json to text for now\n. thanks for fixing this right away. Out of curiosity, if we clone StarTreeV1 class to StarTreeHeap and change StarTreeV1 to extend StarTreeHeap would it have worked. we dont have to do this but just know if this was possible. Anyhow bottom line is never use java serialization even if its initial implementation \n. LGTM\n. lgtm\n. LGTM.\n. Lgtm\n. LGTM\n. LGTM\n. LGTM\n. 5 minutes might be very aggressive and put too much load on the system. I think with Xiangs change we might be better of running the query max(timeColumn) where time > prevMaxTime instead of reading the segment metadata. What do you think?\n. LGTM\n. LGTM\n. LGTM\n. please be vary of all the annotations/guava pre condition checks in critical code path. e.g checking for offset is within range for every data access will impact performance. \n. lgtm\n. LGTM. Thanks for fixing it the right way\n. Lgtm\n. LGTM\n. LGTM\n. How did we verify that the behavior is same as existing code. We should probably use directExecutor in FCFSScheduler to maintain existing behavior.\n. comment on FCFSScheduler says that its same as existing logic but that's not true. Is it possible to split this RB into two. Make the changes to interfaces and have an implementation that mimics the existing behavior. Once that is done bring in the new implementations. For example, you can have an implementation which simply invokes the query immediately. \n. High level question. We don't have to change anything to mmap more than 2gb? \n. Got it. Looks like feature of larray\nOn Sep 14, 2016 6:31 PM, \"Jiaqi Gu\" notifications@github.com wrote:\n\n@kishoreg https://github.com/kishoreg I think the mmap library should\nsupport file greater than 2GB, which is just one of their selling feature.\nWe just need to assure passing the right offset/address (which may be\ngreater than MAX_INT) to it.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/541#issuecomment-247207812, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z4clKkfmioLW9_cFN6Dh7GDlPqnkks5qqJ_kgaJpZM4J9Qpm\n.\n. I think it's new vs old package.\n\nwhich one is newer?\nOn Sep 14, 2016 4:52 PM, \"Mayank Shrivastava\" notifications@github.com\nwrote:\n\nJust curious, what issues did you see, and why did you guys decide to\nstick with fasterxml vs codehaus? The non-thirdeye code still uses both I\nthink.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/544#issuecomment-247192067, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z85cSWq2SLpjN8LHDT7xq2HdsUD8ks5qqIiygaJpZM4J9W_O\n.\n. yes, we need that metadata in schema. Its optional in metadata but currently we generate schema from metadata since schema is not enforced. Without that we don't have enough info during segment generation that we have to automatically create that column. Currently, fieldspec is tied with schema and segment metadata\n. +1 to support aliasing. This as can be done independently of UDF support\nright? Probably better to do that first before starting on UDF.\n\nOn Wed, Sep 28, 2016 at 2:21 PM, Xiang Fu notifications@github.com wrote:\n\nVery impressive write up @mayankshriv https://github.com/mayankshriv !\nOverall looks good to me, have two points here:\n1. Will function be able to take multiple constants as parameters? like\nconvert_from_timezone_to(ts, 'UTC', 'PDT') ? The reason is antlr parsed\ncolumn name to IDENTIFIER and constant(string/numbers) to literal.\nThis may causing backward compatible issue for PQL query parser.\n1. Also I think the semantics of \"select func(...) AS some_func ...\"\n   need to be support in this case to make results naming more meaningful.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/552#issuecomment-250304631, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z04u2pdUMOuUIZIihqrxXliF_4wVks5qutptgaJpZM4J-bAx\n.\n. lgtm\n. @atumbde can we fall back to reading one row at a time for multi-valued column?\n. +1 on the batch api for multivalue as well. But I don't see an easy way to know the total number of multi-values to read upfront given a set of doc ids. For example - if we are reading 5k rows at a time and a maximum number of multi-values per row is 2k then, we will have to create the data structure to hold 5k * 2k entries upfront. Optimal way would be to for the multi-value reader to return as many entries as possible at a time and we call this in a loop until we read all values corresponding to the 5k rows. This will require changes to mv reader interface. \n. I thought this was already fixed no?\n. Overall, I think it's a good idea to have the ability to support aggregation function on MV. One suggestion is to create a new function instead of overloading existing function. I think there are enough nuances between single-value and multi-value columns that warrant this. This also allows us to add change/add new functions as its possible to have multiple ways define to compute average and other functions for multi-valued columns depending on the scenario. \n\nRegarding the batch vs reading a row at a time for MV, I think that deserves another issue and PR. For now, we can go with reading one row at a time for MV columns. \n. To add more details. All existing aggregation functions will continue to assume that its for SV. For e.g sum(x) function assumes x is SV. For mv we can have sumMV(x) which works for multi-value. Let's start with this for now, so that user knows what exactly they are doing. Eventually, we can automatically map sum(x) to sumMV(x) in planning phase if x is MV.\n. Lgtm\n. it says 24 files changed and is not showing diff for all the files. \n. I think there are two parts to the solution. \n1. Minimize the probability of two workers trying to acquire the same task. Note: we can never prevent this (unless we have support for partitioning) but only minimize its occurrence.\n2. Ensure that two workers never work on the same task. \nCorrect if I am wrong, this RB is address 1 and we still need to fix 2.\n. Thanks for starting the issue @fx19880617. This is critical for improving scan performance on high cardinality columns e.g metrics and string columns where maintaining dictionary does not make sense.\nWhile our initial goal was to not expose Dictionary outside of data source, parts of existing code make direct reference to Dictionary. The No-Op dictionary can only work for columns with columns of int data type.\nWe should use this to fix the usage of dictionary class outside of data source. This will involve changes across all operators but I don't see any other option. But I think it's worth the effort, it will allow us to improve performance drastically in some scenarios.\nHere are my thoughts.\nMost operators work on Blocks and use the BlockValSet to read values. But unfortunately, they first read the dictionary ids \nvoid readIntValues(int[] inDocIds, int inStartPos, int inDocIdsSize, int[] outDictionaryIds, int outStartPos);\nand then use dictionary interface to read actual values.\nvoid readIntValues(int[] dictionaryIds, int startPos, int limit, int[] outValues, int outStartPos);\n  void readLongValues(int[] dictionaryIds, int startPos, int limit, long[] outValues, int outStartPos);\n  void readDoubleValues(int[] dictionaryIds, int startPos, int limit, double[] outValues, int outStartPos);\n  void readFloatValues(int[] dictionaryIds, int startPos, int limit, float[] outValues, int outStartPos);\n  void readStringValues(int[] dictionaryIds, int startPos, int limit, String[] outValues, int outStartPos);\nWe need to provide reading the actual value on block val set. This allows the data source to handle dictionary/no dictionary case transparently.\nThe downside of this is that some of the operators might benefit by using raw dictionaryId instead of actual value. Which means we have to provide both methods on blockValSet readDictionaryIds and readValues.\nI will give it a try and see how the interfaces look. We also have some usage of dictionary in filter phase but its much easier to push down that functionality to data source.\n. @jfim is this good to get merged?\n. why can't we create a new context on every invocation? we don't have control on that?\n. Thanks Yen. It might be better to have a boolean argument for the method indicating the need for fetching raw anomalies. In the anomalies list view, we need to fetch mergedAnomalies only. We need raw anomalies only for the detailed page view.\n. @mayankshriv Thanks Mayank. Does that benchmark part of this commit or it already exist?\n. Please add it to tools\n. I think we want it disabled on server and broker but enabled on the controller. \n. looks like there are some conflicts. Can you resolve them\n. This is very useful. Can we take it one step further and invoke PinotToolLauncher instead of QueryRunner. We can add QueryRunner as subcommand pf ToolLauncher\n. waiting for travis to pass\n. Lgtm\n. we should probably have this feature on a per function basis\n. @mayankshriv Can you also look into this. Adwait has valid points, I will also spend some time looking into the code. Let's figure out a way to avoid passing segmentMetadata.. Thanks!.. will this happen in prod as well? What happens in the case of refresh and real-time scenarios, will the segment not be available during conversion?.\nShould we not start generating segments in V3 format during creation before pushing this change. I understand we still need to generate indices on the fly when needed but we can at least avoid conversion every time.\n. @jenniferdai can you please take a look at this PR. This is awesome Jackie. I suggest moving this class to the controller module. We might want to run this periodically similar to validation manager.\nAdd a separate command line tool in tools package. Suggest having the following arguments to the tool\n- cluster name, zk address, table name or table name pattern //REQUIRED\n- min doc threshold required (optional) default can be 100 million.\n- avg docs to scan per query assuming all columns are present in the query (allows you to compute the number of columns to add inverted index on) or num of columns to set the inverted index for. @mayankshriv Can we support this now?. please fix the typo in commit message. Can we add a test case.. Nice work Alex. Will review this later today.. I had trouble getting the same results as H2 in our integration test. REGEXP_LIKE in H2 uses pattern.compile.find() method instead of pattern.compile.matches(). I feel matches is the right thing to do but for now I have used find() to match with H2. Its not clear whats the behavior in other DB's.. I realized that we had REGEX enum already defined in request thrift file. Since no one has used this yet, I thought this was the right time to fix that as well. I changed REGEX to REGEXP_LIKE and renamed all predicate classed to reflect the same.. Will this cause additional zk read for every segment load?. This might\nimpact the startup time rt?\nOn Mar 31, 2017 4:08 PM, \"Xiaotian Jiang\" notifications@github.com wrote:\n\nMerged #1211 https://github.com/linkedin/pinot/pull/1211.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/1211#event-1024903842, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z3nWaNg37BOS1rp6mhllWQYgLZvtks5rrYdvgaJpZM4MrNWZ\n.\n. Why should we start the indexing immediately. Can we not start that from\nthe next segment.\n\nOn Apr 4, 2017 5:48 PM, \"Xiaotian Jiang\" notifications@github.com wrote:\n\n@Jackie-Jiang commented on this pull request.\nIn pinot-core/src/main/java/com/linkedin/pinot/core/operator/filter/\nBitmapBasedFilterOperator.java\nhttps://github.com/linkedin/pinot/pull/1238#discussion_r109810883:\n\n }\n\n\nbitmapBlock = new BitmapBlock(dataSource.getOperatorName(), dataSourceBlock.getMetadata(), startDocId, endDocId, bitmaps, exclusion);\n+\n// Log size diff to verify the fix\nint numBitmaps = bitmaps.size();\nif (numBitmaps != length) {\nLOGGER.info(\"Not all inverted indexes are generated, numDictIds: {}, numBitmaps: {}\", length, numBitmaps);\n\n\nNo, this info will only appear when the current code throw NPE. This is\njust for bug verification.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/1238#discussion_r109810883, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z6XUAh9ejQwBQutomGLPRmX_cy49ks5rsuTJgaJpZM4MzjuQ\n.\n. I think the planning phase should look at the metadata of consuming segment\nand not use inverted index.\n\nOn Apr 4, 2017 7:49 PM, \"kishore g\" g.kishore@gmail.com wrote:\n\nWhy should we start the indexing immediately. Can we not start that from\nthe next segment.\nOn Apr 4, 2017 5:48 PM, \"Xiaotian Jiang\" notifications@github.com wrote:\n\n@Jackie-Jiang commented on this pull request.\nIn pinot-core/src/main/java/com/linkedin/pinot/core/operator/fi\nlter/BitmapBasedFilterOperator.java\nhttps://github.com/linkedin/pinot/pull/1238#discussion_r109810883:\n\n }\n\n\nbitmapBlock = new BitmapBlock(dataSource.getOperatorName(), dataSourceBlock.getMetadata(), startDocId, endDocId, bitmaps, exclusion);\n+\n// Log size diff to verify the fix\nint numBitmaps = bitmaps.size();\nif (numBitmaps != length) {\nLOGGER.info(\"Not all inverted indexes are generated, numDictIds: {}, numBitmaps: {}\", length, numBitmaps);\n\n\nNo, this info will only appear when the current code throw NPE. This is\njust for bug verification.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/1238#discussion_r109810883, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z6XUAh9ejQwBQutomGLPRmX_cy49ks5rsuTJgaJpZM4MzjuQ\n.\n\n\n. does this mean we will support both != and <> for NOT EQUALS?. +1 to @bl44's comment. Can you please describe the problem you are trying to solve and the solution.. Please split this PR into dataframe changes, framework changes and new pipelines. LGTM. why do we need thrift? we can simply exclude it from the jar. I think it's coming transitively from Pinot.. what is the purpose of making it string?. Logic looks complicated and too many if statements during. This will impact Perf. Can we simplify this. We can chat tomorrow. Do u have screen shots off grouped anomaly.\n\nOn May 11, 2017 11:27 AM, \"Yen-Jung Chang\" notifications@github.com wrote:\n\n1.\nAdd a search UI for grouped anomaly. The page maps from a list of\n   group ids to a list of merged anomalies.\n   2.\nAdd email template for grouped anomaly. The template checks if the\n   alert is a grouped anomaly or a list of merged anomalies. It embeds a link\n   to group anomaly UI for the former case and the original link for the\n   latter case.\nTested on local controller.\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/linkedin/pinot/pull/1430\nCommit Summary\n\nAdd the endpoint for grouped anomalies\nAdd email template for grouped anomalies\nAdd compatibility to alert builder for groupedAnomaly\nUpate alert message for grouped anomaly\nFix compilation issue\nFix groupId and anomaliesId not shown in email link\nAdd temporary grouped anomaly DAO\nimplemented front end for group ids\nSupport multiple group id in endpoint\n\nFile Changes\n\nM thirdeye/thirdeye-pinot/src/main/java/com/linkedin/\n   thirdeye/anomaly/alert/util/AnomalyReportGenerator.java\n   https://github.com/linkedin/pinot/pull/1430/files#diff-0 (25)\nM thirdeye/thirdeye-pinot/src/main/java/com/linkedin/\n   thirdeye/anomaly/alert/v2/AlertTaskRunnerV2.java\n   https://github.com/linkedin/pinot/pull/1430/files#diff-1 (11)\nM thirdeye/thirdeye-pinot/src/main/java/com/linkedin/\n   thirdeye/dashboard/resources/EmailResource.java\n   https://github.com/linkedin/pinot/pull/1430/files#diff-2 (4)\nM thirdeye/thirdeye-pinot/src/main/java/com/linkedin/\n   thirdeye/dashboard/resources/v2/AnomaliesResource.java\n   https://github.com/linkedin/pinot/pull/1430/files#diff-3 (54)\nM thirdeye/thirdeye-pinot/src/main/java/com/linkedin/\n   thirdeye/datalayer/bao/MergedAnomalyResultManager.java\n   https://github.com/linkedin/pinot/pull/1430/files#diff-4 (4)\nM thirdeye/thirdeye-pinot/src/main/java/com/linkedin/\n   thirdeye/datalayer/bao/jdbc/MergedAnomalyResultManagerImpl.java\n   https://github.com/linkedin/pinot/pull/1430/files#diff-5 (17)\nM thirdeye/thirdeye-pinot/src/main/resources/assets/\n   javascript/Constants.js\n   https://github.com/linkedin/pinot/pull/1430/files#diff-6 (2)\nM thirdeye/thirdeye-pinot/src/main/resources/assets/\n   javascript/DataService.js\n   https://github.com/linkedin/pinot/pull/1430/files#diff-7 (10)\nM thirdeye/thirdeye-pinot/src/main/resources/assets/\n   javascript/HashParams.js\n   https://github.com/linkedin/pinot/pull/1430/files#diff-8 (2)\nM thirdeye/thirdeye-pinot/src/main/resources/assets/\n   javascript/models/AnomalyResultModel.js\n   https://github.com/linkedin/pinot/pull/1430/files#diff-9 (7)\nM thirdeye/thirdeye-pinot/src/main/resources/assets/\n   javascript/views/AnomalyResultView.js\n   https://github.com/linkedin/pinot/pull/1430/files#diff-10 (24)\nM thirdeye/thirdeye-pinot/src/main/resources/com/linkedin/\n   thirdeye/dashboard/views/tabs/anomalies.ftl\n   https://github.com/linkedin/pinot/pull/1430/files#diff-11 (5)\nM thirdeye/thirdeye-pinot/src/main/resources/com/linkedin/\n   thirdeye/detector/multiple-anomalies-email-template.ftl\n   https://github.com/linkedin/pinot/pull/1430/files#diff-12 (6)\n\nPatch Links:\n\nhttps://github.com/linkedin/pinot/pull/1430.patch\nhttps://github.com/linkedin/pinot/pull/1430.diff\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/1430, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7ZzMRkgQt4sf-N1Y9wIqd95UCTvQtks5r41MkgaJpZM4NYYco\n.\n. Please add description on why this is required. +1 for idea. However the implementation could be done better. The planning phase can setup operators that can simply work on the metadata instead of actual data. With this, we can extend this logic to min/max and other aggregation functions and it also follows the same execution flow.. Its fixed now. Thanks\n\nOn Tue, Jun 6, 2017 at 7:20 PM, tenstriker notifications@github.com wrote:\n\nI am not sure if it's my browser setting but I am not able to access any\nimages on this wiki page:\nhttps://github.com/linkedin/pinot/wiki/Architecture\nThey appear as \"\"\nThanks\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/1525, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z7L4ejo5JM1UGJ1QmCWTbZ8wtfymks5sBgjTgaJpZM4NyIB-\n.\n. Addressed the comments. I haven't removed the option to route between HLC and LLC yet. Might do that in another PR. I am pushing this since it the test cases passed on my machine. will fix/remove the two test cases that I have disabled after discussing with Subbu. We used the selector during migration from HLC to LLC and I don't think we need that code anymore.. The test case I used for testing failed before this change and passed after this change. It was a 64G file. That should have ensured we handle offsets larger than int.max. can you give some example output.. When the Pinot node starts up, it connects to Zookeeper and creates an Ephemeral node. Helix watches for the creation of this Znode and starts issuing the transitions. I see that we create StringBuilder to log the winner group but it gets logged only in debug mode. Can we avoid creating the string buffer if debug is turned off?. with this change the incomingTimeGranularity will be removed from Schema but this is needed by the segment generation/realtime ingestion code. We need to make sure we add this in tableConfig.. Nicely done! Few comments. Also, just for my clarity which part was slow in the previous code. Hard to believe that priority queue has so much overhead compared to iterating over the entire array. (probably the overhead of re-heapify on every addition is the root cause). . This tool is doing the following\n1. Download the segment, \n2. \n3. upload the segment again.\nConceptually this is very similar to what a Pinot Minion does.\n\nIt will be great if we can model this as an ad-hoc or standalone Minion tool. I haven't looked into the interface of a Task in minion but if we can use the same interface to implement this task of adding date time column then we can leverage this tool to run any minion task.\n@Jackie-Jiang @npawar what do you think?\n. LGTM. Demolition man!. They are auto generated by antlr. \"mvn clean install -DskipTests\" should\ngenerate those classes.\nOn Mon, Oct 9, 2017 at 11:06 PM, trialmaster notifications@github.com\nwrote:\n\nclass PQL2BaseListener, PQL2Lexer, PQL2Parser not found in this project\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/1987, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z7QMEOJeDduV8k59In9hi1es7fRXks5sqwlUgaJpZM4Pzapf\n.\n. I forgot to click on submit for previous comments. I will review the latest changes now. Nice, do you have the screenshots on how it would look? Is it possible to keep history :). we should add a buffer to the investigation period based on the granularity of the data. \n change it to contribution to overall change in the case of dimension analysis and percentage change for metric correlation.\ncan we show only 1 decimal point in the value. This is amazing @Jackie-Jiang. You rock!. I will have to set it up on my IDE and go over the flow. It will be great if you can document the high-level algorithm.. Can you add some sample queries that were not supported by star tree earlier and the ones that can be supported by this change. . Helix library checks for the size and should fail if the request if the\ndata size exceeds 1MB. What was the exact behavior here?. Any stack traces?\n\nOn Thu, Nov 9, 2017 at 11:00 AM, Xiang Fu notifications@github.com wrote:\n\nWe recently observed a long time ago set up table with long retention\ncaused large number of segments in idealstates(after compressed) and\neventually exceeded the 1mb znode limit.\nThe exception of znode write hangs the controller zkclient which blocked\nall the new segments added(idealstates update) and stale the ingestion\npipeline.\nIn order to prevent this happen again, we may need to check the idealstate\nsize before write it and better to expose the metrics so we can alert\naccordingly.\nAlso is there a way to detect zkclient issue and reconnect it ?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/2088, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z3Q6p9byBKVX0ExIxPY_z7LrfVPlks5s00vpgaJpZM4QYer4\n.\n. Good catch @Jackie-Jiang. Can we check for star tree existence and if it exists, let's use regular path. I remember we also have min and max in the metadata, but this might be available only in the newer segments. If it exists we can use the values from metadata. So the planning phase as the setup the right operator\n- use metadata if it has min/max\n- if no star tree and has a dictionary, use dictionary\n- fall back to the default code path. Is there a design doc for this?. . whats the reasoning to have this in baseAlertFilter?\n\nFrom Kexin:\nBaseMethod is to let alertFilterFactory to create correct alert filter in AD lib, in order to get its MTTD.. this is a good proposal. quick feedback, should we introduce the concept of FileSystem instead of having SegmentFetcher?  . @jamesyfshao Yes, a draft on how to support local file system and the remote file system will definitely help. Please add some information on how the code should be structured. For e.g If we want to support for HDFS, S3, Azure -  where do we put the code and what are the configuration parameters?. I am unable to reproduce this issue. What is the jdk version. @jfim any idea what might be the issue?. Can you print the entire classpath? You can add the following line to\nquickstart script.\necho $CLASSPATH\nOn Sun, Jan 28, 2018 at 9:13 PM, Huang Huang notifications@github.com\nwrote:\n\nbut still there is an error about CA\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/2282#issuecomment-361142192,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z-HxpGXdwqwQEgmhBA66s0E1nxuEks5tPVNvgaJpZM4RL3tg\n.\n. Good point! I don't have any strong reason for having isDerived flag in option two. Might just help in validation and making the schema more readable.. @atumbde As Mayank, this is to compute the actual values during ingestion(realtime) and segment generation (offline). \n\nHow about the combination of the two. We have derivedFieldSpec only to describe the extra json fields (src, transform function, params) but we will also have the derived fields specified in dimensionFieldSpec and MetricFieldSpec and TimeFieldSpec.\n@mcvsubbu Note that we haven't decided where to put the extra attributes - schema vs table config.  \n. That's right. The computation moves from the user to Pinot but overall the amount of resources used will reduce especially in cases where a hadoop job or stream processing job is required just to apply the transformation function. \nThe outgoing time field is computed and materialized during the ingest time. It's not dynamically calculated during the query execution time. \n. We had an internal discussion and the conclusion was to just add a new field that specified a transformUDF. This function needs to be registered beforehand. In the initial version, we will only support UDF's defined in Pinot and must be loaded and registered at startup. Its easy to extend it to load dynamically.\nWe will support two types of UDF's - stateless and stateful.  Eventually, we want to extend this to use it in query execution as well. But the scope of this PR will be to use it during ingestion (batch/real-time)\n\nA stateless UDF can be represented as a  simple static method in the class. \nA stateful UDF - a separate init method that will be invoked at the beginning with the static arguments. This will avoid parsing the arguments and the setup cost for every invocation.\n\nWe will not enforce any interface for the UDF. We will derive most of it from the annotations.  I will add sample code shortly.\n  . can we keep the card view and have a link on the top to switch between the two, not sure how easy hard it is. If its hard, don't worry - we can bring it back later.\nLets format the number.  We need search box only the metric name/dimension. Can we have custom cell component for sparkline. something similar to this http://opensource.addepar.com/ember-table/#/sparkline\n. LGTM. Yes. It\u2019s definitely easy to add. You got the logic right.  Feel free to submit a PR. It will be great to enable this via a config flag for now.. can you check why the test coverage came down?. Looks like this handles only JSON format. This is ok for now, but we need to document it. One easy way to would be to always convert any format to generic record, we can reuse the code in recordreader and have a genericRecordWriter inside PinotOutputFormat.\n. Thank a lot for fixing this. That wiki probably needs to be updated. @jenniferdai @mcvsubbu @jfim will have more info. Pinot uses low-level Kafka consumer and manages its own offsets.  This mean\nPinot does not rely on Kafka (either broker or Kafka zookeeper) for storing\nthe offsets.\nDoes that answer your question?\nOn Thu, Feb 1, 2018 at 11:01 AM, Alex Hofsteede notifications@github.com\nwrote:\n\n@jenniferdai https://github.com/jenniferdai IIUC this config still\nimplies a zookeeper dependency (stream.kafka.zk.broker.url etc), I was\nlooking for a solution along the lines of the new consumer\nhttps://www.confluent.io/blog/tutorial-getting-started-with-the-new-apache-kafka-0-9-consumer-client/\nwhich replaces the old simple and highlevel consumers and removes the\nclient dependency on Zookeeper to store topic offsets. Is that something\nthat Pinot supports?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/2418#issuecomment-362367648,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z9tpuzcfg7KrqWtSq5g4-XJ2IPeFks5tQgodgaJpZM4R0q-w\n.\n. we might still need that to find the leader broker for a kafka partition\nand also detect the change in number of partitions but we dont need it to\nstore offsets.\n\nSubbu/Jf, please confirm.\nthanks,\nKishore G\nOn Thu, Feb 1, 2018 at 11:29 AM, Alex Hofsteede notifications@github.com\nwrote:\n\n@kishoreg https://github.com/kishoreg I think so, just to clarify, does\nthat mean that stream.kafka.hlc.zk.connect.string and\nstream.kafka.zk.broker.url can always just be a local zookeeper instance\nfor pinot offset management, unrelated to the remote kafka broker that I am\nconsuming from?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/2418#issuecomment-362375529,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z1o3eJsAl8E8AEU-t01aOzHGntUpks5tQhCRgaJpZM4R0q-w\n.\n. will wait for the test to pass and then merge. > When replacing segments, they will need to be renamed to remove the versioning so they can be replaced properly.\n\nwhat has to be renamed and who should do that? \nCan you add a diagram that describes the steps for the following scenarios\n- segment upload from external clients.\n- segment upload from realtime\n- Download from servers (offline/realtime)\n. Agree with leveraging the FileSystem API but it's better to have a simple interface within Pinot and a default implementation that takes in a FileSystem instance. The only motivation here is to avoid the compile time dependency on Hadoop jars. I think we already do that today and we should remove that.. I commented on acquired lock while updating idealstate but then realized that code already existed in the previous version but is shown as newly added code in the diff.  Will give it another try.. can you please add details on how it gets fixed when the new controller takes over and via validation manager. Can both of them try to fix it at the same time? An orthogonal question is what happens if there was a failure after let's say step2 and the server retries to commit. . This is awesome!. Do we have a documentation on API's?. Why is it called Relocation Manager?. We can change the regex for identifier in Pql .g4 to allow . In the column name. Can you try it and let us know if it works? You can submit the PR with a test case. \n. Great points!. Can you elaborate on why it broke group by queries? Did it fail in parsing the query or executing it.\nThere are two parts to this. \n1. Changing the grammar so that we are future proof (have the ability to differentiate between table name and column name\n2. Underlying pinot code is able to parse the table name and column\nIf I understand you correctly you are suggesting we do 1 and make minimal changes for us to handle it in group by expressions?. Note we plan we support expressions in selection and filter as well. Will your suggestion work for selection and group by as well. \n@jfim can you add your thoughts on this\n. can this be closed?. This is super cool!. Thanks Alex. That was super fast. Any reason why this is not within the Metric tab. Good point!. I think this is a valid use case. I am not sure why we did not handle this \n@subprotocol please submit a pr. Great point about handling timezone for sdf conversion. So looks like if the output format is sdf, we should first convert inputFmt to a DateTime (not millis) and call the right API on the DateTime to truncate.\nhttps://stackoverflow.com/questions/4133682/jodatime-equivalent-of-dateutils-truncate\n. +1 on @npawar comment. Do the bucket after converting it to the outputformat. @subprotocol, what do you think. yes, that's sounds right. . @npawar raised a good point about handling timezones in #2729. Lets make sure we handle that.. Awesome job!. Thanks for cleaning this up.. Is there a high-level design on how we would structure the code? It will be great if we can split rollup/conversion into two units - a high level driver which is generic and another set of specific interface where we can plug in the real logic. This should make it easy/trivial to add additional logic.\nLet's try to list out the type of roll-ups we would have. Some things that come to my mind\n- Input: Set of segments, some configuration for roll-up.\n- Operation:\n-- A single row in the input is simply transformed to another row in the output.  This can potentially remove the row as well\n-- Multiple rows in the input result in 1 row in the output. This is your implementation of time aggregation. But that can be generalized by saying the driver will simply group by X columns and collect all the rows for remaining columns and pass it to another implementation. \n-- Sorting: Sort the data and here is the sort order\n-- Add index: Adds star tree index or inverted index\nMost of the things we would do on a segment will fall into one of the above categories. It will be great to come up with common drivers for each category. \n. Few questions\n\nHow is the initial targetNumRows calculated when current_rows_to_size_ratio and previous_rows_to_size_ratio are not available.\nwhats the idea behind this formula\ntargetNumRows = ideal_segment_size * ( a * current_rows_to_size_ratio + b * previous_rows_to_size_ratio)\nis rows_to_size_ratio calculated on per partition basis or averaged across all partitions?\nwill this result in every segment having different number of rows. I think we can retain the same targetNumRows as long as the segment size is within ideal_segment_size +/- x percent. If it goes out of bounds for X consecutive segments, we can apply the formula to compute new targetNumRows.\n\n. Thanks. On the last point, I was referring to the fact that we change the threshold (rows, time, memory used) frequently. Currently, we have this threshold in some config and it's static. Now we are changing it to be dynamic for every segment. I am not saying its bad and it's actually good to have that ability but a bit worried that we might be reacting too fast and one or two bad segments might get us into a bad state. Let's make sure we have some checks in place to avoid extreme edge cases. \nFollow up question, how are we communicating the new flush thresholds to individual servers?\n. this is ok for now, but we  need a better way to handle these type of metrics. We should be able to skip metrics similar to skipping dimensions with high cardinality.. Pinot and Druid follow Lambda Architecture and it existed before Druid and Pinot. Having a batch layer and a real-time layer is a well-known strategy to get the best of both worlds. If you are looking for differences between Pinot and Druid beyond the high-level architecture, I suggest you look into the internals of each system. This blog post does a good job of comparing different OLAP systems.\n. I updated the issue with the content of the email. Hope that's ok.\nWe are definitely interested in this initiative. We were thinking of building something like this for other provisioning systems such as AWS, Azure, Mesos, Kubernetes, Rain (internal to LinkedIn). It will be great if we can build right abstractions so that most of the code can be re-used across different systems. \nAnother way to look at this problem would be from Helix point of view. It would be cool for Apache Helix project add the support for deploying a Helix based system on any provisioning system. \nSome pointers -\n- @jfim has added the support for Pinot on Kubernetes. \n- Gobblin on Yarn\n- Redis auto-scaling with Helix\nWe can definitely start with a PoC for Yarn and extend it to other systems as the second step. Can you come up an architecture on how this would look when deployed on YARN.\n. This looks good to me. In step 4, instead of adding tenant, we can model it as add node or add instance which can take instanceType as an argument. InstanceType can be Server,Broker, Minion etc. \nThis should have set up the cluster. After this users can invoke addTable etc which will take tableConfig as an argument. TableConfig has the tenant info and we automatically assign instances to a tenant. We have all this available as of today.\nThoughts?\n. Good point. We have two options we can overload the instanceType to SERVER_OFFLINE, SERVER_REALTIME, BROKER, MINION and/or take additional arguments such as tags and this can be any arbitrary tags or tenant name.\naddInstance\n  -- instanceType(s) <SERVER_REALTIME|SERVER_OFFLINE|BROKER|MINION> //required param\n  -- tenantName(s) <list of tenant that this instance can be belong to>//optional set to \"default\" by default :-)\n  -- tags  <additional tags to have fine grained control on segment/table assignments>. Please hold off on this PR. Let\u2019s come up with a better syntax. Who is asking for this?. A more generic and flexible solution would be to support defining a variable in the sql query.\nSELECT COUNT() FROM table WHERE column1 IN (\\@list_1) AND column2 IN  (\\@list_2) GROUP BY valueIn(column1,@list_1), valueIn(column2,@list2) OPTION(@list=[1,2,3]; @list2= ['a','b','c'])\nThis is similar to sql variable. e.g. https://www.safaribooksonline.com/library/view/mysql-cookbook/0596001452/ch01s15.html. lets put this on hold for now.  the benefit of adding this new option is not clear and is applicable to only a few scenarios. We can revisit this later. . Can you add Some more info. Why are we doing this.  How will response change with this. Can we not do this by default?. Can you paste a sample response and what will the new endpoint look like. largest/smallest -> latest/earliest to be in sync with the terminology used by Kafka.. do we have a test case to check for the happy path and the failure path? . LGTM. @Jackie-Jiang, do we violate this constraint in any of the existing use cases?. Any other alternative to Pinot storage? It\u2019s vague and can be confused with actual storage used in Pinot for serving. . should we revisit the purpose of validateLLCSegments and the scenarios it is trying to handle. Do we know the reason a segment gets into an invalid state? validateLLCSegments has become too complicated.\nAnother orthogonal question. This bug seems to have existed for a long time, what is the change that surfaced this issue.. whats the motivation behind this change? If we simply divide total qps/number of online brokers, we will probably bring down the healthy brokers as well and potentially impact other use cases. Can we compute some kind of max possible qps per broker automatically and set that as the max qps and start throttling after that?.\n.  max_qps/replicas will be the minimum peak qps a broker will serve when all brokers are up. My suggestion is we should also find a max. With your PR max will be max_qps/1 and this might bring down the server or the queries will be timing out. Conceptually, max_qps a broker can handle is the highest qps at which a broker can still meet the SLA.  \n. can you add the instructions to ReadMe and update the docs in the wiki.. Unrelated to this PR but have a question - Are we calling each server for every segment upload. That seems to be overkill for use cases where we have approx million segments.. Like the idea of coming up with some sort of list. But looking at the previous/current query is probably to short. We can instead maintain an access count for the segments in the last X minutes and load the top ones until we hit the physical memory limit * some X percent.\nAnother solution is to pre-fetch only part of the segments such as dictionary and inverted index, star tree since they are accessed entirely for every query. Forward index can be skipped since the part of forward index accessed depends on the actual values in the query.\nAlso, what are the scenarios where this will be helpful. If the servers have to go over all the segments any way, we may not really benefit from pre-fetching\n. Why do we need a config for num locks.  If there is no valid scenario where we would set this, we should just have a good default. Probably based on number of cpu cores.  \nOut of curiosity, what was symptom that prompted us to change this to 4 to 64. \n. At a high level, having segment fetcher and FS interface is redundant. We need to make SegmentFetcher work on top of FS interface and pass an instance of FS at runtime.\n. Amazing work. Thanks for cleaning this up.  will this allow us to get rid of shaded jars for pinot-hadoop and pinot-common? cc @jenniferdai . @jackjlli I think thats available by default and we do clean install during our build.. how can we extend this to low level consumer as well.. @mcvsubbu   For HLC, auto commit of offset is turned off and  we only commit when we flush the segment. If thats the case, then we can only compute the lag when a segment is flushed. Is my understanding right?. Agree with you that depending on external kafka monitoring service is not ideal.\n@jamesyfshao can we compute the offset in the controller without contacting individual servers?\nIrrespective of the solution we pick, we definitely need to generalize this to support various kafka versions (including hlc and llc), and other streaming sources.\n. Why not higher. What\u2019s the latest version?. @jfim They use it in their Presto/Pinot connector. I dont think prefix was intentional in our original design, it was more avoiding check for _OFFLINE and _REALTIME. Just checking for liveInstance is not enough, we should also check its removed from all IdealStates. \nwhy are we doing this on Pinot ? can we not call HelixAdmin.deleteInstance command, it should take care of everything.. @haibow looking into it.. Hi @haibow, We never faced this issue because we don't override offline segments in real-time + offline mode. Before I get into solutions, can you give us additional details about the scenario?. Is this something that happens every day or once in a while. Typically refresh use cases (where offline segments get replaced) don't have real-time.. is this PR part of a bigger initiative? If yes, can you create an issue and describe the high level plan. +1. I think there is a design doc for low-level consumer that captures this.. @Jackie-Jiang, thanks for making these changes. One suggestion is to break this PR into 4 different ones - one for each task\n\nRemoved redundant filter blocks\nImplement new method \"getNum(Non)MatchingDictIds\" in base predicate evaluator\nOnly expose predicate evaluator and data source metadata in scan-based filter\nBrokerRequest debug options should be nullable\n\nOverall, I think \"Removing redundant filter blocks\" is a good change. The new method is nice to have , though I am worried if we start using it in different places without knowing the cost of computing non-matching ids. Other two seems unnecessary right now. @sunithabeeram is trying out various optimizations for scan based filters and we might get rid of debugOptions once we are comfortable.\n. why are we not using ControllerChangeListener provided by Helix? We should get notified when there is a change in controller leadership.. Did we already implement this. why do we want to support this?. Who is asking for this feature. +1 to what Alex said. Another question is how do we know which function to use based on the metric? Are we going to configure a different metric for each percentile and add it to the same dataset?. @apucher this should be similar to configuring a derived metric in ThirdEye right? for example latency_99 -> PCT95(latency) and so on. \nlatency_99, latency_95 ... can be part of the same dataset so that they can be used in RCA. Thanks a lot for doing this.  This will help a lot in multitenancy. @pizzaz93 Did you face any issues with previous netty version? Can you add some description on why we need to upgrade?. Can we not get this by looking at tableconfigs? Depending on current state will yield different results depending on state of each node and it\u2019s also more expensive.. What would that look like?\nOn Tue, Sep 18, 2018 at 3:52 PM Jihao Zhang notifications@github.com\nwrote:\n\n@jihaozh commented on this pull request.\nIn\nthirdeye/thirdeye-pinot/src/main/java/com/linkedin/thirdeye/detection/algorithm/stage/AnomalyDetectionStage.java\nhttps://github.com/linkedin/pinot/pull/3191#discussion_r218620146:\n\n+import com.linkedin.thirdeye.detection.DataProvider;\n+import java.util.List;\n+\n+\n+/\n+ * The anomaly detection stage\n+ */\n+public interface AnomalyDetectionStage extends BaseDetectionStage {\n+  /\n+   * Run detection in the specified time range and return a list of anomalies\n+   * @param startTime start time stamp\n+   * @param endTime end time stamp\n+   * @param provider centralized data source for time series, anomalies, events, etc.\n+   * @return list of anomalies\n+   */\n+  List runDetection(long startTime, long endTime, DataProvider provider);\n\nWe can have a higher level API where the user only needs to define what\ndata it needs to fetch and the framework will fetch the data and then run\nthe stage with the data.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/3191#discussion_r218620146, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7ZypVRsAdgz57gYKyqHoeCvF36yhYks5ucXk1gaJpZM4Wugcd\n.\n. Create another PR for test. Approving this for now to unblock you.. The rebalance strategy in Helix is idempotent. We dont have to worry about\nthe edge cases as long as we compare and set api when we change the ideal\nstate\n\nOn Sat, Sep 22, 2018 at 7:57 AM Sunitha Beeram notifications@github.com\nwrote:\n\n@mcvsubbu https://github.com/mcvsubbu thats a good point. I hadn't\nexplicitly considered that, but the other thing that I was thinking about\nand the restart point may have same solution: what happens if another\nattempt to rebalance is kicked off either on the same controller or a\ndifferent one? If the final ideal state mapping is different between the\nattempts, are convergence and correctness guaranteed?\nI guess this will involve some sort of state maintenance to ensure things\ndon't step on each other/have silent failures. We could have the leader\nhandle rebalances and maintain local state (but won't have restart\nguarantees) or we have zk state and either a leader or other nodes handle\nrebalancing with heartbeats.\nIts possible that a first cut of this approach still doesn't handle these\ncases and we build this in later. Currently, the operational overhead of\nensuring no downtime rebalances (specifically where host count within a\nreplica group changes) is immense (often requiring another table to be\nsetup), so a solution that can alleviate the \"happy\" path issues may still\ntake us a long way.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/3210#issuecomment-423749767, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z2mw0gt8MeSOe-f0b713WluL8nnYks5udk--gaJpZM4W0rj-\n.\n. We check for EV = IS after restart. Pinot server sets\nshutdownInProgress=true when the node is shutting down. During restart, we\nset shutdownInProgress=false as soon as we start instead of waiting for EV\n= IS. We need to flip that order. Can you make that change if\npossible. Note the drawback of this is we might never have EV =IS in some\ncases and we will not serve any segments. We should have a timeout after\nwhich we mark the server ready.\n\nOn Mon, Oct 1, 2018 at 6:13 PM Xiang Fu notifications@github.com wrote:\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3247, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7ZySt6-djW-VIdxQXbTDmSK4dQ9zCks5ugr2qgaJpZM4XDJ1X\n.\n. +1 on adding new endpoint. It\u2019s ok to redirect old endpoint to new endpoint\nwith appropriate parameters to match the existing behavoiur\n\nOn Fri, Oct 12, 2018 at 6:51 PM Xiang Fu notifications@github.com wrote:\n\nAdding a V2 endpoint is better. It will help client upgrade/migration.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/3314#issuecomment-429501918, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z5vuUogdu4UhvO728BRkbTDrfEVXks5ukUc-gaJpZM4XZGHN\n.\n. Are we going to include every pruner that was run as part of the query processing in the response?. We are setting up the project in Apache. We will have release versions\nafter that.\n\nOn Wed, Oct 17, 2018 at 11:40 PM sunny800629 notifications@github.com\nwrote:\n\nWhen will the release version be issued?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3351, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z74y3Rzk1aCb_eQfbXNyorQ8fkaaks5umCJggaJpZM4Xsw1J\n.\n. > \"Heuristics: this is a best effort way of keeping the result correct\nbut reduce the memory footprint. The assumption is that, if the group\nis not showing up in the first 100,000 groups, then this group is not\nimportant, and probably will not show up in the final result. So it's\nsafe to just ignore this group.\"\nWouldn't it be better if we returned an error at this point instead? Aren't we taking a chance with correctness in the current approach?\n\nIt's possible that the result is not exactly right even today. Currently, we only trim at the server level (before sending the result back to the broker). This PR is setting the limit at segment/intersegment level as well. We discussed the possibility of having a MAX_GROUP_BY_LIMIT_REACHED boolean (similar to partialResponse) in response.. LGTM. lets add something to the response that tells the caller that maxGroupByLimit was reached.\nI dont follow the explanation for removing trim related code. . will using nodictionary help?\nOn Tue, Oct 23, 2018 at 2:13 PM Xiang Fu notifications@github.com wrote:\n\nThis is a big string column, each entry is about 11kb. (We store a\nhyperloglog object there.)\nI set the flush threshold to be small (10k docs to flush, however this\nissue is still there.)\nBelow are the stacktrace:\n2018-10-23 21:06:31 ERROR\nHLRealtimeSegmentDataManager_aslan_windowed_id_counts_REALTIME_1528490879397_0__1__1539042573420_hp-aslan-windowed_id_counts:400\n- Caught exception in the realtime indexing thread\njava.nio.BufferOverflowException at\njava.nio.DirectByteBuffer.put(DirectByteBuffer.java:363) at\njava.nio.ByteBuffer.put(ByteBuffer.java:859) at\ncom.linkedin.pinot.core.io.writer.impl.v1.VarByteChunkSingleValueWriter.setBytes(VarByteChunkSingleValueWriter.java:88)\nat\ncom.linkedin.pinot.core.io.writer.impl.v1.VarByteChunkSingleValueWriter.setString(VarByteChunkSingleValueWriter.java:79)\nat\ncom.linkedin.pinot.core.segment.creator.impl.fwd.SingleValueVarByteRawIndexCreator.index(SingleValueVarByteRawIndexCreator.java:51)\nat\ncom.linkedin.pinot.core.segment.creator.impl.SegmentColumnarIndexCreator.indexRow(SegmentColumnarIndexCreator.java:274)\nat\ncom.linkedin.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl.buildRaw(SegmentIndexCreationDriverImpl.java:327)\nat\ncom.linkedin.pinot.core.segment.creator.impl.SegmentIndexCreationDriverImpl.build(SegmentIndexCreationDriverImpl.java:198)\nat\ncom.linkedin.pinot.core.realtime.converter.RealtimeSegmentConverter.build(RealtimeSegmentConverter.java:141)\nat\ncom.linkedin.pinot.core.data.manager.realtime.HLRealtimeSegmentDataManager$2.run(HLRealtimeSegmentDataManager.java:300)\nat java.lang.Thread.run(Thread.java:748)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3373, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z6atPebZtuF5zIUkUHdMCj0NoZPsks5un4ZpgaJpZM4X2rNQ\n.\n. @mcvsubbu can you please clarify?. Anyway, we can add an integration test case for the quickstart? . test case?. StremConfigTest is failing. Can you take care of that?. Please wait until the checks pass.. Can we come up with the better api path. . can we fix the documentation and possibly add DirectMemory mode explicitly?\n\nOn Fri, Nov 9, 2018 at 8:57 AM Subbu Subramaniam notifications@github.com\nwrote:\n\nI assume you are referring to segment loadMode configuration. \"HEAP\" is an\nunfortunate wrong description, but it refers to directly allocated memory\n(so, it is off-heap). All the bytes of a segment are copied into bufers\nallocated via ByteBuffer.allocateDirect().\nMMAP mode means the segment file is mapped into memory.\nSee the class PinotByteBuffer\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/3454#issuecomment-437423479,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z8HJMQacSED9ZwlTq3BzHdolh0oYks5utbPzgaJpZM4YWFP7\n.\n. Can you give more details on qps, schema and metadata of any segment that\nwas successfully created?\n\nOn Sun, Feb 24, 2019 at 9:58 PM Sunny notifications@github.com wrote:\n\n@ly923976094 https://github.com/ly923976094 that depends on your\nhardware profile, OS, qps load, latency tolerance, and amount of data. It\nis a very hard question to answer, but we plan to have some write-ups on\ntuning Pinot. It should be available with our documentation in the next few\nweeks.\nIs there any specific document for reference? At present, consumers with\nhigh QPS have configured HEAP and often out memory @mcvsubbu\nhttps://github.com/mcvsubbu\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/apache/incubator-pinot/issues/3454#issuecomment-466882031,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z35iZRrC1kzRYt9x5Xi-hHXLwySxks5vQ3uVgaJpZM4YWFP7\n.\n. It is straight forward for simple scenarios. Is this a blocker or nice to\nhave?\n\nOn Mon, Nov 19, 2018 at 9:56 PM agrawaldevesh notifications@github.com\nwrote:\n\nI am wondering if there is an update on this ? I could use it too. I think\nit is a more broader change but looks fairly straight forward.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/apache/incubator-pinot/issues/3471#issuecomment-440152539,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z4wlbaIePTu9J1HIntE6g4uIUr2Eks5uw5l9gaJpZM4YcMiQ\n.\n. This is amazing. Yaml config gives us the ability to move fast. Before it gets too complicated, lets make sure we document all the configs in one place? Maybe have a schema for yaml format? We made this mistake in Pinot and would like to avoid that in ThirdEye.. Will review it tomorrow\n\nOn Wed, Nov 21, 2018 at 1:29 PM Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\n@jfim https://github.com/jfim requested your review on: #3506\nhttps://github.com/apache/incubator-pinot/pull/3506 Add configuration\nmerging tool.\n\u2014\nYou are receiving this because your review was requested.\nReply to this email directly, view it on GitHub\nhttps://github.com/apache/incubator-pinot/pull/3506#event-1981137696,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7ZzuMRyhlIYNCnUAduWT0ppQJlxozks5uxcXGgaJpZM4Ym1Tb\n.\n. Thanks. Can you add some test cases? . that was quick. it will be good to add size as well. Size for each posting list can vary. Renamed the attributes to numSegmentsQueried Processed and Matched. Do the names make sense? Any suggestions\n. @sunithabeeram Good eyes. Addressed all the comments and added a test case.. Why do we rely on access time?. Yes. Let\u2019s apply these to ThirdEye module as well. Should we break up the tasks in the validation manager into individual tasks and have different frequency for each task. Didn't we write a framework to manage all periodic tasks?. Not as of now. You will have to write an adapter. We are planning to add\nsupport for data sources that support JDBC such as MySQL and Presto.\n\nOn Wed, Jan 9, 2019 at 9:42 PM Tao Feng notifications@github.com wrote:\n\nIs it possible to integrate thirdeye with druid?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/apache/incubator-pinot/issues/3673, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z1kceZ3ikDo-MYdAt9PmHVvjzY-Zks5vBtLVgaJpZM4Z40yx\n.\n. Awesome!  How can we make sure that it can parse all the existing configurations in Zookeeper?. Stop temporarily or permanently?\n\nOn Thu, Jan 17, 2019 at 10:23 PM Sun-Li notifications@github.com wrote:\n\nThe table has kafka real-time consumption configured. How do I stop this\nconsumption\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/apache/incubator-pinot/issues/3717, or mute the\nthread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z1zfpHyHXv-DV0EiLQvQz_0kecMNks5vEWffgaJpZM4aHTLY\n.\n. @mcvsubbu ability to stop consuming events but still be able to query is a valid requirement. For e.g. there was a bug upstream and its pushing bad data or a large volume of data to Kafka. It's better to stop consumption but be able to serve whatever is already consumed.\n\nI think it should be as simple as pausing the PinotController so that new segments are not created. It's probably ok to let the current consuming segment finish.\n. If the upstream is putting bad data and we are not able to create segments, we will (effectively) stop consuming\nThat is not necessarily true, right? If a metric(revenue) value becomes -1, we can still consume and generate segments with bad data which may not be desirable. Anyhow, this is just one such instance. We can always provide workarounds for each of these scenarios but having the ability to pause/un-pause consumption is definitely worth it. I see this similar to pause/unpause feature in Helix Controller or enable/disable a partition/instance/resource. \n. +100 for doing this. \nqq: why do we need to create a license file for each library? for e.g. args4j is distributed under MIT license. https://github.com/kohsuke/args4j. We can just list this library in the NOTICE file under MIT licenses section rt?\n. What\u2019s the benefit of changing this?  What happens if minion merges two segments with different ranges?. Good example. With your change, how can we store partition 1,3,5? \nSorry, my bad. From your example, it looked like we are converting list of range to a single range. \nConverting it to list works. Let\u2019s chat on second part on why this change is a must apart from reducing few bytes in metadata. \n. Thanks @sunithabeeram  and @mayankshriv for quick review. I should have mentioned this earlier, this PR is to get high-level overview of the concept. Once we get agree on that, we can start looking into the actual implementation of PinotObject. I will push another PR that uses PinotObject, that will give a better idea on the benefits of PinotObject Type.. Thanks for the patch. Are these the only tests that fail on windows?. > we can track the cluster change queue time (also, the logic is much simpler than the Helix batch-mode).\n\nIn order to add proactive check for all type of changes (not only external view), the change handler must implement the same interface, thus making the change big.\n\nWhich part of the new code handles the deduping part. Is this already merged?. Are we not using compare and set.  Why do we need time based checks\nOn Thu, Feb 28, 2019 at 8:20 AM Subbu Subramaniam notifications@github.com\nwrote:\n\n@mcvsubbu commented on this pull request.\nDont we also need to check time of idealstate update (step 3) ? The entire\nsegment metadata commit should happen within a time t <\nMAX_SEGMENT_COMPLEZTION_TIME_MILLIS, so it is good to check before\nidealstate update whether that time is already past.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/apache/incubator-pinot/pull/3893#pullrequestreview-209170058,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z5CiEpIB5H6gmH-UosniFMuC9Xlmks5vSAHRgaJpZM4bVu5M\n.\n. Does it need the entire segmentGenerationConfig? How can we make these record readers work for both realtime and offline. \n\nAlso, we should probably move these record reader implementations out of pinot-core\n.  can we set a maxRate instead of setting samplingRate? we can use the RateLimiter from Gauva to implement this for now. This will make the rate adaptive and at low qps, we will still get all the logs unlike sampling where it will always filter.\nWe can then move to BurstFilter (https://logging.apache.org/log4j/2.0/manual/filters.html#BurstFilter) when we move to log4j2 . thats right. tryAcquire is non-blocking (please verify). Agree with comments. Looking at the existing code, I felt it could be handled within BaseTableDataManager - have the cache (you have it), just update it in removeSegment and use that in handleMissingSegment (don't increment the metric). Am I missing something?. was 1GB enough?\n. log e as well\n. dont know why this is 200, we should set this higher like 30 sec,\nAlso add zookeeper.connection.timeout.ms    and set it to 10 seconds\n. Can we split this into two pr\nOn Apr 18, 2016 3:10 PM, \"Xiang Fu\" notifications@github.com wrote:\n\nIn\npinot-core/src/main/java/com/linkedin/pinot/core/realtime/impl/RealtimeSegmentImpl.java\nhttps://github.com/linkedin/pinot/pull/107#discussion_r60143355:\n\n@@ -245,6 +252,12 @@ public boolean index(GenericRow row) {\n     minTimeVal = Math.min(minTimeVal, timeValue);\n     maxTimeVal = Math.max(maxTimeVal, timeValue);\n-    try {\n-      long msgEventTimeLagInSeconds = System.currentTimeMillis() / 1000 - (long) toSecondsTimeConverter.convert(timeValueObj);\n-      serverMetrics.addTimeredTableValue(tableAndStreamName, ServerTimer.CURRENT_MSG_EVENT_TIMESTAMP_LAG, msgEventTimeLagInSeconds, TimeUnit.SECONDS);\n\nGood point, I will adjust msgEventTimeLagInSeconds based on\nincomingTimeGranularity.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/pull/107/files/a68397ebb682710975bbd488f90989a36ad724e9#r60143355\n. we added size as part of the time granularity, how do we plan to support 10 minutes since epoch\n. what does this return 1970?\n. I think the logic should be compile the request, check the time input in the query. If there is a start but no end, we cannot use cache. There might be other scenarios we cannot use cache. so have a method that check if a request meets the criteria and only then you go through the path of updating cache \n. rename to GenericTimeConvertor or DefaultTimeConverter\n. remove this, the rest of the code should handle this correct, it has lot of things like setting default value, counting error rows etc\n. you can remove this from here, next section should take care of this\n. Add a standalone unit test for this class.\n. what if we simply call the other method releaseConsumerAndIterator for each consumerAndIterator\n. have a interface and two impls for singlevalueDataFetcher and one for multivalue since most of the apis will be mutually exclusive\n. Why cant we pass the as part of the call itself?\n. its not intuitive to set the docId in initNewBlock and call this method. This can also introduce multi threaded issues and makes debugging harder.\n. how do we know that the value is double?\n. this is implementation specific not sure if fetcher is responsible to calculate the hash code of value\n. I prefer retaining the old api even though startIndex is 0 in most cases. \n. but the caching is supposed to be done by the caller right?\n. see my comment above, we are not gaining anything by separating the two calls\n. without support for handling all data types and single value/multi value, this class is not adding much value.\n. this should not be in data fetcher.\n. add NEQ\n. is this validation done during the initialization of keyGenerator?\n. why should we expose this? I see the dictionary and blockvalset is exposed. I thought the purpose of this class is caller need not worry about these classes\n. Better to have SingleValueDataFetcher instead of having \"single\" word in every function\n. remove this \n. can you explain the logic, how many passes are we doing over the data to compute OTHER category\n. throw unsupported exception, if it reaches here.\n. extract each if/else block to a separate methods such as parseGroupByTimeResponse, parseGroupByTimeDimensionResponse parseGroupByDimensionResponse\n. do we need a interface that just takes length and resultHolder without values? Its weird all functions have to implement this method. Its probably better to have only one method aggregate(length, resultHolder, values) something like that and pass null for count aggregation function since it does not use it any way\n. please add a comment to remove this when the HLL bug is fixed\n. nice \n. why do we need to duplicate this logic in multiple places.\n. This might throw exception if the property is not present in the metadata.properties. You might want to either check if the configuration contains this property or pass in default null value. \n. I thought it will be a good tool to understand how often items get evicted and may be come up with a better eviction strategy.\n. can we use high level/low level consume to name the methods. hard to keep track of what is V1 V2\n. please check  partitionSet == null, don't remember if Helix can return null here.\n. instead of doing this for every column, compute the columnName to index map once outside the loop\n. is this logged per query or only once per start\n. update the comment, its terminating if its leaf or (all filters are applied and aggregatedDocId is valid)\n. need a newline here?\n. we know your favorite food now :)\n. is it possible to write a regex to extract out the directory, segmentment name, columnName.ext ?\n. does this hold good for both merged segment format?\n. add a select count(*) for sanity check\n. comment on the difference between this class v/s previous class\n. this method is re mapping the buffer. Either remove this method or don't re-map the file\n. Yeah, I noticed that while testing but I could not find the correct way to handle it since we don't support remove in new format. Only other option was to delete the segment so that we download it again. Any ideas?\n. I dint get this. Are you saying we are overwriting the bak up file after failure. I thought I had explicit check to not do that.\n. yes, currently we don't use that for single value fields. Was not sure of the implication if I fix it. Will fix it anyway :)\n. Following the same logic followed in generating inverted index. Easier to debug when things go wrong if we have everything under the segment directory.\n. Don't know, why would it throw exception? Can you point me to the PR\n. thats done earlier in this method.\n. Good point. Lets move the segmentDirectory initialization to process method\n. I thought I had handled MV, let me check again.\n. this is back up of original segment metadata file.  Once the back up is created we might have changed the metadata file and then failed. If we create the copy the file again then we will copy the new modified file and will lose the original metadata file.  What we could do is in the beginning if there was metadata.properties.bak file copy that to metadata.properties and remove .bak file. Then we can create bak up file always.\n. lets have some name that represents the functionality, may be offHeapFormat?\n. why should we append _OFFLINE, does this mean it wont work with realtime table?\n. do we have constants defined some where for OFFLINE/REALTIME\n. resourceNameCommon -> tableName\n. why cant we have these methods in IntPair. Please compare the methods in Gauva Range and see if we can derive some names from that class. I wanted to use Range class at some time but I think they are immutable which forces us to create too many objects.\n. Preconditions are expensive, lets remove them.\n. we might have gone beyond the endDocId in the previous loop (line:177), we should check getRight is less than endDocId every time we add to newPairs\n. formatting is off. Its probably better to get maxTime from Pinot every X minutes?\n. better would be select max(%s) from %s where time>prev_max we have seen so far. This will apply time pruning and we would avoid going over many segments\n. call refresh on resultSetGroupCache before calling get. We dont want to use cache for the maxTimePinotQuery, only way to enforce that is to call refresh that will re-run the query\n. why r  we hard coding 21 days\n. we have too many v1 and v2 etc. Lets use some thing representative. You can call JAVA_SER and OFF_HEAP or something like that\n. use the format name to name this file\n. what is this text?\n. need a new line here\n. better to check for resource being null? I know it cant be if classpath is set properly but hard to debug a NPE. I suggest adding a warning if the resource is not found and move on.\n. add a todo here, instead of making multiple calls to pinot, we should enhance timeserieshandler to take multiple ranges and construct appropriate query\n. add a comment on what this method is \n. how will this work, are we assuming blocks.length == dataschema.size().\n. why are we skipping all derived metrics? we need to introduce a new boolean selectVisibility in fieldSpec. When it is set to false (default is true), we can to remove the column from selection result. For autogenerated columns like hll we can set it to false. \n. when will the FutureCallback get invoked? is it internally put into another  queue and can be executed in any order. \nMy main concern is we have already processed the request and response is ready but instead of sending it right away we put it in another executor service to send the response back. \n\nI haven't looked at the internals of the implementation but java docs say \"This overload, which does not accept an executor, uses directExecutor, a dangerous choice in some cases. See the discussion in the ListenableFuture.addListener documentation.\".\nLooks like directExecutor means execute runnable in the same thread. Why do they say it can be dangerous?\nAlso, this code can benefit with some formatting. It's very hard to parse especially with the anonymous inner classes in the arguments.\n. where is this used? \n. how do we come up with the configuration that will keep the same behavior as existing code?. Shouldn't we use cachedthreadpool to maintain existing behavior. \n. yes, they will be derived from other columns and we want them to be visible in the selection result.\n. typo workaround. Can you add some comments around incompatibility issues between 0.8 server and 0.9 consumer.\n. null check\n. null check\n. is this the default? lets change it to 2 minutes for now. We can probably log time gap between selecting the server to commit and uploading the segment\n. what does exp mean, add a comment or rename it \n. remove this comment or change to reflect the unique constraint for email_config\n. email config references the function ids as well. We need to compute the mapping with new_function_id and set emailConfigurationDTO.setFunctionIds before calling save\n. whats the logic, why did we have 2 and why did we change it to 1\n. we already support converting between epoch formats e.g millis to hoursSinceEpoch, millis to daysSinceEpoch etc\n. That's right. will fix it.\n. will do\n. I was expecting to support string format as well. But you might be right, we might be assuming long in our code.\n. will do. \n. SDF supports ISO format right?\n. why not map and rename it to debugOptions. That will allow us to add more options without changing the thrift protocol. Note none of this should be exposed to users, this is for dev only for debugging.\n. Thanks JF for making this change. +1 on making enableTrace part of this.\n. why is this extending segmentrebalancer?\n. I think i figured that it's re-using lot of methods from segmentrebalancer. This is fine for now but eventually, we need to extract them into separate class.\n. convert this into a retry loop and retry 3 times and have a sleep between re tries.\n. KEYWORD --> DIMENSION_VALUE. Add java doc for these constants\n. why can't we get this from collection schema -> timegranularity\n. why should we order it according to schema order.\n. looks like duplicate of previous section, push this to a different util method and re use it\n. that was the initial idea but I thought it would be better to automate this by running it as part of the controller. Similar to retention manager, we can schedule this in the controller and it can automatically clean up segments after they are removed from Helix. We can be more conservative and check that the files are older than 7 days before deleting\n. should this be less than?\n. unix env -> system env \n. log warning. \n. have variable name for true/false for readability\n. add a comment on why we need these two lines. \n. are you assuming this becomes null when we overflow?\n. if we are iterating the key space, better to remove keys while iterating right?\n. same as above, we can remove while iterating.\n. size of priority queue = size at this point?\n. keyIdsToPurge\n. we probably have created these comparators elsewhere, can we move them to a ComparatorProvider/Util class\n. where is the IntPair class, maybe we should have this in the same place.\n. good job adding the registry for managers. rename DAO to BAO ?\n. DAO -> BAO \n. what is 50?\n. was this added for testing, should we not get this from config\n. one suggestion is to create daoregistry here and pass it to all resources. Helps in writing test cases\n. do we have alias for metric? at some point, it's better to send ID for metric and alias\n. remove sysouts\n. better to write a parser instead of looking for the occurrence of every metric, add a TODO:. It's ok for now but when the number of metrics increases and we start supporting expressions across datasets, this will impact performance.\n. Don't you want to take maxSize/initialSize\n. why not return null\n. same here, why not return null\n. better to use Double.compare(d1,d2) right? there are some nuances in comparing  doubles\n. I saw this code elsewhere\n. tx. Agree, it's a trade-off between performance and code duplication\n. can we make it name based DAO_REGISTRY.register(\"anomalyFunctionDAO\", anomalyFunctionDAO);\n. Add javadoc and comments to describe the purpose of this method.\n. avoid ternary operators as much as possible\n. better to create the functionfactory outside and pass it as argument instead of passing functionConfigPath\n. Log.error or warn\n. 0.9 --> create constant. Add a comment that % to drop needs some more experiments\n. do we need this? we already have the ability to set maxCapacity rt?can we simply set it to very high value to turn off the trim mode\n. please group the data structures that get used after we reach the max capacity and add a comment\n. i know this existed before this PR, but why should we expose this in interface. Isn't it the responsibility of the routingTableSelector to use LLC or HLC?\n. I am having a hard time understanding this class. Can we make it simpler? \n. scratch that, realized we have routingtableselector and another routing table implementation. one for LLC and one for HLC?\n. looks like we have two update path. 1. periodic based on RATIO_MAP_ENTRY_MAX_STALENESS_MILLIS and 2. ZK change listener.\nis my understanding correct?\n. I suggest using AtomicReference for routingRatio\n. you don't want reading from ZK in this path. \nThis method should be very simple and fast since it will be invoked for every request\n. why would it be stale, if we are listening to the changes?\n. wrong package. Should it come from javax?\n. Good catch. Fixing it\n. awesome. This should ensure we only monitor the relevant tables\n. add a comment that why we don't need to do anything here\n. If this is generic enough, I suggest moving it to a separate file so that it can be reused in other tests. If not, leave this here.\n. no new line at the end of this file\n. null or empty check?\n. based on optimize method, it looks like we will always return a new copy of filter tree which means childQueryTree will never be equal to optimizedChildQueryTree\n. - break this method into multiple methods to improve readability.\n- it looks like we always rewrite the filterTree even when there is no optimization possible\n. create a constant for 50 and name the variable appropriately. Add a todo to make it configurable\n. create constants for 8_GB 100MB etc\n. Onboard -> AutoLoad or AutoImport\n. change all variables accordingly\n. this is for ingraph tables only right?\n. use some constant or US/Pacific\n. what if we have created table but not added any metrics? Its better to read the schema and look for some specific columns in the schema\n. fixed\n. rename this to ingraphDashboardConfig\n. remove this\n. javadoc for the method\n. should we not check the database if there is something already running? looks  like we are maintaining the list of currently running jobs in memory.\n. can you add comments on what this if-block is achieving?. Also, extract it to a different method.\n. typo retries\n. better to rename it to SyncAnomalyMergeExecutor and AsyncAnomalyMergeExecutor\n. Good job on handling both the cases.\n. looks like the formatting is OFF. \n. are we sure we will always get DocIdSetBlock here, I thought we might get MatchEntireSegment when we dont have filters. If we are sure to get this all the time, I suggest changing the docIdSetOperator to return DocIdSetBlock and remove the cast here.\n. good job and removing this code\n. how can we know the numEntriesScannedInFilter  when we call the constructor?\n. so when we return this, the explicit cast above (i have added a comment there) will throw exception\n. why are we returning zero here? Its possible for scan records even when we use star tree. I am ok not implementing this for now and creating another issue to track it\n. this assumes that we have applied all the filters when we get the nextBlock. This is not true.  We should call _filterBlockDocIdSet.getNumEntriesScannedInFilter() after the agg/group by/ selection is finished\n. Huge improvement here in terms of readability.\n. if we are using this for both presentation(UI) and background job, we should rename getTimeSeriesResponseForPresentation method\n. suggest moving this to another Resource, may be DetectionJobResource or even Admin is also fine. \n. this was for testing. You should probably get the thirdeyePinotClient from else where or pass it when resource is getting created\n. add a TODO to support more compare Mode. Also with the new change to sign test algo, we might want wo4wMean right?\n. will timeseries have data from start to end?\n. remove this or take the params as arguments\n. Actually, the right solution would have been to set the totalRawDocs outside of the segment level operators, in mcombine. Also, it's not clear how adding the transform operator would change these agg/groupby/selection operators.\n. We want to avoid operators accessing api's on datasource. Accessing datasource directly makes it hard to add support for optional dictionary.\n. should we have ignore unknown fields on this\n. add a TODO to make this abstract after removing deprecated classes\n. add a toString method, will help in debugging\n. This means we will never return partial results when there is an exception in one segment. That breaks the contract and not sure if that even a good idea. I suggest keeping the existing code but we can remove duplicate code by extracting it to a function.\n. love the simplified code block\n. how about MINUTES\n. why do we need this hack?\n. instance config change needs to be handled more efficiently. The code logic looks very complicated for the what we are trying to achieve\n. when markDataResource is called, we will always build routing table right?\n. why is git not showing this as a move?\n. More than multi threaded, I think this was the slowest part. Since we do one segment at a time. We should have a method to do addSegments(segmentMetadataList) or something. This will ensure that there is only one write to ZK.\n. yeah, that will be faster right instead of uploading one segment at a time? Anyhow, lets measure how much time we take to load 1k tables with this change.\n. why does it need metricName?\n. why can't the scaling factor be less than 1?. \n. its better to invert the loop, if we know the time buckets for which we apply the scaling factor, we should go over that instead of going over the entire timeseries and checking if there is a scalingfactor. Also this assumes that scaling factor is represents the factor as the same granularity as data. For example, if scaling is 1.2 for nov 1 to nov 5. We have to break it down to 5 minute interval and set scaling factor 1.2 for every 5 minutes.  This is ok for now but we need to change to fix this.\n. we don't use _  in thirdeye code\n. we are not doing smoothing?\n. can we log this only when we have scaling factor configured?. this seems to be duplicated across detectiontaskrunner and mergeexecutor. Can we extract it to a method?. this is inefficient, it will make one query for every time bucket and check if there is an override.\nits also not clear if the configoverride is specified for every time interval or only the start time and end time.\nI think a better logic is to query for all overideConfigs that overlap with the window start/end time range. If you dont find anything we should simply continue with existing logic.. I see, I dont see OverrideConfigManagerImpl class as part of this PR. Is that already checkedin?. create a constant for this variable. who is invoking this method?. we should not be calling nextBlock in the constructor. This should happen in next(). is this casting permanent or temporary? . why is dataFetcher exposed outside of projectionoperator?. is it possible to not leak datafetcher outside of projection operator?. use Immutable Pair from Apache Commons. Avoid using internal data structures from Pinot. is this ok with java 1.7, lets make sure code compiles with 1.7 as well. have a static method BrokerResponseNative.emptyResponse(). Makes it easy to set some defaults. why create arraylist/hashmap every time when we don't have exceptions most of the time.. do we need the explicit cast for double. I think there is better format pattern to not add a decimal point where the result does not have any decimal. Something like 1.# or something.\nwhy not check for instanceof Number?. having explicit BrokerResponseNative.empty() is better.. will be good to have all metadata key constants defined in datatable. May be create an enum. why should we remove this?. why do you call it shuffled? shouldn't it be combined or reduced. we should still have full coverage here for all data types, even though we have only  double and long. @mcvsubbu can you please review this section. you can set the defaultValue in the java code. PathParam can have the default value as well.. what is the second argument that is passed as null?  . can you extract new TraceRunnable() anonymous class to a separate class SegmentExecutableTask or something like that?. when will this be null? where is the else block. do we have multiple combine operators? i.e. group by, aggregation only, selection?. There is a lot of boilerplate code that can be extracted to one class. we dont need this anymore?. better to keep the behavior symmetric across all operators, just check for blockId = 0 and return null for everything else?. will this cause an issue during server/broker upgrade. can you re-order the log statement. Print the move statement first and then try the delete. Also if failing to delete must be warn/error ?. ok. Makes sense to do that as part of a separate PR. Agreed!. why do we need a new method for this?. We should simply trigger the same code to generate brokerIdealState based on the tenant configs right?. I was referring to the need for rebuildBrokerResourceWhenBrokerAdded, why cant we simply call    _pinotHelixResourceManager.rebuildBrokerResourceFromHelixTags(tableName);. This method probably has the same check that instances in idealstate == instances from tenant config. If not, this logic must go into that method.\n. There is no value add in seeing this log. This will probably cause more confusion. I suggest removing that.. lets not hard code this. It's ok to throw error if this is not configured. why do we need to create HELIX_ADMIN here without knowing ZK_ADDRESS. why not re-use the Immutable Pair from apache commons. use logger. you might want to get the name of time column as input or derive it from the schema. . this should be part of AnomalyFunctionDTO.toProperties(). we can probably move this to TimeUtils if there is one else create one and delete this class. Lets avoid creating catch all Util classes. This class needs very good documentation on every variable/method and explain the java doc on how this class will be used in the detection executor. I suggest using TreeMap here so that data is sorted on time.. You can change the java doc to say that this will result will be sorted.. i.e after using treemap instead of hashmap to store data points. I thought you need to compare each element within this class else this might result in infinite recursion, I might be wrong please test this. isRealtime --> queryRealtimeTable. rename to computeTableName. you can still keep them here, just make them private. In the init method, call getDataModel(), getPredictionModel() etc and set these variables.. is this applicable only to CSV format?. should we not check the file format type and use the appropriate readerconfig based on filetype?. why do we need to set these things from outside. this should be abstract and let the actual filter operator implement it appropriately. The way this works for sorted , inverted, scan can be completely different. It should not be limited to using predicatEvaluator. We can potentially use bloomfilter for no dictionary columns to compute isAlwaysFalse.. its ok to have a base implementation that returns false. But there is no need to do predicateEvaluator.alwaysFalse() in the base class right. This will avoid having a bunch of new setter methods on filteroperator. . can you add a simple string that this is trying to split. I possible avoid complex regex. It's ok to break it up into multiple steps.. why do you need this? I suggest removing it . +1 on batching. Helix applies this logic internally on updating current states but does not expose any API to clients. @jfim implemented something similar on handling notifications from Helix. It will be good to have a generic API to batch notifications and writes to any HelixEntity. This can be done in another PR. Having a lock per table will eliminate failures due to race conditions on the client side. The only failure will be because of the race condition on ZK which won't happen since all updates to IS are done from leader controller.. why only 4? this might be ok now but eventually, you will have a lot of LLC tables. Why can't we create a lockMap one for each table?. should we not reorder the if conditions so that happy path is not expensive. For example, for Double dictionary, it would check if rawValue is Double first and then String. We can also know if its single value or multi value from the schema and avoid checking for array type or atleast push array type to the end.. can we avoid updating min max if the value already exists in dictionary. return boolean to indicate if newEntry was added or not and use it to avoid updating min max. can we call it ThresholdBasedAlertFilter. better to use min max right instead of UP, DOWN threshold. you can use beanutils to get the field value via reflection. . MergedAnomalyResultDTO is defined within the framework, is this getting exposed to the library?. InstanceConfig and LiveInstance change listener must also be registered to spectatorManager. Add a log when the ranges are not equal and chose the smaller among the two. Explicitly state that this can happen during DST. I think all rest resources are part of that package for now. We haven't done a good job on separate needed for dashboard v/s not. I don't know if we have many such cases. For now, keeping all rest resources in one place is probably the best solution for now.. Date pattern to hh to HH and a to z or include that time zone in the email. use  a pattern that avoids .00 if value is integer. Why always in Hours? I think there is nice method in DateTime that gives duration in readable form. is this Apache license compatible. you mean escape ( [ ^ etc?.  I am wondering if we should just quote all segments before and after characters % and _?. It seemed to work but I did not test the traceEnabled part. But good point, I will encode the query part.. This is a temporary workaround right, we should be using Helix API to get the EV - that would have handled compression automatically.. Thanks for adding this. . not really. changing it to hashset. it was changed to find. Not sure why the PR is not reflecting it. will update the PR again.. for some reason, eclipse needs that.. Good point. Should be easy for regex since we don't have to differentiate based on datatype. I will delete this method as I removed the support for LIKE syntax. removed. We should select the format looking at all the values right. Having a different format for each value is not good. . i prefer to keep the \"function\" keyword here if possible unless this is the company wide coding convention. can we add more information in the exception message - exact fragment with error  using the offendingSymbol, line, charPositionInLine. what happens for <  > and ! =.  if there is space between the characters? \nAlso =! should throw parsing error?. This happens only at start up and should log only once when the ServiceStatus is inited.. why do we need these checks? can we not expect the caller to use right implementation based on type. We already do a check and conversion while ingesting.. is this thread safe or  we need atomic integer. javadoc . what is the purpose of Aggregator, can we add javadocs to all the interface and their methods. We should probably rename the test class since the original class name is renamed. The name of the class is too generic. Why not call it XXXEvaluator. Util classes generally have a bunch of static methods.\nWhat is the purpose of this class. Too generic name, you might want to call it RCAFramework.. What does frameworkResult mean? Is the result of a single execution?. if it's representing timerange, have an abstract class TimeRangeEntity. CurrentEntity, BaselineTimeRangeEntity can extend the TimeRangeEntity.. Also, provide sample urn for each entity.. why is this package level access . +1 on variable names. Please evaluate the need for a util class to achieve this functionality.. move this to its own class. typo datset. the pipelines might need additional configuration. It will be good to come up with a standardized way to pass in the configuration needed for each pipeline.. rename to PipelineInstantiator or PipelineLoader - anything other than utils.. this constructor has become quite big. We need to clean up this class - it can be part of another PR. urn -> URN. I would break this into multiple rest API calls instead to overloading one method\n- viewAllEntityMappings\n- ViewEntityMappingsFrom\n- viewEntityMapingsTo. what should this payload look like, please add java doc and an example. why is create taking payload and update taking explicit parameters?. Shouldn't all methods return Response object with a success/failure code?. Urn to URN in all classes. don't we need service to metric?. why should entity have a score?. what is this method trying to accomplish?. move to a separate file. what the key in pipelineResults (can we rename this to pipelineResultMap). concrete e.g.?. add precondition checks and early return if you are assuming something in the context. I think this method expects there is a metricEntity in the context and there is a current context - you can assert these using preconditions instead of throwing NPE. move the core computation to a different method and add javadoc on that. . why are we only looking at anomalies in the current time period. We should also look at the ones we have seen previous weeks. . constants for \"thirdeye\" and \"dimension\" in base class?. Why not call it ContributionAnalysisPipeline or DimensionContributionAnalysisPipeline or DimensionAnalysisPipeline. fix variable names please mdto ddto . I like this filterContext method. quick question: why can't we provide this method on pipelinecontext class.. please add java docs on computing scores, I prefer having a scorer interface and we have a specific implementation for computing a score for an entity. This need be part of this PR.. I just saw that you already have DimensionScorer \ud83d\udc4d . do we still need this?. can we do -1 * Double.compare(o1.score, o2.score) for readability.. does this mean entity has to always have a score? \nI thought only a pipeline will attach the score to an entity. An entity by itself should not have a score right?. add newline. what are the inputs? entityURNs?. whats the string in the inputs map, lets name the variable appropriately. inputs gave me a notion that its array or list. Can we rename it to represent the result of one execution. string is the name of the pipeline?. where do we use inputs? Do we return the same result without checking the inputs?. add new line. please name the variables accordingly. Better yet have a concrete class to represent PipelineName. extract thirdeye and dimension to enum constants. move methods after the constructor. keep variables at the top of the class. why do we need this constructor? Shouldn't this class be abstract?. any reason to not have endTime in the event entity urn?. Dto -> DTO. Got it, I confused this with Entity. What about the anomaly that occurred in prior weeks during the same time that can possibly explain the anomaly we see this week?. please introduce an interface for Scorer and have specific implementations. This allows us to try out multiple scorers.. DimensionStandardizer?. please validate the input in the context. What if the baseline is not provided in the context, do you want to use WoW as default baseline.. csv file?. +1 Agree on the default values - it should be the responsibility of the caller. . can you add instructions on how a dev can bring up this server locally?. please add a comment that we can get multiple values if the metric is a ratio. can we change client to datasource?. why is this called Client? it seems to represent clientConfig. public is optional in interfaces?. break it into multiple lines. easier to parse and add new validation logic. why are we importing this?. this is very similar to the way we compute data points to display anomaly right. Why cant we re-use existing code?. Can we discuss the purpose of this PR tomorrow. . groupIds is too generic, lets call it anomalyGroupIds. keep the text same as before and change the link. We can revisit this once we have some feedback. avoid string concatenation use {}. the default values for statistics when we cannot compute needs to be handled properly in the metadata. Please create an issue to track that. Currently, the caller has no way to know if the max value, cardinality etc can be trusted in the metadata.. this can break something? Doesn't group by etc depend on this. A better default is the number of rows in the segment?. +1 on this. what is this trying to achieve, please add comments.. I did not want to have too many if statements in the code. once passed becomes false, the remainder of the AND expression should not get invoked. There should be no significant performance penalty . I missed this comment, will make this change in another PR. why is this a string? can we have a typed return value. add java docs for the methods. this pollutes the log, change it to debug or log it when max time changes. if this is holding datasetConfig, then we should call it DatasetConfigCache. collectionsRef -> datasetConfigListRef. we should pass the appropriate references to the impl instead of letting datasource specific class access ThirdEye internal classes. Also why is this not part of DataSource ? . add a link for docker download URL. keep the old constructor and invoke the new constructor with current hostname. Agree, I will check with Subbu and remove bunch of features we developed for migration from HLC to LLC. good idea. Helps with re-factoring.. we can add the check in the factory that sets up the right routingtable for each table based on tableconfig. . its logged in markDataResourceOnline method.. overflow long you mean? I dont think we can handle offsets that overflow long.. dropwizard.redirect.bundle.version. Did this work? There was some issue with this. Not sure if local test db support them. better to force the wrapper to implement closeable and use IOUtils to close it. If not, we will have to handle the exceptions from close method. we dont use the prefix \"I\" for Interfaces.. java docs and rename to PinotKafkaConsumer and extend closeable. PinotKafkaConsumerFactory to keep it sync with PinotKafkaConsumer. move Closeable to PinotKafkaConsumer . I suggest keeping the old constructor. It helps in validating the input buffer size. the multiplier Integer.SIZE/Byte.SIZE can be a constant. I would like to have a method in Pinot that takes DateTimeSpec and a value and returns a DateTime object. This can be util or part of this class. can we take DateTimeFieldSpec instead of individual each value. One reason why we had soo many methods for addTime was every time we enhanced TimeFieldSpec we added methods for every possible combination.. add java docs explaining the behaviour, is it inclusive or exclusive. why did you remove it, its ok for docIdSets to be immutable, i.e the min and max doc id cannot be changed later.. this may not work, you might want to compare with epsilon or use BigDecimal https://stackoverflow.com/questions/9992006/equals-operator-for-zeros-bigdecimal-double-in-java. I got the logic by reading the code, it will be good to document the logic on top of the method.. what is the contract of advance, find matching element that is greater than or equal to targetDocId or greater than targetDocId . this probably wont work if two iterators exhaust in one round right? lets say the first and last iterator exhaust, we will copy the last entry to the first position in the array but that would  be pointing to EOF.\nAnother case is if the last iterator exhausts, we copy the same value to the same position.\nsee if you can you simplify the logic by maintaining a boolean array for iteratorState.\n. why is this throwing exception. How will the parent operator do bitmap intersection if we dont return raw bitmap. As per ASF guidelines, we prefer not to have author names in the code.. Is this a test class or a DummySegmentFetcher?. - check for existing of the file first\n- after downloading, check for size/crc to ensure the data is correctly copied\nAre there different types of exceptions? If there is a connection break, It will be good to retry.\n. this can be info since its one time during start up. can be info and log the configuration if its not too big. lets use the eclipse stylesheet to format this code.. do we need to create one instance for every block?. why Evaluator instead of converter/transformer/formatter. these can be optimized further. We should set up everything in the constructor so that the processing for each value is low.. instead of checking this on a per record basis, setup epochToSDFConvertor and SDFToEpochConverter etc and pick the right converter in the beginning.. missing apache header. these classes need not be in operator.transform package. It can be used in other places such as segment generation. . is it possible to know if the timezone was set in the inputformat and use UTC as default only if the inputformat does not have it?. It would be nice to have a class TimeSpecFormat that takes in the format and provides all these getters.. Move this to the DateTimeFormat class (current datatimespecutils class). rename CHRONOLOGY to EPOCH_START_CHRONOLOGY. whats the contract on these methods. Please add java docs for these methods. Are these methods called only once or multiple times. Can the implementations override these methods. Can they return a new instance every time getXModel is invoked?.\nIf this is one time, then I suggest renaming them to init or create or setup - something that indicates that this will be called only once when the Function is being setup.. why is this part of buildStarTree method. Its better to call validate method in seal method and keep all the validation in one place.. will this include the old time column as well? \n. we should deprecate usage of getTimeFieldSpec right, else we might be adding the same column twice since getDateTimeNames might return timefieldspec as well?. why is this part of this RB? . have a default and throw exception if we cannot handle the data type. We should be able to support conversion here right. There must be some method in Pinot to convert something from one datatype to another. We have two cases its either a String or Number. If its Number then use the right method to convert the data to appropriate type https://docs.oracle.com/javase/7/docs/api/java/lang/Number.html. If it's String always use the Integer.parseInt or Long.parseLong based on the data type. This will handle cases where each avro file might have a different data type for the same input column. avoid this code duplication if possible. why remove datasourceMap? we may have cases which don't need the dictionary and we should be able to get the dictionary from the data source right?. This operator is based on Dictionary and it probably makes sense to have DictionaryBasedAggregationOperator instead of overloading MetadataBasedAggregationOperator. These are bunch of optimizers, we need to have a better framework, instead of calling isFitForStarTree, isFitForMetadata, isFitForDictionary. Not really part of this PR but please create an issue to track this later. . just checking for function name is not sufficient. We also need to know if the column has dictionary. Also, we are not really using metadata to answer these queries, so we should have separate method to check if the query can dictionary.. if its fasthll, we should expect the column type to be HLL rt?. java doc for this method please. can we file a bug on roaring bitmap and have a test case that catches this in case anyone decides to change it to flip?. why did we move this out filterplan node? Let's rename it to indicate this is related to optimization before execution. Calling a class Utils will have a lot of unrelated methods overtime.. if this is not used anywhere else, its better to keep the reOrder method in this class. See related comment on FilterOperatorUtils. you are right. This should be done as part of query validation. Lets create an issue to validate the query. Apart from validating agg functions for star tree, it should validate column names as well based on Schema.. Lets created separate classes for each method. Its ok to have just one method in the class than having a Utils class with a bunch of methods with complex logic.. why are we not using jackson library. do we need all these constants if we are using jackson?. whats the idea behind introducing a plannodeFactory. . typo utilizes dictionary, add some more comments on how this works at a high level and the scenarios where this is applicable. what happens if its time column and the format is SDF and cannot be parsed. Let us try to use right result holder based on the column data type.  If this was not supported in the current version, please file another issue to track this. Ideally, we want to MIN/MAX etc on any data type.. this does not seem right. Can you look at the other plan nodes and add the appropriate code.. what happens if min & max are not numeric. Will maxValue/minValue returned be null. Did we test that this works fine with old segments where we don't have min and max in the metadata.. extract the functiona name check into a util function (Its also used in metadatabased operator) AggregationFunctionType.isOfType(MIN, MAX, MINMAX). very good test case but this is not really PlanNodeFactoryTest, this is testing specifically for the min/max/minmax case where we can use metadata/dictionary to execute the the query. We should rename the test case to reflect that.. why do we need this method.. why not have no-op implementation for NONE compression case. We can get rid of the if check here. Compiler would optimize it anyway at runtime.. why do we need this check for every access? Better to separate them into multiple implementations and get rid of the check for every access.. if this is not widely used. Get rid of the initial version and write a converter from v1 to v2. I prefer keeping the runtime code simpler and fix everything as part of loading the segment if possible.. having chunkPosition and some reference to PinotDataBuffer will help in debugging if there is a corruption. there will be a performance hit with this check. Create another issue to fix this later if not in this PR/. why have we introduced this block of code based on the existence of minion task? . I am not happy that we need to add checks for minion and task type. Can we come up with a better design?. why should that logic be handled or even be specific to minion. Should we not simply have a compare and set api? Minion can read the crc or some unique identifier (zk segment metadata node version) when it downloads and upload api can take this as input and do the comparison.  . I dont see a case where minion would create a segment with same CRC, even in the rare case that it does, its ok to refresh it. \ncan you please provide more details on the creation time. why does minion keep the creation time the same. Do we introduce a concept of update time?\n. how about having one pojo class (e.g. UploadRequest) that is constructed after parsing the header and query parameters. It should encapsulate all the variables we need in that pojo class. \nWhy do have to refer to Minion here? logic here should be generic irrespective of the client. Ignore my comment if that will happen in future PR's. change it to LiX. we should not invoke this method for every row as it will impact perf. time zone should be extracted once in the constructor and re-used.. this is sensitive to spaces right? yymmdd  tz ('UTC') will probably not be able to parse the tz.  . looks like code the duplicated. can we have another class to represent the format and encapsulate the logic in that class and have getters such as getType (SDF/EPOCH), getSDFFormat get TimeZone etc..  tz[ ]+\\([.*]+\\)[ ]+$ )  might handle spaces gracefully. please validate the regex.. how do we handle invalid time zones. will this throw an exception? . might have to trim the time zone string.. SDF. why is this specific to Transform? we can put this in some common place. is 2048 the buffer size? I think the default buffer size is much higher around 8192. Any reason we want to change this to 2048?. will thriftValue always be an ArrayList?. rename to initThriftInstanceCreator . getThriftClass. setThriftClass also change the method param name  to thriftClass. we can probably generate the file as part of the test case beforeTest method. Log the isleader and isConnected status. Can be helpful while debugging edge cases. why not pass the globalBaseline and globalCurrent, you can have methods such as getContributionFactor etc. isParentOf. move this to a separate class, call it ContributionAnalysisTool. add java doc explaining the high level idea. computeCost is more appropriate. if this package contains different types of cost functions, the package should be plural. costfunctions or just functions . can you please add an option to enable/disable starTree. this might break if there is an _ in the hostName. Better to replace Broker_ with \"\" or get everything after first occurrence of _. why are we changing the scope of the method just for testing purpose. can we not go over the schema and test this for all columns instead of hardcoding the column names. can we move unimplemented methods to baseclass. whats the most common use case - will the rawValue be String or actual data type. Is the order such that it's optimized for the most common path?. do we assume that the user serializes it to byte[]. any validation needed here? . Also, add the units. I am assuming this is in Bytes.. constant for ONLINE,. can we avoid using ZnRecord. nKafkaPartitions -> numPartitions. this can be applied to any streaming source that supports partitioning right?. why are we hardcoding the routing builder name?. create a class to represent RealtimePartition which will encapsulate the name generation logic. Current Assignment could be Map>. constants for states, they are probably defined some where else. we need concrete classes to represent realtimepartition. . Good job creating a base abstraction. Is this only for realtime or applicable for offline as well.. this name is confusing. this logic seems to be duplicated elsewhere. Instead of checking explicitly for the name, its better to have boolean on the RoutingConfig.isPartitionAware right? \nAlso why do we care if its partitionAware or not. can we create a two-dimensional array to represent the data and initialize that in the setup and that can be used in other places instead of hard-coding the values in multiple places. Add a java doc on how to test new formats - e.g we have thrift reader now, how can we test that?. will this impact performance for append-only use case?. why is this computation needed for every row? when we add a new buffer, we can just compute the max number of rows right and check for that?. why are we hard coding realtimememory manager, this class should just take a memorymanager and not care about the implementation. can we set the num RowsPerChunk to be a power of 2 and do bit operation to compute modulo? \n. shouldn't buffersNeeded simply increment by 1? whats the scenario where we would increment it by more than 1. this seems generic and something we might use in other places. Can we find a better place for this class. how is this better compared to Ints method in Gauva. why is this a dictionary? Dictionary is more of BiMap whereas we just need a HashMap. how often is this method called during insert and query processing?. any reason why we are not returning the id. whats the output of this?. yes. let's do that. can be part of another PR. should we allow that? I don't see a scenario for this and if this happens we should error out instead of adding buffers. At the least, set a max size and throw an error if we hit the max size.. thanks.. Good catch. why do we need this lock?. can we verify that propertystore handles runtime exceptions as well. can we call the other method with expectedVerion set to -1. . what happens on the server side, if this method returns false? Will the servers retry?. did we make this public for testing. I thought you mentioned that all retries will fail because metadata is already updated. In this case IdealState will not be updated until validation manager kicks in. Until then the server will keep receiving false and keep retrying? \n. @npawar I am trying to understand the flow. Feel free to merge. will be good to know which one was used to authenticate. every back ground service needs to check for this. Is it possible to have something that manages background services that starts and stops on leadership change?. what happens when this fails? It probably fails because the version has changed. Retrying is not going to help without computing the new idealstate. . realtime typo. will be good to have extract this logic into an interface, we might come up with different implementations and will abstract out the logic. The interface should basically take an idealstate, set of consuming nodes, set of completed nodes and return a new idealstate.. Conceptually, this is another rebalancer that is getting triggered periodically instead of getting triggered manually right?. do we want to retry in the previous method if there is config error?. its probably better to clone the idealstate and then compare if there was a change before updating the idealstate. Currently, we might just keep updating the idealstate everytime this runs.. what if the update fails but the rebalanceIdealState is already updated. We should update the rebalanceIdealState only update to ZK was successful. why are we parsing it here. Is this data structure serializable? How will this backward compatible? . move all this methods to some util class. Also add comments on why we cant use Arrays.copy methods. why are all renames showing up as deletion and addition. . If possible lets remove the need for this method. Ideally, we should not have any public methods in operators.. check if the transform function already exists. are you talking about supporting multiple expressions to compute a derived field? That will be too complex to support right? . Nice to hear that, may be we should have a method in PQLCompiler to create an instance of PqlCompiler. Good catch. I will add some checks for the number of arguments to match the function args and compare the argumentTypes as well. As of now, if they don't match, we will set it to null and log the error. . onlineCount can be zero?. why would we have a different quota for real-time and offline?.  if possible, let's avoid passing helix classes around. PinotHelixResourceManager should encapsulate most of the things we need.. is it possible to support quota over a period of time, let's say 10 queries a minute? Do we always have to convert it into queries per sec?. No need to log the pql. Just log the requestId. If possible, lets try to have the return at the end of the method. Avoids a bunch of duplicate code and makes it easy to read.. do we support aliasing?. why is this returning Object and not byte[]. how will the caller know how many bytes to read?. Are we not making use of context to speed up sequential reads?. no test for getBytes? I think that might fail since we dont know the length of the byte[]. See the other comment in getBytes method.. typo MINIMUM. why not a list of anomalyFunctions?. what if we have multiple anomaly functions?. instead of this, we can have anomalyFunctionFactory return a list of anomalyFunctions and we call the analyze method for each anomalyFunction and the only code change required would be in anomalyFunctionFactory. should we make it mandatory? Until now we haven't mandated having time column in the data.. we have such switch statements at many places in the code. How do we know that we have handled all possible types. Also, If a new type is added, how do we know all the data types are handled properly.. +1 on calling it ByteArray. why is this specific to time column?. can we use treemap to store output, so that the order of dimensions is alphabetical. I vote for keeping the state of the alert instead of a reference to a task dto or its status. An alert can have a state machine e.g.(CREATED, PENDING_SETUP, ACTIVE, INACTIVE).\nIt can get to active state after the replay is completed.\n. typo. put the arguments into SegmentConverterConfig. need to handle negative numbers for hashcode. whats the contract for this interface.  Should the return GenericRow contain all the columns (dimensions + metrics + time) or just the metrics + time? . you can check if hasArray and use the bytebuffer.array to avoid creating byte[].\n. don't have to make this public just for testing purpose. just test for the exception type.. we have excessive usage of String.format, can we use slf4j api and remove the usage of String.format. Should avoid unnecessary string creation. why are we naming this mockIncorrectData? can we call it something like createInvalidTarFile. use the try with resources to eliminate all the null checks and boiler plate code. https://docs.oracle.com/javase/tutorial/essential/exceptions/tryResourceClose.html\n. are we cleaning the files created in tearDown. Builder having a get method?. unrelated to this PR? what is getClusterTenantIsolationEnabled? We should not have utility methods like this in ZkMetadataProvider. shouldn't this be something like get(value, defaultValue) which returns defaultValue if the value is null? . Is this supposed to be a builder? it has all kinds of methods get, build, has. It resembles a Util class. i thought default tenant name was just \"default\", how is this different?. TagOverideConfigTest?. why did we move the constant from tenantNameBuilder to tagNameBuilder.. rename variables -> compressedInput and decompressedOutput.\nis this a bug fix?. any test case that would fail without this fix?. LBuffer is bit flaky. Its ok to use it during generation (star-tree index generation uses it). I haven't looked at this PR in detail but are we going to use lbuffer at runtime?. so we will never delete a segment in realtime for 5 days?. my bad, I did not see that this is applied to the segment that's in InProgressLLC state. . you can still use the switch, just add a new method in the enum to return the functionType in of relying on valueOf. . will this result in rejecting the segment?. why do we have to do this, why cant we set the entire table config. This is adding unnecessary constants for every field in table config. this class is not needed. I am not able to follow the need for this new boolean. It looks like this method is called from only one place. If thats the case, why don't we remove the isLeader check completely. Saw the other place where its called from but I still don't get why the check is not done by the caller before invoking this method.\n Are we using isNewTableSetup as a proxy for isLeader() check ?  \n. what is the idea behind calling force and especially with false?. this is in try catch block, which means close would be called at the end of it and that would internally call flush right?. btw, this if for my own understanding. I know having this additional line is probably harmless.. i thought about it but the logic across realtime and offline different. Ideally, there should be no logic in the class and should be just serialize/deserialize from/to properties. Jackson already supports that and I tried to convert it but it was not trivial. This addresses the memory issue for now. We should have another PR to decouple the serde from logic.. unrelated to this PR, why are we creating additional fields for sorted, isSingleValue instead of getting it directly from _metadata. cc @Jackie-Jiang . avoid this syntax for readability use a = a * b instead of a *= b. why are we adding this to common?. Why do we need separate implementation of SegmentFetcher for Azure. Can we not hide all storage specific details under FS implementation.. Shouldn't we wait until we get connected without any timeout? Throwing exception in background threads is not of much use. why cant we do both? currentTable.startWith || equals. This should preserve the existing behavior. can we expose columnmetadata instead of datasourcemetadata. We dont want to expose datasourcemetadata outside of datasource. . We generally don't see such names in practice but that's a good point. I think what we are looking for is to return the routing table for table_OFFLINE and table_REALTIME. We were just lazy and did a prefix match. An ideal solution would be checking for an exact match or table_OFFLINE or table_REALTIME should be good. @Jackie-Jiang let me know if you have any concerns with this approach.\nbtw, is this happening at Uber?. check for both null and empty?. ColumnsInSchema --> columnsInSchema. should we not just construct columnsInQuery and do one check against that?. why did we remove this?. should we not remove all other netty-xyz.jar  if we add netty-all?. which part of this method is specific to this implementation?. anyway we can rate limit this?. is the readerconfig logged somewhere else? if not, I would log the deserialized readerConfig and readerConfigFile together.. is the interface an algorithm has to implement? why are we providing access to the dataProvider to the underlying implementation by default? Shouldn't the framework do the work to fetch the data and invoke the algorithm with the data?. can you add java doc for each input? what is aggregateSlice . we should rename staticDetectionPipelineData as well right?. why are we passing emptyList? is that the default value. . why are these called Wrapper's?. why cant we get the className from the detectionConfigDTO? converting a concrete object to properties to access something does not seem right. this can be done as part of another PR, b. lets get all instanceConfigs in one shot. that should not throw any exceptions and is more efficient.. Is there a better way to check for a virtual column instead of depending on the column name starting with $. @jfim, any reason why we didn't add an explicit boolean isVirtual to columnMetadata\nAlso, why is segmentMetadata.getColumns including virtual columns by default?. \n. why are not doing Math.log2( cardinality + 1) and Math.max. this name is confusing. Feels like a utility to update Idealstate. From Pinot's point of view, this is a rebalancer right. The fact that it only involves updating IdealState is an implementation detail.. why is target passed from outside, when we already have the strategy. we can compute it as the first step before the while loop.. Looks like you are already doing what I suggested in the previous comment, you can remove the targetState param in the update method.. what exceptions are we expecting here? Is it ok to retry infinitely if the exception is not recoverable?. have a separate method for cloning ideal state. this code is verbose and repeated in couple of places. why are we waiting? . too much logging, reduce it to debug.. will pollute the log, reduce it to debug. nit: check if we can use have a static instance of znRecordSerializer. not part of this PR, but this is method is mixing the responsibility of controllerRestResource and PinotHelixResourceManager. Returning a json object from this method is not a good idea. Also, this should be sync and we can make it async from the RestApi if needed.. can we do this part of tableRebalancer itself?  rebalance method should return the final idealstate.. Good idea, I am assuming this will happen only for unknown exceptions.. No -> no. whats the difference between streamName and kafkaTopicName?. whats the contract for these init/start methods? if there are exceptions, who responsible for handling them gracefully?. Do we know how many tables/segments are not loaded?. can you add another api that spits out the tables/segments that are not healthy.\nSomething like\nT1:\n status:OK\n ONLINE:X, OFFLINE:Y, ERROR:Z....\nT2:NOT OK\n ONLINE:X, OFFLINE:Y, ERROR:Z....\n...\nunhealthy segments\nT1: exceededMaxGroupLimit or groupLimitReached. can we link to the config that controls the max groups. Why call it string length limit? Can we not call it maxLength and use it for bytes as well. Also it\u2019s better to check string. GetBytes size rt. Let\u2019s trim by byte length to be independent of system encoding type. whats the difference between startreeindexSpec and starTreeIndexConfigs. Do we need both?. Is this max plan tasks per thread or max threads?  Looks like it\u2019s used as both. \nIs the goal to have \n1 - fixed number of threads, variable number of segments or \n2 - fixed number of segments per thread, variable threads?\n3 - hybrid where we prefer option 2 but limit number of threads\n. Ok so there are really two variables - max threads and number of segments per thread. The code is using same variable to represent both of them MAX_PLAN_TASKS which is why I got confused. If possible lets create two separate variables.\nAlso, another concern is for 11 segments, we will still have 10 threads where as with 10 segments, we will be using only 1 thread. Is my understanding right?\nThis is where the hybrid approach might work better where number of threads can vary anywhere from 1 to MAX_THREADS=10.\n//psuedo code\nMAX_THREADS = 10;\nMAX_SEGMENT_PER_THREAD = 100; //not sure whats the right number for this.\nnumThreads = Math.min(10, numSegments/MAX_SEGMENT_PER_THREAD); //anywhere from 1 to 10\nnumSegmentPerThread = numSegments/numThreads;\nIn your code Outer loop will go from 0 to numThreads and inner loop in the callJob will go from i*numSegmentPerThread to (i +1 ) * numSegmentPerThread \nThis will allow us to control the two variables independently.\n. Did not want to overload the config. Its possible we need bloom filter without inverted index and vice versa. Also sorted index does not need an entry in invertedIndexColumns but we might need bloom filter for a sorted column. Added NumSegmentsQueried. Logged the stats and emitted the metrics.\n. +1 .  I agree with the concern that this is another config. Unfortunately creating bloom filter on all dimensions will add to memory usage (at least in the given implementation where the bitset is on heap) and additional overhead. The right solution would be to have a component that looks at the workload and tunes it automatically.\nCurrently, bloom filter is created when the segment is getting loaded. We can add the optimization to create it during segment generation in another PR.\n. Add a comment that mappings order should never be changed unless we are storing the entire string. Rename to create. Why are we setting this?  If we have more than 2k tables, we will bombard ZK right?. none of these configs are useful. If we go beyond cache size, we will be hitting ZK for every call. can we parse the json request into a concrete class e.g. RequestParams. This will avoid having constant strings everywhere.. +1. is there a preview/dryRun mode?. this is a very big method and hard to read. Can we break it up into smaller methods?. vavr looks like a new dependency we are bringing in. Is this a must?. Got it. Makes sense.. this is really complex to comprehend. It almost starting to look like scala/functional programming. Let's avoid having so many anonymous functions, makes it really hard to debug due to complex stacktrace. Please break this down or convert it into traditional java loop.. use logger. what if the controller has already become the leader by the time we call this?. If the controller is currently leader when a listener is registered, onBecomingLeader wont be invoked right?. Another way to handle this is to invoke the callback when its subscribed. This will enforce that the callbacks are idempotent.. it can be, was thinking of keeping it flexible so that new types can be added without changing Pinot code. yes, that was the initial solution. But wanted to keep the io layer (reader and writers) separate from the logical object layer. In other words, get is supported by all the readers and writers.\nAlso, there are too many switch(dataType) in the code which needs to handle various these DataTypes and only thing we can do there is handle them as string or bytes without much value.\n. yes, we can change this to something that is fast and easy. This is just to show the concept. There are too many json libraries and found this link useful https://github.com/fabienrenaud/java-json-benchmark. Text is a long string. It can give us some hints such as don't do dictionary encoding. More like TEXT vs VARCHAR in MySQL. PinotObject itself has those methods, init and toBytes. The only downside with Enum is every time users (external to Pinot Dev) want to add a new Object type, we need to update the enum. We can definitely start with enum and change this later.. will do.. yes, will fix it.. will do. yes. there are lots of optimizations we can do in the initial set of ObjectType. I am not too happy about the json library as well. I will leave those optimizations for another PR. . Its similar to single value vs multi value. If its array type, we need to know each value in the array.. could not find a method to get the underlying object in this json library. As I mentioned in another comment, we have to do another iteration on the Pinot Object implementation.. thats coming from thrift auto-gen files, not sure how to control them. See the other PR to remove the auto-gen files from source.. its part of different commit and there is already another PR for that. I have just rebased this on top of that since I need those changes.. I didn't get your question, the data coming into Pinot will always be byte[]. Looking at the fieldspec.objectType in schema , Pinot can construct the PinotObject. Now, this can be used in multiple places.\n\nIndex Creation - we can now index nested fields within this complex object. thats why I added getProperties() and getPropertyValue(). \nquerying - we can now support various operations on these objects. For e.g. select extract(user, 'user.firstName') can extract a property from a PinotObject. Another example would be to aggregate objects.\n\nHope that makes sense. \nIt might help if we try to see that we already support HyperLogLog, QDigest & TDigest but without having a concept of PinotObject. This PR is trying to standardize on how we create a custom object from a byte[]. Having an interface and enforcing certain methods make extending the functionality easily.\nI will make it enum.\n. will do. thats right.. I think we should handle it gracefully and have an error counter. This is what we do currently in real time ingestion. If we cannot convert or parse, we set the default value and move on. . Yes, that's right. Note that this is no different from HyperLogLog and TDigest. . extract this to a method and invoke only when needed. Looks like we log it only in debug / error cases. \nAlso, better to trim first and then replace.. I haven't looked at the PR in detail. The most important thing is we should never be hitting ZK in the request path. This violates that scenario. I prefer the broker going failing to serve a table if the number of tables is a lot vs going to ZK.. Hadoop brings a lot of dependencies. Its better to avoid pulling in those dependencies  Is there a way to get the schema without depending on Hadoop libs?\nIf we have to depend on Hadoop then its better to add code into pinot-hadoop module?. It's probably ok for now. I cant think of any other work around for now.\nthe hadoop-client dependency in common was added because of hdfs support I think. We plan to remove it once we have the support for deep storage and Uber folks stop using that feature.  Adding more code that depends on this will make it harder for us to remove the dependency on hadoop client.\n. ",
    "mistercrunch": "+1!\n. @kishoreg I heard it may be possible to get non-probabilistic distinct counts on the segmentation key in Pinot, is that the case?. Can you describe what that execution plan looks like? Is it achieved with an additional \"partial shuffle\" or by forcing nodes to take on all of the segments in their hash-space?. Let me clarify on my side, hoping to get a clearer understanding.\nSo say if my data is segmented by both day and userid, to facilitate both batch loading (allowing the drop/reload segments for a set of days) and userid to help with accurate distinct count.\nNow if I want to get non-probabilistic DAUs out of this, what does the query (any SQL-hints?) and execution plan look like? Assuming I have say 32 buckets per day, does that mean each compute node will scan 32 segments and keep tabs of each userid, or will there be some sort of per-day shuffle phase?. ",
    "izzizz": "+1! \nAnd how is it going?\n. I explicitly created schema in the offline step(AddSchema before AddTable), \nand then skipped the Schema creation in realtime step.\n. hey, is there any updates on this issue?\n. select min(DaysSinceEpoch), max(DaysSinceEpoch) from flights_REALTIME\n{\n    \"traceInfo\": {\n        \"0b9f3db8fc66\": [\n        {\n            \"0\": [\n            {\n                \"MCombineOperatorTime\": \"1\"\n            }, {\n                \"UResultOperatorTime\": \"1\"\n            }]\n        }, {\n            \"0_0\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"RealtimeColumnDataSourceTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"RealtimeColumnDataSourceTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"0\"\n            }]\n        }, {\n            \"0_1\": []\n        }]\n    },\n    \"numDocsScanned\": 2211,\n    \"aggregationResults\": [\n    {\n        \"function\": \"min_DaysSinceEpoch\",\n        \"value\": \"16436.00000\"\n    }, {\n        \"function\": \"max_DaysSinceEpoch\",\n        \"value\": \"16466.00000\"\n    }],\n    \"timeUsedMs\": 2,\n    \"segmentStatistics\": [],\n    \"exceptions\": [],\n    \"totalDocs\": 2211\n}\nselect min(DaysSinceEpoch), max(DaysSinceEpoch) from flights_OFFLINE\n{\n    \"traceInfo\": {\n        \"0b9f3db8fc66\": [\n        {\n            \"0\": [\n            {\n                \"MCombineOperatorTime\": \"95\"\n            }, {\n                \"UResultOperatorTime\": \"95\"\n            }]\n        }, {\n            \"0_0\": []\n        }, {\n            \"0_1\": []\n        }, {\n            \"0_2\": []\n        }, {\n            \"0_3\": []\n        }, {\n            \"0_4\": []\n        }, {\n            \"0_5\": []\n        }, {\n            \"0_6\": []\n        }, {\n            \"0_7\": []\n        }, {\n            \"0_8\": []\n        }, {\n            \"0_9\": []\n        }, {\n            \"0_10\": []\n        }, {\n            \"0_11\": []\n        }, {\n            \"0_12\": []\n        }, {\n            \"0_13\": []\n        }, {\n            \"0_14\": []\n        }, {\n            \"0_15\": []\n        }, {\n            \"0_16\": []\n        }, {\n            \"0_17\": []\n        }, {\n            \"0_18\": []\n        }, {\n            \"0_19\": []\n        }, {\n            \"0_20\": []\n        }, {\n            \"0_21\": []\n        }, {\n            \"0_22\": []\n        }, {\n            \"0_23\": []\n        }, {\n            \"0_24\": []\n        }, {\n            \"0_25\": []\n        }, {\n            \"0_26\": []\n        }, {\n            \"0_27\": []\n        }, {\n            \"0_28\": []\n        }, {\n            \"0_29\": []\n        }, {\n            \"0_30\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"9\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"19\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"23\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }]\n        }, {\n            \"0_31\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"6\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"15\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"18\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"6\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"8\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"13\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"16\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"6\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"9\"\n            }]\n        }, {\n            \"0_32\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"35\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"39\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"9\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"13\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"6\"\n            }]\n        }, {\n            \"0_33\": []\n        }]\n    },\n    \"numDocsScanned\": 844482,\n    \"aggregationResults\": [\n    {\n        \"function\": \"min_DaysSinceEpoch\",\n        \"value\": \"6481.00000\"\n    }, {\n        \"function\": \"max_DaysSinceEpoch\",\n        \"value\": \"16435.00000\"\n    }],\n    \"timeUsedMs\": 106,\n    \"segmentStatistics\": [],\n    \"exceptions\": [],\n    \"totalDocs\": 844482\n}\n. - ShowClusterInfo\n!!com.linkedin.pinot.tools.admin.command.ShowClusterInfoCommand$ClusterInfo\nbrokerInfoList:\n- name: Broker_172.17.2.238_8099\n  state: ONLINE\n  tags: [DefaultTenant_BROKER]\nclusterName: TestPinot\ncontrollerInfo: {leaderName: 172.17.2.238_9000}\nserverInfoList:\n- name: Server_172.17.2.238_8098\n  state: ONLINE\n  tags: [DefaultTenant_OFFLINE, DefaultTenant_REALTIME]\ntableInfoList:\n- segmentInfoList:\n  - name: flights_REALTIME__Server_172.17.2.238_8098__flights_REALTIME_1442802699313_0__0__1442802699482\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  tableName: flights_REALTIME\n  tag: flights_REALTIME\n- segmentInfoList:\n  - name: flights_10227_10591_13\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_10592_10956_14\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_10957_11322_15\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_11323_11687_16\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_11688_12052_17\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_12053_12417_18\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_12418_12783_19\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_12784_13148_20\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_13149_13513_21\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_13514_13878_22\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_13879_14244_23\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_14245_14609_24\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_14610_14974_25\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_14975_15339_26\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_15340_15705_27\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_15706_16070_28\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_16071_16435_29\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6481_6512_0\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6513_6542_1\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6543_6573_2\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6574_6939_3\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6940_7304_4\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_7305_7669_5\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_7670_8034_6\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_8035_8400_7\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_8401_8765_8\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_8766_9130_9\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_9131_9495_10\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_9496_9861_11\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_9862_10226_12\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  tableName: flights_OFFLINE\n  tag: flights_OFFLINE\n- As to data and scripts, I followed the tutorial How To Use Pinot, used the dataset in it(as well as the table schema), scripts were described in my first post.\n. Did you get a chance to look into this? \n. quick-start-hybrid.sh works for me. \nBut my issue is still there, here is steps to reproduce, the difference is I set tenantIsolation to true, don't know if this is the reason:\n```\ncd pinot-distribution/target/pinot-0.016-pkg\nstart local zk, kafka, pinot controller, broker and server\nbin/pinot-admin.sh StartZookeeper &\nsleep 10\nbin/pinot-admin.sh StartKafka &\nsleep 5\nbin/pinot-admin.sh StartController -tenantIsolation &\nsleep 5\nbin/pinot-admin.sh StartBroker &\nbin/pinot-admin.sh StartServer &\nget sample data\nwget https://github.com/linkedin/pinot/wiki/flights.tar.gz\ntar zxvf flights.tar.gz\nmkdir -p flights/2015\nmv flights/flights-2015* flights/2015/\nadd flights schema\nbin/pinot-admin.sh AddSchema -schemaFile flights/flights-schema.json -exec\nadd flights offline and online table\nbin/pinot-admin.sh AddTable -filePath flights/flights-definition.json -exec\nbin/pinot-admin.sh AddTable -filePath flights/flights-definition-realtime.json -exec\nbuild offline segment and upload\nbin/pinot-admin.sh CreateSegment \\\n    -schemaFile flights/flights-schema.json \\\n    -dataDir flights/ \\\n    -tableName flights \\\n    -segmentName mySegment \\\n    -outDir /data/PinotSegFlights -overwrite\nbin/pinot-admin.sh UploadSegment -segmentDir /data/PinotSegFlights\nstream realtime data to kafka, need to create topic flights-realtime beforehand\nbin/pinot-admin.sh StreamAvroIntoKafka \\\n    -avroFile flights/2015/flights-2015_1.avro \\\n    -kafkaTopic flights-realtime \\\n    -kafkaBrokerList localhost:19092 &\n```\n. ",
    "geo1211": "+1!\nand how's that coming along =)\n. ",
    "rizwank": "Came up again during a demo at Strata+Hadoop Conf ; why not Druid?\n. ",
    "sskgit": "Any comparison with Druid?\n. ",
    "dhaval2025": "@fx19880617 ^^\n. thank you @uce for letting us know.. its been fixed. \n. hey @alvinhom , pinot does create and use inverted index for dimensional filtering, we use roaring bitmap for inverted index compression. Using and creating Inverted index is configurable on a per column basis, sometimes simply sorting the date on a column which is always filtered upon is good enough to achieve fast query response times, in which case we can avoid using inverted index to filter on other columns, this helps us to server more data off of ram. \nHope that helps, Also the google groups should be up soon. \nRegards\nDhaval \n. google groups created... \nhttps://groups.google.com/forum/#!forum/pinot_users\nwill be updating the documentation as well to point to this \n. hey can you paste the query you are running here. \nThanks \n. Hey @1teed the issue is that the realtime flush time and size by default is 1hour and 5M documents respectively, you should add the following 2 properties to the stream configs ... \n\"realtime.segment.flush.threshold.time\" : \"3600000\",\n \"realtime.segment.flush.threshold.size\" : \"50000\"\nand set the flush time to something smaller than 10 minutes, and try it out again. \nAlso remember to pull the latest. \n. Let me add that, I'll check it in on Monday ... \n. checked in a quick-start-hybrid.sh that starts 2 servers (one offline and one realtime), 2 brokers, 1 controller, zookeeper and kafka. \n. so the bql/pql across GET and POST is for backwards compatibility and will be made consistent eventually, for now documentation only mentions using the post API, also we use antlr for the actual parsing. At the servlet layer we simply, read the string entry with key pql from the payload and pass it on to the antlr compiler.\nalso I think from the code you pasted above, it looks like the get API is broken, the code you pasted above needs to be something like \n@Override\n  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n    try {\n      JSONObject jsonQuery = new JSONObject();\n      jsonQuery.put(\"pql\", req.getParameter(\"bql\"));\n      resp.getOutputStream().print(handleRequest(jsonQuery));\n      resp.getOutputStream().flush();\n      resp.getOutputStream().close();\n    } catch (final Exception e) {\n      resp.getOutputStream().print(e.getMessage());\n      resp.getOutputStream().flush();\n      resp.getOutputStream().close();\n      LOGGER.error(\"Caught exception while processing GET request\", e);\n      brokerMetrics.addMeteredValue(null, BrokerMeter.UNCAUGHT_GET_EXCEPTIONS, 1);\n    }\n  }\nfrom above you can see why jackson would be an overkill. all we are doing here is making the same method handle both post and get calls. \nI will push this and close the issue once i do ...\nThanks \n. @dongyanfeng  can how tell us how many instances are you using for these tables...and also what is your hardware config...\nthanks \n. hey @dongyanfeng  we fixed this, now during segment generation you can pick columns that you want to create inverted index on. \nAlso if inverted index is not created during segment generation and there are columns configured to have inverted indexes, then inverted index will be created over the fly when we load the segment on the server. \n. hey @izzizz i just checked in a quick-start-hybrid.sh , can yon run that and see if it works for you. It basically starts 2 servers, 2 brokers and 1 controller, pushes one offline segment and streams events through kafka. I was unable to reproduce your issue so I checked this in to help. If this works for you then we can continue debugging with your issue. \n. we will update the docs once we have 'having' support\n. We should do this .. only thing is that we will have to handle auth ... without punching in the the secrets in the config...\n. lets add another segment upload endpoint ... where instead of sending the entire tar.. we send the segment metadata only ... \nNow we can either use hdfs:// prefix in the download URL and allow servers to download the segments directly from web-hdfs or let servers call controller and let controller get the segment from HDFS... \nfirst option is better ... but there may be firewall restrictions between hadoop DC and pinot DC... so controller nodes fetching segments from HDFS for servers might be more scalable...\n. @fx19880617 correct, but with controller nodes.. the whitelist will be only 3 to 5.. but if you allows servers to pull too, the whitelist will go to 100's of nodes...\nlets controllers act as proxy.. servers talk to controller ... controllers pulls from hdfs or gives a local copy... \n. agreed\n. ",
    "jaebinyo": "Just say it's similar with some enhancement and give credit to Druid community and move forward  :)\n. ",
    "niketh": "Any update? Want to figure out which way to go, Druid or Pinot\n. ",
    "raviarin": "Hi\nFundamentally Druid and Pinot are realtime distributed OLAP technologies. They both use columnar format for storage and a query processing engine on top. They differ in some integration aspects with other pieces of big data. For example in LinkedIn we run Pinot at a large scale (1000s of machines and 100s of tables). Pinot can directly consume data from Kafka and also from Hadoop. I cannot comment about Druid as I do not know their install base. There are a few features that might be missing in one and available in other and vice versa. Also, recently LinkedIn team has decided to make all their commits directly into open source. So any future development we do will land in open source immediately. There You will be getting the latest and greatest version all the time. From what I hear Uber is also using Pinot for their internal analytics. So your choice of technology will depend on the comfort levels. If I can find more details about DRUID installations I will be happy to share. That being said, I have a bias towards recommending Pinot as my team is actively working on it on a day to day basis. We will be happy to support your projects in the open source community. \n. Pinot does not support direct update to rows right now. You can drop and update your entire segments if required. That being said, we are considering different options to provide update capabilities in the future. . Few other thoughts\n1. It would be great to include a flag or some property in the response to indicate that the response came from the cache. This will help in future debugging.\n2. User should be able to bypass the cache by passing in a request flag / property. \n3. Not sure what you plan to store in the cache, but consider the performance of serialization / deserizalation of objects in cache. Sometimes it might be better to store the raw serialized version from the server cache to avoid overhead. This is a perf optimization and can be prioritized for a later time.\n4. What happens to cached rows if the underlying segments expire or gets deleted?\n5. It will be good to list out the cache invalidation scenarios. May be to begin with it is purely time based?\n. @Jackie-Jiang Would you be able to take a look at this?\n. Can you try to look at logs or see what is printed on console for broker server? Do they get the queries you send? How do you send the query?\n. If we need to change default value (which would be very rare), then with approach 1, we can compare the default values and regenerate new column with new default and delete the previously generated default column. That way there is no additional in-memory complexity. \n. LGTM\n. LGTM\n. LGTM (add a comment on why you are placing these in the ignore list)\n. Please add some unit tests for the two methods ;)\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM.\n. Please call it \"enableDefaultValueForColumns\"\n. OK. Sounds good to me. \n. It will be good to do this. However we should also take into consideration for future about placing replicas based on load on pinot-servers as well. Rack awareness should be not prohibit us from doing a load balancer type of feature in the future. \n. I am suggesting 2. But it can wait. Mainly to make sure that design can\naccommodate this in the future\nThanks\nRaCi\nOn Thursday, September 1, 2016, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\nis it a good time to start using Helix algo's for placement. Lei just\nadded zone/rack aware placement strategy in Helix.\nRavi -regarding placement based on load,\nthere are two options\n1. look at the load during initial placement ONLY\n2. periodically change the mapping if the load has changed.\nAre you suggesting both #1 https://github.com/linkedin/pinot/pull/1 and\n2 https://github.com/linkedin/pinot/pull/2?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/438#issuecomment-244184902, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ADSJ7jLYl-IHuuohZ33w31UQ8nfixXQrks5qlyZ4gaJpZM4JsuOX\n.\n. LGTM\n. This has a been a long outstanding item in our back log :). I like the idea of NoOp dictionary as it does not change the interfaces. However, JF or Mayank might have thought about this a bit more than me. Should be worth a discussion with them. \n. This is a pretty good feature to add to broker caching. It would be great if you can put up a design doc wiki page that folks can comment. \n. Thanks for taking this on Jackie. This is a thankless job that you are venturing into. It is great to see such an effort. Kudos!\n. I dont see any test cases in the PR?\n\n\nFrom: Codecov notifications@github.com\nSent: Tuesday, September 12, 2017 5:19:09 PM\nTo: linkedin/pinot\nCc: Subscribed\nSubject: Re: [linkedin/pinot] implementation of basic load based segmenet assignment strategy (#1883)\nCodecovhttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=h1 Report\nMerging #1883https://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=desc into masterhttps://codecov.io/gh/linkedin/pinot/commit/56ea9911202d58a29e4b9b0ae19a70772074a4e5?src=pr&el=desc will decrease coverage by 20.94%.\nThe diff coverage is 30.62%.\n[Impacted file tree graph]https://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree\n@@             Coverage Diff             @@\nmaster    #1883       +/-\n===========================================\n- Coverage    70.2%   49.26%   -20.95%\n===========================================\n  Files         813      820        +7\n  Lines       38941    39064      +123\n  Branches     5144     5159       +15\n===========================================\n- Hits        27340    19244     -8096\n- Misses       9804    18175     +8371\n+ Partials     1797     1645      -152\nImpacted Fileshttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree   Coverage \u0394\n...harding/ReplicaGroupSegmentAssignmentStrategy.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL2hlbGl4L2NvcmUvc2hhcmRpbmcvUmVwbGljYUdyb3VwU2VnbWVudEFzc2lnbm1lbnRTdHJhdGVneS5qYXZh  0% <\u00f8> (-100%)  \u2b07\ufe0f\n...pinot/server/api/resources/ServerPerfResource.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3Qtc2VydmVyL3NyYy9tYWluL2phdmEvY29tL2xpbmtlZGluL3Bpbm90L3NlcnZlci9hcGkvcmVzb3VyY2VzL1NlcnZlclBlcmZSZXNvdXJjZS5qYXZh      0% <0%> (\u00f8)\n...troller/helix/core/sharding/SegmentSizeMetric.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL2hlbGl4L2NvcmUvc2hhcmRpbmcvU2VnbWVudFNpemVNZXRyaWMuamF2YQ==  0% <0%> (\u00f8)\n...ot/common/restlet/resources/ServerPerfMetrics.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvY29tL2xpbmtlZGluL3Bpbm90L2NvbW1vbi9yZXN0bGV0L3Jlc291cmNlcy9TZXJ2ZXJQZXJmTWV0cmljcy5qYXZh  0% <0%> (\u00f8)\n...ore/sharding/SegmentAssignmentStrategyFactory.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL2hlbGl4L2NvcmUvc2hhcmRpbmcvU2VnbWVudEFzc2lnbm1lbnRTdHJhdGVneUZhY3RvcnkuamF2YQ==      10% <0%> (-23.34%)      \u2b07\ufe0f\n...pinot/controller/util/ServerPerfMetricsReader.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL3V0aWwvU2VydmVyUGVyZk1ldHJpY3NSZWFkZXIuamF2YQ==      0% <0%> (\u00f8)\n.../helix/core/sharding/RandomAssignmentStrategy.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL2hlbGl4L2NvcmUvc2hhcmRpbmcvUmFuZG9tQXNzaWdubWVudFN0cmF0ZWd5LmphdmE=  0% <0%> (-86.67%)       \u2b07\ufe0f\n...rding/BalanceSizeOfSegmentsAssignmentStrategy.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL2hlbGl4L2NvcmUvc2hhcmRpbmcvQmFsYW5jZVNpemVPZlNlZ21lbnRzQXNzaWdubWVudFN0cmF0ZWd5LmphdmE=      0% <0%> (\u00f8)\n...helix/core/sharding/BucketizedSegmentStrategy.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL2hlbGl4L2NvcmUvc2hhcmRpbmcvQnVja2V0aXplZFNlZ21lbnRTdHJhdGVneS5qYXZh  0% <0%> (\u00f8)     \u2b06\ufe0f\n...ntroller/helix/core/PinotHelixResourceManager.javahttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL2NvbS9saW5rZWRpbi9waW5vdC9jb250cm9sbGVyL2hlbGl4L2NvcmUvUGlub3RIZWxpeFJlc291cmNlTWFuYWdlci5qYXZh      37.84% <100%> (-22.65%) \u2b07\ufe0f\n... and 439 morehttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=tree-more\n\nContinue to review full report at Codecovhttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=continue.\nLegend - Click here to learn morehttps://docs.codecov.io/docs/codecov-delta\n\u0394 = absolute  (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecovhttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=footer. Last update 56ea991...3819c5fhttps://codecov.io/gh/linkedin/pinot/pull/1883?src=pr&el=lastupdated. Read the comment docshttps://docs.codecov.io/docs/pull-request-comments.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/linkedin/pinot/pull/1883#issuecomment-329021028, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ADSJ7leSjtgGHj2tSjq9ve1XGv3KBfp3ks5shx99gaJpZM4PVZko.\n. LOL.\n\nFrom: Jean-Fran\u00e7ois Im notifications@github.com\nSent: Wednesday, July 11, 2018 10:35 AM\nTo: linkedin/pinot\nCc: Subscribed\nSubject: Re: [linkedin/pinot] Update copyright year range to 2014-2018. (#2941)\nHaha nice\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHubhttps://github.com/linkedin/pinot/pull/2941#issuecomment-404251415, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ADSJ7sZaqwhJh0X-gBtLKymM7iwiGn8Hks5uFjdygaJpZM4VKN0d.\n. LGTM. What is the need for the sleep if all we do is close connection pool and shutdown? \n. I would agree with JF's comment.\nOn Thu, Jun 2, 2016 at 11:10 AM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nIn .travis.yml\nhttps://github.com/linkedin/pinot/pull/140#discussion_r65590051:\n\nscript:\n-  - cd $PINOT_MODULE\n-  - cp ../.travis_cmd.sh .\n-  - bash .travis_cmd.sh\n- - bash .travis_test.sh\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n\nThis could be a security/liability issue if someone compromises the\ncodecov.io script to send spam and/or DDoS some other website. It would\nbe better to check out a known revision of the script (which is available\nat https://github.com/codecov/codecov-bash) and invokes it as part of a\nscript that does the after_success part of the build than fetching an\nunknown version of it.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/140/files/0b806a490eba7a6250c08dab0ce795029c2f111e#r65590051,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ADSJ7kf9I4qdivmY0dm4kiDM0Gnbqp4pks5qHxyzgaJpZM4IsJ6Y\n.\n. I guess it would make more sense if it was internal github.\n\nOn Thu, Jun 2, 2016 at 11:20 AM, Adwait Tumbde notifications@github.com\nwrote:\n\nIn .travis.yml\nhttps://github.com/linkedin/pinot/pull/140#discussion_r65591736:\n\nscript:\n-  - cd $PINOT_MODULE\n-  - cp ../.travis_cmd.sh .\n-  - bash .travis_cmd.sh\n- - bash .travis_test.sh\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n\nThere is no real difference in pulling the script vs storing it on github.\nBoth can be compromised.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/140/files/0b806a490eba7a6250c08dab0ce795029c2f111e#r65591736,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ADSJ7mSr2tJN66ER667g7MJ-3kxHxjXbks5qHx8LgaJpZM4IsJ6Y\n.\n. I don't think we need to go overboard for a complex solution right now. But\nit will be good to find out how other teams like Helix do this code\ncoverage on Travis. if they have built some standard practices we can\nborrow them.\n\nThanks\nRavi\nOn Thu, Jun 2, 2016 at 2:54 PM, Jackie-Jiang notifications@github.com\nwrote:\n\nIn .travis.yml\nhttps://github.com/linkedin/pinot/pull/140#discussion_r65625758:\n\nscript:\n-  - cd $PINOT_MODULE\n-  - cp ../.travis_cmd.sh .\n-  - bash .travis_cmd.sh\n- - bash .travis_test.sh\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n\n@jfim https://github.com/jfim Sure we can do that, but that will add\nsome operational complexity. My point is, for an open source project\nrunning on a sandbox, nothing could be done by malicious script. If\nmalicious script can get any benefits, then that could happen on any box,\njust checkout our code and run any script you want right?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/140/files/0b806a490eba7a6250c08dab0ce795029c2f111e#r65625758,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ADSJ7uUfyECTvfh91z8-8qVUeKiSv6eOks5qH1EqgaJpZM4IsJ6Y\n.\n. Fixed it in my update\n. Done\n. Done\n. Suggestion : Consider create a Factory class similar to SegmentNameFactor that will create and return approprate Segmentname classes. Each Segmentname will implement an interface. Might reduce the if/else statements in this file\n. Fixed\n. Fixed\n. Just adding version\n. Can you add a test to take an unknown segment version and see how it behaves?\n. LGTM (check my previous comment on test)\n. Is metric value gauranteed to be positive? What if we have metrics that have negative values? \n. It might be a good time to start adding unit tests. Can you try adding one? \n. Make 7 and 1 as constants / default values to MonitorConstants class\n. Rename CreateAnomalyJob to CreateMonitorJob\n. Rename to CreateMonitorTaskId\n. Trying having a parent class called JobSpec. AnomalyJobSpec and MonitorJobSpec should inherit from the parent class\n. Remove the JIRA tag here.\n. Name needs to change. It is not default column. It is default values for columns\n. If indexLoadingConfigMetada -- null then should it throw an exception or log an error?\n. Should this be a part of indexLoadingConfigMetada instead of a separate parameter?\n. Is this a repeat of what is line 234?\n. Can you make a constant for this magic number 7. I guess it is the number of elements the node of type INT. It will be good to make it a const so that it is more readable. \n. Good job on acting on this JF! And thanks for unit tests!\n\nOn Tue, Aug 23, 2016 at 9:07 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nIn pinot-core/src/main/java/com/linkedin/pinot/core/operator/\nfilter/IntRanges.java\nhttps://github.com/linkedin/pinot/pull/433#discussion_r75992165:\n\n\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n/\n  +\n  +package com.linkedin.pinot.core.operator.filter;\n  +\n  +import com.google.common.base.Preconditions;\n  +import com.linkedin.pinot.common.utils.Pairs;\n  +\n  +\n  +/*\n* Various utilities to deal with integer ranges, with both bounds being inclusive (eg. for docId ranges).\n*/\n  +public class IntRanges {\n\n\nIntPair doesn't seem like the right place to add those methods, as the\nname suggests it's just a pair of integers with no other functionality.\nIt seems that we only use IntPair for docId ranges though, so I'll give\nthis another look and see if we can rename this class to DocIdRange\ninstead and move those methods there.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/433/files/573486a3c9ae331918bbf51ef38e72e57af8a40d#r75992165,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADSJ7mJulPjEA2ZOZRYXqKgA3dHeN9MUks5qi8OTgaJpZM4JrloB\n.\n. Passing in BrokerMetrics to Class in Util seems a bit incorrect to me. May be this class or method should return a value indicating a class that was not properly ser/de. Then the broker somewhere else can increase the metric value. \n. I was suggesting that adding broker metrics to class in a core/utils seems incorrect. But can this class / method not return if the object was using java ser/de? That way you can increment the metric where the instance of this class is used. If it is too cumbersome and if this is temporary I am fine with it. \n. Should we be making this a part of Pinot Admin tool? Basically Admin tool that takes table name or schema name as parameter and validate it with controller? Or it can also take \"ALL\" as parameter and validate all tables and schemas. Also, it will be even better if this can be run without talk to controller. That way we can run it before making any changes to configs so that we are absolutely sure that the controller will load it when the commit happens. \n. Instead of standalone tool, I would rather bundle it with an existing one. Pinot-Admin tool might not be a bad place. But check with other folks in the team as well. \n. Should the code not check for Operator type before calling pruneIn function? . Add an empty message or a generic message stating that unable to extract message. . Is this the only instance that we missed adding the message or do we need to d a sweep and add it everywhere?. \n",
    "fsck-mount": "Does Updates are possible in Pinot ?\n. ",
    "amalakar": "Hi @raviarin,\nThanks for your comment, as someone who is evaluating druid and pinot, I am trying to understand how they are different. Has there been any comparison made since your last comment? I noticed the pinot-druid-benchmark repo, are there any published benchmarks?. Kishore, thanks for your comment. Fair point regarding the benchmarks, and the slides are very helpful.\nIs it fair in assuming that druid and pinot covers the same use cases. Apart from support for star tree index, are there any differences in philosophy or tradeoffs made in pinot compared to druid? \nI think what I am asking is apart from perf difference for my use cases, are there anything else you think would be worth considering in the evaluation?\n. ",
    "leventov": "This blog post comparing ClickHouse, Druid and Pinot could be interesting for people who read this issue. . ",
    "hgword": "Sorry it's my fault.\nI have to locate pinot-0.016-pkg directory.\nand ./bin/quick-start-offline.sh\n. ",
    "amorskoy": "Sorry, resolved. See\nhttps://github.com/linkedin/pinot/issues/4\n. ",
    "swordflychen": "Why not to write out the solution?\n. ",
    "lemire": "Format specification for Roaring bitmaps : https://github.com/RoaringBitmap/RoaringFormatSpec/. ",
    "jfim": "We assume that the instance names always start with \"Broker_\" or \"Server_\" and contain the instance's address and port; we'll come up with a resolution for this.\n. Tracked internally as PINOT-1658.\nThe workaround is to use a broker instance name of the form \"Broker_address_port\" and the default should be fine. Can you check if this issue happens if your broker instance name is something like \"Broker_127.0.0.1_8099\"?\n. It would seem that Maven runs out of heap space. Can you try setting MAVEN_OPTS to give it more heap space? Running this before doing mvn -DskipTests install should work:\nbash\nexport MAVEN_OPTS=\"-Xmx1G\"\n. Currently, the realtime consumption in Pinot uses the high level consumer which leads to the behavior you're seeing.\nIf you want to create two servers that consume from Kafka, each of them should get their own consumer group ID so that they each get all of the data; since the realtime segment boundaries include offsets, all replicas of the realtime segments should contain the same data, so a server node that crashes does not change the query results.\nThis is not ideal and it's on our roadmap to improve Kafka consumption.\n. If there is a limited number of servers relative to ZK nodes, it could be the case that this exhausts the limit of ZK connections from a single node. The default value for maxClientCnxns in ZK is 10, so if there is only one ZK host and all the cluster is running on one machine, it could prevent the kafka client from connecting to zk.\n. There is indeed a maximum znode size. Helix supports having compressed znodes, which should help you with this. See https://issues.apache.org/jira/browse/HELIX-573\nIf you have that many segments, it might be worth looking into having the segments larger.\n. What do you mean by the prompt connection timed out? Did you get an error?\n. I think the syntax is distinctCount(AtBatting) for this.\n. At this moment, no, joins are not supported. This may change in the future.\nHowever, since Pinot is column-based, you can perform the join ahead of time on Hadoop and push the data with the joined columns from the foreign table. This usually addresses most use cases for joins.\n. Fixed in https://github.com/linkedin/pinot/commit/942db4397244002e6622447ccc4489dcc9b88190\nThanks!\n. We don't support it right now, but we can add support for it. Would something like select timebucket(timeColumn, '5m') as time, avg(metric) from ... group by time work?\nI'll take a look at Grafana to see how we can support your use cases in Pinot. Are all the types of queries that you foresee all aggregations on time buckets or would you need other special operators/functions (eg. moving averages, etc.)?\n. We could probably have a third optional parameter for time bucketing that chooses the reference start point for the buckets.\nI'll have to come up with a good design for this. Out of curiosity, how does Grafana handle standard/daylight savings time or irregular time intervals (months with various lengths/bissextile years)?\n. @flowbehappy, we'll eventually have it, but I don't have an estimate as to when.\n. Thanks for the fix!\n. Tracked as PINOT-2272. Will look into it to see if it's an easy fix or not.\n. This would require some changes to the query execution engine, so getting this right instead of just tacking this on on top of the current topN syntax would be better (eg. doing something like ORDER BY count(*) ASC).\n. Hey there @flowbehappy,\nAll of it is on our roadmap, but I don't have a good ETA for this. It's very unlikely that all of these would be supported by the end of December, though. Are there things that are higher priority among all of these features?\n. Fixed by https://github.com/linkedin/pinot/commit/56826f131d83fd8aa7086f6ccd8e2d301093fcba\n. Thanks for the patch! :)\n. All development on Pinot now goes through GitHub pull requests. :)\n. It's unlikely that the change in version from 0.8.2.0 to 0.8.2.2 has anything to do with it though. My guess is that this version of Kafka depends on scala-library 2.10.4 but we added larray recently, which depends on scala-library 2.10.3. Doing a mvn dependency:tree shows that the scala-library that's pulled isn't stable (sometimes it gets pulled through larray, sometimes it gets pulled through Kafka), so that's a more likely explanation. For example, the Hadoop part will contain scala-library 2.10.3 while pinot-server apparently contains 2.10.4.\nHowever, you can always run your local build with an arbitrary version of Kafka, by doing mvn -Dkafka.version=0.8.2.2 -DskipTests install. I wouldn't put this in master (the Kafka version change) without understanding what's causing this, but the routing table change is a good catch.\nCan you update the PR to only keep the routing table change?\n. Just merged it, you should be good.\n. We haven't gotten around to writing a JDBC connector yet and we have a few differences with a traditional OLTP database (eg. multiple result sets for a single query) that don't fit cleanly within the JDBC mold. It's on our list of things to do, but we don't have a timeline for that to be released.\n. Merged in https://github.com/linkedin/pinot/commit/18fea682e694ffb0ce8a10160a532a4b90fa3e73\n. LGTM, I'll merge it later today. I'll amend the commit message to say \"Adding method to stop all Kafka consumers,\" as there is no shutdown hook in this code.\n. This can be caused by running out of mmap or file handles. On Linux, you can change the vm.max_map_count sysctl to increase the number of files that can be mmap'ed concurrently and the fs.file-max sysctl to increase the number of files that can be open concurrently. This will be alleviated when we merge all columns from a segment into a segment file, which should be coming soon.\n. Merged.\n. lgtm, will merge in 5 mins\n. lgtm, I'll merge it once travis finishes\n. From user/concurrency point of view:\n\u2022 Is there a limitation for concurrent users running queries?\nNo, other than hardware limits. Some Pinot clusters at Linkedin process several thousands of queries per second.\n\u2022 In case I need to add more users, what is the cost? (More hardware/servers/memory?)\nAdd more hardware, it scales near-linearly.\nFrom data point of view:\n\u2022 Is there a limitation on how many dimensions/lookup tables I can design? Is there any kind of performance implications?\nTables are independent, there's no real performance implication to adding tables (as long as you're not planning on having thousands of tables, at least, zk may be a contention point with that many tables). Judging from your question though, it seems as if you're doing a star schema-style design. Pinot doesn't support joins, so you should flatten your dimensions into the table itself.\n\u2022 What will be the cost of adding another dimension/lookup table? (More hardware/servers/memory or redesign of the solution?)\nSee above, no joins.\n\u2022 What about the history, as I mention before we are talking about one year retention, but if I need to add more retention time, example 3 years, what will be the implication?\nIt'll increase query latency if those rows need to be scanned as part of query execution. If they don't need to be, then they're nearly free (they get rejected quickly at query processing time).\nFrom Programming point of view:\n\u2022 Are the windows functions supported? \nNot at the moment. Windowing functions require a second pass during query execution and can be implemented on the client side.\n\u2022 If not, is there a workaround for it?\nCompute them on the client side.\n\u2022 If partially, which one is supported or not supported.\n\u2022 Are Joins between tables supported? (Is there a limitation for table size?)\nNo, and we don't foresee adding support for them this year.\n\u2022 Are nested queries supported?\nNo, and we don't foresee adding support for them this year.\n\u2022 Are functions like Count, sum, avg., max, min, etc. supported? How is it working with uniqueness? (Count (distinct X), Sum (distinct X), etc.)\nAggregate functions (count, sum, min, max, avg) are supported. You can do select distinctCount(X) for distinct count, select distinctCountHLL(X) for HyperLogLog approximation. \n\u2022 Are ranking functions, like in MSSQL, supported? (row_number, rank, dense_tank, ntile)\nNo, and we don't foresee adding support for them this year.\n\u2022 How Pinot is supporting the comparison between populations? Example, I need to get the population of users which didn\u2019t purchase in the last 3 days but they click on my site at least 1 times. (when purchase and click are different events types in the system)\nPut both events in the same table as part of your ETL process, roll up the rows on Hadoop, select sum(clickCount), sum(purchaseCount) where date >= 20160325 group by userId\n\u2022 Flexibility from integration point of view (could it work with Java/python/etc.)\nWe have a Java API and a REST API for other languages.\n. Test comment\n. lgtm.\n. lgtm\n. Can you update the PR title, it doesn't match with the contents.\n. It's doable via a Helix message from controller to server, but we don't have one at the moment. It wouldn't be too hard to do, though we'd need to make sure we design something that works with the new realtime consumer design. I'll think of something tomorrow and if it's not too much work to add it to the current version, then I'll add it.\n. In the current code, it just sends out the query to all segments. The segments are pruned quickly at the beginning of the query phase in the case of a query with time boundaries, as the time column cannot contain data that matches the predicate.\nThe routing table is built at https://github.com/linkedin/pinot/blob/32a5f91cf02e33314d6c1e2c2d823eecc0accc6f/pinot-transport/src/main/java/com/linkedin/pinot/routing/builder/BalancedRandomRoutingTableBuilder.java#L40-L40\n. I'll squash and merge this one once someone gives me an okay for this, I want to test something.\n. select * from Table is also broken, it will give a set of columns that is not deterministic.\n. The biggest issue is if the default value changes, if we wrote a new column to disk, then we can't really fix it with a new default value.\nWhat we could do instead is have the column load generate a new column on the fly if it doesn't exist based on the schema values, with nothing written to disk. Since the column has only one value, it's pretty trivial to generate and shouldn't have any significant impact on performance. We'd also need to intercept calls to metadata/dictionaries for columns that don't exist and synthesize metadata/dictionaries for them.\nOf course, when we support nulls properly, the synthetic column should just contain nulls.\n. If we write a column that has only default null values, there's no way to determine that the column is synthetic unless you write a flag in the metadata, which is just another thing that we need to keep track of when we load segments. This means that now instead of just making a column at load time, we need to:\n1. Check if the column exists, if it doesn't, generate one\n2. Check if the column if the column was a generated default value column (either with a synthetic column flag in the metadata or checking if it's a single value column), and if it doesn't match with the current default value, regenerate it.\nIf there's no \"synthetic column\" flag in the metadata, this gets even worse, because we have to have some weird logic somewhere that checks if it's a column with a single value. Of course, you can't just check if it's a column with a single value, because any column that has a sorted time column would likely have a single value too, and you don't want to replace that with default null values. So then we need to make this logic smarter and figure out a reasonable set of assumptions as to when we can assume the materialized column was because of default null values. If we get it wrong, then we just destroyed some user data and we need to ask them to fix the segments, and at that point, they would've been better off just backfilling on their own.\nI don't remember offhand the on-disk format for multivalues, but if I remember correctly, it's just indices into a linear array of values. If that's the case, we can just have all of them index to the same value or make a special multivalue column type for synthetic columns that always returns empty arrays.\n. Detective squirrel emoji approves this pull request\n. This depends on ELR-2232\n. LGTM. We should clean up all the API responses since half of them return JSONObject.toString() and the other half return strings, but that's out of scope for this.\n. Hadoop is misspelled btw :)\n. Looks good other than the comments, ping me when you've addressed them and I'll merge this PR.\n. It should be doable to have this expansion handled on the Pinot side. Depending on whether or not there's a way to be notified whenever that cluster expansion happens, we might be able to do the expansion automatically or it might have to be done manually (ie. through some API). I haven't checked the newer Kafka APIs, though I think they're a lot better with this than the old ones.\n. Working on the unit test atm\n. This is just a quick fix for segment assignment when segments are uploaded/refreshed while some servers are down. A better version would take into account segment sizes/node memory capacities and avoiding assigning segments to only offline replicas as Jackie mentionned, though this would be done in a different PR.\n. I'll merge this in once I have a unit test.\n. I added a test that fails under the old incorrect behavior and succeeds with the new behavior.\n. It was missing the Apache header, venky fixed it in #197.\n. Most of the exceptions are logged as error, which is why the log is full of them. We mostly want to know which test failed, and this will allow us to do so. Ideally, we'd also keep the logs when tests fail, but I don't think surefire allows that.\n. That's a good idea. We can either log it using LOGGER.fatal or System.out/System.err. I'll create another PR for that, I need to clean up the numerous System.out.println() statements.\nI checked that all the logs fit within the Travis 10k line limit, and they do.\n. lgtm\n. lgtm\n. Discarding this PR as it is obsoleted by #216 and #219.\n. Is this only for prefix search (eg. LIKE 'potato%') or any search (eg. LIKE '%potato%').\n. Makes sense. Prefix search is doable with a combination greater than/equals and smaller than, but not any search. From checking the SQL92 spec, this is what we'd need to support:\n- % 0-n characters (eg. LIKE '%ato' matches 'potato' and 'tomato')\n- _ exactly one character (eg. LIKE '_ean' matches 'Jean' and 'Dean')\n- ESCAPE clause (eg. LIKE '20!%' ESCAPE '!' matches '20%' but not '20abcd')\nThe ESCAPE part would need some changes to the grammar, but nothing major. The best way would probably to convert the like clause to a regex on the server-side and find matching dictionary entry IDs, then process the query. This might be slow for large dictionaries.\n. lgtm\n. Of course :)\n. Unit test passing depends on #214 \n. Looks good otherwise.\n. lgtm\n. Discarding this PR as it is obsoleted by #216 and #219.\n. I'd change it to only run on oracle JDK 7, we already run on JDK 8 on Hudson.\n. lgtm\n. lgtm otherwise\n. LGTM. Not that much of a fan of the Holder suffix, SegmentName explains what the class does.\n. lgtm otherwise\n. I think using a regex would be more complicated if we were to support Windows, since the file separator character there is the same as the regex escape character.\n. There's no default null value for booleans, it needs to be specified explicitly. When it is specified explicitly, the actual value is returned, so there is no change in behavior in getDefaultNullValue().\n. We had a long discussion about this and there's no real good default value for booleans. If for example Integer.MIN_VALUE is a bad value for your application, you can filter it out, but if \"false\" doesn't work with your application, there's no way to remove these values once they're ingested. It's better at this point to not ingest data than cause problems later on.\n. LGTM otherwise, feel free to merge whenever works for you.\n. lgtm\n. I'm not sure I really like how this state machine is represented in code form and it's pretty hard to follow, but I don't have any concrete suggestions on how to improve it. It might be more readable if the states were classes, but some states reuse a fair bit of code, so it would still be convoluted to follow.\nIt's good that there's lots of logging, but it's still the kind of thing I hope won't break in the middle of the night in an obscure fashion. We should add a diagram that explains the various phases. With Graphviz installed, this should give you a basic diagram:\ndigraph segment_completion {\n    HOLDING -> COMMITTER_NOTIFIED;\n    HOLDING -> COMMITTER_DECIDED;\n    COMMITTER_DECIDED -> COMMITTER_NOTIFIED;\n    COMMITTER_DECIDED -> ABORTED;\n    COMMITTER_NOTIFIED -> ABORTED;\n    COMMITTER_UPLOADING -> ABORTED;\n    COMMITTER_UPLOADING -> COMMITTING;\n    COMMITTING -> COMMITTED;\n    COMMITTING -> ABORTED;\n    HOLDING -> ABORTED;\n    COMMITTER_NOTIFIED -> COMMITTER_UPLOADING [ label = \"Comment\"];\n}\nYou can turn the diagram into an image with dot -O -Tpng test.dot\nI'll give this another pass when my brain is fully woken up later this morning.\n. LGTM, thanks for reorganizing the code, it's a lot clearer what's happening now.\n. lgtm, nice catch!\n. This is what the consumer state machine will look when fully implemented.\n\n. I'm not sure how the state machine would work without having a method that's invoked periodically; there's no need to have multiple threads for this and I'd like to avoid synchronization between the Pinot code and some thread that's only there to make sure that on disconnections/connection establishment/leader re-election, we connect to the right node. If you have a good idea of how to make it work without that method and with no external thread, then I'm all ears.\nWith regards to the naming of the states, they do what the class is named for. Since there's no concurrent or asynchronous execution, the name of the state represents what is going to be done next (eg. if it's in connecting state, the next invocation of think() will do the actual connection).\nThere is no need to have the methods you have mentioned. All that this class does is process requests to consume between offset ranges and ensure that the client is connected to the appropriate Kafka broker for a given partition. The constructs that you have mentioned are something that should be handled in the Pinot realtime consumer, not the Kafka one. This class is only to separate the Kafka-specific details from the Pinot ones.\nWith regards to unit test, I'll see what I can do without having to create a Kafka consumer factory class and introduce additional complexity.\n. lgtm otherwise\n. lgtm, though we need to revisit the design of this part. Good job with removing the old unused code.\n. lgtm once the other comments have been addressed\n. Okay, I'll merge this as is, we can take out the comments when we refactor this class anyway.\n. lgtm otherwise\n. lgtm otherwise\n. lgtm\n. lgtm\n. lgtm otherwise\n. lgtm\n. I don't see anything major that would prevent merging this, I'd love to give this another review before it gets merged but if I don't have time for it today, merge it so that you don't get blocked :)\n. Already merged.\n. lgtm\n. lgtm\n. lgtm\n. lgtm, will merge\n. This code improves on the previous list sizes. For example, given six excluded dictionaryIds in a query, the old code generates oldPairs while the new code generates newpairs:\nadditiveRanges = false\n   holes = [[947,1308], [2277,2601], [2889,3810], [4637,4940], [5550,6094], [8486,8819]]\noldPairs = [[0,325], [326,658], [659,946], [1309,1658], [1659,1922], [1923,2276], [2602,2888], [3811,4058], [4059,4335], [4336,4636], [4941,5226], [5227,5549], [6095,6390], [6391,6689], [6690,6957], [6958,7246], [7247,7532], [7533,7919], [7920,8183], [8184,8485], [8820,9135]]\nnewpairs = [[0,946], [1309,2276], [2602,2888], [3811,4636], [4941,5549], [6095,8485], [8820,9135]]\nAs shown above, adjacent ranges are merged correctly.\n. I'll add the unit test for SortedInvertedIndexBasedFilterOperator in another PR, no other filter operator has a matching unit test and some of the plumbing to make this test readable is missing (eg. most of DataSourceUtils is commented out and defunct, see the latest revision of DataSourceUtils)\n. Created PINOT-3600 for the unit test.\n. lgtm\n. lgtm\n. lgtm. We should remember to add an integration test that deletes and recreates realtime tables in the future, to make sure this scenario works properly.\n. Good point, I'll wait until Mayank merges in his changes to serialization so that we're sure that it isn't affected. This isn't a very complicated/important refactoring anyway.\n. lgtm\n. jcabi is used to provide colored log output, like this:\n\n. We should review what we want to put on the web UI when I come back. Right now it's a mishmash of quickly made pages, but it would be good to have a much better landing page than this, especially if we can add information about servers, tables, cluster health, etc.\n. lgtm\n. Not really, those methods don't block for an extended period of time (other than socket connection establishment and the 100ms sleep period at the end if we need to introduce a delay between retries).\nBecause the loop in each function manages the overall timeout of operations, the worst that can happen is that we slightly overrun the requested timeout, but none of this code is latency sensitive to the point where an extra 99ms will break it.\n. lgtm, though based on my comment I'm not 100% sure as to how there is multiple threads executing here, so we should discuss this today.\n. This command is mostly for demo purposes and the command-line interface is compatible.\n. Not in the unit test PR. The PR was based off Kafka 0.8, it rebased fine and ran correctly within the IDE (without refreshing the maven project, so the IDE had Kafka 0.8 in the classpath).\n. ELR2409\n. No, it removes the partial download messages from the build logs. For example, this build log contains:\n```\nDownloading: https://repo.maven.apache.org/maven2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\n104/104 KB   3/25 KB             \n104/104 KB   5/25 KB \n104/104 KB   8/25 KB \n104/104 KB   11/25 KB \n104/104 KB   13/25 KB \n104/104 KB   16/25 KB \n104/104 KB   19/25 KB \n104/104 KB   21/25 KB \n104/104 KB   24/25 KB \n104/104 KB   25/25 KB \n3/10 KB   104/104 KB   25/25 KB \n5/10 KB   104/104 KB   25/25 KB \n8/10 KB   104/104 KB   25/25 KB \n10/10 KB   104/104 KB   25/25 KB \n10/10 KB   104/104 KB   3/278 KB   25/25 KB \n10/10 KB   104/104 KB   5/278 KB   25/25 KB \n10/10 KB   104/104 KB   8/278 KB   25/25 KB \n10/10 KB   104/104 KB   11/278 KB   25/25 KB \n10/10 KB   104/104 KB   13/278 KB   25/25 KB \n10/10 KB   104/104 KB   16/278 KB   25/25 KB \n10/10 KB   104/104 KB   19/278 KB   25/25 KB \n10/10 KB   104/104 KB   21/278 KB   25/25 KB \n10/10 KB   104/104 KB   24/278 KB   25/25 KB \n10/10 KB   104/104 KB   27/278 KB   25/25 KB \n10/10 KB   104/104 KB   29/278 KB   25/25 KB \n10/10 KB   104/104 KB   32/278 KB   25/25 KB \n10/10 KB   104/104 KB   32/278 KB   4/76 KB   25/25 KB \n10/10 KB   104/104 KB   32/278 KB   8/76 KB   25/25 KB \n10/10 KB   104/104 KB   32/278 KB   12/76 KB   25/25 KB \n10/10 KB   104/104 KB   32/278 KB   16/76 KB   25/25 KB   \nDownloaded: https://repo.maven.apache.org/maven2/org/apache/maven/scm/maven-scm-api/1.9/maven-scm-api-1.9.jar (104 KB at 1096.3 KB/sec)\n```\nWith this, the download status isn't part of the logs.\n. This is not complete, it's missing cleanup when removing a consumer type (eg. remove HLC segments when removing the HLC consumer type) and doesn't support adding HLC to an existing LLC table.\n. Yeah, it's just something I noticed, if a segment isn't in EV when we're waiting for it to change, it fails the if condition and tries to fetch it again in a tight loop. This adds a small pause between fetches so that we avoid causing issues with ZK.\n. Oh didn't notice the approval, I'll merge it now :)\n. Except this one passes travis :)\n. We need a way to pass the \"shutting down\" state somewhere, but AFAIK at the moment there isn't a good way to do it.\n. Thinking about this, we shouldn't ever hit that 10 minute timeout. Kafka is configured with a relatively short timeout (can't remember offhand if it's 10s or 60s) and is the only blocking operation in that thread. After the blocking operation, the consumption loop should notice the shutting down flag (it's also correctly marked as volatile) and exit. As such, the consumption loop shouldn't stay blocked for an extended period of time.\nThe 10 minute is just a sanity check that we shouldn't hit; if we do, then on shutdown it will stay hung and we'll be able to relatively easily diagnose that situation by looking at a thread dump.\n. With regards to Subbu's comment about the zk watches, I ran it by Kishore and he said it's okay.\n. On a query that has multiple OR clauses:\nBenchmark                                           (optimizationFlags)  (queryPattern)    Mode     Cnt    Score   Error  Units\nBenchmarkQueryEngine.sendQueryToPinot                                                 0  sample  115207    5.204 \u00b1 0.013  ms/op\nBenchmarkQueryEngine.sendQueryToPinot   -multipleOrEqualitiesToInClause               0  sample    1757  343.976 \u00b1 0.338  ms/op\n. Broke because of an unrelated issue (see #786), rebasing this branch to have that fix.\n. Done.\n. Haven't yet tested the performance changes on a large cluster and this needs some additional tests.\n. There's a couple additional optimizations that could be done as well:\n- Deferring updates for a couple of seconds so that we lower the overall number of ZK reads/stat calls\n- Checking the instance config stats on external view change prior to fetching them\n. Some unit tests failed as they used Thread.sleep() and expected the cluster to reach a given state. The fix for them is in #834.\n. Travis build is broken for now, the fix for the build is in #802. I'll merge this once the build looks good.\n. We should have the code coverage cover both integration and unit tests, not only the unit tests.\n. Yes, there's a fair bit of logging on a per-query basis (IIRC last time I ran it it was 3-4 log lines per query, which unfortunately makes the JMH output unreadable) which interferes with performance measurements. For performance measurements, we should whitelist logging as opposed to having everything logging to the console imho.\n. Can you add a test for backwards compatibility? For example, 1000 should be 1 s (1000 ms) for backwards compatibility if there is no unit specified.. Before:\n\nAfter:\n\n. I looked at reducing the allocations for what is remaining but that would require significant refactoring of the indexing.. If I remember correctly, we also had a metric for each message type, can you make sure we bump it up when we receive a stopped consuming message?. Also, looks like the build failed for some reason.. This is still a work in progress, by the way.. Not going to do this one after all.. Do we want to keep it if the commit fails due to a timeout, so that we can reupload quickly with the same offset?. As @mcvsubbu mentioned, the onBecomeOfflineFromOnline (and the dropped transitions) pass the resource name (\"brokerResource\") incorrectly, they should also pass the partition name (as is done correctly in onBecomeOnlineFromOffline).. Checked with Mayank, he's okay with these changes as well.. Please limit the length of the pull request titles to 50 characters.. For the integration test, you can use REGEXP_LIKE in H2 (http://www.h2database.com/html/functions.html#regexp_like) as part of the query comparison/generation. I can help you with that part.. Did some quick testing with the realtime cluster integration test, the time used to convert the segments during the tests:\n```\nWithout this optimization\nconversionTimeMillis = 2791\nconversionTimeMillis = 2134\nconversionTimeMillis = 1994\nconversionTimeMillis = 2004\nconversionTimeMillis = 1941\nWith this optimization\nconversionTimeMillis = 1845\nconversionTimeMillis = 1462\nconversionTimeMillis = 1263\nconversionTimeMillis = 1255\nconversionTimeMillis = 1246\n. Why do we want to log the exception as info instead of warn/error?. I've added an integration test for this.. The change in the test is that we added it to the multiple node cluster integration test and added a test that disables/re-enables a single random instance multiple times.. From testing this on my desktop:\npinot-common: Total time: 42.458 s -> Total time: 9.011 s\npinot-api: Total time: 6.708 s -> Total time: 4.006 s\n. From testing on my desktop (before and after):\ntestInstanceToggle(com.linkedin.pinot.controller.helix.ControllerInstanceToggleTest)  Time elapsed: 226.345 sec\ntestInstanceToggle(com.linkedin.pinot.controller.helix.ControllerInstanceToggleTest)  Time elapsed: 46.521 sec\n``. It's not done for delete because there's only one deletion. In this test, there are 20 broker and server instances that get turned on and off as well as 10 segments, for a total of 90 pauses of 2 seconds. This remove most of these pauses, saving 3 minutes per test execution.. I'll wait until #1618 is merged to review this, since GitHub shows both commits as part of this PR. Can you rebase this PR once you've merged #1618? It'll make this diff readable.. Can you make sure that realtime segments are dropped from the realtime servers when the table is deleted?. You'll need to rebase before merging, due to refactorings in the integration tests.. Make sure that the build passes as well.. Can you add tests for the comparison functions? I didn't see any that covered that code.. I tested this with a slightly modified version of the code that would generate the same id numbers for leaf nodes and confirmed that this bugfix does pass the integration tests even if there are id collisions (and fails if there are id collisions without the bugfix).. Actually, I think we don't even use the inverted index for sorted columns since we have a specialized operator for them. If we ever use the inverted index for it, then it should be faster. :grin:. This gives about 30% speedup (~30ms -> ~20ms) on very large queries with many strings in anINclause (eg. 20k+ elements). Not 100% sure about theHashSetinstead ofTreeSet, I think some tests depend on the ordering of the items in anIN` clause.. There needs to be a retry for data reads as well, not only metadata fetches. Can you make sure that the retry covers all calls to the Kafka consumer?. Tested running the quick start and pinot-admin tools.. Unless it changed, the LLC behavior was per-segment size. Can you explain what is the intended behavior and how the different segment size parameters interact?. @jamesyfshao Can you make sure to add a page to the Wiki that explains how to configure it? Thanks!. Great, saw that you added the wiki doc at https://github.com/linkedin/pinot/wiki/Pinot-Segment-Fetcher-Configuration\nThanks a lot!. I'll address the review comments in a different PR, due to the time constraint on this. Created internal ticket PINOT-5394 to track it.. You mean keep the query history in the query console? It would be doable, though not in this PR.. Merged, added comment in the code that explains it.. I can definitely see why you want this feature.\nHowever, we'd need a way to make it explicit that data loaded by URL can be deleted (or not). From a user's perspective, it's not clear whether data loaded by URL is managed by Pinot or not.\nIt's not too confusing for now since we need to use Pinot-specific data formats, but if we support loading data in other formats (eg. ORC or Parquet), does it make sense to also delete those? I'm guessing that if we support loading ORC data from S3 or HDFS, the expectation from users is that Pinot does not delete the data files, as they could be used by other systems (or even be the sole copy of the data).. There are two Kafka consumer implementations in Pinot: an older deprecated consumer that uses the older Kafka high level consumer (from the 0.7-0.8 APIs, which uses ZK for offset management), and a newer consumer that connects directly to the Kafka brokers and handles offset management within Pinot.\nWe have updated the documentation to use the newer consumer (the part that says \"stream.kafka.consumer.type\": \"simple\"). The older properties stream.kafka.hlc.zk.connect.string and stream.kafka.zk.broker.url that refer to Kafka 0.7/0.8 ZK-based offset management are effectively ignored with the new consumer; we just have the older consumer still present for backwards compatibility reasons.\nI can't remember offhand if these properties are still required (they shouldn't) or if you can create a table without specifying them. If it gives an error if those properties are absent and you're using the newer consumer, ping me, that shouldn't happen.. Waiting on some confirmations before merging this one, even if it passes Travis.. Looks like we forgot to merge this one, merging it now.. The issue seems that it's caused because the retry policy is reused across multiple threads/operations, a new one should be instantiated for each operation. Some of the retry policies are immutable (eg. fixed delay and no delay), but the exponential delay one has mutable state; since the instance is shared, each time the operation fails, the counter is doubled (on a permanent basis, since the same instance is used).\nA better way to solve this would be to either instantiate a new policy for each operation or operate on a copy of the policy object. Alternatively, policies could be made immutable and getNextDelayMs() be changed to be passed a number of attempts, so that the delay can be computed.\nIMHO, policies should be immutable.. The correct fix for this one is to pass the iteration number in getNextDelayMs(), that way the policy can be reused at will.. Is there anything that's blocking this review?. Haha nice. Does it actually break that often? It shouldn't really happen that you'd get that high a distribution skew.. This is a debugging feature (which is why it lives at something like /debug/routingTable/<tableName>), and the prefix match is intentional; it's not really meant to be used as an actual API.\nWhat's the use case for this, and what data do you need for your integration? You mention that you're using this as part of your Presto-Pinot connector, it should probably use a stable API instead of a debugging endpoint (which could go away at any point in time). We can definitely add an API if you need it, but this debug endpoint is not intended to be a part of the actual public API.. I wonder how that passed the integration tests though. In theory, the query generator should have generated at least one query that has the select * ... order by shape, so this should have been caught earlier.\nCan you look into how that happened? The code fix, if need be, can be done as part of a different PR.. @mcvsubbu This uses the new API, which can be pushed back verbatim. As you said, the old API did not allow this due to the OFFLINE/REALTIME parts being stuck together.. @mcvsubbu This can also be used for migration. PR #3506 discusses how one can migrate from the old config format to the new config format by backing up the configs with this tool and merging the different configs across Pinot clusters.. This has been tested using 4,310 table config files used in production at Linkedin, which have been tested for equality between the old and new configuration formats (both before and after merging) to ensure that the code behaves correctly across a large number of varied use cases. For obvious reasons, I'm not checking those in.\nThe overall code is also exercised as part of #2937.. This will get done once the config format is fully stable.. Any progress on this?. Test cases will be added once the new config is fully stabilized, as per the comment on #3501. The config format has changed in multiple subtle ways since the original design.\nThis code has already been tested using 4,310 different table configs from production and testing environments at Linkedin.. Can you explain why does the broker needs to cache the schema in the first place?. Is there a specific reason why the Kafka version is upgraded?\n. Would be better to have it write OK if it's running and its status if it's not (eg. shutting down, starting up, etc.) than just returning an error.\n. I don't like this special case. Say that for some reason, we wanted to change the replication level of a table, it's two operations (update property store, update ideal state). However, since we override the partition id based on ideal state and replication factor being identical, this would mean that behavior would change between the two operations.\nWe'd be better off requiring all instances to have a valid partition id in their instance metadata.\nI haven't checked if we default to assigning \"ALL\" as the partition id in instance metadata, but if we don't, we should assign them the \"ALL\" partition id when we compute their initial consumer group id and then remove this special check.\n. Ah I see, we're assigning numerical partitions ids when we set up the table and here we were not pulling from the instance partition id but always assigning ALL to every segment.\n. In this case, I would remove the check and have the partition ids change to the value in instance config. The partition id is not used at the moment by the routing table builder, so it's fine if it changes at this moment. We should change the values assigned to the partition id on a per instance basis when we assign them, but this can be done in another PR.\n. Well just pull whatever is in the instance config. It's not guaranteed to always be numerical. :)\n. addTimedTableValue\n. Looks good otherwise, will merge it once above comment is addressed.\n. Can you make this a different commit?\n. Use LOGGER.error(\"Failed to download file from {}, attempt {}, e, uri, retry)\n. It would be a lot better if we uploaded a JSON object with instructions as opposed to doing an empty post with a HTTP header.\n. Remove this commented out code.\n. Wow, we fetch a script from an external server and execute it during the build? What happens if this server is unreachable or compromised?\n. If the same instance of HttpClient is reused, then a multithread-aware connection manager should be used. See http://hc.apache.org/httpclient-3.x/threading.html\n. This could be a security/liability issue if someone compromises the codecov.io script to send spam and/or DDoS some other website. It would be better to check out a known revision of the script (which is available at https://github.com/codecov/codecov-bash) and invoke it as part of a script that does the after_success part of the build than fetching an unknown version of it.\n. Is this intended?\n. There is a difference. If you git clone 1234567 by definition either hash 1234567 exists and has the content that you expect, unless someone has created malicious content that happens to have the exact same SHA-1 hash. This is unlikely, but not impossible (see https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html).\nPulling it from an external server adds the risk that the server is compromised somehow and serves a completely different version; checking out a known revision eliminates that risk as we can vet the contents of the script ahead of time and, barring a hash collision attack, that someone inserts code in that script.\nI'd replace the bash/curl call by:\ngit clone https://github.com/codecov/codecov-bash.git\ngit checkout d3157145db519e2603b870e9596b9086a7983ac1 && so codecov/codecov\n. Then we just review the script changes and update the hash to point to the current. This shouldn't happen often anyway.\n. Use IEC 60027-2/IEEE 1541-2002 units (GiB, MiB).\n. Use a case sensitive match, to avoid confusion between \"Mb\" (megabit) and \"MB\" (megabyte).\n. Add support for binary prefixes (kibi, mebi, gibi, tebi), adjust non-binary prefixes to be powers of ten, handle bits/bytes correctly.\n. Is there a limit to the number of concurrent connections/requests sent to a single host?\n. Change this to InterruptedException, change log message to \"Interrupted while waiting for shutdown delay period of {} ms.\"\n. maxRetryCount\n. Add logging statement \"Exceeded maximum retry count while fetching {}, aborting.\"\n. I disagree. The segment fetch logic should handle retries and the segment refresh message handling should be asynchronous instead of blocking the Helix message pump.\n. Why then would those units differ from those used by hard drive manufacturers?\n. 2TB where 2TB = 2 * 10^12, not 2 * 2^40.\n.  This piece of code generates documentation based on the annotations (see the annotated Instance class). If there are no annotations on the parameter, then there isn't a place to pull the documentation from, and as such, we don't generate an empty documentation object in the documentation (which would probably not validate against the Swagger spec).\n. Good idea, although this is out of scope for this PR. I have created PINOT-3192 to track this.\n. What do you think would be a good name pattern for these constants? All of those strings are from the Swagger spec and not reused anywhere else in the Pinot codebase.\nI couldn't think of anything good other than TYPE, which is not very useful.\n. This will look like pinot-hadoop0.1.2 which looks kind of weird. I'd add a hyphen so that it looks like pinot-hadoop-0.1.2.\n. All of these can be null, you need a fallback to avoid NPEs.\n. Good idea.\n. At this point I want to avoid having too many changes to the API, as Subbu is working on realtime implementation in a local branch that he will need to merge; the only changes I'm making at the moment should be easy to fix merge-wise.\nIf you feel that such an improvement should be tracked as part of tech debt cleanup, then we can create a ticket to address it after the new realtime consumer work is completed.\n. I'll check with Xiang to see if making significant API changes breaks his consumer. I know he has a different high level consumer implementation to shard based on the partition, so I'm not too sure as to how this is affected.\nThe segment name builder doesn't care as to what you put in as the table name, so you could store an undecorated name (ie. without the _REALTIME suffix). I don't think that changes much and I don't really think this will cause problems in the low level consumer design.\n. Created PINOT-3212 to refactor this after the new realtime consumer is written.\n. setUp or setup\n. test should be lowercase (Java-style) as opposed to uppercase (C++/C#-style). This also applies to other uppercase methods.\n. If we're planning on having other state model updates in the future, it would be good to make this flag specific to this particular update.\n. controller.upgrade_to_llc_state_model maybe?\n. Sure, we can make that part of another PR. I'd like to avoid scope creep during review time though. :)\n. The routing table builder is initialized by the RoutingTableBuilderFactory, I haven't yet added it there (it'll happen when writing the unit tests).\n. Agreed, we shouldn't have those strings duplicated everywhere.\n. done\n. I'd add a test for this, to make sure things are sorted in the expected order.\n. I'd just add multiple segments in a sorted collection and/or do Collections.sort and then check in which order segments come out, which would document the sort order at the same time.\n. This should be in the parent class.\n. Can you put the type so that it compiles with JDK 7\n. Can you describe what this is testing?\n. All the variable names follow the xByY convention (key is Y, value is X) or xToY (key is X, value is Y or a list of tuples X and Y).\n. No, only the last segment is one for which the consuming state is valid. This is used to store whether the last segment is a segment for which the CONSUMING state is valid or not. Any other segment should be in ONLINE state to be routable.\n. Do we want to check if every server has the same number of segments assigned to it? It seems that this test would pass if one server is assigned no segments.\n. What happens if this is not defined or null?\n. I meant that as when we load the indexing config from ZK/Helix, what happens if that property is not there or has an invalid value stored? Is it a mandatory property and Jackson gives an error, is it null or does it get typecasted into the right type?\n. The API didn't exist when the PR was created, two weeks ago.\n. haha \ud83c\udf60 \n. Yes, I looked at the server that ran out of memory this morning and it had 55k+ AllocationContexts and it also had the merged segment format. While this is a small amount of the heap (~35MiB), this should save some space.\nOne current AllocationContext has a size of 32 bytes, this will roughly double its size to 64 bytes, but will enable the sharing of String instances between multiple allocation contexts, so overall usage should be lower.\nMost of the heap was still taken by other Strings, but that's still an optimization. \ud83d\ude04 \n. It's already documented in other parts (see https://github.com/linkedin/pinot/pull/252/files#diff-5aae5dfc010ab141a3c61f94cdebc42aR136 and https://github.com/linkedin/pinot/pull/252/files#diff-ae33b4a0fa4da0354102626cfcc98a0cR40) and most of this code should go away when we remove the high level consumer.\n. This doesn't match with the implementation of equals. Two KafkaStreamMetadata are equal even if their consumer types are in a different order, but they'll have a different hashCode. In this case, this means that if two instances of the same KafkaStreamMetadata with different consumer types order are put in the same set, the behavior won't be deterministic and you'll get either one or two items in the set, depending on whether they fall in the same slot or not.\n. Should be int to match with the type. In the unlikely case of 128 replicas this will fail.\n. Use Guava's splitter here and use the trimResults option so that things like highLevel, lowLevel parse properly even if there's whitespace in the list.\n. Add an else branch for unsupported consumer type, as this will silently ignore an invalid consumer type if there's at least one valid item in the list.\n. I'd rename this to getPartitionCount\n. I'd expand on this comment to say that due to a bug in autorebalance we balance manually, see the helix bug.\n. I'd rename this to updateHelixIdealState so that it's clearer what is being updated in Helix\n. s/setes/sets/\n. I also thought about that when implementing this, but decided against it since we would log this message every time we'd update the ideal state, which might be too noisy and doesn't add much information:\n- If we compress the znode, it'll show up as compressed in zooinspector\n- If we don't and it exceeds the size, then we'll now get an exception that bubbles up properly as opposed to failing silently before\n. Oh I see, I misunderstood your comment as to saying whether or not compression was enabled on every write. Makes sense, I'll add it.\n. I would change finalization to something else to avoid reader confusion with Java finalization.\n. Rename to CATCH_UP\n. Does method here refer to an HTTP request method (eg. GET, POST, DELETE, etc.) or something else?\n. Can we have a short description of each of these statuses? Eg. \n/** Server should discard segment */\nDISCARD,\n. I'm confused by this. If we enter this code block, we update a code block-local stateMap but that variable doesn't escape that code block. Should the declaration of stateMap be pulled above the if statement?\n. Ah I see what's happening, you're mutating the internal state of the ideal state. Would be better to do idealState.setPartitionState\n. Good explanation of what's happening.\n. This is kafka partition, right?\n. Weird indent.\n. I'd add a short description of what's supposed to happen in each possible state. For example, in HOLDING state it could say something similar to \"When a client reports its current offset, we want to wait up to MAX_TIME for n replicas to show up, at which point we choose the maximum offset and notify a replica.\"\n. This state machine is quite complex, is there a way to simplify it?\nI get the impression some states could be removed from it by using state that's been written to Helix/ZK in order to keep only the necessary parts for the segment completion phase to work. For example, if a client reports its offset but we've already committed the segment to the property store, there doesn't need to be a FSM state for this case; this would remove one state in the state machine as well as remove the need to keep the state machine in memory for an extended period of time.\nIf there's a diagram of the valid state transitions available on the GitHub wiki, it would also be nice to link it here to help with understanding this part of the protocol.\n. Need to add the Apache license header. Run mvn license:format and update your branch.\n. Typo in MAX_HOLD_TIME_MS\n. What's the rationale behind deprecating this? It makes writing equals() significantly more readable.\n. This basically makes any object that contains NaNs unable to be equal to another, is this needed?\n. The contract for equals() is different than floating point equality. While NaN != NaN for floating point math, it should be considered equivalent for the purposes of object equality. \nFrom Effective Java Chapter 3 Item 7:\n\nFor primitive fields whose type is not float or double, use the == operator for comparisons; for object reference fields, invoke the equals method recursively; for float fields, translate to int values using Float.floatToIntBits and compare the int values using the == operator; for double fields, translate to long values using Double.doubleToLongBits\nand compare the long values using the == operator. (The special treatment of float and double fields is made necessary by the existence of Float.NaN, -0.0f, and the analogous double constants; see the Float.equals documentation for details.) For array fields, apply these guidelines to each element.\n. It's not if you consider floating point inequalities (see the other comment). For example, this would be the correct implementation of equals:\n\n// Check for instance equality, nulls, etc...\nreturn isEqual(anInt, other.anInt) && isEqual(aFloat, other.aFloat);\nwith the expanded version being less readable:\nreturn anInt == other.anInt && Float.floatToIntBits(aFloat) == Float.floatToIntBits(other.aFloat);\nor even subtly incorrect:\nreturn anInt == other.anInt && aFloat == other.aFloat;\n. Yeah I'll synchronize the user-facing methods.\n. You could also write in implementing {@link Object#equals(Object)}\n. This could also be written as \"Compares both arguments for equality, and considers NaN to be equal to NaN (unlike the Java == operator).\"\n. Is this still necessary considering the fact that there is the routing table selector factory that switches between routing table selector implementations?\n. Avoid using reflection to access private fields\n. Would be better to not have the external view based routing not aware of the fact that there are HLC and LLC implementations. A better way to do it would be to have a RoutingTable implementation that merges the output of an offline routing table and a realtime routing table, with the realtime routing table being aware of the fact that there is both an hlc and llc one.\n. Would be better to cache this value in a transient field, as this conversion will be invoked on every row where there is a null value. \n. I assume it's missing a ! :)\n. also needs an argument of result\n. Compare type properly so that a child class of this one should not compare as equals.\n. I would add this class to MetadataEqualsHashCodeTest\n. Make this transient\n. Would be better to just write this as protocol + \"://\" + host + \":\" + port\n. Remove commented out code\n. Should be in a more appropriate location, eg. ControllerConf\n. Done\n. This is now read from the table config\n. Done\n. Removed sysout\n. done\n. added check for segment name\n. I'd remove this before merging\n. Jira ticket number is fine (at least until we get an external JIRA, if that ever happens), though it would help if besides the ticket number it gives a short summary of the ticket (eg. PINOT-1234 (NPE under certain conditions when ...))\n. What's an interf?\n. Does num refer to the number of children (count) or number of children (child id)? Since it looks like it's the former, I'd call this getChildrenCount().\n. Rename to partitionCount\n. Nice catch\n. We should display the number of rows consumed when we hit the time limit. Also, if we consumed 0 rows and try to create a segment, I think the segment creator throws an exception. In this case, it would probably be good to not close the segment and just keep consuming, it's somewhat useless to write a zero row segment.\n. We shouldn't ignore this. If we exceed the pre-allocated buffer size for the segment, this will cause the next row being indexed to throw an exception due to overrunning the fixed buffer size.\n. This is already handled by the segment, which knows how many rows have been indexed (or dropped from indexing).\n. This assumes that each row that is consumed from Kafka is valid. We should only consider valid rows that were successfully indexed, not just any row.\n. Keep in mind that this can also exceed the configured buffer limit in the case of Kafka unclean leader election, as we discussed offline.\n. We should comment what the true and false return values are for these methods. For example, I assumed that true was success (eg. for something like if (buildSegmentAndReplace()) { /* cleanup... */ }) but this one returns false on success.\n. Use Guava's Uninterruptibles for this, it'll take care of catching the exception and sleeping again if for some reason this thread is notified.\n. Instead of this logic, might be better to do Thread.join with a timeout?\n. I assume that this is so that we can inject a fake time source in unit tests? If so, should probably be protected\n. Ah, stop(timeout) does the Thread.join, it would be better to return a success/failure flag from stop() with the reason than checking the current time to know whether or not this succeeded within the time limit.\n. The 2 should be a constant or a method with a default value.\n. I wanted to as well, but Guava range is generic, which means the ranges contained in them are not primitives.\n. That's what the isDegenerate check is for :)\n. IntPair doesn't seem like the right place to add those methods, as the name suggests it's just a pair of integers with no other functionality.\nIt seems that we only use IntPair for docId ranges though, so I'll give this another look and see if we can rename this class to DocIdRange instead and move those methods there.\n. Ranges are inclusive, so [1; 3] and [4; 6] are adjacent and should be merged.\nDisjoint might not be the right term for this though (strictly speaking, they have no items in common and thus are disjoint) but I couldn't come up with a better word. As you say, mergeable is what we're looking for here.\n. If you call predicate.getNonMatchingIds() for a <> 42, you'll get the dictionaryId of 42, while predicate.getMachingIds() will return all dictionaryIds except the one for 42. The method name is very misleading.\n. What is there to change?\n. haha\n. I'll rename IntPair and clean it up in a different PR, otherwise this PR will become unreadable.\n. fixed\n. fixed\n. Renamed method to isInvalid to make it clearer\n. I'd rather not, otherwise that means SimpleConsumerWrapper will now depend on KafkaStreamMetadata and will now need to know about the fact that there is a stream metadata, while the current implementation is not coupled to any Pinot-specific concepts. In theory, one could take SimpleConsumerWrapper and drop it in another system and it would be good to keep it this way.\nIf we were to pass the metadata around, then we shouldn't have SimpleConsumerWrapper depend on it, but this also means that we should update the signature to remove some of the arguments (realtimeTableName, nReplicas) and the relevant unit tests.\n. -1L and Long.MAX_VALUE both mean no upper limit in SimpleConsumerWrapper. We actually don't check the end offset in LLRealtimeSegmentDataManager so technically this is a no-op, but if we were, it would mean that we would ignore all records with a offset larger or equal to zero.\nIf we were to update LLRealtimeSegmentDataManager to take into account the end offset, then having the ZK metadata already containing a very large end offset is better than having to add a special case for 0 later on.\n. We could, see note below.\n. Done.\n. Done.\n. Done.\n. I'll do this refactoring in a different PR, so that we avoid mixing code changes with refactorings.\n. PINOT-3601 for the refactoring\n. Refactoring in #471 \n. Would be good to add a comment that explains what the path looks like.\n. Would be good to use utility methods for those, I'm pretty sure there's a method that builds a property store znode path given a table and segment name.\n. It's needed. This makes it so that we display all warnings on the console but only the info for the server starter, otherwise the console would be really noisy. The logs on disk still contain all the info level logs.\nRight now as it is, we don't display any status when starting the controller/broker/server on open source release, so a user has no idea of what happened (or even if anything happened) after start up, with this they get a friendly message that the controller has started and is listening on port 9000.\n. See the screenshot below, it explains what the intent is.\n. Makes sense, it's inconsistent between the different logs too.\n. Copy-paste from bootstrap template \ud83d\ude1b \nI'll remove it.\n. Remove string concatenation\n. Use PINOT_QUERY_SCHEDULER_PREFIX\n. Typo in request\n. We shouldn't need the volatile, unless the consumption loop runs concurrently with catching up. If it does, we should prevent that from happening instead of trying to synchronize between both threads.\n. This is likely to be too many threads, considering we shouldn't be IO bound here; since we'll end up with significantly more threads that are in executable state than the number of physical cores, they'll end up competing for execution slots/CPU cache with an overall lower throughput. There's already overcommitting of actual physical cores through SMT, so adding additional overcommitting will only lower overall throughput.\nAlso, this should also clarify what is the difference between a query runner and query worker, from a cursory read it's not clear which thread pool does what.\n. I would just name this something like message count log threshold or something instead of hundred_k. The same thing applies to one minute/hour in millis.\nIf you want to express the duration in a human readable fashion, you can also do something like HOURS.toMillis(1) from java.util.concurrent.TimeUnit. I would only make it a constant if it's something that we might want to change.\n. What do you think about displaying this as a range(eg. Starting consumption loop for offset range [123; 456]) instead of start/end offset?\n. Not 100% sure, but I think you can do IOUtils.closeQuietly(_consumerWrapper) so that you don't have to catch the exception\n. I'd remove the from or complete the sentence\n. Should we exclude segments that have a size of -1 here?\n. Yes, we want to update the metrics for row conversion status (errors, etc.) on every call of consumeLoop(). They won't be double-counted, since we do _fieldExtractor.resetCounters() at the beginning of the consumeLoop()\n. We could. The metric is ambiguous in the sense that at that point, the row is technically consumed from Kafka though not indexed yet. In practice, both are equivalent since indexing takes so little time.\n. We should have multiple phases for this and document them. I don't think flush should include the completion protocol time, but as you say, segment creation duration is a better name for this. We'd also need a new metric for total time spent in the completion protocol.\n. So if we have a segment of 10000 bytes and a defunct segment, diskSizeInBytes should be 9999 bytes?\n. I'd rename this to something updateNonConsumingPartitionMetric, right now it's not clear it's updating metrics (or what it's updating)\n. Can't really throw an exception, since this is going to get called every time we update the indexing config (eg. to change metadata) and an HLC config already exists. This would prevent metadata updates and/or other indexing config changes.\n. This method actually uses the routing table to get a list of tables that match for a given request. The result would be the same for HLC vs LLC.\nI can still pass the routing table parameters (in case we need them for a future option), but it wouldn't change anything in this case.\n. I thought about that too, so that we could even remove the enableTrace flag (or extend it to make it more flexible).\nTechnically, we could do it in another release (changing the name of the field, not its type) since only the tag is written on the wire.\n. Is there a rationale behind the 1 second number? Are there situations where 1 second wouldn't be enough (eg. full gc on server or controller for several seconds)?\n. done\n. done\n. done\n. done\n. enableTrace hasn't been modified in this, though we'll have the flexibility to do so in the future and give it parameters (eg. trace only the aggregation time, all operators or broker routing time, etc.).\n. This can throw an exception if someone puts in an invalid value (eg. useStarTree=foo)\n. Is function evaluation case sensitive? For example, is SELECT myFunc(a) equivalent to SELECT MYFUNC(a)?\n. Should an exception be thrown if we reach an unsupported branch?\n. Are we planning to support constants in another PR? (eg. SELECT foo + 1)\n. This should be a config property, not an environment property. All other Pinot settings come from config files.\n. Make this configurable.\n. Since we didn't have global gauges before, can you add the proper initialization code in AbstractMetrics.initializeGlobalMeters. What that code does is that it initializes all the metrics to zero at startup so that the metrics get created. Might need to rename that method to initializeGlobalMetrics, since it'll do both gauges and meters now.\n. IdealState instead of Idealstate\n. Is there a particular rationale for doing this instead of idealState.toString().length()?\n. Ah, I see. It does seem more logical to add that to the segment checker (since as you point out, it already fetches IS and EV), though I'm not sure why that's done in a different pass from the validation.\n. Correct, there's a routing table creator that creates both hlc and llc routing tables and allows switching between both at query time.\n. Yes, that's correct.\n. The ZK read happens only if the value is stale or doesn't exist, otherwise it's just using the cached value. I could switch it to an async read if you think it's necessary.\n. Most of the complexity is from reading a value from ZK and caching it, while trying to avoid having a stale ratio value for too long. A simpler implementation would forego the cache and read the config value from ZK on every query, which is not what we want.\nHow would you make it simpler?\n. toString() works on ASTs, IIRC. If it doesn't, ping me, that's a 5 minute fix. :)\nI also have a toString for FilterQueryTree in my optimization branch, I'll check it in in a different PR.\n. done\n. It's not unfortunately (it just stores one znrecord and always returns the same one, ignoring the path argument), though it would be really handy to have a one that's generic enough to be reused.\n. I had it originally skip the rebuild if there was no column with more than one value, but it would mean that things like a = 1 OR a = 1 would not get rewritten, as the collected column values would be a -> 1. I'll keep track of this in a different way to avoid rewrites.\n. The children list is null to avoid allocating an empty array list for all leaf nodes of the filter tree.\n. Can you take out the sysouts?\n. Can you add a comment that the format should be 127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002/app/a which applies the /app/a chroot to all servers and to @see org.apache.zookeeper.Zookeeper#Zookeeper(String, int, org.apache.zookeeper.Watcher) for details of the zk connection string.\n. Done\n. Actually, I think this method is completely unnecessary. It's only used in HelixBrokerStarter to create another ZKClient that points only to the propertystore, instead of using the same connection as the HelixManager (since the helix manager is started later).\nMy guess is that it would be better to reuse the same ZK connection as the helix manager and get the property store from it.\n. Typo in template.\nIs it possible that this can be https too? Might be better to have a single string for the API endpoint (eg. \"http://foo:1234/webhdfs/v1\"), that way people can specify the proto, host and port at the same time.\n. The benchmark won't start if there's something that went wrong, so the user should notice. :)\n. This gets invoked directly by JMH, so we can't add arguments.\n. Well, you'd replace the list of patterns in QUERY_PATTERNS with queries that you'd like to benchmark. Hopefully you get the table name right. :P\n. done\n. Done, added check for this and test for the check\n. This looks like the stock swagger index file, if so, you should pull it from the webjar or document the changes from the stock version.\n. On one large cluster that we have, latency for the routing table refresh is in the order of a few to several dozens seconds, so milliseconds should be fine. If this drops by two orders of magnitude or more, we can change the metric later to nanoseconds. The metric gets converted to seconds anyway, so this would not be a breaking change.\n. I assume that should be !schemaName.isEmpty() :)\n. Would be clearer if this code used the retry policy code that we already have. Check RetryPolicy and RetryPolicies, there's support for randomized exponential backoff which should also be more appropriate than a fixed timeout in the case of a controller overload.\n. Since we're not actually deleting the segments, we will eventually fill up the disk, no? Do we want to have some code in Pinot that will clean up this directory on an ongoing basis?\n. It was needed when markDataResourceOnline checked if there was a rebuild needed, since not all unit tests have a valid HelixManager and/or initialize everything. Originally, everything went through markDataResourceOnline, including external view changes, and as such, it needed a rebuild check. Now that markDataResourceOnline is unconditional and only depends on the external view and instance configs passed, this workaround isn't required.\n. Now yes.\n. No, this piece of code gathers the new instance configs for which we have a previous version and puts it in a map instanceName -> instanceConfig, so that those two can be compared.\n. Yes, we check this at a later step (see \"Did some instance change state?\")\n. Instance config won't change on every segment add, it shouldn't change very often. Instance config refers to the contents of CONFIGS/PARTICIPANT for which the only updates would be for isShuttingDown and HELIX_ENABLED\n. Yes, I'll add it.\n. That specific metric was added in #799 \n. Yes, I'll probably remove listing the tables that don't need update as well, since it's a very long list that gets written on each external view change.\n. Yes, that's been done.\n. Yes.\n. Done\n. Yes.\n. In the unlikely event that the external view znode version is equal to Integer.MIN_VALUE, we'll always rebuild the routing table in this case. It shouldn't happen, but if it does, then we won't lose that routing table update.\n. The code already checks for that specific condition seven lines above (see \"If it's the same znode, don't bother comparing the contents of the instance configs\").\n. If the newly seen instance hasn't changed in a way that is considered different (eg. some field that we don't care about), then we keep it as the last seen version.\n. This handles all tables for which brokerResource did an OFFLINE to ONLINE state transition. We remove entries when processing ONLINE to OFFLINE state transitions (see markDataResourceOffline).\n. It would indicate in this case that the external view got deleted for some reason. ZooKeeper#exists can return null, see the ZK documentation for exists\n. Is it, because if we're at that point in the code, the znode versions are different. For reference, the code above is:\njava\n// If it's the same znode, don't bother comparing the contents of the instance configs\nif (previousInstanceConfig.getRecord().getVersion() == currentInstanceConfig.getRecord().getVersion()) {\n  continue;\n}\nHence we can only be at that place in the code if the znodes are different.\n. We don't care because our routing table does not contain this new instance. If a new instance is added to serve this table, we will get an external view change, at which point we'll keep track of this new instance's configuration.\n. It just keeps track of the previous instance configs and doesn't rebuild if there are no instance config changes or if the instance config changes are unrelated to isShutdownInProgress and HELIX_ENABLED. There's unfortunately not a very good compact way to express this in Java.\n. Done\n. Typo in number (NULMBER).. - partitionMap needs a better name to reflect that it's a partitionId to instance list.\n- List should be typed here.\n- Is it also possible for the partition map not to contain a value, which would cause metadata.setNumReplicas(instances.size()); to throw NPE and cause issues?. getPartitionOffset can throw an exception here, how is it handled?. Should be info level. Add a comment as to why we sort in reverse order and/or high level description of the algorithm used here.. Should this be configurable on a per-table basis? It should also default to false imho, otherwise, a misconfigured table (eg. invalid broker list or Kafka topic) might create consuming partitions endlessly.. This should be max of smallest and previous partition end offset, otherwise we may end up with duplicate data.. Not sure I really follow the algorithm here.. We should catch exceptions and discuss failure scenarios.. The clear is done by the caller. It's assumed that if you give a destination row to write into, you already made sure that it is cleared, or that the data already inside the destination row will get overwritten properly or that it is a brand new row to write into.. There's exactly as much documentation as the original method that was modified.. The API has completely changed in 0.10 anyway, they have a proper exception hierarchy instead of pre-allocated exceptions in an enum. See https://kafka.apache.org/0100/javadoc/org/apache/kafka/common/KafkaException.html. I'd add \"stopping consumption after n retries\". Should this be smallest or the offset configured in the table? For example, if you configure a table with largest offset and you delete the only segment, then you'd restart consumption with the smallest offset, which might not be what the user expects.. I don't think this log is needed. I'd add an explanation as to why we wanted to mark this segment offline (it reported a consumption error) and the instance that is affected.. Completing, not finalizing :). done. I switched it to use Object2IntMap, which should be faster than either approach. There's no good heuristic to set this value at this point. The buffers for this are stored in direct memory but the dictionaries are stored on the JVM heap. This means that it's unfortunately very dependent on column cardinality for the on-heap part while the off-heap is unlikely to be a problem.\nBoth global and per-server names are really bad, I can't think of a good one offhand though. I'll see if I can think of something that makes sense before merging this.. It's also not a hard threshold, which makes it even more complicated to explain.\nFor example, imagine you that there is one Kafka partition served by this server and that the threshold is set to one million. If the Kafka partition count is increased to 10 while this segment is still open, this means that there will be up to 1.9 million rows in memory (1M + 9 * 100k rows for the new partitions).. Use == if you're comparing enum values.. Add a comment as to why we're stubbing out this test.. This changed from timeWaitedMillis to timeRemainingMillis? Also, is it possible to use actual nanoseconds instead of milliseconds, millisecond granularity is pretty coarse.. Rename this to getPartitionCount instead of getPartitionsCount, can be done in a separate refactoring PR. I'd log the fact that we're updating the partition assignment and/or that it completed.. As mentioned offline, it was already planned to be done in a different PR.. That's already done as part of processExternalViewChange. I would add a short note that this is only in the case of an unclean leader election.. This test is only to test for this specific regression, the routing table being built properly is checked as a part of the integration tests.. I don't think offsets are in seconds :). This should just be an int field instead of a MutableInt. We should return HTTP 404 (resp.setStatus(HttpServletResponse.SC_NOT_FOUND)). Shouldn't this fail the test altogether?. It would be better if this was an actual test instead of being in the setup.. Can we add a comment that this is for offline segments? I was confused for a bit as to why there was only one underscore when we join the segment name parts. :). This will get done as part of the unit tests. Right now there's not even a validation that the routing table hits all the segments in the EV, for example (even though it does).\nThere's still a fair bit of cleanup left before this is ready to be merged in anyway. :). done. done. Yeah, though I need to rewrite this whole comment due to the algorithm changing. done. done. done. I changed it to a broker-level config for now. Should this be expression or query string?. The assert isn't required, since this will throw NPE anyway.. :+1: . It should be \"Rebuilding broker resource for table {}\" so that tableName gets filled in in your message.. Same here. This loop is really too convoluted. It's trying to iterate in order through the segments of all partitions and tries to:\n\nFix missing partitions\nFind out the max valid offset\nFix missing segments\n\nThis would be significantly more readable if this was broken up into smaller, individually readable parts.. It's fine that way, this will be used at exactly three places in the code, all three of which are already implemented.. This is what happens when I code before having coffee in the morning :). Done. Doesn't really need to, since it won't get reused anywhere else anyway. This behavior is controller-specific.. This is because all three tests are running from within the same JVM. This will get exposed in MP, not through REST.. It has the class name:\nINFO [KafkaLowLevelConsumerRoutingTableBuilder] [main] [pinot-broker] [] Using default value for target server count of 8. !isEmpty(). I would rename this to deleteSuccessful so that the condition becomes if (!deleteSuccessful[i]) later on.. This is O(n^2), do you see this being an issue if we delete a large table?\nBonus points for coding a better algorithm on a whiteboard in less than 30 minutes :). Hardcoded 16?. Avoid overloading methods. Can we rename updateHelixIdealState to better describe what it does? I assume it's doing something close to addNewSegmentToIdealState. Add null check, getting the instance config can fail. Typo in instances. getInstancesInClusterWithTag fetches all instance configs, reads them and only returns the ones that have a particular tag in their list of tags. At that point, you're probably better off fetching all instance configs directly to check if it's enabled and has the correct tag instead of fetching them twice.. It'd be good to have the MD5 as well as the full URL that is used to fetch the schema. Can this be changed to output something like Error fetching schema from URL http://.../id=1234?\nAlso, since we throw an exception, schema = defaultAvroSchema does nothing, as schema is a local.. It doesn't look like it's possible for schema to be null at this point in time, but can you guard against it in case it happens in a code change/refactoring?. Rename test to testZeroReplicas. Not 100% sure, but IIRC there's no time boundary for offline-only tables nor for the realtime part of a hybrid table. In that case, that would mean that most of the time this optimization wouldn't apply.. I believe you can use timeColumn here too. This part of the test is very similar to the one in MultipleOrEqualitiesToInClauseFilterQueryTreeOptimizerTest, might be a good idea to refactor the tests to avoid duplicated code.. Does this actually work correctly in the case of degenerate ranges (eg. a < 30 AND 35 < a)?. Can you add a comment here that says that after this point, since we have children, we're guaranteed to be an AND node (as well as an assert or if check, so that if we implement something like XOR that logic won't break).. I don't think you really use the Pack200 import :). Can you rename this property to something like disablePerTableMetrics?. Would be better to have something like allTables instead of unknown, since you're collapsing all metrics into a single metric.. I don't really like this name, tbqh. It's not really clear what it means to have a \"tablelevel\" metric. It would be clearer to have something like pinot.broker.perTableMetrics = true/false or enablePerTableMetrics=true/false. Unused?. Same as above.. Same as above for global. Same as above for global. Use PinotHelixResourceManager instead of interacting with ZKHelixAdmin directly.. Use Guava preconditions instead of Java asserts (Java asserts can be turned off). \"because the table is too small\". Maybe emit a warning/error out if the time granularity is not days. Use ControllerRequestURLBuilder to build REST API URLs. In this case, you'll need to add the one to upload the indexing configs.. Fields should be private. private. Since this is a fluent interface-style class and not a Javabean setter, can you not use the Javabeans names for setters (setX) and rather use a name that doesn't overlap with the Javabeans convention.\nI skimmed over this code assuming it was standard Javabean property setters and was surprised to see it used later on in a fluent way. I suggest withX as the convention for this (eg. Params.withFoo(1).withBar(2)) which is readable and doesn't overlap with other conventions.. BuildlTime?. What's \"ext\"? Extra? Extension?. I'd change this to row count instead of num rows. Would it be better for it to be row limit instead of max rows (ie. stopped because one hit the row limit as opposed to reaching the max rows)? Same for the time limit.. I'd avoid abbreviations like sec if you mean seconds.. Same here for the abbreviation.. Should this also log the instance?. We should log that this happened.. Do we want count here or length? Would \"realtime average multi value entries per row\" be a more appropriate description?. Whatever name we pick from earlier, let's make sure it's also consistent and understandable for the end user.. 1 t for extra. Weird indent, should be the same level as the @Override. Can we have a default implementation of this, it looks they're all the same except for the message type anyway.. It would be good to not require parentheses for this. For example, in pretty much every SQL database, the syntax foo LIKE 'a%' is valid.\nThis also copies the (non-standard) REGEXP keyword from MySQL. Unfortunately, that extension doesn't support adding regexp flags (eg. case insensitive matching, multiline match, etc.). I took a quick look at how other databases do it:\n\nMySQL: foo REGEXP 'a.*', no support for regular expression flags\nPostgreSQL: foo ~ 'a.*' for case sensitive match, foo ~* 'a.*' for case insentitive match, \nMSSQL: Not supported\nOracle: REGEXP_LIKE(foo, 'a.*', 'i') with flag support (eg. 'i' for case insensitive match)\nH2: Same as Oracle\nSQLite: Same as MySQL\n\nEven though I normally like how PostgreSQL does things, in this case I think it's a bit weird and prefer the Oracle syntax (implement it as a function, with arguments, which also allows regexp flags).\nAlternatively, if we use the MySQL (or PostgreSQL) syntax, we could encode the flags within the expression itself, just like Java does (eg. foo(?im) is a case-insensitive multiline match). Let's figure out which one we want, because once it's in the grammar we'll be stuck with it for a long time.. Does that actually work? I would think you'd need to encode query instead. You also need to escape regular expression atoms, eg. foo like 'abc (%)' won't expand correctly.. It's equivalent and less verbose to do it this way. If I try to set it to the length of the first element, I need to add a check for the dictionary being empty.. The String dictionary does not keep that information.. If it's extracted into a method, then the optimizer can't notice that this check is actually a loop invariant without inlining that method.. The thing is that if we do that, it pulls in all of Helix into the Pinot client.. Should throw an exception if it's neither realtime/offline. Oh, interesting, encodeURI doesn't actually encode special characters like & and ?. In your case, it worked fine, but it means that if there is a query that contains a question mark, the question mark won't get encoded properly.\nWhat you want in this case is encodeURIComponent(query) which will properly escape the query contents:\nencodeURI('foo=bar?baz%')\n\"foo=bar?baz%25\"\nencodeURIComponent('foo=bar?baz%')\n\"foo%3Dbar%3Fbaz%25\". Yeah, escape the ( [ and such atoms.. Log whenever !fileItem.getFieldName().equals(segmentNameStr). Refactor this to use a single code path in a different PR. All of these are doing roughly the same thing, it would be nice to avoid duplicated code. :). Should be empty map, not null. This way you avoid having to add a null check. See Effective Java Item 43: Return empty arrays or collections, not nulls.. Should be warn, not info.. !_partitioners.isEmpty(). Partitioning is not a dictionary concern and should be placed in either RealtimeSegmentStatsContainer or a related class. It makes no sense design-wise to have a partition function on a dictionary, especially considering partitioning only makes sense on a segment basis.. It would be good to have this logic separated somewhere else instead of passing Strings around. For example, it would make better sense design-wise to have something like new ColumnPartitionConfig(partitioner, partitionCount, PartitionRange.build(kafkaPartitionId, kafkaPartitionId)) instead of expecting a specific string format.\nSince there's already a billion comments on the PR, we can do it in a different PR.. Same idea, have proper typed arguments instead of passing specially-formatted strings around.. IntRange has a containsInteger method, this would be more readable as !partitionValue.containsInteger(partition) (especially if you rename partitionValue to partitionRange).. Can you add a Helix bug ID so that we can remove this when it's fixed in Helix?. Done, added to tests.. Done.. You can ask xiafu :). I'd still log the original exception. IIRC there's a response for errors, would be good to use that.. This will not work correctly for brokers (eg. brokers are in brokerResource, which isn't a table name). You want to check all Helix resources in this case.. fail -> Failed, put in the actual instance path instead of a placeholder for server_name. Same comment as above.. This deletes all segments, not the table itself. Either update the comment or the delete call.. decommissioning. Do these steps in the reverse order (delete an instance, then its configuration). Otherwise, it's possible to find instances that have no configuration, which caused us issues with Helix.. I'd just call the appropriate methods (stopBroker, etc.) instead of trapping the exception.. Maybe I'm missing something, but doesn't that mean that this will always throw an exception if the table type is LLC-only (verifyReplication=false). I don't understand why we're adding this test. What is it doing different that warrants a completely new integration test?\nFurthermore, this seems like a copy-paste of the LLCRealtimeClusterIntegrationTest, with no new code added.. Should this also apply to realtime tables?. You need to use .equals() to check for equality/inequality in Java, otherwise it just compares the reference, which is not what you want here.. Isn't that 180k times * 100ms (5 hours), assuming we're fully idle?. Shouldn't this use startMinions in ClusterTest?. This test should have a timeout. Avoid sleep in tests, if you're waiting for something to happen, then poll for it.. Should be ${project.version} (or parent, can't remember offhand). Don't specify the version number here. Don't specify the version numbers for dependencies, they're pulled from the parent POM. We could do it for every batch of rows that we get from Kafka. I looked at the underlying code and it just does a CAS on a long value (actually it does 4, as it keeps track of the 1/5/15 minute rates as well), so it's not that expensive.\nI still need to review our usage of other metrics and update them if necessary to use this newer API, as well as probably change the API a bit for the metrics, so I'll keep that in mind when I revisit that part.. Can you make sure that this class also filters task queue names to make sure we can't create a task queue called something like taskQueue_OFFLINE, which would be table name.. Rename this to OFFLINE/REALTIME, so that it looks like TableNameBuilder.OFFLINE instead of the longer name.. forType, eg TableNameBuilder.forType(OFFLINE).. I'd drop the get, ie TableNameBuilder.OFFLINE.tableNameWithType(\"myTable\"). resourceHasTableTypeSuffix maybe :). resourceHasTypeSuffix maybe?. Shouldn't we use the MAX_MULTI_VALUES_PER_ROW constant?. Since this is a list of buffers, what's the order of magnitude of the typical length of that list? Is it low (eg. 1-10 entries) or something large like 100+ entries?\nYou'll want to keep in mind that if this is large, you'll want to coalesce buffers as I believe that large allocations are implemented as anonymous mmaps; as such, the process could exhaust vm.max_map_count and cause the JVM to crash.. This loop doesn't check the end time.. Add a message to this assert saying that all tasks did not stop within the expected time, to make it easier to analyze the assertion failure. Do it for all assertions that are time-based in this test.. Add a comment that the parent setUp sets up ZK, kafka, controller, brokers and servers.. Not exactly sure I understand why we need an offset.. Shouldn't this be offset by startRowId?. Are buffers interleaved or contiguous? If they're contiguous, this should be done with readValues so that it optimizes properly to an array copy.. Not sure what this comment means. We'd need to refactor this at some point so that all the indexing info (inverted index, no dictionary, etc.) is together instead of adding constructor args, WDYT?. You shouldn't need to change this class at all. What should be done is to create a NoDictionaryRealtimeColumnStatistics instead of RealtimeColumnStatistics and build the stats as appropriate when it gets created from RealtimeSegmentStatsContainer.. Integer.valueOf(min), not new Integer. Same for other object allocations.. I wouldn't use close for this, since it's not really releasing a resource. deleteSegmentFile is a better name for this.. I'm not sure I follow this logic. If the commit fails, you remove the segment file but you still keep it?\nI'm assuming in this case that you're only keeping track of the segment file and offset at commit time. It would be easier to keep track of it at build time (ie. when you build the segment, you keep track of the filename and offset) and have the build logic skip the segment build if it would build the same thing; that way the logic is only in build instead of being half in commit and half in build.. As mentioned before, I very strongly disagree with the idea of an on-heap overflow map. It adds complexity for rather dubious gains in memory and slows down both lookups and insertions.. Why do we need this? What's the rationale behind adding this complexity and what are the gains/tradeoffs?. What's the rate at which these small spikes happen?. I disagree. While using bytes would make it more memory efficient, on comparison you'll need to interpret the bytes as UTF-8 or (some other encoding) on reads, which entails some conditional branching (it's a 4-way branch) and some bit shifting for each character.\nIt's been a while since I did any Unicode stuff, but IIRC interpreting UTF-8 entails counting the number of leading ones, then branching based on that. If the code point decoded is outside of the BMP, then you'll need to interpret it as two chars (ie. surrogate pair). That's a fair bit of complexity.\nThe alternative is to convert the string that's being compared into UTF-8 on every comparison, but that would end up generating some garbage on every lookup in equalsStringAt(). You could avoid generating some of that garbage by creating some UTF-8 encoded String (eg. the Avro Utf8 type) and using that in the API, but then you'd need to refactor a lot of the Pinot code to use that new type instead of java.lang.String.\nNeither alternative seems very palatable.. Expand buffers with a multiplicative factor, as to avoid degradation due to large numbers of buffers. This also prevents catastrophically allocating all of the memory if someone tries to add a String that's larger than your buffer size.. Does this actually work properly? I'm pretty sure that when the tests are JAR'ed, this call will fail due to using a JAR URL from which a File cannot be created.. Shouldn't we rethrow the exception here?. Same.. I'm guessing it works mostly because nothing depends on the integration tests, so that works, as it uses JARs for all test dependencies except the module you're testing.\nYou can ignore this comment for now, I don't foresee us depending on the test JARs from the integration test.. Ah I see, this is part of the loop in waitForCondition, makes sense.. Remove this unused code.. Don't add generated code to git, since it is generated on every build.. Remove commented out code. Is this cast actually necessary?. Needs apache license. Run mvn license:format. Try to avoid having unnecessary blank lines, there should be one contiguous blank line at most.. Avoid whitespace-only changes, especially when they're not needed.. Same. Check our code style.. Not sure why this is changed.. Remove commented out code. Usual syntax for these is // TODO sjavadi Support complex predicates, so that it shows up in the IDE's TODO tab along with a note of who is responsible for it.. This logic doesn't really belong there. It should either be in the AST node, or if this done as a postprocessing of the query, it should be in a method that explains what this does (eg. addMissingHavingClauseAggregations).. Remove this.. Follow the code standard. Ping me when I'm in the office, I'll link you to it.. Do we have something like this already? Also, methods should start with a lowercase letter.. Should be either isInSelectList (preferred) or isItInSelectList, but it should be consistent everywhere.. Remove commented out code.. Would be nice to avoid duplicating that code.. Not sure why this is changed.. Ouch. This should be a utility function/method.. Is this cast necessary? (x4). Remove. Local testing code should not be committed.. You'll have to enhance the query generator in order to use this test.. Remove. Remove.. Are these changes actually necessary?. Can you make sure that spacing is consistent with the LNKD guidelines? Some of the variable assignments have spaces and some don't.. Split on multiple lines.. Remove extraneous parentheses.. Remove blank lines. children, not childs. Use descriptive variable names. filters, values or predicates instead of f, child instead of c, etc.. Remove blank line and commented out code. Remove commented out code. Query, not Qury. ;;?. Inconsistent spacing. Remove blank line/commented out code. Fix. Check for the proper predicates, not only the predicate count. Why is this file changed?. Not sure why this constructor is removed, it's necessary to prevent instantiation of RequestUtils. This would be better implemented when the query is turned from an AstNode tree to a BrokerRequest than mutating the tree during the AST validation phase.. Has this actually been tested? For the IN predicate, it's stored as a double-tab separated list (at least until the switch in #1819 is turned on), so I don't think this actually works as expected.. How do we handle having clause differently than the where clause in this case? The comment hints at the fact that we do treat then differently but doesn't explain what/how these two cases differ.. Spacing. Also, check that all the different predicates are parsed properly instead of checking only the list size.. Avoid adding formatting-only changes as part of a PR that's not only formatting changes.. You should iterate on the keySet instead of the entrySet if you're not looking at the values.\nIt might be clearer to rewrite this to use retainAll to do set intersection instead of removing elements manually.. Is there a particular reason why we're using TreeMap instead of HashMap? The latter is O(1) instead of O(lg n).. Not clearing the map would reduce allocation.. Doesn't it make more sense to remove the group immediately from the iterator and the other aggregation groups instead of storing the keys to remove, only to remove them in a later phase?. Log the exception, don't silently fail.. Range, not Rang. Avoid moving methods around, it makes it hard to see if they've been modified. Has there been any changes to this method?. Can this generate queries with aggregation functions that are not in the select list? Have you tested this overnight (eg. with 100k+ queries)?. Avoid inner assignments in loop clauses, they're pretty bad style. See https://stackoverflow.com/questions/11222121/is-it-bad-to-do-inner-assignments for example.. We removed the tree node id field in #1740, can you make sure that your code follows this?. +1 on that. Not 100% sure about the indent, but is the code if (llcFlushSize) { if (segmentFlushSize) }? Those two conditionals should be side by side, not within one another.. ?. Implement HavingQueryFragment instead and add a generateHavingPredicate function. segmentCount, not numOfSegments. segmentDiskSizeInBytes. ServerSegmentInfo. _reportedSegmentCount. What does reported mean in this context?. BalancedLoad.... Remove this.. Remove .this. Remove this.. Can you add a try/catch block and a log if it fails to parse? (eg. Failed to parse value RETRY, using default value of retryCount). Would be better to use RetryPolicy to implement the retry logic.. TestSegmentFetcher with an uppercase t. As Subbu mentioned, the User-Agent header is the correct header to use. In this case, what you want to do is to grab the default user agent value (see DefaultHttpParams.getDefaultParams()) and append something that indicates the minion version and/or job version, so that it looks something like this: Jakarta Commons-HttpClient/3.1 Pinot-Minion/1.0.\nThis way, if for some reason in the future we need to do some special processing for different versions of the HttpClient library or the minion code, then we can check exactly which version is used as opposed to having a single version.\nAlso, is the code generic for all minion based pushes or only for certain job types? If so, it might make more sense to specify the job type instead (or even both, eg. Pinot-Minion/1.0 Pinot-Job-Foobar/1.2).. The human-readable timestamp would be better. Make sure that it's in UTC time though, otherwise there are some edge cases around DST which you really don't want to deal with for this kind of feature.. +1 on appending to the default user agent, so that we keep the version of the HTTP library used. The string should look like \"ApacheHttp/1.2.3 Minion/1.0 SomeJob/2.1,\" so that we can detect it properly on the server side and apply workarounds as needed.. This should throw a more specific type of exception than Exception (eg. AttemptsExceededException, etc.).. Should probably have a parent exception class like AttempedOperationFailureException or something similar.. Warn is typically for things that did not work right but otherwise did not prevent the completion of the operation. Error is for things that completely prevented an operation.\nIn this case, the enabling went through, although it might be in a partial state.. Not sure it's really worth mentioning this specific bug as an example of an exception that can happen during segment building. If we fix the issue, for example, we'll need to update this comment.. Seems like this test is very heavily coupled to the actual implementation (white box) as evidenced by the numerous flags (eg. _buildAndReplaceCalled). Do we have plans to refactor this test into something cleaner at some point?. Why is sendRequest responsible for invalidating the leader cache? Isn't the protocol handler responsible for handling network IO and the leader cache (which should be completely orthogonal to the network protocol itself) handled somewhere else?. Does NumberFormatException get caught anywhere? If not, it will prevent a table with an incorrect table configuration from being served.\nAlso, what happens if there are no servers online? Or if the table is not in the external view?. Should log the overall rate, per-broker rate, and number of online instances.. Expand this to an if/else block.. Should be maxQueriesPerSecond. Discussed offline and got consensus on this.. Add a comment that explicitly says that nothing is to be done, eg. // Nothing to do. Do we need these imports?. Add Javadoc that explains what this interface is for and when the notifyOnPurge method is invoked.. It would be more useful to have an interface that is something like notifyMinionTaskStart/notifyMinionTaskEnd as opposed to something very specific to the purge task.. Would be cool if we could have more than one MinionEventNotifier, that way we could implement one that logs task executions in Kafka (and read them back in Pinot!), one that emails on task failures, and so on.. MinionTaskObserver or MinionTaskStatusObserver would be more appropriate names (see observer pattern). Is there a particular reason why we're introducing the concept of an expression as opposed to just using the name? In which scenarios would we need the quoted identifier with backticks?. The factory should follow the naming convention (eg. a FooFactory creates objects of type Foo). In this case, this class should be named MinionEventObserverFactory.. I would swap the order of these arguments, so that it's type, then information.. Ah good point, completely forgot about server-side reparse for expressions.. Can you add a description of what it is that you're doing in this class? From reading the code, it seems like you're averaging the number of queries over the last 100 time buckets.. Seems like you'd need a compare-and-swap op for multithreaded correctness here.. This should be called BUCKET_COUNT. timeBucketWidthMs. bucketStartTime. bucketHitCount. Remove this if it's not used, we can always add it later if needed.. ```\npublic int getHitCount() { getHitCount(System.currentTimeMillis()); }\n@VisibleForTesting\nint getHitCount(long millis) { ... }\n``. Yourifstatement is dependent on all threads doing no stale reads and no parallel execution of theif`, which is not the case.\nQuick test for multithreaded correctness:\n```\npublic class TestHitCounter {\n  public static void main(String[] args) {\n    int expectedHitCount = 30 * 200000;\n    HitCounter hitCounter = new HitCounter(10);\nList<Thread> threadList = new ArrayList<>();\n\n\nfor (int i = 0; i < 30; i++) {\n  Thread thread = new Thread() {\n    @Override\n    public void run() {\n      for (int j = 0; j < 200000; j++) {\n        hitCounter.hit(System.currentTimeMillis());\n      }\n    }\n  };\n  thread.start();\n  threadList.add(thread);\n}\n\nfor (Thread thread : threadList) {\n  Uninterruptibles.joinUninterruptibly(thread);\n}\n\nSystem.out\n    .println(\"hitCounter.getHits(System.currentTimeMillis()) = \" + hitCounter.getHits(System.currentTimeMillis()));\n\n}\n}\n. `tableReferenceCount` and/or refcount. What's the behavior of a 0 qps limit?. Remove this log and/or set it to debug.. `TableNameBuilder.forType(tableType).tableNameWithType(rawTableName)`. Would make more sense to name this `ByteArray`, and it would avoid the name clash with Guava `Bytes`.. Should be shortest element, not smallest.. `timeRangeInSeconds`. Is it run 3 or 5 times? :). Dropping the table query quota should really only depend on the table name, not any other thing (external view, table configuration). If there is no quota configuration, by definition, dropping the table query quota does nothing. This also ensures that `dropTableQueryQuota` will always behave as expected, even if there are odd edge cases where the table quota configuration is changed while the broker is running.. No `* *` on the last line. Should log a warning if we can't fetch the table configuration, this really shouldn't happen.. It's possible that if there are no other brokers serving this table, the table won't be part of the external view. What you want to do here is to count the number of brokers currently serving this table (which does not include your instance, assuming no zk/helix latency issues).. Here you want to check that the state is `ONLINE` and that the instance name is not your instance name (which could happen if the external view is stale).. Update with previous feedback, as per discussion.. Remove commented out code.. Deduct tokens from both quotas, what you can do is:\nbool offlineQuotaOk = offlineTableQueryQuotaConfig == null || tryAcquireToken(...);\n...\nreturn offlineQuotaOk && realtimeQuotaOk;\n``. You want to usesetValueOfTableGaugehere, since adding percentages doesn't really make sense.. You probably want to build the table configuration here, checkTableConfig.Builder`. table name. You don't need to cast here, the cast does nothing.\nAlso, it would be better to do if (value instanceof Number) as Number is the parent class of Long, Double, Integer, etc.. Remove this System.out.println. Same. This can be null in certain cases, should log a warning and exit cleanly here.. Formatting. If the table is disabled, the metrics for that table should be removed as well (see https://github.com/linkedin/pinot/pull/2933/files#diff-ec0bdaf9277528f6977db3cd163c518aR278). addTable in PinotHelixResourceManager already logs the table addition (see https://github.com/linkedin/pinot/blob/6fbb79e734a9078190d3f4ee29c62e487c9100dd/pinot-controller/src/main/java/com/linkedin/pinot/controller/helix/core/PinotHelixResourceManager.java#L1120).\nThe fact that a table is added if a new table counterpart is added to the table configuration is an implementation detail, from the users' perspective, the table types just changed from say [OFFLINE] to [OFFLINE, REALTIME].. None of the 400 series of error codes are appropriate for this purpose. If there is an exception that is thrown by the restlet, this results in 500 (just like other error handlers), which is the expected code.. The request is fully formed and syntactically correct, so HTTP status code 400 does not apply in this case.. After discussing this offline, we'll leave it this way since most of the logic (config profile handling, generation of the upload url) is already factored out. It's not exactly clear what would be the right API for people to reuse this, so we can extract a proper API at the time at which it would be needed.. Is this actually close enough to production-level? If not, we can add it to the documentation when it is.. What's the purpose of having design documents as part of the documentation? Why would a user care about this?. Same.. This needs to be rewritten so that it has the correct style and flows properly from the previous sections.. I'm assuming that it's target instead of trget. What does EXCEL mean in this case? Does it mean that one can give a .xslx file to the segment generator?. We want to get rid of this behavior, it's only there for backwards compatibility.. Ascending or descending order?. We want to get rid of this behavior.. Quick start somewhat implies that this will get you to the final, production-ready state of the system. Think of the \"quick start\" instructions you get when buying something, they usually consist of getting the system up in the fastest way.. No, it doesn't really make sense for this tool to have a preview mode. The generated files can be compared with the originals if need be.. We already use vavr throughout the config code, so it's not really an additional dependency. Rewriting this code using Java streams will only make it longer.. The parts that can be extracted have been (see expandConfig, mergeConfig, minimalConfig and minimalConfigMulti), the rest cannot really be due to the number of data dependencies and the lack of multiple return values in Java.. The System.out.println is intentional. Since the merge process can merge a lot of files, the same output line is reused for all the files to show progress as opposed to having one line per file (hence the \\r at the beginning of the progress string).\nOtherwise, if a logger was used, this would mean that if there is an error while doing the merging process, one would have to scroll through all the log entries to figure out the error.. Converting it to loop-based code only makes it longer, not necessarily clearer. It's a pretty long (and tedious) task. I'll see what my calendar looks like for scheduling this and if the readability improvements warrant the change.. Avoid having extra whitespace to classes. Ping me if you need the link for the code format standard, so that whitespace/names are consistently applied by your IDE.. ",
    "jzmq": "I didn't set broker name that starts with \"Broker_\" , I just set randomly . I know the reason, thanks\n. Sorry for the disturbing , It's my mistake. Actually I wanted to create a pull request for other repository. Apologize again\n. ",
    "nekulin": "It helped, thanks! \n. ",
    "ethicstechOSS": "It also works for me. Thanks. . ",
    "makareth": "At this time, no Google search yields any information regarding the performance of the product. Setting up a benchmark result page would be great indeed.\n. ",
    "dongyanfeng": "And I meet the same problem\n. After you solved the problem, unable to create table, please confirm\n. Class AddTableCommand:\n code:\n if (!_exec) {\n      LOGGER.warn(\"Dry Running Command: \" + toString());\n      LOGGER.warn(\"Use the -exec option to actually execute the command.\");\n      return true;\n    }\n_exec == false(default)  return true\n. 6 server node, 6 broker node and the set config: \"replication\" : \"3\" .\nthanks !\n. I found a phenomenon, help to think about this question\u3002\nSet the replication value is 3, there are three kinds of query are values.\nSet the replication value is 2, there are two kinds of query are values.\n. real-time and offline ,but offline is no data \n. Has nothing to do with the restart the server node, apparently associated with replicas\u3002\n. yes,i can\n. Repeat the test again and again.The above problem is after the restart the server nodes\u3002\n. Query timeout\uff0cPlease resolve this problem as soon as possible.thx\n. config.createInvertedIndexEnabled() \u3002\ncreateInvertedIndexEnabled is not set;\n. createInvertedIndexEnabled  is always false.\nso Inverted index file can't produce.\n. ",
    "mayankshriv": "The issue with hardcoded \"localhost\" has now been resolved.\n. @dongyanfeng what is the issue you see with creating table?\n. Thanks for pointing this out, this will be fixed asap.\n. The issue has been resolved. Please try and let us know if you still see an issue.\n. Please try the -exec switch with these commands (refer to pinot-admin wiki), and let us know if you still see an issue. As for messages not being printed, the issue has been resolved.\nIf using -exec resolve the issue, please go ahead and mark this as closed.\n. This is not required, and will be removed from the code shortly.\n. The code has been removed. Additionally, a new command 'DeleteCluster' has been to assist with deleting a cluster.\n. @dongyanfeng Can you elaborate why line 139 is useless? Code execution will reach line 139 iff configuration == null. And if it is null, you would need to create a new object. Please let me know if I am missing something.\n. Sorry for the trouble, the issue was already resolved by commit 79ffd6a704cb31019af77df7737ce7c1686e25ae.\n. The issue has been resolved. You can set the env variable JAVA_OPTS to overwrite the defaults being used by pinot-admin. Please let us know if you have issues with the same.\n. Hi\nJust so I understand, did you explicitly create schema in the offline step,\nand then skipped the Schema creation in realtime step?\nOr did you not explicitly call AddSchema command at all?\nIf latter, can you try to do that before the realtime step?\nThanks\nMayank\nOn Sep 10, 2015, at 1:29 AM, izzizz notifications@github.com wrote:\nI want to test the hybrid mode, so I followed tutorial:\nhttps://github.com/linkedin/pinot/wiki/How-To-Use-Pinot. Here is my steps:\nOffline flow\n-\ncreate an offline table named \"flights\" by:\nbin/pinot-admin.sh AddSchema -schemaFile flights-schema.json -exec\n   bin/pinot-admin.sh AddTable -filePath flights-definition.json\n   -\ningest flights data 1988-2014 from Hadoop...\n   -\nafter that, I checked by counting all records in the \"flights\" table:\nbin/pinot-admin.sh PostQuery -query \"select count(*) from flights\"\nand see that all data has been loaded successfully:\nResult:\n   {\"traceInfo\":{},\"numDocsScanned\":844482,\"aggregationResults\":[{\"function\":\"count_star\",\"value\":\"844482\"}],\"timeUsedMs\":14,\"segmentStatistics\":[],\"exceptions\":[],\"totalDocs\":844482}\nRealtime flow\n-\nstreaming 2015 flights data into kafka:\nbin/pinot-admin.sh StreamAvroIntoKafka -avroFile flights-2015_1.avro\n   -kafkaTopic flights-realtime &\n   -\ncreate a realtime table named \"flights\" to consume from the Kafka topic:\nbin/pinot-admin.sh AddTable -filePath flights-definition-realtime.json\nI didn't call AddSchema, since it's already created in offline flow.\nThe doc said that if a table has same name for offline and realtime, the\nquery processing for this table will switch to hybrid mode. So I suppose I\nshould be able to get both offline and realtime data from table \"flights\"\nnow. Unfortunately after created realtime table \"flights\", I can't query\ncount from \"flights\" any longer, here is what I got:\nresult:\n{\"traceInfo\":{},\"numDocsScanned\":0,\"aggregationResults\":[],\"timeUsedMs\":0,\"segmentStatistics\":[],\"exceptions\":[],\"totalDocs\":0}\nBUT, I found I can query from flights_REALTIME for realtime data and\nflights_OFFLINE for offline data. These two table names, I guess are\ncreated internally by Pinot.\nDon't know what's wrong, any help would be appreciated.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50.\n. Since there could be potential overalp between offline and realtime data\nbeing ingested, we need to have a time boundary internally so we avoid\nduplicates.\nFrom what you have described my first guess would be that your offline and\nrealtime time boundaries are such that all records get filtered out.\nCan you provide the min/max on the time column for both the tables?\nThanks,\nMayank\nOn Fri, Sep 18, 2015 at 10:26 AM, izzizz notifications@github.com wrote:\n\nhey, is there any updates on this issue?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50#issuecomment-141513541.\n. Hey, just to clarify, I was proposing to run a sql query to get the min/max\nvalue for the time column in both the tables.\nAlso, in the query console, can you enable tracing and email us the output?\n\nThanks,\nMayank\nOn Fri, Sep 18, 2015 at 11:09 AM, Mayank Shrivastava mshrivas@linkedin.com\nwrote:\n\nSince there could be potential overalp between offline and realtime data\nbeing ingested, we need to have a time boundary internally so we avoid\nduplicates.\nFrom what you have described my first guess would be that your offline and\nrealtime time boundaries are such that all records get filtered out.\nCan you provide the min/max on the time column for both the tables?\nThanks,\nMayank\nOn Fri, Sep 18, 2015 at 10:26 AM, izzizz notifications@github.com wrote:\n\nhey, is there any updates on this issue?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50#issuecomment-141513541.\n. Hmm, the min/max time in the two tables shows realtime is definitely newer\nthan offline, so my initial guess is incorrect.\nWould it be possible for you to:\n1. run the ShowClusterInfo command from pinot-admin.sh and provide the\noutput?\n2. Also, if the data is small, do you think you can send it across along\nwith your scripts for me to try?\n    Or else, just the scripts?\n\n\nThanks,\nMayank\nOn Sun, Sep 20, 2015 at 8:19 PM, izzizz notifications@github.com wrote:\n\nselect min(DaysSinceEpoch), max(DaysSinceEpoch) from flights_REALTIME\n{\n    \"traceInfo\": {\n        \"0b9f3db8fc66\": [\n        {\n            \"0\": [\n            {\n                \"MCombineOperatorTime\": \"1\"\n            }, {\n                \"UResultOperatorTime\": \"1\"\n            }]\n        }, {\n            \"0_0\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"RealtimeColumnDataSourceTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"RealtimeColumnDataSourceTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"0\"\n            }]\n        }, {\n            \"0_1\": []\n        }]\n    },\n    \"numDocsScanned\": 2211,\n    \"aggregationResults\": [\n    {\n        \"function\": \"min_DaysSinceEpoch\",\n        \"value\": \"16436.00000\"\n    }, {\n        \"function\": \"max_DaysSinceEpoch\",\n        \"value\": \"16466.00000\"\n    }],\n    \"timeUsedMs\": 2,\n    \"segmentStatistics\": [],\n    \"exceptions\": [],\n    \"totalDocs\": 2211\n}\nselect min(DaysSinceEpoch), max(DaysSinceEpoch) from flights_OFFLINE\n{\n    \"traceInfo\": {\n        \"0b9f3db8fc66\": [\n        {\n            \"0\": [\n            {\n                \"MCombineOperatorTime\": \"95\"\n            }, {\n                \"UResultOperatorTime\": \"95\"\n            }]\n        }, {\n            \"0_0\": []\n        }, {\n            \"0_1\": []\n        }, {\n            \"0_2\": []\n        }, {\n            \"0_3\": []\n        }, {\n            \"0_4\": []\n        }, {\n            \"0_5\": []\n        }, {\n            \"0_6\": []\n        }, {\n            \"0_7\": []\n        }, {\n            \"0_8\": []\n        }, {\n            \"0_9\": []\n        }, {\n            \"0_10\": []\n        }, {\n            \"0_11\": []\n        }, {\n            \"0_12\": []\n        }, {\n            \"0_13\": []\n        }, {\n            \"0_14\": []\n        }, {\n            \"0_15\": []\n        }, {\n            \"0_16\": []\n        }, {\n            \"0_17\": []\n        }, {\n            \"0_18\": []\n        }, {\n            \"0_19\": []\n        }, {\n            \"0_20\": []\n        }, {\n            \"0_21\": []\n        }, {\n            \"0_22\": []\n        }, {\n            \"0_23\": []\n        }, {\n            \"0_24\": []\n        }, {\n            \"0_25\": []\n        }, {\n            \"0_26\": []\n        }, {\n            \"0_27\": []\n        }, {\n            \"0_28\": []\n        }, {\n            \"0_29\": []\n        }, {\n            \"0_30\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"9\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"19\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"23\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }]\n        }, {\n            \"0_31\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"6\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"15\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"18\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"6\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"8\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"13\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"16\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"6\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"9\"\n            }]\n        }, {\n            \"0_32\": [\n            {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"5\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"35\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"39\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"9\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"13\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"4\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"2\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"1\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"4\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"7\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"UReplicatedProjectionOperatorTime\": \"0\"\n            }, {\n                \"BAggregationFunctionOperatorTime\": \"3\"\n            }, {\n                \"BReusableFilteredDocIdSetOperatorTime\": \"0\"\n            }, {\n                \"ColumnDataSourceImplTime\": \"0\"\n            }, {\n                \"MProjectionOperatorTime\": \"0\"\n            }, {\n                \"MAggregationOperatorTime\": \"6\"\n            }]\n        }, {\n            \"0_33\": []\n        }]\n    },\n    \"numDocsScanned\": 844482,\n    \"aggregationResults\": [\n    {\n        \"function\": \"min_DaysSinceEpoch\",\n        \"value\": \"6481.00000\"\n    }, {\n        \"function\": \"max_DaysSinceEpoch\",\n        \"value\": \"16435.00000\"\n    }],\n    \"timeUsedMs\": 106,\n    \"segmentStatistics\": [],\n    \"exceptions\": [],\n    \"totalDocs\": 844482\n}\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50#issuecomment-141865715.\n. I am able to reproduce the problem at my end. We will look at this and\nupdate with a fix.\n\nThanks,\nMayank\nOn Mon, Sep 21, 2015 at 7:40 PM, izzizz notifications@github.com wrote:\n\n\nShowClusterInfo\n\n!!com.linkedin.pinot.tools.admin.command.ShowClusterInfoCommand$ClusterInfo\nbrokerInfoList:\n- name: Broker_172.17.2.238_8099\n  state: ONLINE\n  tags: [DefaultTenant_BROKER]\n  clusterName: TestPinot\n  controllerInfo: {leaderName: 172.17.2.238_9000}\n  serverInfoList:\n- name: Server_172.17.2.238_8098\n  state: ONLINE\n  tags: [DefaultTenant_OFFLINE, DefaultTenant_REALTIME]\n  tableInfoList:\n- segmentInfoList:\n  - name: flights_REALTIME__Server_172.17.2.238_8098__flights_REALTIME_1442802699313_0__0__1442802699482\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n    tableName: flights_REALTIME\n    tag: flights_REALTIME\n- segmentInfoList:\n  - name: flights_10227_10591_13\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_10592_10956_14\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_10957_11322_15\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_11323_11687_16\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_11688_12052_17\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_12053_12417_18\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_12418_12783_19\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_12784_13148_20\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_13149_13513_21\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_13514_13878_22\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_13879_14244_23\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_14245_14609_24\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_14610_14974_25\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_14975_15339_26\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_15340_15705_27\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_15706_16070_28\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_16071_16435_29\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6481_6512_0\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6513_6542_1\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6543_6573_2\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6574_6939_3\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_6940_7304_4\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_7305_7669_5\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_7670_8034_6\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_8035_8400_7\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_8401_8765_8\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_8766_9130_9\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_9131_9495_10\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_9496_9861_11\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n  - name: flights_9862_10226_12\n    segmentStateMap: {Server_172.17.2.238_8098: ONLINE}\n    tableName: flights_OFFLINE\n    tag: flights_OFFLINE\n  - As to data and scripts, I followed the tutorial How To Use Pinot\n    https://github.com/linkedin/pinot/wiki/How-To-Use-Pinot, used the\n    dataset https://github.com/linkedin/pinot/wiki/flights.tar.gz in\n    it(as well as the table schema), scripts were described in my first post.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50#issuecomment-142164119.\n. Sorry for the delay at our end, we do see the issue and are working on\nresolving it.\n\n-mayank\nOn Thu, Oct 8, 2015 at 2:43 AM, izzizz notifications@github.com wrote:\n\nDid you get a chance to look into this?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/50#issuecomment-146475509.\n. I have updated the \"Quick-Start\" document on how to generate star tree\nsegments in Pinot. Once generated, the segments can be uploaded/queried as\nregular segments. Please refer to the \"Star Tree\" segment in the link below.\n\nhttps://github.com/linkedin/pinot/wiki/Quick-Start-Guide\nThanks,\nMayank\nOn Fri, Mar 18, 2016 at 9:10 AM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\nWe have something equivalent called star tree index. This can be enabled\nwhile generating the segment by setting -enableStarTreeIndex=true\nBy default, it will create roll up for all dimensions. Note: this creates\nroll up only if required, which can be controlled by setting\nmaxLeafRecords.\nTry it out and let us know. We will provide detailed instructions on a\ngithub page today.\nOn Thu, Mar 17, 2016 at 7:53 PM, superwood notifications@github.com\nwrote:\n\nFor performance considerations \uff0c Can I create \"roll up\" table for query?\nThe big table A have some dimensions ,\ndimension1 dimension2 dimension3 dimensions4 ..... metrics\ndimension1 dimension2 dimension3 dimensions4 ..... metrics\nAnd the frequent query \"select sum(metrics) from A where dimension1= and\ndimension2= \" will scan all the table for sum metrics.\nif there is a \"roll up \" table for A name A1:\ndimension1 dimension2 metrics\ndimension1 dimension2 metrics\nThe query \"select sum(metrics) from A where dimension1= and dimension2= \"\nwill search data from A1 which is aggregated from A.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/87\n\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/87#issuecomment-198430015\n. Thanks Xiang for the patch. Could you please take care of the minor comments, and update the pull request (after rebase) and I will merge it back.\n. lgtm. For security issue, seems the consensus is to store the script in our local repo.\n. lgtm\n. lgtm\n. Don't you need to remove the dependency from the pinot-server/pom.xml file as well?\n. lgtm\n. Please add unit tests for all new classes in the PR. Also since you mentioned that the PR removes some inefficiencies in the code, could you please share the performance improvement numbers (Java 8)?\n. Will you update the query set for StarTreeClusterIntegrationTest in a separate PR?\nTake care of comments and failed build, otherwise, lgtm.\n. LGTM, except the minor nit mentioned.\n. LGTM, other than the comments.\n. LGTM\n. LGTM, other than the side comment.\n. LGTM\n. LGTM. Please add unit tests to catch that any kind of exception in server side does not result in a time-out in the broker side.\n. LGTM, thanks for fixing this.\n. Please add tests for new code and address comments. LGTM, otherwise.\n. lgtm\n. lgtm\n. A couple of high level questions:\n1. Will the two routes (HLC vs LLC) give the same query result assuming the data did not change? If not, how do we address that?\n2. What's the expected impact on latency due to the overhead of generating both HLC and LLC segments? Would be nice to measure the impact, when the rest of the code is ready.\n3. Also, since segment generation may stress heap memory, it might be good to space out the HLC/LLC segment flushes (when implementing those parts of the code).\n. Thanks @mcvsubbu for the explanations.\n. LGTM\n. Address comment. LGTM otherwise.\n. LGTM\n. Please address the comments and the test failures.\n. LGTM\n. Could you please also add unit tests?\n. lgtm, aside from the open comments.\n. Lgtm\n. @Jackie-Jiang  I am not sure yet if getStarTreeStream() might be needed or not. Will address it in upcoming PRs.\n\nAll other comments have been addressed.\n. @jfim I ran all the tests to collect all data types that used Java ser/de when sending data table from server to broker. IntPair did not appear to be one, so it was not a part of the PR. But lets make sure manually as well before making this change.\n. LGTM, apart from the comments.\n. Travis already came back clean, skipping Travis for just the file name change (non-functional) to address comments.\n. LGTM\n. Not sure if the suggested work-around for the Java serialization issue and see if it works. Will need to investigate.\n. lgtm\n. lgtm\n. LGTM, other than the minor question/comment.\n. Please address the comments, and add unit tests. LGTM otherwise.\n. LGTM\n. Resolved conflict, skipping travis as has already been run multiple times.\n. In general I do not like the approach of declaring a variable as long and then down cast it all over the place to int. Given these values (*sizeInBytes) will fit in int can you still keep them as int, and assign the result of multiplication to long?\n. This is a nit, but can you do something like: (long) (a * b), instead of (a * (long) b)?\n. Just curious, what issues did you see, and why did you guys decide to stick with fasterxml vs codehaus? The non-thirdeye code still uses both I think.\n. Thank you @fx19880617 for requesting for UDF support in Pinot. I am currently exploring the idea of supporting what I'd like to call Transform operators, and feel that supporting UDF's would fit well within the idea of transforms. I am sharing my initial idea in a design doc that I started writing. Let's use this thread to shape up & refine the idea, and discuss how UDF's fit into it.\n. We should have a general purpose capability to check consistency of the state, schema/tableConfig being part of the consistency check. Other checks could be ensuring data in tableConfig acutally makes sense (eg tenants/schema exists, etc).\n. Also, please update the docs for pinot-admin to add this new command.\n. LGTM\n. Seems like tests failed due to NPE:\nFailed tests: \n  HllIndexSentinelTest.testFastHllWithGroupBy:169 \u00bb NullPointer\n  QueriesSentinelTest.testDistinctCountHLLGroupBy:143 \u00bb NullPointer\n. @Jackie-Jiang The output of transform operator will be TransformBlock, which will most likely be extending ProjectionBlock. That will be done in the upcoming PR which will also contain the transform handling during planning phase. Unless you would absolutely want that change within this PR as well, I prefer to keep the planning phase related changes in the upcoming PR which will also address this comment.. Will Handle remaining comments in upcoming PR.. Closing this issue as No-Dictionary indexing support was added back in Jan 2017: https://github.com/apache/incubator-pinot/pull/932. Closing this one as the real solution is being addressed in the following PR: https://github.com/linkedin/pinot/pull/676\n. @kishoreg : I created a dictionary with 1M random strings, and then did 1M lookups in random order. Both new and old code had very similar performance (~320ms).\n. @kishoreg I wrote a benchmark (not part of the commit), and ran it against original code, and then against this commit. The performance has not changed.\n. @kishoreg Created PR https://github.com/linkedin/pinot/pull/710 for the perf tool.\n. We do have a mechanism to pass query specific parameters, for example, whether or not to use starTree index for a given query. Query specific timeouts can be easily passed in using the same mechanism. The implementation should be straight forward.. Travis builds have been failing due to other reasons. Since this is a local change to a unit, that does not impact any other code, making a judgement call and merging it.\n. Skipping checks after addressing cosmetic comments, as all checks passed prior to that.. This was already addressed by #927 and #928.. Is the test coverage dropping down from ~64% to ~58% because of changes in this PR or something unrelated? If former, may be we should address it before merging this PR. If latter, would be great to understand what is going on.. @Jackie-Jiang Can you please elaborate why you think the query you mentioned will fail? I actually tested it manually and it passes, with one caveat that the int '1' got converted to double in the group key. This is something I will address in the upcoming PR, and once that is done, will add those tests as well.. @Jackie-Jiang Could you elaborate your concern with compiling the expression in server side? From what I understand, we want to move towards compiling the entire query in the server side, so we don't have to send complex structures across wire, which is becoming quite annoying and tedious to maintain.. @Jackie-Jiang I am probably missing something, other than creating broker response, why does the broker need to know the group-by-column names? If that is the only reason, broker has access to BrokerRequest and can get both group-by-column names as well as expressions, without any additional processing/compiling. I made a one line  local change (not part of this RB, yet), and can see broker returning UDF as group-by column name, snippet below:\n        \"groupByColumns\": [\"add(l_tax, 1)\"]\nAnd the avg query parsing time (not just expression) is 0.2 ms (as per my benchmark). Still I don't want non-udf code to exercise that part, hence the extra logic.\nI can definitely call a meeting to discuss this, but so far I am unable to see any architectural issue with this approach. The only temporary issue until we have full support for udf is client's need to call handle presence of columns/expressions in group-by explicitly, something I think we should be able to handle in future RB.. I think the segment metadata class needs to be revisited in general. Any changes related to that, including the one you suggested can be / should be addressed outside this PR.. @antumbde I saw ~5% of the overall query time being spent on this for my use-case, where I had a about 200 segments. . @atumbde The logger/traceContext code appears in most part of query execution code, and needs to be addressed/cleanedup separately.. alwaysFalse() is renamed to isResultEmpty(). @Jackie-Jiang Added unit test for NoDictionarySingleColumnGroupKeygenerator.. Hi,\nWe don't have support for transforms/udf's on filter predicates currently,\nbut might be able to support it around Q2.\nWe do support transforms on group-by's, and will do the same for\naggregations next.\nYou can refer to the following design doc:\nhttps://github.com/linkedin/pinot/wiki/Expressions-&-UDF-support\nThanks,\nMayank\nOn Fri, Feb 10, 2017 at 7:30 PM, Shadow Walker notifications@github.com\nwrote:\n\nIn MySQL, to query the data since the past 1 hour, I can use SQL like:\nselect count(*) as cnt from  log where date >= DATE_SUB(NOW(),INTERVAL 1 HOUR);\nHow can I do the same in PQL? Will the date functions be added into PQL?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/1051, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMCAzV1McosN3cXC0s69pag5XPxxd-WBks5rbStYgaJpZM4L-D7c\n.\n. Closing the PR, we need a better fix for this.. Added another commit to the PR to complete the feature across all predicates for all data types.\n\n\n\nEnhanced predicates (NotEquals, In, NotIn and Range) to support\nno-dictionary based predicate evaluation.\n\n\nAdded support selection queries with no-dictionary indices.\n\n\nAdded unit test for all no-dictionary based predicate evaluators for\nall supported data types.\n. @Jackie-Jiang Addressed all the comments. You are correct, no-dictionary index is currently not supported for multi-valued columns.. @Jackie-Jiang Good catch, updated PR with the change to load segment name from metadata as well.. @Jackie-Jiang Yes this was found when profiling a usecase with throughput requirement of 2k QPS and large number of segments (> 2000 segments, > 3TB data). While for small/medium size usecases these may not matter much, but for large usecases with high qps/low latency requirements, the 99th percentile latency is all of GC. In this particular use case, we are generating GB's of garbage every 15s or so. This PR addresses some of the major ones that were found in the query execution path.. @antumbde If it was not clear from my reply to @Jackie-Jiang 's question, I will state it again. This is what I observed in the use case with ~2k QPS on 500 GB of data on one node, where we are trying to improve the 99th percentile latency (which is totally dominated by young gen GC pauses):\n\n\nWe create > 10GB of garbage per 15 seconds.\n\nAbout 20% of this comes from issues addressed in this PR. After this PR, that 20% is completely eliminated.\n\nIn order to see  improvements in the 99th latency for the use case, we still need to resolve the rest of the GC issues. But in the mean while, I'd say that it is still a pretty good savings in garbage creation, and therefore warrants to be pushed.\n. @kishoreg Agreed, that is a good idea. Filed PR-1460 with an initial ground work that supports serving count(*) using metadata, and makes it easy to add support for other such queries as well.. @Jackie-Jiang I was able to measure a clear reduction in overall size of byte[] garbage (about 10x, for the specific production workload I chose). The number of GC'd objects remains the same though because byte[] objects are replaced by shallow ByteBuffer objects. . @Jackie-Jiang Thanks for clarifying.. @snlee Config changes are not automatically picked up by server, and require server restart.. IMO, metrics can always use this indexing scheme. @mcvsubbu plans to implement the same.. What is the purpose of isDerived flag in option 2?\nCould we not just get by with having the transform function info within the individual field specs?. @antumbde I think the proposal here is to compute them statically (going by the example of time column quoted). But yes, would be good to call it out explicitly.\n  . @mcvsubbu Caller needs to manager how they are using this class. Added comment indicating that callers to ensure they are not reading allocated rows that were not written to.. The issue has been resolved by PR #2476.. Curious how this got pushed in the first place. Was the commit merged even with building failing on branch? Or is there a gap in where the license check does not trigger in TE build? If latter, we should identify the gap and fix it.. @Jackie-Jiang is right.. Updated PR to keep the server-side backward compatible with old broker. Added TODO to clean it up.. Actually, on second thought, one idea that might work is to replace the lists with concurrent hash maps with key as index of array. I think it will be slightly more efficient as not every add will trigger a copy. Also, the code would be simpler. Please think about it if this can work.. @mcvsubbu The regex_like support is very naive at the moment. IIRC, it basically does a regex match on all dictionary items to collect matching dictionary ids, and select records with matching dict id.\nFrom @ananthdurai ask, it seems more like a ELK use case that requires a lot more faster text indexing/search, which we currently don't have.. @ananthdurai Agreed, that would be a good feature to have. @sunithabeeram was experimenting with it with @kishoreg, will let them comment on how that is panning out.. It would be great to understand what exactly fails, because we are fixing one instance of this problem, and I am worried we might run into other issues in future.. @mcvsubbu This feature has not been used yet, and the first usage showed the issue with original library. So we are consciously making this backward incompatible change.. @mcvsubbu @fx19880617 If I understand correctly though, each entry is just 11KB and there's 10k docs, so total size should be 110MB per chunk. This is well within Integer.MAX_VALUE. Am I missing something?\nAlso, is there a way to reproduce it in a debugging environment? Eyeballing the code does not show any obvious issues.. Pinot has an inbuilt transform function for date-time conversion which supports time zone. You can refer to the following for more details: https://github.com/apache/incubator-pinot/wiki/dateTimeConvert-UDF\nAlso, note that transform functions are currently supported in group-by and projection, but not in filter (predicates).. The second statement has EPOCH (which is UTC). Statement 1 is the only way to specify time zone. Seems like you don't have a filter in your query, which means you are essentially applying the transform on all the records. How many records do are there in this table? What is the query latency you are seeing? Also, is this a test query or a real query that you plan to run in production (ie without any filters)?. Thanks for sharing the information. From the second result it seems the query selects 1.2B records, which means too much computation needs to happen. Do you really need to store the data in milliseconds granularity? If not, preaggregating offline data after with larger granularity will reduce data size, and hence the the num records to process.\nMay I ask which company/organization is this use case for?\nThanks\nMayank\nGet Outlook for iOShttps://aka.ms/o0ukef\n\nFrom: Sun-Li notifications@github.com\nSent: Sunday, December 30, 2018 1:20 AM\nTo: apache/incubator-pinot\nCc: Mayank Shrivastava; Comment\nSubject: Re: [apache/incubator-pinot] timezone problem (#3626)\nThe second statement has EPOCH (which is UTC). Statement 1 is the only way to specify time zone. Seems like you don't have a filter in your query, which means you are essentially applying the transform on all the records. How many records do are there in this table? What is the query latency you are seeing? Also, is this a test query or a real query that you plan to run in production (ie without any filters)?\nyes\uff0cFor a real query running in a production environment, such as this table video_market-video_download_performance_full_day, about 1.5g of data per day, querying 30 days of data, a total of 1237838944 rows of data, executing pq1 (server query timeout) and pql2 takes the following results\npq1: select sum(total_count) from video_market-video_download_performance_full_day where fdate >= 1543593600000 and fdate < 1546271999000 group by dateTimeConvert(fdate, '1:MILLISECONDS:EPOCH','1:MILLISECONDS:SIMPLE_DATE_FORMAT:yyyy-MM-dd HH:mm:ss tz(Asia/Shanghai)', '1:DAYS')\n{\n\"exceptions\":[\n{\n\"errorCode\":200,\n\"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 14999ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n},\n{\n\"errorCode\":200,\n\"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 15000ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n},\n{\n\"errorCode\":200,\n\"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 14999ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n},\n{\n\"errorCode\":200,\n\"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 15000ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n},\n{\n\"errorCode\":200,\n\"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 15000ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n}\n],\n\"numServersQueried\":6,\n\"numServersResponded\":6,\n\"numDocsScanned\":170287136,\n\"numEntriesScannedInFilter\":340574272,\n\"numEntriesScannedPostFilter\":340574272,\n\"totalDocs\":1237838944,\n\"numGroupsLimitReached\":false,\n\"timeUsedMs\":35737,\n\"segmentStatistics\":[\n],\n\"traceInfo\":{\n}\n}\npq2: select sum(total_count) from video_market-video_download_performance_full_day where fdate >= 1543593600000 and fdate < 1546271999000 group by dateTimeConvert(fdate, '1:MILLISECONDS:EPOCH','1:MILLISECONDS:EPOCH', '1:DAYS')\n{\n\"aggregationResults\": [\n{\n\"groupByResult\": [\n{\n\"value\": \"5214728856.00000\",\n\"group\": [\"1543622400000\"]\n}, {\n\"value\": \"5146017730.00000\",\n\"group\": [\"1544227200000\"]\n}, {\n\"value\": \"4950169463.00000\",\n\"group\": [\"1545868800000\"]\n}, {\n\"value\": \"4912167135.00000\",\n\"group\": [\"1545696000000\"]\n}, {\n\"value\": \"4894003737.00000\",\n\"group\": [\"1545436800000\"]\n}, {\n\"value\": \"4882993768.00000\",\n\"group\": [\"1545782400000\"]\n}, {\n\"value\": \"4612845413.00000\",\n\"group\": [\"1544140800000\"]\n}, {\n\"value\": \"4612000264.00000\",\n\"group\": [\"1543536000000\"]\n}, {\n\"value\": \"4581314177.00000\",\n\"group\": [\"1544832000000\"]\n}, {\n\"value\": \"4510667574.00000\",\n\"group\": [\"1545609600000\"]\n}],\n\"function\": \"sum_total_count\",\n\"groupByColumns\": [\"datetimeconvert(fdate,'1:MILLISECONDS:EPOCH','1:MILLISECONDS:EPOCH','1:DAYS')\"]\n}],\n\"exceptions\": [],\n\"numServersQueried\": 6,\n\"numServersResponded\": 6,\n\"numDocsScanned\": 1074252463,\n\"numEntriesScannedInFilter\": 2148504926,\n\"numEntriesScannedPostFilter\": 2148504926,\n\"totalDocs\": 1237838944,\n\"numGroupsLimitReached\": false,\n\"timeUsedMs\": 5750,\n\"segmentStatistics\": [],\n\"traceInfo\": {}\n}\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-pinot%2Fissues%2F3626%23issuecomment-450548401&data=02%7C01%7Cmshrivas%40linkedin.com%7Cd84ece31ced44fc0a14108d66e381ae0%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636817584591197552&sdata=U3yDoAGb8hcKmfFWqUs2Fetu0QmwXOjPo6VJ2W2SL0g%3D&reserved=0, or mute the threadhttps://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAMCAzaxbJsB3Ndv3tCzTMp_66FAL1r8Rks5u-IVwgaJpZM4Zkbf0&data=02%7C01%7Cmshrivas%40linkedin.com%7Cd84ece31ced44fc0a14108d66e381ae0%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636817584591207557&sdata=sAj468xEB0RFyKR6L39zyIVRZATnqjyJflAWLJroXoo%3D&reserved=0.\n. Yes, you are right the UDF converts each row rather than the result. It is required to ensure the right grouping happens after applying the UDF. However, in your case it is not necessary as one day already has one single millis value (which is a special case). We will explore on making this faster for your case (eg by caching the conversion). But in the meanwhile, is it possible for you to apply the conversion at the client side?\nAlso, if you can share, are you already using Pinot in production, or evaluating may the moment?\nGet Outlook for iOShttps://aka.ms/o0ukef\n\nFrom: Sun-Li notifications@github.com\nSent: Sunday, December 30, 2018 6:37 PM\nTo: apache/incubator-pinot\nCc: Mayank Shrivastava; Comment\nSubject: Re: [apache/incubator-pinot] timezone problem (#3626)\nThanks for sharing the information. From the second result it seems the query selects 1.2B records, which means too much computation needs to happen. Do you really need to store the data in milliseconds granularity? If not, preaggregating offline data after with larger granularity will reduce data size, and hence the the num records to process. May I ask which company/organization is this use case for?\nI work in sina weibo (Beijing), and my main work is the big data r&d engineer. The data of this table has been pre-aggregated for days outside, and the time stamp of day milliseconds is stored in pinot.\nIn fact, if the time is not converted using SIMPLE_DATE_FORMAT, the query time is very fast (that is, the time zone cannot be specified, resulting in the mismatch between time and real time)\uff0cSIMPLE_DATE_FORMAT converts each piece of data rather than the query result\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-pinot%2Fissues%2F3626%23issuecomment-450602555&data=02%7C01%7Cmshrivas%40linkedin.com%7C1bd0d135f3bc43e14f7c08d66ec8e08b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636818206392019077&sdata=jyq4ddidHUIrBy9arNVd9vbyEo9%2BhEz0rz2yCfsZkBU%3D&reserved=0, or mute the threadhttps://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAMCAzZvCQfrd2iJhMGzisja0gF0cjxMfks5u-XhVgaJpZM4Zkbf0&data=02%7C01%7Cmshrivas%40linkedin.com%7C1bd0d135f3bc43e14f7c08d66ec8e08b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636818206392019077&sdata=fWpRMIwihaV8ju0T9FtWJmT6Twp0P%2FizqBJsquvfKIk%3D&reserved=0.\n. Thank you for confirming @warrenqi . The Helix version 0.8.4 turns out to be unstable, specifically, the helix task manager seems to have slowed down quite a bit. Will upgrade to a new helix version with the fixes when available, closing the pull request.. Sure @mcvsubbu, please delete the branch or let me know so I can delete once done.. Can block be empty? If so, the range would then be infinity. Should it be -1 (or some other value eg NaN)?\n. Need to be consistent (either NaN or infinity).\n. Many of these seem like formatting changes? If so, could you please remove those changes?\n. Actually, -1 would be a better value (as max - min is always >= 0). -1 would be a more manageable value.\n. Can we make the value configurable, instead of hard-coded?\n. Use bash -x to echo the commands being run\n. Resolved.\n. Will evaluate if that can cause an issue, and submit another PR if required.\n. Need to create a copy for each node. Not doing so means nodes may have the reference to the same 'Set' which is being modified, and we don't want that.\n. Done.\n. Yes, done.\n. Sharing is fine for children of the same parent. It makes the 'remove' redundant, but saves a lot of garbage.\n. Added\n. s/tht/the\n. update java doc for the new/changed api's.\n. lgtm, take care of the minor comments.\n. I also see imports of 'org.codehaus.jackson' in various other parts of the code. We should pick one and use that uniformly.\n. Does the 'if' need an 'else' part'.\n. Use static final instead of hard-coded values\n. Factor the cardinality product calculation out as a private method.\n. Method name is a bit confusing, may be rename it getGroupByCardinalityProduct(), or getMaxPossibleNumGroupKeys()?\n. Make the exception message more informative.\n. If this method is going to be called per doc, can you check the function cal overhead? Also please use Java 8 for the performance measurement.\n. Same as previous one, check for function call overhead.\n. The three flavors of this method seem to be doing very similar things? Any way to factor out portions of reusable code?\n. Avoid garbage creation by reusing string builder.\n. Rename the method to indicate that rawKey here is actually an int array list.\n. Assign the argument to StringBuilder to a variable to make it more readable.\n. What if cardinality is 0 due to an empty segment?\n. I am probably missing something here: 'rowSizeInBytes' is changed to 'long', but then is being casted to 'int' in a lot of places. Given that it was explicitly changed to 'long' implies you are expecting size that would not fit in it. If so, can it be safely casted to 'int' then?\n. Why are we changing empty string into defaultNull? What if the input has a valid empty string?\n. No, I mean when someone sees this exception in the log, they can infer what part of the code it is related to (aggr group by).\n. Are there cases other than empty segment, due to which the cardinality is 0, and we end up with a divideByZero exception?\n. Logging is once per start, same as before.\n. Could you share how you arrived at the default value of 1000?\n. I understand that we have both conventions for naming member variables (with and without leading ''). But in this case, this module was using names without leading '' (there are other related files doing so). I'd suggest not changing the convention in this file only.\n. Can you elaborate why leaf nodes do not need to be updated?\n. Seems like you replaced on magic number (4) by another (8). Will using Integer.BYTES solve this?\n. Again, recommended to not change the naming convention within a file. I think the plan is to move to google coding standards which does not use leading '_'. Until that happens, we are refraining from explicitly modifying the names in a file (as long as it sticks to one convention).\n. Use static final string instead of hard-coded value.\n. How will this work in presence of multi-valued columns, where the records may be of different sizes? If that is not supported, then may be add a Precondition somewhere appropriate.\n. Updated the comment.\n. Fixed.\n. Using assert to print such messages seems odd to me. We should fix the logging level in that case.\n. As mentioned in the comment, the test runs aggregation on all metric columns, not just the one in the query, to be more exhaustive.\n. Use static final instead of hardcoded 1000.\n. Use static final instead of hardcoded \"BETWEEN\". Same for 'IN' below.\n. ATM, the test simply aggregates on all metric columns, without looking at the actual aggregations in the query. This was done to be more exhaustive and perform aggregations on all metrics, without needing to explicitly write-down those queries. Will handle count(*) in upcoming PR's.\n. May be add a comment on how the HLC/LLC segments look like, so it is more clear on why 3/4/5?\n. Not a requirement for this commit, but you may want to consider adding checks like mutually exclusive arguments, dependent arguments etc.\n. Add more detailed explanation describing the algorithm, eg if/when threads wait etc.\n. Use logger instead of System.out\n. May want to add a verbose switch later so we can also see the queries if required.\n. Fixed the method to reuse the mapped buffer.\n. Better to use generic names for tables.\n. The initialization seems redundant. If so, please remove it.\n. I realize this is existing code, but since you are already modifying the file, it would be good to cleanup the usage of '+' and replace with '{}' in LOGGER.info/error calls.\n. There is no 'else' to this 'if'. Can there be responses other than 'continue'? If so, are they being handled as expected?\n. Will these paths start showing up on the Swagger UI? If so, it may better to figure out a way to disable them from Swagger UI, as these are purely internal protocols, leaving the Swagger UI door open could mess up the protocol.\n. I see a couple of TODO's in the current PR. Are these being tracked under a ticket somewhere, so we can go back and make sure they are addressed?\n. Addressed before pushing.\n. Addressed before pushing.\n. Addressed in PR #368 \n. Should we log an error/warning here?\n. Short for interface.\n. It is getNum(berOf)Children(). Since the return type is (one) 'int' it cannot be id's of children (plural). I'd agree with you on the possible mis-interpretation if it were getNumChild(), instead of getNumChildren().\n. s/adding/enable, here as well as at all other applicable places.\n. s/adding/enable\n. s/adding/enable\n. How was the value for the last argument (false/true) determined?\n. Yes, I prefer the same. However, doing so breaks backward compatibility, ie pre-existing indexes  cannot be de-serialized once class name is changed.\n. In the first implementation, we will first generate the existing implementation, and then convert it to the new implementation. So this part of the code will work on the existing implementation instead of the interface. Will re-visit this in the next round of changes.\n. In the first implementation, SegmentIndexCreationDriverImpl will always create the existing implementation, and then  we create the version from it. Will re-visit this in the next round of changes.\n. Because iterator of super class (or interface) is not type compatible with iterator of sub class (implementation class).\n. I added an exception for now, since I don't know if (how) this would be useful. Will revisit it with the next set of changes.\n. Yes that is correct.\n. s/another/other|that\n. Java doc (explaining derived metric null value etc)\n. s/anObject/thatObject\ns/anotherObject/that\n. Java doc explaining what the test intends to accomplish.\n. Incorrect import.\n. Can you please explain the magic here, to make it more readable.\n. Assert or precondition.\n. Seems like the too are not exactly same. Using TestUtils passes the test whereas using Assert does not. We can investigate the reason for that outside of this PR.\n. Apparently not. Again, we can investigate why so, outside this PR.\n. They are not the same.\n. They are not the same.\n. The test fails on doing so.\n. Exceptions here could be from FileUtils.copyFile. An exception here does not necessarily imply star-tree binary being messed up. But in case it does happen, the actual segment load will fail, and server will start fresh by downloading the segment from controller again.\n. I intend to do a global renaming of StarTreeV1/V2, and it will span many files outside of this PR. Will file a separate PR for that.\n. This is only the conversion phase, and an exception here does not necessarily block loading. If something went really wrong such that the star tree binary was unloadable, then the loading phase (that happens after this convert phase) will throw an exception and the server will reload the segment from the controller.\n. Javadoc explaining the purpose of this class.\n. Can we have a QueryRequest class (which has the QueryContext, or may be just rename QueryContext to QueryRequest), so that this api seems more natural: processQuery takes a QueryRequest?\n. Can you comment why the BROKER_TIME_OUT_CONFIG was removed?\n. The main method probably unintentionally made it into the pR\n. Is there any impact on low latency usecases (say with latency in sub 10ms) due to this new code, specifically the getHostName() call?\n. Can we make the controller.vip.port config optional and default it to controller port?\n. get(0): Is this guaranteed to be non-null/non-empty?\n. This will always be in MILLIS?\n. Add a message in the preconditinos.\n. Add a message in all the Preconditions checks.\n. Use constants with suggestive names.\n. Add a comment explaining the logic here, it's a bit non intuitive.\n. Actually, the reason map is required is because I am keeping the JavaSerialized ordinal as 1 instead of zero. Doing so allows to keep backward compatibility.\n. It will always be >=4. If you are referring to adding an assertion/Precondition check I chose to avoid those in this case, as they may have some runtime hit.\n. For performance reasons. Refer to the [pre-existing] explanation in the DataTableBuilder class.\n. Added version compatibility test.\n. Done.\n. A better/cleaner way to address the issue with PriorityQueue not allowing constructor with size zero would be to move the check for LIMIT 0 up the stack (ie code should not even reach here). You can choose to address that in a separate PR. If so, please add a comment explaining the issue (why you need to use a queue of size at least 1).\n. +1 for removing duplicate code.\n. Unclear why you decided to use  a member for sortSequence, could  you please explain?\n. Could you please rename the variables queue1/2 to reflect which is the source and which is the destination?\n. un-sorting?\n. Rename rowEventsSet1/2 to be more meaningful (eg src/dest).\n. Could you port the test to use BrokerResponseNative, instead of removing the check?\n. Done\n. Done\n. Just for readability. We already have too many of v1/v2/v3/etc in code, and getting hard to keep track of their meaning.\n. Agreed, but this seems to require plumbing through 'metrics' into DataTable from up the stack. Will address that in a separate PR. \n. Agreed, but this seems to require plumbing through 'metrics' into DataTable from up the stack. Will address that in a separate PR.\n. Yes, and the reason being different rows of the same column can potentially have different types.  This will be addressed in the future re-designs/clean-ups of data table.\n. It shares internal representation.\n. Done\n. DataTable class is in utils already. More-over, this is a temporary way to catch any missing object ser/de and the intention is to this code once we have established that.\n. Just to make sure, we don't support HLL without Star Tree?\n. +1 on adding it to the pinot-admin tool.\n. Use a central place to build this path (eg ControllerRequestBuilder, or something similar), instead of assuming the url here.\n. Use a central place to build paths, instead of assuming a hard-coded path here (eg ControllerRequestBuilder, or something similar).\n. Is there a way to also flag the reason why the validation failed?\n. Does it make the code more easier to read if you load all queries in memory and randomly access one. \n. Why are we not using Assert here?\n. We have a few query comparators, is there one we can re-use here (eg JSON obj based)?\n. Not sure what value does this test provide, which is not already provided by other tests. Could you please clarify?\n. I think we have multiple query generators as well. Is there a way to combine them into one general purpose query generator?\n. Probably not needed.\n. Haven't seen the usage for this yet, but does it make sense to cache this value upfront, instead of determining each time?\n. If this is per block of docIds (eg 5k/10k), then may be better to pre-allocate array and re-use across multiple blocks.\n. Use Logger instead.\n. Again, have not seen the usage for it, but if it can be called multiple times within a query (for the same column), may be better to cache it upfront.\n. Just a nit, if/else can be factored away into a small method, makes the switch/case concise/clean/readable. But that's just my preference.\n. Same as above.\n. Now that the class caches both SV as well as MV columns the 'SingleMultiValue' prefix in the class name is redundant as well as confusing. Rename it to something like 'DataBlockCache' (going by DataFetcher).\n. s/DictIdArrayArray/DictIdsArray\n. s/ValueArrayArray/ValuesArray\n. s/CodeArrayArray/CodesArray\n. s/ValueArrayArray/ValuesArray\n. Would like to understand the use-case(s) for aggregating on MV columns (other than distinctCount).\n. This test seems to use a lot of setup code from AggregationQueriestTest. It would be cleaner to avoid duplicate code (may be merge the two tests, or have a base class that does all the common stuff).\n. Just my preference: I'd rather generate a segment with specific data, so I can also generate expected results programatically, instead of hard-coding.\n. Javadocs please on all tests, to describe exactly what is being tested.\n. Again, let's avoid duplicate code (for setup).\n. As per javadoc of Boolean.valueOf, string other than 'true' defaults to false (I tested that locally as well). Either way, this is just a debug option.\n. Yes, constants will be supported in another PR.\n. It is case insensitive.\n. Done\n. Done\n. Added comment, as variable seemed redundant.\n. Done\n. No. This is null until we decide to switch the mode. We build this map only once lazily, and after that the map is non-null (ie not built per block).\n. Iteration happens only once during mode switch (ie not per block). Removing while iterating will require a set (currently int[]) and using Set instead of primitive int array would be inefficient.\n. Same reply as above.\n. Yes, size of priority queue would be the total number of keys (renamed the variable name to reflect the same).\n. Done\n. Done, moved to Pairs class\n. Done, moved to Pairs class\n. Yes, agreed, changed to server config.\n. I don't see it as adding much value, as it will potentially keep the threads busy, and the results will be inaccurate anyways. How about just throwing an exception instead of partial results?\nAlso, I explored the option of doing so, and it seems to pollute at least three class that will now have to handle the case when we have hit this limit, and start seeing new keys that were not already seen.\nWe need a clean solution to handle such cases, but that would be a bigger change. As we discussed offline below are a couple of proposals to explore, both of which are considerable changes:\n- Go off heap (mmap) to compute the group-by's.\n- Use two pass techniques:\n  - In first pass we map a large range of group keys into a much smaller range (multiple keys may map on to same value), and compute aggregation on these compressed key ranges. Sort the keys based on aggregations function values, and trim the ones with smaller values.\n    - In the second pass, do the actual group-by, while skipping keys that were trimmed in the first pass.\nGiven these are non-trivial changes, we need to put a temporary stop on the fire until we have  a clean solution. This PR is just for the temporary stop.\n. Addressed all comments. Extracted out common code between the two PQ implementations into an abstract base class. While a lot of the code still 'seems' similar but it cannot be shared as one is based on primitive data types (for performance), while the other one is generic implementation.\n. Will do.\n. Will do.\n. No, this is being used to keep track of what ids have been removed. When we enter TrimMode.ON, we will start tracking removed groupKeys. When purge is called, we need this mapping from id to group keys to find what group keys to purge.\n. Is print/printTree() implemented elsewhere? If not, would be nice to have that feature.\n. We all learn something new everyday, don't we :smile: \n. Rename -fileFormat to -outputFormat\n. Can this be enhanced to handle the following:\n1. Segments in tar.gz format.\n2. Case when segmentDir contains a list of segments, and not just one segment.\n. Although I don't have a better alternative to suggest, passing totalRawDocs seems a bit odd. Would it make more sense to propagate it via block interface (bottom up)?\n. Any reason the value needs to be BaseOperator instead of DataSource?\n. I follow the convent that already exists in the file. In this file the original author did not use leading '_', so I am going to maintain the convention within the file. At some point we need to pick on convention and reformat all the code.\n. It has no performance impact.\n. May be use isEmpty() over length() > 0?\n. Could u please add an assert/annotation on executorService not being null, since we now assume that it will be non-null?\n. I know this is not part of your change, but can we have more explanation on these params, specially given that we are adding more params.\n. why do we need this import here?\n. I take it that you chose to comment these lines as opposed to removing them is because we want to revisit this part? If so, please state that as part of the comments.\n. Rename these to have REQUEST as part of the name so it is more readable.\n. Rename these to reflect time unit, ie something like connectionWaitTimeInMillis.\n. Redundant initialization?\n. Would be nice to have all the magic numbers replaced with constants, for readability.\n. You are referring to line 82 (76 in old code)? If so, that is indeed in the getNextBlock(), not in the constructor.. I am not fully sure if we should add some of the apis on ProjectionBlockValSet (eg getHashCodeArray) into the BlockValSet interface as they would likely not make sense outside of projection block. I kept these api's in ProjectionBlockValSet for efficiency, if we take them out, then we need to re-iterate over values and further process them (eg compute hash codes). So this boils down to performance v.s. clean interface.\nLet me know your thoughts, and we can address it accordingly in following PR's.. GroupKeyGenerator needs global info (non block specific) to compute stuff like max cardinality product. I was debating over providing those api's on block vs just passing dataFetcher that already has those methods. Based on our discussions, I will explore not exposing dataFetcher outside of projection.. Yes, will evaluate and update the PR.. Is being passed GroupKeyGenerator, will work on eliminating that.. It was unused after I finished my changes, removed.. No longer required, removed.. Done.. Added that in the interface already.. Done.. I prefer this way in cases I don't want caller to worry about keeping track of whether initialization has happened or not.. Removed. Done. If we are using visitor pattern, should we define the visitable interface?. Until we find a better way, should numTotalRawDocs go inside the context?. Does args4j have check for valid values. If so, we can use that here, as well as other similar places.. Any guideline for specifying number of threads for a given QPS? If so, please put in the comments.. Do we really need this method, given that we have one below (it takes additional broker metrics arg).. Do you have any other response type? If not, we should clean this up as well, and always have one BROKER_RESPONSE_TYPE.. Same as above.. If/when we choose to eliminate the BrokerResponse interface, lets rename BrokerResponseNative to BrokerResponse.. Seems like we are changing precession in the broker response. This is a difference in client side, and not sure if it might break some of their code. Please do your due diligence on this. . What happens when the conflict is resolvable, eg: a column is long in one dataTable and int in another? We should be able handle such cases by treating both as long.. s/attach[set|add]?. What's the functional difference between addPhaseTiming vs timeQueryPhase?. Slightly misleading comment: This is for the same table's offline and realtime counterparts, right? Not multiple unrelated tables?. Rename to deserializeServerResponses?. Could you please add a unit test, specifically testing for server side timeout?. Missing what space after 'projectionOperator,' -> Can you format the file as per the styling?. So planning phase will allocate executor now? If so, what's the motivation for this?. Part of the motivation here is to push down as much of dictionary related operations into data fetcher as possible. So it makes sense to move these in the data fetcher.. Same as above. Data fetcher does all dictionary handling for clients that are only interested in data (and not dictionary ids), ie client just make a call to get data. Data fetcher will check if there's a dictionary or not, and take appropriate action.. I am not sure why you are referring _columnToDictIdsMap as a cache, it is not, it is just reusable memory. Its values are written/read within Data fetcher and within one method call.  If there's any part of code where it's values are read/written/reused across method calls, let me know and I will fix it. Please also note the following:\n\n\nClients should not directly need DataFetcher or DataBlockCache at all. They should work off of projection block and block val set. In fact data fetcher should be hidden within data block cache.\n\n\nFor no-dictionary support I definitely don't want DataBlockCache to have to provide any dictId's for apis that are just trying to access actual values and not dictIds.\n. I am probably missing a bug that you are seeing. What's the exact method calls that will cause this?. Is the order of columns the two objects guaranteed to be the same? If not, will that cause an issue?. Not required for this PR, but we should have this operator class work off of projection operator only (ie indexSegment should not be passed to it).. Can you please comment on the status of [PINOT-2315] in the new code?. s/getFlexibleComparator/getTypeCompatibleComparator. Yes, the idea is to only have data-fetcher know if data is being fetched from dictionary based index or index without dictinoary.. Added TODO.. Done. Added 'refer' link. As for page aligning, the reason I did not pursue it in this case is because:\n\nThis is for variable sized data, and fixing to a page size will cause fragmentation, as well as making indexing code a bit more complex.\nNo control over size of chunk once it is compressed.\n\nStill, I will put more thought to it, and see if there's any way to at least benchmark this implementation against fixed size and pursue further if required.. Done.. Initially I was thinking of having this as static, which doesn't work obviously. Once I removed static, I missed to remove the lazy allocation, fixed now.. Yes, agreed. Will add in followup PR.. Fixed. Fixed. Will follow up on evaluating this.. Done. Yeah, some members have showed preference on if/else over ?:. I guess we can't make everyone happy :-). Done. Yep, also the class has the 'NotThreadSafe' annotation.. I added it in anticipation for supporting iterator over the new index. If it is not used in the following PR's, will remove it.. Went with fixing in the reader.. Hmmm, I prefer 'valueToIndex' :-). Fixed. Fixed. PinotDataBuffer.size() returns long, hence the cast to int.. Yes, will should address MV cleanup before any further changes, after this PR. Lets discuss offline.. Well, somehow IDE thinks that the code are duplicate, even though the data type of the two are different (one is [], another is [][]). Cleaning up MV will eliminate [][].. Not required for this PR, but wouldn't a better abstraction be to support multiple columns in this class, so that the client code does not have a list of Statistics?. It seems we are first getting the result holder from aggregation function and then passing it back to the aggregation function. The 'get' misleads into thinking that result holder is actually sitting within aggr function, when you are probably using it in place of factory. You could still keep the factory and pass it the Aggr function object (instead of name) to get the appropriate result holder.. What is the difference between AggregationResult and FinalResult, and why do they need to be separate interfaces? If possible combine the two.. Does this need to be ProjectionBlockValSet, or can it be BlockValSet? If latter, please use that so we have more flexibility for change in future. If not, this will be an issue when supporting UDF's, ie when we are aggregation on the output of UDF. I am not a big fan of having these hard coded value expected values, because if we want to add a new test, we don't know what the correct answer is. I guess you ran it once to get the answer, that defeats the purpose of the test.. Do we also need to handle trailing \"/\"?. If tableType == null, should we handle both offline as well as realtime?. Could you add the URL example for adding table type, etc?. Would be nice to have a javadoc right here as well, for someone looking at it at a later point in time and does not know if a test exists for this.. It is unclear what AggregationResult and FinalResult represent. Can you put some comments explaining the two. And  if required, rename AggregationResult to IntermediateResult.. Its computed based on values read in the header. Since the header is read in by the base class, I just kept it in the base class.. I thought about that as well. The reason I put in an assert is for readibility. As asserts are turned off in production, it shouldn't cause an issue. We have similar asserts elsewhere in the code (ie per row).. yes, agreed.. Not right now. This is in anticipation for supporting columns of type byte[] (blobs).. Hmmm, I felt the current one was more clear. Anyway, since you left it up to me ;-) I'll keep it.. Please add the comments explaining the algorithm to derive trimSize and trimThreshold.. Done. Done. Fixed.. Removed id.. Removed it.. Removed.. Moved _inited = true as the last statement.\nNot sure if I follow your second comment, the transform functions can be configured via server config, so those values cannot be hardcoded in the factory.. Unsure if I understand why T does not need to extend Serializable? Seems like the methods serialize/deserializeJavaObject need T to be serializable?. Will this class be reference outside AvgAggergationFunction? If so, may be it should be moved out of aggr function class.. Same as above, for scope of the class.. Since it can be either (we can compile fragments of the query), I kept is as expression.. What if there's a typo in the segmentPushType (ie neither APPEND or REFRESH)? We should throw an exception in that case, right?. Can you also document the reason for this behavior?. I think size of these data types are defined somewhere in V1Constants, can we use that?. Why is float 8?. I saw this code in the file above as well (DataTableBuilder). Can we remove duplicates?. If you use the result of line 211 to assert that number bytes read == valueLength, then you won't need the SuppressWarning in line 193. But I'll leave it up to you.. Same as comment above.. Will do. Thanks for catching, will fix.. Will fix blockValset. They will be protected for sub class access.. Actually, the two constructors are needed because TransformBlockValSet can be built either from transformed values, or a projection blockValSet. Initially I had the method to build TransformBlockValSet from a projection block outside (in the caller), but then thought it is better to have it as a constructor.. I see, will fix.. Will fix. The first arg of super is Nonnull annotated, so cannot pass null.. Yeah, it does not need to be cached, I can just cache the segment name.. The buildTree method is a public static method that the compiler uses to build the expression tree, it cannot be removed.\nEach tree (node) needs to know its children somehow. The current code is passing an array  list (reference), that gets filled later. On second thought, a better approach would be to collect all children and set them via a setter. Either way, I will remove the children param being passed to the constructor.. Yes, I had a TODO in the selection part, will add one here too.\n. No, this will be a pass through to non-transform code in absence of transforms. In presence of transforms, the code will behave the same way as it does today and throw exception wherever it does that today.. Modified them to set. I have kept them separate to avoid paying penalty of extracting columns from expressions as it requires compiling the expression.. The extra logic is purely to avoid the need of extracting columns from expressions, as that requires compiling the expression. While one compile itself is not a big deal, it can show up in profiles with large number of segments (as we create a plan for each segment separately). I have removed the ingoreColumns flag, as all current callers were passing it as true.. The compile time for one entire query (not just expression) is about 0.2 ms on avg. Just because it shows up in the profiler does not mean it is expensive. This was already discussed in the team, I guess we can discuss this again. I'll call a meeting on Monday.. Will add.. Agree, will do.. Will address it in separate PR, this one was already merged before your comment.. Can you add comments on how this 0.67 was derived? Also, if there's any experimental data supporting the same, please share that as well.. Is the configured limit referenced here MAX_MMAP_PREFETCH_PAGES? If so, is that a config or hard coded value?. Both values in RHS seem to be hard-coded static finals, so LHS can also be a static final?. Predicate was being set from outside already. I am setting the evaluator from outside just as an optimization. The FilterPlanNode.constructPhysicalOperator does create the evaluator to optimize for alwaysFalse. It then calls this api to set what it created, just to avoid re-creation.. There seems to be 13 implementations of BaseFilterOperator (including tests), I chose to have the default implementation in this class just to avoid code duplication. The new EmptyFilterOperator class I added already overrides this method. Once we have a large number of custom implementations, we can make it abstract. What do you think?. Made alwaysFalse() abstract in base class, and sub classes now have their custom implementations.. Removed all setPredicate from the BaseFilterOperator class. Constructor of concrete filter operators now take the predicate.. This is for unit test, which creates a plan node with and without this optimization and ensures that all docIds gotten from the filter operators are identical.. There are existing callers from print (which may be for debug mode). I'd skip removing that in this PR.. Can you be specific?. Same as above. I have tried to keep the existing functionality as much as possible in the PR to keep it clean. If we deduce this is not needed, I'd prefer to keep that cleanup out of this PR.. Same as above. Added tests.. Don't see a strong reason either way. Will keep as is for now.. This not newly added, but moved from base class, and there are existing callers for it, so cannot be removed, unless callers can be removed.. I went with whatever is allowed in java without casting.. Yeah, chunk based writers with compression do support writes at random offsets. Updated javadoc with the same.. Done. Done. Done. Could you also explicitly add groups with '\\t'?\nAlso use random instead of randomAlphanumeric.. Fixed. Fixed. Yes, in the PR the optimization will be enabled for hybrid usecases only, and we pick up the time column from offline part of the hybrid usecase.. Will address that in a separate PR.. Sorry, it was an unused 'auto' import, will remove it.. No it cannot be reused, because its semantics does not match start/end of segment metadata. Start and end are both inclusive in segment metadata, whereas for Interval class, the end is exclusive. Besides, it is inefficient because it requires unnecessary conversion to millis.. Conceptually, yes. But based on profiling results, no it does not buy anything at all.. It takes < 1 microseconds to DFS on a filter query tree with 20 nodes and depth of 5.\nAlso, extracting the time interval range requires merging of multiple predicates (this pruner should not assume that just one predicate on time column), handling AND vs OR. . Can you elaborate what will break? . Added tests for disjoint range negative time ranges etc. Cannot test absence of time column in this unit test as the api it calls has timeColumn as Nonnull. But made sure it is covered elsewhere.. Corrected.. Added. These ranges are strings of form (, 100], [10, *), etc. The combine logic becomes a bit non-trivial in that case. Sorry, I am not at all convinced this can ever have any kind of noticeable impact on latency regardless of number of segments or query complexity. With large segments and/or query complexity, there are other parts of the code that take a hit as well. At this level of cpu times, I would always choose code simplicity and over premature optimization.. Probably you did not change this, just optimized imports. But seems like different json libraries being used here? I thought we were using jackson?. s/Get/Got. Add more information, eg what was the code doing when this happened.. Can multiple pushes of the same file at the same time cause any concurrency issue here?. We are generating the same filterQueryTree per segment. Not a blocker for this PR, but we should change it so that we do this once per query.. Can you elaborate why we need these modes, instead of having just one MinMaxPruner? If min/max is available for a column in  the metadata, why would we not want to prune based on that? If you think it is needed, I'd prefer to have separate pruners (one for time and one for all other columns) as opposed to one overloaded pruner.. As per your comment this is not expected, so should this be an error?. Please add a check for maxValue as well, just to be safe.. Seems these two are independent bug you found, and not related to this PR, right?. Lets add a check for maxString as well.. Java doc to explain what the class is doing.. s/GenerateColumnMinMaxValueMode/ColumnMinMaxValueGeneratorMode. If you think of it as an attribute of the column that indicates values of this column are expected to follow a certain mathematical constraint, then it seems more appropriate to be property of a column. Also, are there any existing segment level properties with column as key (I could not find one using example segments).. Will make it private. Cannot be final because we need empty constructor for json de-serialization, until we eliminate segment generation config being read from json.. Because SegmentMetadata is in common and ColumnMetadata is in core.. That seems accidental, thanks for catching, will fix.. Ok, figured out why this happened. Since the @Override annotation is above the javadoc, auto formatting in Intellij did that. Fixed by moving the annotation below javadoc.. Yes, the log is a few lines below. This return is the happy path when value is in range, ie no action needed. When value is not in range, we clear the partition function from stats collector, so it does not get written to metadata.. Will update.. Covered under SegmentPartitionTest, and we only have one partition function defined currently.. This is the same syntax as RangePredicates. We should extract out the logic to parse ranges that should handle spaces etc and use it here as well as RangePredicate. Will address that in separate PR.. Added nonnull for partitionValues. Adding a separate check is flagged as redundant in IDE.. Made private. Cannot be final because empty constructor required for json de-serialization. Currently we only have two operators. When we add a new operator (for example XOR), this exception will help us identify this location and take necessary action (eg write code for XOR based pruning).. done. Added precondition check.. Had a discussion with @mcvsubbu on the same topic. The current consensus was for stats collector to provided an api to indicate if partitioning passed/failed. And if failed, the caller (segment generation) can decide what needs to be done.. Checkout SegmentPartitionTest.. Positive/negative tests already present. Added tests for AND/OR.. Added. Added. I agree that it is more likely that partitioning is performed on a composite key, but supporting that would require a lot of changes to existing code. Until then I'd lean towards, allowing partitioning on multiple columns, as it has added benefit of pruning when any of the partitioned columns has predicates (as opposed to all of the columns in composite partitioning).. Fixed.. I wanted to support case insensitive naming, ie any casing of name can be specified in config. Matching enum with any kind of casing on string is easier with this approach.. Can you add a comment to explain why nothing needs to be done right now, and/or kill the api?. Can we have enum/constant for tableDataManagerType?. I know this is not part of your PR, but not sure if I understand the motivation of adding inv index when sortedColumn != null. Could you add an item to investigate this further (outside of this PR)?. Can we use static final with a meaningful name?. Add comment to describe the key and value for this map.. Why does the partitioners argument need to be empty map as opposed to null?. Since we are passing empty map in one of the calls, it is going to write out an empty config? I'd rather have nothing written at all in that case.. To add, is this additional call actually required? I thought LLC segment names have partition number encoded in the name, which would imply that we already queried the partition once. Can we not use the same value? Or does that happen in the controller?. +1. Change the variable name to match the type name.. this is not used in the function?. Fix the typo in previous checkin, it is implementation of ParititionFunction, not ModuloPartitionFunction. Since you added ByteArrayPartitionFunction, do we really need this? Also, is ByteArrayPartitionFunction internally doing the same math as this one?. I think the lower level functions only need partition info. So instead of passing index segment and columnMetadaMap all over, may be it would be better to extract out that information upfront, and just pass that around.. Refactor this out so that the high level recursive function is concise and clear to read.. Is there a unit test for this?. Is the empty constructor needed?. static final for \"\\t\\t\". Does this have unit test?. Just a heads up, there's another PR in-flight which requires no-dictionary support for predicate evaluators.. Fixed.. Fixed.. Removed.. Fixed.. Done.. Fixed.. Fixed.. Done.. Done. Also went ahead to make all changes to get the 'green-check' on IDE for this file :-). . Done.. Done.. Done.. Done.. Done.. Done.. Made private.. Done.. Done.. Sorry, I didn't ask the question correctly. My concern was to just make sure that if there's no partition config, nothing gets written out. It seemed that with empty map, the code would have written out the empty partition config, as opposed to not writing it at all.. Since we made it info, can we just print e.getMessage() instead of the entire stack trace. Consider where applicable.. What is a realistic latency for this call and how was the maxWait derived?. Is it guaranteed that partition config will not be used if an exception was thrown? What will happen if a runtime exception happened inside setSegmentPartitionConfig?. Does IDE give you multiple choices here for this import (eg org.apache.kafka ?). If this class is only for testing, lets make it a private class inside of integration test so it does not get misused.. Can we move checkPartition() into the Partition function interface?. This should be moved to within PartitionFunction.. May be renamed to isPartitioned and change the return value accordingly?. Yes, it is already there in the same test, check a few lines below.. Yes.. Added ALERT.. Moving SegmentPartitionConfig from core to common now requires adding the following explicitly.\nimport com.linkedin.pinot.common.config.SegmentPartitionConfig\nThat is the change in this file.\n. For offline it is not necessarily kafka partitions. I think numPartitions is fine.. The code is designed to handle different number of partitions per column. There are calls for both functions.. Can some of the information be cached across retries (eg not creating new SimpleConsumerWrapper per retry, etc). Just to confirm, each instance of this class is executed only by one thread?. You are right, by the time the code was implemented these methods ended up being unused. I have removed them.. Isn't this an error?. Use File.seperator instead of '/'.. It would be better to separate the functionality into two, so code can be reused.\n1. Identify what files need to be deleted.\n2. Given an list of files, perform deletion.. Unsure if it is a good idea to have Retention manager do this cleanup, or should it be a separate service. Can you share why you went with the former?. This tool is for existing segments for which we want to preserve the input segments name. Also refresh breaks if segment names are different.. I am open to suggestions, if you have one.. I refrain from changing member variable naming convention to make it simpler to review the code. Better to have pure clean ups without any functional change as separate PR's.. Done.. Does it make sense to batch the metric emission every k rows, instead of each row?. We should use just one of fasterxml/codehaus for Json.. This is only for MV columns. Even if we had an MV column with 1k values (that is already too large), we will use 4k bytes for memory. So I am not convinced this can cause an issue.. Why not use new JSONObject(OBJECT_MAPPER.writeValueAsString(this))?. License header missing?. Let's have unit tests for these api's.. Does this need to be synchronized as well?. Would this be better as a sub class as opposed to inner class?. Format the code, seems 'else' is in new line.. Should we allow Long to Float conversion?. I understand this is temporary. But just for my understanding, is there any code that actually needs these values in the 'no-dictionary' flow?. Better to use Byte.size instead of 8. Also, seems these sizes are already available in V1Constants.Numbers.. Do we support SHORT in schema?. +1 for adding unit tests. Are there tests that cover the query execution path as well?. Yes, seems IDE was not smart enough to auto generate Map, and I didn't pay attention.. Fixed.. Same as above, fixed.. Why not use String.split?. Isn't the delimiter defined somewhere in the RangePredicate class? If not it belongs there.. Protect with if (operator == FilterOperator.IN). This is inefficient. We don't need to get all values upfront. That way we can have early bailout.. Can we use more appropriate names than columnValue and columnValue1?. This seems like a copy paste from testPruner. We should avoid having duplicate code.. Use diamond operator.. I am a bit uncomfortable with having to create these string garbages per query per segment. For a recent high throughput case, I found this to be creating a lot of garbage, and I had modified the pruner to take an already created filterQueryTree as opposed to creating it over and over again per segment. I fear this change will cause the same issue.. I feel it is better to just remove this field, because the call to get JSON schema is not on any critical paths (eg query execution, segment generation).. There are more than necessary 'if' statements here. And it will complicate the code as more predicates are added. Better to have just one switch-case so that there's no more than one branching per predicate.. I don't see how this change can improve latency from 5seconds down to 80ms. Without this change, the only cost to pay is for query planning (which is a tiny fraction of query execution time), where planner should have bailed out determining that the predicate cannot be satisfied at all. Pruner only helps with throughput by avoiding the scheduling of threads for planning. Also, if the the planner did not bail out early, still 5 seconds seems super high, in which case we should understand where the time is being spent and fix that as well.. What happens when we have more predicates? We wouldn't want to copy-paste-slightly-modify for which of those predicates, right? We should refactor the code so that common parts can be reused, and only test specific code is written within the individual test.. We should avoid creating a JSONObject from strings equivalent of individual fields. It would be better if we can directly use object mapper to generate json object from the TableConfig object. Not a blocker for this PR, because that is likely a bigger change.. Seems like this class is build a JSON object of the table config. Why not directly build the actual TableConfig object?. This can be hidden inside ControllerRequestURLBuilder.. This is auto generated code by IDE. I think it is more stricter than instanceof because it does not allow to compare sub class with super class (and vice-versa).. That's right. It was auto-generated code, fixed to remove the unnecessary null check.. Fixed. Fixed. That will allow for super and sub classes to be compared, and we don't want that.. Done. Fixed. Removed\n. Removed null check.. Fixed. Fixed. Correct, removed the null check.. Done. Done. That will duplicate a lot of code. Let me think about how to address that (in a separate PR).. The idea was to preserve the original exception type, so will keep it this way.. Based on @mcvsubbu 's comments, I decided to swallow the exception and drop partition metadata, but continue with the rest of the flow.. Logged segment name. Also good point about dropping just the partition info instead of throwing exception, have made that change as well.\nAdded another test for JSON ser/de of SegmentPartitionMetadata.. We are using an on-heap map? Is every new entry going to go through this map? If so, then the total garbage will remain the same?. How does the caller estimate cardinality?. Should these magic numbers come via config, so that benchmarking with different values does not require rebuilding the code?. How is the off heap memory for these buffers de-allocated?. I am probably reading this incorrectly, but seems that the number of iBuf's ~= cardinality? If so, is this a linear search?. Remove redundant 'this'.. Remove redundant 'this'.. Nit: s/class1/clazz?. Does this need to be created via reflection? Can we not use switch/case on name and call the appropriate constructor?. use static final instead hardcoded string 'REPLICAS'.. Use static final instead of hardcoded string here (and other places).. Not required for this PR, but we should clean up the force options if they are no longer needed, to avoid such multi-level 'if' statements.. Use System.getProperty(\u201cjava.io.tmpdir\u201d) and File.Separator.. May be MinonTaskPhase is a better name for this class?. This probably needs to be addressed before the change is deployed in production.. Would be nice to log what kind of routing table builder we initialized, and why.. Can getReplicaGroupStrategyConfig() return null? If so, would be nice to protect against that.. Would be nice to document the algorithm.. would be nice to factor out the steps, so the high level method becomes simple.. Does this not need an else (eg log, or emit a metric)?. May be use a static final so we know what 0 means?. Check if the optimization made in https://github.com/linkedin/pinot/pull/1487 is required here as well.. We should add unit test for this, if not already added.. This does not work for refresh use cases, because when segments are refreshed external view is not updated. We need to put a check somewhere so that this feature is not enabled for refresh usecases.. What happens if segment zk metadata does not have partition info for a subset of segments? Should we drop those segments, or be smart enough to still pick the right servers for them?. Can (pointer * totalSizeInBytes) overflow?. I understand this is not part of this PR, but do we need to flag an error if table name is not found?. Incorrect documentation? The abstract base class is probably for both realtime as well as offline, right?. Not required for this PR, but what pruners to wire-in should come in via config, as opposed to being hard coded here.. Should we log a metric for this? Also, should this be sent back as partial response?. Please add comments to explain the difference between table level vs partition level replica groups\n. Seems this map is is to reduce lookups to ZK? If so, please document the same. . Please check if this need to be a 'synchronized' method?. Unrelated to this PR, but seems like SegmentId is just a wrapper around string. We should evaluate if it can be eliminated completely, to avoid unnecessary object creation.. s/instanceSize/numInstances. Thanks for catching, this is the by-product of IDE refactoring.. Is 5 better than 3? Also, use constants with name reflecting the value.. Make this a constant, so if you change the number of instances, it gets reflected here as well.. Are we sure that 2s is long enough for the test to pass in a setup like Travis, where CPU resource is limited and out of our control?. Why do we need 10 instances for testing?. Comment would be nice on the math.. Lets try to avoid the magic math that is a function of some other constant somewhere else (10 in this case). Reason being, if we want to change the original constant (10 in this case), we need to re-do the math here.. _trimSize is set to a min of 5000 in the current code. Nonetheless, I have added a null check against topValue (will happen when the queue is empty).. I feel >= is more resilient to future changes.. Yeah, same response :-). Addressed. Addressed. No, I meant that since 'pointer' and 'totalSizeInBytes' are both integer, their multiplication can cause integer overflow unless one of them is upcasted to long. Filed PR: https://github.com/linkedin/pinot/pull/1664 for the same.\n. Updated with change.. Yes, fixed.. It was no longer testing 'unknown' fields, and it was the only test specifically for indexing config, so I named it 'test'. Have renamed it to 'testSerDe' as it is testing ser/de of indexing config.. Not related to your change, but seems we have multiple versions of json being imported, possible to clean it up?. Why unused?. Thanks for catching, updated test to catch it.. Done. It was needed in intermediate state of the code, missed to undo it. Fixed.. As the comment suggests, it was written that way to enable vectorization (by avoiding conditionals within the for-loop). . Not a blocker for this PR, but we need to address the code formatting change due to IDE upgrade.. May be sorter should be an interface, with PQ based and TreeMap based as its implementations?. Is this adding additional call to extractFinalResults? If so, that call seems to be expensive for some aggregation functions (eg percentile), where there is sorting involved.\nAlso, once finalResult is comparable, why couldn't we use existing priority queues (probably I am missing something.. But the interface should remain the same. Are you saying that overhead of using interface here would be a non-ignorable impact on latency? If so, how?. Update message to indicate this is for no dictionary columns.. use File.separator instead.. Use the required attribute from args4j instead.. (now - startTimeMillis) /1000 ?. Bitwise OR?. Is this using java serialization or is writeObject overridden elsewhere? If former, may be better to avoid that.. I take it that the substring method here is a no-op if max length > query length?. Could use Utils.rethrowException() to avoid throwing a RuntimeException.. May be use javadoc?. These are not mutually exclusive, right? If so, we cannot use forbid. If args4j does not have a feature to have at least one of two (or more) as required, then go ahead and use the 'if' check you had originally.. Nit: Any way to get rid of the duplicate? Or is it IDE's limitation for not being smart enough to realize that data types changed?. Seems either the variable currentDocId is named incorrectly or the logic is incorrect. For example if _numDocs = 10, and _currentDocId = 9, it will return true. If that is desired, that means the variable name is confusing.. I think numDocs should be fetched from the reader, instead of being passed here.. Same here for numDocs, as well as any other place.. Why offset + 1?. May be log table name as well?. Could the two try catch blocks be merged together by reading the config string separately from parsing the integer?. May be add doc on what is being returned in what case? For example -1 if no config, and LLC if both HLC/LLC exist.. We don't want to catch the parse exception here?. Do tests really need to send a ServerMetrics object? Would it be better to just pass null, or have another constructor without this parameter, so that clients that do need metrics (eg test) don't need to worry about it?. The server metrics could be null for clients that don't care about it, but that means you will have null check against it. Up to you.. Should this be named something more generic as validate as opposed to preview? Also please add more documentation, as well as description on the usage/purpose of this api.. Does this class need dataManager, or can we just pass maxParallelRefreshThreads to the constructor?. Link to bug report?. What happens to the unloadByteBuffer call if one of the previous allocations failed and threw exceptions?. We should avoid multiple compilations of the expression tree. Lets explore a way to achieve that.. The original implementation had Java and Custom TimeUnits, as they were added a different times. We should have a single time converter (probably JODA based) that handles all time units.. Why is the return type Object, and not a concrete type?. s/validFormat/isValidFormat ?. Use javadoc syntax for bullets.. Having a single converter that handles all time units will avoid the if/else here.. Remove this.. Could you also add tests for conversion to different time zones?. Probably outside the scope of this PR, but would be good to cleanup requiring a Blockvalset with same value repeated 'length' times. I was thinking to add a separate api to fetch single value on ConstantBlockValSet. That requires casting to ConstantBlockValSet here, but that should be OK, since the function expects certain arguments.. The last argument (bucket?) could be optional?. There's a few options:\n1. Have different methods for different return types.\n2. Create an interface.\n3. If the caller knows the return type, you can have this return a generic type as opposed to Object.. I understand it is better to separate the two. My question is for cases where bucketing is not needed, do clients still need to pass the third argument, or can there be a default value?. Unnecessary cast on RHS.. This fails style check, ie long than 160 characters.. This could be refactored out as a utility function that returns all related columns to be checked.. Can we add time unit in the name?. Please check with @antumbde if this can be moved here or if there's a better solution.. Can the two if's be combined into one, or is there logic inside the outer 'if' that is not inside the inner 'if'? . Can NetUtil.getHostnameOrAddress() be static final?. We should remove this, since we no longer support on-heap as it is very inefficient.. We use jackson in other places, lets use that.. Could we use a static method fromJson() for this, instead of a separate constructor?. Use ObjectMapper to serialize (and de-serialize) to (from) JSON.. I know this is already committed, but a couple of suggestions:\n1. Use static final ObjectMapper so no need to new each time.\n2. I use objectMapper().writerWithDefaultPrettyPrinter() to make the json output pretty printed.. How about enableStarTreeIndex()?. So one can specify -enableStarTreeIndex without the config file. . I prefer to have 'enable' in the name because that is the primary function of this api. StarTreeIndexSpec can be null.. It seems the approach here was to not use MetadataBasedOperator, and if so, then we should not need metadata here. If the only need for that is to get totalRawDocs, may be we should just pass that?. Auto-format using IDE. Will this work with star-tree where dictionary is modified to include the ALL node? If not, then either we should not select this operator in the plan phase, or handle it here (prefer latter if it can be cleanly achieved).. Not a blocker for this PR, but seems like the number of if's are increasing. May be better to have a factory that returns the correct plan node.. For the 'fit' guys, we should also check the query result.. May be add a comment on why num docs is expected to be zero.. Why does this need a separate cluster integration test? Could we not leverage the existing integration tests? Adding new integration tests that are setting up the cluster increase overall testing time.. Same here. But if these two cannot be merged into existing one, may be they could be merged with each other.. Explicit remove and add would be a safer/cleaner approach.. Avro Utf8 and String map to Pinot String. Please ensure both cases are covered.. Can we reuse a static final ObjectMapper?. Would this class be useful outside the scope of its parent in future? If so, may be better to have it as a separate class.. Would there be a usecase that would like to read a subset of columns from existing pinot segment? If so, it might be more efficient to pass in the subset schema here.. We don't need createContext() anymore? I thought it was used to cache already read-in values to make iteration faster. Does that no longer apply?. I understanding this is outside the scope of this PR, but we should clean this code at some point. Just because a dimension has \"count\" or \"met\" substring in the name it treating it as metric is incorrect. This will \"country\" a metric.. How about Utf8 (as string)?. Yes, it does not work otherwise, because the decompressed buffer in context is not updated, the subsequent reads don't get the data. I had thought about of an option to overwrite the chunkBuffer in the context, but that would require making it mutable, and didn't like it. If a client sets chunkBuffer in the context, I couldn't convince myself to over-write it under the hood.. Updated header layout in FixedByteChunkSingleValueWriter to explicitly mention which fields are in version 2 onwards.. Done. Done. Done. Done. Yes, my suggestion was to factor out the nested inlined 'ifs', and perhaps use factory for the same. This implementation does not adhere to factory pattern per say. The 'isFitFor' functions don't necessarily belong here, they could be either in the original class, or some utility class. Factory can just take the type of object to return.. I think other plan nodes call the showTree of their child, but for metadata and dictionary based, they are the leaf nodes, so there's no subsequent call.. Curious as to why we didn't reuse existing integration test?. Yes, I had thought about that. And convinced myself to not do so because no-op would have required to copy the data, which the initial implementation did not have (line 150). But that led to a bug and I ended up copying the data, so now I can go back to using no-op compressor. Will update.. Had thought about that too, it was leading to either lot of duplicate code, or adding additional level of class hierarchy. And I wasn't really strongly feeling about necessity of either.. Agree with that. Unfortunately, It is used in production already, and would require a few TB of data to be converted.. It was needed in intermediate state of the code, but ended up being unused. However, IDE did not show it as unused, so missed to clean it up. Will clean.. Created issue #2223 to track this.. Should the clear be at the beginning of test? That would avoid any new tests that forgets to clear it at the end?. Curious where the callers for these are?. Minor nit: I prefer having the 'if' around reading the value from dictionary, and having resultHolder.setValue() outside of the 'if'.. Actually, seeing the pattern, you may want to factor this out as a reusable function.. It might be cleaner (though slightly less efficient) to have the dataType embedded inside aggregationFunctionContexts.. Would it be inefficient to just have one the generic version of this api?. Should we have a comparable result holder?\nAlso, for group-by we need to measure any performance issues due to moving from primitive double[] to Object[].. Why do we need both joda and java TimeZones?. Does  RandomStringUtils.random return UTF-8? If not, we may want to use a library that returns UTF-8 strings.. Yes, the most common use case appears to be String, as string values are passed from predicate evaluators.. Created a new base class OnHeapDictionary, as previous super had its own implementations of these methods.. May be better name is UTF8 or UTF8_ChARSET. s/DINING_RAW_TABLE_NAME/[OFFLINE|RAW]_DINING_TABLE_NAME. Does this require implementations to convert their storage (eg List/Set) into a new String[], creating unnecessary garbage? If so, let's see if we can cleanup the interface to appropriate return type.. Yes, completely agree. This is a not part of new PR but existing code depends on RealtimeIndexOffHeapMemoryManager, which is incorrect IMO. Filed issue https://github.com/linkedin/pinot/issues/2465.. This should be a very small overhead in comparison of all the other operations happening during indexing. I ran a benchmark with old and new code to set 1M Long values, and both perform about the same (Total of ~50ms for 1M values). Also verified using JMH that the two version of the code have similar performance.. Yes, good point. Will replace _capacity with _capacityInRows, so we can first check the row number against that, and then do the more expensive computation if required.. Done.. (a) and (b) can be converted to bullet points in javadoc.. Style check (member names start with ).. Style check (indentation is 2 white spaces).. Seems like each time there's a new config added in segment generation, we need to duplicate the same here? If so, is there a way to avoid that?. What happens when MAX_FILE_SIZE is not sufficient?. Yes, this supports adding row far into the future, without much penalty.. Moving to pinot/core/util.. Looking at the code it does not seem better or worse. But this class already has some usage already within Pinot. We can do a comparison outside of this PR.. Once per insert, zero times during query processing.. Yes, I thought about that too. The current off-heap dictionary based implementation does not return the id, so it will have to do an explict get internally to return the id. Nonetheless, I think it is a good idea to change the interface to return the id. Updated PR.. It was added in the description of the PR.. This is just extending BaseOffHeapMutableDictionary to re-use a lot of the off-heap functionality. Implementing the hashMap part of that requires taking the off-heap HashMap out of dictionary, which is a major change. Created issue https://github.com/linkedin/pinot/issues/2502 to address it in future.. Curious why other reader/writers (eg FixedByteSingleColumnSingleValueReaderWriter) don't need to do that? . Actually, _dataBuffers is not accessed by readers at all. Only the writer thread adds to it and the close() method accesses it to close all the buffers. So I don't think there's a concurrency issue there.\nWhat you described does apply to _readers list though, and I fixed that one.. Can the result change between invocations? If not, why not use static final to avoid new object creation?. If a new config is added to segment generation logic, it has to be duplicated here as well. This is more because we don't have a centralized code for doing the same. It can be addressed outside of this PR.. We have had some tough luck with such version increases which have pulled in conflicting transitive dependencies. Making a note here, so we can watch this one.. Do consuming segments count towards realtime segment size?. That's correct, changed.. Renamed, will revisit the atomicLong to volatile later.. Yes, done.. Renamed.. could we use private static final?. Can we log a message here, so user knows we are treating these columns as dimensions?. Nit: s/getDictIds/getDictionaryIds. Can we factor this out?. I am not sure if it is thread safe.. Seems like you have to pass this argument because computation and emitting of metric is happening in different methods. Why can't deserializeServerResponse do the computation and directly emit the metric?. Can we rename the metric to be totalServerResponseSize or something more explicit like this? UPPER_BOUND is not so intuitive to understand.. Can we have a more intuitive name than 'reuse'?. Seems like this does not need to be tied to transform module? If so, can we take it out and rename it something like DataTransformer?. Why does transform function need to be inside of fieldSpec? Does that mean we can only apply one transform on a column?. This was my understanding too, but as per @Jackie-Jiang the latest code is thread safe.. Is it guaranteed that order of individual argument types will be the same as what is expected by FunctionRegistry.resolve? Or the order does not matter?. Remove redundant this (here, and at other places as well).. I was unsure why even one transform function needs to be inside fieldSpec. But now that you mentioned derived specs, I see the need.. Trying to understand, why do we need a separate operator for this? Seems too much work for a special case. Shouldn't the existing operators take care of this case?. Also, name could be more generic like EmptySelectionOperator?. Is there a contract on the ordering of records when sort order is not specified? For example, in order of segment list specified in the constructor? Would be nice to document the expected behavior.. Would be nice to include java doc for all public constructors/methods, including description of parameters.. What's the pro's/cons of having one implementation support both sorted as well as unsorted readers as opposed to separate implementations?. Is there a 'break' statement missing here?. Is star-tree supported? If not, please list here. Also, all unsupported features should be caught and bailed out upfront.. skipping retention, instead of skip?. No else required for these if's? Also, may be combine into one if?. May be log the build time as well as lock acquire wait time in the same log?. May be this can just call releaseSegment? That way, in future if the logic becomes more complicated, then there's only one place we need to change.. Is there a unit test that covers the case where the thread acquiring the segment throws an exception, and the unlocking still happens? If not, would be useful to add it.. Why does this need to be public? Who gets the server metrics from this class, and should they?. The name SegmentDataManager seems too heavy for the functionality this class provides. Seems just like a ref counted wrapper around the segment? A name like SegmentRefCounter would be more appropriate?. For symmetry with other api's in this class. This code is not in any critical path, and only used for reading pinot segment format (for conversions etc), so will keep it the same way.. The returned byte[] is of exact size that fits the data.. Yes we do, the context holds the uncompressed chunk buffer, so we avoid reading and uncompressing of chunk buffers.. Yes there is, see line 93.. Is there a test to ensure this? I fear the comment by itself might not suffice.. We should clean this up as well at some point, ie not store as string. Although, with dictionary encoding it does not cost much, but still something to clean up.. How about naming it as DataType or ColumnDataType, to be more specific?. Test would be better to ensure.. Not a blocker for the PR, but would be good to measure and document the overhead of resize.. Seems like JSON serde should work with this change, but would be good to ensure via a unit test.. Is this for column with fixed value? If not, when would this happen?. I think PQL compiler is now threadsafe, which is why the @ThreadSafe annotation was added at line 55.. If the arrays are always of size 1, then why do we need array?. Only import change in the test? Would be good to add so unit tests for the new code.. Even though there are no current usages of the existing one, decided to create new aggregation functions (eg percentileTDigest95). Using object implies creation of instance of Bytes. This PR also implements DataTable ser/de for BYTES type (which is essentially byte[]).. For Selection we decided to convert byte[] to Hex String equivalent. This is the most appropriate place to do so.. Ok Mr. OCD, will do :-).. Yeah, I used Bytes to be compatible with BYTES type in the schema. But will change to ByteArray.. Will change.. Ok, will do.. Yep. I punted on that consciously, as unsure if we want to do that. If need be, can be done in following PR's. . Good catch, thanks!. That requires creation of ByteArray object when we could have just used byte[] primitive. This is just to avoid that additional wrapper object creation.. Fixed.. That's super OCD.. Alright.. Done.. Done.. Done. Ok.. Thanks for catching.. Actually that is not true. Some parts of the code (mostly segment generation flow) assume the object to be Comparable, which is were this wrapper class is used. In all other places we use native byte[] to avoid additional wrapper object creation.. Done.. Yes, seems like for mutable dictionaries, we read all values of dictionary for each range query. Reverting back the change for primitive data types, keeping it for String.. (OCD) Proper capitalization. That requires this to be a derivedMetric, something we want to get rid of soon.. It is protected, and being used only in FieldSpec. This is not reading everything, so you would miss things like RAW index etc. This requires looking at segment metadata to derive all such info.. Style check.. It is GroupByColumns, not AggregationColumns, right?. No, If you look at the stats collector code (eg addressSorted in the base class), it expects comparable, hence the ByteArray wrapper.. I guess our assumption (which seems fair to me) is that we won't have collision at millisecond level?. Curious, why does this need to be volatile?. Yes, this is a bug fix. The bug would have only impacted no-dictionary column with variable width and pass-through compression (we don't have any live use cases for that).. Yes, the testcase modified in the PR will fail if we remove the fix.. Ideally, we should only have one config, but seems like  the RawIndexCompressionTypeMap was introduced a while back. And we cannot simply merge the two due to backward compatibility. So for now, I made the code relaxed enough to handle both.. Could this potentially cause segment generation failure because the size of index could become > 2GB? Should we ceil the value to be a much smaller one? . What if partition 0 has an issue? Should we explicitly pick a working partition, or a random partition to minimize probability of reading a partition with issue?. Would taking average of all partitions avoid the skewed weight issue?. Better to use ListIterator since you are removing elements while iterating?. Any benefit of taking start index away?. Would be nice to add comment in the new code on how byte ordering is determined.. This is using native order, and I see FixedByteSingleValueMultiColWriter is using BIG_ENDIAN. Lets document exactly how the byte ordering is handled (in all places in the code where applicable).. If the assumption is that both the buffers should be of same length, please document it.. Seems like stateful toString(), which is incorrect. Please fix.. Seems we changed _docSize name to _docSizeLong, and then casting it here to int. I am sure the logic is correct, but makes this part of the code a bit confusing.. Why is enabling parallel push protection a param for POST? What happens if multiple posts are called concurrently and some of them enable this param and others disable it? Would it make more sense to have that as a controller/table config instead of per POST request?.  I understand we should avoid extra ZK writes, but IMO this parameter does not belong in the POST api, as the callers of this api do not have the global picture, and so concurrent calls may pass conflicting values for this parameter. Since this already exists in other apis', please open an issue to clean this up in future PR.. Could we factor out the if and else sub blocks into separate functions?. Seems like this method is called for both data and metadata push flows. I think the reason is to protect concurrency, if you could add comments explaining the reasoning behind it, that would be great.. Please make sure this is acceptable license for apache.. Java doc please.. If these are config keys add _KEY to the static final name.. Shouldn't we cleanup the file once the test is done?. Can we factor this out into a function? And also document the logic behind this heuristic, and the priority computation?. Please format the changes before committing (referring to: ! metadata). How did we decide upon the value for DEFAULT_MAX_CARDINALITY?. Use static final variable instead of -1, for readability. Also, unclear from the context why -1 is being passed for cardinality instead of the actual value?. We should think about removing this limitation. For example percentile(column, 95).. This seems like it should be enum.. Could we refactor the validation part out into a separate method?. Seems like incorrect/obsolete documentation.. Lets also refactor all the cases out, so the the top level state machine becomes simple/readable.. Should the key be encrypted?. Is it guaranteed that centriods() iterator() and next() return a non-null object? If not, lets add null check.. Why do we need this constructor?. Given that there's an init that takes the configuration, why do we have a constructor that takes configuration as well? What's the contract of the interface, initializations in constructor or in init?\nAlso, if this is a generic fetcher, why does it need a uri in the constructor?. Should this class create and hold the FS upfront? Or should it be flexible enough that it can use the appropriate FS per invocation? If latter, we would need to avoid creating FS object per invocation of fetch.. What does the key \"file\" stand for? Could you use a private static final with meaningful name instead?. Modifying properties within this function seems incorrect. If this is a default property that is expected to be present, lets add it during initialization and not here.. We should not pass a configuration object here, instead extract out the exact information you need from configuration and pass those (eg List of strings names, or a new config class specific to PinotFSFactory).. The change seems functionally equivalent, why did we need to repalce URISyntaxException to Exception?. We could probably just return _segmentFetcherMap.get(protocol).. Could we add unit test for this class?. Should we have overwrite as parameter passed? So we don't always overwrite.. Same here.. Factory should be initialized at controller start, right?. Duplicate comment (see line 137).. Use Utils.rethrow() to preserve the original exception. . Same here.. What's the behavior for forceMkdir if the directory already exists? We should not delete existing directory.. Also, noticed that most other api's return a boolean but this one is void, any reason for that? If not, lets try to be consistent.. Does this test leave the temp directories around after it is done? It should clean them. And that requires a new api in the interface (rmdir).. Oh I see, delete is for file as well as directory I guess.. Always returning true is not useful.. Use static final like DEFAULT_SCHEME instead of \"file\".. Is controllerConf guaranteed to return non-null dataDir?. file:// could be platform dependent?. Let's use private static finals in all the places to make it more readable. (I understand some of them are pre-existing, but good to cleanup).. Could you please open an issue/ticket to track this todo?. This seems like a change that could impact existing code (ie we are creating a new file from URI). Are there tests covering this api? If not, please add to ensure that the change does not break existing functionality.. Should the apis return Boolean and/or throw exception?. This should be an interface not abstract class.. Create() in a factory should take an argument on what concrete implementation to instantiate, otherwise it is not a factory pattern.. Why does segment metadata upload imply that the segment is in its final location? These two seem unrelated, and should not be tied together. If that is because controller moving the segment requires segment to download, then we should revisit why that is required and try to fix that, instead of building on top of that.. This is moved to transform layer in AvroUtils.. Should these factories (FS and Crypter) be initialized in the Controller/Server starters? Why is it being initialized here?. Why do we need this external dependency? Is this PR adding support for new upload type that was not supported before? Or do we already have dependency on this in other modules but not in pinot-common? If latter, then the question is why are the crypters implemented inside of pinot-common, as opposed to pinot-core?. Since this does not do any encryption/decryption, should we name it something like PassThrough or NoOp, or something suggesting that no encryption/decryption is happening?. Please ensure of code style check (note the space between '!' and '(').. Is this a todo? Or will we never need this feature?. This does not look like a crypter, as there's no encryption/decryption going on at all. This is just downloading a multi-part. Or am I missing something? The code that untar's and unzip's the file would be a crypter.. Then you should not call it protocol, it is confusing.. Does this TAR include metadata as well as payload? If so, please separate them out as separate upload types.. Why can't it be null? Also, use static finals with descriptive names for readability.. Factor this section into smaller helper routines (eg fetchSegment, decrypt, getMetadata, validate, etc).. IIRC, the purpose of the design was to avoid such 'if's, as they quickly grow into unmanageable code. Sounds like this requires an offline discussion to understand why we can't achieve that.. +1 on smaller helper methods for more code readability.. Why does this need to be an Object? That seems not clean.. Could we please refactor these into smaller helper methods?. Seems this is not untarring and unzipping.\nIMO, for multipart case, the top level switch statement should just download the multipart and generate a uri out of it. The segment fetcher can be a no-op in this case, and the multipart crypter can do the untar/unzip.\nAs discussed offline, this also helps eliminate other issues in the code such as PinotCrypter taking an Object type in encrypt/decrypt, instead of URI.. Seems like this may no longer be needed?. Can we use static final like TMP_FILE_NAME_PREFIX instead of \"tmp-\". We should have 3 cases here:\n1. URI\n2. Metadata \n3. Segment\nAlso, TAR is not a readable name, could be use something like METADATA and SEGMENT?. Let's ensure that there are tests (existing or new) that protect against any accidental bug due to this refactor.. I think we can get rid of this 'if' by introducing another parameter. Basically, ZKOperator will need the following:\n1. Metadata\n2. sourceUri: URI of the source\n3. downloadURI: URI where servers download segments from\n4. storageURI: URI where segments are stored.\n3 and 4 can be same in all cases except for segment upload (with data).\n. Do we enforce and ensure that all created tenants have instances? If not, then is this really an error situation?. Is this api expected to return offline and realtime tables separately?. Is the section below a copy from elsewhere? If so, convert it into a helper method and reuse.. Where's the testcase where we actually get a valid list of tables back? All the tests seem to \"Expect no tables\".. Why static import?. Lets put it here as well, to make this test complete.. Could you clarify why httpHeaders need to be null?. We should take the FsPermission as an argument, which either comes from a config or defaults to permission of the parent of destination (where the temp is moved to).. Lets log the _defaultPermissionsMask.. What does FsPermission.getDefault() return? Is it guaranteed to be 777? If not, this will not work.\nAlso, lets log the permissions being set.. Lets log the full path being created.. Does the integration test exercise the flow where the mask value is set in _properties from outside?. Creation of directory with specified can be extracted out as a method that can be unit tested that compares the umask value specified in the test with the permissions created for the directory.. As per hadoop doc: better to use getDirDefault() instead.\npublic static FsPermission getDefault()\nGet the default permission for directory and symlink. In previous versions, this default permission was also used to create files, so files created end up with ugo+x permission. See HADOOP-9155 for detail. Two new methods are added to solve this, please use getDirDefault() for directory, and use getFileDefault() for file. This method is kept for compatibility.. Remove this debugging code.. This seems quite inefficient. There's a new URI call and ArrayList <-> Array conversion at each level of recursion. These can be completely avoided by writing a helper method that works purely on DirectoryEntry (instead of URI's) and ArrayList (instead of converting from/to String[]).. Does it make sense to separate out the logic to apply table config from the CLI? Doing so allows the former to be reusable (have found that to be useful in the past).. How is storageDir different from dataDir?. Does this really qualify as a warning?. Save the empty string in a static final, so we don't new a garbage with each call.. Is this a warning? If the local temp dir is not defined, we want to default to dataDir, which is more of an info IMO.. As a side note, I see that mkdir() will forcefully remove the directory if it already exists. This seems quite dangerous to me. For example, if there's a bug in pinotFs.exists(), we will end up deleting the data dir. This might be acceptable behavior for a file, but dangerous for deleting the entire directory. Let's open an issue to visit this outside of this PR.. Do we need a '/' between tempdir and upload path?. I debated about it, not sure if we want to pay the price of copy done by DefaultPinotCrypter.. The currentSegmentLocation passed into moveSegmentToPermanentDirectory is the encrypted segment now (as part of this PR).. How does that work today, ie before this PR?. Yes, this is a bug fix, done.. I am probably missing something, segment file will either be a tar.gz or tar.gz + encrypted. Is there another format that is currently supported?. Using AggregationFunction suffix makes it a bit confusing with the aggregation functions used during query execution time. Since this is completely different from that, may be using a different suffix like 'Aggregator' might help avoid that confusion.. Discussed offline, this is not an issue as files are always in tar.gz format (and optionally encrypted on top of it).. What not implement Serializable? Oh wait, it seems Serializable is just a marker interface.. May be the logging should be outside and not within the library.. How do we guarantee that the bytes are deserializable to the expected class?. For the latter, we probably should think about having a query sanitizer to block bad queries reaching this deep in the execution stack. But that I guess is outside the scope of this PR.. Please rename the method and variable names to make it more readable. For example s/apply/merge, s/record/mergedRecord, etc. Same here.. May be factor out child node and star node creations into separate methods, to make the top level method concise?. Do we really need OnHeap builder? As it will likely have a huge memory penalty.. With this, do we even need the DefaultCrypter?. Would like to reduce the number of 'if', if not fully eliminate them.. Update comment to reflect why encrypted file is named differently.. May be it should be named NoOpCrypter then?. I think the intent here is for storageUri to be something purely under the control of controller, as the currentSegmentUri could be a path that controller might not have any control over (eg write permissions, segments of same table could in different locations, etc). Is this failing because datadir is not set? Or are you trying to avoid additional copy? One option could be an optimization in the code that infers that the current segment is already in the datadir and hence no move required.. Why does this need to be a URI?\n. Does broker request have a requestId in it? If not, it might be better to stick in there, and just print the requestId.. I was proposing to find a way to have requestId available there. Also, I am unsure how this solves the problem when it is not obvious from the query pattern what the offending query is. Moreover, for long queries, it may be hard to match the brokerRequest to its corresponding PQL.. Why does this method need to subset? Why doesn't the caller subset and pass the right config?. Would be great if you can add a sample config variable with value.. That cannot be removed, because it is used to compute the total size for mmaping in this constructor.. Log a message?. Unsure which is better System.out.println vs Logger?. May want to use static private final instead of \".conf\"?. The name seems to suggest data directory's content would be cleaned/removed. Why not just use existing utility functions such as trim()/strip() to do the same, instead of writing a new one?. Also checkout FilenameUtils.normalize() that seems to also remove redundant  '/' (still keeps trailing '/' though).. Could you elaborate how the rename() api is different from copy() && delete(). The query tree is already being generated at few places in the read path. We should think about solving it in a way that the query is parsed and query tree generated exactly once per query.. These seem like expensive operations being added in the query path. At the very least, this feature should be off by default.. Will each broker cache schema for all tables in the cluster, or just the tables it serves? If former, we should change it to the latter.. Does it make sense to merge the concepts of segment selector and pruner?. Should selector be passed into this api, or should it belong inside of the builder(s)?. This does not adhere to factory pattern, may be better to name it as SegmentSelectorProvider?. Could we programatically generate these trees, to improve coverage?. This may not really be needed. I believe JSON library we use can handle the '_' prefix.. If this does not represent num_indices, then could we name it appropriately?. This can be really expensive for low latency/high throughput use cases. You can optimize it by computing the length inside of SingleValueSet.getStringValues, since it is looping over the strings anyways.. Same here.. Same here.. Can we optimize this linear algorithm?. A better approximation of length for variable length data types would be avg length (right now it seems to use max length). This can be precomputed during segment generation and stored in the metadata.. Could we investigate if these can be stored as numeric values within the metadata, so parsing is not required?. Can this be an enum instead of a String?. What's the issue with extending DataType to capture the object type? . The JSON library we use should already have a JSONObject? If so, we could use a facade?. Would using generics help to support typed maps?. What's the difference between Text and String?. This limitation should apply to multi-valued metrics as well, right?. Well the aggregation code also assumes the metric is single valued, so it will fail, if I am not wrong. For example, the line below is casting the value to Integer, and would fail if the value was an int[].\nindexReaderWriter.setInt(docId, (Integer) value + indexReaderWriter.getInt(docId));. No, this TODO is to make the actual support for MV dimensions in RT aggregation of metrics. This PR is just disabling it in presence of MV columns.. ",
    "goverdata": "This issue had resolved  in commit c875cc0\n. ",
    "Jackie-Jiang": "Closed due to no reply and cannot reproduce.\n. Hi Xiang,\nSorry I didn't notice your PR is from travis branch.\nI merged your commit from your master branch, and I found out that the travis branch is very similar to master branch. Is there any different between this two branch? If no, then we can close this PR; if yes, we will figure out how to merge your travis branch instead.\nThanks,\nXiaotian\n. Hi, I checked at the exception stacktrace, and it seems that the exception was thrown out from ObjectMapper when trying to read value from schema json file. I tried it locally and it reads the value correctly. Can you please first retry with the latest version pinot? If that still does not work, can you provide more details on what command you run?\n. Do you still have this issue? I tried loading the schema you provide, and run the test on both linux and mac, but still cannot reproduce the problem.\n. @caozhenhuamail Thanks for this message, this can narrow down the debugging range a lot. Working on that now.\n. Find the root cause of this issue. In the FieldSpec setter method setDefaultNullValue(Object value), when value is not null, it will call getDataType(), which will be set by another setter method. For TimeFieldSpec, it depends on the outgoingGranularitySpec data type, and will throw a NPE if outgoingGranularitySpec is not set yet. The correctness of FieldSpec serialize and deserialize highly depends on the order of execution of the setter methods. Will find a way to fix it shortly.\n. Not yet. Will leave a comment when the bug fix shipped.\n. @caozhenhuamail The fix has been merged, can you try again? Thanks.\n. Duplicate issue with #123 , I will close this one and keep all discussion in #123 \n. LGTM.\n. Yes, both Travis and local tests passed. (local tests makes more sense because the new aggregation is not enabled on Travis)\n. LGTM.\n. Should I take this change and work on all the issues, or add unit tests after you fix the comments and check in this PR?\n. LGTM.\n. LGTM.\n. I have a little concern about the situation where all the servers with a particular segment are down, we will not assign this segment to other servers, and lose the capability to make query on this segment?\n. Hi JF,\nSeems some integration tests failed on Travis, can you have a look?\nThanks,\nJackie\nOn Tue, Jun 14, 2016 at 1:43 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nI added a test that fails under the old incorrect behavior and succeeds\nwith the new behavior.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/191#issuecomment-226010015, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AQvgX1sUvQ3OXodvImtqMFZWb-llfSL-ks5qLxJtgaJpZM4I0dKy\n.\n. Check this build: https://travis-ci.org/linkedin/pinot/builds/137627611\n\nI don't think the integration test failure is caused by the missing header.\nOn Tue, Jun 14, 2016 at 3:03 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nIt was missing the Apache header, venky fixed it in #197\nhttps://github.com/linkedin/pinot/pull/197.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/191#issuecomment-226030043, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AQvgXzz1aahHYqanufGRdRqPbvLqYpzUks5qLyU3gaJpZM4I0dKy\n.\n. LGTM. Can we keep the ERROR level log? That will help us keep some useful debug messages.\n. My concern is about the random tests. Is there a way to log the random seed? Use logger.fatal()?\n. I will merge it once it passed the Travis run. But the other PRs might fail\nbecause of this test.\nWe should enforce people to first pass Travis run, then merge the PR.\n\nOn Tue, Jun 14, 2016 at 5:45 PM, Ravi Aringunram notifications@github.com\nwrote:\n\nLGTM\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/202#issuecomment-226058644, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AQvgX1UKGOQNJ84dZiB4vdOxvNyJA4zjks5qL0tEgaJpZM4I14sq\n.\n. Sorry for the missing header. I thought all \".yml\" files do not need the license header, but seems only \".travis.yml\" doesn't, maybe because Apache is using Travis as the platform for ci? :P\n. LGTM.\n. LGTM\n. LGTM besides the comments.\n. Locally, it can pass all the tests, but Travis will fail (OOM probably). I will tune some limit to reduce the size of the query and test.\n. We also need to add it to getDefaultNullValue()\n. One problem is that when people do not set a default null value for boolean but try to get one, it will throw exception. I think false might be a good \"default\" default null value for boolean?\n. Make sense, LGTM.\n. LGTM.\n. LGTM.\n. LGTM.\n. LGTM.\n. LGTM.\n. LGTM.\n. LGTM.\n. LGTM.\n. LGTM.\n. In my next PR I will add support for loading Schema using String or InputStream in Schema class and avoid the problem caused by different librarys.\n. If no logic change, then LGTM. Please remember to resolve the conflicts.\n. LGTM.\n. Addressed the comments (changed back isNumber() and isInteger() behavior, remove Schema.toSchemaString(schema) and use schema.getJSONSchema() instead).\n. All comments addressed.\n. Changed config name to enableDefaultColumns; Removed extra parameter from SegmentPreProcessor; Added unit test.\n. @raviarin I think \"enableDefaultValueForColumns\" is a little bit misleading because people will think it is  to enable default value for existing columns. Also, it is a little bit too long (think of a config string: \"pinot.server.instance.enable.default.value.for.columns\"). I discussed with Mayank and still cannot get a perfect name. So I plan to just use \"enableDefaultColumns\" since its the shortest. What do you think?\n. Addressed the comments. Moved PinotDataType to the same package with FieldExtractor.\n. Try to clean up the getStarTreeStream() in SegmentDirectory since V2 does not support it.\n. LGTM.\n. LGTM.\n. LGTM.\n. LGTM otherwise. For double comparison, please try to use Assert.assertEquals(actual, expected, delta) for readability.\n. Hmm, actually this PR is still under testing, hopefully it will work :P\n. LGTM otherwise.\n. For the reduce select duplicate code, it's in one of my PR, so we will have huge conflicts\n. LGTM.\n. I think we can postpone this change because how to handle the visibility of columns is still under discussion. We should be able to handle this more gracefully.\n. In HTTP request, do we need to explicitly release the connection? If we don't release the connection, can the connection get reused for the next request? And after some time without request, the connection automatically closed?\n. Why the output Block of TransformOperator is IntermediateResultsBlock? It should be a ProjectionBlock like Block which can be passed to Aggregation/Selection Operator for further calculation right? The getNextBlock() in TransforemOperator should be called multiple times to get a trunk of values each time (similar to ProjectionOperator), and it should be in the middle of ProjectionOperator and Aggregation/Selection Operator. How do you plan to hook the TransformOperator with other Operators?. I don't know if skipping the remaining blocks a good idea, because the results will be very inaccurate. (Maybe throw an exception is more acceptable)\n. Addressed the comments. For the clean up, will file another PR as its not that travail.\n. Do you mean the order or elements inside the multi-value? Currently Pinot does not retain order of elements inside multi-value.\n. Most of them are covered about 80%. (Before there are nearly 0 coverage :-P)\n. IMO, passing segment metadata is fine since we might need segment information to perform aggregations in different ways. If we really want a layer of abstraction, maybe AggregationMetadata is a better name?. The empty string is fixed in #928, merge that first, and remove the length check.. I added unit tests that covered most of the code. Also, I started broker with new version and server with old version, manually checked all types of queries.. For this PR, the problem is broker side does not fully compile the query, so there is no way to get the group-by column names. Server does not pass back group-by column names back to broker, broker need to attach the group-by column names itself. If you try any UDF group-by query, you will find that all UDF column names are missing in the query response.\nBesides that, you mentioned that you saw compile time in the profiler, which means compiling query in the server side might cause performance downgrade. We'd better bring this up to the whole team to make the decision.. @kishoreg @mcvsubbu @antumbde Refactored the code to make it more general and suitable to use as a tool or controller service.\nConfigurable arguments: tableNamePattern, tableSizeThreshold, cardinalityThreshold, maxNumInvertedIndex\nThe current algorithm still use DISTINCTCOUNT to get the cardinality. We can plug in other strategies later.. @mayankshriv Will address in another PR.. @kishoreg No, there will be no additional zk read because we always read table config but do not use it.... @kishoreg Not using inverted index for consuming segment might cause performance issue and high query latency.. @jfim Because the NumberFormatException is caused by bad query (e.g. select * from table where int_column = \"abc\"). We should not log warn/error for client wrong behavior. I will add a new Exception type to handle the Bad Request.. @kishoreg I think JF's change will accept '!=' as '<>', but reject invalid identifier such as '?='. @antumbde We try to recover for both offline and realtime on disk segments.. @mayankshriv In the future we might want to differentiate offline/realtime table configs, so I will keep them there for now. Also, it not a small change to remove them.. @mcvsubbu You are right, will split it into two parts.. @mayankshriv Currently went through some local manual tests. All queries work as expected, will check the metrics when deployed.. Are there perf numbers supporting this optimization?. Runtime reduced from 116s to 16s on Travis. @snleee You mean avoid creating segment?. @mcvsubbu Added. @mayankshriv The path covered by old QueriesSentinalTest are covered by the new QueriesTest sets.. @rven1 Added a unit test.. @jfim Tested locally, segments get dropped.. @mayankshriv To fix the flakiness, we have to use different settings for cluster. The expensive tests are running only in multi-nodes one, but we have to pay the extra cost for setting up.. Is PBNJ directly generate v3 format segment and push it to controller? That will cause a lot of problem because a lot of code assume that segments on controller are in v1 format.. Love the code coverage improvement :+1: . @kishoreg I'm afraid adding such huge buffer will kill the tester. We caught it in the test cluster (scan-based comparator).. @kishoreg Addressed the comments.. @mcvsubbu Addressed all the comments. The try-with-resource for auto-close is how we prevent leaks when encountered exception, which is not trivial.. @kishoreg Will add the documentation, right now still in testing phase. I replaced the query file, to test all new supported queries.. Haven't read the code, but this could potentially break for star-tree use case (max might return the aggregated number), please do check that.. @kishoreg The min/max value in the metadata are extracted from dictionary, so maybe we should first check star-tree, then check metadata. @mcvsubbu Removed the old filter class, and added the hasAccess to sql query server.. @jackjlli You need to check \"Approve\" in order to give ship it~. @snleee Caught illegal test (long with field size 10) lol. @jfim Actually I don't think that works because if we deploy server first, but broker still in old version, server cannot understand the split flavor IN CLAUSE.. @npawar Removed the bucketing for SDF. Moved all the existing tests into the new test, and add new cases for bucketing. @mayankshriv It's already covered. I cannot reproduce the issue, and we should not use the Log class from apache-commons. @fx19880617 Seems it's from reference chain: ControllerConf -> PropertiesConfiguration -> AbstractFileConfiguration -> org.apache.commons.logging.LogFactory\nCurrently we are pulling in multiple version of commons-logging, we have to exclude others and keep only one around. Will come up with a PR. Good job. But after excluding the dependencies, you need to explicitly pull the dependencies in right? Please always pick the latest version from the excluded dependencies.. Please check the failed test and fix either the test or the code. @fx19880617 I don't quite understand how is it possible to overflow a long value which is used in Thread.sleep()? Before overflowing, it will sleep forever, and you set retry times to over 54 times?. @jfim Oh my, you are correct JF. We definitely cannot reuse the policy... I'll make a fix. No bucketing in case of simple date format was intentional. Also, there are notes in BaseDataTimeTransformer.java line 30: \"NOTE: time size, time unit and output granularity does not apply to simple date format.\"\nPlease refer to the comments in #2659 . @kishoreg My initial PR has bucketing for SDF, but @npawar pointed out that we should not bucket for SDF, so I don't know if this would affect the current use case. @npawar Can you please verify that?. @kishoreg @npawar If input and output have different time zone, which one should we pick to apply the bucketing? IMO, maybe always apply bucketing on epoch time is acceptable, we just need to document that.. @npawar So you mean bucketing should always based on the output time zone right? I thinks that make sense to me.. @kishoreg @jfim recommends having a special syntax to prevent clients copying the whole IN clause to VALUE_IN UDF. We can discuss about the new syntax.. @subprotocol ZKMetadataProvider.getTableSchema() handles the situation where schema name is not the same as table name (schema name should always be the same as raw table name, but we allow that for backward-compatibility).. @subprotocol You can check the code inside ZKMetadataProvider.getTableSchema() for the actual logic. For case 3, have you already uploaded a schema named \"events\" or \"events_schema\"? It will first try to use table name \"events\", then schema name \"events_schema\" to search for the schema.. @kishoreg Good point. But that requires more changes. Will submit a separate PR for that.. @kishoreg Addressed the comments. @sunithabeeram This is a clean up PR, which makes the class easier to use. Updated the commit message for more information. @kishoreg Is this good enough? Or should I also remove the reference to properties configuration as well?. @kishoreg Yes, we should call Helix.deleteInstance() ideally. The reason I added this small tool is because when we replace hardware we don't call that method, and ZK INSTANCES dir will never be cleaned up. Before running this tool, we need to make sure all instances in IdealStates are live. I agree that this tool is a little risky to use. Will close the PR and use it just for a record.. @kishoreg Yes, this is for the broker async routing (or any new routing strategy). Will create an issue for this.. Currently, the broker code is highly tight to the connection pool fashion of routing. We need to decouple the broker with routing strategy to make it possible for us to plug-in new routing strategies. #3105 is the broker clean-up for this purpose.. #3143 is the asynchronous broker routing implementation. Use ServerQueryRequest class to save the segment independent information. #3121 pre-requisite for fixing the issue. @mcvsubbu Opened a new PR #3121 . @kishoreg For the Nonnull and Nullable annotations, it's for the clarity of the public APIs. With the annotations, when we call the methods, we know whether it expects a null value, or might return a null value, and thus prevent causing NPE.\nAlso, IntelliJ can give out warnings when it detects potential problems: https://www.jetbrains.com/help/idea/nullable-and-notnull-annotations.html. @sunithabeeram The reason why I started these changes is because my IDE has annotation check, and then the tests failed because debugOptions is nullable. Some changes are added as I look over the code. Will split into multiple PRs as Kishore suggested.. Split this PR into #3128 #3129 #3130 . Interface for new star-tree and concept of function-column pair: #2989 #3017 #3025 . Enhance AVG, MIN_MAX_RANGE, DISTINCT_COUNT_HLL, PERCENTILE_EST, PERCENTILE_TDIGEST (No support for DISTINCT_COUNT and PERCENTILE because the pre-aggregated value size is not bounded) function to work on serialized bytes, so that they can aggregate on pre-aggregated values in star-tree: #2997 #3254 . Make query executor work on new star-tree interface, and migrate existing star-tree into the new interface: #3029 . Add value aggregators (COUNT, MIN, MAX, SUM, AVG, MIN_MAX_RANGE, DISTINCT_COUNT_HLL, PERCENTILE_EST, PERCENTILE_TDIGEST): #3236. Star-Tree builder: #3237 #3269 . Star-Tree loader: #3259 . Unit tests: #3270. Integration test: #3271 . @mayankshriv Good point. Actually because byte[] can be supported in star-tree, everything becomes aggregatable. Will add method for AVG, MINMAXRANGE, DISTINCTCOUNT and PERCENTILE. @mayankshriv Moved the interface and all implementations into the ObjectSerDeUtils class. Now we have one single class to handle all types of serDes.. In ServiceStatus.java. there is a static method getServiceStatus() to return the server status (STARTING/GOOD/BAD). We can easily add an api resource to hook this up.. @mayankshriv Will add tests once the builder code gets checked in. We should have a single top level periodic task scheduler, then plug in multiple periodic tasks. This way, we can easily manage the order of all tasks, and avoid any race condition between tasks (e.g. retention manager and validation manager battling with each other). Also, we can fetch tables only once in the top level task scheduler and pass them to each individual tasks (when we implement the controller resource).. @mayankshriv Yes, unit tests and integration tests will be checked in separately.. @mayankshriv All of them extends the base test, and seems testng does not automatically include inner class test by default. @sunithabeeram I don't think we need a unit-test for config... Also, that method should be deprecated and replaced with the builder. I cannot re-produce the problem. pinot-common-shaded jar should be generated during the build instead of being downloaded from a remote repository. Can you please check your maven settings?. Apache Maven 3.0.5 (Red Hat 3.0.5-17)\nMaven home: /usr/share/maven\nJava version: 1.8.0_121, vendor: Oracle Corporation\nJava home: /export/apps/jdk/JDK-1_8_0_121/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.10.0-514.36.5.el7.x86_64\", arch: \"amd64\", family: \"unix\". Can you try mvn -Pbuild-shaded-jar -DskipTests install first, then run mvn -DskipTests install. Submit a fix to always build shaded jar for pinot-common: #3275\nThanks for reporting the issue.. ValidationManager:\n- Reduce log in ValidationManager: #3302 \n- Add config to disable segment level validation: #3313 . TableSizeReader & HttpMethodBase: #3328 . With these fixes, the daily leader controller log get reduced to 256M with the following break downs (we are actually getting 16% more requests compared to the other day based on ControllerResponseFilter logs):\n\nTotal number of lines: 1153754 (-78%)\n- ValidationManager: 5046 (-99.84%)\n- TableSizeReader: 51497 (-92%)\n- ControllerResponseFilter: 295028 (+16%)\n- HttpMethod: 18518 (-90%). I don't think protocol should be tied to the SegmentFetcher, can you please justify this?. There should be no enforcement such as only using HTTPS for HDFS. IMO, we should de-couple them.. I'm not talking about implementation details but high level abstraction. SegmentFetcher interface should not take protocol as an argument for init() method.. For the new design (especially for interface design), we should not change API because of some old dependency. This change will pollute the interface and make future development harder. We need to come up with another work around.. I think you are mixing the concept of scheme and protocol. IMO they are two different concept, and we should not pass protocol as scheme into PinotFSFactory. Decouple FS and protocol. We might fetch from HDFS using hdfs:// or https://, so we should not bind them together. @jenniferdai What do you mean? It's the same as current behavior, where local dir must use file://. The only difference is we allow address without scheme.. All \"file\" scheme will work. I don't like the idea of renaming method to getUploadSegmentV2HttpURI, which looks very confusing to me. Since we are going to move to the new approach eventually, @fx19880617 are you okay using getURI() to construct old endpoint for now?. @jenniferdai I would rather rename the old one instead, because the whole code base uses the new one.. @jenniferdai We should keep the new one as default. We can bring back the old one with name like getDeprecatedUploadSegmentHttpURI(). @fx19880617 Any thoughts?. @kishoreg Will add a flag numGroupsLimitReached into response in another PR. @kishoreg Added test into the InterSegmentAggregation test set. @mcvsubbu Good point for real-time. I'll re-structure code to keep them the same behavior.. Close and replace with #3445 . @npawar One major limitation with PlainFieldExtractor is all transforms are fixed and cannot be changed. With the abstraction of RecordTransformer, we can easily combine multiple RecordTransformers to achieve different requirement, and each RecordTransformer needs to only focus on one functionality, such as time conversion, expression evaluation, data type conversion etc. This can also make adding new transformers way easier. For converting realtime segment to offline segment, we can use a PassThrough transformer because all the transform has already been applied.. Good finding. The lock is from DecimalFormat.java line 615 synchronized(digitList). I recommend using either thread local or clone() instead of creating a format each time, as constructing DecimalFormat is quite expensive.. @sunithabeeram The clone is not a shallow copy, but a deep copy for DecimalFormat. So it won't fall into the same issue (the clone uses a separate DigitList).. @mcvsubbu Sadly we cannot because we already imported the apache one. Propose the solution #3484 and close this one. To enable either star-tree v1 or v2, all you need to do is putting the spec into IndexingConfig inside TableConfig, then we will automatically load it into the generator config.. I don't think we have support for index size larger than 2G. Only changing this cannot fix the issue. If you look at SegmentLocalFSDirectory.getNewIndexBuffer(), the size is cast to int. If you need huge index support, we need to check multiple places.. @chenboat Using SDF is always much more expensive because it's stored as String comparing to long in EPOCH format. A better approach is using EPOCH for the conversion, and then on client side, convert it to SDF if you need result in such format.. The first 2 cases are already supported in Pinot.\n1. SELECT MAX(MULT(bytesRead, 2)) FROM foo\n2. SELECT MAX(DIV(bytesRead, bytesWritten)) FROM foo\nWe have support for function: ADD, SUB, MULT, DIV in aggregation. Currently no support for selection yet (they are not that useful though because you can perform the operation on client side). Feel free to try them out.. I tried to implement it, but found the change is not trivial (don't remember the details). Selection should not be very hard to support, and does not requires architectural changes. But filter support would be hard, and the performance could be very bad because no index can be applied.. @kishoreg If all the tests pass (especially integration tests), then it should be fine. fasterxml.jackson is the newer version of codehaus.jackson, which we are using right now.. @sunithabeeram This is done by IDE automatically, which orders all imports alphabetically, removes redundant imports, and merge imports if possible.. > > @sunithabeeram This is done by IDE automatically, which orders all imports alphabetically, removes redundant imports, and merge imports if possible.\n\nCan we pull these rules into pinot-style.xml so everyone applies them? Are there other ways to better enforce formatting so we don't diverge going forward?\n\nI tried to apply the pinot-style.xml and get the same rule for imports. This can be easily done by using the IDE optimize imports feature before submitting any changes. There is no way to enforce formatting though.. > We should use the maven check-style plugin with a set of rules that work for us; The google check-style rules include ones to group/order imports: https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml\nFound the LinkedIn style, will address in a separate PR.. @apucher Can you try this branch and see if it can build?. @snleee Updated. > Will there be another PR applying these formatting on the current code base?\nWe need to split the work because too many violations right now.. @sunithabeeram There is no easy way to add table type check in the loader layer (table name is not available). Also, I don't think calling the wrong API without reading the API doc should be considered bad usability of the APIs. This is a quite urgent fix, and I don't want this to involve big changes for now.. I don't think PinotSegmentRecordReader should return virtual columns, so we should fix the record reader instead of the converter.. Awesome! You make my OCD so satisfied!. > What\u2019s the benefit of changing this? What happens if minion merges two segments with different ranges?\nWe treat range as single value right now, which is very confusing. When minion merges two segments, the partitions will also be merged. For example, segment 1 has partition 1 and 3, segment 2 has partition 3 and 5, then merged segment will have partition 1, 3 and 5.. @kishoreg Currently we are storing a list of ranges, which is quite redundant (and not supported when range covers more than 1 value). A list of integer partitions should be good enough, clear and simple. We should not have large number of partitions, so ranges do not buy us much. This change is mostly for simplicity and readability, which is not a must have, but a good to have IMO. With this, it's easier to add support for multi-partitions in the future.. Also, if we use range 1-5 to replace [1,3,5], then when trying to purge segment with partition 2, we will get false negative (segment should be purged but not).. @sunithabeeram We support both format, and it's mainly for saving space & readability.. @sunithabeeram The race condition between start() and stop(), and is addressed by adding synchronization.\nAs for the leader and non-leader change, ControllerPeriodicTaskTest covers the test of start() and stop(), which are called in ControllerPeriodicTaskScheduler onBecomingLeader() and onBecomingNonLeader() (implementing LeadershipChangeSubscriber).. @npawar Addressed the comments. Periodic task logic is covered by unit test: ControllerPeriodicTask and PeriodicTaskSchedulerTest. For each individual periodic task, it's out of the scope of this PR, and we can add tests later.. Closed because Helix issue.. @sunithabeeram Helix batch-mode is not enabled before, this PR only makes it explicit, and adds comments for that. All the improvement will come from disabling Helix pre-fetch.. @kishoreg By doing deduplication on our side, we get more control on the interval between change checks (no interval for Helix batch-mode, so we might end up doing more fetches), and we can track the cluster change queue time (also, the logic is much simpler than the Helix batch-mode).\nIn order to add proactive check for all type of changes (not only external view), the change handler must implement the same interface, thus making the change big.. @mcvsubbu @sunithabeeram Updated testing done:\n1. Run ClusterChangeMediator without starting the cluster change handling thread, the backup inline change processing is working properly\n2. Set proactive change check interval to 1 second, both callback and proactive change check work properly. @kishoreg The PR has been merged. For the deduplication, we keep only one last change time for each change type, and reset it whenever we start processing the change. Next call back for that change type can set it again, so it will be picked up in next round. Multiple call backs in the same round will only be processed once.. @snleee For example, incoming time column name is millisSinceEpoch with unit MILLISECONDS, it is confusing to convert this column to DAYS without changing the name to daysSinceEpoch.. @jackjlli Added javadoc to RecordReader interface. Thanks for the suggestion.. @kishoreg Manually tested. Also, if the thread is not notified, all the integration tests will fail due to the 6 minutes wait(). This is the standard way of pushing data to code cov website. It only happens on Travis machine after passing all tests and does not affect the result on Travis, so I don't think there is functional or security problem.\n. But what if they change the report uploader code and the old version is not compatible with the codecov website? Also, this part of the code will only run on Travis machine (basically a sand box), and our code is fully open-sourced, so I don't think it can cause any security issue in our side.\n. Why use javadoc style comment here?\n. When we set emptyResult to true, should we just return because all other operations are redundant?\n. Update comments\n. Append to the previous line\n. Will it be more intuitive using remainingGroupByColumns and remainingPredicateColumns?\n. Also remove column from remainingPredicateColumns?\n. No need to create new Sets because the searchEntry has been removed from searchQueue.\n. For each child, create a new remainingPredicateColumns and a new remainingGroupByColumns, otherwise they are sharing the same instances.\n. @jfim Sure we can do that, but that will add some operational complexity. My point is, for an open source project running on a sandbox, nothing could be done by malicious script. If malicious script can get any benefits, then that could happen on any box, just checkout our code and run any script you want right?\n. Because we want to cache the results for each block, and just return the cached values if already fetched. If we pass this as part of the call, then we cannot make use of the cache.\n. For each segment, we need a separate data fetcher, so each thread should have it's own data fetcher instance. \n. This is for the current distinctCount aggregation function. Actually we should never pass in hashcode values to the aggregation functions, so after we fix the distinctCount, we should remove the hashcode related data fetcher members.\n. Right now we read all metric values as double (at least in aggregation). I can add more type support like \"getIntValueArrayForColumn\", \"getLongValueArrayForColumn\" etc.\n. That would be ideal. But for multivalue, fetching data on block level will produce a lot of garbage compare to fetching data per doc id and reuse the same buffer. I will think of how to implement the multivalue data fetcher.\n. The issue is that the checked in code only works when startIndex=0 (people already assumed that), which is always true. I looked at the code, this kind of API comes from the Dictionary APIs, like readDoubleValues(int[] dictionaryIds, int startPos, int limit, double[] outValues, int outStartPos). There are very little usage for these APIs, and all of them with (dictIds, 0, length, outValues, 0). Adding startPos and outStartPos will add more complexity to the code, and potentially hurt the performance. My suggestion is just remove the startPos and outStartPos, since no one actually need them.\n. One major reason why this class exists is because there are a lot of duplicate caching handling code. By handling the cache inside the class can significantly reduce the complexity of caller code. Also, make group-by executor an example, both the executor and key generator can share the same data fetcher and take advantage of it's cached values.\n. Single group key and multi group keys share this class, and each of them calls different functions. This one is only called by single group key situation.\n. This class manages the contents inside IndexSegment. For some use case, we want to get the metadata for a column, with this class, we don't need to create a separate DataSource each time, and can reduce the garbage. For multi-value column, we can get the blockValSet and use it to fetch data. I didn't implement a fetchMultiData function because that will add a map look up for each docId, which is not efficient.\n. The DataFetcher serves for both single value and multi value columns. But for multi value columns, we should call the getBlockValSetForColumn() method instead.\n. Actually the interface is:\nvoid aggregate(int length, AggregationResultHolder resultHolder, double[]... valueArray);\nSo this one can handle zero value array or multiple value arrays (for future implementation of embed function into aggregation)\n. Yes I will do that, not only for HLL but also the normal distinctCount. The bug fix needs some change on the interface because right now we only accept double value as input.\n. Basically that cannot happen because we only have 3 storage type?\n. It's the lowest level method (per doc), so I don't want to add any overhead to it. Each of them use the different data type, so not much reusable code inside.\n. Empty segment cannot pass the GroupByExecutor Preconditions\n. There is no effecient way to clear the string builder, so I think it's better just get a new one each time (8 byte garbage?)\n. Isn't it better to let the compiler decide the right function depending on the argument type? (like most lib class does)\n. I don't think that is necessary because the cardinality is associate with DataSource, and we need to maintain both cardinality product and long over flow flag. The current code logic is simple and if we extract a separate method, the code will become harder to understand\n. I cannot think of this kind of cases. 0 cardinality means no value for this column (even no default value)? In that case maybe just throw an divideByZero exception is fine?\n. I can add that, but that information should already included in the back tracing.\n. I removed it because no one use this constructor. But you are right, we should keep such a constructor for convenience. Will fix it.\n. If the only caller of the method is ObjectMapper, people might think this method is redundant and remove it because ObjectMapper does not explicitly call this method and IDE will show no usage of this method. Right now I added usage of this method so no need for this comment.\n. If string conversion throws an exception, we should not silently handle it because that means user pass in an illegal default null value. If we use the raw value user passed in, eventually something will break, and at that time it will be much harder to debug. We should prevent the illegal values at first place.\n. Yes, and when that happens, we should fix the schema. (Most existing use cases don't have default null values in their schema)\n. I think this is a very good way to distinguish member variables and local variables, and inside IDE it's showing java style warning on these names (forgive my OCD :P). We can keep the old convention, but since it's private, no functionality will change for this class.\n. The convention is to put actual value as first argument and expected as second. In the error message, no need to explicitly log actual and expected value since they will already show up.\n. Put this info into error message inside assert because we will not log this level of message in Travis.\n. Add a query pattern of \"select sum(m1), sum(m2) from T where...\"?\n. We cannot change the logging level right now because that will bring tons of useless logs and break Travis due to its log size limitation of 4M.\n. Oh, I see. Then it's fine :+1: \n. Also, appending the random seed message to assert error message can reduce the size of log when the test passes (since the random seed value is useless if the test passes). \n. Actually we need to reduce the size of test, it kills Travis\n. I will also add one for \"AND\"\n. Use System.out just for command line interaction.\n. return Loaders.IndexSegment.load(indexDir, readMode, indexLoadingConfigMetadata, schema); ?\n. private final int maxNumberOfMultiValueElements;\n. Object defaultNullValue = columnIndexCreationInfo.getDefaultNullValue();\nif (defaultNullValue == null) {\n  defaultNullValue = fieldSpec.getDefaultNullValue();\n}\n. When missing column metadata, always assume single value? How to handle multi value missing column?\n. Should close the schemaChangeHandler?\n. Loading should be expensive I guess, so I suggest we handle this (both open and close) in process() method when we actually need to write to the segments. Also, if we construct segment directory multiple times, the RW lock inside is useless since all of them share the same files on FS but use different locks.\n. Do we also need to create column properties? (cardinality, totalDocs etc.)\n. That's the discussion between JF and me. If no default null value explicitly set by the user, when calling getDefaultNullValue() on boolean type field spec will through exceptions. The reason for this is that there is no proper default null value for boolean type. For this use case, user should already set the default null value for boolean explicitly.\n. Yes, that's true, and the null pointer exception will be caught in the catch block. (Actually when any exception happened, we are already out of this block.)\n. Yes, I know that, and I checked the save() method, which is a no-op. If we want to trigger saveAndClose() in finally block, I think we should overwrite close() to perform saveAndClose(). What do you think?\n. For all classes that extend Object, use it's own equals() is good enough. I will add a unit test to test some basic data structure.\n. To be honest, I have the same concern. Compare to '==', the overhead of one method call is too expensive, so we should avoid using this. But there are some existing code already use these for primitive types...\n. I think the purpose of the second part is to do XOR on high 32 bits and low 32 bits for long type. But the conversion from long to int will set the sign bit for int, and increase the chance of collision.\n. Agree. So for future code, we should avoid using this method, but keep it for historical reason.\n. Fair enough, will use the stackoverflow approach :+1: \n. For me, I think '==' is more readable for primitive type, but this is personal preference. The main rationale is that the method call overhead is too expensive compare to the cost of primitive type comparison.\n. In JAVA convention, NaN (0.0/0.0) is not equal to any value. If we only make it equal to NaN inside this method, then the behavior of this wrapper is different with JAVA embedded equals() or '==' behavior, which will potentially cause problems. BTW, we should never have NaN anywhere inside our system.\n. Make number of queries configurable? (Since it's random picked query)\n. I don't think this works. Maybe: synchronized (stats)?\n. No need for sleep here.\n. BTW, ObjectMapper is thread-safe when configuring methods are NOT called.\n. No. Because we cannot control the order of all setters when using ObjectMapper, we cannot tell a mismatch when setting the name. This method is automatically called by the ObjectMapper, so treat it as a no-op should be sufficient.\n. Assert.assertNull()\n. No big impact because it's not called very often. Will add it back.\n. Remember last time we got exceptions while loading the schema? This ignore properties was added at that time to make it backward compatible. (Maybe there are some extra fields in old version schema)\n. This check is not for schema, but for schema serialization. If schema is null, just throw NPE.\n. getJsonSchema() will swallow the exception. We want to throw out the exception here.\n. I have the same concern, but this method is mainly used as JSON setter. We should use SchemaBuilder to build the schema.\n. Actually it is null safe and it is how String implement its equals(). (null instanceOf AnyClass) always returns false.\n. Currently, the Schema validate() only check the data type and default null value for all fields.\n. Yes, and that's what this part of the code checks for.\nI will make the comment more clear. When any exception happens in getJSONSchema(), it will return null.\n. I thought about that, and the answer for now is no and no.\n. Actually I think it's more like default columns which use default null value. BTW, the handler name is DefaultColumnHandler.\n. indexLoadingConfigMetadata is allowed to be null, which means do not create inverted index or default columns.\n. Oh, you are right. No need to add this parameter :-P\n. I prefer name the interface StarTree, and name the implementation something else (maybe StarTreeImpl). Same as StarTreeNode.\n. Why not Iterator of StarTreeIndexnodeInterf?\n. Should be interface?\n. Use interface here? For both version we need to update tree right?\n. Once all the segments are using new StarTree, we can make it more elegant :+1: \n. Is there any specific reason we need to put 2 \";\" to emphasis it? :-P\n. true or false?\n. Why do we need these annotations?\n. Remove this method from this class and the interface since it's version dependent.\n. (OCD) childrenStartIndex?\n. Minor performance: do the calculation after \"if (!isLeaf())\"\n. @raviarin One for Reader and one for Writer. \n. Construct sortedChildren inside the if; else return null.\n. Avoid hard code -1\n. Check version value (1)?\n. Compare outputFile and mmapFile, if not the same, make a copy?\n. Try to re-format with the new code style.\n. Yes, this field can be serialized and deserialized if you define setter and getter correctly.\n. Add @JsonIgnore.\n. Add @JsonIgnore\n. Add a getter method for derivedMetricType: public DerivedMetricType getDerivedMetricType()\n. Revert the changes on this file if all of them are format changes.\n. Please check if this method is safe to use. Besides init(), GenericRow should be immutable. this addField() break this rule, and modify the map passed in in init() method.\n. Leave a new line at the end?\n. Try to rephrase (though I am not a master either :-P)\n. Use primitive double, and Double.parseDouble()\n. If possible, use Assert.assertEquals(expected, actual, delta) for readability\n. Simply remove the try catch... (Maybe you want to add a delta?)\n. Remove try catch\n. Use parseDouble() for primitive double\n. parseDouble()\n. assertEquals()\n. parseDouble()\n. parseDouble()\n. Change the order to actual, expected\n. Is this equivalent to \"Assert.assertEquals(Double.parseDouble(actualGroupByResult.getValue().toString()), aggResult[i])\"?\n. actual, expected\n. Assert.assertEquals(Double.parseDouble(actualGroupByResult.getValue().toString()), aggResult[i])?\n. Assert.assertEquals(Double.parseDouble(actualGroupByResult.getValue().toString()), aggResult[i])?\n. Assert.assertEquals(Double.parseDouble(actualGroupByResult.getValue().toString()), aggResult[i])\n. Change all defaultDoubleCompare to Assert.assertEquals(actual, expected, delta) for readability?\n. parseDouble\n. parseDouble\n. Are you sure it's capital 'v' (both for DEFAULT_SEGMENT_FORMAT and DEFAULT_STAR_TREE_FORMAT)? It's not the same as in CommonConstants\n. Just curious, what exception can we get here? If any exception happens, then that means files messed up, which should be severe problem?\n. LOGGER.warn is better for debugging purpose?\n. @BeforeClass\n. @AfterClass\n. OCD again: put this inside null check block.\n. The reason I commented this out is because here we just logged a warning instead of throw out the exception to trigger downloading a new segment.\n. For the current execution logic, yes.\n. Will address in a separate PR.\n. Because its a private helper method, so no need to pass in members as arguments.\n. +1. Make these 3 fields int, but when calculating startOffset, do \"long startOffset = startRecordId * (long) totalSizeInBytes\"\n. The simpler way is \"mappedByteBuffer.toDirectByteBuffer(pointer * (long) totalSizeInBytes, dimensionSizeInBytes).get(dimBuff)\"\n. Same here.\n. Are you sure \"toDirectByteBuffer\" returns an array? (not \"toDirectByteBuffers\", these two are different, and the return type array is used for longer than MAX_INT copy length, which is not necessary for our purpose). \n. The purpose of this validator is to validate the table configs and schemas that already in the cluster. There is no need to validate table configs or schemas not in the cluster because it will fail when we push a new table config or schema.\nWe can definitely make this a part of Pinot Admin tool, but this validator is purely for cluster maintenance so I don't know if it is appropriate to make it part of Admin.\n. @raviarin Actually we can bypass controller and directly communicate with zookeeper. In that case we can verify whether the new code can load the configs before deployment.\n. The Validator class should log the failure reason.\n. Currently the logic is not hard (see method testHardcodedQuerySet()), the benefits of this logic is it can save memory and prevent selecting the same query multiple times.\n. We have an option to log all failed queries, so in that case we don't want early termination.\n. You are right, we should disable this one by default, this one is used to manually test some queries.\n. We don't have a general purpose query generator yet (this one is the general one). Right now in  pinot-tools we only have a startree query generator (which only generate SUM aggregation queries). In the future we should move this into tools package.\n. We have 3 query comparators for different use case. This one is for Pinot H2 comparison. The other two, one is compare with hardcoded results, one is compare between startree and non-startree results.\n. Correct, will remove them.\n. Do we need try-catch or MediaType.APPLICATION_JSON here?\n. Any reason why we need this id?\n. super()? The constructor for Object?\n. Maybe a check for not null is better here? (In my opinion, should not pass in null as an argument in get())\n. If init() is synchronized, then get() should be synchronized as well? Or at least put \"inited = true\" as the last statement in this method?\nAlso, it looks a little weird to make the init() a static method. Since we need to pass in the transformFunctions, why not just hardcode a map for this class?\n. (OCD) No need for this variable.\n. This logic cannot support nested functions, there will be nodes with same id.\n. \"return TRANSFORM_FUNCTION_MAP.get(key);\" is enough.\n. No need to pass in expressionTree as it is already a member variable.\n. Do we need the \"length\"? Is \"length\" the length of the \"input\" array? (The javaDoc for this method is a little confusing)\n. Cache children.size()\n. checkNotNull()\n. No need to pass in docIdSetBlock because whether it can be used depends on the class of currentBlock.\nAlso, no need to pass in numDocsScanned, just return the docsScanned for the currentBlock, and add it to the numDocsScanned.\n. Set numDocsScanned?\n. For ProjectionBlock, we have both getDocIdSetBlock() and getBlockDocIdSet()? LOL\n. We can do that, but in my opinion, it's not necessary. What will the output file name be if there are several segments? If we want to do batch conversion, all we need is a wrapper and then convert them one by one.\n. Fixed.\n. Allow only '+' or '-' or allow mixed as well? IMO, allow only one of them is more clear.\n. No need to get entry set, get \".values()\" should be better here.\n. Same here.\n. Add a relatively long timeout? Or if anything went wrong, it will stuck here forever.\n. Better to replace the table name in QUERY_PATTERNS with the actual table name?\n. If possible (I don't know how the query engine worked :-P), maybe better to pass TABLE_NAME, DATA_DIRECTORY etc from the arguments?\n. Better to log a warning here, and log error when the numRetries already reach MAX_RETRIES.\n. (OCD) Directly return here?\n. (OCD) Directly return here?\n. The parameter here is the readlimit, which should not be 0.\n. Yes, we will always get DocIdSetBlock here, and I already changed the MatchEntireDocIdSetBlock into a FilterBlock. My plan is that, in this PR just make minor change to the interface, and create a separate PR just for the interface clean up.\n. Kind of a hack here. We need to pass numEntriesScanned in block (we can also do it in Operator, but IMO block is a better place). This numEntriesScannedInFilter is the total number of entries iterated, not just in this block. That's why when I update the value in upper layer block, I just set the value instead of aggregate the value. For Operator lower than DocIdSetOperator, we just get a single block, but for DocIdSetOperator, we get multiple blocks. When we construct the block, we read the value from the lower layer BlockDocIdSet/BlockDocIdSetIterator and put the value inside the block to send it to upper layer.\n. In current code, this block always act as a FilterBlock instead of a DocIdSetBlock. (I think the fact that this PR passed all the tests can prove that)\n. For now, there is no support for StarTree and Realtime use case. I will try to add them into this PR.\n. You are right, and we just use the result of the last DocIdSetBlock, which is the result after agg/group by/selection is finished.\n. We are not using ObjectMapper to read this class, so IMO we don't need ignore unknown fields.\n. done.\n. done\n. This is the same behavior as before because mergedBlock will always be null. Will revisit this part in the partial result PR.\n. Add \"final\" and use new convention with leading ''?\n. Add parentheses for readability, and some operator is no-op.\nreturn (value << 24) | ((value & 0xff00) << 8) | ((value & 0xff0000) >>> 8) | (value >>> 24);\n. Remove the try-catch.\n. (OCD) Cache ids.length\n. Change 'fieldSpec.getDataType()' to 'fieldType'\n. Log field type as well\n. Good catch:+1: \n. For readability, I suggest \"for (int numRetries = 0; numRetries < maxRetries; numRetries++)\" and throw exception after the loop. Same for other retry methods.\n. This should be an error. Same for other methods.\n. Put this inside try (InputStream inputStream = new FileInputStream(file)) to prevent leak.\n. numRetries >= maxRetries\n. Remove the 'length' and 'inputStream', we should get them from sengSegmentFile() method.\n. Remove this method. It's a copy-paste of the one in FileUploadUtils.\n. No need to change this as retry doesn't hurt. Same for other tests.\n. No need for the data provider since both tableName and version are not used. Remove the parameter inside the testRetry()\n. IMO, I think we can ignore the tests since the logic is simple.\n. Will add them when cleaning up the combine operator.\n. Maybe because there are bunch of changes in this file. I tested the old PerfBenchmarkRunner which depends on this file, and it works fine.\n. Do you mean add a \"addSegments\" method into PinotHelixResourceManager?\n. Good catch. I think the reason might be when I type the Integer.MAX_VALUE, I mis-auto-import the wrong class.\n. Done.\n. done.\n. Please revert this part.\n. This one is not readability issue. If user pass in the maxRetries, we should use that value. If not, then use default value.\n. Good point, fixed.. For the current query execution logic, make the rewrite here is the most safe way. To handle concurrency issue, we need a deep copy here. (I considered doing the deep copy on demand inside pre-processor, but the extra logic overhead seems larger than the overhead of this deep copy.). Add a TODO on this API. We need to re-think whether we should have batch reading for multi-values.. Good to have a saperate API for getting dictionary IDs. Make code much more readable :+1: . Will we ever fetch single-value dictionary id for single doc?. checkNotNull()?. What's this suppress for?. Add a TODO here to remove this in the future. This will allocate Object per value base.. Move this flag outside? Check before calling the method is more clear IMO.. For multi-value, we create Objects per doc base. Add a TODO here for future revisit.. Extra comment block here?. To handle null comparison :-). Add an API to config max lines of stack trace. Also make the default value 15.. This format only works for floating point numbers.\nChanged the format to \"###################0.0#########\" which is consistent with our selection response. This way we can differentiate integral numbers and floating point numbers.\nMy only concern is that this will change the response format. (E.g. 1.00000 --> 1.0). By doing this, we can ignore null handling and simplify the method adding things into these objects. Also, we don't have nulls in the broker response. (This object is the response we get from query console). Like a factory method? It's the same as the constructor right?. This is shuffled, gather all results for the same aggregation together. We do shuffle first, then reduce.. We first process all metadata. After that, remove data tables without data inside for further reduce on data.. done.. done.. IMO, if some types should not show up here, this way we can catch the exception here. If in the future we allow more types, we can add support at that time.. Added in the argument usage.. Seems no easy way to do that except for adding a custom handler which is an overkill for this IMO.. Added.. There is no stopping condition. It will run forever until killed.. Made queueLengthThreshold = Math.max(20, (int) currentQPS * 5), which is a very loose constraint. Use this mechanism to prevent queuing too many queries. If the queue got full, then it means cluster cannot serve at the target QPS.\nThe Average QPS in the report output is the effective qps.. IMO, this randomize can be achieved by the producer-consumer model.. Add numTimesToRunQueries to config number of times to run all queries in the query file.. Removed.. This is a top level metric. When any processing exception caught during query processing, we will add to this metric. I am not sure if we need this, but this metric can track how many queries got at least one processing exception.. This is for backward compatible, mostly for unit tests.. Will address this in another PR. I reverted the double format change because it's not related to this PR. If we want this change later, will file another PR.. For now, if the data schema doesn't match, put an exception into the broker response. The fix for handling resolvable conflict should be inside Selection/Aggregation reduce methods. Will do that separately from this PR.. done.. The only difference is that addPhaseTiming takes the time counted outside while timeQueryPhase takes a Callable and count the time inside (IMO not as handy as addPhaseTiming).. done.. done.. Updated the comments to make it more clear.. Discussed with @mcvsubbu on the ScatterGatherStats. For concurrency, it's fine, but for hybrid use case, if OFFLINE and REALTIME segments are from the same server, then the stats will be override because both of them have the same server name. Will add a TODO to address that later.. Added.. Please add java doc or remove the comment block.. (OCD) \"i++, outStarPos++\". +1, good to have an abstract base class.. Since we already have the _columnToMaxNumMultiValuesMap, this map is redundant, and the temp dictIds array should be maintained outside of DataFetcher.. The dictIds array should be maintained outside of DataFetcher (BlockCache is a good choice).. Data fetcher is not a cache, and should not maintain any reusable array of fetched data inside. This _columnToDictIdsMap is a block level dict ids cache, which definitely should not inside data fetcher. Data fetcher should be on top of the whole segment, but not a block. For block level data / cache, we should put them into BlockCache. For an example, if clients try to fetch two blocks data (dict Ids), the data from the first block will be override. We should not rely on clients to make the correct order of data fetch, but let the clients pass in a buffer to fill the data. I agree that data fetcher should be able to directly fetch value from docId, to achieve that, we just need one temporary dictIds array and never expose this array to clients.. Again, this will rely on clients to make the correct call to work. If clients try to fetch two multi-value column, the first one will be override.. This one is never called, and currently we don't use BlockValIterator to get values. Currently we use BlockValIterator to get dictionary ids, which is very confusing. Add a TODO and we should only use BlockValIterator to get values but not dictionary ids. For dictionary id, maybe we can add a BlockDictIdIterator.. To be clear, is this the only entry point for no-dictionary implementation?. Add \"@override\" to classes that override this API.. private?. Why do you need lazy allocation on this instead of \"new byte[_lengthOfLongestEntry]\" here?. (Critical) I believe this way to get bytes is not thread-safe as you reuse the same chunk here.. Remove \"//\".. Suggest removing this method because no code calls it.. For the thread safe issue, if possible, do the duplicate() here will get higher performance and produce lesser garbage.. I prefer the signature: void index(int docId, String value);. value.getBytes(UTF_8)?. Same here.. Will do the clean-up in the PR of supporting no-dictionary.. The order of columns in data schema should always be same because they are generated by the same broker request.. done.. done. This two loops have to be separate. The first loop create the map, and the second loop use the map to get the index.. All these schema compatible merge code has not been released. When that is released, I can make a ticket with the version number.. We need this sequence because offline and realtime table could co-locate on the same server instance. Without this sequence, one of the response will be override.. done.. done.. done.. done.. We decided not to do this right? This will create garbage for each row.. This is a bad suppress =(. Thought about that, but that will make adding values difficult (I don't want to store a map inside because adding value could be a very frequent operation).. Because BlockValSet does not contain all APIs needed, we have to use ProjectionBlockValSet here for now. We need to revisit the interface later.. One is the segment level result, one is the final result in broker response. For an example, for distinctcount, AggregationResult is a set, while FinalResult is a value (Long).. Changing the name from 'get' to 'create'.. Me neither. While this one is a high level test (including both server and broker side code), it's very hard to come up with a naive implementation to compare with. For finer granularity tests I will do that.. We have 2 combine operators, one for aggregation only and selection, the other for aggregation group-by. I have a plan to merge them into a single operator (there is a TODO on that), and will address in another PR.. The second argument is the segment metadata. On per segment operator, we use segment metadata to construct a visitor and visit each aggregation function (visitor mode).. I want to revisit this part in the combine operator clean up. The new group-by combine operator might not be ideal because it could occupy all threads available and block other queries. For this TraceRunnable, IMO, we'd better use a Callable and implement early termination when timeout happened. Will address in another PR.. When GroupByOperator hits some exceptions, this will be null. We don't need an else block here because we merge all exceptions anyway.. This trim only apply to group-by, which will never get into MCombineOperator.. This is a typo in the new added code (in clean up step 1), and the unit test caught it.. Actually we never allow calling getNextBlock with a blockId (the only exception is DataSource). Operators that allow calling getNextBlock() multiple times are BReusableFilterDocIdSetOperator and MProjectionOperator, and both of them will throw exception when getting called with a blockId. So to get symmetric behavior across all operators, the easier way is never call getNextBlock with a BlockId.. protected?. _chunkSize should be maintained inside the FixedByteChunkSingleValueReader. IMO, it is more clear if the api is getChunk(int chunkId, ChunkReaderContext context). Up to you :-). This is called per row base, better to remove the assert? (I don't know if it will be ignored in production). (OCD) Make line 49-51 a single statement?. Is it possible to be byte[]?. Please revert the changes in this file.. Remove \"this.\". Better to wrap these 4 tests into one? Up to you.. It's an override. Because in customized serDe we don't enforce it to be Serializable. I will clean up the JavaSerDe in another PR, and all objects should be ser/de by customized one.. The only place where this is referenced is in DataTableSerDe. I made this a inner class for performance (access member directly).. My logic here is to make deletion check more strict. So, to trigger delete segments, the segment push type has to be set to APPEND. We can log an error or warning when segment push type is not set to either APPEND or REFRESH.. (Critical) serviceStatusCallback.getServiceStatus()?. Make member variables private?. Better to split this class into several classes? Inner interface is not as readable IMO.. Make this callback another class?. This test did not catch the infinite loop inside getServiceStatus. Better to expose this callback into a rest call, and call server/broker to check the status on their side?. This is for back-ward compatible. I will add a comment here.. Currently V1Constants does not have size for several types including BOOLEAN, BYTE etc. Also, this is protocol related, so I will keep the magic numbers for now.. Fixed.. Fixed.. Fixed.. Done.. Since you decide to pass in the root node, please remove the other arguments.. Wrong import.. new line?. The value fetch should not happen here. You should cache the BlockValSet and fetch different types accordingly (data type and fetch type could be different).. private final BlockValSet _blockValSet;\nprivate final int _numDocs;\nprivate final FieldSpec.DataType _dataType;. Remove this constructor. super(null, numDocs, FieldSpec.DataType.STRING);. Don't cache _indexSegment inside PlanNode.. Right. This tool will only modify the table config.. ZK_ADDRESS is hardcoded for this initial version. I will make it an argument passed in by the user.. ImmutablePair is a final class. I want to make this pair comparable, and override the toString() method to print useful information.. Will make it general.. This is an initial version. Will make it general and a command in pinot-admin.. I will also add \"autoGeneratedInvertedIndex\" flag into ZNRecord, so for now I need to modify in ZooKeeper.. I agree. Will work on turning this into a usable command in pinot-admin.. I don't see any reason you need to pass in children. Please take only one argument \"root\" in the constructor and remove the buildTree method.. Please add a TODO here to indicate that currently UDF does not work on aggregation.. Please throw UnsupportedOperationException here.. To handle backward compatible, why not first check expressions? For UDF support version, all information should be in expressions, so no need to get columns; for un-support version, check columns then. With this logic, no need for the flag ignoreColumns. The current logic is kind of messy.. Both projectionColumns and transformExpressions should be Set. I recommend make them one single set. ProjectionColumn should be one type in TransformExpression (indicator).. I still don't understand the difference between having a recursive buildTree method and use constructor recursively. Compiler can directly call \"new TransformExpressionTree(root)\".. The problem is this is not the correct way to handle selection columns (e.g. select *). Selection query should not reach this plan node for now. So throw an exception here is a safer for future development.. If compile time can actually show up in profiler, then we should not assume compile is a cheap enough operation and move it to server side right? I do think we need to further discuss this decision because no matter what we need to compile in broker side to get the correct group-by column names.. Use _children directly?. Selection query should never reach here, and it will break if it reached here. So please throw an exception for now.. Add a local variable to cache entry.getValue()?. The second argument should be inStartPos?\nSame for all other methods.. Please move _chunkBuffer.flip() into base class writeChunk() method. (Also remove the _chunkBuffer.flip() inside VarByteChunkSingleValueWriter writeChunk()). No need to clear() as it's already cleared in base writeChunk(). Just revert this part and move _chunkBuffer.flip() into base class should be good.. General question: argument row is ignored, so the behavior of this writer is different with old writers which implements SingleColumnSingleValueWriter interface. Do you plan to handle that?. IMO, should never get float values from INT or LONG?. Added both.. Seems time boundary service doesn't apply to realtime table, can you check that?. Same here.. Because PinotHelixResourceManager might create a new controller, for now I will use ZKHelixAdmin. When we actually add this util into controller in the future, we can add a new constructor with PinotHelixResourceManager.. fixed.. fixed.. Added a warning.. Fixed.. Seems not just this file use this json library. Will clean up in the future if needed.. Should not. While we need to try this on a controller to verify that.. Fixed. This is used to generate min/max value for columns. Renamed to match the actual use case.. The internal implementation of write() will first try to rename, if rename failed, it will copy instead. We don't have control on that.. If delete throws exception (which should not happen), get file name from fileItem might throw another exception which break the file upload.. This needs interface change. Will address this in another PR if this cause any performance issue.. There is no guarantee on the order of pruner right now, so we just prune the segment when reaching here.. Fixed.. Yes.. Fixed.. Fixed.. The reason I put it in controller is that controller can integrate this into the validator in the future. When you run it from PinotToolLauncher, it can log properly.. Fixed.. Will make it an one line error log for failed tables.. If push type is not APPEND, we will skip checking the segments in RetentionManager, which means the segment metadata can be valid even without start/end timestamp (e.g. a table without time column).. Fixed.. While there is a fairly big chance that all segments in that table are invalid, which might pollute the logs.. In SegmentZKMetadata, we should never use yymmdd format as start/end timestamp because that will break the retention manager. For the new uploaded segments, I think we will parse the yymmdd format while uploading the segment.. Let's skip thirdeye build when [ \"$RUN_INTEGRATION_TESTS\" = 'false' ]. Only run ThirdEye tests for 'oraclejdk7' to reduce test time.. This is a util class, which is not allowed to instantiate (The method is defined private to prevent instantiate). . Good catch!. Will add a TODO.. We will call this when creating the indexLoadingConfig. I left this method here so that later if we need to override TableDataManagerConfig by TableConfig, here is the place to add code. Right now we don't need to override anything.. Because it can never be null. (Enforced by annotation. If we can clean up all the warnings in IDE, we can save a lot of unnecessary checks). IMO, extract might be more accurate because most configs does not exist in InstanceDataManagerConfig. Added comments. Added constant.. Find the reason. The motivation is that, when we seal the realtime in memory segment into offline segment, we use sortedColumn's inverted index to maintain the order of records. Will add comments.. Fixed. Fixed.. Fixed.. Will log a warning in sendSegmentReloadMessage(). Fixed.. Fixed.. Fixed.. Any specific reason why we use TreeSet instead of HashSet?. We have decided to use the convention _regex for member variable.. matches() or find()?. We don't need this annotation to mark it as a test class. Do not do sout because it might polute the test log and break Travis-CI for the number of output lines limit.. Why not private?. private final. private. private final, and please use _valueMatcher format. (I know it's mixed format now, but we agree on using the LinkedIn format). Please make all these classes private inner static class of the SVScanDocIdIterator class. . _evaluator. Add comments on why with dictionary always use int matcher. Remove commented code. Remove commented code. Remove commented code. private? Same with all other evaluators. private?. private?. wrong indent. Move this line into the if statement. Why pass in dictionary?. private?. Update comment on REGEXP_LIKE. Fixed.. Compare to the actual filter / aggregation, this overhead is negligible.. No, this info will only appear when the current code throw NPE. This is just for bug verification.. This one we are unable to log table name because it's de-serialization exception.. builder.append(PARTITION_FUNCTION_DELIMITER);\nbuilder.append(arguments[i].toString());. No need for the null check. Fixed. Fixed. Already checked. If segment file does not exist, the segment cannot process any query, so I believe that can never happened.. Added. Fixed.. I tried that, but loading creation metadata file also needs segment version as well. Also, extracting shared code in constructor does not work on final fields.. Fixed.. Fixed.. Preconditions checks have performance impact, that's the reason we prefer annotations. IDE will mark warnings if any code does not follow the convention.. Added checking on file is directory.. Added checking on file is directory.. Already used in one tests. Will add tests to findMetadataFile, all others are the same.. Will add tests to findMetadataFile.. Added. Used in SegmentPreProcessorTest..      * @return true if and only if the file denoted by this\n     *          abstract pathname exists and is a directory;\n     *          false otherwise\nJavadoc from File isDirectory() method. isDirectory() first check if file exists. This is not a test... I will remove the new static factory method and uniform the behavior (always load from a directory). Fixed.. What is this sleep for?. Fix this line. Fixed. Good point!. Updated in commit message. Fixed. This check is for multi-value columns, in which case the rawValue is an Object[]. We have single writer, so this is thread safe in our use case. We already logged the segment name.. Will address that in separate PR. This one is just to fix the problem where reload failure does not log any error.. I did it this way for minor performance gain (which is definitely unnecessary :-P), will address this in a separate PR. The actual size calculation is trickier. For multi-value columns, we allow this number of entries; for number of total docs, we allow this number of total docs. But we don't allow this high cardinality, which is what actually stored in the final bitmap file.. I agree it's hard to track this performance problem if inverted indexes are not created. Actually adding a counter (metric) here does not help that much, and it's not very possible to pass the ServerMeter all the way down to this method. Should we just throw the exception, and let CRC check catch this?. Rename tableName to resourceName?. Let's rename tableNames to resourceNames to make it more clear.. Same here. No need to call exists() because isDirectory() will check if it exists.. Yes, added.. Actually this file does not have access to the reload method (in pinot-server). Added more comments.. Added.. Added.. That's why I added a dummy index file inside the directory to make sure it's the correct one.. The delete indexDir is the cleanup, the other two are not exist (already checked). Same. Same. Added.. For normal exceptions, we also use this method to recover segments (this method is called inside reloadSegment() finally block). Updated the comments.. forceDelete() does not return value, it directly throw exception on failure.. It's guaranteed to be deleted, or throw exception.. Test/Assertion failures will not make test fail next time because we clean up the directory before testing, but it does leave directories around. Added global setUp and tearDown.. Fixed.. No, this is failure before second renaming. Failure before first renaming is normal case. Updated the comments.. This is after second renaming, during deleting segment temporary directory.. Added. These two directories are children of TEST_DIR which will be cleaned up.. Updated with checking on volatile variable.. We are running on multi-core CPU so that should be fine (actually that's the reason why we need volatile :P). . Normally it took about 10ms. Extended to 10 seconds.. Added. Good catch, thanks!. Fixed.. I think the nReplicas will be set in PinotLLCRealtimeSegmentManager.java updateIdealState() line 371, can you please check that? If yes, revert the change for this file.. Forgot to revert back LOL. It's an abstraction on top of Helix TaskConfig object. Helix TaskConfig has unnecessary fields, this one just contains the config client put inside.. Currently no. I can make them private, and if needed, I will move them into CommonConstants.. Removed this API for now.. Here we assume both PinotHelixResourceManager and PinotHelixTaskResourceManager has already started. ClusterInfoProvider is just an abstraction to fetch task generation related cluster information.. Done. Done.. Done.. Done.. Done. Done.. Done.. Currently Minion is not integrated into the cluster, so this test does not extend ClusterTest.. Done.. Done.. Fixed, thanks!. Fixed, thanks!. Seems this one has to be a constant. Once this buffer get expanded, it will never get reduced during the whole life cycle, which seems not safe to me.. Please rename \"brokerRequest\". Use new coding style?. Changed back to '' so underscore is not allowed in task type.. Done.. Done.. Done.. Renamed to tableHasTypeSuffix. Rename to isTableResource. Not sure if it's safe to change it here. Will address all fasterxml/codehaus problems in a separate PR.. Sure.. Done.. Done.. Oh, good catch!. The AbstractTableConfig is not implemented the way ObjectMapper can serialize/deserialize directly.. Good catch!. For now, I will make everything synchronized. If there are performance issues, will investigate later.. Will address in another PR. Task manager will not schedule any task if the frequency is set to negative number.. According to http://stackoverflow.com/questions/630453/put-vs-post-in-rest, POST is used to create, PUT is used to create or update. By reading the Helix code, I don't think methods in TaskDriver are thread safe, so for now I made all of them synchronized.. If the naming convention get more complex in the future, I will wrap them into a separate class.. Map?. Put if not contains to reduce garbage.. Map?. Move this comment to line 83. The default value for partition is \"\". null means do not set the partition name.. Try to define ObjectMapper as private static final member variable to reduce garbage.. I felt the same way. Removed the field.. I agree, and made the change.. This is out of the scope of this PR, will address in another PR if necessary.. Use\nif (o instanceof ColumnPartitionConfig) {\n  ...\n}\nreturn false;. I don't think _functionName can be null. _functionName cannot be null right?. Use EqualityUtils.hashCodeOf(). Please move this class into ColumnPartitionMetadata as an inner class. Same for this class. ColumnPartitionConfig.rangesFromString() should take a single String as argument instead of a String array. IMO, this class should not extend ColumnPartitionConfig because they are different things. Better to separate them for readability.. Use\nif (o instanceof ColumnPartitionConfig) {\n...\n}\nreturn false;. Use EqualityUtils.hashCodeOf(). ???. I don't think this API is required. Same as above. Since you throw the exception out, no need to log error here, or we will log it twice.. throw as RuntimeException might be better?. Same here. put this line and znRecord.setSimpleField() into try catch block?. Same as above. dictonaryMap.values()?. I recommend name it as BaseMutableDictionary so by name we can tell it's an abstract class, up to you.. Oh, you are right, I missed that. (OCD) extra space. Can _partitionRanges be null?. return EqualityUtils.hashCodeOf(super.hashCode(), _partitionRanges);. Is this auto generated? We can use the EqualityUtil to generate hash code.. Directly store int (Integer if need to use null to identify no config) instead of String. This way can use the json getter, no need for a separate getter.. Use bool or Boolean, same for _separateReplicaGroupsForPartitions. space after \"ZKMetadata\". rename to offlineTableName?. getPartitionToReplicaGroupMappingZKMedata. why final?. Done.. Added. double space. same here. Use\ntry (MutableDictionary dictionary = new IntOnHeapMutableDictionary()) {\n  readWritePerfOnCardinality(cardinality, dictionary);\n}. Why do we need this try catch?. Why do we need this try catch?. typo. typo \"cardinality\". Rename it to makeOffHeapMutableDictionary, and add a makeOnHeapMutableDictionary. Let's test both of them.. Can we test both OffHeap and OnHeap?. Don't comment this out. volatile ValueToDictId is good enough and with higher performance right?. Not newSize but newSize / NUM_COLUMNS right?. Done.. Argument should be type 'int' instead of 'Integer'. Argument should be type 'bool'. I have a high level question, should this work with LLC segments as well?. We should not use 'numServersPerReplicaGroup' (basically this is the same as 'numInstancesPerPartition' right?). 'mirrorAssignmentAcrossReplicaGroups' is not picked up?. I think this part does not work... Let's discuss this offline. Try not using long sleep like this. We can add a loop check on the state that need to be met. Move line 1382 before this.. Maybe \"if (numPartitions != 1)\"?. Add a TODO here in case we have multiple partition numbers. private static final.... directly use numInstancesPerPartition?. Same here. Please update the Java doc for this method. private?. I don't think ConcurrentHashMap would help to keep it correct. Let's make getSegmentsCrcForTable synchronized, and change these two maps to normal HashMap?. Redundant check right?. Can this happen? What does it mean if metadataStat is null?. Remove this import. Lots of tests are written this way. Will we ever access JAR'ed tests?. Depends. Throw exception means we don't want to try again, while return null and false are the same. I kept the old behavior here.. Okay, will add a constant value for this.. Make ObjectMapper a private static final member variable. Also, change the import to use codehaus one.. Revert these 2 lines maybe because all checks inside the method are redundant?. No need for this check because 'getTableTypeFromTableName()' will do this check.. realtime?. reformat?. Here we don't need the extra table name or type check right? We should keep the new method, but here use the old way to fetch segment metadata.. It won't because it cannot pass the if condition.. Really? No space after '='?. Checked. And it's not safe to use because it does not handle null multi-value column case.. Double space before Exception. This is testing queries on 4 identical segments (including broker reduce step).. Will add this into the new fastHll test.. Done. Done. Changed to 10s for safety. Done. Done. Because we need to test multiple tags. \"==\"?. Same here. newValue. newValue. Can _trimSize be 0? If yes, then we need to first add then pool. Use DoubleMath.isMathematicalInteger(value) instead, which should be faster.\nhttps://google.github.io/guava/releases/19.0/api/docs/com/google/common/math/DoubleMath.html#isMathematicalInteger(double). It's the argument name in BrokerTestUtils.. We keep some tests that covered by other tests, but if necessary, we can enable the unused tests for debugging purpose.. That requires a full clean up because fasterxml and codehaus jackson are not compatible with each other.... Added. Added. Not used?. Done~. We use very different way to sort Comparable and non-Comparable, and it's just a private helper class. Adding an interface seems an overkill, and might hurt performance.. You we make intermediate result comparable, then for each comparison (log2m times per insertion or removal from heap), we need to calculate final result once. Implementing this way to calculate final result only once and cache all of them.. It's not about overhead. I will try to make them an interface, but that basically means refactoring most of the code... Still, as a private helper class, I don't think that's necessary.. It can never be null. Helix will directly throw exception if instance does not exist.. Good catch :+1: . Done. Please remove PARTITION_FUNCTION_DELIMITER as well. This exception will be handled on upper level and we will log info/warning there. Same as above. Added back.. Annotate it as @Nullable. Remove. I don't think this helper method is necessary. We just need a check as following:\nif ((tableType == null || tableType == OFFLINE) && _pinotHelixResourceManager.hasOfflineTable(tableName)) {\n      String offlineTableName = TableNameBuilder.OFFLINE.tableNameWithType(tableName);\n      result.put(getSegmentMetaData(offlineTableName, segmentName, TableType.OFFLINE));\n}\nThis can ensure the behavior is the same as before. Added. The caller will log the exception. Haha, for optimizations using primitive type, this is unavoidable.. Renamed it to '_nextDocId'. I agree, while that requires more interface changes. Will address that in another clean up PR without functionality change.. Added comment. Next line is the documentation :-P. Added.. Added.. tokens might be null, and this will throw NPE if we move it up. The final goal is to use only 0 for padding, and remove all checks. Will keep it like this for now because cannot find a good static name for this 0 :P. We need this to decide whether to binary search using unpadded or padded strings. Added java doc into the BlockDocIdIterator for the behaviors.. They should not be changed, but calling it should not throw exception. That's why I leave it blank (no-op). Added. Yes, will add it into the interface. It works. Will add comment to explain. Only BitmapDocIdSet and SortedDocIdSet should implement this method. Sent an email to Helix team.. Why do we need this try catch and swallow the exception?. Release resource only if encountered exception?. Do we want to swallow this exception?. Good catch! I don't intent to remove them, will add them back.. required but with default value?. Unnecessary try-catch. Why do we need this 'replaceAll'?. Only need to fetch idealState this for dryRun. Rename this to 'getRebalancedIdealState\u2018? Right now it's a little bit confusing.. Not in the scope of this PR, just for curiosity, why do we need both replicasPerPartition and replication? They are always the same right?. Should not happen right? Recommend change it to error. Should use ControllerTenantNameBuilder?. Is this just for logging purpose?. Can we assume the all the replica for a segment all ONLINE or all CONSUMING (never mixed)?. This partitions should be extract from the mapFields (after removing not balancable segments). For OFFLINE table, what about segments in OFFLINE state?. for (Map.Entry> entry : newMapping.entrySet()) {\n  idealState.setInstanceStateMap(entry.getKey(), entry.getValue());\n}. idealState.setInstanceStateMap(entry.getKey(), entry.getValue());. Remove the replaceAll() (discussed offline). Use TableType.getServerType to get the ServerType. Added. Added comment. Yes, this is an intentional change. The reason for this change is that, all other RoutingTable implementations don't check whether the routing table is empty (it will never be null if tableName exists). I changed the javadoc for the API as well.. The comment is in init() method. Good catch. Fixed. Added. Fixed. We will create inverted index for all columns using either onHeap or offHeap. Yes, and we should fail the job instead of skip the inverted index creation. Changing it to mmap buffer will have bad performance impact because of the disk IO (this is already causing problem for star-tree generation). We need to discuss this later when we actually need to generate huge size direct buffers.. We need to move huge number of files to solve this because a lot of classes/interfaces in pinot-common / pinot-core use these 2 interfaces.. They are useless but used lol. Removed.. Fixed by setting up the logger in init(). I don't quite understand why this can be used in production for debugging. We start a local zookeeper and set up a cluster called \"quickstart\" in prod?. You mean ControllerApplicationException?. Fixed. Fixed. Fixed. This context is never picked up right?. We should just rename the 'isOffHeapAllocation' to 'isMmapAllocation' because both of them are off-heap.. empty byte array could be a valid response. It can never be null here. If it is null, then just let it throw NPE. (minor) remove the space. We have another level of exception handling (unhandled exception) on the caller. On this level, this part should not throw exception. Will fix in a separate PR.. typo: ACCESS. Please also add @override to BrokerResponseNative. This class will be removed in the star-tree PR, but good catch. Added.. Yes, but IMO that check should not happen here, that should be part of the query validation.. Added. The bug has been fixed in newer version. Added a TODO to update the version later.. These methods are common filter operator related methods which are used in both plan node and star tree operator. Calling methods in plan node from operator will cause some confusion.. Logic is a little bit unclear by first glance. Recommend to change it to:\nif (configuredClassName == null || configuredClassName.isEmpty()) {\n  if (contains) {\n    log info (use builtinClassName)\n  } else {\n    log warning\n  }\n} else {\n  if (contains) {\n    if (builtinClassName.equals(configuredClassName)) {\n      log info (config same as builtin)\n    } else {\n      init\n    }\n  } else {\n    init\n  }\n}. Yes, it's handled in AvroUtils.transformAvroValueToObject(). Added.. Extracted it to PinotSegmentColumnReader.class.. Good point. Added another constructor to support subset schema. Moved it to the DataFileReader interface. (We need reader context for all readers). Haha, yes, while they are only used in testing.. Utf8 is not a type. For string type, Utf8 instance can be returned, we handled it in transformAvroValueToObject().. ?. Don't ignore this test because we want to know if raw index worked or not.. Please revert all changes in this file (only has format changes which do not apply to latest LinkedIn code format). I recommend using the same method name (setOfflineSegmentZKMetadata), add an argument \"expectedVersion\". Rename to \"getOfflineSegmentMedatataZnRecord\". Rename to \"getOfflineSegmentMetadataZnRecord\". Make sure this is the same as system time.. Please put this into a else block. (Critical) Should use the timestamp in segmentPushStatus. Why do we need this? End with a class key seems weird.. Changed method signature to directly throw the exception out.. Caller with catch this exception and mark the task as cancelled. Currently we don't have retry mechanism.. Yes, in TaskFactoryRegistry. We still want to use table config right?. Added. Added.. Good catch.. For now it might work, but it will break the contract of iterator. If user call next() multiple times, it will return the same record without iterate to the next one. Also, calling next() should get a new object instead of reusing the same one.. BTW, _finished flag is not mandatory, removed for simpler logic. CUSTOM_FIELDS?. These info should be logged from the retry policy, will address in a separate RB.. Old one also checks the content length, so should be fine.. It's handled differently (reading from content vs directly get from the status line). Good point, they do. Will update their code as well.. They are used to mock a http server (not changed in this PR).. This map is for general purpose (we don't want minion specific fields in metadata), people can put any custom fields for the segment into this map.. It is just a start time stamp, maybe SEGMENT_COMMIT_START_TIME is better? I don't like 'commit' because it's easy to mix this with LLC segment commit. Good catch. The old one is incorrect (and with new library, it does not exist). Client decides that based on the status code, and do retry (you can use the RetryPolicy). Discussed offline, and decide to use segment.upload.start.time to differentiate this with LLC commit. Fixed.. Fixed.. We should always use nextBlock() instead of getNextBlock().. Recommend using char ('\\t') instead of string. This one will log the actual exception encountered during attempts, or AttemptsExceededException only if no exception encountered but run out of attempts. Remove this line, and \"import HashSet\". Remove unused imports. Remove unused imports. \uff1f. Please move the factory creation out of the loop. Since you refactored the test, please follow the code style convention for variables (\"_cardinality\"). setUp(). Change this to something like: private final static TEMP_FILE = new File(FileUtils.getTempDirectory(), \"SortedIndex\");. Recommend to just remove these debug messages in test. use try with resource. tearDown(). assertFalse. assertEquals. assertEquals. assertFalse. This could also throw arbitrary exceptions from the Callable. Don't use the value from SegmentFetcher, it's separate config. Recommend change the type to int. int maxRetries = pinotHelixProperties.getInt(CommonConstants.Server.CONFIG_OF_SEGMENT_LOAD_MAX_RETRY_COUNT, CommonConstants.Server.DEFAULT_SEGMENT_LOAD_MAX_RETRY_COUNT);. Same here after changing the data type of CommonConstants.Server.DEFAULT_SEGMENT_LOAD_MIN_RETRY_DELAY_MILLIS to long. Recommend logging an error. Not necessary because from the message we already know the exception type. This is already the last statement lol. We need to, and this statement is resetting the upload time (see line 464). Good point, added. We already checked that in PinotSegmentUploadRestletResource.uploadSegment(). @snleee It's inside the branch of group-by query, so should be good. Should be int right?. Can you explain why using the maximum group-by size from servers as the metric value?. (OCD) Extra empty line. If possible, can we keep uri as type URI for consistency?. Same here. Same here. Why not directly use the uri?. Fixed, returning Set. Done. Good catch! Should be volatile, forgive my poor English.... My logic here is that, if the number of segments is not enough to support this check, we should not update the count. What do you think?. Discussed offline, will move this outside the loop. Good catch :-P. Use '==' for enum. Please emit metrics only if the table exist (we don't want to emit both size for offline / realtime only table). Do we need a setter for this? If not, make it final. Do we need a setter for this?. No actual change to this file right?. Made RecordReaderTest a base class for common variables and methods. Done. \uff08OCD) Please remove these empty lines.. Remove the try-catch because it will not throw any checked exception. \"LOGGER\" instead of  \"_logger\" for static final field. Since we are using the builder mode, I recommend putting everything into the constructor, make all member variable final, and remove all setters.. Please add the description for the method, same for other javadocs. Wrong exception message. Should be something like \"Keystore file and password must both be specified\". Please remove this variable. No need to be volatile since it's always fetched synchronized. _controllerLeaderHostPort = null. ??? Empty SSLContext?. Remove these 2 fields. I would recommend making these config keys into Constants class, let both fetcher and uploader share them (using different prefix).. You need to implement equals for Pair. The scheduleTasks() will generate at most one task under each task type, so we just need to check the key.. The name of \"convertedTarredSegmentDir\" will always be \"convertedTarredSegmentDir\", which is not useful. You might want to log the table name and segment name instead?. Fixed with StringUtils.EMPTY. Done. Done. Wow, good catch!. Anything other than success response are count as error. (In practice, we will never get 3xx). This happens only when we call it with null fieldTypeMap (API: getPinotSchemaFromAvroDataFile(@Nonnull File avroDataFile)), and the java doc describes the behavior.. Done. It's already factored out as a helper method.. Please add ThreadSafe annotation so that next time we don't add such changeable member variable.. No member variable, ErrorListener is thread safe, so I think it is thread safe. Also, we already assume it is thread safe in the callers.. Do not remove the try with resource block, add a helper method to construct the FileUploadDownloadClient. (OCD) Maybe better to change to:\nif (TableNameBuilder.isTableResource(resourceName) || resourceName.equals(CommonConstants.Helix.BROKER_RESOURCE_INSTANCE)) {\n  tableAndBrokerResources.add(resourceName);\n}. Could headers have confidential information?. Just log the info needed (e.g. headers.getHeaderString(FileUploadDownloadClient.CustomHeaders.UPLOAD_TYPE)), but not the whole headers. The point is, the validation information will also be in headers, and cannot be logged. Let's add a TODO here to add these 2 headers into segment upload. Here we just check whether the expression string can be compiled, and put the standard equivalent expression string into the group-by expressions. This way we can avoid invalid query and ensure the \"groupByColumns\" in the broker response is standard. Will update the comments. This is not renaming, the interface is redesigned so too many changes, and git identifies it as deletion and addition.. Done. We don't allow null value in executor, and we try to use primitive type as much as possible for performance.. Re-implement the method and removed the parameter. Done. Done. Don't include version in child level pom file. Only define them in the root level pom file. Same for other places. I think after excluding this dependency, you have to explicitly pull in a dependency or it might not work right?. Specify the dependency with version info here.. This operator is specific for selection with limit less or equal to 0. We don't need to fetch any data, so we don't need to create an underlying operator. The branch logic happens in the SelectionPlanNode, and with a separate operator, the logic is more clear.\nI agree on the name of EmptySelectionOperator.. The logger has name RetentionManager, so no need to add \"retention\" into the log message. RealtimeSegmentDataManager manages the realtime segment, which contains both MutableSegment (consuming segment) and ImmutableSegment (sealed segment). This is just a placeholder which should never been triggered. Suppress warnings for single statement. Replaced with annotation on method level. Done. Done. Good point!. This method should never throw exception. Checked all codes calling this method, and all of them put release in the finally block.. Removed. This is a base class for segment data manager. Actually one reason why I didn't rename this class is that, there are too many references to this class.... Please add a description for the method. Should not embed transformToOutputGranularity into transformMillisToSDF, but add it into Epoch/SDFToSDFTransformer (refer to SDFToEpochTransformer). Thanks for updating the javadoc. Actually, after removing ARRAY type, we don't need this enforcement. Updated the comments.. Changed the name to ColumnDataType.. Removed the ordinal() to make it more robust. . Also Added a DataSchemaTest. Please add both DEFAULT_DIMENSION_NULL_VALUE_OF_BYTES and DEFAULT_METRIC_NULL_VALUE_OF_BYTES. return DEFAULT_METRIC_NULL_VALUE_OF_BYTES. Do we need it here? I don't think we allow serialize bytes between broker and server, and also we can reuse OBJECT for this.. Why bringing another static method into this class?. for loop?. I don't think we need to do unsigned comparison (if it hurts performance based on the cost of Byte.toUnsignedInt()) since we keep all the comparison consistent. . typo (extra '['). (OCD) no period after 'param' or 'return'. (OCD) no period after 'param'. Recommend throw more specific exception (Unsupported multi-valued BYTES). Source type would never be BYTES (we call convert() only when source type and target type are different). Need to add toBytes()?. This only apply to String. We don't have pad concept for bytes.. i < numBytesPerValue. Are you sure we want to replace the current one? There will be backward compatibility issue. PERCENTILEEST instead of PERCENTILE. What I mean is that, ByteArray should be one kind of OBJECT, instead of a separate ColumnDataType. We should treat ByteArray the same as Set (from distinctcount) or List (from percentile).. (OCD) Please move this to line 51. private final byte[] _bytes;. At least add the method and throw UnsupportedOperationException. Can you please keep the convention of using camel case for the description?. You need to add a new one instead of replacing the old one right?. Why changing this file? Most of the changes should be in the base class (PercentileEstAggregationFunction). Seems like we can change this class into a util class. This one will cause performance degrade for primitive type (the inRange() method is called for all the values in the dictionary). Fixed, and now we are even LOL. Me too. This is just putting it as description in javadoc. Will add back the @return. Reverted. Wrong import. We usually put @NonNull in front of the method declaration as a separate line (refer to https://www.programcreek.com/java-api-examples/?api=javax.annotation.Nonnull). Don't add it here. This method should never be called for STRING and BYTES. Don't export this variable. Please add a TODO. Don't remove this try-with-resource block because it will close the record reader. IMO, we should only return purged file, nulll, or throw exception. So using null to mark nothing need to be purged should be fine.. We don't. Actually this might happen pretty frequently because we will purge same segment per several days.. After PlainFieldExtractor, this value should always be byte[]\uff1f. We don't support MV for BYTES. So I suggest throw UnsupportedOperationException here or add a TODO.\n(OCD) Remove redundant parentheses. . (OCD) Remove redundant parentheses. . Actually there is risk about this, so only change the task name instead (that method is synchronized). Change this to \"throw e;\". Prefer \"number bytes per entry\" over \"max length in bytes\". These files are not used for protection. Instead, we use it to create the final inverted index file as a temporary buffer. We have another mechanism to protect the server getting killed. You can refer to #2855 . You can import this class instead of putting the full path (seems no class name collision). Please add comments here to explain why we are doing this. In the future, if other people look at this piece of code, they won't get confused.. Can we make this parameter boolean instead Boolean? Also I would recommend name it \"reload\".. TableNameBuilder.REALTIME.tableNameWithType(schemaName);. (CRITICAL) OFFLINE. Because for _postingListIndexBuffer we rely on the initial value 0, and we keep adding to that value. The biggest issue before is endianess. Star-tree has been using this library for a long time, so it should be safe.. Will add more comments. the dictId are fetched from different buffer, so I don't think we need a single method call for 3 lines of same code. I can do a local test, but I'm afraid running it as unit test can easily kill the CI platform as we need to allocate >2G buffer. No, we just use it as temporary buffer the same way as star-tree, and release it once the index is created.. Added more javaDoc for the interface. Actually we do care about performance on server side, or segment load could take forever. On non-SSD machine, using MMapBuffer could be very slow because we need to write the whole buffer to the disk. We have been using direct memory buffer for inverted index generation, so I'll keep that behavior for now.. Add a threshold (25M values) so that the creator can choose to use LBuffer or MMapBuffer automatically.. Seems I accidentally removed it in the offHeap one. Thanks for catching this. They are written in different ways. For the on-heap one, we already get all bitmaps, but for the off-heap one, we build bitmaps on the fly, so we keep two file descriptors at the same time.It's hard to make them a common method.. Fixed.. indexDir is per segment based. Added a TODO to add support to trackable big size buffer. In this PR, I kept the response message the same. Will have a separate PR for fixing (adding details into) response message.. _offlineToOnlineTimeoutInseconds itself is long type. Will be addresses in another PR.. Will be addresses in another PR.. It's a path parameter, which means it's always required. There will be only 10K locks globally, which consumes less than 1MB memory.. This whole method is equivalent to _resourceTimeOutMsMap.getOrDefault(tableNameWithType, _defaultTimeOutMs). Fixed.. System.nanoTime() is per JVM based, so will not be negative. Also, I'm planning to use System.currentTimeMillis() because we don't need such high resolution.. Fixed.. This is used by test only. Modified the test and removed the constructor.. Remove the setUp() method. @mayankshriv ListIterator is the same as Iterator because we are not using the API in ListIterator. Added back. Added. Added comments. Please use @Test(enabled = false)\nAlso. please add comment on why the test is ignored (copy-paste the commit message should be good enough). Ensure the data is flushed to disk (false means we don't enforce metadata to be flushed).. @kishoreg Based on the javadoc, seems there is no guarantee on that.. Added.. Good catch. Fixed. Remove the \"\" prefix. Remove the \"\" prefix. Remove the \"\" prefix. Remove the \"_\" prefix. We should enhance our compiler so that it can identify UDF vs Aggregation, and directly compile the query into final format.. Rename to setStarTrees(). Remove this method in this interface (keep the implementation in SegmentMetadataImpl). No need for this size check. Log the error instead of printing stack trace. Move this line out of the if check for readability.\nImmutableSegment immutableSegment = new ImmutableSegmentImpl(segmentDirectory, segmentMetadata, indexContainerMap, starTree);\nif (...) {...}\nreturn immutableSegment;. Also add byte[] into this method for robust. Recommend rename to numStarTrees for consensus. segmentMetadataPropertiesConfiguration.getInt(StarTreeV2Constant.STAR_TREE_V2_COUNT, 0);. Rename variable to aggFunColPairsKey, also no need to explicitly do Integer.toString(i).  No need to explicitly do Integer.toString(i), and maybe we should cache \"startree_\" + i + \"_\" because we use it multiple places. An even better way is structure the metadata into startree_1.(configKey). List dimensionsSplitOrder = new ArrayList<>(segmentMetadataPropertiesConfiguration.getList(splitOrder));\nSame as other places. Seems like we don't need the raw data type, only the aggregated data type is enough. (Make aggregateRaw() works on List). Change it to AggregationFunctionType getType();. Rename to getResultDataType() for clarity.. Remove @Nonnull. getResultMaxByteSize()?. Revert changes in this file. (Critical) Don't use static variable in factory. Some of the functions are stateful. AggregationFunctionType.getAggregationFunctionType(functionName). Add comments that this class will always refresh the same segment.. Maybe add a pre-condition to ensure the segment name is the same. SegmentConversionUtils. Move this line out of the loop. \"createInvertedIndexDuringSegmentGeneration\"? Your call. What is this metadata for? We already have a StarTreeV2Metadata class right?. Use type ImmutableSegmentImpl to avoid cast in line 124. Rename this to StarTreeLoader, and make it a util class (provides a static load method). Revert changes in this file. (OCD) remove this empty line. Move this line into the if clause. No need to pass in starTreesCount (use _starTreesV2Count). Rename to _starTreeV2Count. No need to explicitly convert to String. Rename variable. Wrong comment. Remove. Revert. We allow different type of R, so don't make R generic (e.g. HLL we allow number as well as bytes). Revert. Better to add an API \"A aggregate(A aggregated, Object raw);\" so we can apply raw value one by one to the aggregated result. This comment does not apply to the method. This comment does not apply to the method. This comment does not apply to the method. Throws out IOException. Throws out IOException. switch (pair.getFunctionType()) {\n  case AggregationFunctionType.DISTINCTCOUNTHLL:\n.... Calculate number bytes inside toBytes() instead of in the constructor. This is redundant. We need to cache the functions. Pass in a list of functions instead of the function-column pairs. (CRITICAL) Please re-factory this class.. private so that no one can construct a factory instance. Re-order these imports. aggregatedValues?. Revert. Should return StarTreeV2Metadata?. This should be part of the build(). This is the same as the ones in AggregationFunctionType. I think this whole class can be removed (along with PQLParserUtils). Let's use getDouble(), then convert to int or long. Seems we don't check license in config files haha. Please make this private static final with name UTF-8. (OCD) Can you also remove the empty line followed by the removed line? Same for other files. I prefer change the variable name to \"UTF_8\" because based on the method name, it has to be UTF-8 instead of any other char set. and also the convention for private static final variable should be all capital letters.. Yes, it is guaranteed.. That will be in the PR of async request handler. Done. children is non-null only for AND and OR, and will never be empty. Fixed. Done. I understand why you pass the whole debugOptions instead of just a boolean value. I keep the debugOptions in the operator, but added a method to extract the scanReorderOptimization flag from the debugOptions. For other options, we can add other methods that take debugOptions as input and extract the option from it.. I also do that except for util class or singleton class where we need to put a private constructor to prevent people constructing it.. IMO, reorderFilterOperators method should be independent of debugOptions, and thus make future usage or testing easier.. I noticed that, but it's a little bit hard to access ColumnMetadata in this layer. I just kept the current API but only for ScanBasedFilterOperator.. Done. The current one lists the complete list. This one just logs the number of resources as well.. See the above. Segments get into ERROR state is quite critical issue. I don't think we will end up with too many logs. If that happens, we can remove this then.. Done. Done. Done. This looks not correct, we still need to decode hex right?. maps to byte[]. Basically the same, but should use byteBuffer.remaining(). Renamed to AsyncQueryResponse. Done. Changed to table type. Yes. Changed to package private. I don't want to add more threads to the broker. If this becomes a bottleneck, we can change it later.. Actually this is better than the previous implementation where all the de-serialization happens in a single thread. Any reason why you think this could cause problem?. We only have netty and netty-all right?. Basically everything in this method. All the common parts have been extracted to the base class in a previous PR.. Please rename this to NUM_ENTRIES_SCANNED_IN_FILTER(\"entries\", false), same for other places. Agree. Rename the variable name as well. This should not happen. Let's at least add a warning log to catch this.. Can we move this into the try block?. (nit) Let's extract \"queryRequest.getTableNameWithType()\" into local variable because it's used several times.. This should be okay, unless we explicitly put non-number into this field, which is unlikely to happen.. By this time, _brokerMetrics is not set up yet, which will be null.. Seems the builder has been initiated twice, another one is in the caller side. Why not put this in base class?. Ideally, init should be called inside the builder. This kind of shared logic should go into base class, and if the concrete class needs extra variables, override the base class init(). (OCD) Remove empty line. (OCD) Remove empty line. This can be removed once we have the base class init. Should we count this as \"exceptions\"?. Let's name it NUM_MISSING_SEGMENTS to keep the naming consistent. This should also go into the previous if-condition. Same here. Remove this line. (OCD) Remove empty line. (OCD) Remove empty line. (OCD) Remove empty line. (OCD) Line too lone (over 120 characters), same for other places. Good point. Added. Added. This is a bug fix right? Can you please add it into the commie message?. There is no Math.log2(). In order to do so, we have to do Math.ceil(Math.log(cardinality) / Math.log(2)), while I am afraid that using double division could cause wrong result because of the precision error.\nAs for the Math.max(), we can avoid the actual calculation by using the if condition check.. Will rename to ValueAggregator (since it might not be limited to star-tree, which can be reused in the future). The bytes should be generated from star-tree (or the aggregator for this aggregation function). If client aggregates on a random bytes column, it will throw exception.. I think the new convention is to not use Nonnull annotation. Can be simplified by directly calling missingSegments.remove(segmentName). One way is using the Exception, but just put a ',' joined segments as the exception message. Done. Done.. Done.. This is much more CPU efficient, and the implementation is much more straight-forward than the off-heap one. Can be used to build star-tree for small segments or verify the result from off-heap builder.. Please add javadoc for interface and also all methods to describe the behavior. Also, you can extend Runnable so maybe in the future we can direct run the task in a thread.. Rename to init() to keep the same convention.. getIntervalInSeconds?. Add one method getInitialDelayInSeconds(). Move the logic of execution time into the scheduler because it should not be maintained in this interface. Make this configurable. Seems this one is not used. Recommend changing this to start(List\\<PeriodicTask> periodicTasks) so that we don't need to add/remove each of the tasks. This can never be null. Make this final. With the change of start, no need for add/remove. This will never terminate for an infinite loop, use shutdownNow instead. (OCD) I think INITIAL_DELAY is better than INIT_DELAY. This should be a List\\<PeriodicTask>. Don't expose PeriodicTaskEntry outside of PeriodicTaskScheduler. (OCD) Update info to \"Adding task manager to periodic task scheduler\", same for other tasks. \"Stopping periodic task scheduler\" should be more clear. You can remove the javadoc for override method, same for other tasks. Keep this as a private inner class. Why overriding this one?. Please well document the interface. Don't use constant value for initial delay. Random.nextInt(runFrequencyInSeconds) might be better. Remove this override. Remove this because it's already checked?. return Long.compare(this,_executionTime, o.executionTime);. Should we ignore the interrupt? We have a global Throwable catch block. Added. I want to go with the convention of only annotating nullable because most of the arguments should be nonnull by default.. Changed to -1L. Same here. It's a null + empty check for simplicity. Added. I would prefer WARN because this message denotes some abnormal for the table.\nIf we don't need the interval for missing segments, maybe we can just log the number of missing segments. What's your opinion on this?. IMO, INFO is purely for debugging purpose(we don't enable DEBUG usually), WARN is something we should keep an eye on (not necessary something goes wrong), ERROR means something unexpected happens, which probably needs bug fix.\nFor the log, if we got too many tables, the table name might be replaced with \"allTable\" to reduce the number of metrics (not happening right now for ValidationMetrics). I prefer at least keep a one line log for number of missing segments.. Don't directly expose the map, add a shutDown() method instead. for (String downloadURL : downloadURLs) {\n    ...\n}. Oh, missed that, my bad. Discussed offline. Removed the log and will add option to disable segment level check in another PR. Thread.currentThread().interrupt(); has no effect because the thread will terminate just after this. . HttpClient is just a wrapper. The number of connections it can support is based on the connectionManager, which in our case is a shared MultiThreadedHttpConnectionManager.. Changed to e.toString() so that class and message are both logged. Yes, the current test covers error case.. FYI https://stackoverflow.com/questions/1281219/best-practice-to-use-httpclient-in-multithreaded-environment. Remove this line. This might be slower than the existing one due to run-time compilation.. initialDelayInSeconds?. Since we have the ControllerPeriodicTask, I don't think we still need this abstract class.. Rate or Delay?. Make sense. Let's remove this empty init() implementation, and always let child classes override this. Use assertEquals(), same for other places. We should somehow rename this method because it's not become not leader from leader. Maybe nonLeaderCleanUp()?. None of them works except for file://. There is a check just after this. Move re-formatting into #3365. Done. Time complexity is very different. One is O(n) but another one is O(nlogn).\nAlso, space complexity is constant vs O(n). Changed to groupLimitReacher. Want to keep it short because it will be logged for each query.. That is not possible because the config is in pinot-core... We hit this issue again lol. getUploadSegmentHttpsURI. javadoc?. Not related to this one, but why do we need this check?. Why changing this?. Why changing this?. File.separator is not correct here. This is not the local file path, but the uri. Move this into the \"moveSegmentToFinalLocation\" if check. My question is that, why not always use Files.move()?. If you revert this, I think it still works. . I don't know the behavior of trimming string in the middle of a UTF-8 encoded character. Also, we only support fixed length bytes for dictionary, so I don't know if we should trim bytes as well (then we might run into de-serialization exception issue).. Historical issue, but no.... We don't need to explicitly create the parent dir (correct me if I was wrong). assertFalse. assertTrue for this one. Default null is set before getting to the record transformer. Value should never be null here in normal case.. Here we test the random class with toString() in the \"svString\" column. Time converter has separate tests (DefaultTimeConverterTest).. Will add javadoc explaining why the transformers are put in this order.. By this point, all fields should be treated the same (such as expression fields). DataTypeTransformer should be the last transformer which guarantees that all the values follow the field spec.. The segment selector is per table based right? In that case we don't need to pass in the table name.. Good point, and one problem this PR is trying to address is removing this extra transform. I added a constructor to specify the record transformer, and for realtime segment conversion, the record transformer is the pass-through one (no-op transformer).. Added. We keep the number of rows errored metric, and remove the numNulls (always 0), and nulConversions (which IMO is not very useful). I don't think there is a good way to confirm with open source users.. Done. Done. enableDynamicComputing?\nFYI, you can use get() because Boolean.valueOf() can handle null. _enableDynamicComputing?. You can make _segmentToServersMap protected and directly assign to it. We should keep this error log (this means 0 replica up), but do not call this method in computeDynamicRoutingTable(). Since _segmentToServersMap can be changed anytime, let's pass both segmentToServersMap and segmentsToQuery as parameters.. Move this check to external view change computation. Don't put empty list into the map.. Use computeIfAbsent(). Rename this method to something like computeRoutingTablesFromSegmentToServersMap(). This part should handle the no serving host issue.. Missing if check for the flag. Not related to this change, but can be optimized by changing it to assignSegmentToServerWithLeastSegmentsAssigned. !servers.isEmpty(). starTreeIndexSpec is for old star-tree, while starTreeIndexConfig is for new star-tree. Once we fully migrate to the new tree, we can remove the starTreeIndexSpec.. Should we support nested directory or passing multiple directories?. (OCD) Extra space. Added. Done. Done.. That could be very slow. Once we shut down the executor, no new task will be scheduled.. Done. There is no guarantee that any two tasks are not running in parallel, so using random initial delay should be fine. Also, the segment level validation is with a different frequency.. Make sense when user just ignores the exception and keeps transforming. Will make the change, thanks.. We can handle them, but we should not pass them in per performance concern (actually we won't pass them in because re-order operators won't take these 2 operators). I just added this comment for clarification. Will add more details to the comment.. We can handle it, but we should not pass them in for performance concern.. You mean _nonMatchingDictIds.length == dictionary.length()? _nonMatchingDictIds.length is always 1 here.. @sunithabeeram Added. The check will add extra overhead, but should be trivial.. refreshAfterWrite might be better. Please make sure this is done async.. Please check all the excludes as well. Some of them might not make sense, some of them might need to be updated.. I think we should replace header for auto-generated thrift files as well. (Also some of files under these 2 directories are not auto-generated). This one is a nullable variable. Remove it to keep it consistent with the default constructor.. The first 4 configs are mandatory, while the others are optional.. Empty validation config and indexing config does not make sense. The default constructor is not used except for testing cases, and we should always use the builder mode. I don't want to remove the default constructor for now because I don't know if the new config depends on that. BTW, I think this is out of the scope of this PR.. I think we should use the .txt file here. Since routing config is optional, removing it should be straight forward. [Minor] If we are not going to add doc for param and return, remove these 2 lines.. Update the comment. Please add a brief description on why we don't need the header for them. You don't need to remove virtual columns here because virtual columns will not be added to the segment metadata without explicitly adding them.. Sadly 2.27 does not contain the fix, so we have to bump to 2.28. Added. Good point. I think we don't have this currently because the routing table builder does not support this. But I'll add support in case some segment already in such format.. Done.. That is correct. But if we use this pruner alone (not with DataSchemaSegmentPruner), we should check whether ColumnMetadata exists.. I prefer returning null if instance does not exist, and the caller can handle null value accordingly (similar to Map.get() behavior). . Please revert the changes for the top 2 lines. I don't think we need this new exception type. Please reformat these files using the Pinot Style. Maybe log an warning and skip this instance?. Missing empty line after this. LOGGER is static final, while _logger is non-static. The reason why this one is non-static is because we want the name shows as the actual class instead of the abstract class.. Yes, correct. We'll do null check before applying it.. Good point. Once we go with official release, these kind of changes need to be out in multiple steps.. Job name is inferred in the job class. Other properties should be passed through properties.. Good catch. Seems like where I took a break and ran for dinner haha. Done.. Done.. No, the purpose of this synchronized is to avoid calling start() and stop() at the same time. Basically another level of protection. (start() and stop() are called in scheduler, not in the task thread). Good catch! It should be min(). I have the same feeling, but I'm just lazy lol. Missed a zero. Change comment to 30s. Thanks. Correct, good catch. Fixed. Added metrics for CONTROLLER_PERIODIC_TASK_RUN and CONTROLLER_PERIODIC_TASK_ERROR to track both number of runs and errors. Added comments in BasePeriodicTask. After consideration, I still think this exception handling logic should be wrapped inside the processTable(). It might need some variables from the processTable(), which are not accessible with this callback handler.. The caller will log the detailed info with toString() if necessary.. Add a comment to remove this after fixing all the java doc issues.. Should we ignore .rst files in rat?. Make member variables final. Should we allow null assignedInstances here? That might cause the problem we are trying to solve now. Well done!. But we get the following warning when we build the project:\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/intro.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/index.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/segment_fetcher.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/pluggable_storage.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/in_production.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/pinot_hadoop.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/client_api.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/index_techniques.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/reference.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/multitenancy.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/pql_examples.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/architecture.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/pluggable_streams.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/management_api.rst\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/Makefile\n[WARNING] Unknown file extension: /Users/xajiang/Projects/pinot2_0/docs/trying_pinot.rst\n[WARNING] Unable to find a comment style definition for some files. You may want to add a custom mapping for the relevant file extensions.. This will only be called when it's a new segment. You can call getAssignedInstancesForSegment() when assignedInstances are not provided in addNewSegment(), but it should not be null here. I would recommend add a Preconditions.checkNotNull() because when we call this, the segment ZK metadata has been updated.. Not related to this pr, but can you change it to ...,segments(queried/processed/matched)=... so that the format is consistent?. Lower case s as well. I agree that this should be a normal class instead of a util class. This way in the future, it will be easier to add more functionalities, or split the current one into multiple steps (e.g. checkTimeStamp(), checkResourceAllocation() etc.).. ???. Don't check the exception message content. We might change the exception message in the future and that should not fail the test. The fail() in try block should be enough. This only acts as a fall back mechanism. We should get an INIT callback when we start the cluster.. This metric only tracks the queue time, not the actual processing time. The processing time is tracked separately. IMO, for queue time, one metric for all types should be good enough.. Thread is always alive after calling start() unless it's died, in which case we want the precondition checks to fail. The pre-fetch is an annotation on the class (line 52). The purpose of this preconditions is to prevent the extra ZK accesses if the Helix behavior changes in the future and ignores the annotation. In such case, our test should be able to catch the preconditions check failure.. > A thread is alive if it has been started and has not yet died.. Added static final CHANGE_CHECK_INTERVAL_MS for this, and also add comments for the constants.\nThe reason for the sleep instead of condition wait is because using sleep we can achieve deduplication of multiple changes of the same type. All the callbacks inside this 1 second will be processed only once.. Good catch! Stupid auto-format lol.... Changed the behavior to be: if thread is dead, log an error but process inline.. No, event based will still work. Proactive check only kicks in if there is no event based change for 1 hour.. Mockito is not good enough for the tests? To add this, maybe we need to check its license. This null check seems redundant. I'll recommend just put the enum name, and use ControllerMode.valueOf(mode.toUpperCase()). Pass in HelixSetupUtils.ControllerMode instead of String?. Directly return HelixSetupUtils.ControllerMode?. I would recommend separate the Helix Controller out of PinotHelixResourceManager. PinotHelixResourceManager always join as the ADMINISTRATOR. The controllerMode should be handled in the upper layer, and the PinotHelixResourceManager should serve only as Pinot Controller.. That's true. And that's why the error logs and metrics are added. When we encounter issues next time, we can figure out the root cause by analyzing the logs and metrics.. Added stop() to stop the thread, and is called in HelixBrokerStarter. Currently HelixBrokerStarter and BrokerServerBuilder seems not interact correctly. Will address that in a separate PR because that's out of the scope of this one.. I am a little bit confused... This 2 lines have been changed to the old behavior if you check the updated code.. Done. Now most of the common logic are maintained in RecordReaderUtils.. Done. Added comments. We cannot throw exception because it is valid if only one of incoming or outgoing column is not in the record. The time converter can catch this and throw exception if no time column is set.. Directly store String might be better? (No need to call .name()). ControllerMode.valueOf(getString(CONTROLLER_MODE, DEFAULT_CONTROLLER_MODE)) should be suffice?. I don't think we need this null handling. The default valueOf() should be enough.. Not related to this PR, but INSTANCE is supposed to be static final. Stop pinot controller first?. Prefer if (_controllerMode == ControllerConf.ControllerMode.HELIX_ONLY) for enum. If we always create a participant, then maybe better to move this into PinotHelixResourceManager. How does this work for DUAL mode?. Move this to setUpHelixController()? Also add a TODO for this. For pinot only mode, _helixControllerManager is null right?. return ControllerMode.valueOf(getString(CONTROLLER_MODE, DEFAULT_CONTROLLER_MODE).toUpperCase());. This should still return false.. Change this to if (_controllerMode == ControllerConf.ControllerMode.PINOT_ONLY && !isPinotOnlyModeSupported()). And that's why we should move this into method setUpHelixController() right? The ControllerLeadershipManager is for Helix controller, not Pinot controller.. Done. Done. Also created a ticket to clean up SegmentGeneratorConfig to use builder.. The logic is not changed, but a bug fix. Updated the comments to make that more clear. Here getting TIME field is a no-op. Moved the TODO for DATETIME field support into setSchema(). Why do you need another controller if you already started a controller?. Add a TODO to rename this variable. _helixControllerManager could be null for Pinot only mode (not supported though). Return status based on the mode.. Can this be null?. Can you add TODO to fix the misuse of singleton class? This should not be a singleton class. Same for other classes.. ",
    "erl1s": "Thank you for your answers,\nCan you please be more specific about the how server vs replicas work?\nI'm taking the scenario of real-time consumption and storing same table on multiple servers.\nAre replicas created and queried by the server process or using the controllers ?\nI'm asking that because I want to be sure that I know how to deal with potential failures.\nA server process dumps its segment data to the hard disk (I assume that we use 3 replicas per segment), and this data is read when query is received.\nIf suddenly the server process stopped (due to an exception memory error etc.) - the stored data of the replicas isn't reachable anymore, right ? It's not ever relevant that the data is replicated, because the process which is responsible for reading the data is down.\nLet's say I re-start the same failed server process again. Will the old replicated data will be available as soon as the new server process is up ? Will it continue to add new data to the old replicas, or will create new replicas and the old (pre-failure) data will be lost?\nThank you again. Pinot is an exciting project and I really want to understand how to use it in my case.\nP.S. if there's some technologies that Pinot is build on and will answer my questions I'd be happy to read about it.\n. ",
    "binlijin": "I can reproduce it easily, because when the data reach 5000000 then cause dump segment and the exception will throw.\n. ```\ndiff --git a/pinot-core/src/main/java/com/linkedin/pinot/core/realtime/impl/RealtimeSegmentImpl.java b/pinot-core/src/main/java/com/linkedin/pinot/core/realtime/impl/RealtimeSegmentImpl.java\nindex 29fcc83..3b4ee66 100644\n--- a/pinot-core/src/main/java/com/linkedin/pinot/core/realtime/impl/RealtimeSegmentImpl.java\n+++ b/pinot-core/src/main/java/com/linkedin/pinot/core/realtime/impl/RealtimeSegmentImpl.java\n@@ -528,26 +528,26 @@ public class RealtimeSegmentImpl implements RealtimeSegment {\n     for (String metric : dataSchema.getMetricNames()) {\n       switch (dataSchema.getFieldSpecFor(metric).getDataType()) {\n         case INT:\n-          rowValues.put(metric,\n-              ((FixedByteSingleColumnSingleValueReaderWriter) columnIndexReaderWriterMap.get(metric)).getInt(docId));\n           break;\n         case FLOAT:\n-          rowValues.put(metric,\n-              ((FixedByteSingleColumnSingleValueReaderWriter) columnIndexReaderWriterMap.get(metric)).getFloat(docId));\n           break;\n         case LONG:\n-          rowValues.put(metric,\n-              ((FixedByteSingleColumnSingleValueReaderWriter) columnIndexReaderWriterMap.get(metric)).getLong(docId));\n           break;\n         case DOUBLE:\n-          rowValues.put(metric,\n-              ((FixedByteSingleColumnSingleValueReaderWriter) columnIndexReaderWriterMap.get(metric)).getDouble(docId));\n           break;\n         default:\n           throw new UnsupportedOperationException(\"unsopported metric data type\");\n       }\n     }\n\nfor (String metric : dataSchema.getMetricNames()) {\nint dicId =\n((FixedByteSingleColumnSingleValueReaderWriter) columnIndexReaderWriterMap\n.get(metric)).getInt(docId);\nObject rawValue = dictionaryMap.get(metric).get(dicId);\nrowValues.put(metric, rawValue);\n}\n+\n     rowValues.put(\n         outgoingTimeColumnName,\n         dictionaryMap.get(outgoingTimeColumnName).get(\n\n```\n. When pinot build segment, it store the dicId for metric field instead of value.\n. ",
    "fx19880617": "I think this is a backward compatible with v1 api, we should change this, but make sure internal pinot-broker MP is not broken.\n. Hi, could you provide the number of server instances you have, and how many replicas of your data? \n. Since you have 3 replications, when you shut down one node, will query\nresults consistent? Or this only happens when you restart one node?\nIf the later scenario, maybe the reason is brokers don't reconnect to\nserver node. Another quick validation is bouncing brokers to see if the\nresults match.\nOn Wednesday, July 1, 2015, dongyanfeng notifications@github.com wrote:\n\nI found a phenomenon, help to think about this question\u3002\nSet the replication value is 3, there are three kinds of query are values.\nSet the replication value is 2, there are two kinds of query are values.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/linkedin/pinot/issues/25#issuecomment-117935745.\n\n\nXiang Fu\nSenior Software Engineer\nLinkedIn Corp.\nMountain View, CA, USA\nMobile:1-678-667-6968\n. Should be push to controller always, just use different protocol in http header. One is real segment, another is metadata only.\n. For now we have one brokerResource in IdealStates, if we want to use full-auto, then we may need to create idealStates per brokerTenants I think.\n. I checked the commit, I think it's fine.\nNeed to fix some vm issue in travis for integration tests though.\n. I'm hitting an issue of consumer config initialization. The only workable way is to upgrade kafka version.\nThis is the stacktrace:\n2016/03/20 09:08:29.669 ERROR [HelixStateTransitionHandler] Exception while executing a state transition task testTable_REALTIME_1458464909287_0__ALL__1458464909320\njava.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.apache.helix.messaging.handling.HelixStateTransitionHandler.invoke(HelixStateTransitionHandler.java:344)\n    at org.apache.helix.messaging.handling.HelixStateTransitionHandler.handleMessage(HelixStateTransitionHandler.java:290)\n    at org.apache.helix.messaging.handling.HelixTask.call(HelixTask.java:84)\n    at org.apache.helix.messaging.handling.HelixTask.call(HelixTask.java:41)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NoSuchMethodError: scala.Predef$.augmentString(Ljava/lang/String;)Ljava/lang/String;\n    at kafka.utils.VerifiableProperties.getIntInRange(VerifiableProperties.scala:75)\n    at kafka.utils.VerifiableProperties.getInt(VerifiableProperties.scala:58)\n    at kafka.utils.ZKConfig.(ZkUtils.scala:749)\n    at kafka.consumer.ConsumerConfig.(ConsumerConfig.scala:90)\n    at kafka.consumer.ConsumerConfig.(ConsumerConfig.scala:94)\n    at com.linkedin.pinot.core.realtime.impl.kafka.KafkaHighLevelStreamProviderConfig.getKafkaConsumerConfig(KafkaHighLevelStreamProviderConfig.java:142)\n    at com.linkedin.pinot.core.realtime.impl.kafka.KafkaConsumerManager.acquireConsumerAndIteratorForConfig(KafkaConsumerManager.java:82)\n    at com.linkedin.pinot.core.realtime.impl.kafka.KafkaHighLevelConsumerStreamProvider.start(KafkaHighLevelConsumerStreamProvider.java:64)\n    at com.linkedin.pinot.core.data.manager.realtime.RealtimeSegmentDataManager.(RealtimeSegmentDataManager.java:132)\n    at com.linkedin.pinot.core.data.manager.realtime.RealtimeTableDataManager.addSegment(RealtimeTableDataManager.java:117)\n    at com.linkedin.pinot.server.starter.helix.HelixInstanceDataManager.addSegment(HelixInstanceDataManager.java:195)\n    at com.linkedin.pinot.server.starter.helix.SegmentOnlineOfflineStateModelFactory$SegmentOnlineOfflineStateModel.onBecomeOnlineFromOfflineForRealtimeSegment(SegmentOnlineOfflineStateModelFactory.java:125)\n    at com.linkedin.pinot.server.starter.helix.SegmentOnlineOfflineStateModelFactory$SegmentOnlineOfflineStateModel.onBecomeOnlineFromOffline(SegmentOnlineOfflineStateModelFactory.java:98)\n    ... 12 more\n2016/03/20 09:08:29.679 ERROR [StateModel] Default rollback method invoked on error. Error Code: ERROR\n. Thanks JF, updated!\n. Updated!\nThanks Mayank!\n. As you said, let controller take the url only and controller would handle download data  and then assignment. This is the simplest way based on current code structure.\nWe may also think of modify segment push job. So we can POST the segment metadata + download url to controller, so controller won't need to handle any data transmission.\n. @dhaval2025 if firewall is setup between hadoop cluster and pinot cluster, then we still need to push segment tar to controller and store them in nfs and let servers download them from controller nodes.\n. yes, I would like to keep the segment assignment logic in controller, just to give flexible options for servers to download the data, through/ not through controller.\n. @icefury71\nBreaking down to tasks\n1. Abstract segment fetcher layer to be pluggable to support different segment fetchers (http/s3/hdfs/webhdfs).\n2. Implement webhdfs segment fetcher.\n3. Add a new segment push protocol on controller to accept segment metadata Json only. Need to double check with existing validation logic to make sure it won't break that.\n4. Modify existing segment push job to POST segment metadata Json with a corresponding download url.\n. This is the PR for 1.Abstract segment fetcher layer to be pluggable to support different segment fetchers (http/s3/hdfs/webhdfs).\nhttps://github.com/linkedin/pinot/pull/105\n. Close as already merged\n. Addressed all the comments from Kishore and Subbu.\n. Adding \nzookeeper.connection.timeout.ms =10000\nzookeeper.sync.time.ms=2000\nfor default kafka high level consumer config.\n. Close as already merged\n. close as already pushed.\n. Nice! Thanks for update!\n. Pinot partition, if we have 2 servers in same replica\n. @jfim Updated\n. Going to split this PR \n. Close as already merged\n. same:\nselect * from baseballStats limit 10,20\n10 is the offset, 20 is the number of rows.\n. There is no global docId specified in Pinot.\nIf you want same results, you can try \"select * from baseballStats order by [some column] limit 10,20\".\n. Yes, this is one commit ahead master.\n. That's the option 1, basically we have a zkclient per pinot client.\n. close as supported now\n. Updated.\n. The other alternative I can think of is to drop current in_progress segment then restart it.\nFor this, we need to reinit kafka consumer to make sure we are consuming from the offsets that previous segment committed.\n. One thing from ops side, we need to handle upstream kafka topic expansion automatically.\n. @mcvsubbu, kafka could handle topic partition expansion without downtime, but not partition shrink.\nSince I have multiple realtime tables on same host and it maybe hard to do this maintenance. \n. Also, since we are using simple consumer, it would be better to open api to reset consumer offset to a particular position. So we can skip some bad data or re-consume some old data.\n. Adding a test to get intermediate query results and then use DefaultReduceService and BrokerReduceService to reduce the results and compare them with each other.\n. if we want to support , we should do  any\n. LGTM\n. During segment creation, when my raw data has Double.NaN.\n. close as fixed by bump up fastutil version\n. Test passed by RealtimeClusterIntegrationTest.\nI manually adding condition:\nif (_segment instanceof RealtimeSegment) {\n    baseFilterOperator = new ScanBasedFilterOperator(ds, startDocId, endDocId);\n} before:  https://github.com/linkedin/pinot/blob/master/pinot-core/src/main/java/com/linkedin/pinot/core/plan/FilterPlanNode.java#L118\nSo all the filtering query will use ScanBasedFilterOperator, not BitmapBasedFilterOperator.\nRealtimeClusterIntegrationTest failed before this patch.\n. More than 1M rows:)\n. In this case, the queries are select + filtering.\n. Yes, broker will merge data from all the servers then send back, but this may eat too much memory for a single query.\n. Yes, for presto mostly and I need to get this cursor feature in java client implementation. \nMy feeling is it's fine to do so as broker could choose when to push down the request to a server.\nAlso I'm thinking is it possible to write intermediate query response to disk on broker and mmap them for merger or stream out.\n. Adding unit test for realtime segment with/without inverted indexes by using ScanBasedFilterOperator and BitmapBasedFilterOperator.\nAlso adding unit test for RangePredicate with match and mismatch cases.\n. lgtm\n. Very impressive write up @mayankshriv !\nOverall looks good to me, have two points here:\n1. Will function be able to take multiple constants as parameters? like convert_from_timezone_to(ts, 'UTC', 'PDT') ? The reason is antlr parsed column name to IDENTIFIER and constant(string/numbers) to literal. \n   This may causing backward compatible issue for PQL query parser.\n2. Also I think the semantics of \"select func(...) AS some_func ...\" need to be support in this case to make results naming more meaningful.\n. Hi @mayankshriv, \nTo answer your question: \n\n\nCan specify the use-case for each of aggregation function, where we would like to aggregate on MV columns.\n\n\nFor use-cases, we have a use cases that required unique counting and group by both on multi-value columns. Say one user has multiple experiments, and multiple trips, instead of flattening both, I will explode my table row size. So I would like to do group by on the fly.\nAlso there is time series use case, which for the same dimension I need to access raw records as long as put on some aggregation functions. Think about I can do avg (trip_fare) for a user across arbitrary days window, if my data is daily \"aggregated\" to an array.\nLike:\nDAY | user_id | trip_fare\n1      |  aaa      | [1,2,3,1]\n2      |  aaa      | [1]\n3      |  aaa      | [10]\navg(trip_fare)  where DAY BETWEEN 1 AND 2 ==> 1.6\navg(trip_fare)  where DAY BETWEEN 1 AND 3 ==> 6\navg(trip_fare)  where DAY BETWEEN 2 AND 3 ==> 5.5\nIt's kind of trivial to support all the aggregation functions after unique counting is supported.\nI also have use case which is under discussion to index gpslogs(Very huge, more than 6B points daily). There are a lot of redundancy to store user_id, trip_id multiple times in a single trip.\n\n\nAlso, lets describe the semantics for each of those functions?\n\n\nFor each function:\ne.g we have a int array columnA with 100 rows, each row has two values [1,2].\ncount: This is not really implemented as we rewrite the count(col) to count(*) during query parser. But want to support it to return total number of entries for a selected column.\nsum: sum up all the values in selected rows. sum(columnA) = 300\navg: sum/count(all the multi-values): avg(columnA) = 300/200 = 1.5\nmin/max: one value that is the min/max of all the values. min(columnA)=1, max(columnA) =2 \nminmaxRange: max-min. minmaxRange(columnA)=1\ndistinctCount: unique values across all the values, distinctCount(columnA) = 2\npercentile: percentile based on all the values: percentile50(columnA) = 1;percentile90(columnA) = 2;\n\n\nHow does this change impact performance of both (existing) SV columns and (new) MV columns? And how do we plan to measure throughput latency impacts.\n\n\nFrom my tests. This change doesn't impact SV columns perf, though there will be extra if check for each block, but I don't foresee any visible impact. For MV columns, we have predefined block, but need to read 1 row of multi-value for every selected docId. This will definitely be slow, but we will get benefit when we have filtering there. From data model part, we can compress multiple rows with same dimensions together and make metricsFields as multi-value fields(this is actually dimension and time based rollup).  But we need to prepare it in Hadoop before loading data to Pinot.\n. Updated the pr\n. Still keep the interface for AggregationFunction.\nAnd make new implementations for each aggregation function.\n. updated, waiting for another round of checks\n. waiting for this diff for one year long:)\n. LGTM\n. fixed in https://github.com/linkedin/pinot/pull/732. any workaround here for achieving this?. the old logs are flushed out, what I've seen is zkclient got connected and disconnect immediately.\n2017/11/05 23:51:09.994 INFO [ClientCnxn] Opening socket connection to server hostname/xx.xxx.xx.xxx:2181. Will not attempt to authenticate using SASL (unknown error)\n2017/11/05 23:51:09.994 INFO [ClientCnxn] Socket connection established to hostname/xx.xxx.xx.xxx:2181, initiating session\n2017/11/05 23:51:10.003 INFO [ClientCnxn] Session establishment complete on server hostname/xx.xxx.xx.xxx:2181, sessionid = 0x2a5b3a45884667a2, negotiated timeout = 30000\n2017/11/05 23:51:10.015 INFO [ZkClient] zookeeper state changed (SyncConnected)\n2017/11/05 23:51:10.029 INFO [ClientCnxn] Unable to read additional data from server sessionid 0x2a5b3a45884667a2, likely server has closed socket, closing socket connection and attempting reconnect\n2017/11/05 23:51:10.141 INFO [ZkClient] zookeeper state changed (Disconnected)\n2017/11/05 23:51:10.262 INFO [ClientCnxn] Opening socket connection to server hostname/xx.xxx.xx.xxx:2181. Will not attempt to authenticate using SASL (unknown error)\n2017/11/05 23:51:10.262 INFO [ClientCnxn] Socket connection established to hostname/xx.xxx.xx.xxx:2181, initiating session\n2017/11/05 23:51:10.272 INFO [ClientCnxn] Session establishment complete on server hostname/xx.xxx.xx.xxx:2181, sessionid = 0x2a5b3a45884667a2, negotiated timeout = 30000\n2017/11/05 23:51:10.285 INFO [ZkClient] zookeeper state changed (SyncConnected)\n2017/11/05 23:51:10.307 WARN [ClientCnxn] Session 0x2a5b3a45884667a2 for server hostname/xx.xxx.xx.xxx:2181, unexpected error, closing socket connection and attempting reconnect\njava.io.IOException: Broken pipe\n    at sun.nio.ch.FileDispatcherImpl.write0(Native Method)\n    at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)\n    at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)\n    at sun.nio.ch.IOUtil.write(IOUtil.java:65)\n    at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)\n    at org.apache.zookeeper.ClientCnxnSocketNIO.doIO(ClientCnxnSocketNIO.java:117)\n    at org.apache.zookeeper.ClientCnxnSocketNIO.doTransport(ClientCnxnSocketNIO.java:366)\n    at org.apache.zookeeper.ClientCnxn$SendThread.run(ClientCnxn.java:1081)\n2017/11/05 23:51:10.419 INFO [ZkClient] zookeeper state changed (Disconnected)\n. @jamesyfshao FYI.. For the storage interface, I'm actually thinking of building Pinot API on top of Hadoop org.apache.hadoop.fs.FileSystem API directly,\nwhich already provides local FS/HDFS/ViewFS/S3/Azure implementation. So we don't need to reinvent the wheel.\n. Agree that a clean api for deep storage might be better as we could distinguish the usage for local data ops and deep storage. . Also mentioned in #3364, there is a backward-incompatible issue of config consumer.factory.class.name. This was not a required config when we create realtime tables.\nCould we add a default value for this or infer it from somewhere?\nBelow are typical configs are are using:\nFor highlevel consumer:\n  \"streamConfigs\": {\n    \"stream.kafka.decoder.class.name\": \"com.uber.uPinot.decoder.HeatpipeKafkaMessageDecoder\",\n    \"streamType\": \"kafka\",\n    \"stream.kafka.hlc.zk.connect.string\": \"kafka-zookeeper\",\n    \"realtime.segment.flush.threshold.size\": \"1000000\",\n    \"stream.kafka.consumer.type\": \"highLevel\",\n    \"realtime.segment.flush.threshold.time\": \"18000000\",\n    \"stream.kafka.consumer.prop.auto.offset.reset\": \"smallest\",\n    \"stream.kafka.topic.name\": \"some-topic\"\n  },\n\nFor simple consumer\n  \"streamConfigs\": {\n    \"stream.kafka.decoder.class.name\": \"com.uber.uPinot.decoder.HeatpipeKafkaMessageDecoder\",\n    \"streamType\": \"kafka\",\n    \"stream.kafka.hlc.zk.connect.string\": \"kafka-zookeeper\",\n    \"realtime.segment.flush.threshold.size\": \"1000000\",\n    \"stream.kafka.consumer.type\": \"simple\",\n    \"realtime.segment.flush.threshold.time\": \"18000000\",\n    \"stream.kafka.broker.list\": \"kafka-broker\",\n    \"stream.kafka.consumer.prop.auto.offset.reset\": \"largest\",\n    \"stream.kafka.topic.name\": \"sometopic\"\n  }. a hotfix: #3380. hmm,\n\nI could reproduce it from my mac and linux.\nAlso happens on both java 7 and 8.\nI've also seen similar issue here: https://github.com/linkedin/pinot/issues/2567\n. Cool! I will close this one. . Updated the PR with a test.\nAlso for the retryPolicy in HelixHelper\nNew a retry policy every time for each helix update could be expensive, but I also suspect there could be a race condition for modifying _minDelayMs when multiple threads are using this policy. \nAnother major concern here is that once controller/server process is running long time enough, any attempt retry will be 32 secs * 5 times in this case.\n. Agree with @jfim, adding a parameter inside BaseRetryPolicy's  method\n\nabstract long getNextDelayMs()\n\nshould be the ideal fix.\nThanks!. Close as fixed in #2713 . Sounds good, we could change for that order. Also we need to expose a health check endpoint through api resources.. Not with helix upgrade. We are still using helix 0.6.8.\nI think this issue is there for a while. We recently added more data quality monitoring, hence we discovered this issue during rolling restart.. > rver startup, we can ensure that the server doesn't shutdown until the segments its serving get offlined in EV. ie, after https://github.com/linkedin/pinot/blob/master/pinot-server/src/main/java/com/linkedin/pinot/server/starter/helix/HelixServerStarter.java#L219, we could wait till the segments are offline; that way, when the server comes back up, EV does not have any pointers to it and broker won't route to it.\nI think server will mark itself as shutdownInProgress, which forces broker to ignore it from building routing table. So we should be fine.. Fixed in https://github.com/linkedin/pinot/pull/3253. @kishoreg could you take another pass?. > Hi @fx19880617 ,\n\nI apologize for the backwards incompatible change but would like to discuss whether you would like to migrate to the new approach. I will happily support the migration effort/spend time with your team to help. Definitely feel free to chime in if you want the old way to still be supported.\nI have a couple of design reasons for making this backwards incompatible change.\n\nI wanted Pinot internals to have the final say about the directory structure where segments are deposited. This way, we can enable features (later) such as retentionmanager for deep storage, versioning, etc. If clients have the final say about how segments are stored, this will be much more difficult.\nBecause of the first assumption, our initial way to make sure we have the final say during segment upload is to first copy the segment to the local controller dir (thus why the local temp dir is needed) and then upload the segment to the final uri location based on the data dir configured and additional paths after that.\nThe reason I have left it to download first to local and then upload is for example, if you are uploading across different hadoop clusters. There could be different authentication needed, so we may need to support multiple types of hadoop filesystems. I am leaving that flexibility for now and hope to potentially add a direct move later (though with encryption, etc, might be a little complex)\n\nWhat are your thoughts?\n\nOverall this approach sounds good, we also need to use hdfs for simple consumer segment upload. \nOne concern about current provide is that it's per cluster based, not per table based. Currently we don't own users' data, which means that they are using their own hdfs quota, if we move all those stuffs under pinot, there could be some simple bad use cases quickly exhausted your namespace(e.g. user pushing too many small segments, small segment flush size for LLC segments).\nFor the quickfix, we could keep the original behavior and add a flag in header to indicate moving data to PinotFS for storage.. @jenniferdai updated the PR for a quick fixing. This requires segment push job to add a customer header in order to use PinotFS for persistence, this should keep backward compatibility for existing segment push jobs.. 1. Temp directory is there for a while, and we use it to extract segment metadata right? What we don't want is segment movement. This actually changed the contract with our customers and involves a lot of effort to set up quota and chargeback.\n\nNot really. Since moving segments to PinotFS is a new feature added, we should keep this change backward compatible and upgrade the customer pipelines gradually.\n. > For 1, we can propagate that header through the code so that it doesn't do the move as well.\nI understand. We can keep #2 as is. Do you mind if I set that header inside the segment uri push job when we create the segment uri request?\n\n\n\nFor 1, I think so, however we expect default is to not move which is the major reason we do URI push.\nFor 2, we don't use existing open-source push job. It's hard to upgrade client then server.. Sounds good. Feel free to implement this.  \nI feel we should keep this  \"not moving\" as one \"feature\" to support for a certain amount of time. \nThere must be other users (heard slack is using S3) who also depends on this.\n. Adding a V2 endpoint is better. It will help client upgrade/migration.. Duplicated as https://github.com/linkedin/pinot/pull/3326. > @fx19880617 want to confirm one last time, are you using this method inside fileuploaddownloadclient? i've changed it to the new endpoint\n\npublic static URI getUploadSegmentHttpURI(String host, int port) throws URISyntaxException {\nreturn getURI(HTTP, host, port, SEGMENT_PATH);\n\nHi, our push job will use this client, could we keep a backward compatible endpoint? Like sendSegmentUriV1/sendSegmentUriV2?\nAlthough it's probably fine for us to stick with old client for a while.\nThe scala code snippet of how we use it:\nval controllerURI = FileUploadDownloadClient.getUploadSegmentHttpURI(host, Integer.parseInt(port))\nval responseCode = fileUploadDownloadClient.sendSegmentUri(controllerURI, uri)\n. > @jenniferdai We should keep the new one as default. We can bring back the old one with name like getDeprecatedUploadSegmentHttpURI(). @fx19880617 Any thoughts?\nI think my major concern is that if people blindly upgrade both server and client. Then segment URI push will still fail since v2 api on controller is not backward compatible with v1 api. \nI'm open to change my code to use the old api, however not sure if this will break other users.. Sounds good, I think per table based config should be good enough. \nWe have many tables on same tenant, so it's hard to find which table really hit this issue.. it's HLC, just our log is pretty messy and it's crash during bootstrap, which many tables are persisting also.\nI think it's good to put at schema however it may impact existing users if they just slightly exceeds the new threshold. . Had an offline discussion with @Jackie-Jiang about where to put this: dictionary persistence/message decoder. I still have some data consistency concern/backward-compatibility for existing use cases, e.g. how to figure out the max entry length for each column for every table.\nMeanwhile I'm playing with non-dictionary encoding, but also seeing other issue https://github.com/linkedin/pinot/issues/3373.\n. This is the error we got during persist a non-dictionary column. hmm, does it mean that I cannot set a string column to non-dict or just the current consuming segment is not queryable ?. based on my current observation, seems that all the values are null for non-dict string column.. this happens after upgrade to the new build(our previous release is about 4 month back).\nFor this HLL column, the size is always the same length: 10944. (From the segment with dictioanry in metadata.properties)\nI tuned the segment size a bit, with small flush size, dictionary will work, but we will quickly have too many segments. which will cause issue in zk to store idealstates.\n. Thanks @mcvsubbu, I think that #3392  helped the memory issue. I've seen the server more stable now. There are still some issue(some servers still hit oom in 12 hours ) there. Will update later on.. Fixing tests and added backward compatibility checks.. Another point for realtime ingestion is that we could put trimming logic into message decoder to reduce memory footprint.. @jamesyfshao ^^. Overall looks good to me! \nFor testing part, will SplitCommitIntegrationTest have kafka/controller/server setup and test data ingestion?\nDo you have the detailed plan and task splits for development so @chenboat  could also help? Maybe we could split by controller & server.\nMy suggestion is that we could refactor all the localFS operations to using PinotFS APIs. Then try out new implementations like HDFS.\n. > > -Then, we commit the segment metadata. In the first pass, we will still need to download the segment from deep storage or send the entire segment with .tar.gz in order to to get the segment metadata.\n\nWhy do we need to download the segment again to get segment metadata info? Which kind of info we can get from a download? Can we get them the query parameters of segCommitEnd request?\n\nI think this is the first phase which we follow the same steps as offline segment push to download segment from remote storage in controller and load segment metadata from it.\nEventually we should be able to get rid of controller downloading segments and only push segment metadata.\n. replicasPerPartition is the # replication of this table(Ensure the #servers in server tenant is larger than #replicas) when you create the table.\n. replicasPerPartition is only used with Kafka simple consumer (\"stream.kafka.consumer.type\":\"simple\"). In this case, it's same as replication.. Yes, seems this only solved the dictionary creation part. I ingestion stopped alerts and found this issue. I will update the SegmentLocalFSDirectory.getNewIndexBuffer() part.. The exception stack is somehow swallow. \nMy observation is, when we add new servers into the realtime tenant. The znode under path: /PROPERTYSTORE/CONFIGS/INSTANCE/{hostname} is not existed, which throws the exception. \nNeed to further check the scenario that zNode is existed but without the kafka group/partition mapping set there.. will change to -Infinity\n. No, in: BAggregationFunctionOperator: line72-77, if block is null, aggregate(...) method won't be called.\n. There are two scenarios we will hit realtime segment shutting down:\n1. server shutdown\n2. realtime table deletion.\nI think in both cases, we should be fine.\n. This is to periodically update the metrics inside segmentStatusTask, which will be running every 1mins. \nCurrently we have no visibility on what's going on for realtime segment.\n. We default using \"ALL\" and we always assign partitionId = 0 to each instance when there is only one partition in a replica.\nI'm fine with assign only parititonId in segment name. Just the segment naming convention won't be backward compatible.\nThis won't change routing table build, so the broker logic is fine.\n. OK\uff0c then I will always have partitionId as numerical value then\n. Good point, I will adjust msgEventTimeLagInSeconds based on incomingTimeGranularity.\n. Will do.\n. Addressed comment\n. In this case, TimeUnit will have a general interface to take DateTime and convert it to it's own time value.\n. yes, 1970 as default null value.\n. _schema.getTimeColumnName() will give outgoing time column name, which is not in GenericRow. \nSo will check here to get value first, then do timeConverter just before setting fieldMap\n. method releaseConsumerAndIterator will not close consumers currently been acquired or   consumers haven't been released for more than 1 min.\n. will do\n. done\n. if we post a json file, how do u know it's a json not the entire segment tar?\n. https://github.com/linkedin/pinot/pull/130\n. Mostly for both health check and externalView to be in offline status.\nI've observed many cases when I'm bouncing broker, the client side with see a short period that query response is empty.\nI tried to setup both haproxy pinging health check  and also register an externalView listener. Since we are stopping too fast, either of this approach will treat this broker is still alive, but actually getting empty results.\nThe clean way here is to set idealstates of this broker to offline meanwhile still serving queries. Then  wait for externalView's reflection to offline then shutdown broker.\nAlso a configurable fixed timeout is necessary if I'm using haproxy to do health check.\n. - 10 secs will solve the issue from my observation.\n  Will make a different pr for this.\n. done\n. done\n. done\n. done\n. done\n. done\n. done for bad request.\n. implemented upload types for uri/json/tar.\n. From https://github.com/linkedin/pinot/blob/master/pinot-style.xml, there is not indentation for switch/case.\n. Done.\n. Done.\nI think this part is out-dated, we may need to update pinot-style.xml.\n. Done.\n. Updated.\n. updated\n. updated\n. Done. \n. This only happens during realtime segment indexing.\nLet me explain why we need this.\n1. Since this column is a sorted column(technically is also an inverted index). So we should create inverted index on the fly as data are not sorted in realtime segment buffer.\n2. When we persist a segment to disk, during the persistence, we need to sort this column, it relies on the inverted index to give the iterator for matching docId. This part will be very expansive(#cardinality * #rows) if we don't have inverted index.\n3. To address your concern, this column shouldn't create inverted index after persistence, so no inverted index will be created or loaded after the persistence finished.\n. Added.\n. Here you go.\n. Shall we make this as a zookeeper listener, this class will refresh itself after leader changes.\n. make sense.\n. will remove this, i moved this logic to get it from schema\n. This is per block one. Then I will change fetchMultiValueDictIds to allow passing in an int[] for dictIdArray\n. Removed.\n. This is used for getting max number of entries for a multi-value column. Then init the temp array. Since that array is cached, this method will only be called once per column.\n. refactor this out to method: handleDistinctCountFunc.\n. refactor this out to method: handleDefaultAggrFunc.\n. Done. I'm really bad at naming:)\n. done\n. done\n. done\n. done\n. like sum all the values for a field, this can help reduce number of rows in dimension.\ninstead of do \nA | 1\nA | 2\nA | 3\nI can do \nA | [1,2,3]\nThis will improve my filtering perf and save storage.\n. Will do.\n. What about ISO?\n. in terms of this, shall we just append /helixClusterName/PROPERTY_STORE after zk string?\n. Seems that we need to use propertyStore before HelixManager connected. Will merge this for now.\n. delete this.\n. Please add a TODO here to fix FastHll function. And handle HyperLogLog object merge if log2m values are different.\n. delete this\n. delete this \n. delete this \n. delete this \n. delete this \n. getSegmentFetcherMap()?. In this interface, how do we implement the copy between two different fileSystem? Like HDFS's copyToLocal/copyFromLocal.. For example, Pinot Server should be able to download segment from hdfs/s3 to local then load it. Also realtime server may copy local persisted segments from/to hdfs/s3.. No, ServiceStatus.getServiceStatus() doesn't provide such functionalities. . Will do. Will calculate the time to sleep.. will do. will do . will do. Added logging info for loading progress.. How about adding this feature in a separated PR, since health check is a blocker for server starter. This is a feature for easy troubleshooting.. Why we need to do this? This is a backward-incompatible change and breaks the our production pipeline.\nWhen we upload a segment with uri type, I need to save zkDownloadUri same as currentSegmentLocationURI. . Yes, the major problem for us is that we don't have NAS mounting to all the controllers/servers for sharing segments.  All the segments are saved remotely on HDFS.\nThat's why our upload segment request will only contain segment download uri. We also expect the server to directly download segments from HDFS directly. Also for now we don't expect controller to save those data to HDFS, major concern is our HDFS quota.\n. hmm, so the downloadUri in zk will be override again ?. Only logging per table level progress, when full segments bootstrap is not completed on time.. shall this be if  (!moveSegmentToFinalLocation) ?. Hi, we are getting backward-incompatible issue for this. \n\nconsumer.factory.class.name\n\nis not a required config for old realtime tables. Could we infer this value?\nBelow are typical configs are are using:\nFor highlevel consumer:\n\"streamConfigs\": {\n        \"stream.kafka.decoder.class.name\": \"com.uber.uPinot.decoder.HeatpipeKafkaMessageDecoder\",\n        \"streamType\": \"kafka\",\n        \"stream.kafka.hlc.zk.connect.string\": \"kafka-zookeeper\",\n        \"realtime.segment.flush.threshold.size\": \"1000000\",\n        \"stream.kafka.consumer.type\": \"highLevel\",\n        \"realtime.segment.flush.threshold.time\": \"18000000\",\n        \"stream.kafka.consumer.prop.auto.offset.reset\": \"smallest\",\n        \"stream.kafka.topic.name\": \"some-topic\"\n      },\nFor simple consumer\n\"streamConfigs\": {\n        \"stream.kafka.decoder.class.name\": \"com.uber.uPinot.decoder.HeatpipeKafkaMessageDecoder\",\n        \"streamType\": \"kafka\",\n        \"stream.kafka.hlc.zk.connect.string\": \"kafka-zookeeper\",\n        \"realtime.segment.flush.threshold.size\": \"1000000\",\n        \"stream.kafka.consumer.type\": \"simple\",\n        \"realtime.segment.flush.threshold.time\": \"18000000\",\n        \"stream.kafka.broker.list\": \"kafka-broker\",\n        \"stream.kafka.consumer.prop.auto.offset.reset\": \"largest\",\n        \"stream.kafka.topic.name\": \"sometopic\"\n      }\n. I think maxBytes makes more sense and could be referenced by other data types.. Also is it possible to make this only work for newly created schema, but keep the original behavior for old schemas just for the sake of backward compatibility. Otherwise we need to scan max length of each column to override the schema for existing production use cases.\n. This will be triggered whenever new segment is added.\nIn SegmentFetcherAndLoader.addOrReplaceOfflineSegment(...), we always get the segment metadata. which will always call acquireSegment(...).\n. @chenboat I guess this is why we are getting many error logs ^^ it's more like a false alarm.. @sunithabeeram @Jackie-Jiang ^^. Maybe StringUtils.removeEnd(...)?\n[https://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/StringUtils.html#removeEnd-java.lang.String-java.lang.String-]. ",
    "left11": "the segments d1 generate seems to conflict with d2's\nd1's segments \n/user/pinot/pv-segments/20150629/kuaizhan-pvs_16615_16615_1.tar.gz\n/user/pinot/pv-segments/20150629/kuaizhan-pvs_16615_16615_2.tar.gz\n/user/pinot/pv-segments/20150629/kuaizhan-pvs_16615_16615_3.tar.gz\n.......\nd2's segments \n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16615_0.tar.gz\n /user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16615_1.tar.gz\n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16616_4.tar.gz\n/user/pinot/pv-segments/20150630/kuaizhan-pvs_16616_16616_10.tar.gz\n......\nboth has  /user/pinot/pv-segments/20150630/kuaizhan-pvs_16615_16615_1.tar.gz,  the 16615 is the field days_since_epoch? \n. ",
    "oferoh": "Thank you Kishoreg for helping \nas you can the package install correctly \n\nhere is the output \n./lib/antlr-2.7.7.jar\n./lib/antlr-3.4.jar\n./lib/antlr-runtime-3.4.jar\n./lib/args4j-2.32.jar\n./lib/async-http-client-1.9.22.jar\n./lib/avro-1.7.6.jar\n./lib/commons-beanutils-1.8.3.jar\n./lib/commons-beanutils-core-1.8.0.jar\n./lib/commons-cli-1.2.jar\n./lib/commons-codec-1.6.jar\n./lib/commons-collections-3.2.1.jar\n./lib/commons-compress-1.4.1.jar\n./lib/commons-configuration-1.6.jar\n./lib/commons-csv-1.0.jar\n./lib/commons-digester-1.8.jar\n./lib/commons-fileupload-1.2.2.jar\n./lib/commons-httpclient-3.1.jar\n./lib/commons-io-2.1.jar\n./lib/commons-lang-2.6.jar\n./lib/commons-lang3-3.1.jar\n./lib/commons-logging-1.1.1.jar\n./lib/commons-math-2.1.jar\n./lib/commons-validator-1.4.0.jar\n./lib/fastjson-1.1.24.jar\n./lib/fastutil-6.5.9.jar\n./lib/guava-11.0.2.jar\n./lib/helix-core-0.6.4.jar\n./lib/httpclient-4.1.3.jar\n./lib/httpcore-4.2.4.jar\n./lib/jackson-annotations-2.2.3.jar\n./lib/jackson-core-2.2.3.jar\n./lib/jackson-core-asl-1.8.8.jar\n./lib/jackson-databind-2.2.3.jar\n./lib/jackson-dataformat-csv-2.2.3.jar\n./lib/jackson-dataformat-smile-2.2.3.jar\n./lib/jackson-dataformat-xml-2.2.3.jar\n./lib/jackson-dataformat-yaml-2.2.3.jar\n./lib/jackson-mapper-asl-1.8.8.jar\n./lib/jackson-module-jaxb-annotations-2.2.3.jar\n./lib/JavaFastPFOR-0.0.13.jar\n./lib/javax.servlet-3.0.0.v201112011016.jar\n./lib/javax.servlet-api-3.0.1.jar\n./lib/jetty-ajp-8.1.14.v20131031.jar\n./lib/jetty-continuation-8.1.8.v20121106.jar\n./lib/jetty-http-8.1.8.v20121106.jar\n./lib/jetty-io-8.1.14.v20131031.jar\n./lib/jetty-security-8.1.8.v20121106.jar\n./lib/jetty-server-8.1.8.v20121106.jar\n./lib/jetty-servlet-8.1.8.v20121106.jar\n./lib/jetty-util-8.1.14.v20131031.jar\n./lib/jetty-webapp-8.1.8.v20121106.jar\n./lib/jetty-xml-8.1.8.v20121106.jar\n./lib/jline-0.9.94.jar\n./lib/joda-time-2.0.jar\n./lib/jopt-simple-3.2.jar\n./lib/json-20080701.jar\n./lib/jsr305-1.3.9.jar\n./lib/kafka-clients-0.8.2.0.jar\n./lib/kafka_2.10-0.8.2.0.jar\n./lib/libthrift-0.9.1.jar\n./lib/log4j-1.2.17.jar\n./lib/lz4-1.2.0.jar\n./lib/metrics-core-2.2.0.jar\n./lib/netty-3.10.3.Final.jar\n./lib/netty-all-4.0.27.Final.jar\n./lib/org.restlet-2.2.1.jar\n./lib/org.restlet.ext.fileupload-2.2.1.jar\n./lib/org.restlet.ext.jackson-2.2.1.jar\n./lib/org.restlet.ext.jetty-2.2.1.jar\n./lib/paranamer-2.3.jar\n./lib/pinot-api-0.016.jar\n./lib/pinot-broker-0.016.jar\n./lib/pinot-common-0.016.jar\n./lib/pinot-controller-0.016.jar\n./lib/pinot-core-0.016.jar\n./lib/pinot-hadoop-0.016.jar\n./lib/pinot-perf-0.016.jar\n./lib/pinot-server-0.016.jar\n./lib/pinot-tools-0.016.jar\n./lib/pinot-transport-0.016.jar\n./lib/RoaringBitmap-0.4.9.jar\n./lib/scala-library-2.10.4.jar\n./lib/slf4j-api-1.7.7.jar\n./lib/slf4j-log4j12-1.7.7.jar\n./lib/snakeyaml-1.12.jar\n./lib/snappy-java-1.0.5.jar\n./lib/ST4-4.0.4.jar\n./lib/stax-api-1.0-2.jar\n./lib/stax2-api-3.1.3.jar\n./lib/stringtemplate-3.2.1.jar\n./lib/swagger-ui-2.1.8-M1.jar\n./lib/tyrus-standalone-client-1.5.jar\n./lib/woodstox-core-asl-4.2.0.jar\n./lib/xz-1.0.jar\n./lib/zkclient-0.1.jar\n./lib/zkclient-0.3.jar\n./lib/zookeeper-3.3.4.jar\n./repo/antlr/antlr/2.7.7/antlr-2.7.7.jar\n./repo/args4j/args4j/2.32/args4j-2.32.jar\n./repo/com/101tec/zkclient/0.3/zkclient-0.3.jar\n./repo/com/alibaba/fastjson/1.1.24/fastjson-1.1.24.jar\n./repo/com/fasterxml/jackson/core/jackson-annotations/2.2.3/jackson-annotations-2.2.3.jar\n./repo/com/fasterxml/jackson/core/jackson-core/2.2.3/jackson-core-2.2.3.jar\n./repo/com/fasterxml/jackson/core/jackson-databind/2.2.3/jackson-databind-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.2.3/jackson-dataformat-csv-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-smile/2.2.3/jackson-dataformat-smile-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-xml/2.2.3/jackson-dataformat-xml-2.2.3.jar\n./repo/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.2.3/jackson-dataformat-yaml-2.2.3.jar\n./repo/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.2.3/jackson-module-jaxb-annotations-2.2.3.jar\n./repo/com/github/sgroschupf/zkclient/0.1/zkclient-0.1.jar\n./repo/com/google/code/findbugs/jsr305/1.3.9/jsr305-1.3.9.jar\n./repo/com/google/guava/guava/11.0.2/guava-11.0.2.jar\n./repo/com/linkedin/pinot/pinot-broker/0.016/pinot-broker-0.016.jar\n./repo/com/linkedin/pinot/pinot-common/0.016/pinot-common-0.016.jar\n./repo/com/linkedin/pinot/pinot-controller/0.016/pinot-controller-0.016.jar\n./repo/com/linkedin/pinot/pinot-core/0.016/pinot-core-0.016.jar\n./repo/com/linkedin/pinot/pinot-server/0.016/pinot-server-0.016.jar\n./repo/com/linkedin/pinot/pinot-tools/0.016/pinot-tools-0.016.jar\n./repo/com/linkedin/pinot/pinot-transport/0.016/pinot-transport-0.016.jar\n./repo/com/thoughtworks/paranamer/paranamer/2.3/paranamer-2.3.jar\n./repo/com/yammer/metrics/metrics-core/2.2.0/metrics-core-2.2.0.jar\n./repo/commons-beanutils/commons-beanutils/1.8.3/commons-beanutils-1.8.3.jar\n./repo/commons-beanutils/commons-beanutils-core/1.8.0/commons-beanutils-core-1.8.0.jar\n./repo/commons-cli/commons-cli/1.2/commons-cli-1.2.jar\n./repo/commons-codec/commons-codec/1.6/commons-codec-1.6.jar\n./repo/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar\n./repo/commons-configuration/commons-configuration/1.6/commons-configuration-1.6.jar\n./repo/commons-digester/commons-digester/1.8/commons-digester-1.8.jar\n./repo/commons-fileupload/commons-fileupload/1.2.2/commons-fileupload-1.2.2.jar\n./repo/commons-httpclient/commons-httpclient/3.1/commons-httpclient-3.1.jar\n./repo/commons-io/commons-io/2.1/commons-io-2.1.jar\n./repo/commons-lang/commons-lang/2.6/commons-lang-2.6.jar\n./repo/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar\n./repo/commons-validator/commons-validator/1.4.0/commons-validator-1.4.0.jar\n./repo/io/netty/netty-all/4.0.27.Final/netty-all-4.0.27.Final.jar\n./repo/it/unimi/dsi/fastutil/6.5.9/fastutil-6.5.9.jar\n./repo/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar\n./repo/javax/xml/stream/stax-api/1.0-2/stax-api-1.0-2.jar\n./repo/jline/jline/0.9.94/jline-0.9.94.jar\n./repo/joda-time/joda-time/2.0/joda-time-2.0.jar\n./repo/log4j/log4j/1.2.17/log4j-1.2.17.jar\n./repo/me/lemire/integercompression/JavaFastPFOR/0.0.13/JavaFastPFOR-0.0.13.jar\n./repo/net/jpountz/lz4/lz4/1.2.0/lz4-1.2.0.jar\n./repo/net/sf/jopt-simple/jopt-simple/3.2/jopt-simple-3.2.jar\n./repo/org/antlr/antlr/3.4/antlr-3.4.jar\n./repo/org/antlr/antlr-runtime/3.4/antlr-runtime-3.4.jar\n./repo/org/antlr/ST4/4.0.4/ST4-4.0.4.jar\n./repo/org/antlr/stringtemplate/3.2.1/stringtemplate-3.2.1.jar\n./repo/org/apache/avro/avro/1.7.6/avro-1.7.6.jar\n./repo/org/apache/commons/commons-compress/1.4.1/commons-compress-1.4.1.jar\n./repo/org/apache/commons/commons-csv/1.0/commons-csv-1.0.jar\n./repo/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar\n./repo/org/apache/commons/commons-math/2.1/commons-math-2.1.jar\n./repo/org/apache/helix/helix-core/0.6.4/helix-core-0.6.4.jar\n./repo/org/apache/httpcomponents/httpclient/4.1.3/httpclient-4.1.3.jar\n./repo/org/apache/httpcomponents/httpcore/4.2.4/httpcore-4.2.4.jar\n./repo/org/apache/kafka/kafka-clients/0.8.2.0/kafka-clients-0.8.2.0.jar\n./repo/org/apache/kafka/kafka_2.10/0.8.2.0/kafka_2.10-0.8.2.0.jar\n./repo/org/apache/thrift/libthrift/0.9.1/libthrift-0.9.1.jar\n./repo/org/apache/zookeeper/zookeeper/3.3.4/zookeeper-3.3.4.jar\n./repo/org/codehaus/jackson/jackson-core-asl/1.8.8/jackson-core-asl-1.8.8.jar\n./repo/org/codehaus/jackson/jackson-mapper-asl/1.8.8/jackson-mapper-asl-1.8.8.jar\n./repo/org/codehaus/woodstox/stax2-api/3.1.3/stax2-api-3.1.3.jar\n./repo/org/codehaus/woodstox/woodstox-core-asl/4.2.0/woodstox-core-asl-4.2.0.jar\n./repo/org/eclipse/jetty/jetty-ajp/8.1.14.v20131031/jetty-ajp-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-continuation/8.1.14.v20131031/jetty-continuation-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-http/8.1.14.v20131031/jetty-http-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-io/8.1.14.v20131031/jetty-io-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-security/8.1.8.v20121106/jetty-security-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-server/8.1.8.v20121106/jetty-server-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-servlet/8.1.8.v20121106/jetty-servlet-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-util/8.1.14.v20131031/jetty-util-8.1.14.v20131031.jar\n./repo/org/eclipse/jetty/jetty-webapp/8.1.8.v20121106/jetty-webapp-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/jetty-xml/8.1.8.v20121106/jetty-xml-8.1.8.v20121106.jar\n./repo/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar\n./repo/org/glassfish/tyrus/bundles/tyrus-standalone-client/1.5/tyrus-standalone-client-1.5.jar\n./repo/org/json/json/20080701/json-20080701.jar\n./repo/org/restlet/jee/org.restlet/2.2.1/org.restlet-2.2.1.jar\n./repo/org/restlet/jee/org.restlet.ext.fileupload/2.2.1/org.restlet.ext.fileupload-2.2.1.jar\n./repo/org/restlet/jee/org.restlet.ext.jackson/2.2.1/org.restlet.ext.jackson-2.2.1.jar\n./repo/org/restlet/jse/org.restlet/2.2.1/org.restlet-2.2.1.jar\n./repo/org/restlet/jse/org.restlet.ext.jetty/2.2.1/org.restlet.ext.jetty-2.2.1.jar\n./repo/org/roaringbitmap/RoaringBitmap/0.4.9/RoaringBitmap-0.4.9.jar\n./repo/org/scala-lang/scala-library/2.10.4/scala-library-2.10.4.jar\n./repo/org/slf4j/slf4j-api/1.7.7/slf4j-api-1.7.7.jar\n./repo/org/slf4j/slf4j-log4j12/1.7.7/slf4j-log4j12-1.7.7.jar\n./repo/org/tukaani/xz/1.0/xz-1.0.jar\n./repo/org/webjars/swagger-ui/2.1.8-M1/swagger-ui-2.1.8-M1.jar\n./repo/org/xerial/snappy/snappy-java/1.0.5/snappy-java-1.0.5.jar\n./repo/org/yaml/snakeyaml/1.6/snakeyaml-1.6.jar\n. Dear Kishore\nYes im using windows with gitbash to run the command can you suggest otherwise\nI tried to run the command the you give me with this tool http://sourceforge.net/projects/unxutils/\nand i did get this output \n\n. I installed the cygwin consol look like working very well,\n. Thank you very much\n. ",
    "jpbetz": "Yes, real time only.\n. When writing a Grafana datasource, we can send any query that would produce a suitable result set. I don't need the query to look exactly like the InfluxDB query.  An equivalent query written with different syntax would work perfectly fine.  If there is a way to query Pinot already to do this I just need an example query as I couldn't find a reasonable way to do it given the PQL documentation.  What we fundamentally need is a way to get results that are grouped by regular time intervals such that they can be plotted as a time series chart.\nIn some instances we would want to average the grouped data points, for others we would want the sum or percentiles.\n. Hi @jfim,\nYes, that looks reasonable. I'm not aware of any current needs for moving averages.\nFor Grafana, we need essentially need is a query that we can use to implement:\nquery(table, aggregations, from, to, interval);\nSo following your PQL example, that might be something like:\nSELECT timebucket(timestamp, '5m') as time avg(metric) FROM table WHERE timestamp BETWEEN x AND y GROUP BY time\nI'm not sure if 1h time buckets are hour aligned or not.  E.g. can hour buckets be for [1:36-2:36), [2:36-3:36), ... or just for [1:00-2:00), [2:00-3:00)?\nGrafana supports auto-refresh of time series charts in the UI.  It does this by automatically making additional queries to the datasource. E.g.:\nSELECT ... WHERE timestamp BETWEEN fromTime AND toTime ... # Initial query \nSELECT ... WHERE timestamp BETWEEN toTime AND refreshTime1 ... # auto-refresh 1\nSELECT ... WHERE timestamp BETWEEN refreshTime1 AND refreshTime2 ... # auto-refresh 2\n...\nAnd Grafana assumes that these queries will not overlap. I believe Grafana also makes sure the time intervals it asks for are sized and aligned in a reasonable way.  Eg. It might ask for 5m intervals for the initial query and then for 30s intervals after that.\n. If you're curious.  Here's a (not yet working) Grafana pinot datasource:\nhttps://github.com/coursera/grafana/tree/pinot-datasource/public/app/plugins/datasource/pinot\nIt's based on the InfluxDB datasource.  The main thing it's missing is the query we've been discussing.  Once supported, I would simply modify this:\nhttps://github.com/coursera/grafana/blob/pinot-datasource/public/app/plugins/datasource/pinot/queryBuilder.js#L60\nAnd we'd have basic Grafana support.\n. @jfim I've only played around with Grafana for about a day.  Here's what I was able to find:\nIn most of the dropdowns they only support second, minute, hour and day. But it does look like they have support for month and year: http://docs.grafana.org/reference/timerange/ . I couldn't find any details on how exactly those work.\nI'm planning to provide timeseries to Grafana in UTC (avoiding daylight savings confusion).  It looks like Grafana has at least basic support for taking UTC data and rendering graphs in the viewers locale.  But that feature does seem to have caused issues in the past (https://github.com/grafana/grafana/issues/143, https://github.com/grafana/grafana/issues/277, https://github.com/grafana/grafana/issues/13).  Regardless, UTC is the way to go.\nFor missing data,  Grafana still expects a data point for each time interval that was requsted, but the data value can be \"null\" (in JSON) in which case Grafana supports a couple options: \"connected\", \"null\", and \"null as zero\".  I believe \"connected\" means to linear interpolate between the last point before the gap to the first point after the gap (not sure what happens if the gap is at the start or end).  And I believe \"null\" just means leave the gap in the rendered UI.  The default it \"connected\".\n. ",
    "sxpujs": "Thank you very much, it is already solved.:)\n. ",
    "FelixGV": "Would be good to squash this before submitting a PR, otherwise it'll pollute the commit history quite a bit.\n. ",
    "hhjhbhj": "when I use the command bin/pinot-admin.sh post, then about five mininutes later, I get the prompt that connection timed out, but when I check the log I can't find any errors. \n. And I want to know which log4j.properties file it use when it is running, I want to check all the running information, so I need the log4j.\n. ",
    "archmind": "Any update on this feature?. Sounds great! Looking forward to it.. ",
    "viktoraseev": "Hmm, I see some logic at this code, that runs quickstart for exactly one hour. Thread.currentThread.join() will deadlock current thread, so that code will never run. Is that ok?\n. ",
    "ly923976094": "\nquick-start-hybrid.sh\u5bf9\u6211\u6709\u7528\u3002\n\u4f46\u662f\u6211\u7684\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8fd9\u91cc\u662f\u91cd\u73b0\u7684\u6b65\u9aa4\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\u6211\u5c06tenantIsolation\u8bbe\u7f6e\u4e3atrue\uff0c\u4e0d\u77e5\u9053\u8fd9\u662f\u5426\u662f\u539f\u56e0\uff1a\n```\ncd pinot-distribution/target/pinot-0.016-pkg\nstart local zk, kafka, pinot controller, broker and server\nbin/pinot-admin.sh StartZookeeper &\nsleep 10\nbin/pinot-admin.sh StartKafka &\nsleep 5\nbin/pinot-admin.sh StartController -tenantIsolation &\nsleep 5\nbin/pinot-admin.sh StartBroker &\nbin/pinot-admin.sh StartServer &\nget sample data\nwget https://github.com/linkedin/pinot/wiki/flights.tar.gz\ntar zxvf flights.tar.gz\nmkdir -p flights/2015\nmv flights/flights-2015* flights/2015/\nadd flights schema\nbin/pinot-admin.sh AddSchema -schemaFile flights/flights-schema.json -exec\nadd flights offline and online table\nbin/pinot-admin.sh AddTable -filePath flights/flights-definition.json -exec\nbin/pinot-admin.sh AddTable -filePath flights/flights-definition-realtime.json -exec\nbuild offline segment and upload\nbin/pinot-admin.sh CreateSegment \\\n    -schemaFile flights/flights-schema.json \\\n    -dataDir flights/ \\\n    -tableName flights \\\n    -segmentName mySegment \\\n    -outDir /data/PinotSegFlights -overwrite\nbin/pinot-admin.sh UploadSegment -segmentDir /data/PinotSegFlights\nstream realtime data to kafka, need to create topic flights-realtime beforehand\nbin/pinot-admin.sh StreamAvroIntoKafka \\\n    -avroFile flights/2015/flights-2015_1.avro \\\n    -kafkaTopic flights-realtime \\\n    -kafkaBrokerList localhost:19092 &\n```\n\nhello, \n       @izzizz You can try this command curl -x POST - d '{\" PQL \":\" select count (*) from test \"}' http://10.210.136.62:8099/query. > I assume you are referring to segment loadMode configuration. \"HEAP\" is an unfortunate wrong description, but it refers to directly allocated memory (so, it is off-heap). All the bytes of a segment are copied into bufers allocated via ByteBuffer.allocateDirect().\n\nMMAP mode means the segment file is mapped into memory.\nSee the class PinotByteBuffer\n\nWhich loading mode should be used for real-time and offline tables @mcvsubbu . > @ly923976094 that depends on your hardware profile, OS, qps load, latency tolerance, and amount of data. It is a very hard question to answer, but we plan to have some write-ups on tuning Pinot. It should be available with our documentation in the next few weeks.\nIs there any specific document for reference?  At present, consumers with high QPS have configured HEAP and often out memory   @mcvsubbu . > Can you give more details on qps, schema and metadata of any segment that was successfully created?\n\n\u2026\nOn Sun, Feb 24, 2019 at 9:58 PM Sunny @.***> wrote: @ly923976094 https://github.com/ly923976094 that depends on your hardware profile, OS, qps load, latency tolerance, and amount of data. It is a very hard question to answer, but we plan to have some write-ups on tuning Pinot. It should be available with our documentation in the next few weeks. Is there any specific document for reference? At present, consumers with high QPS have configured HEAP and often out memory @mcvsubbu https://github.com/mcvsubbu \u2014 You are receiving this because you commented. Reply to this email directly, view it on GitHub <#3454 (comment)>, or mute the thread https://github.com/notifications/unsubscribe-auth/AAz7Z35iZRrC1kzRYt9x5Xi-hHXLwySxks5vQ3uVgaJpZM4YWFP7 .\n\nThank you for your reply,  The loading mode is HEAP\uff0cWhen the consumer is consuming and the state is transitioning, out of memory, consumption stops.  What's going on here, I find that MMAP does not run out of memory when the consumer data is large.\nserver configuration\uff086+32G, jvm16G, consumer qps 5000, \ntablle config: \n{\n  \"REALTIME\": {\n    \"tableType\": \"REALTIME\",\n    \"tenants\": {\n      \"server\": \"serverOne\",\n      \"tagOverrideConfig\": null,\n      \"broker\": \"brokerOne\"\n    },\n    \"tableIndexConfig\": {\n      \"onHeapDictionaryColumns\": null,\n      \"autoGeneratedInvertedIndex\": false,\n      \"sortedColumn\": [],\n      \"starTreeIndexConfigs\": null,\n      \"invertedIndexColumns\": null,\n      \"segmentFormatVersion\": null,\n      \"noDictionaryConfig\": null,\n      \"createInvertedIndexDuringSegmentGeneration\": false,\n      \"starTreeIndexSpec\": null,\n      \"streamConfigs\": {\n        \"stream.kafka.decoder.class.name\": \"com.linkedin.pinot.core.realtime.impl.kafka.KafkaJSONMessageDecoder\",\n        \"streamType\": \"kafka\",\n        \"realtime.segment.flush.threshold.size\": \"5000000\",\n        \"stream.kafka.consumer.type\": \"simple\",\n        \"stream.kafka.broker.list\": \" broker1.intra.aliyun.dip.weibo.com:9090,broker2.intra.aliyun.dip.weibo.com:9090,broker3.intra.aliyun.dip.weibo.com:9090\",\n        \"realtime.segment.flush.threshold.time\": \"3600000\",\n        \"stream.kafka.consumer.prop.auto.offset.reset\": \"smallest\",\n        \"stream.kafka.hlc.group.id\": \"dip_cdn_client-video_aggregation\",\n        \"stream.kafka.topic.name\": \"cdn_client\"\n      },\n      \"loadMode\": \"HEAP\",\n      \"columnMinMaxValueGeneratorMode\": null,\n      \"noDictionaryColumns\": null,\n      \"segmentPartitionConfig\": null,\n      \"streamConsumptionConfig\": null,\n      \"aggregateMetrics\": false\n    },\n    \"metadata\": {\n      \"customConfigs\": {\n        \"business\": \"dip-cdn-client-video-aggregation\",\n        \"isFromEsKafka\": \"true\"\n      }\n    },\n    \"segmentsConfig\": {\n      \"retentionTimeUnit\": \"DAYS\",\n      \"segmentPushFrequency\": \"daily\",\n      \"replication\": \"1\",\n      \"replicaGroupStrategyConfig\": null,\n      \"timeColumnName\": \"fdate\",\n      \"retentionTimeValue\": \"4\",\n      \"timeType\": \"MILLISECONDS\",\n      \"segmentPushType\": \"APPEND\",\n      \"hllConfig\": null,\n      \"schemaName\": \"dip_cdn_client-video_aggregation\",\n      \"segmentAssignmentStrategy\": \"BalanceNumSegmentAssignmentStrategy\",\n      \"replicasPerPartition\": \"1\"\n    },\n    \"tableName\": \"dip_cdn_client-video_aggregation_REALTIME\"\n  }\n}\nschema config:\n{\n  \"schemaName\": \"dip_cdn_client-video_aggregation\",\n  \"dimensionFieldSpecs\": [\n    {\n      \"name\": \"cdn\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"country\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"dns_ip_country\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"dns_ip_isp\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"dns_ip_province\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"domain\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"error_code\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"isp\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"protocal\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"protocol\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"province\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"video_cache_type\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"video_firstframe_status\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"video_network\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"video_quit_status\",\n      \"dataType\": \"STRING\"\n    },\n    {\n      \"name\": \"video_trace_dns_ip\",\n      \"dataType\": \"STRING\"\n    }\n  ],\n  \"metricFieldSpecs\": [\n    {\n      \"name\": \"ff_cancel_num\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"ff_error_num\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"psr1_denominator\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"psr1_numerator\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"stall_count\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"succ_denominator\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"total_count\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"total_num1\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"total_num2\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"succ_numerator\",\n      \"dataType\": \"LONG\"\n    },\n    {\n      \"name\": \"video_firstframe_time\",\n      \"dataType\": \"DOUBLE\"\n    }\n  ],\n  \"timeFieldSpec\": {\n    \"incomingGranularitySpec\": {\n      \"name\": \"fdate\",\n      \"dataType\": \"LONG\",\n      \"timeType\": \"MILLISECONDS\"\n    }\n  }\n}\njava.lang.reflect.InvocationTargetException\n        at sun.reflect.GeneratedMethodAccessor50.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at org.apache.helix.messaging.handling.HelixStateTransitionHandler.invoke(HelixStateTransitionHandler.java:430)\n        at org.apache.helix.messaging.handling.HelixStateTransitionHandler.handleMessage(HelixStateTransitionHandler.java:344)\n        at org.apache.helix.messaging.handling.HelixTask.call(HelixTask.java:96)\n        at org.apache.helix.messaging.handling.HelixTask.call(HelixTask.java:47)\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.OutOfMemoryError: Direct buffer memory\n        at java.nio.Bits.reserveMemory(Bits.java:693)\n        at java.nio.DirectByteBuffer.(DirectByteBuffer.java:123)\n        at java.nio.ByteBuffer.allocateDirect(ByteBuffer.java:311)\n        at com.linkedin.pinot.core.segment.memory.PinotByteBuffer.allocateDirect(PinotByteBuffer.java:36)\n        at com.linkedin.pinot.core.segment.memory.PinotByteBuffer.loadFile(PinotByteBuffer.java:40)\n        at com.linkedin.pinot.core.segment.memory.PinotDataBuffer.loadFile(PinotDataBuffer.java:144)\n        at com.linkedin.pinot.core.segment.store.SingleFileIndexDirectory.mapAndSliceFile(SingleFileIndexDirectory.java:284)\n        at com.linkedin.pinot.core.segment.store.SingleFileIndexDirectory.mapBufferEntries(SingleFileIndexDirectory.java:265)\n        at com.linkedin.pinot.core.segment.store.SingleFileIndexDirectory.load(SingleFileIndexDirectory.java:190)\n        at com.linkedin.pinot.core.segment.store.SingleFileIndexDirectory.(SingleFileIndexDirectory.java:86)\n        at com.linkedin.pinot.core.segment.store.SegmentLocalFSDirectory.loadData(SegmentLocalFSDirectory.java:198)\n        at com.linkedin.pinot.core.segment.store.SegmentLocalFSDirectory.load(SegmentLocalFSDirectory.java:179)\n        at com.linkedin.pinot.core.segment.store.SegmentLocalFSDirectory.(SegmentLocalFSDirectory.java:77)\n        at com.linkedin.pinot.core.segment.store.SegmentDirectory.createFromLocalFS(SegmentDirectory.java:108)\n        at com.linkedin.pinot.core.indexsegment.immutable.ImmutableSegmentLoader.load(ImmutableSegmentLoader.java:108)\n        at com.linkedin.pinot.core.data.manager.realtime.RealtimeTableDataManager.replaceLLSegment(RealtimeTableDataManager.java:291)\n        at com.linkedin.pinot.core.data.manager.realtime.RealtimeTableDataManager.downloadAndReplaceSegment(RealtimeTableDataManager.java:279)\n        at com.linkedin.pinot.core.data.manager.realtime.LLRealtimeSegmentDataManager.downloadSegmentAndReplace(LLRealtimeSegmentDataManager.java:945)\n        at com.linkedin.pinot.core.data.manager.realtime.LLRealtimeSegmentDataManager.goOnlineFromConsuming(LLRealtimeSegmentDataManager.java:934)\n        at com.linkedin.pinot.server.starter.helix.SegmentOnlineOfflineStateModelFactory$SegmentOnlineOfflineStateModel.onBecomeOnlineFromConsuming(SegmentOnlineOfflineStateModelFactory.java:118)\n        ... 11 more. > Our documentation is still in progress. We expect to finish it by the time we make the first apache release (which should be real soon, once we verify the current candidate in production). Meanwhile, a few comments:\n\n\nYou seem to be running out of direct memory while loading a completed segment. Changing HEAP to MMAP will help there (assuming you Operating system over-commits mmap memory). Your time column unit is in MILLISECONDS. This can cause dictionary to explode unless you are rounding off the time values. Please check if you are doing so.  So, if your millisecond value is 1551113826143 then round it off to (for example) the nearest 5 minute value 1551113710000. You will need to do this before you send your Kafka events, if you have control over it. We are thinking of providing an automatic switch in pinot to do this (i.e. round off milliseonds to nearest 5 mins or 15 mins or hour, whatever)\nYou may want to try using auto-segment siizing. See https://cwiki.apache.org/confluence/display/PINOT/Consuming+and+Indexing+rows+in+Realtime\n\n\nyes, If I change to MMAP, there is no memory overflow. I want to know the basic difference between MMAP and HEAP. For example: query efficiency, memory usage, etc @mcvsubbu, The unit of time you are talking about is milliseconds causing the dictionary to explode,Is this the cause of memory overflow?. mvn  license:format\nmvn clean install -DskipTests -Pbuild-shaded-jar. > To add to what @jackjlli mentioned, think of REFRESH use case as one in which data is refreshed by re-loading the entire data (i.e. all segments are replaced). In contrast. APPEND use cases add a segment (or a few) each day (or hour) with new data while old data is retained out.\n\nHOURLY, DAILY, etc. are values of segment PushFrequency. It is used in the ValidationManager to detect gaps in existing segments and raise alerts. It is also used to name the segments correctly while generating Pinot segments.\nHope this helps.\nThank you @jackjlli @mcvsubbu, so is segmentPushFrequency only for offline data ( for example hadoop, local)? What should the value be for real-time data ( for example kafka)? @mcvsubbu, You mentioned that It is used in the ValidationManager to detect gaps in existing segments and raise alerts. Where is this alarm configured\n. @jackjlli My understanding is that segmentPushFrequency is ValidationManager monitoring daily or hourly monitoring of whether you are pushing data into a pinot cluster. https://github.com/apache/incubator-pinot/wiki/Pinot-Query-Language, This will help you . > replicasPerPartition is the # replication of this table(Ensure the #servers in server tenant is larger than #replicas) when you create the table.\n\nWhat's the difference between this and the replication field.. > replicasPerPartition is only used with Kafka simple consumer (\"stream.kafka.consumer.type\":\"simple\"). In this case, it's same as replication.\nI understand. Thank you @fx19880617 . > Pinot has an inbuilt transform function for date-time conversion which supports time zone. You can refer to the following for more details: https://github.com/apache/incubator-pinot/wiki/dateTimeConvert-UDF\n\nAlso, note that transform functions are currently supported in group-by and projection, but not in filter (predicates).\n\nThank you very much for your reply\uff0c yes \uff0cThe following PQL statement 1 can specify the corresponding time zone with SIMPLE_DATE_FORMAT, but the time conversion of SIMPLE_DATE_FORMAT is very time-consuming, so I want to use sentence 2 to convert the result of query to time, but the time zone cannot be defined\npql1: select sum(total) from test group by dateTimeConvert(timestamp, '1:MILLISECONDS:EPOCH','1:MILLISECONDS:SIMPLE_DATE_FORMAT:yyyy-MM-dd HH:mm:ss tz(Asia/Shanghai)', '1:DAYS')\npql2: select sum(total) from test group by dateTimeConvert(timestamp, '1:MILLISECONDS:EPOCH','1:MILLISECONDS:EPOCH', '1:DAYS'). > The second statement has EPOCH (which is UTC). Statement 1 is the only way to specify time zone. Seems like you don't have a filter in your query, which means you are essentially applying the transform on all the records. How many records do are there in this table? What is the query latency you are seeing? Also, is this a test query or a real query that you plan to run in production (ie without any filters)?\nyes\uff0cFor real queries running in the production environment, such as this table video_market-video_download_performance_full_day, about 1.5g of data per day, query data for 30 days, a total of 1237838944 rows of data, the execution of pq1 (server query timeout) and pql2 time results are as follows, it can be seen that SIMPLE_DATE_FORMAT takes very serious time, can this problem be solved?\npq1: select sum(total_count) from video_market-video_download_performance_full_day where fdate >= 1543593600000 and fdate < 1546271999000 group by dateTimeConvert(fdate, '1:MILLISECONDS:EPOCH','1:MILLISECONDS:SIMPLE_DATE_FORMAT:yyyy-MM-dd HH:mm:ss tz(Asia/Shanghai)', '1:DAYS')\n{\n    \"exceptions\":[\n        {\n            \"errorCode\":200,\n            \"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 14999ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n        },\n        {\n            \"errorCode\":200,\n            \"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 15000ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n        },\n        {\n            \"errorCode\":200,\n            \"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 14999ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n        },\n        {\n            \"errorCode\":200,\n            \"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 15000ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n        },\n        {\n            \"errorCode\":200,\n            \"message\":\"QueryExecutionError:\njava.util.concurrent.TimeoutException: Timed out while combining group-by results after 15000ms\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:168)\nat com.linkedin.pinot.core.operator.CombineGroupByOperator.getNextBlock(CombineGroupByOperator.java:50)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:34)\nat com.linkedin.pinot.core.operator.InstanceResponseOperator.getNextBlock(InstanceResponseOperator.java:23)\nat com.linkedin.pinot.core.operator.BaseOperator.nextBlock(BaseOperator.java:42)\nat com.linkedin.pinot.core.plan.GlobalPlanImplV0.execute(GlobalPlanImplV0.java:45)\nat com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl.processQuery(ServerQueryExecutorV1Impl.java:159)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.processQueryAndSerialize(QueryScheduler.java:127)\nat com.linkedin.pinot.core.query.scheduler.QueryScheduler.lambda$createQueryFutureTask$0(QueryScheduler.java:112)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\nat com.google.common.util.concurrent.TrustedListenableFutureTask$TrustedFutureInterruptibleTask.runInterruptibly(TrustedListenableFutureTask.java:108)\nat com.google.common.util.concurrent.InterruptibleTask.run(InterruptibleTask.java:41)\"\n        }\n    ],\n    \"numServersQueried\":6,\n    \"numServersResponded\":6,\n    \"numDocsScanned\":170287136,\n    \"numEntriesScannedInFilter\":340574272,\n    \"numEntriesScannedPostFilter\":340574272,\n    \"totalDocs\":1237838944,\n    \"numGroupsLimitReached\":false,\n    \"timeUsedMs\":35737,\n    \"segmentStatistics\":[\n],\n\"traceInfo\":{\n\n}\n\n}\npq2: select sum(total_count) from video_market-video_download_performance_full_day where fdate >= 1543593600000 and fdate < 1546271999000 group by dateTimeConvert(fdate, '1:MILLISECONDS:EPOCH','1:MILLISECONDS:EPOCH', '1:DAYS')\n{\n    \"aggregationResults\": [\n    {\n        \"groupByResult\": [\n        {\n            \"value\": \"5214728856.00000\",\n            \"group\": [\"1543622400000\"]\n        }, {\n            \"value\": \"5146017730.00000\",\n            \"group\": [\"1544227200000\"]\n        }, {\n            \"value\": \"4950169463.00000\",\n            \"group\": [\"1545868800000\"]\n        }, {\n            \"value\": \"4912167135.00000\",\n            \"group\": [\"1545696000000\"]\n        }, {\n            \"value\": \"4894003737.00000\",\n            \"group\": [\"1545436800000\"]\n        }, {\n            \"value\": \"4882993768.00000\",\n            \"group\": [\"1545782400000\"]\n        }, {\n            \"value\": \"4612845413.00000\",\n            \"group\": [\"1544140800000\"]\n        }, {\n            \"value\": \"4612000264.00000\",\n            \"group\": [\"1543536000000\"]\n        }, {\n            \"value\": \"4581314177.00000\",\n            \"group\": [\"1544832000000\"]\n        }, {\n            \"value\": \"4510667574.00000\",\n            \"group\": [\"1545609600000\"]\n        }],\n        \"function\": \"sum_total_count\",\n        \"groupByColumns\": [\"datetimeconvert(fdate,'1:MILLISECONDS:EPOCH','1:MILLISECONDS:EPOCH','1:DAYS')\"]\n    }],\n    \"exceptions\": [],\n    \"numServersQueried\": 6,\n    \"numServersResponded\": 6,\n    \"numDocsScanned\": 1074252463,\n    \"numEntriesScannedInFilter\": 2148504926,\n    \"numEntriesScannedPostFilter\": 2148504926,\n    \"totalDocs\": 1237838944,\n    \"numGroupsLimitReached\": false,\n    \"timeUsedMs\": 5750,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {}\n}. > Thanks for sharing the information. From the second result it seems the query selects 1.2B records, which means too much computation needs to happen. Do you really need to store the data in milliseconds granularity? If not, preaggregating offline data after with larger granularity will reduce data size, and hence the the num records to process. May I ask which company/organization is this use case for?\nI work in sina weibo (Beijing), and my main work is the big data r&d engineer. The data of this table has been pre-aggregated for days outside, and the time stamp of day milliseconds is stored in pinot.\nIn fact, if the time is not converted using SIMPLE_DATE_FORMAT, the query time is very fast (that is, the time zone cannot be specified, resulting in the mismatch between time and real time)\uff0cSIMPLE_DATE_FORMAT converts each piece of data rather than the query result\n. > Yes, you are right the UDF converts each row rather than the result. It is required to ensure the right grouping happens after applying the UDF. However, in your case it is not necessary as one day already has one single millis value (which is a special case). We will explore on making this faster for your case (eg by caching the conversion). But in the meanwhile, is it possible for you to apply the conversion at the client side? Also, if you can share, are you already using Pinot in production, or evaluating may the moment? Get Outlook for iOShttps://aka.ms/o0ukef\n\n\u2026\n________ From: Sun-Li notifications@github.com Sent: Sunday, December 30, 2018 6:37 PM To: apache/incubator-pinot Cc: Mayank Shrivastava; Comment Subject: Re: [apache/incubator-pinot] timezone problem (#3626) Thanks for sharing the information. From the second result it seems the query selects 1.2B records, which means too much computation needs to happen. Do you really need to store the data in milliseconds granularity? If not, preaggregating offline data after with larger granularity will reduce data size, and hence the the num records to process. May I ask which company/organization is this use case for? I work in sina weibo (Beijing), and my main work is the big data r&d engineer. The data of this table has been pre-aggregated for days outside, and the time stamp of day milliseconds is stored in pinot. In fact, if the time is not converted using SIMPLE_DATE_FORMAT, the query time is very fast (that is, the time zone cannot be specified, resulting in the mismatch between time and real time)\uff0cSIMPLE_DATE_FORMAT converts each piece of data rather than the query result \u2014 You are receiving this because you commented. Reply to this email directly, view it on GitHubhttps://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fapache%2Fincubator-pinot%2Fissues%2F3626%23issuecomment-450602555&data=02%7C01%7Cmshrivas%40linkedin.com%7C1bd0d135f3bc43e14f7c08d66ec8e08b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636818206392019077&sdata=jyq4ddidHUIrBy9arNVd9vbyEo9%2BhEz0rz2yCfsZkBU%3D&reserved=0, or mute the threadhttps://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAMCAzZvCQfrd2iJhMGzisja0gF0cjxMfks5u-XhVgaJpZM4Zkbf0&data=02%7C01%7Cmshrivas%40linkedin.com%7C1bd0d135f3bc43e14f7c08d66ec8e08b%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C636818206392019077&sdata=fWpRMIwihaV8ju0T9FtWJmT6Twp0P%2FizqBJsquvfKIk%3D&reserved=0.\n\nYes, I have used pinot in production, I want to use pql2 (select sum(total_count) from video_market-video_download_performance_full_day where fdate >= 1543593600000 and fdate < 1546271999000 group by dateTimeConvert(fdate, '1:MILLISECONDS:EPOCH','1:MILLISECONDS:EPOCH', '1:DAYS')) to query the result, and then convert the timestamp on the client side, but what comes out is UTC time (such as storage time stamp is the Shanghai time zone, pinot process according to UTC timestamp, out of the time difference between the 16 hours). what do you mean by caching conversion. > \"hadoop jar pinot-hadoop-0.016.jar SegmentCreation job.properties\" is not working\n\nI found a class SegmentCreationJob.class but it does not have main method\n\nYou can jar it in sentences\nmvn  license:format \nmvn clean install -DskipTests -Pbuild-shaded-jar\uff0c\nThen use pinot-hadoop/target/pinot-hadoop-0.016-shaded.jar\nFinally, use the following statement\n/usr/local/hadoop-2.8.2/bin/hadoop pinot-hadoop-0.016-shaded.jar SegmentCreation job.properties\n/usr/local/hadoop-2.8.2/bin/hadoop jar lib/pinot-hadoop-0.016-shaded.jar SegmentTarPush job.properties\nI wonder if I can solve your problem\n. > Stop temporarily or permanently?\n\n\u2026\nOn Thu, Jan 17, 2019 at 10:23 PM Sun-Li @.***> wrote: The table has kafka real-time consumption configured. How do I stop this consumption \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#3717>, or mute the thread https://github.com/notifications/unsubscribe-auth/AAz7Z1zfpHyHXv-DV0EiLQvQz_0kecMNks5vEWffgaJpZM4aHTLY .\n\nWhat's the solution to both of these  \uff08 temporarily or permanently\uff09. > Not sure what the reason is that you want to stop consumption. If this is a new table and you set it up wrong, you can drop the table and recreate it after correcting parameters (topic name, server settings, or any other that you are trying to correct).\n\nif this table has been in production for a long time and you want to stop consumption, then you can disable the table in helix. it will stop after the next consuming segment has completed.\nIf you can describe your problem some more, there may be other things we can do. Are you using LLC or HLC?\n\nI use LLC (kafka0.10.2.1),   this table has been in production for a long time and I want to stop consumption, if I disable the table in helix, this table is unable to query, there is no way to stop consumption can continue to query. > If the upstream is putting bad data and we are not able to create segments, we will (effectively) stop consuming\n\nThat is not necessarily true, right? If a metric(revenue) value becomes -1, we can still consume and generate segments with bad data which may not be desirable. Anyhow, this is just one such instance. We can always provide workarounds for each of these scenarios but having the ability to pause/un-pause consumption is definitely worth it. I see this similar to pause/unpause feature in Helix Controller or enable/disable a partition/instance/resource.\n\nThank you for your answers @mcvsubbu @kishoreg \uff0csuch as kishoreg says Kafka produces bad data or Kafka in this business no longer produces data and wants to continue querying data and consuming wasted machine resources (server memory, CPU, etc.)\uff0cIf the address of kafka is invalid, the method to restart the server is to continue the query. However, I think this method is not advisable, because the production environment server has to be restarted. We did not use the multi-tenant function, and the real-time offline tenants are all used together. > you can use helix-admin commands to add the additional tags as needed. Download helix from https://helix.apache.org/\nyes\uff0cthank you @mcvsubbu \uff0cAdded successfully\n bin/helix-admin.sh -zkSvr '10.210.136.61:2181,10.210.136.62:2181,10.210.136.64:2181' -addInstanceTag dip-summon-pinot-cluster Server_10.55.22.107_8098 serverOne_REALTIME. I haven't read the servers log yet, but the feedback from the uploaded client is that the data upload was successful. > @ly923976094 can you provide more details? Are you adding new hosts? Or replacing existing hosts?\n@sunithabeeram  There is a machine in the pinot cluster that is offline due to resource allocation problem and cost problem. However, the data on this machine is still useful and needs to be analyzed on this pinot cluster. Is there any tool to import the data on this machine into this pinot cluster. > The data should be available on the controllers for download by other servers, so you don't need to do anything specifically to move the data. You can update the table's tenant configuration to remove the offline host and add a new one and rebalance the table. You can find REST apis' to do this by hitting your controllers' web port: http://controllerhost:port.\n\n(We'll be covering more of the steps in our admin guide soon - https://pinot.readthedocs.io/en/latest/admin_guide.html)\n\nI understand. I delete the offline machine tenant tag and  then balance the table\n. > All segments of a table are divided among the tenant instances that host the table. If a server has a segment to serve, it will be loaded into memory. You can use rest commands on the controller to see the idealstate of a table, and that will indicate to you the servers that host each segment.\n\nIt is up to you how you want to reduce cost.\nYou can load the segments in \"HEAP\" mode, you just need to make sure that the maxDirectMemory argument to the jvm is sufficiently large so that the segments are loaded without OOM errors.\nYou can load the segments in MMAP mode, in which case the segments are paged in from disk and Pinot lets the Operating System handle paging of segments in and out.\n\nIf the load model changes from HEAP to MMAP, will the segments loaded into memory be released and then read data from the disk?. ",
    "taotaojs": "Hi, Does Pinot support the Having? We need the feature!\n. ",
    "flowbehappy": "@jfim I'm very glad to hear that :smile: \nThe first two are very urgent for us so they get the higher priority. Having clause is better to have. \n. Besides, when should I expect the next stable release, and the new features it will contains?\n. ",
    "gregspurrier": "@kishoreg thanks for the rapid fix!\n. ",
    "gilmichlin": "please wait with the merge since I have issues running the MR job\n. need some work love and care closing and will re submit\n. ",
    "brandtg": "@cliu587 The default timeout for the client used in thirdeye-dashboard is 500ms (I believe), so you may need to set it to something higher as well (https://dropwizard.github.io/dropwizard/0.7.1/docs/manual/configuration.html#man-configuration-clients-http)\n. @cliu587 Also thanks for bringing up the lack of documentation - I will spend some time this weekend creating a PR w/ READMEs for various components, and try to tie them together in main README. Have also discussed a bit with @dhaval2025 on getting a quick start / related tooling written.\n. Awesome, thanks @kishoreg !\n. ",
    "cliu587": "@brandtg that fixed the timeout issues, thanks!\nI'll try and debug the heatmap issue further. \n. Oops, accidentally closed the issue. I'll re-open it.\n. A follow up on the heat-map related issues. I modified heat-map.ftl in the thirdeye-dashboard project. There were a lot of places were we used cell.statsMap['volume_difference'] or cell.statsMap['current_ratio'] which required to default to 0 if it does not exist. (diff: https://gist.github.com/cliu587/5946ad79e9dad46a6cc6)\nThis doesn't solve the root issue, but I got the heatmap tab working now (it's sweet!), and the only 2 errors that I get are:\n1. WARN  [2015-11-24 23:23:50,271] com.linkedin.thirdeye.dashboard.views.DimensionViewHeatMap: Could not get statistics\n! org.apache.commons.math3.exception.NotStrictlyPositiveException: standard deviation (0) - in the Heatmap tab. Doesn't seem to affect results though.\n2. ! freemarker.core.InvalidReferenceException: The following has evaluated to null or missing:\n! ==> dimensionView.view.getDimensionValueTable(metric,dimension)  [in template \"com/linkedin/thirdeye/dashboard/views/dimension/breakdown.ftl\" at line 7, column 31] - this only happens when I have a filter applied in the 'Contributors' tab. The data displayed still seems fine.\n. ",
    "otisg": "+10 for this.  This project will not succeed unless it properly opens up (c.f. Voldemort)\n. ",
    "xuyang2": "@kishoreg  Thanks for reply\nFound two dependency conflicts when using flat repo.\n```\n// same filename: org.restlet-2.2.1.jar\npinot-controller -> org.restlet.jse:org.restlet:2.2.1\npinot-controller -> org.restlet.jee:org.restlet.ext.jackson -> org.restlet.jee:org.restlet:2.2.1\n// api not compatible\npinot-common -> org.apache.kafka:kafka_2.10:0.8.2.0 -> com.101tec:zkclient:0.3\npinot-common -> org.apache.helix:helix-core:0.6.5 -> com.github.sgroschupf:zkclient:0.1\n```\nI think the first one is easy to fix. Just remove org.restlet.jse:org.restlet:2.2.1 from pinot-controller's dependencies. \nDon't know how to deal with the zkclient conflict.\n. +1\n. Sorry. I did not notice that you are using jackson1 introduced by avro.\nThe Jackson wiki is mainly about jackson2.\nThe jackson1 ObjectMapper seems to be thread safe, but I'm not sure.\n. ",
    "sbourke": "\ud83d\udc4d \n. ",
    "alan2018": "You can get data from the address:http://static.druid.io/data/benchmarks/tpch/1/lineitem.tbl.gz\nHow to generate index on column?\n. ",
    "giaosudau": "@kishoreg how to turn on all columns will be indexed by default?.\n. @jfim \nI have a fews question.\n- How about support datasketches for counting unique more effeicently?\n  Ref: http://druid.io/docs/0.9.1.1/development/extensions-core/datasketches-aggregators.html\n- What about the TopN instead of group by?\n  Ref: http://druid.io/docs/0.9.1.1/querying/topnquery.html\n- I have 10 billion rows in table Is that limit the rows when group by? Does TopN help here?\nThanks.\n. ",
    "daifish": "@xuyang2 Hi, i have solve this problem, u should assign the --dataDir when u start the broker, server, controller, by default they all use /tmp, when the machine restart, the /tmp will loss, hope that can help u\n. ",
    "ChenJianJunCJJ": "The Cluster Info is:\nOpening socket connection to server localhost/127.0.0.1:2123\nSocket connection established to localhost/127.0.0.1:2123, initiating session\nSession establishment complete on server localhost/127.0.0.1:2123, sessionid = 0x153ea9f87d50009, negotiated timeout = 30000\nzookeeper state changed (SyncConnected)\nConnecting to Zookeeper at: localhost:2123\n!!com.linkedin.pinot.tools.admin.command.ShowClusterInfoCommand$ClusterInfo\nbrokerInfoList:\n- name: Broker_192.168.170.155_7000\n  state: ONLINE\n  tags: [DefaultTenant_BROKER]\nclusterName: QuickStartCluster\ncontrollerInfo: {leaderName: 192.168.170.155_9000}\nserverInfoList:\n- name: Server_192.168.170.155_8000\n  state: ONLINE\n  tags: [DefaultTenant_OFFLINE, DefaultTenant_REALTIME]\ntableInfoList:\n- segmentInfoList: []\n  tableName: meetupRsvp_REALTIME\n  tag: meetupRsvp_REALTIME\nI find two zookeepers are started. The one's address is \"localhost:2191\", another's \"localhost:2123\".\nKafka start in \"localhost:2191\", Pinot cluster start in  \"localhost:2123\".It seems Kafka and Pinot cluster not in the same zookeeper. Is that OK?\n```\n_zookeeperInstance = ZkStarter.startLocalZkServer(); // \"localhost:2191\"\nfinal KafkaServerStartable kafkaStarter =\n        KafkaStarterUtils.startServer(KafkaStarterUtils.DEFAULT_KAFKA_PORT, KafkaStarterUtils.DEFAULT_BROKER_ID,\n            KafkaStarterUtils.DEFAULT_ZK_STR, KafkaStarterUtils.getDefaultKafkaConfiguration());\n```\nbut\n```\npublic void startAll() throws Exception {\nStartZookeeper(); //\"localhost:2123\"\n\nStartController();\n\nStartBroker();\n\nStartServer();\n\n}\n```\nThanks!\n. Output of ./quick-start-realtime.sh is :\nNo available client connector supports the required protocols: 'WAR' . Please add the JAR of a matching connector to your classpath.\nNull identity service, trying login service: null\nFinding identity service: null\n2016-04-07  09:54:21    127.0.0.1   -   127.0.0.1   9000    POST    /schemas    -   200 75  1356    229 http://localhost:9000   Jakarta Commons-HttpClient/3.1  -\n2016-04-07  09:54:21    192.168.170.155 -   192.168.170.155 9000    POST    /tables -   200 7   846 212 http://192.168.170.155:9000 Java/1.8.0_71   -\norg.json.JSONException: JSONArray[0] not found.\n    at org.json.JSONArray.get(JSONArray.java:236)\n    at org.json.JSONArray.getJSONObject(JSONArray.java:328)\n    at com.linkedin.pinot.tools.Quickstart.prettyprintResponse(Quickstart.java:90)\n    at com.linkedin.pinot.tools.RealtimeQuickStart.execute(RealtimeQuickStart.java:93)\n    at com.linkedin.pinot.tools.RealtimeQuickStart.main(RealtimeQuickStart.java:153)\nMore details:\n\u001b[36mStarting Kafka\u001b[36m\nCreated topic \"meetupRSVPEvents\".\nExecuting command: StartZookeeper -zkPort 2123 -dataDir /tmp/PinotAdmin/zkData\nStart zookeeper at localhost:2123 in thread main\nExecuting command: StartController -clusterName QuickStartCluster -controllerHost 192.168.170.155 -controllerPort 9000 -dataDir /tmp/PinotController -zkAddress localhost:2123\ninjecting conf and resource manager to the api context\nstarting pinot helix resource manager\nSetting helix flappingTimeWindow to 0\nCreating a new cluster, as the helix cluster : QuickStartCluster was not found ********************************************* \nEnable auto join.\nAdding state model definition named : SegmentOnlineOfflineStateModel generated using : class com.linkedin.pinot.controller.helix.core.PinotHelixSegmentOnlineOfflineStateModelGenerator ********************************************** \nAdding state model definition named : BrokerResourceOnlineOfflineStateModel generated using : class com.linkedin.pinot.controller.helix.core.PinotHelixBrokerResourceOnlineOfflineStateModelGenerator ********************************************** \nAdding empty ideal state for Broker!\nNew Cluster setup completed... ********************************************** \nStarting Helix Standalone Controller ... \nstarting api component\nAttaching route /tenants -> PinotTenantRestletResource\nAttaching route /tenants/ -> PinotTenantRestletResource\nAttaching route /tenants/{tenantName} -> PinotTenantRestletResource\nAttaching route /tenants/{tenantName}/ -> PinotTenantRestletResource\nAttaching route /tenants/{tenantName}/metadata -> PinotTenantRestletResource\nAttaching route /tenants/{tenantName}/metadata/ -> PinotTenantRestletResource\nAttaching route /schemas -> PinotSchemaRestletResource\nAttaching route /schemas/ -> PinotSchemaRestletResource\nAttaching route /schemas/{schemaName} -> PinotSchemaRestletResource\nAttaching route /schemas/{schemaName}/ -> PinotSchemaRestletResource\nAttaching route /tables -> PinotTableRestletResource\nAttaching route /tables/ -> PinotTableRestletResource\nAttaching route /table/{tableName}/ -> PinotTableRestletResource\nAttaching route /tables/{tableName} -> PinotTableRestletResource\nAttaching route /tables/{tableName}/ -> PinotTableRestletResource\nAttaching route /tables/{tableName}/instances -> PinotTableInstances\nAttaching route /tables/{tableName}/schema -> PinotTableSchema\nAttaching route /tables/{tableName}/schema/ -> PinotTableSchema\nAttaching route /tables/{tableName}/segments -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segments/ -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segments/metadata -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segments/metadata/ -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segments/{segmentName} -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segments/{segmentName}/ -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segments/{segmentName}/metadata -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segments/{segmentName}/metadata/ -> PinotSegmentRestletResource\nAttaching route /tables/{tableName}/segmentConfigs -> PinotTableSegmentConfigs\nAttaching route /tables/{tableName}/indexingConfigs -> PinotTableIndexingConfigs\nAttaching route /tables/{tableName}/tenantConfigs -> PinotTableTenantConfigs\nAttaching route /tables/{tableName}/metadataConfigs -> PinotTableMetadataConfigs\nAttaching route /segments -> PinotSegmentUploadRestletResource\nAttaching route /segments/ -> PinotSegmentUploadRestletResource\nAttaching route /segments/{tableName} -> PinotSegmentUploadRestletResource\nAttaching route /segments/{tableName}/ -> PinotSegmentUploadRestletResource\nAttaching route /segments/{tableName}/{segmentName} -> PinotSegmentUploadRestletResource\nAttaching route /segments/{tableName}/{segmentName}/ -> PinotSegmentUploadRestletResource\nAttaching route /version -> PinotVersionRestletResource\nAttaching route /instances -> PinotInstanceRestletResource\nAttaching route /instances/ -> PinotInstanceRestletResource\nAttaching route /instances/{instanceName} -> PinotInstanceRestletResource\nAttaching route /instances/{instanceName}/ -> PinotInstanceRestletResource\nstarting retention manager\nRetentionManager is started!\nstarting validation manager\nStarting validation manager\nstarting realtime segments manager\nStarting realtime segments manager, adding a listener on the property store table configs path.\nProcessing change notification for path: CONTROLLER LEADER CHANGE\nReceived change notification for path: CONTROLLER LEADER CHANGE\nComputed list of new segments to add : []\nProcessing change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nReceived change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nExecuting command: StartBroker -brokerHost 192.168.170.155 -brokerPort 7000 -zkAddress localhost:2123\nBroker timeout is - 10000 ms\nNetwork initialized !!\nNetwork starting !!\nNetwork running !!\nStarting Jetty server !!\nStarted Jetty server !!\nHelixBrokerRoutingTable.onExternalViewChange\nHelixBrokerRoutingTable.onExternalViewChange\nConnection pool found, moving on...\nskipping broker instances Broker_192.168.170.155_7000\nExecuting command: StartServer -clusterName QuickStartCluster -serverHost 192.168.170.155 -serverPort 8000 -dataDir null/PinotServerData0 -segmentDir null/PinotServerSegment0 -zkAddress localhost:2123\nTrying to create a new ServerInstance!\nTrying to initial ServerInstance!\nTrying to build server config\nTrying to build InstanceDataManager\nTrying to Load Instance DataManager by Class : com.linkedin.pinot.server.starter.helix.HelixInstanceDataManager\nInstanceDataManager Config:Instance Id: Server_192.168.170.155_8000\n    Instance Data Dir: null/PinotServerData08000/index\n    Instance Segment Tar Dir: null/PinotServerSegment08000/segmentTar\n    Bootstrap Segment Dir: null\n    Segment Metadata Loader Clas: com.linkedin.pinot.core.indexsegment.columnar.ColumnarSegmentMetadataLoader\n    Read Mode: heap\nLoaded SegmentMetadataLoader for class name : com.linkedin.pinot.core.indexsegment.columnar.ColumnarSegmentMetadataLoader\nTrying to build QueryExecutor\nTrying to Load Query Executor by Class : com.linkedin.pinot.core.query.executor.ServerQueryExecutorV1Impl\nTrying to build RequestHandlerFactory\nTrying to Load Request Handler Factory by Class : com.linkedin.pinot.server.request.SimpleRequestHandlerFactory\nTrying to build NettyServer\nTrying to build NettyTCPServer with port : 8000\nServerInstance Initialization is Done!\nTrying to start ServerInstance!\nTrying to start InstanceDataManager\ncom.linkedin.pinot.server.starter.helix.HelixInstanceDataManager started!\nTrying to start QueryExecutor\nTrying to start ServerThread\nServerInstance is Started!\nHelixBrokerRoutingTable.onExternalViewChange\nConnection pool found, moving on...\nskipping broker instances Broker_192.168.170.155_7000\nfound instance Id : Server_192.168.170.155_8000 with new session Id : 153ee6d4fd60006\nHelixBrokerRoutingTable.onExternalViewChange\nHelixBrokerRoutingTable.onExternalViewChange\n\u001b[36mStarting controller, server and broker\u001b[36m\nExecuting command: AddSchema -controllerHost localhost -controllerPort 9000 -schemaFilePath /home/cos/bigData/pinot/pinot-distribution/target/pinot-0.016-pkg/quickStartData1459994050166/rsvp_pinot_schema.json -exec\nHelixBrokerRoutingTable.onExternalViewChange\nExecuting command: AddTable -filePath /home/cos/bigData/pinot/pinot-distribution/target/pinot-0.016-pkg/quickStartData1459994050166/rsvp_create_table_request.json -controllerHost 192.168.170.155 -controllerPort 9000 -exec\nProcessing change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nReceived change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nbuilding empty ideal state for table : meetupRsvp_REALTIME\nadding table via the admin\nsuccessfully added the table : meetupRsvp_REALTIME to the cluster\nTrying to update BrokerDataResource IdealState!\nSetting data/child changes watch for real-time table 'meetupRsvp_REALTIME'\nSuccess\n\u001b[36mAdded schema and table\u001b[36m\n\u001b[33mRealtime quickstart setup complete\u001b[33m\nProcessing change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nReceived change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nSetting data/child changes watch for real-time table 'meetupRsvp_REALTIME'\nProcessing change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nReceived change notification for path: /QuickStartCluster/PROPERTYSTORE/CONFIGS/TABLE\nHelixBrokerRoutingTable.onExternalViewChange\nSetting data/child changes watch for real-time table 'meetupRsvp_REALTIME'\nBrokerResourceOnlineOfflineStateModel.onBecomeOnlineFromOffline() : 1952b750-3ca5-42c6-ad41-738d71702951, {CREATE_TIMESTAMP=1459994061925, ClusterEventName=idealStateChange, EXECUTE_START_TIMESTAMP=1459994062059, EXE_SESSION_ID=153ee6d4fd60005, FROM_STATE=OFFLINE, MSG_ID=1952b750-3ca5-42c6-ad41-738d71702951, MSG_STATE=read, MSG_TYPE=STATE_TRANSITION, PARTITION_NAME=meetupRsvp_REALTIME, READ_TIMESTAMP=1459994061968, RESOURCE_NAME=brokerResource, SRC_NAME=192.168.170.155_9000, SRC_SESSION_ID=153ee6d4fd60002, STATE_MODEL_DEF=BrokerResourceOnlineOfflineStateModel, STATE_MODEL_FACTORY_NAME=DEFAULT, TGT_NAME=Broker_192.168.170.155_7000, TGT_SESSION_ID=153ee6d4fd60005, TO_STATE=ONLINE}{}{}\nHelixBrokerRoutingTable.onExternalViewChange\n\u001b[36mStarting meetup data stream and publishing to kafka\u001b[36m\n\u001b[33mTotal number of documents in the table\u001b[33m\n\u001b[36mQuery : select count(*) from meetupRsvp limit 0\u001b[36m\nExecuting command: PostQuery -brokerHost 192.168.170.155 -brokerPort 7000 -query select count(*) from meetupRsvp limit 0\nQuery string for requestId 1: select count(*) from meetupRsvp limit 0\nBroker Response : BrokerResponse(totalDocs:0, numDocsScanned:0, timeUsedMs:0, aggregationResults:[], selectionResults:null, segmentStatistics:[], exceptions:[], traceInfo:)\nResponseTimes for 1 \n'JSONArray[0] not found.'\nTrying to run retentionManager!\nFailed to set retention duration, timeUnit: rententionTimeUnit, timeValue: 900\nFinished update deletion strategies for entire cluster!\nFinished update segment metadata for entire cluster!\nFinished segment purge for entire cluster!\nThe code shows there are two zookeeper started at 2191 and 2113.\nexec \"$JAVACMD\" $ALL_JAVA_OPTS \\\n  -classpath \"$CLASSPATH\" \\\n  -Dapp.name=\"quick-start-realtime\" \\\n  -Dapp.pid=\"$$\" \\\n  -Dapp.repo=\"$REPO\" \\\n  -Dapp.home=\"$BASEDIR\" \\\n  -Dbasedir=\"$BASEDIR\" \\\n  com.linkedin.pinot.tools.RealtimeQuickStart \\\n```\n/\n * Copyright (C) 2014-2015 LinkedIn Corp. (pinot-core@linkedin.com)\n \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n \n *         http://www.apache.org/licenses/LICENSE-2.0\n \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n /\npackage com.linkedin.pinot.tools;\nimport static com.linkedin.pinot.tools.Quickstart.prettyprintResponse;\nimport static com.linkedin.pinot.tools.Quickstart.printStatus;\nimport java.io.File;\nimport org.apache.commons.io.FileUtils;\nimport org.json.JSONException;\nimport com.google.common.collect.Lists;\nimport com.linkedin.pinot.common.utils.KafkaStarterUtils;\nimport com.linkedin.pinot.common.utils.ZkStarter;\nimport com.linkedin.pinot.tools.Quickstart.color;\nimport com.linkedin.pinot.tools.admin.command.QuickstartRunner;\nimport com.linkedin.pinot.tools.streams.MeetupRsvpStream;\nimport kafka.server.KafkaServerStartable;\npublic class RealtimeQuickStart {\n  private File _quickStartDataDir;\n  private ZkStarter.ZookeeperInstance _zookeeperInstance;\npublic void execute() throws JSONException, Exception {\n    _quickStartDataDir = new File(\"quickStartData\" + System.currentTimeMillis());\n    String quickStartDataDirName = _quickStartDataDir.getName();\nif (!_quickStartDataDir.exists()) {\n  _quickStartDataDir.mkdir();\n}\n\nFile schema = new File(quickStartDataDirName + \"/rsvp_pinot_schema.json\");\nFile tableCreate = new File(quickStartDataDirName + \"/rsvp_create_table_request.json\");\n\nFileUtils.copyURLToFile(RealtimeQuickStart.class.getClassLoader().getResource(\"sample_data/rsvp_pinot_schema.json\"),\n    schema);\n\nFileUtils.copyURLToFile(\n    RealtimeQuickStart.class.getClassLoader().getResource(\"sample_data/rsvp_create_table_request.json\"),\n    tableCreate);\n\nprintStatus(color.CYAN, \"Starting Kafka\");\n\n_zookeeperInstance = ZkStarter.startLocalZkServer();\n\nfinal KafkaServerStartable kafkaStarter =\n    KafkaStarterUtils.startServer(KafkaStarterUtils.DEFAULT_KAFKA_PORT, KafkaStarterUtils.DEFAULT_BROKER_ID,\n        KafkaStarterUtils.DEFAULT_ZK_STR, KafkaStarterUtils.getDefaultKafkaConfiguration());\n\nKafkaStarterUtils.createTopic(\"meetupRSVPEvents\", KafkaStarterUtils.DEFAULT_ZK_STR);\n\nFile tempDir = new File(\"/tmp/\" + String.valueOf(System.currentTimeMillis()));\n\nQuickstartTableRequest request = new QuickstartTableRequest(\"meetupRsvp\", schema, tableCreate);\nfinal QuickstartRunner runner = new QuickstartRunner(Lists.newArrayList(request), 1, 1, 1, tempDir);\n\nrunner.startAll();\n\nprintStatus(color.CYAN, \"Starting controller, server and broker\");\n\nrunner.addSchema();\nrunner.addTable();\nprintStatus(color.CYAN, \"Added schema and table\");\n\nprintStatus(color.YELLOW, \"Realtime quickstart setup complete\");\n\nfinal MeetupRsvpStream meetupRSVPProvider = new MeetupRsvpStream(schema);\nmeetupRSVPProvider.run();\nprintStatus(color.CYAN, \"Starting meetup data stream and publishing to kafka\");\n\n// lets wait for a few events to get populated\nThread.sleep(5000);\n\nString q1 = \"select count(*) from meetupRsvp limit 0\";\nprintStatus(color.YELLOW, \"Total number of documents in the table\");\nprintStatus(color.CYAN, \"Query : \" + q1);\nprintStatus(color.YELLOW, prettyprintResponse(runner.runQuery(q1)));\nprintStatus(color.GREEN, \"***************************************************\");\n\nString q2 = \"select sum(rsvp_count) from meetupRsvp group by group_city top 10 limit 0\";\nprintStatus(color.YELLOW, \"Top 10 cities with the most rsvp\");\nprintStatus(color.CYAN, \"Query : \" + q2);\nprintStatus(color.YELLOW, prettyprintResponse(runner.runQuery(q2)));\nprintStatus(color.GREEN, \"***************************************************\");\n\nString q3 = \"select * from meetupRsvp order by mtime limit 10\";\nprintStatus(color.YELLOW, \"Show 10 most recent rsvps\");\nprintStatus(color.CYAN, \"Query : \" + q3);\nprintStatus(color.YELLOW, prettyprintResponse(runner.runQuery(q3)));\nprintStatus(color.GREEN, \"***************************************************\");\n\nString q4 = \"select sum(rsvp_count) from meetupRsvp group by event_name top 10 limit 0\";\nprintStatus(color.YELLOW, \"Show top 10 rsvp'ed events\");\nprintStatus(color.CYAN, \"Query : \" + q4);\nprintStatus(color.YELLOW, prettyprintResponse(runner.runQuery(q4)));\nprintStatus(color.GREEN, \"***************************************************\");\n\nString q5 = \"select count(*) from meetupRsvp limit 0\";\nprintStatus(color.YELLOW, \"Total number of documents in the table\");\nprintStatus(color.CYAN, \"Query : \" + q5);\nprintStatus(color.YELLOW, prettyprintResponse(runner.runQuery(q5)));\nprintStatus(color.GREEN, \"***************************************************\");\n\nprintStatus(color.GREEN, \"you can always go to http://localhost:9000/query/ to play around in the query console\");\n\nRuntime.getRuntime().addShutdownHook(new Thread() {\n  @Override\n  public void run() {\n    try {\n      printStatus(color.GREEN, \"***** shutting down realtime quickstart *****\");\n      meetupRSVPProvider.stopPublishing();\n      FileUtils.deleteDirectory(_quickStartDataDir);\n      runner.stop();\n      runner.clean();\n      KafkaStarterUtils.stopServer(kafkaStarter);\n      ZkStarter.stopLocalZkServer(_zookeeperInstance);\n    } catch (Exception e) {\n      e.printStackTrace();\n    }\n  }\n});\n\nlong st = System.currentTimeMillis();\nwhile (true) {\n  if (System.currentTimeMillis() - st >= (60 * 60) * 1000) {\n    break;\n  }\n}\n\nprintStatus(color.YELLOW, \"running since an hour, stopping now\");\n\n}\npublic static void main(String[] args) {\n    RealtimeQuickStart rst = new RealtimeQuickStart();\n    try {\n      rst.execute();\n    } catch (Exception e) {\n      System.out.println(e.getMessage());\n      e.printStackTrace();\n    }\n  }\n}\n```\n. There are no error or exception in \"pinotBroker.log\". I use the web console (http://controllerHost:9000/query/#)  to interact with Pinot.\n\n. I have saved this problem. It is a long story, if you want the detail then massage me.\n. ",
    "debug529": "but it don't work well,\nI run the sql(select * from test order by time desc limit 10,20)in shell, \nit returned different results every time.\n. @fx19880617  thanks! how about the paging which contains group by condition?\n/*Top 5 run scorers of the year 2000*/\nselect sum('runs') from baseballStats where yearID=2000 group by playerName top 5 limit 0\nit returned top 5 records, Bug if I want to get 5 to 10 records?\nselect sum('runs') from baseballStats where yearID=2000 group by playerName limit 5,5\nbut it default returned top 10, This is not correct\n. ",
    "codecov-io": "Current coverage is 49.95%\n\nMerging #122 into master will decrease coverage by 0.19%\n\ndiff\n@@             master       #122   diff @@\n==========================================\n  Files           703        699     -4   \n  Lines         38520      38730   +210   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6194       6268    +74   \n==========================================\n+ Hits          19324      19346    +22   \n- Misses        19173      19331   +158   \n- Partials         23         53    +30\n\nPowered by Codecov. Last updated by 84a0dd4...c79d9fe\n. ## Current coverage is 49.95%\nMerging #131 into master will increase coverage by <.01%\n\ndiff\n@@             master       #131   diff @@\n==========================================\n  Files           699        701     +2   \n  Lines         38295      38351    +56   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6163       6169     +6   \n==========================================\n+ Hits          19094      19157    +63   \n+ Misses        19181      19174     -7   \n  Partials         20         20\n\nPowered by Codecov. Last updated by 94beba5...3f3582d\n. ## Current coverage is 49.75%\nMerging #133 into master will decrease coverage by 0.08%\n\ndiff\n@@             master       #133   diff @@\n==========================================\n  Files           699        699          \n  Lines         38295      38295          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6163       6163          \n==========================================\n- Hits          19099      19053    -46   \n- Misses        19176      19222    +46   \n  Partials         20         20\n\nPowered by Codecov. Last updated by 119ba02...928ec1b\n. ## Current coverage is 49.75%\nMerging #136 into master will decrease coverage by 0.42%\n\ndiff\n@@             master       #136   diff @@\n==========================================\n  Files           703        699     -4   \n  Lines         38511      38299   -212   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6195       6163    -32   \n==========================================\n- Hits          19325      19055   -270   \n- Misses        19163      19224    +61   \n+ Partials         23         20     -3\n\nPowered by Codecov. Last updated by 06224c1...e46fab0\n. ## Current coverage is 49.76%\nMerging #140 into master will decrease coverage by 0.40%\n\ndiff\n@@             master       #140   diff @@\n==========================================\n  Files           703        699     -4   \n  Lines         38520      38295   -225   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6194       6163    -31   \n==========================================\n- Hits          19324      19057   -267   \n- Misses        19173      19218    +45   \n+ Partials         23         20     -3\n\nPowered by Codecov. Last updated by 84a0dd4...0b806a4\n. ## Current coverage is 49.87%\nMerging #142 into master will increase coverage by <.01%\n\ndiff\n@@             master       #142   diff @@\n==========================================\n  Files           699        701     +2   \n  Lines         38295      38319    +24   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6163       6165     +2   \n==========================================\n+ Hits          19094      19108    +14   \n- Misses        19181      19191    +10   \n  Partials         20         20\n\nPowered by Codecov. Last updated by 94beba5...374d919\n. ## Current coverage is 49.88%\nMerging #145 into master will decrease coverage by 0.30%\n\ndiff\n@@             master       #145   diff @@\n==========================================\n  Files           703        702     -1   \n  Lines         38511      38336   -175   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6195       6166    -29   \n==========================================\n- Hits          19325      19121   -204   \n- Misses        19163      19195    +32   \n+ Partials         23         20     -3\n\nPowered by Codecov. Last updated by 06224c1...9186100\n. ## Current coverage is 50.21%\nMerging #146 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #146   diff @@\n==========================================\n  Files           703        704     +1   \n  Lines         38511      38478    -33   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6195       6173    -22   \n==========================================\n- Hits          19325      19322     -3   \n+ Misses        19163      19135    -28   \n+ Partials         23         21     -2\n\nPowered by Codecov. Last updated by 06224c1...6f16ebd\n. ## Current coverage is 51.42%\nMerging #147 into master will increase coverage by 1.33%\n\ndiff\n@@             master       #147   diff @@\n==========================================\n  Files           703        387     -316   \n  Lines         38520      16631   -21889   \n  Methods           0          0            \n  Messages          0          0            \n  Branches       6194       2784    -3410   \n==========================================\n- Hits          19291       8552   -10739   \n+ Misses        19206       7360   -11846   \n- Partials         23        719     +696\n\nPowered by Codecov. Last updated by 9da299a...9fa017e\n. ## Current coverage is 52.01%\nMerging #153 into master will increase coverage by 1.86%\n\ndiff\n@@             master       #153   diff @@\n==========================================\n  Files           703        667     -36   \n  Lines         38512      36398   -2114   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       6191       6001    -190   \n==========================================\n- Hits          19313      18931    -382   \n+ Misses        19176      17445   -1731   \n+ Partials         23         22      -1\n\nPowered by Codecov. Last updated by c41e68e...2ddfb3c\n. ## Current coverage is 50.54%\nMerging #156 into master will increase coverage by 0.35%\n\ndiff\n@@             master       #156   diff @@\n==========================================\n  Files           703        708     +5   \n  Lines         38556      38737   +181   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6204       6228    +24   \n==========================================\n+ Hits          19350      19580   +230   \n+ Misses        19182      19157    -25   \n+ Partials         24          0    -24\n\nPowered by Codecov. Last updated by dae8a98...38524dc\n. ## Current coverage is 50.08%\nMerging #157 into master will decrease coverage by 0.10%\n\ndiff\n@@             master       #157   diff @@\n==========================================\n  Files           703        703          \n  Lines         38511      38520     +9   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6195       6197     +2   \n==========================================\n- Hits          19325      19289    -36   \n- Misses        19163      19208    +45   \n  Partials         23         23\n\nPowered by Codecov. Last updated by 06224c1...34a71fd\n. ## Current coverage is 50.14%\nMerging #159 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #159   diff @@\n==========================================\n  Files           703        703          \n  Lines         38511      38532    +21   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6195       6198     +3   \n==========================================\n- Hits          19325      19322     -3   \n- Misses        19163      19187    +24   \n  Partials         23         23\n\nPowered by Codecov. Last updated by 06224c1...5c5183f\n. ## Current coverage is 46.55% (diff: 80.67%)\nMerging #161 into master will increase coverage by 0.41%\n\ndiff\n@@             master       #161   diff @@\n==========================================\n  Files           707        712     +5   \n  Lines         33231      33447   +216   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4976       5008    +32   \n==========================================\n+ Hits          15335      15572   +237   \n+ Misses        16678      16632    -46   \n- Partials       1218       1243    +25\n\nPowered by Codecov. Last update 123e562...c586793\n. ## Current coverage is 50.19%\nMerging #169 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #169   diff @@\n==========================================\n  Files           703        704     +1   \n  Lines         38556      38576    +20   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6204       6206     +2   \n==========================================\n+ Hits          19350      19365    +15   \n- Misses        19182      19187     +5   \n  Partials         24         24\n\nPowered by Codecov. Last updated by dae8a98...45e100d\n. ## Current coverage is 43.33%\nMerging #170 into master will decrease coverage by 0.10%\n\ndiff\n@@             master       #170   diff @@\n==========================================\n  Files           696        696          \n  Lines         31843      31915    +72   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4754       4781    +27   \n==========================================\n- Hits          13832      13831     -1   \n- Misses        16878      16951    +73   \n  Partials       1133       1133\n\nPowered by Codecov. Last updated by 4898cff...32eb850\n. ## Current coverage is 50.28%\nMerging #171 into master will increase coverage by 0.09%\n\ndiff\n@@             master       #171   diff @@\n==========================================\n  Files           703        703          \n  Lines         38556      38571    +15   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6204       6205     +1   \n==========================================\n+ Hits          19350      19394    +44   \n+ Misses        19182      19153    -29   \n  Partials         24         24\n\nPowered by Codecov. Last updated by dae8a98...d1b1f9c\n. ## Current coverage is 50.47%\nMerging #174 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #174   diff @@\n==========================================\n  Files           711        711          \n  Lines         38818      38830    +12   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6220       6221     +1   \n==========================================\n+ Hits          19587      19598    +11   \n- Misses        19208      19209     +1   \n  Partials         23         23\n\nPowered by Codecov. Last updated by 43e6f5b...90f317d\n. ## Current coverage is 51.28%\nMerging #179 into master will increase coverage by 0.47%\n\ndiff\n@@             master       #179   diff @@\n==========================================\n  Files           711        710     -1   \n  Lines         38999      39034    +35   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6257       6268    +11   \n==========================================\n+ Hits          19815      20017   +202   \n+ Misses        19160      18996   -164   \n+ Partials         24         21     -3\n\nPowered by Codecov. Last updated by 529c3d9...86523f8\n. ## Current coverage is 50.57%\nMerging #181 into master will increase coverage by <.01%\n\ndiff\n@@             master       #181   diff @@\n==========================================\n  Files           711        711          \n  Lines         38744      38976   +232   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6207       6252    +45   \n==========================================\n+ Hits          19591      19711   +120   \n- Misses        19137      19241   +104   \n- Partials         16         24     +8\n\nPowered by Codecov. Last updated by 70b98da...fc56b78\n. ## Current coverage is 50.50%\nMerging #185 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #185   diff @@\n==========================================\n  Files           711        711          \n  Lines         38944      38948     +4   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6236       6237     +1   \n==========================================\n  Hits          19671      19671          \n- Misses        19251      19255     +4   \n  Partials         22         22\n\nPowered by Codecov. Last updated by 7c90c76...c6257fe\n. ## Current coverage is 50.88%\nMerging #195 into master will increase coverage by <.01%\n\ndiff\n@@             master       #195   diff @@\n==========================================\n  Files           711        711          \n  Lines         38998      39005     +7   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6256       6256          \n==========================================\n+ Hits          19843      19849     +6   \n- Misses        19131      19132     +1   \n  Partials         24         24\n\nPowered by Codecov. Last updated by 86235b3...e2d3250\n. ## Current coverage is 38.55%\nNo coverage report found for master at ef78c3f.\nPowered by Codecov. Last updated by ef78c3f...8c533ab\n. ## Current coverage is 50.97%\nNo coverage report found for master at 4119304.\nPowered by Codecov. Last updated by 4119304...5267725\n. ## Current coverage is 50.88%\nMerging #201 into master will increase coverage by 0.07%\n\ndiff\n@@             master       #201   diff @@\n==========================================\n  Files           711        711          \n  Lines         38999      38999          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       6257       6257          \n==========================================\n+ Hits          19815      19843    +28   \n+ Misses        19160      19132    -28   \n  Partials         24         24\n\nPowered by Codecov. Last updated by 529c3d9...006d273\n. ## Current coverage is 38.60%\nNo coverage report found for master at efd18d7.\nPowered by Codecov. Last updated by efd18d7...4f10439\n. ## Current coverage is 45.86%\nMerging #210 into master will increase coverage by 0.46%\n\ndiff\n@@             master       #210   diff @@\n==========================================\n  Files           696        697     +1   \n  Lines         32057      32173   +116   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4804       4834    +30   \n==========================================\n+ Hits          14554      14757   +203   \n+ Misses        16344      16236   -108   \n- Partials       1159       1180    +21\n\nPowered by Codecov. Last updated by b5dde0f...c08fe12\n. ## Current coverage is 43.99%\nMerging #213 into master will increase coverage by 5.86%\n\ndiff\n@@             master       #213   diff @@\n==========================================\n  Files           711        683     -28   \n  Lines         38068      32239   -5829   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       6142       4794   -1348   \n==========================================\n- Hits          14512      14182    -330   \n+ Misses        22340      16931   -5409   \n+ Partials       1216       1126     -90\n\nPowered by Codecov. Last updated by 67088e2...fbe157a\n. ## Current coverage is 38.61%\nNo coverage report found for master at ef78c3f.\nPowered by Codecov. Last updated by ef78c3f...bb007df\n. ## Current coverage is 37.43%\nMerging #216 into master will decrease coverage by 1.08%\n\ndiff\n@@             master       #216   diff @@\n==========================================\n  Files           711        667     -44   \n  Lines         39050      34660   -4390   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       6260       5621    -639   \n==========================================\n- Hits          15045      12976   -2069   \n+ Misses        22771      20602   -2169   \n+ Partials       1234       1082    -152\n\nPowered by Codecov. Last updated by 98b4ed8...dbdf64d\n. ## Current coverage is 43.55%\nMerging #219 into master will increase coverage by 0.18%\n\ndiff\n@@             master       #219   diff @@\n==========================================\n  Files           696        696          \n  Lines         31819      31839    +20   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4752       4752          \n==========================================\n+ Hits          13803      13869    +66   \n+ Misses        16878      16837    -41   \n+ Partials       1138       1133     -5\n\nPowered by Codecov. Last updated by 53b118e...548ec6e\n. ## Current coverage is 43.47%\nMerging #221 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #221   diff @@\n==========================================\n  Files           696        649     -47   \n  Lines         31843      28345   -3498   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       4754       4211    -543   \n==========================================\n- Hits          13832      12324   -1508   \n+ Misses        16878      15038   -1840   \n+ Partials       1133        983    -150\n\nPowered by Codecov. Last updated by 4898cff...047561d\n. ## Current coverage is 43.60%\nNo coverage report found for master at 391e46b.\nPowered by Codecov. Last updated by 391e46b...4dbdc59\n. ## Current coverage is 43.49%\nNo coverage report found for master at cf8d258.\nPowered by Codecov. Last updated by cf8d258...fc5f429\n. ## Current coverage is 37.61%\nMerging #227 into master will decrease coverage by 5.82%\n\ndiff\n@@             master       #227   diff @@\n==========================================\n  Files           696        667     -29   \n  Lines         31843      34678   +2835   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       4754       5621    +867   \n==========================================\n- Hits          13832      13043    -789   \n- Misses        16878      20558   +3680   \n+ Partials       1133       1077     -56\n\nPowered by Codecov. Last updated by 4898cff...7bebc12\n. ## Current coverage is 43.65%\nMerging #231 into master will increase coverage by 0.14%\n\ndiff\n@@             master       #231   diff @@\n==========================================\n  Files           697        697          \n  Lines         31962      31964     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4785       4785          \n==========================================\n+ Hits          13906      13953    +47   \n+ Misses        16925      16881    -44   \n+ Partials       1131       1130     -1\n\nPowered by Codecov. Last updated by 9413517...6f55786\n. ## Current coverage is 43.42% (diff: 81.08%)\nMerging #233 into master will decrease coverage by 2.43%\n\ndiff\n@@             master       #233   diff @@\n==========================================\n  Files           719        696     -23   \n  Lines         34166      31722   -2444   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       5113       4754    -359   \n==========================================\n- Hits          15666      13774   -1892   \n+ Misses        17250      16826    -424   \n+ Partials       1250       1122    -128\n\nPowered by Codecov. Last update 56dbcb3...859e739\n. ## Current coverage is 45.17%\nNo coverage report found for master at d8e1b22.\nPowered by Codecov. Last updated by d8e1b22...e4a6a3a\n. ## Current coverage is 46.15%\nMerging #235 into master will increase coverage by 0.75%\n\ndiff\n@@             master       #235   diff @@\n==========================================\n  Files           696        677    -19   \n  Lines         32057      31195   -862   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4804       4741    -63   \n==========================================\n- Hits          14554      14399   -155   \n+ Misses        16344      15644   -700   \n+ Partials       1159       1152     -7\n\nPowered by Codecov. Last updated by b5dde0f...43acdd8\n. ## Current coverage is 45.36%\nMerging #236 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #236   diff @@\n==========================================\n  Files           696        696          \n  Lines         32057      32057          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4804       4804          \n==========================================\n- Hits          14554      14544    -10   \n- Misses        16344      16361    +17   \n+ Partials       1159       1152     -7\n\nPowered by Codecov. Last updated by b5dde0f...22fab2c\n. ## Current coverage is 45.34%\nNo coverage report found for master at e6a210e.\nPowered by Codecov. Last updated by e6a210e...d2c859e\n. ## Current coverage is 45.45%\nNo coverage report found for master at e6a210e.\nPowered by Codecov. Last updated by e6a210e...b4feb95\n. ## Current coverage is 45.84%\nNo coverage report found for master at 14b0d68.\nPowered by Codecov. Last updated by 14b0d68...f81ff1b\n. ## Current coverage is 45.53%\nNo coverage report found for master at 14b0d68.\nPowered by Codecov. Last updated by 14b0d68...f341346\n. ## Current coverage is 45.43%\nNo coverage report found for master at 14b0d68.\nPowered by Codecov. Last updated by 14b0d68...876b4b3\n. ## Current coverage is 45.96%\nMerging #249 into master will increase coverage by 0.10%\n\ndiff\n@@             master       #249   diff @@\n==========================================\n  Files           696        696          \n  Lines         32108      32108          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4810       4810          \n==========================================\n+ Hits          14724      14758    +34   \n+ Misses        16218      16179    -39   \n- Partials       1166       1171     +5\n\nPowered by Codecov. Last updated by 3958b72...f389f58\n. ## Current coverage is 45.77%\nMerging #250 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #250   diff @@\n==========================================\n  Files           696        696          \n  Lines         32065      32065          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4804       4804          \n==========================================\n+ Hits          14664      14677    +13   \n+ Misses        16230      16219    -11   \n+ Partials       1171       1169     -2\n\nPowered by Codecov. Last updated by c62c816...213781f\n. ## Current coverage is 45.83%\nMerging #252 into master will decrease coverage by 0.09%\n\ndiff\n@@             master       #252   diff @@\n==========================================\n  Files           696        696          \n  Lines         32108      32113     +5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4810       4815     +5   \n==========================================\n- Hits          14746      14718    -28   \n- Misses        16193      16217    +24   \n- Partials       1169       1178     +9\n\nPowered by Codecov. Last updated by ba6e59b...8c6c2dd\n. ## Current coverage is 45.86%\nMerging #253 into master will decrease coverage by 0.06%\n\ndiff\n@@             master       #253   diff @@\n==========================================\n  Files           696        696          \n  Lines         32108      32114     +6   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4810       4815     +5   \n==========================================\n- Hits          14746      14728    -18   \n- Misses        16193      16212    +19   \n- Partials       1169       1174     +5\n\nPowered by Codecov. Last updated by ba6e59b...0cd42a2\n. ## Current coverage is 45.85%\nMerging #254 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #254   diff @@\n==========================================\n  Files           696        696          \n  Lines         32113      32178    +65   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4815       4823     +8   \n==========================================\n+ Hits          14727      14754    +27   \n- Misses        16210      16246    +36   \n- Partials       1176       1178     +2\n\nPowered by Codecov. Last updated by bfe5948...4bb7ddf\n. ## Current coverage is 45.78%\nMerging #256 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #256   diff @@\n==========================================\n  Files           696        696          \n  Lines         32180      32180          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4823       4823          \n==========================================\n+ Hits          14726      14733     +7   \n+ Misses        16283      16272    -11   \n- Partials       1171       1175     +4\n\nPowered by Codecov. Last updated by 114b046...e0c76a4\n. ## Current coverage is 45.76%\nMerging #257 into master will increase coverage by <.01%\n\ndiff\n@@             master       #257   diff @@\n==========================================\n  Files           696        696          \n  Lines         32180      32180          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4823       4823          \n==========================================\n+ Hits          14723      14726     +3   \n+ Misses        16285      16283     -2   \n+ Partials       1172       1171     -1\n\nPowered by Codecov. Last updated by 5ca6172...f8de1e8\n. ## Current coverage is 45.87%\nMerging #262 into master will increase coverage by 0.13%\n\ndiff\n@@             master       #262   diff @@\n==========================================\n  Files           696        697     +1   \n  Lines         32180      32266    +86   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4823       4833    +10   \n==========================================\n+ Hits          14719      14802    +83   \n- Misses        16288      16294     +6   \n+ Partials       1173       1170     -3\n\nPowered by Codecov. Last updated by cd141f8...3b47f9e\n. ## Current coverage is 45.84%\nNo coverage report found for master at d5631be.\nPowered by Codecov. Last updated by d5631be...bf2469d\n. ## Current coverage is 45.91%\nNo coverage report found for master at e958ab2.\nPowered by Codecov. Last updated by e958ab2...e094212\n. ## Current coverage is 45.93%\nNo coverage report found for master at eba3488.\nPowered by Codecov. Last updated by eba3488...b7ae4ce\n. ## Current coverage is 46.03%\nNo coverage report found for master at e99deff.\nPowered by Codecov. Last updated by e99deff...90cea9d\n. ## Current coverage is 45.86%\nNo coverage report found for master at b03461e.\nPowered by Codecov. Last updated by b03461e...e756bda\n. ## Current coverage is 45.98% (diff: 88.57%)\nNo coverage report found for master at efb94ce.\nPowered by Codecov. Last update efb94ce...4b54d4e\n. ## Current coverage is 45.92%\nMerging #290 into master will not change coverage\n\ndiff\n@@             master       #290   diff @@\n==========================================\n  Files           698        698          \n  Lines         32306      32306          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4837       4837          \n==========================================\n  Hits          14837      14837          \n- Misses        16296      16297     +1   \n+ Partials       1173       1172     -1\n\nPowered by Codecov. Last updated by b2c2e05...223ea31\n. ## Current coverage is 45.96%\nMerging #294 into master will increase coverage by 1.25%\n\ndiff\n@@             master       #294   diff @@\n==========================================\n  Files           649        701     +52   \n  Lines         29738      32595   +2857   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       4490       4889    +399   \n==========================================\n+ Hits          13297      14983   +1686   \n- Misses        15388      16429   +1041   \n- Partials       1053       1183    +130\n\nPowered by Codecov. Last updated by 82fbff2...890f2f4\n. ## Current coverage is 46.11% (diff: 100%)\nNo coverage report found for master at 64f1e20.\nPowered by Codecov. Last update 64f1e20...31a411f\n. ## Current coverage is 46.00% (diff: 100%)\nNo coverage report found for master at da206f4.\nPowered by Codecov. Last update da206f4...48b78c9\n. ## Current coverage is 46.01% (diff: 34.02%)\nNo coverage report found for master at 78dce17.\nPowered by Codecov. Last update 78dce17...807fcf9\n. ## Current coverage is 63.80% (diff: 75.40%)\nMerging #307 into master will increase coverage by 0.72%\n\ndiff\n@@             master       #307   diff @@\n==========================================\n  Files           710        710          \n  Lines         33110      32557   -553   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4991       4868   -123   \n==========================================\n- Hits          20885      20772   -113   \n+ Misses        10754      10338   -416   \n+ Partials       1471       1447    -24\n\nPowered by Codecov. Last update 75b0d5a...a6c149a\n. ## Current coverage is 64.20% (diff: 100%)\nNo coverage report found for master at e2548f1.\nPowered by Codecov. Last update e2548f1...291eccf\n. ## Current coverage is 46.09% (diff: 55.60%)\nNo coverage report found for master at a700987.\nPowered by Codecov. Last update a700987...8a0451f\n. ## Current coverage is 46.08% (diff: 71.64%)\nNo coverage report found for master at cf3a11f.\nPowered by Codecov. Last update cf3a11f...edb1258\n. ## Current coverage is 47.39% (diff: 67.76%)\nMerging #330 into master will increase coverage by 0.08%\n\ndiff\n@@             master       #330   diff @@\n==========================================\n  Files           721        724     +3   \n  Lines         33923      34089   +166   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5093       5118    +25   \n==========================================\n+ Hits          16050      16156   +106   \n- Misses        16614      16672    +58   \n- Partials       1259       1261     +2\n\nPowered by Codecov. Last update 251d650...e9feed8\n. ## Current coverage is 46.14% (diff: 40.90%)\nNo coverage report found for master at 4d56e2c.\nPowered by Codecov. Last update 4d56e2c...d0dbc0d\n. ## Current coverage is 45.84% (diff: 0.00%)\nMerging #338 into master will decrease coverage by 0.36%\n\ndiff\n@@             master       #338   diff @@\n==========================================\n  Files           704        709     +5   \n  Lines         33102      33381   +279   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4964       4993    +29   \n==========================================\n+ Hits          15297      15305     +8   \n- Misses        16595      16860   +265   \n- Partials       1210       1216     +6\n\nPowered by Codecov. Last update 4063c40...578e502\n. ## Current coverage is 46.06% (diff: 84.61%)\nMerging #340 into master will decrease coverage by 0.01%\n\ndiff\n@@             master       #340   diff @@\n==========================================\n  Files           703        703          \n  Lines         33101      33084    -17   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4972       4964     -8   \n==========================================\n- Hits          15252      15239    -13   \n+ Misses        16633      16625     -8   \n- Partials       1216       1220     +4\n\nPowered by Codecov. Last update 6730676...4adbeb6\n. ## Current coverage is 46.06% (diff: 100%)\nNo coverage report found for master at b6e7ea8.\nPowered by Codecov. Last update b6e7ea8...6981989\n. ## Current coverage is 46.07% (diff: 0.00%)\nMerging #348 into master will decrease coverage by 0.11%\n\ndiff\n@@             master       #348   diff @@\n==========================================\n  Files           703        703          \n  Lines         33084      33086     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4964       4964          \n==========================================\n- Hits          15282      15244    -38   \n- Misses        16591      16628    +37   \n- Partials       1211       1214     +3\n\nPowered by Codecov. Last update 831a642...5f648fb\n. ## Current coverage is 46.15% (diff: 100%)\nMerging #349 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #349   diff @@\n==========================================\n  Files           703        703          \n  Lines         33084      33085     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4964       4964          \n==========================================\n- Hits          15282      15272    -10   \n- Misses        16591      16598     +7   \n- Partials       1211       1215     +4\n\nPowered by Codecov. Last update 831a642...ffd3ccb\n. ## Current coverage is 46.11% (diff: 50.94%)\nMerging #350 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #350   diff @@\n==========================================\n  Files           703        704     +1   \n  Lines         33084      33099    +15   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4964       4964          \n==========================================\n- Hits          15282      15265    -17   \n- Misses        16591      16625    +34   \n+ Partials       1211       1209     -2\n\nPowered by Codecov. Last update 831a642...502e964\n. ## Current coverage is 46.09% (diff: 100%)\nNo coverage report found for master at faccb73.\nPowered by Codecov. Last update faccb73...a0d7392\n. ## Current coverage is 46.09% (diff: 100%)\nNo coverage report found for master at faccb73.\nPowered by Codecov. Last update faccb73...a0d7392\n. ## Current coverage is 46.12% (diff: 67.46%)\nNo coverage report found for master at 907aa05.\nPowered by Codecov. Last update 907aa05...6df29f3\n. ## Current coverage is 46.23% (diff: 15.30%)\nMerging #359 into master will increase coverage by <.01%\n\ndiff\n@@             master       #359   diff @@\n==========================================\n  Files           704        707     +3   \n  Lines         33102      33187    +85   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4964       4972     +8   \n==========================================\n+ Hits          15302      15343    +41   \n- Misses        16585      16627    +42   \n- Partials       1215       1217     +2\n\nPowered by Codecov. Last update 082495c...23ee374\n. ## Current coverage is 45.67% (diff: 0.00%)\nMerging #361 into master will decrease coverage by 0.18%\n\ndiff\n@@             master       #361   diff @@\n==========================================\n  Files           709        711     +2   \n  Lines         33387      33518   +131   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4995       5008    +13   \n==========================================\n- Hits          15312      15311     -1   \n- Misses        16860      16993   +133   \n+ Partials       1215       1214     -1\n\nPowered by Codecov. Last update e0824eb...8e74b70\n. ## Current coverage is 46.22% (diff: 48.14%)\nMerging #373 into master will increase coverage by 0.06%\n\ndiff\n@@             master       #373   diff @@\n==========================================\n  Files           707        707          \n  Lines         33214      33230    +16   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4976       4976          \n==========================================\n+ Hits          15332      15362    +30   \n+ Misses        16665      16647    -18   \n- Partials       1217       1221     +4\n\nPowered by Codecov. Last update af6742c...ad92f72\n. ## Current coverage is 46.22% (diff: 100%)\nNo coverage report found for master at a8024aa.\nPowered by Codecov. Last update a8024aa...97120d2\n. ## Current coverage is 46.07% (diff: 13.63%)\nNo coverage report found for master at a8024aa.\nPowered by Codecov. Last update a8024aa...12a3dbe\n. ## Current coverage is 46.10% (diff: 100%)\nMerging #379 into master will decrease coverage by 0.05%\n\ndiff\n@@             master       #379   diff @@\n==========================================\n  Files           707        707          \n  Lines         33214      33231    +17   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4976       4976          \n==========================================\n- Hits          15332      15322    -10   \n- Misses        16665      16692    +27   \n  Partials       1217       1217\n\nPowered by Codecov. Last update af6742c...0bea8aa\n. ## Current coverage is 46.03% (diff: 0.00%)\nMerging #382 into master will decrease coverage by 0.11%\n\ndiff\n@@             master       #382   diff @@\n==========================================\n  Files           707        707          \n  Lines         33231      33238     +7   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4976       4977     +1   \n==========================================\n- Hits          15335      15300    -35   \n- Misses        16678      16723    +45   \n+ Partials       1218       1215     -3\n\nPowered by Codecov. Last update 123e562...32e16f4\n. ## Current coverage is 46.29% (diff: 61.83%)\nMerging #383 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #383   diff @@\n==========================================\n  Files           717        719     +2   \n  Lines         33781      33847    +66   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5049       5063    +14   \n==========================================\n+ Hits          15642      15671    +29   \n- Misses        16894      16929    +35   \n- Partials       1245       1247     +2\n\nPowered by Codecov. Last update c871606...6508e1e\n. ## Current coverage is 46.03% (diff: 6.66%)\nNo coverage report found for master at dfb679f.\nPowered by Codecov. Last update dfb679f...cee758b\n. ## Current coverage is 45.87% (diff: 2.32%)\nMerging #388 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #388   diff @@\n==========================================\n  Files           709        710     +1   \n  Lines         33387      33429    +42   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4995       4998     +3   \n==========================================\n+ Hits          15312      15335    +23   \n- Misses        16860      16877    +17   \n- Partials       1215       1217     +2\n\nPowered by Codecov. Last update e0824eb...abf9951\n. ## Current coverage is 46.04% (diff: 60.00%)\nNo coverage report found for master at dfb679f.\nPowered by Codecov. Last update dfb679f...2279620\n. ## Current coverage is 46.31% (diff: 0.00%)\nMerging #391 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #391   diff @@\n==========================================\n  Files           717        717          \n  Lines         33762      33763     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5044       5044          \n==========================================\n- Hits          15644      15636     -8   \n- Misses        16876      16888    +12   \n+ Partials       1242       1239     -3\n\nPowered by Codecov. Last update ba60e49...11f5a78\n. ## Current coverage is 45.75% (diff: 50.00%)\nNo coverage report found for master at 5ef8277.\nPowered by Codecov. Last update 5ef8277...b9744b2\n. ## Current coverage is 47.27% (diff: 70.35%)\nMerging #398 into master will decrease coverage by 0.11%\n\ndiff\n@@             master       #398   diff @@\n==========================================\n  Files           724        724          \n  Lines         34089      34077    -12   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5118       5114     -4   \n==========================================\n- Hits          16156      16110    -46   \n- Misses        16666      16709    +43   \n+ Partials       1267       1258     -9\n\nPowered by Codecov. Last update 41f559a...bca290b\n. ## Current coverage is 46.35% (diff: 30.76%)\nMerging #400 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #400   diff @@\n==========================================\n  Files           665        717     +52   \n  Lines         29598      33783   +4185   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       4396       5053    +657   \n==========================================\n+ Hits          13708      15660   +1952   \n- Misses        14833      16872   +2039   \n- Partials       1057       1251    +194\n\nPowered by Codecov. Last update 4f52241...910f239\n. ## Current coverage is 45.86% (diff: 1.51%)\nMerging #401 into master will decrease coverage by 0.43%\n\ndiff\n@@             master       #401   diff @@\n==========================================\n  Files           717        719     +2   \n  Lines         33781      34112   +331   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5049       5099    +50   \n==========================================\n+ Hits          15642      15647     +5   \n- Misses        16894      17221   +327   \n+ Partials       1245       1244     -1\n\nPowered by Codecov. Last update c871606...9731c7b\n. ## Current coverage is 47.17% (diff: 91.02%)\nMerging #411 into master will increase coverage by 1.31%\n\ndiff\n@@             master       #411   diff @@\n==========================================\n  Files           719        719          \n  Lines         34166      33676   -490   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5113       5062    -51   \n==========================================\n+ Hits          15666      15885   +219   \n+ Misses        17250      16538   -712   \n- Partials       1250       1253     +3\n\nPowered by Codecov. Last update 56dbcb3...4d5a2d7\n. ## Current coverage is 45.90% (diff: 0.00%)\nNo coverage report found for master at 50b70d0.\nPowered by Codecov. Last update 50b70d0...c12c1ae\n. ## Current coverage is 45.91% (diff: 0.00%)\nNo coverage report found for master at 50b70d0.\nPowered by Codecov. Last update 50b70d0...dfc3bf5\n. ## Current coverage is 45.87% (diff: 0.00%)\nMerging #415 into master will increase coverage by <.01%\n\ndiff\n@@             master       #415   diff @@\n==========================================\n  Files           719        719          \n  Lines         34155      34156     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5110       5111     +1   \n==========================================\n+ Hits          15668      15669     +1   \n  Misses        17237      17237          \n  Partials       1250       1250\n\nPowered by Codecov. Last update e0b4275...ba7e8ad\n. ## Current coverage is 45.92% (diff: 0.00%)\nMerging #416 into master will increase coverage by 0.05%\n\ndiff\n@@             master       #416   diff @@\n==========================================\n  Files           719        719          \n  Lines         34155      34155          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5110       5110          \n==========================================\n+ Hits          15668      15686    +18   \n+ Misses        17237      17215    -22   \n- Partials       1250       1254     +4\n\nPowered by Codecov. Last update e0b4275...02702ee\n. ## Current coverage is 45.86% (diff: 23.52%)\nNo coverage report found for master at c669c39.\nPowered by Codecov. Last update c669c39...7bac41c\n. ## Current coverage is 45.93%\nMerging #421 into master will increase coverage by 0.08%\n\ndiff\n@@             master       #421   diff @@\n==========================================\n  Files           719        719          \n  Lines         34166      34155    -11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5113       5110     -3   \n==========================================\n+ Hits          15666      15689    +23   \n+ Misses        17250      17213    -37   \n- Partials       1250       1253     +3\n\nPowered by Codecov. Last update 56dbcb3...d9da314\n. ## Current coverage is 47.26% (diff: 100%)\nMerging #422 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #422   diff @@\n==========================================\n  Files           724        724          \n  Lines         34087      34087          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5116       5116          \n==========================================\n+ Hits          16100      16111    +11   \n+ Misses        16724      16716     -8   \n+ Partials       1263       1260     -3\n\nPowered by Codecov. Last update 49eba44...de8528c\n. ## Current coverage is 47.26% (diff: 85.27%)\nNo coverage report found for master at ac265bb.\nPowered by Codecov. Last update ac265bb...c835f2b\n. ## Current coverage is 54.54% (diff: 100%)\nNo coverage report found for master at c642a09.\nPowered by Codecov. Last update c642a09...80c949d\n. ## Current coverage is 47.40% (diff: 100%)\nNo coverage report found for master at 841e2bc.\nPowered by Codecov. Last update 841e2bc...6cec48c\n. ## Current coverage is 47.33% (diff: 44.82%)\nNo coverage report found for master at 23470d3.\nPowered by Codecov. Last update 23470d3...2d94b62\n. ## Current coverage is 47.53% (diff: 0.00%)\nNo coverage report found for master at eda332d.\nPowered by Codecov. Last update eda332d...2a2bcc0\n. ## Current coverage is 54.66% (diff: 82.14%)\nMerging #433 into master will increase coverage by 7.27%\n\ndiff\n@@             master       #433   diff @@\n==========================================\n  Files           724        808     +84   \n  Lines         34089      38334   +4245   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       5118       5724    +606   \n==========================================\n+ Hits          16156      20956   +4800   \n+ Misses        16666      15884    -782   \n- Partials       1267       1494    +227\n\nPowered by Codecov. Last update 41f559a...411f310\n. ## Current coverage is 54.51% (diff: 100%)\nNo coverage report found for master at 23470d3.\nPowered by Codecov. Last update 23470d3...224fbee\n. ## Current coverage is 63.23% (diff: 71.54%)\nNo coverage report found for master at aaaffd3.\nPowered by Codecov. Last update aaaffd3...6ac0768\n. ## Current coverage is 54.50% (diff: 0.00%)\nNo coverage report found for master at 99de48d.\nPowered by Codecov. Last update 99de48d...9e8e37e\n. ## Current coverage is 54.56% (diff: 63.63%)\nMerging #451 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #451   diff @@\n==========================================\n  Files           809        807     -2   \n  Lines         38598      38287   -311   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5776       5711    -65   \n==========================================\n- Hits          21053      20893   -160   \n+ Misses        16027      15908   -119   \n+ Partials       1518       1486    -32\n\nPowered by Codecov. Last update ceb4f16...85ba1b5\n. ## Current coverage is 54.54% (diff: 50.00%)\nNo coverage report found for master at e393037.\nPowered by Codecov. Last update e393037...6477529\n. ## Current coverage is 54.61% (diff: 69.49%)\nMerging #462 into master will increase coverage by 0.05%\n\ndiff\n@@             master       #462   diff @@\n==========================================\n  Files           807        807          \n  Lines         38287      38326    +39   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5711       5720     +9   \n==========================================\n+ Hits          20888      20932    +44   \n+ Misses        15912      15900    -12   \n- Partials       1487       1494     +7\n\nPowered by Codecov. Last update 431e0e3...ed4f06a\n. ## Current coverage is 54.58% (diff: 44.44%)\nMerging #464 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #464   diff @@\n==========================================\n  Files           807        807          \n  Lines         38287      38292     +5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5711       5712     +1   \n==========================================\n+ Hits          20888      20903    +15   \n+ Misses        15912      15902    -10   \n  Partials       1487       1487\n\nPowered by Codecov. Last update 431e0e3...6b42e4f\n. ## Current coverage is 63.11% (diff: 85.44%)\nMerging #471 into master will increase coverage by <.01%\n\ndiff\n@@             master       #471   diff @@\n==========================================\n  Files           706        706          \n  Lines         32648      32649     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4927       4928     +1   \n==========================================\n+ Hits          20604      20605     +1   \n+ Misses        10596      10590     -6   \n- Partials       1448       1454     +6\n\nPowered by Codecov. Last update b58295c...046fe40\n. ## Current coverage is 63.06% (diff: 81.48%)\nNo coverage report found for master at b3d2550.\nPowered by Codecov. Last update b3d2550...b2bdd83\n. ## Current coverage is 63.18% (diff: 100%)\nMerging #477 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #477   diff @@\n==========================================\n  Files           706        706          \n  Lines         32705      32705          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4937       4937          \n==========================================\n+ Hits          20652      20664    +12   \n+ Misses        10598      10590     -8   \n+ Partials       1455       1451     -4\n\nPowered by Codecov. Last update b0d1304...fa0f26e\n. ## Current coverage is 63.17% (diff: 100%)\nNo coverage report found for master at 8920e3e.\nPowered by Codecov. Last update 8920e3e...1cc4d03\n. ## Current coverage is 63.13% (diff: 81.08%)\nNo coverage report found for master at 17d0adb.\nPowered by Codecov. Last update 17d0adb...26701a1\n. ## Current coverage is 63.16% (diff: 76.56%)\nNo coverage report found for master at 222c4ea.\nPowered by Codecov. Last update 222c4ea...f6c702f\n. ## Current coverage is 63.12% (diff: 100%)\nNo coverage report found for master at 3ac2e60.\nPowered by Codecov. Last update 3ac2e60...d39b667\n. ## Current coverage is 63.14% (diff: 100%)\nNo coverage report found for master at 222c4ea.\nPowered by Codecov. Last update 222c4ea...357553f\n. ## Current coverage is 63.17% (diff: 100%)\nNo coverage report found for master at 222c4ea.\nPowered by Codecov. Last update 222c4ea...6682122\n. ## Current coverage is 63.14% (diff: 100%)\nNo coverage report found for master at 222c4ea.\nPowered by Codecov. Last update 222c4ea...ca10a36\n. ## Current coverage is 63.11% (diff: 100%)\nNo coverage report found for master at 222c4ea.\nPowered by Codecov. Last update 222c4ea...902731b\n. ## Current coverage is 63.14% (diff: 0.00%)\nMerging #501 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #501   diff @@\n==========================================\n  Files           707        707          \n  Lines         32798      32798          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4945       4945          \n==========================================\n- Hits          20718      20709     -9   \n- Misses        10619      10629    +10   \n+ Partials       1461       1460     -1\n\nPowered by Codecov. Last update 5082115...7a2667b\n. ## Current coverage is 63.16% (diff: 61.27%)\nNo coverage report found for master at 0d9993c.\nPowered by Codecov. Last update 0d9993c...a947372\n. ## Current coverage is 63.22% (diff: 61.53%)\nMerging #504 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #504   diff @@\n==========================================\n  Files           709        709          \n  Lines         32980      32968    -12   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4977       4978     +1   \n==========================================\n+ Hits          20842      20844     +2   \n+ Misses        10668      10647    -21   \n- Partials       1470       1477     +7\n\nPowered by Codecov. Last update 0700d09...0840395\n. ## Current coverage is 63.20% (diff: 100%)\nMerging #507 into master will increase coverage by <.01%\n\ndiff\n@@             master       #507   diff @@\n==========================================\n  Files           709        709          \n  Lines         32980      32981     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4977       4977          \n==========================================\n+ Hits          20842      20844     +2   \n  Misses        10668      10668          \n+ Partials       1470       1469     -1\n\nPowered by Codecov. Last update 0700d09...30ca5fd\n. ## Current coverage is 63.24% (diff: 83.33%)\nNo coverage report found for master at 2b6be6c.\nPowered by Codecov. Last update 2b6be6c...1449fed\n. ## Current coverage is 63.18% (diff: 60.00%)\nMerging #513 into master will increase coverage by <.01%\n\ndiff\n@@             master       #513   diff @@\n==========================================\n  Files           710        710          \n  Lines         33085      33084     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4986       4986          \n==========================================\n+ Hits          20903      20905     +2   \n+ Misses        10710      10703     -7   \n- Partials       1472       1476     +4\n\nPowered by Codecov. Last update 29d94b2...b91d166\n. ## Current coverage is 63.22% (diff: 100%)\nMerging #515 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #515   diff @@\n==========================================\n  Files           710        710          \n  Lines         33100      33033    -67   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4990       4971    -19   \n==========================================\n- Hits          20918      20885    -33   \n+ Misses        10711      10683    -28   \n+ Partials       1471       1465     -6\n\nPowered by Codecov. Last update 3dbe323...40cea0e\n. ## Current coverage is 63.17% (diff: 53.33%)\nNo coverage report found for master at 2f3fd07.\nPowered by Codecov. Last update 2f3fd07...a088c63\n. ## Current coverage is 63.28% (diff: 91.66%)\nNo coverage report found for master at d7c7a4d.\nPowered by Codecov. Last update d7c7a4d...9de8aa1\n. ## Current coverage is 63.07% (diff: 100%)\nNo coverage report found for master at ad6708f.\nPowered by Codecov. Last update ad6708f...f62d493\n. ## Current coverage is 63.98% (diff: 84.22%)\nMerging #532 into master will increase coverage by 0.17%\n\ndiff\n@@             master       #532   diff @@\n==========================================\n  Files           710        714     +4   \n  Lines         32570      32825   +255   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4869       4911    +42   \n==========================================\n+ Hits          20783      21003   +220   \n- Misses        10342      10368    +26   \n- Partials       1445       1454     +9\n\nPowered by Codecov. Last update 2406f7a...7e1f71f\n. ## Current coverage is 63.31% (diff: 90.00%)\nNo coverage report found for master at ad6708f.\nPowered by Codecov. Last update ad6708f...572e714\n. ## Current coverage is 63.99% (diff: 84.78%)\nMerging #536 into master will increase coverage by 0.06%\n\ndiff\n@@             master       #536   diff @@\n==========================================\n  Files           714        718     +4   \n  Lines         32873      32966    +93   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4919       4929    +10   \n==========================================\n+ Hits          21018      21098    +80   \n- Misses        10396      10406    +10   \n- Partials       1459       1462     +3\n\nPowered by Codecov. Last update 496a6c7...d31f9b7\n. ## Current coverage is 63.05% (diff: 29.62%)\nNo coverage report found for master at 290333f.\nPowered by Codecov. Last update 290333f...4adcf18\n. ## Current coverage is 63.96% (diff: 100%)\nNo coverage report found for master at f7f91c2.\nPowered by Codecov. Last update f7f91c2...f9bfb98\n. ## Current coverage is 63.94% (diff: 78.37%)\nNo coverage report found for master at dad5889.\nPowered by Codecov. Last update dad5889...6a286ae\n. ## Current coverage is 64.10% (diff: 96.29%)\nNo coverage report found for master at dad5889.\nPowered by Codecov. Last update dad5889...cf58d76\n. ## Current coverage is 63.98% (diff: 100%)\nNo coverage report found for master at 500e0e7.\nPowered by Codecov. Last update 500e0e7...34c7175\n. ## Current coverage is 63.92% (diff: 86.66%)\nNo coverage report found for master at 18ed9b1.\nPowered by Codecov. Last update 18ed9b1...bc940bb\n. ## Current coverage is 64.01% (diff: 87.50%)\nNo coverage report found for master at 18ed9b1.\nPowered by Codecov. Last update 18ed9b1...b4d4439\n. ## Current coverage is 63.98% (diff: 55.55%)\nNo coverage report found for master at feef0ef.\nPowered by Codecov. Last update feef0ef...bbb65bd\n. ## Current coverage is 63.94% (diff: 100%)\nNo coverage report found for master at f7f91c2.\nPowered by Codecov. Last update f7f91c2...4c8e27e\n. ## Current coverage is 63.94% (diff: 63.63%)\nMerging #561 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #561   diff @@\n==========================================\n  Files           714        714          \n  Lines         32874      32885    +11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4919       4921     +2   \n==========================================\n+ Hits          21021      21028     +7   \n- Misses        10392      10398     +6   \n+ Partials       1461       1459     -2\n\nPowered by Codecov. Last update e67c6d5...63f3da2\n. ## Current coverage is 63.94% (diff: 100%)\nNo coverage report found for master at 50c8234.\nPowered by Codecov. Last update 50c8234...a0f31a3\n. ## Current coverage is 64.00% (diff: 71.42%)\nNo coverage report found for master at 90f398a.\nPowered by Codecov. Last update 90f398a...47f2c77\n. ## Current coverage is 64.01% (diff: 100%)\nMerging #576 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #576   diff @@\n==========================================\n  Files           718        718          \n  Lines         32978      32972     -6   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4930       4929     -1   \n==========================================\n- Hits          21122      21107    -15   \n- Misses        10393      10398     +5   \n- Partials       1463       1467     +4\n\nPowered by Codecov. Last update c4a802c...58e7da2\n. ## Current coverage is 63.98% (diff: 100%)\nNo coverage report found for master at 63d1985.\nPowered by Codecov. Last update 63d1985...87c79a1\n. ## Current coverage is 64.02% (diff: 64.70%)\nNo coverage report found for master at e2548f1.\nPowered by Codecov. Last update e2548f1...1b9d9c6\n. ## Current coverage is 64.16% (diff: 30.30%)\nMerging #585 into master will decrease coverage by 0.05%\n\ndiff\n@@             master       #585   diff @@\n==========================================\n  Files           718        718          \n  Lines         32996      33000     +4   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4935       4937     +2   \n==========================================\n- Hits          21189      21174    -15   \n- Misses        10349      10361    +12   \n- Partials       1458       1465     +7\n\nPowered by Codecov. Last update e1c9fc9...50ff954\n. ## Current coverage is 64.21% (diff: 94.44%)\nNo coverage report found for master at cb0d9b1.\nPowered by Codecov. Last update cb0d9b1...29e8e1a\n. ## Current coverage is 64.21% (diff: 85.71%)\nNo coverage report found for master at 3c02db2.\nPowered by Codecov. Last update 3c02db2...117ba6b\n. ## Current coverage is 64.21% (diff: 81.81%)\nNo coverage report found for master at 3c02db2.\nPowered by Codecov. Last update 3c02db2...fd5244b\n. ## Current coverage is 64.18% (diff: 50.00%)\nNo coverage report found for master at 3c02db2.\nPowered by Codecov. Last update 3c02db2...714b377\n. ## Current coverage is 64.19% (diff: 100%)\nMerging #598 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #598   diff @@\n==========================================\n  Files           718        718          \n  Lines         32997      33002     +5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4935       4935          \n==========================================\n+ Hits          21178      21186     +8   \n+ Misses        10357      10347    -10   \n- Partials       1462       1469     +7\n\nPowered by Codecov. Last update 3cec840...e56c925\n. ## Current coverage is 64.22% (diff: 56.66%)\nNo coverage report found for master at bca3a4a.\nPowered by Codecov. Last update bca3a4a...4390368\n. ## Current coverage is 64.29% (diff: 79.72%)\nMerging #601 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #601   diff @@\n==========================================\n  Files           718        718          \n  Lines         33015      33048    +33   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4937       4945     +8   \n==========================================\n+ Hits          21217      21247    +30   \n- Misses        10328      10330     +2   \n- Partials       1470       1471     +1\n\nPowered by Codecov. Last update bc8ccac...0914ad1\n. ## Current coverage is 64.24% (diff: 83.63%)\nNo coverage report found for master at bca3a4a.\nPowered by Codecov. Last update bca3a4a...0c53f95\n. ## Current coverage is 64.26% (diff: 100%)\nMerging #607 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #607   diff @@\n==========================================\n  Files           718        718          \n  Lines         33048      33047     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4945       4945          \n==========================================\n+ Hits          21232      21239     +7   \n+ Misses        10349      10340     -9   \n- Partials       1467       1468     +1\n\nPowered by Codecov. Last update 592864b...0f309c6\n. ## Current coverage is 64.31% (diff: 80.00%)\nMerging #609 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #609   diff @@\n==========================================\n  Files           717        717          \n  Lines         33122      33137    +15   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4957       4962     +5   \n==========================================\n+ Hits          21309      21312     +3   \n- Misses        10336      10338     +2   \n- Partials       1477       1487    +10\n\nPowered by Codecov. Last update d899d7d...23eb5b9\n. ## Current coverage is 64.32% (diff: 11.76%)\nNo coverage report found for master at b74ea50.\nPowered by Codecov. Last update b74ea50...f9b0bdd\n. ## Current coverage is 64.30% (diff: 100%)\nNo coverage report found for master at cb0d9b1.\nPowered by Codecov. Last update cb0d9b1...61e8765\n. ## Current coverage is 64.21% (diff: 100%)\nNo coverage report found for master at cb0d9b1.\nPowered by Codecov. Last update cb0d9b1...5ca1e15\n. ## Current coverage is 64.32% (diff: 100%)\nMerging #620 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #620   diff @@\n==========================================\n  Files           718        718          \n  Lines         33071      33082    +11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       4948       4951     +3   \n==========================================\n+ Hits          21258      21280    +22   \n+ Misses        10344      10326    -18   \n- Partials       1469       1476     +7\n\nPowered by Codecov. Last update cf0b1da...f1b1dfd\n. ## Current coverage is 64.19% (diff: 83.33%)\nNo coverage report found for master at f706797.\nPowered by Codecov. Last update f706797...6d89181\n. ## Current coverage is 64.23% (diff: 100%)\nNo coverage report found for master at ff27062.\nPowered by Codecov. Last update ff27062...46871b5\n. ## Current coverage is 64.25% (diff: 65.85%)\nNo coverage report found for master at ff27062.\nPowered by Codecov. Last update ff27062...b9c5d43\n. ## Current coverage is 64.22% (diff: 32.35%)\nNo coverage report found for master at 5c67617.\nPowered by Codecov. Last update 5c67617...6268bbc\n. ## Current coverage is 64.31% (diff: 100%)\nNo coverage report found for master at bca3a4a.\nPowered by Codecov. Last update bca3a4a...132a3f3\n. ## Current coverage is 64.23% (diff: 57.14%)\nMerging #637 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #637   diff @@\n==========================================\n  Files           727        727          \n  Lines         33757      33792    +35   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5153       5160     +7   \n==========================================\n+ Hits          21687      21707    +20   \n- Misses        10548      10562    +14   \n- Partials       1522       1523     +1\n\nPowered by Codecov. Last update 8109c38...d38a3d1\n. ## Current coverage is 64.27% (diff: 93.93%)\nNo coverage report found for master at 03bdcee.\nPowered by Codecov. Last update 03bdcee...43fd936\n. ## Current coverage is 64.22% (diff: 88.88%)\nNo coverage report found for master at 78141ed.\nPowered by Codecov. Last update 78141ed...911e1fc\n. ## Current coverage is 64.21% (diff: 100%)\nNo coverage report found for master at b72a702.\nPowered by Codecov. Last update b72a702...00a508f\n. ## Current coverage is 64.21% (diff: 28.57%)\nNo coverage report found for master at b72a702.\nPowered by Codecov. Last update b72a702...8015ec2\n. ## Current coverage is 64.99% (diff: 85.63%)\nMerging #648 into master will increase coverage by 0.10%\n\ndiff\n@@             master       #648   diff @@\n==========================================\n  Files           753        763    +10   \n  Lines         35426      35642   +216   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5284       5314    +30   \n==========================================\n+ Hits          22987      23166   +179   \n- Misses        10952      10971    +19   \n- Partials       1487       1505    +18\n\nPowered by Codecov. Last update a3cdc6c...135499c. ## Current coverage is 64.20% (diff: 0.00%)\nMerging #650 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #650   diff @@\n==========================================\n  Files           727        727          \n  Lines         33876      33878     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5177       5177          \n==========================================\n+ Hits          21741      21752    +11   \n+ Misses        10606      10594    -12   \n- Partials       1529       1532     +3\n\nPowered by Codecov. Last update 1714b2f...f40e8f6\n. ## Current coverage is 64.23% (diff: 100%)\nNo coverage report found for master at 163ddaa.\nPowered by Codecov. Last update 163ddaa...444e03f\n. ## Current coverage is 64.27% (diff: 100%)\nNo coverage report found for master at 6770a5e.\nPowered by Codecov. Last update 6770a5e...1c740b1\n. ## Current coverage is 64.22% (diff: 100%)\nNo coverage report found for master at 6770a5e.\nPowered by Codecov. Last update 6770a5e...472ba38\n. ## Current coverage is 64.26% (diff: 100%)\nNo coverage report found for master at 3e89bf6.\nPowered by Codecov. Last update 3e89bf6...f10c3cb\n. ## Current coverage is 64.93% (diff: 100%)\nMerging #675 into master will decrease coverage by 0.10%\n\ndiff\n@@             master       #675   diff @@\n==========================================\n  Files           743        743          \n  Lines         35086      35086          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5247       5247          \n==========================================\n- Hits          22819      22783    -36   \n- Misses        10763      10794    +31   \n- Partials       1504       1509     +5\n\nPowered by Codecov. Last update 993756e...c35991e. ## Current coverage is 64.42% (diff: 71.24%)\nMerging #676 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #676   diff @@\n==========================================\n  Files           731        732     +1   \n  Lines         34201      34324   +123   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5231       5259    +28   \n==========================================\n+ Hits          22026      22113    +87   \n- Misses        10635      10665    +30   \n- Partials       1540       1546     +6\n\nPowered by Codecov. Last update 3da432f...370a76c\n. ## Current coverage is 64.26% (diff: 0.00%)\nNo coverage report found for master at 0bc4d04.\nPowered by Codecov. Last update 0bc4d04...be23b7e\n. ## Current coverage is 64.23% (diff: 68.75%)\nNo coverage report found for master at 5200001.\nPowered by Codecov. Last update 5200001...54efcfa\n. ## Current coverage is 64.28% (diff: 66.66%)\nNo coverage report found for master at 8e23062.\nPowered by Codecov. Last update 8e23062...ca79aec\n. ## Current coverage is 64.28% (diff: 50.00%)\nNo coverage report found for master at 8e23062.\nPowered by Codecov. Last update 8e23062...d0f5ec3\n. ## Current coverage is 64.40% (diff: 86.69%)\nNo coverage report found for master at 8e23062.\nPowered by Codecov. Last update 8e23062...856a6e0\n. ## Current coverage is 64.35% (diff: 100%)\nNo coverage report found for master at 8678561.\nPowered by Codecov. Last update 8678561...0164449\n. ## Current coverage is 64.37% (diff: 0.00%)\nNo coverage report found for master at 8678561.\nPowered by Codecov. Last update 8678561...8eb6126\n. ## Current coverage is 64.32% (diff: 90.00%)\nNo coverage report found for master at 00047a7.\nPowered by Codecov. Last update 00047a7...1a9f4ed\n. ## Current coverage is 64.44% (diff: 69.23%)\nMerging #702 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #702   diff @@\n==========================================\n  Files           731        732     +1   \n  Lines         34328      34365    +37   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5263       5267     +4   \n==========================================\n+ Hits          22107      22148    +41   \n+ Misses        10668      10663     -5   \n- Partials       1553       1554     +1\n\nPowered by Codecov. Last update ab19e5f...ba8daee\n. ## Current coverage is 64.42% (diff: 100%)\nMerging #704 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #704   diff @@\n==========================================\n  Files           731        731          \n  Lines         34201      34203     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5231       5231          \n==========================================\n+ Hits          22026      22034     +8   \n+ Misses        10635      10631     -4   \n+ Partials       1540       1538     -2\n\nPowered by Codecov. Last update 3da432f...df1f6f0\n. ## Current coverage is 64.40% (diff: 100%)\nNo coverage report found for master at 0bf391d.\nPowered by Codecov. Last update 0bf391d...3ebd710\n. ## Current coverage is 64.39% (diff: 100%)\nMerging #713 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #713   diff @@\n==========================================\n  Files           731        731          \n  Lines         34217      34213     -4   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5234       5234          \n==========================================\n- Hits          22035      22032     -3   \n- Misses        10633      10635     +2   \n+ Partials       1549       1546     -3\n\nPowered by Codecov. Last update a9f4d9c...2b0015d\n. ## Current coverage is 64.33% (diff: 0.00%)\nMerging #719 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #719   diff @@\n==========================================\n  Files           730        730          \n  Lines         34205      34213     +8   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5235       5238     +3   \n==========================================\n- Hits          22030      22011    -19   \n- Misses        10624      10649    +25   \n- Partials       1551       1553     +2\n\nPowered by Codecov. Last update f95bc35...3a56e3f\n. ## Current coverage is 64.30% (diff: 12.50%)\nMerging #720 into master will decrease coverage by 0.10%\n\ndiff\n@@             master       #720   diff @@\n==========================================\n  Files           730        730          \n  Lines         34205      34219    +14   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5235       5239     +4   \n==========================================\n- Hits          22030      22003    -27   \n- Misses        10624      10667    +43   \n+ Partials       1551       1549     -2\n\nPowered by Codecov. Last update f95bc35...d72ce84\n. ## Current coverage is 64.44% (diff: 0.00%)\nMerging #723 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #723   diff @@\n==========================================\n  Files           731        731          \n  Lines         34328      34329     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5263       5263          \n==========================================\n+ Hits          22107      22123    +16   \n+ Misses        10668      10653    -15   \n  Partials       1553       1553\n\nPowered by Codecov. Last update ab19e5f...c6dc89a\n. ## Current coverage is 64.38% (diff: 88.23%)\nMerging #726 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #726   diff @@\n==========================================\n  Files           732        733     +1   \n  Lines         34379      34386     +7   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5271       5272     +1   \n==========================================\n+ Hits          22121      22140    +19   \n+ Misses        10708      10686    -22   \n- Partials       1550       1560    +10\n\nPowered by Codecov. Last update 24c0ce7...ddfbee2\n. ## Current coverage is 64.49% (diff: 89.74%)\nMerging #728 into master will increase coverage by 0.13%\n\ndiff\n@@             master       #728   diff @@\n==========================================\n  Files           733        734     +1   \n  Lines         34387      34465    +78   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5272       5293    +21   \n==========================================\n+ Hits          22132      22228    +96   \n+ Misses        10704      10680    -24   \n- Partials       1551       1557     +6\n\nPowered by Codecov. Last update 528d38a...2b2b33d\n. ## Current coverage is 64.46% (diff: 100%)\nNo coverage report found for master at b674498.\nPowered by Codecov. Last update b674498...3ed8c94\n. ## Current coverage is 64.38% (diff: 84.37%)\nNo coverage report found for master at b674498.\nPowered by Codecov. Last update b674498...9f9164c\n. ## Current coverage is 64.48% (diff: 71.42%)\nNo coverage report found for master at a2df0f6.\nPowered by Codecov. Last update a2df0f6...38bf211\n. ## Current coverage is 64.49% (diff: 100%)\nNo coverage report found for master at a2df0f6.\nPowered by Codecov. Last update a2df0f6...725d263\n. ## Current coverage is 64.48% (diff: 50.00%)\nNo coverage report found for master at a2df0f6.\nPowered by Codecov. Last update a2df0f6...b99d6bf\n. ## Current coverage is 64.37% (diff: 0.00%)\nNo coverage report found for master at a797812.\nPowered by Codecov. Last update a797812...284949a\n. ## Current coverage is 64.46% (diff: 88.88%)\nNo coverage report found for master at 832dae3.\nPowered by Codecov. Last update 832dae3...30111e3\n. ## Current coverage is 64.38% (diff: 68.60%)\nNo coverage report found for master at 0fded25.\nPowered by Codecov. Last update 0fded25...f9d31f2\n. ## Current coverage is 64.48% (diff: 100%)\nNo coverage report found for master at 610e6c4.\nPowered by Codecov. Last update 610e6c4...959cbd4\n. ## Current coverage is 64.51% (diff: 0.00%)\nNo coverage report found for master at 610e6c4.\nPowered by Codecov. Last update 610e6c4...5385e84\n. ## Current coverage is 64.21% (diff: 38.88%)\nMerging #765 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #765   diff @@\n==========================================\n  Files           727        727          \n  Lines         34116      34151    +35   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5218       5222     +4   \n==========================================\n+ Hits          21915      21929    +14   \n- Misses        10658      10672    +14   \n- Partials       1543       1550     +7\n\nPowered by Codecov. Last update 237c0a8...b647ce9\n. ## Current coverage is 64.36% (diff: 100%)\nNo coverage report found for master at 0fded25.\nPowered by Codecov. Last update 0fded25...d499133\n. ## Current coverage is 64.40% (diff: 100%)\nMerging #767 into master will decrease coverage by 0.05%\n\ndiff\n@@             master       #767   diff @@\n==========================================\n  Files           737        737          \n  Lines         34581      34593    +12   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5325       5328     +3   \n==========================================\n- Hits          22292      22280    -12   \n- Misses        10728      10754    +26   \n+ Partials       1561       1559     -2\n\nPowered by Codecov. Last update 670d77d...08cfd56\n. ## Current coverage is 64.41% (diff: 100%)\nMerging #768 into master will decrease coverage by 0.04%\n\ndiff\n@@             master       #768   diff @@\n==========================================\n  Files           737        737          \n  Lines         34581      34581          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5325       5325          \n==========================================\n- Hits          22292      22277    -15   \n- Misses        10728      10742    +14   \n- Partials       1561       1562     +1\n\nPowered by Codecov. Last update 670d77d...7544909\n. ## Current coverage is 64.49% (diff: 0.00%)\nMerging #770 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #770   diff @@\n==========================================\n  Files           737        737          \n  Lines         34581      34582     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5325       5325          \n==========================================\n+ Hits          22292      22304    +12   \n+ Misses        10728      10720     -8   \n+ Partials       1561       1558     -3\n\nPowered by Codecov. Last update 670d77d...36c1d5e\n. ## Current coverage is 64.65% (diff: 88.50%)\nNo coverage report found for master at 078456e.\nPowered by Codecov. Last update 078456e...d295253\n. ## Current coverage is 64.52% (diff: 98.30%)\nMerging #773 into master will increase coverage by 0.08%\n\ndiff\n@@             master       #773   diff @@\n==========================================\n  Files           739        739          \n  Lines         34601      34600     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5327       5326     -1   \n==========================================\n+ Hits          22297      22326    +29   \n+ Misses        10743      10712    -31   \n- Partials       1561       1562     +1\n\nPowered by Codecov. Last update f145bdf...b1a5cd2\n. ## Current coverage is 64.55% (diff: 88.09%)\nNo coverage report found for master at 029862d.\nPowered by Codecov. Last update 029862d...aa08e1b\n. ## Current coverage is 64.45% (diff: 71.42%)\nNo coverage report found for master at 65775a0.\nPowered by Codecov. Last update 65775a0...a056e6c\n. ## Current coverage is 64.46% (diff: 100%)\nMerging #779 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #779   diff @@\n==========================================\n  Files           739        739          \n  Lines         34601      34596     -5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5327       5326     -1   \n==========================================\n+ Hits          22297      22303     +6   \n+ Misses        10743      10734     -9   \n+ Partials       1561       1559     -2\n\nPowered by Codecov. Last update f145bdf...fd2009b\n. ## Current coverage is 64.48% (diff: 100%)\nMerging #781 into master will decrease coverage by 0.01%\n\ndiff\n@@             master       #781   diff @@\n==========================================\n  Files           739        739          \n  Lines         34596      34597     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5326       5326          \n==========================================\n- Hits          22313      22309     -4   \n- Misses        10722      10725     +3   \n- Partials       1561       1563     +2\n\nPowered by Codecov. Last update 4b228b3...6754f04\n. ## Current coverage is 64.48% (diff: 48.57%)\nMerging #782 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #782   diff @@\n==========================================\n  Files           738        738          \n  Lines         34574      34609    +35   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5318       5322     +4   \n==========================================\n+ Hits          22278      22317    +39   \n+ Misses        10701      10697     -4   \n  Partials       1595       1595\n\nPowered by Codecov. Last update 8210882...2974f1a\n. ## Current coverage is 64.21% (diff: 79.26%)\nNo coverage report found for master at 1ef38cc.\nPowered by Codecov. Last update 1ef38cc...f4df8ba\n. ## Current coverage is 64.24% (diff: 69.47%)\nMerging #795 into master will increase coverage by <.01%\n\ndiff\n@@             master       #795   diff @@\n==========================================\n  Files           727        727          \n  Lines         34136      34361   +225   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5225       5268    +43   \n==========================================\n+ Hits          21928      22075   +147   \n- Misses        10658      10715    +57   \n- Partials       1550       1571    +21\n\nPowered by Codecov. Last update 54defa2...ecd701f\n. ## Current coverage is 64.48% (diff: 34.78%)\nMerging #796 into master will decrease coverage by 0.14%\n\ndiff\n@@             master       #796   diff @@\n==========================================\n  Files           738        738          \n  Lines         34573      34622    +49   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5318       5325     +7   \n==========================================\n- Hits          22347      22327    -20   \n- Misses        10665      10703    +38   \n- Partials       1561       1592    +31\n\nPowered by Codecov. Last update 030a451...e1ed833\n. ## Current coverage is 64.56% (diff: 81.81%)\nNo coverage report found for master at 4e3fdd8.\nPowered by Codecov. Last update 4e3fdd8...02f8028\n. ## Current coverage is 57.41% (diff: 100%)\nNo coverage report found for master at d0b7cd2.\nPowered by Codecov. Last update d0b7cd2...89cc0d1\n. ## Current coverage is 64.42% (diff: 100%)\nNo coverage report found for master at e3fd7ab.\nPowered by Codecov. Last update e3fd7ab...9d96089\n. ## Current coverage is 64.50% (diff: 100%)\nMerging #804 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #804   diff @@\n==========================================\n  Files           738        738          \n  Lines         34582      34582          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5319       5319          \n==========================================\n+ Hits          22301      22307     +6   \n+ Misses        10698      10694     -4   \n+ Partials       1583       1581     -2\n\nPowered by Codecov. Last update befec9d...3b5ab80\n. ## Current coverage is 64.57% (diff: 0.00%)\nNo coverage report found for master at cec341d.\nPowered by Codecov. Last update cec341d...0d2da20\n. ## Current coverage is 63.98% (diff: 77.77%)\nNo coverage report found for master at cec341d.\nPowered by Codecov. Last update cec341d...e554e4c\n. ## Current coverage is 64.51% (diff: 100%)\nMerging #813 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #813   diff @@\n==========================================\n  Files           738        738          \n  Lines         34624      34624          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5326       5326          \n==========================================\n+ Hits          22320      22336    +16   \n+ Misses        10711      10692    -19   \n- Partials       1593       1596     +3\n\nPowered by Codecov. Last update f459db8...3170a05\n. ## Current coverage is 64.20% (diff: 100%)\nMerging #815 into master will increase coverage by 0.21%\n\ndiff\n@@             master       #815   diff @@\n==========================================\n  Files           722        722          \n  Lines         33931      33931          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5180       5180          \n==========================================\n+ Hits          21711      21784    +73   \n+ Misses        10692      10615    -77   \n- Partials       1528       1532     +4\n\nPowered by Codecov. Last update 345bd8f...6956505\n. ## Current coverage is 64.49% (diff: 100%)\nNo coverage report found for master at e330099.\nPowered by Codecov. Last update e330099...bbc1e8c\n. ## Current coverage is 64.26% (diff: 100%)\nMerging #817 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #817   diff @@\n==========================================\n  Files           723        723          \n  Lines         33997      33997          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5195       5195          \n==========================================\n- Hits          21857      21849     -8   \n- Misses        10608      10615     +7   \n- Partials       1532       1533     +1\n\nPowered by Codecov. Last update 70a172d...0c6eaf3\n. ## Current coverage is 64.28% (diff: 100%)\nMerging #819 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #819   diff @@\n==========================================\n  Files           723        723          \n  Lines         33997      33997          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5195       5195          \n==========================================\n- Hits          21857      21854     -3   \n- Misses        10608      10610     +2   \n- Partials       1532       1533     +1\n\nPowered by Codecov. Last update 70a172d...c08c85e\n. ## Current coverage is 64.28% (diff: 11.53%)\nMerging #820 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #820   diff @@\n==========================================\n  Files           723        723          \n  Lines         33997      34011    +14   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5195       5199     +4   \n==========================================\n+ Hits          21857      21863     +6   \n- Misses        10608      10612     +4   \n- Partials       1532       1536     +4\n\nPowered by Codecov. Last update 70a172d...2d6e737\n. ## Current coverage is 64.31% (diff: 87.50%)\nMerging #821 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #821   diff @@\n==========================================\n  Files           723        723          \n  Lines         33997      33993     -4   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5195       5194     -1   \n==========================================\n+ Hits          21857      21861     +4   \n+ Misses        10608      10595    -13   \n- Partials       1532       1537     +5\n\nPowered by Codecov. Last update 70a172d...2b9b15f\n. ## Current coverage is 64.20% (diff: 43.47%)\nMerging #822 into master will decrease coverage by 0.08%\n\ndiff\n@@             master       #822   diff @@\n==========================================\n  Files           723        724     +1   \n  Lines         33997      34029    +32   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5195       5205    +10   \n==========================================\n- Hits          21857      21848     -9   \n- Misses        10608      10645    +37   \n- Partials       1532       1536     +4\n\nPowered by Codecov. Last update 70a172d...fcb2e39\n. ## Current coverage is 64.23% (diff: 66.66%)\nNo coverage report found for master at 1252b86.\nPowered by Codecov. Last update 1252b86...f3fe6b9\n. ## Current coverage is 64.32% (diff: 42.85%)\nMerging #829 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #829   diff @@\n==========================================\n  Files           727        727          \n  Lines         34109      34116     +7   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5218       5218          \n==========================================\n+ Hits          21935      21945    +10   \n+ Misses        10625      10623     -2   \n+ Partials       1549       1548     -1\n\nPowered by Codecov. Last update 69432fb...2bc465c\n. ## Current coverage is 64.30% (diff: 73.52%)\nMerging #830 into master will increase coverage by 0.07%\n\ndiff\n@@             master       #830   diff @@\n==========================================\n  Files           727        727          \n  Lines         34136      34158    +22   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5225       5229     +4   \n==========================================\n+ Hits          21928      21967    +39   \n+ Misses        10658      10647    -11   \n+ Partials       1550       1544     -6\n\nPowered by Codecov. Last update 54defa2...ce03759\n. ## Current coverage is 64.21% (diff: 100%)\nMerging #831 into master will decrease coverage by 0.09%\n\ndiff\n@@             master       #831   diff @@\n==========================================\n  Files           727        727          \n  Lines         34109      34109          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5218       5218          \n==========================================\n- Hits          21935      21903    -32   \n- Misses        10625      10659    +34   \n+ Partials       1549       1547     -2\n\nPowered by Codecov. Last update 69432fb...25a1b26\n. ## Current coverage is 64.26% (diff: 100%)\nMerging #832 into master will increase coverage by 18.85%\n\ndiff\n@@             master       #832   diff @@\n==========================================\n  Files           727        727           \n  Lines         34116      34086     -30   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       5218       5218           \n==========================================\n+ Hits          15494      21907   +6413   \n+ Misses        17249      10628   -6621   \n- Partials       1373       1551    +178\n\nPowered by Codecov. Last update 237c0a8...bfed4a1\n. ## Current coverage is 64.25% (diff: 61.53%)\nMerging #833 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #833   diff @@\n==========================================\n  Files           727        727          \n  Lines         34116      34123     +7   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5218       5219     +1   \n==========================================\n+ Hits          21915      21926    +11   \n+ Misses        10658      10651     -7   \n- Partials       1543       1546     +3\n\nPowered by Codecov. Last update 237c0a8...89e83a6\n. ## Current coverage is 64.26% (diff: 100%)\nMerging #834 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #834   diff @@\n==========================================\n  Files           727        727          \n  Lines         34116      34116          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5218       5218          \n==========================================\n+ Hits          21915      21923     +8   \n+ Misses        10658      10640    -18   \n- Partials       1543       1553    +10\n\nPowered by Codecov. Last update 237c0a8...7cfd691\n. ## Current coverage is 64.25% (diff: 41.66%)\nMerging #835 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #835   diff @@\n==========================================\n  Files           727        727          \n  Lines         34123      34166    +43   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5219       5225     +6   \n==========================================\n+ Hits          21941      21955    +14   \n- Misses        10637      10656    +19   \n- Partials       1545       1555    +10\n\nPowered by Codecov. Last update 85f2416...7539e96\n. ## Current coverage is 64.21% (diff: 0.00%)\nMerging #836 into master will decrease coverage by 0.04%\n\ndiff\n@@             master       #836   diff @@\n==========================================\n  Files           727        728     +1   \n  Lines         34158      34560   +402   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5229       5309    +80   \n==========================================\n+ Hits          21949      22191   +242   \n- Misses        10660      10792   +132   \n- Partials       1549       1577    +28\n\nPowered by Codecov. Last update 9139dfc...6f1d16d\n. ## Current coverage is 64.26% (diff: 50.00%)\nMerging #839 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #839   diff @@\n==========================================\n  Files           727        728     +1   \n  Lines         34383      34384     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5272       5272          \n==========================================\n+ Hits          22090      22097     +7   \n+ Misses        10720      10711     -9   \n- Partials       1573       1576     +3\n\nPowered by Codecov. Last update 9e0b38d...49622c6\n. ## Current coverage is 64.28% (diff: 56.66%)\nMerging #842 into master will increase coverage by 0.06%\n\ndiff\n@@             master       #842   diff @@\n==========================================\n  Files           731        731          \n  Lines         34464      34488    +24   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5283       5285     +2   \n==========================================\n+ Hits          22134      22171    +37   \n+ Misses        10767      10748    -19   \n- Partials       1563       1569     +6\n\nPowered by Codecov. Last update 0bfc8d8...6a88c2c. ## Current coverage is 64.26% (diff: 77.77%)\nNo coverage report found for master at 9291aca.\nPowered by Codecov. Last update 9291aca...f68d9ec. ## Current coverage is 64.25% (diff: 75.51%)\nNo coverage report found for master at cb866d8.\nPowered by Codecov. Last update cb866d8...9f4a25d. ## Current coverage is 64.17% (diff: 78.52%)\nNo coverage report found for master at 0ba685c.\nPowered by Codecov. Last update 0ba685c...0a76ce7. ## Current coverage is 64.27% (diff: 0.00%)\nNo coverage report found for master at 47f8e94.\nPowered by Codecov. Last update 47f8e94...362eb52. ## Current coverage is 64.33% (diff: 79.84%)\nMerging #858 into master will increase coverage by 0.11%\n\ndiff\n@@             master       #858   diff @@\n==========================================\n  Files           731        731          \n  Lines         34464      34537    +73   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5283       5294    +11   \n==========================================\n+ Hits          22134      22219    +85   \n+ Misses        10767      10738    -29   \n- Partials       1563       1580    +17\n\nPowered by Codecov. Last update 0bfc8d8...11b8a9d. ## Current coverage is 64.22% (diff: 62.50%)\nMerging #863 into master will increase coverage by 19.08%\n\ndiff\n@@             master       #863   diff @@\n==========================================\n  Files           731        731           \n  Lines         34462      34464      +2   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       5282       5283      +1   \n==========================================\n+ Hits          15559      22136   +6577   \n+ Misses        17520      10758   -6762   \n- Partials       1383       1570    +187\n\nPowered by Codecov. Last update 484d23f...7e33461. ## Current coverage is 64.25% (diff: 45.23%)\nMerging #864 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #864   diff @@\n==========================================\n  Files           731        731          \n  Lines         34451      34462    +11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5280       5282     +2   \n==========================================\n+ Hits          22128      22144    +16   \n- Misses        10749      10752     +3   \n+ Partials       1574       1566     -8\n\nPowered by Codecov. Last update 4839e0e...d2e722b. ## Current coverage is 64.26% (diff: 100%)\nMerging #865 into master will increase coverage by 19.11%\n\ndiff\n@@             master       #865   diff @@\n==========================================\n  Files           731        731           \n  Lines         34462      34470      +8   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       5282       5282           \n==========================================\n+ Hits          15559      22152   +6593   \n+ Misses        17520      10745   -6775   \n- Partials       1383       1573    +190\n\nPowered by Codecov. Last update 484d23f...833d3bb. ## Current coverage is 64.22% (diff: 100%)\nMerging #866 into master will increase coverage by <.01%\n\ndiff\n@@             master       #866   diff @@\n==========================================\n  Files           731        731          \n  Lines         34464      34466     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5283       5283          \n==========================================\n+ Hits          22134      22136     +2   \n+ Misses        10767      10759     -8   \n- Partials       1563       1571     +8\n\nPowered by Codecov. Last update 0bfc8d8...6dc1fba. ## Current coverage is 64.27% (diff: 39.94%)\nMerging #868 into master will increase coverage by 0.07%\n\ndiff\n@@             master       #868   diff @@\n==========================================\n  Files           731        731          \n  Lines         34622      34585    -37   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5301       5291    -10   \n==========================================\n+ Hits          22227      22228     +1   \n+ Misses        10816      10802    -14   \n+ Partials       1579       1555    -24\n\nPowered by Codecov. Last update 23def50...161f8f7. ## Current coverage is 64.14% (diff: 100%)\nNo coverage report found for master at 3c74305.\nPowered by Codecov. Last update 3c74305...20f0943. ## Current coverage is 64.19% (diff: 100%)\nNo coverage report found for master at 3c74305.\nPowered by Codecov. Last update 3c74305...cf5def8. ## Current coverage is 64.32% (diff: 87.67%)\nMerging #871 into master will increase coverage by 0.09%\n\ndiff\n@@             master       #871   diff @@\n==========================================\n  Files           732        734     +2   \n  Lines         34700      34841   +141   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5304       5305     +1   \n==========================================\n+ Hits          22286      22410   +124   \n- Misses        10845      10869    +24   \n+ Partials       1569       1562     -7\n\nPowered by Codecov. Last update 2900e14...0f47b51. ## Current coverage is 64.22% (diff: 100%)\nNo coverage report found for master at d24a6d2.\nPowered by Codecov. Last update d24a6d2...c7881f9. ## Current coverage is 64.30% (diff: 40.70%)\nMerging #877 into master will increase coverage by 0.10%\n\ndiff\n@@             master       #877   diff @@\n==========================================\n  Files           731        731          \n  Lines         34622      34613     -9   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5301       5295     -6   \n==========================================\n+ Hits          22227      22259    +32   \n+ Misses        10816      10785    -31   \n+ Partials       1579       1569    -10\n\nPowered by Codecov. Last update 23def50...8e663fc. ## Current coverage is 64.26% (diff: 83.33%)\nNo coverage report found for master at 9132139.\nPowered by Codecov. Last update 9132139...8c6934e. ## Current coverage is 64.29% (diff: 64.13%)\nMerging #880 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #880   diff @@\n==========================================\n  Files           731        731          \n  Lines         34575      34565    -10   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5296       5291     -5   \n==========================================\n- Hits          22227      22225     -2   \n+ Misses        10769      10760     -9   \n- Partials       1579       1580     +1\n\nPowered by Codecov. Last update 381c11a...fb1d540. ## Current coverage is 64.18% (diff: 100%)\nMerging #881 into master will decrease coverage by 0.10%\n\ndiff\n@@             master       #881   diff @@\n==========================================\n  Files           731        731          \n  Lines         34575      34576     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5296       5296          \n==========================================\n- Hits          22227      22191    -36   \n- Misses        10769      10810    +41   \n+ Partials       1579       1575     -4\n\nPowered by Codecov. Last update 381c11a...78b6ebc. ## Current coverage is 64.18% (diff: 100%)\nNo coverage report found for master at 2d46f1e.\nPowered by Codecov. Last update 2d46f1e...dc0cab7. ## Current coverage is 64.23% (diff: 95.45%)\nNo coverage report found for master at d24a6d2.\nPowered by Codecov. Last update d24a6d2...9ac109d. ## Current coverage is 64.12% (diff: 0.00%)\nNo coverage report found for master at d24a6d2.\nPowered by Codecov. Last update d24a6d2...64836c5. ## Current coverage is 64.19% (diff: 44.44%)\nMerging #892 into master will increase coverage by <.01%\n\ndiff\n@@             master       #892   diff @@\n==========================================\n  Files           731        732     +1   \n  Lines         34622      34701    +79   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5301       5304     +3   \n==========================================\n+ Hits          22227      22278    +51   \n- Misses        10816      10853    +37   \n+ Partials       1579       1570     -9\n\nPowered by Codecov. Last update 23def50...984d855. ## Current coverage is 64.23% (diff: 87.30%)\nMerging #893 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #893   diff @@\n==========================================\n  Files           731        732     +1   \n  Lines         34585      34750   +165   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5291       5313    +22   \n==========================================\n+ Hits          22199      22320   +121   \n- Misses        10816      10865    +49   \n+ Partials       1570       1565     -5\n\nPowered by Codecov. Last update 72bfca4...fbe7e46. ## Current coverage is 64.26% (diff: 100%)\nMerging #895 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #895   diff @@\n==========================================\n  Files           731        731          \n  Lines         34613      34612     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5295       5295          \n==========================================\n+ Hits          22237      22244     +7   \n- Misses        10810      10811     +1   \n+ Partials       1566       1557     -9\n\nPowered by Codecov. Last update 5461e9e...6fda69a. ## Current coverage is 64.40% (diff: 75.30%)\nMerging #896 into master will increase coverage by 0.07%\n\ndiff\n@@             master       #896   diff @@\n==========================================\n  Files           734        735     +1   \n  Lines         34841      34852    +11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5305       5307     +2   \n==========================================\n+ Hits          22413      22445    +32   \n+ Misses        10868      10841    -27   \n- Partials       1560       1566     +6\n\nPowered by Codecov. Last update 59ece38...6db5a8c. ## Current coverage is 63.98% (diff: 73.68%)\nMerging #897 into master will decrease coverage by 0.23%\n\ndiff\n@@             master       #897   diff @@\n==========================================\n  Files           732        732          \n  Lines         34700      34703     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5304       5305     +1   \n==========================================\n- Hits          22286      22206    -80   \n- Misses        10845      10936    +91   \n+ Partials       1569       1561     -8\n\nPowered by Codecov. Last update 2900e14...9dbbe66. ## Current coverage is 64.42% (diff: 42.85%)\nMerging #898 into master will increase coverage by 0.09%\n\ndiff\n@@             master       #898   diff @@\n==========================================\n  Files           734        735     +1   \n  Lines         34841      34866    +25   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5305       5309     +4   \n==========================================\n+ Hits          22413      22462    +49   \n+ Misses        10868      10831    -37   \n- Partials       1560       1573    +13\n\nPowered by Codecov. Last update 59ece38...e11fe38. ## Current coverage is 64.43% (diff: 81.10%)\nMerging #899 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #899   diff @@\n==========================================\n  Files           735        743     +8   \n  Lines         34852      35032   +180   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5307       5330    +23   \n==========================================\n+ Hits          22451      22572   +121   \n- Misses        10831      10880    +49   \n- Partials       1570       1580    +10\n\nPowered by Codecov. Last update a15c624...dc70873. ## Current coverage is 64.41% (diff: 54.54%)\nMerging #900 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #900   diff @@\n==========================================\n  Files           735        735          \n  Lines         34852      34850     -2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5307       5306     -1   \n==========================================\n- Hits          22451      22448     -3   \n+ Misses        10831      10822     -9   \n- Partials       1570       1580    +10\n\nPowered by Codecov. Last update a15c624...2dec910. ## Current coverage is 64.32% (diff: 100%)\nMerging #901 into master will decrease coverage by 0.09%\n\ndiff\n@@             master       #901   diff @@\n==========================================\n  Files           735        735          \n  Lines         34852      34853     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5307       5307          \n==========================================\n- Hits          22451      22419    -32   \n- Misses        10831      10865    +34   \n+ Partials       1570       1569     -1\n\nPowered by Codecov. Last update a15c624...654f9e1. ## Current coverage is 64.45% (diff: 83.81%)\nMerging #902 into master will increase coverage by 0.23%\n\ndiff\n@@             master       #902   diff @@\n==========================================\n  Files           735        735          \n  Lines         34890      34991   +101   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5307       5332    +25   \n==========================================\n+ Hits          22404      22552   +148   \n+ Misses        10923      10868    -55   \n- Partials       1563       1571     +8\n\nPowered by Codecov. Last update c5f925a...268c855. ## Current coverage is 64.28% (diff: 88.70%)\nMerging #903 into master will decrease coverage by 0.14%\n\ndiff\n@@             master       #903   diff @@\n==========================================\n  Files           735        735          \n  Lines         34864      34907    +43   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5308       5314     +6   \n==========================================\n- Hits          22461      22439    -22   \n- Misses        10828      10893    +65   \n  Partials       1575       1575\n\nPowered by Codecov. Last update 405adcf...d43d951. ## Current coverage is 64.14% (diff: 100%)\nMerging #904 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #904   diff @@\n==========================================\n  Files           735        735          \n  Lines         34857      35191   +334   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5304       5407   +103   \n==========================================\n+ Hits          22369      22575   +206   \n- Misses        10933      11043   +110   \n- Partials       1555       1573    +18\n\nPowered by Codecov. Last update 7fd0084...9f0c8f8. ## Current coverage is 64.25% (diff: 40.00%)\nMerging #906 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #906   diff @@\n==========================================\n  Files           735        735          \n  Lines         34901      34890    -11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5310       5307     -3   \n==========================================\n+ Hits          22418      22419     +1   \n+ Misses        10929      10914    -15   \n- Partials       1554       1557     +3\n\nPowered by Codecov. Last update 1d32bfb...678dddc. ## Current coverage is 64.23% (diff: 72.09%)\nMerging #907 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #907   diff @@\n==========================================\n  Files           735        735          \n  Lines         34890      34893     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5307       5309     +2   \n==========================================\n+ Hits          22404      22413     +9   \n+ Misses        10923      10919     -4   \n+ Partials       1563       1561     -2\n\nPowered by Codecov. Last update c5f925a...ccc624a. ## Current coverage is 64.22% (diff: 33.33%)\nMerging #908 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #908   diff @@\n==========================================\n  Files           735        735          \n  Lines         34890      34895     +5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5307       5307          \n==========================================\n+ Hits          22404      22411     +7   \n- Misses        10923      10927     +4   \n+ Partials       1563       1557     -6\n\nPowered by Codecov. Last update c5f925a...3e12c11. ## Current coverage is 64.50% (diff: 100%)\nMerging #910 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #910   diff @@\n==========================================\n  Files           735        735          \n  Lines         34991      35004    +13   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5332       5335     +3   \n==========================================\n+ Hits          22556      22579    +23   \n+ Misses        10858      10856     -2   \n+ Partials       1577       1569     -8\n\nPowered by Codecov. Last update 1b1ede3...a4665a1. ## Current coverage is 64.45% (diff: 66.66%)\nMerging #911 into master will increase coverage by <.01%\n\ndiff\n@@             master       #911   diff @@\n==========================================\n  Files           735        735          \n  Lines         35015      35018     +3   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5337       5337          \n==========================================\n+ Hits          22568      22572     +4   \n  Misses        10883      10883          \n+ Partials       1564       1563     -1\n\nPowered by Codecov. Last update 4c3238d...f09bbd1. ## Current coverage is 64.61% (diff: 13.84%)\nMerging #912 into master will decrease coverage by 0.01%\n\ndiff\n@@             master       #912   diff @@\n==========================================\n  Files           743        743          \n  Lines         35197      35171    -26   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5359       5358     -1   \n==========================================\n- Hits          22747      22726    -21   \n+ Misses        10867      10852    -15   \n- Partials       1583       1593    +10\n\nPowered by Codecov. Last update 5933627...514efd9. ## Current coverage is 64.50% (diff: 40.90%)\nMerging #913 into master will decrease coverage by 0.05%\n\ndiff\n@@             master       #913   diff @@\n==========================================\n  Files           743        744     +1   \n  Lines         35175      35306   +131   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5359       5384    +25   \n==========================================\n+ Hits          22711      22775    +64   \n- Misses        10878      10947    +69   \n+ Partials       1586       1584     -2\n\nPowered by Codecov. Last update eac7d18...57ff5e2. ## Current coverage is 64.67% (diff: 100%)\nMerging #914 into master will increase coverage by 0.10%\n\ndiff\n@@             master       #914   diff @@\n==========================================\n  Files           743        743          \n  Lines         35175      35175          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5359       5359          \n==========================================\n+ Hits          22711      22749    +38   \n+ Misses        10878      10844    -34   \n+ Partials       1586       1582     -4\n\nPowered by Codecov. Last update eac7d18...fcb2e9c. ## Current coverage is 64.55% (diff: 37.03%)\nMerging #915 into master will decrease coverage by 0.01%\n\ndiff\n@@             master       #915   diff @@\n==========================================\n  Files           743        744     +1   \n  Lines         35175      35313   +138   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5359       5384    +25   \n==========================================\n+ Hits          22711      22796    +85   \n- Misses        10878      10933    +55   \n+ Partials       1586       1584     -2\n\nPowered by Codecov. Last update eac7d18...fae0c5d. ## Current coverage is 64.60% (diff: 100%)\nMerging #916 into master will increase coverage by 0.11%\n\ndiff\n@@             master       #916   diff @@\n==========================================\n  Files           744        744          \n  Lines         35306      35306          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5384       5384          \n==========================================\n+ Hits          22769      22809    +40   \n+ Misses        10950      10911    -39   \n+ Partials       1587       1586     -1\n\nPowered by Codecov. Last update de876b5...8a1e009. ## Current coverage is 64.46% (diff: 100%)\nMerging #917 into master will decrease coverage by 0.09%\n\ndiff\n@@             master       #917   diff @@\n==========================================\n  Files           744        744          \n  Lines         35306      35306          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5384       5384          \n==========================================\n- Hits          22793      22761    -32   \n- Misses        10929      10964    +35   \n+ Partials       1584       1581     -3\n\nPowered by Codecov. Last update 4409627...4c23c6e. ## Current coverage is 65.33% (diff: 87.26%)\nMerging #918 into master will increase coverage by 0.79%\n\ndiff\n@@             master       #918   diff @@\n==========================================\n  Files           744        752     +8   \n  Lines         35313      35274    -39   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5384       5247   -137   \n==========================================\n+ Hits          22791      23046   +255   \n+ Misses        10945      10716   -229   \n+ Partials       1577       1512    -65\n\nPowered by Codecov. Last update 99c7b6e...955f57c. ## Current coverage is 65.04% (diff: 74.29%)\nMerging #919 into master will decrease coverage by 0.04%\n\ndiff\n@@             master       #919   diff @@\n==========================================\n  Files           744        743     -1   \n  Lines         35383      35086   -297   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5395       5247   -148   \n==========================================\n- Hits          23033      22823   -210   \n- Misses        10731      10752    +21   \n+ Partials       1619       1511   -108\n\nPowered by Codecov. Last update 79fef91...e4fa57d. ## Current coverage is 64.50% (diff: 36.84%)\nMerging #921 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #921   diff @@\n==========================================\n  Files           744        744          \n  Lines         35363      35372     +9   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5393       5393          \n==========================================\n- Hits          22837      22818    -19   \n- Misses        10940      10966    +26   \n- Partials       1586       1588     +2\n\nPowered by Codecov. Last update 1a56786...a2c8a23. ## Current coverage is 64.97% (diff: 100%)\nMerging #922 into master will increase coverage by 0.44%\n\ndiff\n@@             master       #922   diff @@\n==========================================\n  Files           744        744          \n  Lines         35372      35377     +5   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5393       5394     +1   \n==========================================\n+ Hits          22828      22987   +159   \n+ Misses        10951      10768   -183   \n- Partials       1593       1622    +29\n\nPowered by Codecov. Last update 04693ff...f1a38f6. ## Current coverage is 64.49% (diff: 90.00%)\nMerging #923 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #923   diff @@\n==========================================\n  Files           744        744          \n  Lines         35372      35378     +6   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5393       5394     +1   \n==========================================\n- Hits          22828      22818    -10   \n- Misses        10951      10969    +18   \n+ Partials       1593       1591     -2\n\nPowered by Codecov. Last update 04693ff...22ccaac. ## Current coverage is 63.96% (diff: 82.35%)\nMerging #924 into master will increase coverage by 19.32%\n\ndiff\n@@             master       #924   diff @@\n==========================================\n  Files           744        749      +5   \n  Lines         35378      36266    +888   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       5394       5666    +272   \n==========================================\n+ Hits          15790      23196   +7406   \n+ Misses        18184      11508   -6676   \n- Partials       1404       1562    +158\n\nPowered by Codecov. Last update d35cc3e...05aead0. ## Current coverage is 65.06% (diff: 100%)\nNo coverage report found for master at 24a4d40.\nPowered by Codecov. Last update 24a4d40...3331826. ## Current coverage is 64.96% (diff: 100%)\nMerging #926 into master will decrease coverage by 0.06%\n\ndiff\n@@             master       #926   diff @@\n==========================================\n  Files           743        743          \n  Lines         35086      35086          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5247       5247          \n==========================================\n- Hits          22819      22795    -24   \n- Misses        10763      10780    +17   \n- Partials       1504       1511     +7\n\nPowered by Codecov. Last update 993756e...0886465. ## Current coverage is 64.89% (diff: 100%)\nMerging #927 into master will increase coverage by 0.01%\n\ndiff\n@@             master       #927   diff @@\n==========================================\n  Files           743        743          \n  Lines         35088      35088          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5248       5248          \n==========================================\n+ Hits          22764      22769     +5   \n- Misses        10810      10815     +5   \n+ Partials       1514       1504    -10\n\nPowered by Codecov. Last update e726728...b09195c. ## Current coverage is 65.03% (diff: 100%)\nMerging #928 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #928   diff @@\n==========================================\n  Files           743        743          \n  Lines         35086      35088     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5247       5248     +1   \n==========================================\n- Hits          22819      22818     -1   \n- Misses        10763      10766     +3   \n  Partials       1504       1504\n\nPowered by Codecov. Last update 993756e...92f03bd. ## Current coverage is 65.21% (diff: 75.71%)\nNo coverage report found for master at 24a4d40.\nPowered by Codecov. Last update 24a4d40...14bc0f4. ## Current coverage is 64.95% (diff: 0.00%)\nMerging #931 into master will decrease coverage by 0.28%\n\ndiff\n@@             master       #931   diff @@\n==========================================\n  Files           752        753     +1   \n  Lines         35274      35470   +196   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5247       5291    +44   \n==========================================\n+ Hits          23013      23040    +27   \n- Misses        10747      10945   +198   \n+ Partials       1514       1485    -29\n\nPowered by Codecov. Last update e159a6b...6688262. ## Current coverage is 65.20% (diff: 65.08%)\nMerging #932 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #932   diff @@\n==========================================\n  Files           744        750     +6   \n  Lines         34982      35148   +166   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5205       5227    +22   \n==========================================\n+ Hits          22810      22918   +108   \n- Misses        10674      10715    +41   \n- Partials       1498       1515    +17\n\nPowered by Codecov. Last update 04d7eaa...e02fbb7. ## Current coverage is 65.26% (diff: 37.50%)\nMerging #933 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #933   diff @@\n==========================================\n  Files           744        744          \n  Lines         34986      34982     -4   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5206       5205     -1   \n==========================================\n- Hits          22842      22830    -12   \n+ Misses        10652      10648     -4   \n- Partials       1492       1504    +12\n\nPowered by Codecov. Last update 0d0cbcc...84ba01c. ## Current coverage is 64.92% (diff: 97.50%)\nMerging #934 into master will decrease coverage by 0.31%\n\ndiff\n@@             master       #934   diff @@\n==========================================\n  Files           752        753     +1   \n  Lines         35274      35426   +152   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5247       5284    +37   \n==========================================\n- Hits          23013      23001    -12   \n- Misses        10747      10938   +191   \n+ Partials       1514       1487    -27\n\nPowered by Codecov. Last update e159a6b...057cc00. ## Current coverage is 65.34% (diff: 69.23%)\nMerging #936 into master will increase coverage by 0.10%\n\ndiff\n@@             master       #936   diff @@\n==========================================\n  Files           752        752          \n  Lines         35274      35296    +22   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5247       5251     +4   \n==========================================\n+ Hits          23013      23063    +50   \n+ Misses        10747      10717    -30   \n- Partials       1514       1516     +2\n\nPowered by Codecov. Last update e159a6b...ce7f106. ## Current coverage is 65.28% (diff: 20.00%)\nMerging #937 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #937   diff @@\n==========================================\n  Files           752        752          \n  Lines         35274      35294    +20   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5247       5249     +2   \n==========================================\n+ Hits          23013      23042    +29   \n+ Misses        10747      10737    -10   \n- Partials       1514       1515     +1\n\nPowered by Codecov. Last update e159a6b...044860d. ## Current coverage is 64.61% (diff: 85.71%)\nMerging #938 into master will decrease coverage by 0.05%\n\ndiff\n@@             master       #938   diff @@\n==========================================\n  Files           764        764          \n  Lines         35924      35918     -6   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5390       5389     -1   \n==========================================\n- Hits          23232      23209    -23   \n- Misses        11186      11203    +17   \n  Partials       1506       1506\n\nPowered by Codecov. Last update 7965c69...04df10c. ## Current coverage is 65.30% (diff: 79.55%)\nMerging #939 into master will increase coverage by 0.62%\n\ndiff\n@@             master       #939   diff @@\n==========================================\n  Files           763        766     +3   \n  Lines         35967      35802   -165   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5400       5395     -5   \n==========================================\n+ Hits          23261      23379   +118   \n+ Misses        11195      10915   -280   \n+ Partials       1511       1508     -3\n\nPowered by Codecov. Last update eb500d1...0e08f48. ## Current coverage is 64.89% (diff: 0.00%)\nMerging #940 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #940   diff @@\n==========================================\n  Files           753        753          \n  Lines         35470      35471     +1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5291       5291          \n==========================================\n+ Hits          23006      23018    +12   \n+ Misses        10972      10962    -10   \n+ Partials       1492       1491     -1\n\nPowered by Codecov. Last update 74a8c2a...4c0e74d. ## Current coverage is 64.61% (diff: 40.15%)\nMerging #942 into master will decrease coverage by 0.41%\n\ndiff\n@@             master       #942   diff @@\n==========================================\n  Files           764        764          \n  Lines         35632      35924   +292   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5312       5390    +78   \n==========================================\n+ Hits          23171      23213    +42   \n- Misses        10957      11206   +249   \n- Partials       1504       1505     +1\n\nPowered by Codecov. Last update 8e53fbc...4e3ea36. ## Current coverage is 66.60% (diff: 100%)\nMerging #944 into master will increase coverage by 1.30%\n\ndiff\n@@             master       #944   diff @@\n==========================================\n  Files           766        734     -32   \n  Lines         35815      34749   -1066   \n  Methods           0          0           \n  Messages          0          0           \n  Branches       5400       5177    -223   \n==========================================\n- Hits          23390      23146    -244   \n+ Misses        10905      10107    -798   \n+ Partials       1520       1496     -24\n\nPowered by Codecov. Last update 077cad5...482c14a. ## Current coverage is 64.55% (diff: 100%)\nMerging #946 into master will decrease coverage by 0.10%\n\ndiff\n@@             master       #946   diff @@\n==========================================\n  Files           764        764          \n  Lines         35918      35916     -2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5389       5388     -1   \n==========================================\n- Hits          23225      23187    -38   \n- Misses        11180      11222    +42   \n+ Partials       1513       1507     -6\n\nPowered by Codecov. Last update f221a47...f0a9a65. ## Current coverage is 64.63% (diff: 100%)\nMerging #947 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #947   diff @@\n==========================================\n  Files           764        764          \n  Lines         35918      35918          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5389       5389          \n==========================================\n- Hits          23225      23214    -11   \n- Misses        11180      11195    +15   \n+ Partials       1513       1509     -4\n\nPowered by Codecov. Last update f221a47...8e89a62. ## Current coverage is 64.57% (diff: 100%)\nMerging #949 into master will decrease coverage by 0.08%\n\ndiff\n@@             master       #949   diff @@\n==========================================\n  Files           764        764          \n  Lines         35918      35927     +9   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5389       5389          \n==========================================\n- Hits          23225      23199    -26   \n- Misses        11180      11218    +38   \n+ Partials       1513       1510     -3\n\nPowered by Codecov. Last update f221a47...65d7f42. ## Current coverage is 64.59% (diff: 52.94%)\nMerging #950 into master will decrease coverage by 0.02%\n\ndiff\n@@             master       #950   diff @@\n==========================================\n  Files           764        764          \n  Lines         35927      35938    +11   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5388       5392     +4   \n==========================================\n- Hits          23218      23215     -3   \n  Misses        11215      11215          \n- Partials       1494       1508    +14\n\nPowered by Codecov. Last update c104452...fef2d09. ## Current coverage is 64.62% (diff: 85.00%)\nMerging #951 into master will decrease coverage by <.01%\n\ndiff\n@@             master       #951   diff @@\n==========================================\n  Files           764        764          \n  Lines         35927      35946    +19   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5388       5389     +1   \n==========================================\n+ Hits          23218      23229    +11   \n+ Misses        11215      11214     -1   \n- Partials       1494       1503     +9\n\nPowered by Codecov. Last update c104452...43acfd0. ## Current coverage is 64.70% (diff: 0.00%)\nMerging #953 into master will increase coverage by 0.06%\n\ndiff\n@@             master       #953   diff @@\n==========================================\n  Files           764        764          \n  Lines         35925      35925          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5388       5388          \n==========================================\n+ Hits          23225      23247    +22   \n+ Misses        11196      11171    -25   \n- Partials       1504       1507     +3\n\nPowered by Codecov. Last update 5e222ca...a4e6c57. ## Current coverage is 64.66% (diff: 60.00%)\nMerging #955 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #955   diff @@\n==========================================\n  Files           764        764          \n  Lines         35927      35929     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5388       5390     +2   \n==========================================\n+ Hits          23218      23233    +15   \n+ Misses        11215      11187    -28   \n- Partials       1494       1509    +15\n\nPowered by Codecov. Last update c104452...02ed73b. ## Current coverage is 64.61% (diff: 90.90%)\nMerging #956 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #956   diff @@\n==========================================\n  Files           764        764          \n  Lines         35927      36131   +204   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5388       5460    +72   \n==========================================\n+ Hits          23200      23345   +145   \n- Misses        11228      11280    +52   \n- Partials       1499       1506     +7\n\nPowered by Codecov. Last update 0cca9a2...7c7b019. ## Current coverage is 64.66% (diff: 57.89%)\nMerging #957 into master will increase coverage by 0.08%\n\ndiff\n@@             master       #957   diff @@\n==========================================\n  Files           764        764          \n  Lines         35927      35951    +24   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5388       5393     +5   \n==========================================\n+ Hits          23200      23246    +46   \n+ Misses        11228      11198    -30   \n- Partials       1499       1507     +8\n\nPowered by Codecov. Last update 0cca9a2...3378509. ## Current coverage is 64.61% (diff: 0.00%)\nNo coverage report found for master at 5b1ec33.\nPowered by Codecov. Last update 5b1ec33...0956189. ## Current coverage is 64.66% (diff: 85.00%)\nMerging #959 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #959   diff @@\n==========================================\n  Files           764        764          \n  Lines         35953      35989    +36   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5395       5399     +4   \n==========================================\n+ Hits          23239      23274    +35   \n- Misses        11204      11207     +3   \n+ Partials       1510       1508     -2\n\nPowered by Codecov. Last update b47edfb...ce146e7. ## Current coverage is 64.70% (diff: 100%)\nMerging #960 into master will increase coverage by 0.04%\n\ndiff\n@@             master       #960   diff @@\n==========================================\n  Files           764        763     -1   \n  Lines         35970      35953    -17   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5398       5398          \n==========================================\n+ Hits          23257      23263     +6   \n+ Misses        11205      11187    -18   \n+ Partials       1508       1503     -5\n\nPowered by Codecov. Last update 137a841...33141ad. ## Current coverage is 64.69% (diff: 50.00%)\nMerging #962 into master will increase coverage by 0.02%\n\ndiff\n@@             master       #962   diff @@\n==========================================\n  Files           763        763          \n  Lines         35967      35980    +13   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5400       5405     +5   \n==========================================\n+ Hits          23261      23278    +17   \n+ Misses        11195      11185    -10   \n- Partials       1511       1517     +6\n\nPowered by Codecov. Last update eb500d1...96528c9. ## Current coverage is 66.68% (diff: 59.72%)\nNo coverage report found for master at 011302d.\nPowered by Codecov. Last update 011302d...6e6f778. ## Current coverage is 64.66% (diff: 92.00%)\nNo coverage report found for master at 26785a5.\nPowered by Codecov. Last update 26785a5...0b23770. ## Current coverage is 64.75% (diff: 100%)\nMerging #966 into master will increase coverage by 0.07%\n\ndiff\n@@             master       #966   diff @@\n==========================================\n  Files           763        763          \n  Lines         35967      35967          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5400       5400          \n==========================================\n+ Hits          23261      23289    +28   \n+ Misses        11195      11177    -18   \n+ Partials       1511       1501    -10\n\nPowered by Codecov. Last update eb500d1...da5b8bf. ## Current coverage is 66.58% (diff: 65.26%)\nNo coverage report found for master at 51783e3.\nPowered by Codecov. Last update 51783e3...a191b44. ## Current coverage is 65.35% (diff: 25.71%)\nMerging #968 into master will increase coverage by 0.05%\n\ndiff\n@@             master       #968   diff @@\n==========================================\n  Files           766        766          \n  Lines         35815      35836    +21   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5400       5400          \n==========================================\n+ Hits          23390      23422    +32   \n+ Misses        10905      10900     -5   \n+ Partials       1520       1514     -6\n\nPowered by Codecov. Last update 077cad5...8df5d91. ## Current coverage is 66.61% (diff: 0.00%)\nNo coverage report found for master at 011302d.\nPowered by Codecov. Last update 011302d...d2c8391. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1bcb7f1). Click here to learn what that means.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff            @@\nmaster    #972   +/-\n========================================\n  Coverage          ?     67%         \n========================================\n  Files             ?     748         \n  Lines             ?   35631         \n  Branches          ?    4530         \n========================================\n  Hits              ?   23873         \n  Misses            ?   10194         \n  Partials          ?    1564\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1bcb7f1...f57a805. Read the comment docs.. # Codecov Report\nMerging #976 into master will decrease coverage by 0.4%.\nThe diff coverage is 12.42%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #976      +/-\n=========================================\n- Coverage    67.2%   66.8%   -0.41%   \n=========================================\n  Files         750     751       +1   \n  Lines       35906   36056     +150   \n  Branches     4599    4626      +27   \n=========================================\n- Hits        24132   24087      -45   \n- Misses      10179   10373     +194   \n- Partials     1595    1596       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../controller/helix/ControllerRequestURLBuilder.java | 65.21% <0%> (-1.45%) | :x: |\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 63.26% <100%> (+1.56%) | :white_check_mark: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :x: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-8.34%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :x: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <0%> (-4.62%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.78% <0%> (-4.61%) | :x: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 84.55% <0%> (-1.48%) | :x: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 604125a...c4dd6a2. Read the comment docs.. ## Current coverage is 66.57% (diff: 100%)\nNo coverage report found for master at bab738d.\nPowered by Codecov. Last update bab738d...ebb96b8. ## Current coverage is 66.54% (diff: 80.76%)\nNo coverage report found for master at 1d8b016.\nPowered by Codecov. Last update 1d8b016...5b74175. ## Current coverage is 66.66% (diff: 0.00%)\nNo coverage report found for master at 51783e3.\nPowered by Codecov. Last update 51783e3...013c90f. ## Current coverage is 66.58% (diff: 100%)\nNo coverage report found for master at 51783e3.\nPowered by Codecov. Last update 51783e3...ecd7fac. ## Current coverage is 66.54% (diff: 100%)\nNo coverage report found for master at 1d8b016.\nPowered by Codecov. Last update 1d8b016...523e225. ## Current coverage is 66.46% (diff: 100%)\nMerging #985 into master will decrease coverage by 0.09%\n\ndiff\n@@             master       #985   diff @@\n==========================================\n  Files           739        739          \n  Lines         35034      35034          \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5230       5230          \n==========================================\n- Hits          23320      23286    -34   \n- Misses        10185      10225    +40   \n+ Partials       1529       1523     -6\n\nPowered by Codecov. Last update 41ea24b...e55b438. ## Current coverage is 66.60% (diff: 54.54%)\nNo coverage report found for master at 57dac2b.\nPowered by Codecov. Last update 57dac2b...e0975c8. ## Current coverage is 66.67% (diff: 82.35%)\nMerging #989 into master will increase coverage by 0.03%\n\ndiff\n@@             master       #989   diff @@\n==========================================\n  Files           739        739          \n  Lines         35052      35060     +8   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5234       5234          \n==========================================\n+ Hits          23357      23376    +19   \n+ Misses        10165      10151    -14   \n- Partials       1530       1533     +3\n\nPowered by Codecov. Last update f74346e...fe43e13. ## Current coverage is 66.64% (diff: 0.00%)\nNo coverage report found for master at 0636938.\nPowered by Codecov. Last update 0636938...05a1a02. ## Current coverage is 66.58% (diff: 100%)\nMerging #994 into master will decrease coverage by 0.03%\n\ndiff\n@@             master       #994   diff @@\n==========================================\n  Files           739        739          \n  Lines         35060      35068     +8   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5234       5234          \n==========================================\n- Hits          23358      23350     -8   \n- Misses        10174      10197    +23   \n+ Partials       1528       1521     -7\n\nPowered by Codecov. Last update 040ece8...38c09fd. ## Current coverage is 66.53% (diff: 18.18%)\nMerging #995 into master will decrease coverage by 0.07%\n\ndiff\n@@             master       #995   diff @@\n==========================================\n  Files           740        740          \n  Lines         35099      35121    +22   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5234       5236     +2   \n==========================================\n- Hits          23380      23368    -12   \n- Misses        10201      10229    +28   \n- Partials       1518       1524     +6\n\nPowered by Codecov. Last update 1663801...ed0a439. ## Current coverage is 66.67% (diff: 68.42%)\nMerging #1000 into master will increase coverage by 0.08%\n\ndiff\n@@             master      #1000   diff @@\n==========================================\n  Files           740        740          \n  Lines         35138      35155    +17   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5236       5240     +4   \n==========================================\n+ Hits          23401      23441    +40   \n+ Misses        10209      10183    -26   \n- Partials       1528       1531     +3\n\nPowered by Codecov. Last update 8544ccf...3b7ce45. ## Current coverage is 66.53% (diff: 100%)\nMerging #1003 into master will decrease coverage by 0.05%\n\ndiff\n@@             master      #1003   diff @@\n==========================================\n  Files           740        740          \n  Lines         35139      35138     -1   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5236       5236          \n==========================================\n- Hits          23399      23378    -21   \n- Misses        10207      10231    +24   \n+ Partials       1533       1529     -4\n\nPowered by Codecov. Last update 4e369a2...cf255fa. ## Current coverage is 66.63% (diff: 0.00%)\nMerging #1006 into master will increase coverage by 0.02%\n\ndiff\n@@             master      #1006   diff @@\n==========================================\n  Files           740        740          \n  Lines         35163      35165     +2   \n  Methods           0          0          \n  Messages          0          0          \n  Branches       5240       5241     +1   \n==========================================\n+ Hits          23423      23432     +9   \n+ Misses        10209      10200     -9   \n- Partials       1531       1533     +2\n\nPowered by Codecov. Last update a79a8c3...52e2673. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@abf5b83). Click here to learn what that means.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1036   +/-\n=========================================\n  Coverage          ?   56.82%         \n=========================================\n  Files             ?      860         \n  Lines             ?    42114         \n  Branches          ?     5375         \n=========================================\n  Hits              ?    23930         \n  Misses            ?    16596         \n  Partials          ?     1588\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 78.79% <88.88%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update abf5b83...2cdc5fa. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@abf5b83). Click here to learn what that means.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1038   +/-\n=========================================\n  Coverage          ?   56.87%         \n=========================================\n  Files             ?      860         \n  Lines             ?    42108         \n  Branches          ?     5375         \n=========================================\n  Hits              ?    23949         \n  Misses            ?    16572         \n  Partials          ?     1587\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 53.84% <100%> (\u00f8) | |\n| ...realtime/impl/dictionary/IntMutableDictionary.java | 60% <100%> (\u00f8) | |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 58.46% <100%> (\u00f8) | |\n| ...altime/impl/dictionary/FloatMutableDictionary.java | 56.92% <100%> (\u00f8) | |\n| ...ltime/impl/dictionary/StringMutableDictionary.java | 79.16% <100%> (\u00f8) | |\n| ...me/impl/dictionary/RealtimeDictionaryProvider.java | 66.66% <100%> (\u00f8) | |\n| ...ltime/impl/dictionary/MutableDictionaryReader.java | 40.98% <66.66%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update abf5b83...24711cf. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@0b82ca0). Click here to learn what that means.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1041   +/-\n=========================================\n  Coverage          ?   56.81%         \n=========================================\n  Files             ?      860         \n  Lines             ?    42116         \n  Branches          ?     5376         \n=========================================\n  Hits              ?    23927         \n  Misses            ?    16595         \n  Partials          ?     1594\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 78.84% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0b82ca0...1851a84. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@367ecf1). Click here to learn what that means.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1042   +/-\n=========================================\n  Coverage          ?   56.89%         \n=========================================\n  Files             ?      860         \n  Lines             ?    42194         \n  Branches          ?     5378         \n=========================================\n  Hits              ?    24008         \n  Misses            ?    16587         \n  Partials          ?     1599\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/com/linkedin/pinot/core/plan/FilterPlanNode.java | 93.02% <\u00f8> (\u00f8) | |\n| ...ltime/impl/dictionary/MutableDictionaryReader.java | 29.26% <100%> (\u00f8) | |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 62.35% <62.06%> (\u00f8) | |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 69.87% <67.85%> (\u00f8) | |\n| ...altime/impl/dictionary/FloatMutableDictionary.java | 71.08% <67.85%> (\u00f8) | |\n| ...realtime/impl/dictionary/IntMutableDictionary.java | 67.04% <68.42%> (\u00f8) | |\n| ...ltime/impl/dictionary/StringMutableDictionary.java | 76.38% <69.38%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 367ecf1...51e8ece. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9260696). Click here to learn what that means.\nThe diff coverage is 30.3%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1047   +/-\n=========================================\n  Coverage          ?   56.74%         \n=========================================\n  Files             ?      860         \n  Lines             ?    42140         \n  Branches          ?     5382         \n=========================================\n  Hits              ?    23914         \n  Misses            ?    16630         \n  Partials          ?     1596\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/tools/admin/command/MoveReplicaGroup.java | 0% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/tools/PinotSegmentRebalancer.java | 0% <\u00f8> (\u00f8) | |\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <\u00f8> (\u00f8) | |\n| .../helix/core/sharding/RandomAssignmentStrategy.java | 86.66% <100%> (\u00f8) | |\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 81.81% <100%> (\u00f8) | |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <72.72%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9260696...ed4e3c2. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@870a16e). Click here to learn what that means.\nThe diff coverage is 90.24%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1049   +/-\n=========================================\n  Coverage          ?   56.86%         \n=========================================\n  Files             ?      860         \n  Lines             ?    42128         \n  Branches          ?     5375         \n=========================================\n  Hits              ?    23954         \n  Misses            ?    16580         \n  Partials          ?     1594\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <\u00f8> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 79.78% <92.5%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 870a16e...c5e1c9a. Read the comment docs.. # Codecov Report\nMerging #1050 into master will increase coverage by 0.23%.\nThe diff coverage is 79.87%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1050      +/-\n==========================================\n+ Coverage   66.82%   67.05%   +0.23%   \n==========================================\n  Files         741      749       +8   \n  Lines       35388    35631     +243   \n  Branches     4501     4527      +26   \n==========================================\n+ Hits        23648    23893     +245   \n+ Misses      10187    10157      -30   \n- Partials     1553     1581      +28\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...aggregation/groupby/utils/ValueToIdMapFactory.java | 55.55% <55.55%> (\u00f8) | |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <68.75%> (\u00f8) | |\n| ...query/aggregation/groupby/utils/DoubleToIdMap.java | 68.75% <68.75%> (\u00f8) | |\n| ...re/query/aggregation/groupby/utils/IntToIdMap.java | 68.75% <68.75%> (\u00f8) | |\n| .../query/aggregation/groupby/utils/FloatToIdMap.java | 68.75% <68.75%> (\u00f8) | |\n| ...query/aggregation/groupby/utils/StringToIdMap.java | 78.57% <78.57%> (\u00f8) | |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 91.01% <80%> (-1.76%) | :x: |\n| ...upby/NoDictionaryMultiColumnGroupKeyGenerator.java | 86.48% <86.48%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 89.89% <89.89%> (\u00f8) | |\n| ...ry/aggregation/groupby/utils/BaseValueToIdMap.java | 9.09% <9.09%> (\u00f8) | |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 52af617...549e640. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9260696). Click here to learn what that means.\nThe diff coverage is n/a.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1053   +/-\n=========================================\n  Coverage          ?   56.91%         \n=========================================\n  Files             ?      860         \n  Lines             ?    42116         \n  Branches          ?     5376         \n=========================================\n  Hits              ?    23971         \n  Misses            ?    16548         \n  Partials          ?     1597\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/tools/PinotSegmentRebalancer.java | 0% <\u00f8> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9260696...385c668. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9260696). Click here to learn what that means.\nThe diff coverage is n/a.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1054   +/-\n=========================================\n  Coverage          ?   66.84%         \n=========================================\n  Files             ?      741         \n  Lines             ?    35318         \n  Branches          ?     4486         \n=========================================\n  Hits              ?    23608         \n  Misses            ?    10155         \n  Partials          ?     1555\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9260696...cfd654a. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9260696). Click here to learn what that means.\nThe diff coverage is n/a.\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1056   +/-\n========================================\n  Coverage          ?      0%         \n========================================\n  Files             ?     860         \n  Lines             ?   43358         \n  Branches          ?    5521         \n========================================\n  Hits              ?       0         \n  Misses            ?   43358         \n  Partials          ?       0\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9260696...b721bed. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9260696). Click here to learn what that means.\nThe diff coverage is 0%.\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1057   +/-\n========================================\n  Coverage          ?   56.9%         \n========================================\n  Files             ?     860         \n  Lines             ?   42430         \n  Branches          ?    5459         \n========================================\n  Hits              ?   24144         \n  Misses            ?   16699         \n  Partials          ?    1587\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <\u00f8> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9260696...a79958f. Read the comment docs.. # Codecov Report\nMerging #1059 into master will increase coverage by <.01%.\nThe diff coverage is 73.77%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1059      +/-\n==========================================\n+ Coverage   66.81%   66.82%   +<.01%   \n==========================================\n  Files         741      741            \n  Lines       35318    35364      +46   \n  Branches     4486     4498      +12   \n==========================================\n+ Hits        23599    23631      +32   \n- Misses      10165    10177      +12   \n- Partials     1554     1556       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/segment/index/column/ColumnIndexContainer.java | 88% <\u00f8> (+4%) | :white_check_mark: |\n| ...va/com/linkedin/pinot/core/common/DataFetcher.java | 76.85% <100%> (+4.53%) | :white_check_mark: |\n| .../io/writer/impl/v1/BaseChunkSingleValueWriter.java | 73.8% <100%> (+2.38%) | :white_check_mark: |\n| ...riter/impl/v1/FixedByteChunkSingleValueWriter.java | 100% <100%> (\u00f8) | :white_check_mark: |\n| ...egment/index/data/source/ColumnDataSourceImpl.java | 80% <100%> (+0.58%) | :white_check_mark: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 55.38% <53.12%> (+15.99%) | :white_check_mark: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <\u00f8> (-7.36%) | :x: |\n| ...pinot/controller/validation/ValidationManager.java | 74.88% <\u00f8> (-6.52%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.33% <\u00f8> (-2.78%) | :x: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 51.07% <\u00f8> (-2.16%) | :x: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7908c75...c562ec4. Read the comment docs.. # Codecov Report\nMerging #1064 into master will decrease coverage by -9.94%.\nThe diff coverage is 14.54%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1064      +/-\n==========================================\n- Coverage   66.85%   56.91%   -9.94%   \n==========================================\n  Files         741      861     +120   \n  Lines       35344    42253    +6909   \n  Branches     4489     5405     +916   \n==========================================\n+ Hits        23628    24048     +420   \n- Misses      10158    16620    +6462   \n- Partials     1558     1585      +27\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/server/starter/ServerInstance.java | 80.35% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.79% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 63.79% <100%> (\u00f8) | :white_check_mark: |\n| ...ver/starter/helix/ServerServiceStatusCallback.java | 12.96% <12.96%> (\u00f8) | |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <\u00f8> (-19.05%) | :x: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <\u00f8> (-8.7%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <\u00f8> (-8.09%) | :x: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <\u00f8> (-5.13%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.39% <\u00f8> (-4.94%) | :x: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <\u00f8> (-1.36%) | :x: |\n| ... and 145 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3fbe684...eb65d65. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@be476df). Click here to learn what that means.\nThe diff coverage is 90.24%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1071   +/-\n=========================================\n  Coverage          ?   66.93%         \n=========================================\n  Files             ?      749         \n  Lines             ?    35624         \n  Branches          ?     4530         \n=========================================\n  Hits              ?    23846         \n  Misses            ?    10197         \n  Partials          ?     1581\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.61% <100%> (\u00f8) | |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 55.7% <80%> (\u00f8) | |\n| ...inot/core/segment/DefaultSegmentNameGenerator.java | 93.1% <93.1%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update be476df...9687746. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@41c5838). Click here to learn what that means.\nThe diff coverage is 61.53%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1072   +/-\n=========================================\n  Coverage          ?   66.91%         \n=========================================\n  Files             ?      748         \n  Lines             ?    35592         \n  Branches          ?     4527         \n=========================================\n  Hits              ?    23818         \n  Misses            ?    10198         \n  Partials          ?     1576\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 83.78% <\u00f8> (\u00f8) | |\n| ...re/data/manager/config/TableDataManagerConfig.java | 86.36% <\u00f8> (\u00f8) | |\n| ...ava/com/linkedin/pinot/server/conf/ServerConf.java | 73.33% <\u00f8> (\u00f8) | |\n| ...data/manager/offline/AbstractTableDataManager.java | 91.15% <\u00f8> (\u00f8) | |\n| .../com/linkedin/pinot/common/query/QueryRequest.java | 78.94% <\u00f8> (\u00f8) | |\n| ...pinot/core/query/scheduler/FCFSQueryScheduler.java | 100% <100%> (\u00f8) | |\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 61.11% <100%> (\u00f8) | |\n| ...ot/core/query/scheduler/QuerySchedulerFactory.java | 31.57% <31.57%> (\u00f8) | |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 82.6% <66.66%> (\u00f8) | |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 90.47% <90.9%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 41c5838...33bfa5a. Read the comment docs.. # Codecov Report\nMerging #1077 into master will decrease coverage by -0.1%.\nThe diff coverage is 80%.\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1077     +/-\n========================================\n- Coverage      67%   66.9%   -0.1%   \n========================================\n  Files         748     748           \n  Lines       35592   35586      -6   \n  Branches     4527    4527           \n========================================\n- Hits        23848   23810     -38   \n- Misses      10167   10202     +35   \n+ Partials     1577    1574      -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 44% <100%> (-1.62%) | :x: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 68.53% <77.77%> (-0.78%) | :x: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <\u00f8> (-19.05%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <\u00f8> (-7.36%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.78% <\u00f8> (-4.94%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <\u00f8> (-4.62%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <\u00f8> (-4.55%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 75.14% <\u00f8> (-3.47%) | :x: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.56% <\u00f8> (-1.97%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.55% <\u00f8> (-1.67%) | :x: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f1dd0b...0d69a32. Read the comment docs.. # Codecov Report\nMerging #1078 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1078      +/-\n==========================================\n+ Coverage      67%   67.01%   +<.01%   \n==========================================\n  Files         748      748            \n  Lines       35592    35593       +1   \n  Branches     4527     4527            \n==========================================\n+ Hits        23848    23852       +4   \n+ Misses      10167    10164       -3   \n  Partials     1577     1577\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ion/groupby/AggregationGroupByTrimmingService.java | 100% <100%> (\u00f8) | :white_check_mark: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <\u00f8> (-19.05%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <\u00f8> (-7.36%) | :x: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <\u00f8> (-2.74%) | :x: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.56% <\u00f8> (-1.97%) | :x: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.22% <\u00f8> (-1.49%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.11% <\u00f8> (-1.12%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <\u00f8> (-0.58%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 55.36% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.27% <\u00f8> (+0.23%) | :white_check_mark: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f1dd0b...bf865fa. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@ead9223). Click here to learn what that means.\nThe diff coverage is 100%.\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1080   +/-\n========================================\n  Coverage          ?   66.9%         \n========================================\n  Files             ?     749         \n  Lines             ?   35741         \n  Branches          ?    4548         \n========================================\n  Hits              ?   23912         \n  Misses            ?   10249         \n  Partials          ?    1580\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.82% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ead9223...a4bc48f. Read the comment docs.. # Codecov Report\nMerging #1081 into master will decrease coverage by -0.03%.\nThe diff coverage is 74.07%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1081      +/-\n==========================================\n- Coverage   66.98%   66.95%   -0.03%   \n==========================================\n  Files         749      748       -1   \n  Lines       35611    35631      +20   \n  Branches     4527     4529       +2   \n==========================================\n+ Hits        23853    23856       +3   \n- Misses      10183    10193      +10   \n- Partials     1575     1582       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 55.36% <50%> (-0.34%) | :x: |\n| ...inot/core/segment/DefaultSegmentNameGenerator.java | 89.74% <80.95%> (-10.26%) | :x: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <\u00f8> (-19.05%) | :x: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <\u00f8> (-8.7%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 89.74% <\u00f8> (-7.7%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <\u00f8> (-7.36%) | :x: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <\u00f8> (-7.36%) | :x: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <\u00f8> (-5.13%) | :x: |\n| ...altime/impl/dictionary/FloatMutableDictionary.java | 58.46% <\u00f8> (-4.62%) | :x: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <\u00f8> (-3.58%) | :x: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 981a87a...862ef69. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1bcb7f1). Click here to learn what that means.\nThe diff coverage is 90.9%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1085   +/-\n=========================================\n  Coverage          ?   66.98%         \n=========================================\n  Files             ?      748         \n  Lines             ?    35636         \n  Branches          ?     4531         \n=========================================\n  Hits              ?    23869         \n  Misses            ?    10196         \n  Partials          ?     1571\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 93.75% <100%> (\u00f8) | |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.5% <87.5%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1bcb7f1...8f51636. Read the comment docs.. # Codecov Report\nMerging #1086 into master will increase coverage by 0.07%.\nThe diff coverage is 87.25%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1086      +/-\n==========================================\n+ Coverage   66.95%   67.03%   +0.07%   \n==========================================\n  Files         748      750       +2   \n  Lines       35631    35749     +118   \n  Branches     4530     4564      +34   \n==========================================\n+ Hits        23858    23963     +105   \n+ Misses      10202    10197       -5   \n- Partials     1571     1589      +18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/common/utils/request/FilterQueryTree.java | 100% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...roker/requesthandler/FilterQueryTreeOptimizer.java | 66.66% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...attenNestedPredicatesFilterQueryTreeOptimizer.java | 88% <100%> (+0.5%) | :white_check_mark: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <100%> (\u00f8) | :white_check_mark: |\n| ...er/requesthandler/FilterQueryOptimizerRequest.java | 100% <100%> (\u00f8) | |\n| ...in/pinot/core/common/predicate/RangePredicate.java | 95% <100%> (\u00f8) | :white_check_mark: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 86.28% <100%> (+0.13%) | :white_check_mark: |\n| .../broker/requesthandler/BrokerRequestOptimizer.java | 68% <71.42%> (+1.33%) | :white_check_mark: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 82.25% <82.25%> (\u00f8) | |\n| ...ix/EmptySegmentOnlineOfflineStateModelFactory.java | 78.94% <\u00f8> (-7.72%) | :x: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0dd1da8...f573986. Read the comment docs.. # Codecov Report\nMerging #1087 into master will increase coverage by 0.09%.\nThe diff coverage is 68.96%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1087      +/-\n==========================================\n+ Coverage   66.95%   67.05%   +0.09%   \n==========================================\n  Files         748      748            \n  Lines       35631    35658      +27   \n  Branches     4530     4536       +6   \n==========================================\n+ Hits        23858    23909      +51   \n+ Misses      10202    10177      -25   \n- Partials     1571     1572       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ix/EmptySegmentOnlineOfflineStateModelFactory.java | 78.94% <50%> (-7.72%) | :x: |\n| ...troller/helix/core/retention/RetentionManager.java | 74.37% <72%> (-0.08%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <\u00f8> (-4.55%) | :x: |\n| ...core/retention/strategy/TimeRetentionStrategy.java | 63.33% <\u00f8> (-3.34%) | :x: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <\u00f8> (-2.71%) | :x: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 56.55% <\u00f8> (-2.07%) | :x: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <\u00f8> (-2%) | :x: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.56% <\u00f8> (-1.97%) | :x: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.23% <\u00f8> (-1.91%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 76.87% <\u00f8> (-1.16%) | :x: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0dd1da8...64f129d. Read the comment docs.. # Codecov Report\nMerging #1090 into master will decrease coverage by -0.09%.\nThe diff coverage is 81.81%.\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1090      +/-\n=========================================\n- Coverage   67.08%     67%   -0.09%   \n=========================================\n  Files         748     748            \n  Lines       35663   35665       +2   \n  Branches     4537    4538       +1   \n=========================================\n- Hits        23926   23898      -28   \n- Misses      10157   10188      +31   \n+ Partials     1580    1579       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/common/utils/request/RequestUtils.java | 71.87% <81.81%> (+0.59%) | :white_check_mark: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <\u00f8> (-19.05%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <\u00f8> (-7.36%) | :x: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <\u00f8> (-6.49%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.33% <\u00f8> (-2.78%) | :x: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.5% <\u00f8> (-0.73%) | :x: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.98% <\u00f8> (-0.68%) | :x: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 54.09% <\u00f8> (-0.35%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.39% <\u00f8> (-0.33%) | :x: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 58.97% <\u00f8> (+5.12%) | :white_check_mark: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 023ed76...53e55e2. Read the comment docs.. # Codecov Report\nMerging #1091 into master will decrease coverage by -0.11%.\nThe diff coverage is n/a.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1091      +/-\n==========================================\n- Coverage   67.08%   66.98%   -0.11%   \n==========================================\n  Files         748      748            \n  Lines       35663    35663            \n  Branches     4537     4537            \n==========================================\n- Hits        23926    23890      -36   \n- Misses      10157    10194      +37   \n+ Partials     1580     1579       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <\u00f8> (-19.05%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <\u00f8> (-7.36%) | :x: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <\u00f8> (-7.36%) | :x: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <\u00f8> (-6.49%) | :x: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <\u00f8> (-2.71%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <\u00f8> (-1.74%) | :x: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.5% <\u00f8> (-0.73%) | :x: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.98% <\u00f8> (-0.68%) | :x: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 54.09% <\u00f8> (-0.35%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 55.79% <\u00f8> (+0.42%) | :white_check_mark: |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 023ed76...c63051f. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@8fa3d97). Click here to learn what that means.\nThe diff coverage is 80%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1093   +/-\n=========================================\n  Coverage          ?   67.12%         \n=========================================\n  Files             ?      750         \n  Lines             ?    35772         \n  Branches          ?     4570         \n=========================================\n  Hits              ?    24012         \n  Misses            ?    10170         \n  Partials          ?     1590\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 59.25% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/common/metrics/ServerMetrics.java | 85.71% <100%> (\u00f8) | |\n| ...m/linkedin/pinot/common/metrics/BrokerMetrics.java | 85.71% <100%> (\u00f8) | |\n| ...ava/com/linkedin/pinot/server/conf/ServerConf.java | 75% <100%> (\u00f8) | |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 88.11% <50%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.06% <83.33%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8fa3d97...79721af. Read the comment docs.. # Codecov Report\nMerging #1098 into master will increase coverage by 7.56%.\nThe diff coverage is n/a.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1098      +/-\n==========================================\n+ Coverage   59.58%   67.15%   +7.56%   \n==========================================\n  Files         750      750            \n  Lines       35772    35772            \n  Branches     4570     4570            \n==========================================\n+ Hits        21316    24023    +2707   \n+ Misses      12954    10158    -2796   \n- Partials     1502     1591      +89\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../resources/BasePinotControllerRestletResource.java | 85.71% <0%> (\u00f8) | :white_check_mark: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 61.53% <0%> (+0.3%) | :white_check_mark: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (+0.66%) | :white_check_mark: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.61% <0%> (+0.7%) | :white_check_mark: |\n| ...data/manager/offline/AbstractTableDataManager.java | 91.15% <0%> (+0.88%) | :white_check_mark: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 66.29% <0%> (+1.12%) | :white_check_mark: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 55.36% <0%> (+1.28%) | :white_check_mark: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (+1.29%) | :white_check_mark: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (+1.36%) | :white_check_mark: |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 94.52% <0%> (+1.36%) | :white_check_mark: |\n| ... and 169 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f84fd4...f778c03. Read the comment docs.. # Codecov Report\nMerging #1099 into master will decrease coverage by -21.3%.\nThe diff coverage is 76.59%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1099      +/-\n==========================================\n- Coverage   67.14%   45.85%   -21.3%   \n==========================================\n  Files         750      750            \n  Lines       35772    35839      +67   \n  Branches     4570     4590      +20   \n==========================================\n- Hits        24020    16434    -7586   \n- Misses      10154    17968    +7814   \n+ Partials     1598     1437     -161\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/query/utils/SimpleSegmentMetadata.java | 0% <0%> (-39.14%) | :x: |\n| ...din/pinot/core/query/pruner/TimeSegmentPruner.java | 78.43% <79.16%> (+21.28%) | :white_check_mark: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 62.17% <80%> (-17.49%) | :x: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 73.59% <81.48%> (-10.75%) | :x: |\n| .../transport/common/ReplicaSelectionGranularity.java | 0% <0%> (-100%) | :x: |\n| ...om/linkedin/pinot/transport/metrics/PoolStats.java | 0% <0%> (-100%) | :x: |\n| ...edin/pinot/core/util/BaseIndexedPriorityQueue.java | 0% <0%> (-100%) | :x: |\n| ...ers/pql2/ast/PredicateParenthesisGroupAstNode.java | 0% <0%> (-100%) | :x: |\n| ...core/query/planner/SequentialQueryPlannerImpl.java | 0% <0%> (-100%) | :x: |\n| ...core/io/reader/impl/v2/BitUnpackResultWrapper.java | 0% <0%> (-100%) | :x: |\n| ... and 393 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cc8db1f...9570a90. Read the comment docs.. # Codecov Report\nMerging #1100 into master will decrease coverage by -0.07%.\nThe diff coverage is 53.84%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1100      +/-\n==========================================\n- Coverage   45.85%   45.79%   -0.07%   \n==========================================\n  Files         750      750            \n  Lines       35839    35862      +23   \n  Branches     4590     4594       +4   \n==========================================\n- Hits        16433    16422      -11   \n- Misses      17961    18004      +43   \n+ Partials     1445     1436       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.36% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 52.64% <100%> (+0.1%) | :white_check_mark: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 61.7% <100%> (+2.61%) | :white_check_mark: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 32.92% <100%> (\u00f8) | :white_check_mark: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.79% <100%> (+1.24%) | :white_check_mark: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 85.88% <33.33%> (-1.93%) | :x: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 82.97% <40%> (-3.39%) | :x: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 48.51% <41.66%> (-0.18%) | :x: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 37.09% <0%> (-25.81%) | :x: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :x: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fa24675...985d3df. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@534ff56). Click here to learn what that means.\nThe diff coverage is 78.57%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1107   +/-\n=========================================\n  Coverage          ?   67.21%         \n=========================================\n  Files             ?      750         \n  Lines             ?    35906         \n  Branches          ?     4599         \n=========================================\n  Hits              ?    24135         \n  Misses            ?    10177         \n  Partials          ?     1594\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/operator/blocks/IntermediateResultsBlock.java | 71.02% <100%> (\u00f8) | |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 87.9% <100%> (\u00f8) | |\n| .../query/aggregation/AggregationFunctionContext.java | 100% <100%> (\u00f8) | |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 92.81% <73.33%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 534ff56...711017c. Read the comment docs.. # Codecov Report\nMerging #1111 into master will decrease coverage by -0.1%.\nThe diff coverage is 100%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1111     +/-\n=========================================\n- Coverage   67.18%   67.08%   -0.1%   \n=========================================\n  Files         750      750           \n  Lines       35906    35900      -6   \n  Branches     4599     4597      -2   \n=========================================\n- Hits        24123    24084     -39   \n- Misses      10192    10219     +27   \n- Partials     1591     1597      +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/core/query/pruner/TimeSegmentPruner.java | 75.55% <100%> (-6.8%) | :x: |\n| ...ot/core/query/pruner/SegmentPrunerServiceImpl.java | 57.89% <0%> (-15.79%) | :x: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 85.62% <0%> (-11.98%) | :x: |\n| ...altime/impl/dictionary/FloatMutableDictionary.java | 58.46% <0%> (-4.62%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.11% <0%> (-4.61%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 75.14% <0%> (-2.9%) | :x: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :x: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 85.48% <0%> (-2.42%) | :x: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ad75a89...eaaccbc. Read the comment docs.. # Codecov Report\nMerging #1113 into master will decrease coverage by -0.02%.\nThe diff coverage is 80%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1113      +/-\n==========================================\n- Coverage   67.12%   67.11%   -0.02%   \n==========================================\n  Files         750      750            \n  Lines       35900    35903       +3   \n  Branches     4597     4598       +1   \n==========================================\n- Hits        24098    24096       -2   \n+ Misses      10203    10202       -1   \n- Partials     1599     1605       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.1% <80%> (-0.41%) | :x: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 89.74% <0%> (-7.7%) | :x: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 47.79% <0%> (-5.15%) | :x: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 75.14% <0%> (-2.9%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :x: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.23% <0%> (-2.13%) | :x: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d1c707...b1ea881. Read the comment docs.. # Codecov Report\nMerging #1125 into master will decrease coverage by -0.02%.\nThe diff coverage is 33.33%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1125      +/-\n==========================================\n- Coverage   67.12%   67.11%   -0.02%   \n==========================================\n  Files         750      750            \n  Lines       35900    35903       +3   \n  Branches     4597     4598       +1   \n==========================================\n- Hits        24098    24096       -2   \n- Misses      10203    10206       +3   \n- Partials     1599     1601       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 54.24% <33.33%> (-0.08%) | :x: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 89.74% <0%> (-7.7%) | :x: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.48% <0%> (-4.98%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <0%> (-4.62%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.23% <0%> (-2.13%) | :x: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (-2%) | :x: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 89.41% <0%> (-1.18%) | :x: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bdb7e8e...7689ce9. Read the comment docs.. # Codecov Report\nMerging #1135 into master will increase coverage by 0.15%.\nThe diff coverage is 80%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1135      +/-\n==========================================\n+ Coverage   66.83%   66.98%   +0.15%   \n==========================================\n  Files         751      753       +2   \n  Lines       36061    36201     +140   \n  Branches     4627     4651      +24   \n==========================================\n+ Hits        24103    24251     +148   \n+ Misses      10362    10334      -28   \n- Partials     1596     1616      +20\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...n/metadata/segment/IndexLoadingConfigMetadata.java | 95.65% <100%> (+0.65%) | :white_check_mark: |\n| ...starter/helix/DefaultHelixStarterServerConfig.java | 96.29% <100%> (\u00f8) | :white_check_mark: |\n| ...umnminmaxvalue/ColumnMinMaxValueGeneratorMode.java | 100% <100%> (\u00f8) | |\n| ...inkedin/pinot/common/config/TableCustomConfig.java | 21.73% <100%> (\u00f8) | :white_check_mark: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.34% <100%> (+0.37%) | :white_check_mark: |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 80.61% <60.6%> (-3.82%) | :x: |\n| ...re/data/manager/config/TableDataManagerConfig.java | 79.59% <61.53%> (-6.78%) | :x: |\n| ...pinot/core/query/pruner/SegmentPrunerProvider.java | 56.25% <75%> (-3.75%) | :x: |\n| .../columnminmaxvalue/ColumnMinMaxValueGenerator.java | 75.92% <75.92%> (\u00f8) | |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cc6fa1d...c177268. Read the comment docs.. # Codecov Report\nMerging #1136 into master will decrease coverage by 0.11%.\nThe diff coverage is 62.5%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1136      +/-\n==========================================\n- Coverage   66.87%   66.76%   -0.12%   \n==========================================\n  Files         751      751            \n  Lines       36056    36058       +2   \n  Branches     4626     4627       +1   \n==========================================\n- Hits        24114    24073      -41   \n- Misses      10344    10390      +46   \n+ Partials     1598     1595       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/resources/PinotSegmentUploadRestletResource.java | 51.01% <62.5%> (-0.01%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 44.61% <0%> (-9.24%) | :x: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :x: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.48% <0%> (-4.98%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.78% <0%> (-4.94%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :x: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 77.63% <0%> (-0.66%) | :x: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 54.24% <0%> (-0.34%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (\u00f8) | :white_check_mark: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 934245b...c41a9bb. Read the comment docs.. # Codecov Report\nMerging #1142 into master will decrease coverage by 0.12%.\nThe diff coverage is 87.73%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1142      +/-\n==========================================\n- Coverage   67.03%   66.91%   -0.13%   \n==========================================\n  Files         753      753            \n  Lines       36201    36263      +62   \n  Branches     4651     4651            \n==========================================\n- Hits        24268    24266       -2   \n- Misses      10319    10395      +76   \n+ Partials     1614     1602      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../restlet/resources/LLCSegmentStoppedConsuming.java | 0% <0%> (\u00f8) | :white_check_mark: |\n| ...roller/api/restlet/resources/LLCSegmentCommit.java | 67.24% <100%> (+1.16%) | :white_check_mark: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 79.02% <100%> (-0.64%) | :x: |\n| ...ller/api/restlet/resources/LLCSegmentConsumed.java | 84.61% <100%> (+2.79%) | :white_check_mark: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.93% <50%> (-0.42%) | :x: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 68.75% <66.66%> (+0.56%) | :white_check_mark: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 63.23% <89.28%> (+1.69%) | :white_check_mark: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 90.42% <98.03%> (+5.17%) | :white_check_mark: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :x: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-8.34%) | :x: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ba64d34...fa6b260. Read the comment docs.. # Codecov Report\nMerging #1148 into master will decrease coverage by <.01%.\nThe diff coverage is 66.66%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1148      +/-\n==========================================\n- Coverage   67.03%   67.02%   -0.01%   \n==========================================\n  Files         753      753            \n  Lines       36263    36268       +5   \n  Branches     4651     4653       +2   \n==========================================\n+ Hits        24309    24310       +1   \n+ Misses      10350    10340      -10   \n- Partials     1604     1618      +14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/metadata/segment/IndexLoadingConfigMetadata.java | 95.45% <\u00f8> (-0.2%) | :x: |\n| ...inkedin/pinot/common/config/TableCustomConfig.java | 21.73% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 65.38% <100%> (+2.11%) | :white_check_mark: |\n| ...re/data/manager/config/TableDataManagerConfig.java | 75% <55.55%> (-4.6%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 89.74% <0%> (-7.7%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <0%> (-4.62%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <0%> (-3.32%) | :x: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 50% <0%> (-2.95%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.58%) | :x: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6b8b8c6...6188ba0. Read the comment docs.. # Codecov Report\nMerging #1149 into master will increase coverage by 0.1%.\nThe diff coverage is 80.61%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1149     +/-\n=========================================\n+ Coverage   67.03%   67.14%   +0.1%   \n=========================================\n  Files         753      754      +1   \n  Lines       36263    36385    +122   \n  Branches     4651     4667     +16   \n=========================================\n+ Hits        24309    24429    +120   \n+ Misses      10350    10349      -1   \n- Partials     1604     1607      +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/controller/ControllerConf.java | 46.39% <100%> (\u00f8) | :white_check_mark: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 85.21% <79.48%> (-5.21%) | :x: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 66.92% <81.03%> (+3.68%) | :white_check_mark: |\n| ...nkedin/pinot/common/config/OfflineTableConfig.java | 44.44% <0%> (-29.24%) | :x: |\n| ...kedin/pinot/common/config/RealtimeTableConfig.java | 44.44% <0%> (-26.15%) | :x: |\n| ...re/data/manager/config/TableDataManagerConfig.java | 75% <0%> (-4.6%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 94.11% <0%> (-3.32%) | :x: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :x: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 84.55% <0%> (-1.48%) | :x: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7906fed...894d065. Read the comment docs.. # Codecov Report\nMerging #1154 into master will decrease coverage by 0.18%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1154      +/-\n==========================================\n- Coverage      67%   66.81%   -0.19%   \n==========================================\n  Files         753      754       +1   \n  Lines       36268    36338      +70   \n  Branches     4653     4669      +16   \n==========================================\n- Hits        24302    24281      -21   \n- Misses      10364    10435      +71   \n- Partials     1602     1622      +20\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | :white_check_mark: |\n| ...pinot/controller/util/TableRetentionValidator.java | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 67.34% <0%> (-4.23%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 89.74% <0%> (-7.7%) | :x: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :x: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 58.46% <0%> (-4.62%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <0%> (-4.62%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 75.14% <0%> (-2.9%) | :x: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b249c35...71d00f3. Read the comment docs.. # Codecov Report\nMerging #1155 into master will decrease coverage by 0.04%.\nThe diff coverage is 70.21%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1155      +/-\n==========================================\n- Coverage      67%   66.96%   -0.05%   \n==========================================\n  Files         753      753            \n  Lines       36268    36289      +21   \n  Branches     4653     4657       +4   \n==========================================\n- Hits        24302    24300       -2   \n- Misses      10364    10375      +11   \n- Partials     1602     1614      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nkedin/pinot/common/config/OfflineTableConfig.java | 44.44% <\u00f8> (-29.24%) | :x: |\n| ...t/controller/api/restlet/resources/TableViews.java | 75.8% <\u00f8> (-1.47%) | :x: |\n| ...i/restlet/resources/PinotTableIndexingConfigs.java | 0% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...kedin/pinot/common/config/RealtimeTableConfig.java | 44.44% <\u00f8> (-26.15%) | :x: |\n| ...pi/restlet/resources/PinotTableSegmentConfigs.java | 0% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...ot/controller/api/restlet/resources/TableSize.java | 0% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...i/restlet/resources/PinotTableMetadataConfigs.java | 0% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 54.69% <\u00f8> (+0.45%) | :white_check_mark: |\n| ...api/restlet/resources/PinotTableTenantConfigs.java | 0% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...kedin/pinot/common/config/AbstractTableConfig.java | 76.28% <100%> (+8.05%) | :white_check_mark: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b249c35...ae99f1f. Read the comment docs.. # Codecov Report\nMerging #1156 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1156      +/-\n==========================================\n- Coverage      67%   66.98%   -0.03%   \n==========================================\n  Files         753      753            \n  Lines       36268    36268            \n  Branches     4653     4653            \n==========================================\n- Hits        24302    24293       -9   \n+ Misses      10364    10360       -4   \n- Partials     1602     1615      +13\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/core/data/extractors/FieldExtractorFactory.java | 66.66% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.61% <100%> (\u00f8) | :white_check_mark: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <100%> (-2.21%) | :x: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.24% <100%> (-0.69%) | :x: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 53.84% <0%> (-9.24%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 89.74% <0%> (-7.7%) | :x: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :x: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :x: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.23% <0%> (-2.13%) | :x: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b249c35...e9d854b. Read the comment docs.. # Codecov Report\nMerging #1157 into master will decrease coverage by 0.01%.\nThe diff coverage is 84.84%.\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1157      +/-\n=========================================\n- Coverage   67.02%     67%   -0.02%   \n=========================================\n  Files         753     754       +1   \n  Lines       36268   36302      +34   \n  Branches     4653    4654       +1   \n=========================================\n+ Hits        24308   24324      +16   \n- Misses      10357   10371      +14   \n- Partials     1603    1607       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.35% <100%> (-0.26%) | :x: |\n| .../impl/stats/SegmentPreIndexStatsCollectorImpl.java | 62.9% <100%> (+4.72%) | :white_check_mark: |\n| ...creator/RecordReaderSegmentCreationDataSource.java | 68.75% <68.75%> (\u00f8) | |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <0%> (-4.62%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :x: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (-2%) | :x: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 84.55% <0%> (-1.48%) | :x: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.72% <0%> (+0.32%) | :white_check_mark: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9a95b5d...0a0e923. Read the comment docs.. # Codecov Report\nMerging #1158 into master will decrease coverage by 0.06%.\nThe diff coverage is 67.64%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1158      +/-\n==========================================\n- Coverage   67.02%   66.95%   -0.07%   \n==========================================\n  Files         753      753            \n  Lines       36268    36262       -6   \n  Branches     4653     4654       +1   \n==========================================\n- Hits        24308    24280      -28   \n- Misses      10357    10376      +19   \n- Partials     1603     1606       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 69.96% <55%> (-0.43%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 91.17% <85.71%> (-6.26%) | :x: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <0%> (-4.62%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :x: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.23% <0%> (-2.13%) | :x: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 84.55% <0%> (-1.48%) | :x: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 89.41% <0%> (-1.18%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.58% <0%> (-1.11%) | :x: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 50% <0%> (-1.05%) | :x: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9a95b5d...7e2f007. Read the comment docs.. # Codecov Report\nMerging #1162 into master will decrease coverage by 0.1%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1162      +/-\n==========================================\n- Coverage   66.91%   66.81%   -0.11%   \n==========================================\n  Files         755      755            \n  Lines       36455    36455            \n  Branches     4683     4683            \n==========================================\n- Hits        24393    24356      -37   \n- Misses      10453    10480      +27   \n- Partials     1609     1619      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/segment/index/loader/SegmentPreProcessor.java | 90% <0%> (-3.34%) | :x: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :x: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :x: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 58.46% <0%> (-4.62%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :x: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 91.17% <0%> (-2.95%) | :x: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 75.14% <0%> (-2.9%) | :x: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.58%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <0%> (-2.21%) | :x: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fc014be...039f9fd. Read the comment docs.. # Codecov Report\nMerging #1164 into master will increase coverage by 0.02%.\nThe diff coverage is 8.69%.\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1164      +/-\n=========================================\n+ Coverage   66.88%   66.9%   +0.02%   \n=========================================\n  Files         755     755            \n  Lines       36455   36430      -25   \n  Branches     4683    4679       -4   \n=========================================\n- Hits        24382   24373       -9   \n+ Misses      10458   10445      -13   \n+ Partials     1615    1612       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inot/core/segment/DefaultSegmentNameGenerator.java | 89.74% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.03% <\u00f8> (-0.33%) | :x: |\n| .../impl/stats/FloatColumnPreIndexStatsCollector.java | 77.77% <0%> (-0.41%) | :x: |\n| ...r/impl/stats/LongColumnPreIndexStatsCollector.java | 77.77% <0%> (-0.41%) | :x: |\n| ...impl/stats/DoubleColumnPreIndexStatsCollector.java | 66.66% <0%> (-0.61%) | :x: |\n| ...or/impl/stats/IntColumnPreIndexStatsCollector.java | 77.77% <0%> (-0.41%) | :x: |\n| ...impl/stats/StringColumnPreIndexStatsCollector.java | 75% <0%> (-0.39%) | :x: |\n| .../impl/stats/AbstractColumnStatisticsCollector.java | 86.84% <100%> (\u00f8) | |\n| .../impl/stats/SegmentPreIndexStatsCollectorImpl.java | 67.24% <100%> (+4.33%) | :white_check_mark: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :x: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f0c5c3e...e007110. Read the comment docs.. # Codecov Report\nMerging #1165 into master will increase coverage by <.01%.\nThe diff coverage is 61.53%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1165      +/-\n==========================================\n+ Coverage   66.88%   66.88%   +<.01%   \n==========================================\n  Files         755      755            \n  Lines       36455    36460       +5   \n  Branches     4683     4684       +1   \n==========================================\n+ Hits        24382    24386       +4   \n+ Misses      10458    10455       -3   \n- Partials     1615     1619       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.15% <\u00f8> (+0.22%) | :white_check_mark: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <\u00f8> (\u00f8) | :white_check_mark: |\n| ...ger/config/FileBasedInstanceDataManagerConfig.java | 52.38% <0%> (-1.28%) | :x: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 43.35% <100%> (+0.89%) | :white_check_mark: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.09% <100%> (-0.2%) | :x: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 91.42% <100%> (+0.25%) | :white_check_mark: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 50.51% <100%> (+0.51%) | :white_check_mark: |\n| ...re/data/manager/config/TableDataManagerConfig.java | 71.18% <42.85%> (-3.82%) | :x: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :x: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 43.07% <0%> (-10.77%) | :x: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f0c5c3e...c88d8cc. Read the comment docs.. # Codecov Report\nMerging #1166 into master will decrease coverage by 0.04%.\nThe diff coverage is 84%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1166      +/-\n==========================================\n- Coverage    66.9%   66.86%   -0.05%   \n==========================================\n  Files         755      755            \n  Lines       36460    36458       -2   \n  Branches     4684     4686       +2   \n==========================================\n- Hits        24394    24376      -18   \n- Misses      10453    10476      +23   \n+ Partials     1613     1606       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...x/loader/defaultcolumn/V3DefaultColumnHandler.java | 85% <100%> (+0.78%) | :white_check_mark: |\n| ...core/segment/index/loader/SegmentPreProcessor.java | 87.09% <75%> (-2.91%) | :x: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 90% <83.87%> (+10.83%) | :white_check_mark: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :x: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.11% <0%> (-4.99%) | :x: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :x: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.21% <0%> (-3.95%) | :x: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.69% <0%> (-2.77%) | :x: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :x: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :x: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cd7ceae...5107f0f. Read the comment docs.. # Codecov Report\nMerging #1174 into master will increase coverage by 0.02%.\nThe diff coverage is 52.58%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1174      +/-\n==========================================\n+ Coverage   66.88%   66.91%   +0.02%   \n==========================================\n  Files         755      757       +2   \n  Lines       36433    36520      +87   \n  Branches     4682     4692      +10   \n==========================================\n+ Hits        24370    24437      +67   \n- Misses      10446    10456      +10   \n- Partials     1617     1627      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/server/starter/ServerInstance.java | 80.35% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/api/restlet/resources/LLCSegmentCommit.java | 67.24% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ller/api/restlet/resources/LLCExtendBuildTime.java | 0% <0%> (\u00f8) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 66.92% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.79% <25%> (\u00f8) | :arrow_up: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 64.7% <50%> (-4.05%) | :arrow_down: |\n| ...anager/realtime/SegmentBuildTimeLeaseExtender.java | 63.46% <63.46%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 84.34% <63.63%> (-0.87%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.93% <66.66%> (-0.23%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 51% <66.66%> (+0.48%) | :arrow_up: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3b888de...d91c42b. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@07e80eb). Click here to learn what that means.\nThe diff coverage is 81.6%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1181   +/-\n=========================================\n  Coverage          ?   66.91%         \n=========================================\n  Files             ?      764         \n  Lines             ?    36683         \n  Branches          ?     4713         \n=========================================\n  Hits              ?    24547         \n  Misses            ?    10509         \n  Partials          ?     1627\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 90% <\u00f8> (\u00f8) | |\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (\u00f8) | |\n| .../core/segment/creator/ColumnIndexCreationInfo.java | 94.28% <100%> (\u00f8) | |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.59% <100%> (\u00f8) | |\n| ...creator/RecordReaderSegmentCreationDataSource.java | 69.69% <100%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 89.65% <100%> (\u00f8) | |\n| ...r/impl/stats/LongColumnPreIndexStatsCollector.java | 78.18% <100%> (\u00f8) | |\n| ...pinot/core/query/pruner/SegmentPrunerProvider.java | 58.82% <100%> (\u00f8) | |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 81.99% <100%> (\u00f8) | |\n| ...or/impl/stats/IntColumnPreIndexStatsCollector.java | 78.18% <100%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 07e80eb...dd2227d. Read the comment docs.. # Codecov Report\nMerging #1192 into master will increase coverage by 0.16%.\nThe diff coverage is 44.57%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1192      +/-\n==========================================\n+ Coverage      67%   67.17%   +0.16%   \n==========================================\n  Files         764      770       +6   \n  Lines       36683    37676     +993   \n  Branches     4713     4966     +253   \n==========================================\n+ Hits        24581    25310     +729   \n- Misses      10478    10707     +229   \n- Partials     1624     1659      +35\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/com/linkedin/pinot/core/plan/FilterPlanNode.java | 93.02% <100%> (\u00f8) | :arrow_up: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 72.72% <100%> (+9.09%) | :arrow_up: |\n| ...om/linkedin/pinot/pql/parsers/Pql2AstListener.java | 84.93% <100%> (+0.53%) | :arrow_up: |\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ator/filter/predicate/RegexPredicateEvaluator.java | 26.66% <26.66%> (\u00f8) | |\n| ...ot/pql/parsers/pql2/ast/RegexPredicateAstNode.java | 47.72% <45.23%> (\u00f8) | |\n| ...in/pinot/core/common/predicate/RegexPredicate.java | 66.66% <66.66%> (+66.66%) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.22% <0%> (-1.49%) | :arrow_down: |\n| ... and 38 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update df67c32...68ee6ce. Read the comment docs.. # Codecov Report\nMerging #1193 into master will decrease coverage by 0.09%.\nThe diff coverage is 0%.\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1193     +/-\n=========================================\n- Coverage      67%   66.91%   -0.1%   \n=========================================\n  Files         764      764           \n  Lines       36683    36683           \n  Branches     4713     4713           \n=========================================\n- Hits        24581    24545     -36   \n- Misses      10478    10514     +36   \n  Partials     1624     1624\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../controller/helix/core/SegmentDeletionManager.java | 74.15% <0%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.53% <0%> (-1.54%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.22% <0%> (-1.49%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.69% <0%> (-1.11%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 77.63% <0%> (-0.66%) | :arrow_down: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update df67c32...452eba7. Read the comment docs.. # Codecov Report\nMerging #1196 into master will decrease coverage by 0.08%.\nThe diff coverage is 68.18%.\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1196      +/-\n==========================================\n- Coverage      67%   66.92%   -0.09%   \n==========================================\n  Files         764      765       +1   \n  Lines       36683    36703      +20   \n  Branches     4713     4718       +5   \n==========================================\n- Hits        24581    24562      -19   \n- Misses      10478    10506      +28   \n- Partials     1624     1635      +11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/core/data/partition/ModuloPartitionFunction.java | 55.55% <0%> (-6.95%) | :arrow_down: |\n| .../data/partition/DefaultKafkaPartitionFunction.java | 55.55% <55.55%> (\u00f8) | |\n| .../core/data/partition/PartitionFunctionFactory.java | 71.42% <83.33%> (+7.79%) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 56.92% <0%> (-6.16%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.22% <0%> (-1.49%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.69% <0%> (-1.11%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 794f686...79a5205. Read the comment docs.. # Codecov Report\nMerging #1200 into master will increase coverage by 0.11%.\nThe diff coverage is 90%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1200      +/-\n=========================================\n+ Coverage   66.89%     67%   +0.11%   \n=========================================\n  Files         765     765            \n  Lines       36703   36747      +44   \n  Branches     4718    4719       +1   \n=========================================\n+ Hits        24552   24624      +72   \n+ Misses      10511   10490      -21   \n+ Partials     1640    1633       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.56% <85.71%> (+2.44%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <93.75%> (+0.47%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| .../com/linkedin/pinot/client/ExternalViewReader.java | 48.57% <0%> (-8.58%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 58.46% <0%> (-4.62%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.22% <0%> (-1.49%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 84.55% <0%> (-1.48%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 033b8f1...1dc3c88. Read the comment docs.. # Codecov Report\nMerging #1202 into master will increase coverage by 0.07%.\nThe diff coverage is 94.79%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1202      +/-\n==========================================\n+ Coverage   66.89%   66.97%   +0.07%   \n==========================================\n  Files         765      768       +3   \n  Lines       36703    36798      +95   \n  Branches     4718     4733      +15   \n==========================================\n+ Hits        24552    24644      +92   \n- Misses      10511    10516       +5   \n+ Partials     1640     1638       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/impl/datasource/RealtimeColumnDataSource.java | 55.76% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.44% <\u00f8> (-4.66%) | :arrow_down: |\n| ...ltime/impl/dictionary/MutableDictionaryReader.java | 40.98% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.23% <100%> (\u00f8) | :arrow_up: |\n| ...core/operator/blocks/RealtimeSingleValueBlock.java | 63.33% <100%> (+4.71%) | :arrow_up: |\n| ...converter/stats/RealtimeSegmentStatsContainer.java | 100% <100%> (\u00f8) | |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 57.74% <100%> (+8.51%) | :arrow_up: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.97% <100%> (-1.11%) | :arrow_down: |\n| ...altime/impl/dictionary/FloatMutableDictionary.java | 66.19% <100%> (+3.12%) | :arrow_up: |\n| ...ltime/impl/dictionary/StringMutableDictionary.java | 83.33% <100%> (+4.16%) | :arrow_up: |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 033b8f1...8527a1f. Read the comment docs.. # Codecov Report\nMerging #1204 into master will increase coverage by 0.12%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1204      +/-\n==========================================\n+ Coverage   66.89%   67.01%   +0.12%   \n==========================================\n  Files         765      765            \n  Lines       36703    36704       +1   \n  Branches     4718     4718            \n==========================================\n+ Hits        24552    24599      +47   \n+ Misses      10511    10474      -37   \n+ Partials     1640     1631       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.42% <100%> (+0.72%) | :arrow_up: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 56.92% <0%> (-6.16%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.22% <0%> (-1.49%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 84.55% <0%> (-1.48%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.28% <0%> (+0.65%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.15% <0%> (+0.89%) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 52% <0%> (+1%) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 78.45% <0%> (+1.1%) | :arrow_up: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fde9e5b...9107cef. Read the comment docs.. # Codecov Report\nMerging #1207 into master will decrease coverage by 0.05%.\nThe diff coverage is 14.28%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1207      +/-\n==========================================\n- Coverage   66.89%   66.83%   -0.06%   \n==========================================\n  Files         765      765            \n  Lines       36703    36717      +14   \n  Branches     4718     4719       +1   \n==========================================\n- Hits        24552    24541      -11   \n- Misses      10511    10536      +25   \n  Partials     1640     1640\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/client/ExternalViewReader.java | 48.57% <14.28%> (-8.58%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 52.3% <0%> (-10.77%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...altime/impl/dictionary/FloatMutableDictionary.java | 58.46% <0%> (-4.62%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.48% <0%> (-3.87%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.22% <0%> (-1.84%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fde9e5b...8845aa1. Read the comment docs.. # Codecov Report\nMerging #1208 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1208      +/-\n==========================================\n+ Coverage   66.94%   66.98%   +0.04%   \n==========================================\n  Files         765      765            \n  Lines       36717    36974     +257   \n  Branches     4719     4770      +51   \n==========================================\n+ Hits        24579    24768     +189   \n- Misses      10503    10562      +59   \n- Partials     1635     1644       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.48% <0%> (-4.98%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.23% <0%> (-4.62%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 91.17% <0%> (-2.95%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 51.35% <0%> (-2.71%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 89.41% <0%> (-1.18%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e6a830a...5d458d3. Read the comment docs.. # Codecov Report\nMerging #1211 into master will increase coverage by 0.09%.\nThe diff coverage is 80.28%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1211      +/-\n=========================================\n+ Coverage      67%   67.1%   +0.09%   \n=========================================\n  Files         768     768            \n  Lines       36843   36823      -20   \n  Branches     4734    4727       -7   \n=========================================\n+ Hits        24688   24710      +22   \n+ Misses      10515   10489      -26   \n+ Partials     1640    1624      -16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 38.63% <\u00f8> (\u00f8) | :arrow_up: |\n| ...va/com/linkedin/pinot/common/segment/ReadMode.java | 77.77% <100%> (+40.27%) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 91.37% <100%> (-3.45%) | :arrow_down: |\n| ...ger/config/FileBasedInstanceDataManagerConfig.java | 66.66% <100%> (+14.28%) | :arrow_up: |\n| ...data/manager/offline/AbstractTableDataManager.java | 90.9% <100%> (-0.25%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.69% <100%> (-0.56%) | :arrow_down: |\n| ...ot/core/indexsegment/generator/SegmentVersion.java | 83.33% <100%> (-11.41%) | :arrow_down: |\n| ...din/pinot/core/startree/StarTreeFormatVersion.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...core/segment/index/loader/SegmentPreProcessor.java | 92% <100%> (+4.9%) | :arrow_up: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 61.81% <100%> (+0.7%) | :arrow_up: |\n| ... and 40 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0e21ad3...d31acaf. Read the comment docs.. # Codecov Report\nMerging #1212 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1212      +/-\n==========================================\n+ Coverage   67.01%   67.05%   +0.03%   \n==========================================\n  Files         768      768            \n  Lines       36843    36843            \n  Branches     4734     4734            \n==========================================\n+ Hits        24692    24705      +13   \n+ Misses      10526    10509      -17   \n- Partials     1625     1629       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inot/core/segment/DefaultSegmentNameGenerator.java | 89.74% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <100%> (\u00f8) | :arrow_up: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...cate/RangeOfflineDictionaryPredicateEvaluator.java | 91.3% <0%> (-2.18%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.22% <0%> (-1.84%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.26% <0%> (-0.67%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 55.36% <0%> (-0.43%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 53.52% <0%> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.25% <0%> (+1.25%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 47.79% <0%> (+2.2%) | :arrow_up: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1b995e1...af74a58. Read the comment docs.. # Codecov Report\nMerging #1215 into master will increase coverage by 21.17%.\nThe diff coverage is 30.76%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1215       +/-\n===========================================\n+ Coverage   45.81%   66.99%   +21.17%   \n===========================================\n  Files         768      768             \n  Lines       36843    36849        +6   \n  Branches     4734     4737        +3   \n===========================================\n+ Hits        16880    24686     +7806   \n+ Misses      18494    10523     -7971   \n- Partials     1469     1640      +171\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.02% <0%> (+20.29%) | :arrow_up: |\n| ...i/restlet/resources/PinotTableRestletResource.java | 49.06% <44.44%> (+20.22%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 57.74% <0%> (-8.46%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.48% <0%> (-4.98%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 93.18% <0%> (-4.55%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-2.6%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 51% <0%> (-1%) | :arrow_down: |\n| ... and 404 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 89b846b...c2af6f2. Read the comment docs.. # Codecov Report\nMerging #1218 into master will increase coverage by 0.15%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1218      +/-\n==========================================\n+ Coverage      67%   67.16%   +0.15%   \n==========================================\n  Files         768      768            \n  Lines       36843    36843            \n  Branches     4734     4734            \n==========================================\n+ Hits        24688    24746      +58   \n+ Misses      10515    10463      -52   \n+ Partials     1640     1634       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 84.55% <0%> (-1.48%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-1.3%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.15% <0%> (+0.22%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.42% <0%> (+0.33%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.94% <0%> (+0.65%) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 52% <0%> (+1%) | :arrow_up: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 90.58% <0%> (+1.17%) | :arrow_up: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 79.72% <0%> (+1.35%) | :arrow_up: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.2% <0%> (+1.72%) | :arrow_up: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0e21ad3...cc4ec23. Read the comment docs.. # Codecov Report\nMerging #1219 into master will decrease coverage by 0.04%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1219      +/-\n==========================================\n- Coverage   67.01%   66.96%   -0.05%   \n==========================================\n  Files         768      761       -7   \n  Lines       36849    37214     +365   \n  Branches     4737     4884     +147   \n==========================================\n+ Hits        24693    24920     +227   \n- Misses      10523    10646     +123   \n- Partials     1633     1648      +15\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/io/reader/BaseSingleColumnSingleValueReader.java | 6.25% <\u00f8> (+0.36%) | :arrow_up: |\n| ...ection/iterator/StringSelectionColumnIterator.java | 0% <0%> (\u00f8) | |\n| ...n/pinot/core/query/selection/SelectionFetcher.java | 59.67% <0%> (-1.99%) | :arrow_down: |\n| .../io/reader/impl/v1/FixedByteSingleValueReader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../core/operator/filter/ScanBasedFilterOperator.java | 72.22% <100%> (\u00f8) | :arrow_up: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <100%> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/common/predicate/InPredicate.java | 75% <100%> (\u00f8) | :arrow_up: |\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 88.88% <100%> (\u00f8) | :arrow_up: |\n| ...ot/core/operator/filter/StarTreeIndexOperator.java | 87.04% <100%> (+0.06%) | :arrow_up: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 57.77% <28.57%> (-16.83%) | :arrow_down: |\n| ... and 77 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 222827b...3bad785. Read the comment docs.. # Codecov Report\nMerging #1222 into master will decrease coverage by 0.08%.\nThe diff coverage is 65.21%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1222      +/-\n==========================================\n- Coverage   67.05%   66.97%   -0.09%   \n==========================================\n  Files         760      761       +1   \n  Lines       36760    36890     +130   \n  Branches     4735     4752      +17   \n==========================================\n+ Hits        24651    24706      +55   \n- Misses      10484    10549      +65   \n- Partials     1625     1635      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../manager/offline/FileBasedInstanceDataManager.java | 70.11% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.5% <100%> (-0.45%) | :arrow_down: |\n| ...in/pinot/common/messages/SegmentReloadMessage.java | 100% <100%> (\u00f8) | |\n| ...restlet/resources/PinotSegmentRestletResource.java | 30.9% <30.3%> (-0.3%) | :arrow_down: |\n| ...n/pinot/common/messages/SegmentRefreshMessage.java | 75% <50%> (\u00f8) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 61.49% <51.85%> (-0.74%) | :arrow_down: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 73.98% <68%> (-0.51%) | :arrow_down: |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 84.9% <81.08%> (+0.05%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.56% <86.36%> (+0.2%) | :arrow_up: |\n| ...i/restlet/resources/PinotTableRestletResource.java | 40.99% <0%> (-8.08%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a31e994...c73819b. Read the comment docs.. # Codecov Report\nMerging #1230 into master will increase coverage by 0.1%.\nThe diff coverage is 75.71%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1230     +/-\n=========================================\n+ Coverage    67.3%   67.41%   +0.1%   \n=========================================\n  Files         773      774      +1   \n  Lines       37527    37586     +59   \n  Branches     4916     4929     +13   \n=========================================\n+ Hits        25256    25337     +81   \n+ Misses      10615    10594     -21   \n+ Partials     1656     1655      -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../indexsegment/generator/ColumnPartitionConfig.java | 92.59% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 84.98% <0%> (-0.59%) | :arrow_down: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 67.27% <100%> (+1.88%) | :arrow_up: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 89.58% <100%> (+0.22%) | :arrow_up: |\n| ...converter/stats/RealtimeSegmentStatsContainer.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.49% <100%> (+0.39%) | :arrow_up: |\n| .../core/data/partition/PartitionFunctionFactory.java | 73.91% <100%> (+2.48%) | :arrow_up: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 90.9% <100%> (+0.32%) | :arrow_up: |\n| ...t/core/data/partition/MurmurPartitionFunction.java | 62.5% <50%> (\u00f8) | |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 88.7% <71.42%> (-9.02%) | :arrow_down: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 211d19a...dba4af7. Read the comment docs.. # Codecov Report\nMerging #1233 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1233      +/-\n=========================================\n- Coverage   67.35%   67.3%   -0.06%   \n=========================================\n  Files         772     772            \n  Lines       37508   37508            \n  Branches     4913    4913            \n=========================================\n- Hits        25263   25244      -19   \n- Misses      10581   10608      +27   \n+ Partials     1664    1656       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 54.66% <\u00f8> (+2%) | :arrow_up: |\n| .../selection/comparator/DocIdFloatValComparator.java | 36.36% <0%> (-45.46%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 73.48% <0%> (-2.77%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (-1.74%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 95% <0%> (-1.25%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.09% <0%> (-0.34%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update daa5222...02a55ef. Read the comment docs.. # Codecov Report\nMerging #1235 into master will decrease coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1235      +/-\n==========================================\n- Coverage   67.35%   67.31%   -0.04%   \n==========================================\n  Files         772      772            \n  Lines       37508    37508            \n  Branches     4913     4913            \n==========================================\n- Hits        25263    25250      -13   \n- Misses      10581    10598      +17   \n+ Partials     1664     1660       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../selection/comparator/DocIdFloatValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 73.33% <0%> (-6.67%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.97% <0%> (-4.23%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (-1.74%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-1.36%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 95% <0%> (-1.25%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.4% <0%> (-0.67%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update daa5222...9df297f. Read the comment docs.. # Codecov Report\nMerging #1236 into master will increase coverage by 0.06%.\nThe diff coverage is 22.22%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1236      +/-\n==========================================\n+ Coverage   67.35%   67.42%   +0.06%   \n==========================================\n  Files         772      772            \n  Lines       37508    37514       +6   \n  Branches     4913     4913            \n==========================================\n+ Hits        25263    25292      +29   \n+ Misses      10581    10570      -11   \n+ Partials     1664     1652      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/common/exception/QueryException.java | 86.66% <20%> (-6.32%) | :arrow_down: |\n| ...nkedin/pinot/core/query/reduce/CombineService.java | 60.41% <25%> (-1.81%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.69% <0%> (-0.56%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.09% <0%> (-0.34%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (\u00f8) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (\u00f8) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (+1.01%) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 52.52% <0%> (+1.01%) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update daa5222...4f27779. Read the comment docs.. # Codecov Report\nMerging #1238 into master will decrease coverage by 0.05%.\nThe diff coverage is 70%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1238      +/-\n==========================================\n- Coverage   67.39%   67.33%   -0.06%   \n==========================================\n  Files         772      772            \n  Lines       37514    37520       +6   \n  Branches     4913     4915       +2   \n==========================================\n- Hits        25281    25263      -18   \n- Misses      10579    10598      +19   \n- Partials     1654     1659       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 81.81% <70%> (-7.08%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 93.18% <0%> (-4.55%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.29% <0%> (-4.23%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.97% <0%> (-4.23%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <0%> (-2.21%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e471d0...68f2ec4. Read the comment docs.. # Codecov Report\nMerging #1242 into master will decrease coverage by <.01%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1242      +/-\n==========================================\n- Coverage   67.34%   67.33%   -0.01%   \n==========================================\n  Files         772      773       +1   \n  Lines       37520    37527       +7   \n  Branches     4915     4916       +1   \n==========================================\n+ Hits        25267    25270       +3   \n- Misses      10600    10608       +8   \n+ Partials     1653     1649       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/query/exception/BadQueryRequestException.java | 0% <0%> (\u00f8) | |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 68% <68%> (-9.28%) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 86.5% <75%> (-1.4%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 77.58% <0%> (-13.8%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 49.29% <0%> (-8.46%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (\u00f8) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 55.79% <0%> (+0.42%) | :arrow_up: |\n| ...lter/predicate/RangePredicateEvaluatorFactory.java | 75% <0%> (+0.5%) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e923dc9...e25c9b6. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@aff606a). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1243   +/-\n=========================================\n  Coverage          ?   67.38%         \n=========================================\n  Files             ?      774         \n  Lines             ?    37610         \n  Branches          ?     4929         \n=========================================\n  Hits              ?    25342         \n  Misses            ?    10598         \n  Partials          ?     1670\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 84.61% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aff606a...39c1d5e. Read the comment docs.. # Codecov Report\nMerging #1245 into master will increase coverage by 0.38%.\nThe diff coverage is 63.63%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1245      +/-\n==========================================\n+ Coverage   67.34%   67.73%   +0.38%   \n==========================================\n  Files         772      775       +3   \n  Lines       37520    38629    +1109   \n  Branches     4915     5223     +308   \n==========================================\n+ Hits        25267    26164     +897   \n- Misses      10600    10769     +169   \n- Partials     1653     1696      +43\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../broker/helix/LiveInstancesChangeListenerImpl.java | 65.85% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ransport/pool/AsyncPoolResourceManagerAdapter.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/transport/pool/KeyedPoolImpl.java | 93.9% <100%> (\u00f8) | :arrow_up: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 89.36% <100%> (+0.72%) | :arrow_up: |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 88.11% <100%> (\u00f8) | :arrow_up: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 86.02% <100%> (+1.47%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 68.22% <27.27%> (-1.64%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 90% <0%> (-7.73%) | :arrow_down: |\n| .../indexsegment/generator/ColumnPartitionConfig.java | 90% <0%> (-2.6%) | :arrow_down: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 75% <0%> (-2.28%) | :arrow_down: |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e923dc9...589aca6. Read the comment docs.. # Codecov Report\nMerging #1246 into master will increase coverage by 0.11%.\nThe diff coverage is 56.52%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1246      +/-\n==========================================\n+ Coverage   67.34%   67.45%   +0.11%   \n==========================================\n  Files         772      773       +1   \n  Lines       37520    37591      +71   \n  Branches     4915     4929      +14   \n==========================================\n+ Hits        25267    25358      +91   \n+ Misses      10600    10577      -23   \n- Partials     1653     1656       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 80.74% <56.52%> (\u00f8) | :arrow_up: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 63.88% <0%> (-13.39%) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 80.44% <0%> (-7.46%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 53.52% <0%> (-4.23%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (\u00f8) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (\u00f8) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (\u00f8) | :arrow_up: |\n| ...core/query/exception/BadQueryRequestException.java | 0% <0%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.28% <0%> (+0.22%) | :arrow_up: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a206f41...577eff4. Read the comment docs.. # Codecov Report\nMerging #1247 into master will decrease coverage by 0.14%.\nThe diff coverage is 45%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1247      +/-\n==========================================\n- Coverage   67.43%   67.29%   -0.15%   \n==========================================\n  Files         774      774            \n  Lines       37586    37604      +18   \n  Branches     4929     4930       +1   \n==========================================\n- Hits        25346    25305      -41   \n- Misses      10569    10642      +73   \n+ Partials     1671     1657      -14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.13% <38.88%> (-0.77%) | :arrow_down: |\n| ...i/restlet/resources/PinotTableRestletResource.java | 40% <50%> (-1%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 77.58% <0%> (-13.8%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-8.34%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-2.6%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (-1.74%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d17e905...07b9092. Read the comment docs.. # Codecov Report\nMerging #1255 into master will increase coverage by 0.01%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1255      +/-\n==========================================\n+ Coverage   67.33%   67.34%   +0.01%   \n==========================================\n  Files         774      774            \n  Lines       37609    37612       +3   \n  Branches     4929     4929            \n==========================================\n+ Hits        25325    25331       +6   \n+ Misses      10619    10614       -5   \n- Partials     1665     1667       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../indexsegment/generator/ColumnPartitionConfig.java | 93.54% <100%> (+0.95%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.89% <75%> (-0.28%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...query/aggregation/groupby/utils/DoubleToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...inot/core/query/pruner/PartitionSegmentPruner.java | 81.48% <0%> (-3.71%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.58%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (\u00f8) | :arrow_up: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d942958...49bcc49. Read the comment docs.. # Codecov Report\nMerging #1256 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1256      +/-\n==========================================\n+ Coverage   67.33%   67.36%   +0.02%   \n==========================================\n  Files         774      774            \n  Lines       37609    37612       +3   \n  Branches     4929     4929            \n==========================================\n+ Hits        25325    25336      +11   \n+ Misses      10619    10617       -2   \n+ Partials     1665     1659       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentPartitionConfig.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...inot/core/query/pruner/PartitionSegmentPruner.java | 81.48% <0%> (-3.71%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.58%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (-0.68%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 53.52% <0%> (\u00f8) | :arrow_up: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (\u00f8) | :arrow_up: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d942958...015ff4d. Read the comment docs.. # Codecov Report\nMerging #1258 into master will decrease coverage by 0.01%.\nThe diff coverage is 97.22%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1258      +/-\n=========================================\n- Coverage   67.32%   67.3%   -0.02%   \n=========================================\n  Files         774     774            \n  Lines       37617   37599      -18   \n  Branches     4929    4927       -2   \n=========================================\n- Hits        25325   25307      -18   \n- Misses      10625   10627       +2   \n+ Partials     1667    1665       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentPartitionConfig.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <\u00f8> (+0.58%) | :arrow_up: |\n| ...not/core/segment/creator/StatsCollectorConfig.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../indexsegment/generator/ColumnPartitionConfig.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.95% <100%> (+0.06%) | :arrow_up: |\n| .../core/data/partition/PartitionFunctionFactory.java | 78.57% <100%> (+4.65%) | :arrow_up: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 93.54% <100%> (+8.06%) | :arrow_up: |\n| ...r/impl/stats/LongColumnPreIndexStatsCollector.java | 78.18% <100%> (\u00f8) | :arrow_up: |\n| ...impl/stats/DoubleColumnPreIndexStatsCollector.java | 67.27% <100%> (\u00f8) | :arrow_up: |\n| .../impl/stats/FloatColumnPreIndexStatsCollector.java | 78.18% <100%> (\u00f8) | :arrow_up: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8b359a0...901b44d. Read the comment docs.. # Codecov Report\nMerging #1260 into master will increase coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1260      +/-\n==========================================\n+ Coverage   67.38%   67.44%   +0.06%   \n==========================================\n  Files         774      774            \n  Lines       37599    37606       +7   \n  Branches     4927     4929       +2   \n==========================================\n+ Hits        25335    25363      +28   \n+ Misses      10607    10579      -28   \n- Partials     1657     1664       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/routing/HelixExternalViewBasedRouting.java | 44.59% <0%> (-0.84%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 93.54% <0%> (-3.23%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.5% <0%> (-2.09%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-1.73%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 95% <0%> (-1.25%) | :arrow_down: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 89.77% <0%> (-1.14%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c894f00...38bfed3. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1e627d0). Click here to learn what that means.\nThe diff coverage is 50.79%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1263   +/-\n=========================================\n  Coverage          ?   67.35%         \n=========================================\n  Files             ?      774         \n  Lines             ?    37655         \n  Branches          ?     4933         \n=========================================\n  Hits              ?    25362         \n  Misses            ?    10630         \n  Partials          ?     1663\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.6% <46.87%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 77.77% <54.83%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1e627d0...23acd24. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@712e1fa). Click here to learn what that means.\nThe diff coverage is 73.91%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1264   +/-\n=========================================\n  Coverage          ?   67.33%         \n=========================================\n  Files             ?      774         \n  Lines             ?    37627         \n  Branches          ?     4928         \n=========================================\n  Hits              ?    25336         \n  Misses            ?    10633         \n  Partials          ?     1658\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.56% <\u00f8> (\u00f8) | |\n| ...converter/stats/RealtimeSegmentStatsContainer.java | 91.66% <\u00f8> (\u00f8) | |\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (\u00f8) | |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <\u00f8> (\u00f8) | |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 69.83% <\u00f8> (\u00f8) | |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 92.14% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 67.27% <100%> (\u00f8) | |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 83.87% <100%> (\u00f8) | |\n| .../core/data/partition/PartitionFunctionFactory.java | 72.72% <100%> (\u00f8) | |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.34% <100%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 712e1fa...7f0029e. Read the comment docs.. # Codecov Report\nMerging #1265 into master will decrease coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1265      +/-\n==========================================\n- Coverage   67.34%   67.28%   -0.07%   \n==========================================\n  Files         774      774            \n  Lines       37627    37675      +48   \n  Branches     4928     4932       +4   \n==========================================\n+ Hits        25339    25348       +9   \n- Misses      10627    10664      +37   \n- Partials     1661     1663       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/transport/pool/AsyncPoolImpl.java | 84.17% <\u00f8> (-0.05%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/metrics/PoolStats.java | 80% <0%> (-20%) | :arrow_down: |\n| ...linkedin/pinot/transport/netty/NettyTCPServer.java | 87.5% <0%> (-12.5%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.6% <0%> (-5.07%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.57% <0%> (-4.6%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/LatencyMetric.java | 50% <0%> (-4.55%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-1.3%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 77.77% <0%> (-1.25%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 67182f0...f6cd5df. Read the comment docs.. # Codecov Report\nMerging #1267 into master will increase coverage by 0.07%.\nThe diff coverage is 4.16%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1267      +/-\n==========================================\n+ Coverage   67.28%   67.36%   +0.07%   \n==========================================\n  Files         774      774            \n  Lines       37724    37764      +40   \n  Branches     4933     4933            \n==========================================\n+ Hits        25384    25439      +55   \n+ Misses      10674    10658      -16   \n- Partials     1666     1667       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/restlet/resources/PinotTableRestletResource.java | 38.85% <0%> (-1.15%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.6% <0%> (\u00f8) | :arrow_up: |\n| ...pi/restlet/resources/PinotTableSegmentConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...i/restlet/resources/PinotTableIndexingConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 77.73% <0%> (-0.43%) | :arrow_down: |\n| ...i/restlet/resources/PinotTableMetadataConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-2.6%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d5128a7...1cb8764. Read the comment docs.. # Codecov Report\nMerging #1269 into master will decrease coverage by 0.11%.\nThe diff coverage is 17.64%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1269      +/-\n==========================================\n- Coverage   67.34%   67.22%   -0.12%   \n==========================================\n  Files         774      774            \n  Lines       37627    37641      +14   \n  Branches     4928     4928            \n==========================================\n- Hits        25339    25306      -33   \n- Misses      10627    10670      +43   \n- Partials     1661     1665       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../restlet/resources/PinotSchemaRestletResource.java | 16.99% <17.64%> (-1%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...altime/impl/dictionary/FloatMutableDictionary.java | 61.97% <0%> (-4.23%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.58% <0%> (-2.77%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 77.31% <0%> (-2.07%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 80.76% <0%> (-1.93%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 67182f0...88529ba. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@066315a). Click here to learn what that means.\nThe diff coverage is 79.48%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1275   +/-\n=========================================\n  Coverage          ?   67.32%         \n=========================================\n  Files             ?      774         \n  Lines             ?    37745         \n  Branches          ?     4933         \n=========================================\n  Hits              ?    25413         \n  Misses            ?    10652         \n  Partials          ?     1680\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 77.73% <100%> (\u00f8) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 68.31% <78.37%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 066315a...3663eea. Read the comment docs.. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@066315a). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1277   +/-\n=========================================\n  Coverage          ?   67.33%         \n=========================================\n  Files             ?      774         \n  Lines             ?    37724         \n  Branches          ?     4933         \n=========================================\n  Hits              ?    25402         \n  Misses            ?    10660         \n  Partials          ?     1662\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 77.77% <100%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 80.29% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 066315a...7145608. Read the comment docs.. # Codecov Report\nMerging #1282 into master will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1282      +/-\n=========================================\n- Coverage   67.36%   67.3%   -0.07%   \n=========================================\n  Files         774     774            \n  Lines       37745   37747       +2   \n  Branches     4933    4933            \n=========================================\n- Hits        25428   25406      -22   \n- Misses      10650   10674      +24   \n  Partials     1667    1667\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...restlet/resources/PinotSegmentRestletResource.java | 31.09% <0%> (-0.39%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.58% <0%> (-4.98%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 53.52% <0%> (-4.23%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.5% <0%> (-2.09%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dc88ec2...6c80314. Read the comment docs.. # Codecov Report\nMerging #1283 into master will decrease coverage by 0.1%.\nThe diff coverage is 28.57%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1283      +/-\n==========================================\n- Coverage   67.36%   67.26%   -0.11%   \n==========================================\n  Files         774      774            \n  Lines       37745    37751       +6   \n  Branches     4933     4934       +1   \n==========================================\n- Hits        25428    25393      -35   \n- Misses      10650    10691      +41   \n  Partials     1667     1667\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/query/exception/BadQueryRequestException.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...gregation/function/AggregationFunctionFactory.java | 91.35% <40%> (-2.15%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.58% <0%> (-4.98%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 69.38% <0%> (-4.09%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dc88ec2...ed5c49e. Read the comment docs.. # Codecov Report\nMerging #1284 into master will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1284      +/-\n=========================================\n- Coverage   67.36%   67.3%   -0.07%   \n=========================================\n  Files         774     774            \n  Lines       37745   37746       +1   \n  Branches     4933    4933            \n=========================================\n- Hits        25428   25404      -24   \n- Misses      10650   10677      +27   \n+ Partials     1667    1665       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.13% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/api/restlet/resources/PinotTableSchema.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...selection/comparator/DocIdDoubleValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 56.55% <0%> (-2.07%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d564e65...f0f828d. Read the comment docs.. # Codecov Report\nMerging #1286 into master will decrease coverage by 0.16%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1286      +/-\n==========================================\n- Coverage   67.39%   67.23%   -0.17%   \n==========================================\n  Files         774      774            \n  Lines       37773    37782       +9   \n  Branches     4934     4936       +2   \n==========================================\n- Hits        25458    25402      -56   \n- Misses      10655    10718      +63   \n- Partials     1660     1662       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/restlet/resources/PinotTableRestletResource.java | 41.01% <66.66%> (+2.15%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.2% <66.66%> (-0.26%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-8.8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.79% <0%> (-2.77%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bde175b...0be118f. Read the comment docs.. # Codecov Report\nMerging #1287 into master will decrease coverage by 0.01%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1287      +/-\n==========================================\n- Coverage   67.33%   67.31%   -0.02%   \n==========================================\n  Files         774      774            \n  Lines       37782    37802      +20   \n  Branches     4936     4940       +4   \n==========================================\n+ Hits        25440    25446       +6   \n- Misses      10666    10682      +16   \n+ Partials     1676     1674       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80.85% <80%> (-2.94%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...inot/common/utils/ControllerTenantNameBuilder.java | 63.88% <0%> (-5.56%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 76.19% <0%> (-3.58%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.81% <0%> (-0.63%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.2% <0%> (-0.33%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (\u00f8) | :arrow_up: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6169b42...f560ab8. Read the comment docs.. # Codecov Report\nMerging #1288 into master will decrease coverage by 0.07%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1288      +/-\n==========================================\n- Coverage   67.39%   67.31%   -0.08%   \n==========================================\n  Files         774      774            \n  Lines       37773    37802      +29   \n  Branches     4934     4940       +6   \n==========================================\n- Hits        25458    25448      -10   \n- Misses      10655    10680      +25   \n- Partials     1660     1674      +14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/routing/HelixExternalViewBasedRouting.java | 44.59% <100%> (\u00f8) | :arrow_up: |\n| ...ing/builder/BalancedRandomRoutingTableBuilder.java | 91.83% <100%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 77.58% <0%> (-13.8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.97% <0%> (-4.23%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80.85% <0%> (-2.94%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.58%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.01% <0%> (-2.32%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d1d4160...eb2c0a2. Read the comment docs.. # Codecov Report\nMerging #1289 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1289      +/-\n==========================================\n+ Coverage   67.24%   67.25%   +0.01%   \n==========================================\n  Files         774      774            \n  Lines       37878    37887       +9   \n  Branches     4958     4958            \n==========================================\n+ Hits        25472    25482      +10   \n+ Misses      10726    10720       -6   \n- Partials     1680     1685       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...l/parsers/pql2/ast/ComparisonPredicateAstNode.java | 50% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/pql/parsers/Pql2CompilationException.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 53.52% <0%> (-4.23%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1bd28cb...d62b626. Read the comment docs.\n. # Codecov Report\nMerging #1290 into master will decrease coverage by 0.09%.\nThe diff coverage is 40%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1290     +/-\n========================================\n- Coverage   67.39%   67.3%   -0.1%   \n========================================\n  Files         774     774           \n  Lines       37773   37777      +4   \n  Branches     4934    4934           \n========================================\n- Hits        25458   25424     -34   \n- Misses      10655   10679     +24   \n- Partials     1660    1674     +14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/resources/PinotSegmentUploadRestletResource.java | 50.59% <40%> (-0.42%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.58%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.01% <0%> (-2.32%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.5% <0%> (-2.09%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d1d4160...a48a428. Read the comment docs.. # Codecov Report\nMerging #1291 into master will decrease coverage by 0.42%.\nThe diff coverage is 42.85%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1291      +/-\n==========================================\n- Coverage   67.27%   66.85%   -0.43%   \n==========================================\n  Files         774      781       +7   \n  Lines       37802    38113     +311   \n  Branches     4940     5002      +62   \n==========================================\n+ Hits        25433    25482      +49   \n- Misses      10692    10962     +270   \n+ Partials     1677     1669       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/validation/StorageQuotaChecker.java | 85.71% <42.85%> (-7.84%) | :arrow_down: |\n| ...me/impl/dictionary/RealtimeDictionaryProvider.java | 0% <0%> (-66.67%) | :arrow_down: |\n| ...ltime/impl/dictionary/MutableDictionaryReader.java | 0% <0%> (-40.99%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-9.02%) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.01% <0%> (-3.33%) | :arrow_down: |\n| .../com/linkedin/pinot/core/plan/CombinePlanNode.java | 75% <0%> (-3.27%) | :arrow_down: |\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 88.43% <0%> (-2.73%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 77.14% <0%> (-2.63%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.22% <0%> (-1.84%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-1.3%) | :arrow_down: |\n| ... and 54 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bde175b...418640a. Read the comment docs.\n. # Codecov Report\nMerging #1293 into master will increase coverage by 0.13%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1293      +/-\n==========================================\n+ Coverage   67.21%   67.35%   +0.13%   \n==========================================\n  Files         774      774            \n  Lines       37802    37802            \n  Branches     4940     4940            \n==========================================\n+ Hits        25410    25461      +51   \n+ Misses      10725    10674      -51   \n  Partials     1667     1667\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 57.74% <0%> (-8.46%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-2.6%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (+1.01%) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 55.15% <0%> (+1.93%) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 54.66% <0%> (+2%) | :arrow_up: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 75.34% <0%> (+2.73%) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.16% <0%> (+4.59%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 52.94% <0%> (+7.35%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 98.63% <0%> (+10.95%) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 91.37% <0%> (+13.79%) | :arrow_up: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e9b38fb...ed2bfb5. Read the comment docs.. # Codecov Report\nMerging #1294 into master will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1294      +/-\n==========================================\n+ Coverage   67.21%   67.24%   +0.02%   \n==========================================\n  Files         774      774            \n  Lines       37802    37802            \n  Branches     4940     4940            \n==========================================\n+ Hits        25410    25419       +9   \n+ Misses      10725    10698      -27   \n- Partials     1667     1685      +18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...ltime/impl/dictionary/DoubleMutableDictionary.java | 53.52% <0%> (-4.23%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-2.6%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 87.5% <0%> (-2.09%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 56.55% <0%> (-2.07%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (-1.74%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e9b38fb...49d7582. Read the comment docs.. # Codecov Report\nMerging #1295 into master will increase coverage by 0.09%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1295      +/-\n==========================================\n+ Coverage   67.27%   67.37%   +0.09%   \n==========================================\n  Files         774      774            \n  Lines       37802    37802            \n  Branches     4940     4940            \n==========================================\n+ Hits        25433    25468      +35   \n+ Misses      10692    10658      -34   \n+ Partials     1677     1676       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 57.74% <0%> (-8.46%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-1.3%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 95% <0%> (-1.25%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 78.33% <0%> (+0.59%) | :arrow_up: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 90.32% <0%> (+1.61%) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+2.02%) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 55.36% <0%> (+2.14%) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10e509f...3bf235e. Read the comment docs.. # Codecov Report\nMerging #1296 into master will increase coverage by 0.18%.\nThe diff coverage is 57.14%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1296      +/-\n==========================================\n+ Coverage   67.23%   67.41%   +0.18%   \n==========================================\n  Files         774      774            \n  Lines       37856    38012     +156   \n  Branches     4952     4994      +42   \n==========================================\n+ Hits        25452    25627     +175   \n+ Misses      10721    10696      -25   \n- Partials     1683     1689       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommon/request/helper/ControllerRequestBuilder.java | 89.77% <\u00f8> (\u00f8) | :arrow_up: |\n| .../controller/helix/ControllerRequestURLBuilder.java | 68% <100%> (+2.04%) | :arrow_up: |\n| .../restlet/resources/PinotSchemaRestletResource.java | 35.97% <53.12%> (+18.97%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 71.42% <0%> (-6.16%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.97% <0%> (-4.23%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.13% <0%> (-2.21%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f06ce5f...7a16422. Read the comment docs.\n. # Codecov Report\nMerging #1299 into master will increase coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1299      +/-\n==========================================\n+ Coverage   67.35%   67.38%   +0.03%   \n==========================================\n  Files         774      774            \n  Lines       37802    37802            \n  Branches     4940     4940            \n==========================================\n+ Hits        25460    25474      +14   \n+ Misses      10672    10655      -17   \n- Partials     1670     1673       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 87.73% <0%> (\u00f8) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.35% <0%> (-3.68%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 79.76% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.43% <0%> (+0.62%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.18% <0%> (+0.67%) | :arrow_up: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 58.62% <0%> (+2.06%) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7e27732...422eab9. Read the comment docs.. # Codecov Report\nMerging #1300 into master will decrease coverage by 8.12%.\nThe diff coverage is 76.47%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1300      +/-\n==========================================\n- Coverage   67.35%   59.23%   -8.13%   \n==========================================\n  Files         774      774            \n  Lines       37802    37808       +6   \n  Branches     4940     4940            \n==========================================\n- Hits        25460    22394    -3066   \n- Misses      10672    13819    +3147   \n+ Partials     1670     1595      -75\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/response/ServerInstance.java | 80.39% <100%> (+2.61%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 68.22% <60%> (\u00f8) | :arrow_up: |\n| ...n/iterator/StringArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/common/messages/SegmentReloadMessage.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ection/iterator/StringSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ection/iterator/DoubleSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...election/iterator/LongSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 203 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7e27732...1efec03. Read the comment docs.. # Codecov Report\nMerging #1301 into master will increase coverage by 7.38%.\nThe diff coverage is 83.04%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1301      +/-\n==========================================\n+ Coverage   59.34%   66.73%   +7.38%   \n==========================================\n  Files         774      781       +7   \n  Lines       37874    38110     +236   \n  Branches     4957     5005      +48   \n==========================================\n+ Hits        22477    25431    +2954   \n+ Misses      13792    11013    -2779   \n- Partials     1605     1666      +61\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...realtime/impl/dictionary/FloatBiMapDictionary.java | 0% <\u00f8> (\u00f8) | |\n| ...not/core/segment/index/readers/LongDictionary.java | 76.92% <\u00f8> (+19.78%) | :arrow_up: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 68% <\u00f8> (+36%) | :arrow_up: |\n| ...ealtime/impl/dictionary/StringBiMapDictionary.java | 0% <\u00f8> (\u00f8) | |\n| ...ltime/impl/dictionary/MutableDictionaryReader.java | 0% <\u00f8> (-37.71%) | :arrow_down: |\n| ...t/core/segment/index/readers/StringDictionary.java | 75% <\u00f8> (+1.82%) | :arrow_up: |\n| ...ealtime/impl/dictionary/DoubleBiMapDictionary.java | 0% <\u00f8> (\u00f8) | |\n| ...ot/core/segment/index/readers/FloatDictionary.java | 61.53% <\u00f8> (+25.82%) | :arrow_up: |\n| ...t/core/segment/index/readers/DoubleDictionary.java | 50% <\u00f8> (+26.92%) | :arrow_up: |\n| ...gment/index/readers/ImmutableDictionaryReader.java | 72% <\u00f8> (+4%) | :arrow_up: |\n| ... and 232 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9fff256...da1df92. Read the comment docs.\n. # Codecov Report\nMerging #1304 into master will increase coverage by 7.96%.\nThe diff coverage is 28.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1304      +/-\n==========================================\n+ Coverage   59.22%   67.19%   +7.96%   \n==========================================\n  Files         774      774            \n  Lines       37802    37856      +54   \n  Branches     4940     4952      +12   \n==========================================\n+ Hits        22389    25437    +3048   \n+ Misses      13820    10738    -3082   \n- Partials     1593     1681      +88\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 68.53% <\u00f8> (+3.37%) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.79% <\u00f8> (+79.79%) | :arrow_up: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 43.96% <28.33%> (+19.77%) | :arrow_up: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| .../resources/BasePinotControllerRestletResource.java | 87.23% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (+0.66%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <0%> (+0.68%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 68.31% <0%> (+0.74%) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.56% <0%> (+1.19%) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.25% <0%> (+1.25%) | :arrow_up: |\n| ... and 209 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update afc5259...8734f83. Read the comment docs.. # Codecov Report\nMerging #1307 into master will decrease coverage by 0.07%.\nThe diff coverage is 86.48%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1307      +/-\n==========================================\n- Coverage   67.29%   67.22%   -0.08%   \n==========================================\n  Files         774      774            \n  Lines       37856    37856            \n  Branches     4952     4952            \n==========================================\n- Hits        25477    25448      -29   \n- Misses      10698    10727      +29   \n  Partials     1681     1681\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <\u00f8> (-4.26%) | :arrow_down: |\n| ...ransport/pool/AsyncPoolResourceManagerAdapter.java | 91.89% <\u00f8> (\u00f8) | :arrow_up: |\n| ...n/pinot/transport/netty/NettyClientConnection.java | 76.47% <\u00f8> (\u00f8) | :arrow_up: |\n| .../broker/helix/LiveInstancesChangeListenerImpl.java | 65.85% <\u00f8> (\u00f8) | :arrow_up: |\n| ...port/common/AbstractCompositeListenableFuture.java | 86.51% <100%> (\u00f8) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 86.28% <100%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/transport/pool/KeyedPoolImpl.java | 93.9% <100%> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 88.11% <100%> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/transport/common/SelectingFuture.java | 63.46% <100%> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/transport/common/CompositeFuture.java | 55.38% <100%> (\u00f8) | :arrow_up: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c86313a...67ff0ee. Read the comment docs.\n. # Codecov Report\nMerging #1311 into master will decrease coverage by <.01%.\nThe diff coverage is 64.7%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1311      +/-\n==========================================\n- Coverage   67.23%   67.23%   -0.01%   \n==========================================\n  Files         774      774            \n  Lines       37856    37865       +9   \n  Branches     4952     4952            \n==========================================\n+ Hits        25452    25458       +6   \n- Misses      10721    10734      +13   \n+ Partials     1683     1673      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/transport/scattergather/ScatterGatherStats.java | 47.36% <0%> (\u00f8) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 86.28% <100%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/response/ServerInstance.java | 80.39% <100%> (+2.61%) | :arrow_up: |\n| ...port/common/AbstractCompositeListenableFuture.java | 86.51% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/transport/common/AsyncResponseFuture.java | 82.73% <100%> (+0.12%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 68.22% <60%> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/transport/common/CompositeFuture.java | 54.54% <66.66%> (-0.84%) | :arrow_down: |\n| ...nkedin/pinot/transport/common/SelectingFuture.java | 62.26% <66.66%> (-1.2%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f06ce5f...0f9d3f5. Read the comment docs.\n. # Codecov Report\nMerging #1315 into master will increase coverage by <.01%.\nThe diff coverage is 37.83%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1315      +/-\n==========================================\n+ Coverage   67.23%   67.23%   +<.01%   \n==========================================\n  Files         774      774            \n  Lines       37856    37878      +22   \n  Branches     4952     4958       +6   \n==========================================\n+ Hits        25452    25468      +16   \n- Misses      10721    10727       +6   \n  Partials     1683     1683\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.01% <26.66%> (-3.33%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 80% <35.71%> (+2.41%) | :arrow_up: |\n| ...or/impl/inv/OffHeapBitmapInvertedIndexCreator.java | 90.07% <62.5%> (+1.43%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.97% <0%> (-4.23%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f06ce5f...2478365. Read the comment docs.\n. # Codecov Report\nMerging #1316 into master will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1316      +/-\n==========================================\n+ Coverage   67.23%   67.26%   +0.02%   \n==========================================\n  Files         774      774            \n  Lines       37856    37854       -2   \n  Branches     4952     4952            \n==========================================\n+ Hits        25452    25461       +9   \n+ Misses      10721    10720       -1   \n+ Partials     1683     1673      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.26% <0%> (+0.77%) | :arrow_up: |\n| .../selection/comparator/DocIdFloatValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...ealtime/impl/dictionary/LongMutableDictionary.java | 61.97% <0%> (-4.23%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 95% <0%> (-1.25%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (-0.68%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.81% <0%> (-0.63%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (\u00f8) | :arrow_up: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 015300e...23da5ce. Read the comment docs.\n. # Codecov Report\nMerging #1321 into master will increase coverage by 0.09%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1321      +/-\n=========================================\n+ Coverage   66.81%   66.9%   +0.09%   \n=========================================\n  Files         781     781            \n  Lines       38110   38101       -9   \n  Branches     5005    5001       -4   \n=========================================\n+ Hits        25462   25491      +29   \n+ Misses      10984   10946      -38   \n  Partials     1664    1664\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.79% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 68.53% <\u00f8> (\u00f8) | :arrow_up: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 74.76% <75%> (+30.8%) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (-1.74%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f087ebb...34167de. Read the comment docs.\n. # Codecov Report\nMerging #1322 into master will decrease coverage by 0.01%.\nThe diff coverage is 62.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1322      +/-\n==========================================\n- Coverage   66.88%   66.86%   -0.02%   \n==========================================\n  Files         781      781            \n  Lines       38101    38105       +4   \n  Branches     5001     5001            \n==========================================\n- Hits        25482    25480       -2   \n- Misses      10954    10958       +4   \n- Partials     1665     1667       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.61% <62.5%> (-0.19%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 80% <0%> (-2.23%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.03% <0%> (-1.74%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (-0.68%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.81% <0%> (-0.63%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 55.42% <0%> (-0.33%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2213882...d60129a. Read the comment docs.\n. # Codecov Report\nMerging #1325 into master will increase coverage by 7.88%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1325      +/-\n==========================================\n+ Coverage   59.11%   66.99%   +7.88%   \n==========================================\n  Files         781      781            \n  Lines       38105    38107       +2   \n  Branches     5001     5002       +1   \n==========================================\n+ Hits        22524    25530    +3006   \n+ Misses      13988    10923    -3065   \n- Partials     1593     1654      +61\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.85% <0%> (+11.8%) | :arrow_up: |\n| .../resources/BasePinotControllerRestletResource.java | 87.23% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (+0.66%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <0%> (+0.68%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 68.31% <0%> (+0.74%) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.56% <0%> (+1.19%) | :arrow_up: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (+1.29%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.18% <0%> (+1.34%) | :arrow_up: |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 94.52% <0%> (+1.36%) | :arrow_up: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (+1.61%) | :arrow_up: |\n| ... and 200 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 681ca0d...d4988f6. Read the comment docs.\n. # Codecov Report\nMerging #1328 into master will increase coverage by 7.75%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1328      +/-\n==========================================\n+ Coverage   59.11%   66.86%   +7.75%   \n==========================================\n  Files         781      781            \n  Lines       38105    38107       +2   \n  Branches     5001     5001            \n==========================================\n+ Hits        22524    25482    +2958   \n+ Misses      13988    10958    -3030   \n- Partials     1593     1667      +74\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/core/plan/CombinePlanNode.java | 75% <0%> (+9.78%) | :arrow_up: |\n| .../resources/BasePinotControllerRestletResource.java | 87.23% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (+0.66%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <0%> (+0.68%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 68.31% <0%> (+0.74%) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.56% <0%> (+1.19%) | :arrow_up: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (+1.29%) | :arrow_up: |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 94.52% <0%> (+1.36%) | :arrow_up: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (+1.61%) | :arrow_up: |\n| ...mon/metadata/segment/OfflineSegmentZKMetadata.java | 63.79% <0%> (+1.72%) | :arrow_up: |\n| ... and 195 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 681ca0d...e0847ef. Read the comment docs.\n. # Codecov Report\nMerging #1339 into master will increase coverage by 0.02%.\nThe diff coverage is 70%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1339      +/-\n==========================================\n+ Coverage   66.89%   66.91%   +0.02%   \n==========================================\n  Files         781      781            \n  Lines       38117    38126       +9   \n  Branches     5004     5005       +1   \n==========================================\n+ Hits        25499    25513      +14   \n+ Misses      10960    10958       -2   \n+ Partials     1658     1655       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 80% <\u00f8> (\u00f8) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 79.55% <\u00f8> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.83% <100%> (+0.06%) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.55% <100%> (-4.55%) | :arrow_down: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 68.96% <100%> (+1.69%) | :arrow_up: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 84.61% <40%> (-4.97%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a5010f0...8d1bd4a. Read the comment docs.\n. # Codecov Report\nMerging #1342 into master will decrease coverage by 0.08%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1342      +/-\n==========================================\n- Coverage   66.98%   66.89%   -0.09%   \n==========================================\n  Files         781      781            \n  Lines       38160    38183      +23   \n  Branches     5009     5014       +5   \n==========================================\n- Hits        25561    25543      -18   \n- Misses      10930    10964      +34   \n- Partials     1669     1676       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...troller/helix/core/retention/RetentionManager.java | 76.21% <100%> (+1.84%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.2% <100%> (+0.04%) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 56.73% <100%> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 46% <33.33%> (-0.4%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 74.03% <73.33%> (-0.12%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c701db1...c428eea. Read the comment docs.\n. # Codecov Report\nMerging #1343 into master will decrease coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1343      +/-\n==========================================\n- Coverage   66.84%   66.81%   -0.04%   \n==========================================\n  Files         781      781            \n  Lines       38126    38126            \n  Branches     5005     5005            \n==========================================\n- Hits        25487    25475      -12   \n- Misses      10976    10990      +14   \n+ Partials     1663     1661       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../query/aggregation/groupby/utils/FloatToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.55% <0%> (-4.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 69.38% <0%> (-2.05%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 76% <0%> (-1.15%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 82.69% <0%> (+0.96%) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 79.38% <0%> (+1.03%) | :arrow_up: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7f8e925...b7a013a. Read the comment docs.\n. # Codecov Report\nMerging #1344 into master will increase coverage by <.01%.\nThe diff coverage is 62.22%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1344      +/-\n==========================================\n+ Coverage   66.85%   66.85%   +<.01%   \n==========================================\n  Files         781      781            \n  Lines       38126    38160      +34   \n  Branches     5005     5009       +4   \n==========================================\n+ Hits        25490    25513      +23   \n  Misses      10977    10977            \n- Partials     1659     1670      +11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../controller/helix/ControllerRequestURLBuilder.java | 70.58% <100%> (+2.58%) | :arrow_up: |\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...estlet/resources/PinotInstanceRestletResource.java | 60.18% <56%> (-1.27%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.15% <66.66%> (+1.4%) | :arrow_up: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1089a2e...594ae6e. Read the comment docs.\n. # Codecov Report\nMerging #1350 into master will increase coverage by 0.03%.\nThe diff coverage is 44.44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1350      +/-\n==========================================\n+ Coverage   66.91%   66.94%   +0.03%   \n==========================================\n  Files         781      781            \n  Lines       38183    38183            \n  Branches     5014     5014            \n==========================================\n+ Hits        25549    25561      +12   \n+ Misses      10963    10955       -8   \n+ Partials     1671     1667       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.2% <44.44%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-4.42%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.22% <0%> (-1.84%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 77.14% <0%> (-1.72%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (-0.68%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 78.33% <0%> (+0.59%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c25c560...1a650fd. Read the comment docs.\n. # Codecov Report\nMerging #1351 into master will decrease coverage by 0.38%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1351      +/-\n==========================================\n- Coverage   66.86%   66.47%   -0.39%   \n==========================================\n  Files         781      781            \n  Lines       38160    38829     +669   \n  Branches     5009     5211     +202   \n==========================================\n+ Hits        25516    25812     +296   \n- Misses      10972    11317     +345   \n- Partials     1672     1700      +28\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 49.06% <0%> (-8.1%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 71.72% <0%> (-2.44%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80.85% <0%> (-2.13%) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 72.29% <0%> (-2.09%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.81% <0%> (-0.63%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (\u00f8) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0d91577...325b45c. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@c260d11). Click here to learn what that means.\nThe diff coverage is 75.64%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1352   +/-\n=========================================\n  Coverage          ?   66.96%         \n=========================================\n  Files             ?      792         \n  Lines             ?    38445         \n  Branches          ?     5043         \n=========================================\n  Hits              ?    25746         \n  Misses            ?    11007         \n  Partials          ?     1692\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 68.53% <\u00f8> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.61% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.2% <\u00f8> (\u00f8) | |\n| ...inkedin/pinot/minion/exception/FatalException.java | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 44.66% <0%> (\u00f8) | |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 100% <100%> (\u00f8) | |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 100% <100%> (\u00f8) | |\n| ...pinot/minion/exception/TaskCancelledException.java | 100% <100%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.37% <50%> (\u00f8) | |\n| ...troller/helix/core/minion/ClusterInfoProvider.java | 54.54% <54.54%> (\u00f8) | |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c260d11...4969413. Read the comment docs.\n. # Codecov Report\nMerging #1358 into master will decrease coverage by 0.05%.\nThe diff coverage is 89.47%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1358      +/-\n==========================================\n- Coverage   66.91%   66.85%   -0.06%   \n==========================================\n  Files         781      781            \n  Lines       38208    38212       +4   \n  Branches     5019     5019            \n==========================================\n- Hits        25566    25548      -18   \n- Misses      10967    10989      +22   \n  Partials     1675     1675\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...server/starter/helix/HelixInstanceDataManager.java | 77.77% <100%> (+3.79%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 38.63% <100%> (\u00f8) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 53% <100%> (+1.48%) | :arrow_up: |\n| ...n/pinot/core/segment/index/loader/LoaderUtils.java | 89.18% <100%> (+6.58%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.41% <100%> (-0.41%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 60.62% <50%> (-1.64%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 72862d9...377880c. Read the comment docs.\n. # Codecov Report\nMerging #1364 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1364      +/-\n==========================================\n+ Coverage   66.91%   66.94%   +0.03%   \n==========================================\n  Files         781      781            \n  Lines       38183    38188       +5   \n  Branches     5014     5015       +1   \n==========================================\n+ Hits        25549    25566      +17   \n+ Misses      10963    10951      -12   \n  Partials     1671     1671\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.61% <100%> (+0.51%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-4.42%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (\u00f8) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 55.79% <0%> (+0.42%) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+2.02%) | :arrow_up: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (+2.98%) | :arrow_up: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 59de82b...a18647a. Read the comment docs.\n. # Codecov Report\nMerging #1368 into master will decrease coverage by 0.03%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1368      +/-\n==========================================\n- Coverage   66.91%   66.87%   -0.04%   \n==========================================\n  Files         781      781            \n  Lines       38183    38193      +10   \n  Branches     5014     5016       +2   \n==========================================\n- Hits        25549    25542       -7   \n- Misses      10963    10978      +15   \n- Partials     1671     1673       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...troller/helix/core/retention/RetentionManager.java | 75.44% <100%> (-0.78%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 72.07% <60%> (-1.97%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-4.42%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8d52e8a...2902211. Read the comment docs.\n. # Codecov Report\nMerging #1369 into master will decrease coverage by 0.02%.\nThe diff coverage is 96.77%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1369      +/-\n==========================================\n- Coverage   66.88%   66.86%   -0.03%   \n==========================================\n  Files         781      781            \n  Lines       38198    38208      +10   \n  Branches     5017     5019       +2   \n==========================================\n- Hits        25550    25546       -4   \n- Misses      10971    10997      +26   \n+ Partials     1677     1665      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.09% <100%> (+0.26%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 68.53% <96.15%> (+0.21%) | :arrow_up: |\n| .../selection/comparator/DocIdFloatValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 73.33% <0%> (-16.67%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.55% <0%> (-4.64%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9b6719a...942fa40. Read the comment docs.\n. # Codecov Report\nMerging #1375 into master will increase coverage by 0.05%.\nThe diff coverage is 70.37%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1375      +/-\n==========================================\n+ Coverage   66.91%   66.96%   +0.05%   \n==========================================\n  Files         781      781            \n  Lines       38208    38227      +19   \n  Branches     5019     5022       +3   \n==========================================\n+ Hits        25566    25599      +33   \n+ Misses      10967    10947      -20   \n- Partials     1675     1681       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/restlet/resources/PinotTableRestletResource.java | 41.96% <70.37%> (+0.95%) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../query/aggregation/groupby/utils/FloatToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 90% <0%> (-2.15%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80.85% <0%> (-2.13%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-2.05%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 72862d9...8392893. Read the comment docs.\n. # Codecov Report\nMerging #1378 into master will decrease coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1378      +/-\n==========================================\n- Coverage   66.92%   66.86%   -0.06%   \n==========================================\n  Files         781      781            \n  Lines       38212    38213       +1   \n  Branches     5019     5019            \n==========================================\n- Hits        25573    25553      -20   \n- Misses      10959    10977      +18   \n- Partials     1680     1683       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <100%> (-1.93%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../query/aggregation/groupby/utils/FloatToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.01% <0%> (-2.32%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.41% <0%> (-0.64%) | :arrow_down: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5265452...eb4454e. Read the comment docs.\n. # Codecov Report\nMerging #1379 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1379      +/-\n==========================================\n- Coverage   66.97%   66.94%   -0.03%   \n==========================================\n  Files         781      781            \n  Lines       38223    38230       +7   \n  Branches     5023     5025       +2   \n==========================================\n- Hits        25598    25592       -6   \n- Misses      10940    10963      +23   \n+ Partials     1685     1675      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/impl/kafka/AvroRecordToPinotRowGenerator.java | 73.33% <100%> (+4.91%) | :arrow_up: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 84.61% <100%> (+1.92%) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.55% <0%> (-4.64%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 69.67% <0%> (-1.64%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 55.36% <0%> (-0.43%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 77.14% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.04% <0%> (+0.63%) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9dc7868...d8d56ab. Read the comment docs.\n. # Codecov Report\nMerging #1381 into master will decrease coverage by 0.04%.\nThe diff coverage is 42.85%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1381      +/-\n==========================================\n- Coverage    66.9%   66.85%   -0.05%   \n==========================================\n  Files         781      781            \n  Lines       38228    38234       +6   \n  Branches     5022     5023       +1   \n==========================================\n- Hits        25576    25562      -14   \n- Misses      10973    11002      +29   \n+ Partials     1679     1670       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 56.73% <42.85%> (-0.48%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 74.53% <0%> (-6.49%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.55% <0%> (-4.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-2.21%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 67.34% <0%> (-2.05%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 76% <0%> (-1.15%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1656b64...704fef2. Read the comment docs.\n. # Codecov Report\nMerging #1382 into master will increase coverage by 0.11%.\nThe diff coverage is 44.44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1382      +/-\n==========================================\n+ Coverage    66.9%   67.01%   +0.11%   \n==========================================\n  Files         781      781            \n  Lines       38228    38216      -12   \n  Branches     5022     5021       -1   \n==========================================\n+ Hits        25576    25612      +36   \n+ Misses      10973    10927      -46   \n+ Partials     1679     1677       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...roller/api/restlet/resources/PinotTableSchema.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 60.95% <100%> (+0.33%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.2% <100%> (-1.43%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 50.51% <100%> (-1.49%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.34% <63.63%> (+0.14%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.31% <66.66%> (+1.92%) | :arrow_up: |\n| ...helix/PinotHelixPropertyStoreZnRecordProvider.java | 43.75% <0%> (-6.25%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 71.19% <0%> (\u00f8) | :arrow_up: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0e29a4d...c7336e8. Read the comment docs.\n. # Codecov Report\nMerging #1387 into master will increase coverage by 0.01%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1387      +/-\n==========================================\n+ Coverage   66.91%   66.92%   +0.01%   \n==========================================\n  Files         781      781            \n  Lines       38230    38243      +13   \n  Branches     5025     5027       +2   \n==========================================\n+ Hits        25583    25596      +13   \n- Misses      10967    10975       +8   \n+ Partials     1680     1672       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/common/metrics/ServerGauge.java | 94.73% <100%> (+0.29%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.03% <70%> (-0.07%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-11.12%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.55% <0%> (-4.64%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (-2%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 77.14% <0%> (-1.72%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 70ae44c...c04f7ec. Read the comment docs.\n. # Codecov Report\nMerging #1389 into master will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1389      +/-\n==========================================\n+ Coverage   66.91%   66.96%   +0.04%   \n==========================================\n  Files         781      781            \n  Lines       38230    38230            \n  Branches     5025     5025            \n==========================================\n+ Hits        25583    25599      +16   \n+ Misses      10967    10954      -13   \n+ Partials     1680     1677       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/impl/kafka/AvroRecordToPinotRowGenerator.java | 73.33% <100%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52.66% <0%> (-2%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 78.85% <0%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.18% <0%> (+0.21%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ccc9be9...3dbde58. Read the comment docs.\n. # Codecov Report\nMerging #1394 into master will decrease coverage by 0.02%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1394      +/-\n==========================================\n- Coverage   66.99%   66.96%   -0.03%   \n==========================================\n  Files         781      781            \n  Lines       38243    38236       -7   \n  Branches     5027     5026       -1   \n==========================================\n- Hits        25619    25604      -15   \n- Misses      10952    10955       +3   \n- Partials     1672     1677       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 71.19% <\u00f8> (\u00f8) | :arrow_up: |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 85.41% <\u00f8> (-0.59%) | :arrow_down: |\n| ...ter/impl/FixedBitSingleColumnMultiValueWriter.java | 82.92% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/segment/memory/PinotDataBuffer.java | 55.55% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/io/writer/impl/v1/FixedByteMultiValueWriter.java | 56.92% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ore/segment/index/column/ColumnIndexContainer.java | 87.5% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 61.01% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/segment/memory/PinotLByteBuffer.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../io/reader/impl/v1/FixedByteSingleValueReader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/io/reader/impl/v1/FixedByteMultiValueReader.java | 50% <100%> (\u00f8) | :arrow_up: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e764ee7...bdc8313. Read the comment docs.\n. # Codecov Report\nMerging #1401 into master will decrease coverage by 0.01%.\nThe diff coverage is 32.25%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1401      +/-\n==========================================\n- Coverage   66.97%   66.95%   -0.02%   \n==========================================\n  Files         781      781            \n  Lines       38236    38252      +16   \n  Branches     5026     5030       +4   \n==========================================\n+ Hits        25608    25613       +5   \n+ Misses      10955    10953       -2   \n- Partials     1673     1686      +13\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.43% <83.33%> (-0.56%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../query/aggregation/groupby/utils/FloatToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 76.19% <0%> (-3.58%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 82.69% <0%> (-1.93%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 64f3ce3...6d83577. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@c260d11). Click here to learn what that means.\nThe diff coverage is 82.79%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1405   +/-\n=========================================\n  Coverage          ?   67.14%         \n=========================================\n  Files             ?      792         \n  Lines             ?    38495         \n  Branches          ?     5047         \n=========================================\n  Hits              ?    25848         \n  Misses            ?    10949         \n  Partials          ?     1698\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...eader/impl/FixedByteSingleValueMultiColReader.java | 69.35% <\u00f8> (\u00f8) | |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 91.66% <100%> (\u00f8) | |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 71.19% <100%> (\u00f8) | |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 51.21% <100%> (\u00f8) | |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 77.12% <82.22%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c260d11...de1e4c8. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@c260d11). Click here to learn what that means.\nThe diff coverage is 89.33%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1406   +/-\n=========================================\n  Coverage          ?   66.86%         \n=========================================\n  Files             ?      781         \n  Lines             ?    38242         \n  Branches          ?     5030         \n=========================================\n  Hits              ?    25571         \n  Misses            ?    10990         \n  Partials          ?     1681\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/data/DimensionFieldSpec.java | 100% <\u00f8> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 97.36% <\u00f8> (\u00f8) | |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 74.86% <\u00f8> (\u00f8) | |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 95.55% <100%> (\u00f8) | |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.32% <88.4%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c260d11...dc4d52f. Read the comment docs.\n. # Codecov Report\nMerging #1407 into master will decrease coverage by 0.92%.\nThe diff coverage is 83.6%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1407      +/-\n==========================================\n- Coverage   66.95%   66.03%   -0.93%   \n==========================================\n  Files         792      792            \n  Lines       38445    39851    +1406   \n  Branches     5043     5374     +331   \n==========================================\n+ Hits        25740    26314     +574   \n- Misses      11021    11800     +779   \n- Partials     1684     1737      +53\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 90.47% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/core/query/scheduler/FCFSQueryScheduler.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 93.54% <100%> (+0.28%) | :arrow_up: |\n| ...inot/core/query/pruner/PartitionSegmentPruner.java | 82.14% <100%> (+0.66%) | :arrow_up: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <100%> (+3.44%) | :arrow_up: |\n| ...inkedin/pinot/common/query/ServerQueryRequest.java | 85.71% <100%> (\u00f8) | |\n| .../pinot/server/request/ScheduledRequestHandler.java | 87.71% <100%> (\u00f8) | :arrow_up: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 86.5% <100%> (\u00f8) | :arrow_up: |\n| ...ot/core/query/pruner/SegmentPrunerServiceImpl.java | 73.68% <100%> (\u00f8) | :arrow_up: |\n| ... and 43 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e5056ab...f258a4c. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@8c847db). Click here to learn what that means.\nThe diff coverage is 64.66%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1408   +/-\n=========================================\n  Coverage          ?   67.02%         \n=========================================\n  Files             ?      792         \n  Lines             ?    38441         \n  Branches          ?     5039         \n=========================================\n  Hits              ?    25767         \n  Misses            ?    10992         \n  Partials          ?     1682\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/routing/HelixExternalViewBasedRouting.java | 44.59% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.71% <\u00f8> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.61% <\u00f8> (\u00f8) | |\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | |\n| ...x/core/minion/generator/TaskGeneratorRegistry.java | 88.88% <0%> (\u00f8) | |\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 92.3% <0%> (\u00f8) | |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 86.28% <100%> (\u00f8) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 68.53% <100%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.31% <100%> (\u00f8) | |\n| ...t/common/metadata/instance/InstanceZKMetadata.java | 88.52% <100%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c847db...d1d7b25. Read the comment docs.\n. # Codecov Report\nMerging #1411 into master will increase coverage by 0.05%.\nThe diff coverage is 93.54%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1411      +/-\n==========================================\n+ Coverage   66.97%   67.03%   +0.05%   \n==========================================\n  Files         792      792            \n  Lines       38435    38451      +16   \n  Branches     5043     5043            \n==========================================\n+ Hits        25743    25776      +33   \n+ Misses      11001    10990      -11   \n+ Partials     1691     1685       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pl/kafka/KafkaHighLevelConsumerStreamProvider.java | 76.47% <100%> (+0.96%) | :arrow_up: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 79.33% <100%> (+2.27%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.16% <60%> (+0.12%) | :arrow_up: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 52.5% <0%> (-5%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 61.19% <0%> (-2.99%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.58%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (-1.32%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4812a59...c241b12. Read the comment docs.\n. # Codecov Report\nMerging #1413 into master will increase coverage by 0.06%.\nThe diff coverage is 65.65%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1413      +/-\n=========================================\n+ Coverage   66.93%     67%   +0.06%   \n=========================================\n  Files         792     792            \n  Lines       38441   38415      -26   \n  Branches     5039    5039            \n=========================================\n+ Hits        25732   25741       +9   \n+ Misses      11020   10992      -28   \n+ Partials     1689    1682       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/restlet/resources/PinotTableRestletResource.java | 41.3% <0%> (+0.66%) | :arrow_up: |\n| ...controller/helix/core/minion/PinotTaskManager.java | 63.26% <0%> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/controller/api/pojos/Instance.java | 45.65% <0%> (-4.35%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.01% <100%> (+6.48%) | :arrow_up: |\n| ...troller/helix/core/retention/RetentionManager.java | 75.44% <100%> (\u00f8) | :arrow_up: |\n| ...t/resources/PinotSegmentUploadRestletResource.java | 51% <100%> (\u00f8) | :arrow_up: |\n| ...estlet/resources/PinotInstanceRestletResource.java | 60.18% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.61% <100%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.49% <71.05%> (+0.27%) | :arrow_up: |\n| ...restlet/resources/PinotSegmentRestletResource.java | 31.09% <80%> (\u00f8) | :arrow_up: |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 396d3ee...9fef3bd. Read the comment docs.\n. # Codecov Report\nMerging #1416 into master will increase coverage by 0.06%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1416      +/-\n==========================================\n+ Coverage   66.92%   66.99%   +0.06%   \n==========================================\n  Files         792      792            \n  Lines       38415    38420       +5   \n  Branches     5039     5040       +1   \n==========================================\n+ Hits        25709    25739      +30   \n+ Misses      11021    10993      -28   \n- Partials     1685     1688       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommon/request/helper/ControllerRequestBuilder.java | 87.77% <0%> (-2%) | :arrow_down: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 67.27% <100%> (+1.88%) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 77.14% <0%> (-1.72%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 69.67% <0%> (-1.64%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (-1.32%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9f8a528...7d3477b. Read the comment docs.\n. # Codecov Report\nMerging #1420 into master will increase coverage by 0.29%.\nThe diff coverage is 72.72%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1420      +/-\n=========================================\n+ Coverage   66.91%   67.2%   +0.29%   \n=========================================\n  Files         792     792            \n  Lines       38445   38502      +57   \n  Branches     5040    5045       +5   \n=========================================\n+ Hits        25724   25877     +153   \n+ Misses      11042   10937     -105   \n- Partials     1679    1688       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...controller/helix/core/minion/PinotTaskManager.java | 70% <0%> (+6.73%) | :arrow_up: |\n| .../broker/helix/LiveInstancesChangeListenerImpl.java | 65.85% <100%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.16% <76.47%> (+1.43%) | :arrow_up: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 82.69% <0%> (-1.93%) | :arrow_down: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d7e2e23...9ce9f28. Read the comment docs.\n. # Codecov Report\nMerging #1422 into master will increase coverage by 0.03%.\nThe diff coverage is 22.58%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1422      +/-\n==========================================\n+ Coverage   67.18%   67.22%   +0.03%   \n==========================================\n  Files         792      792            \n  Lines       38489    38493       +4   \n  Branches     5044     5044            \n==========================================\n+ Hits        25859    25876      +17   \n+ Misses      10938    10933       -5   \n+ Partials     1692     1684       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/restlet/resources/PinotTableRestletResource.java | 40.42% <22.58%> (-0.88%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 71.11% <0%> (-4.45%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 78.33% <0%> (+0.59%) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 97.36% <0%> (+1.31%) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 62c86f2...95fc00d. Read the comment docs.\n. # Codecov Report\nMerging #1423 into master will decrease coverage by 0.02%.\nThe diff coverage is 63.63%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1423      +/-\n==========================================\n- Coverage   67.18%   67.15%   -0.03%   \n==========================================\n  Files         792      792            \n  Lines       38489    38574      +85   \n  Branches     5044     5050       +6   \n==========================================\n+ Hits        25859    25906      +47   \n- Misses      10938    10980      +42   \n+ Partials     1692     1688       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 91.66% <100%> (\u00f8) | :arrow_up: |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 61.11% <63.26%> (+9.89%) | :arrow_up: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 75% <0%> (-2.13%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 62c86f2...4781e18. Read the comment docs.\n. # Codecov Report\nMerging #1425 into master will increase coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1425      +/-\n==========================================\n+ Coverage   67.14%   67.21%   +0.06%   \n==========================================\n  Files         792      792            \n  Lines       38502    38503       +1   \n  Branches     5045     5045            \n==========================================\n+ Hits        25854    25881      +27   \n+ Misses      10958    10940      -18   \n+ Partials     1690     1682       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 86.61% <100%> (+0.1%) | :arrow_up: |\n| ...election/iterator/LongSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...n/pinot/core/query/selection/SelectionFetcher.java | 78.94% <0%> (-5.27%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0192101...789ad7b. Read the comment docs.\n. # Codecov Report\nMerging #1437 into master will decrease coverage by 0.13%.\nThe diff coverage is 20.83%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1437      +/-\n==========================================\n- Coverage   67.86%   67.73%   -0.14%   \n==========================================\n  Files         785      786       +1   \n  Lines       38164    38291     +127   \n  Branches     4973     4984      +11   \n==========================================\n+ Hits        25901    25936      +35   \n- Misses      10570    10675     +105   \n+ Partials     1693     1680      -13\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...estlet/resources/PinotInstanceRestletResource.java | 60.18% <\u00f8> (\u00f8) | :arrow_up: |\n| ...api/restlet/resources/PinotTableTenantConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/api/restlet/resources/LLCSegmentCommit.java | 65% <\u00f8> (\u00f8) | :arrow_up: |\n| ...i/restlet/resources/PinotTableIndexingConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/common/restlet/resources/TableSizeInfo.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...i/restlet/resources/PinotTableMetadataConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../restlet/resources/PinotSchemaRestletResource.java | 35.97% <\u00f8> (\u00f8) | :arrow_up: |\n| ...restlet/resources/PinotSegmentRestletResource.java | 31.09% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ller/api/restlet/resources/LLCSegmentConsumed.java | 84.61% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ler/api/restlet/resources/PinotTableInstances.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 53 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 07474aa...b6dc0f2. Read the comment docs.\n. # Codecov Report\nMerging #1438 into master will increase coverage by 0.76%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1438      +/-\n==========================================\n+ Coverage   67.15%   67.92%   +0.76%   \n==========================================\n  Files         792      785       -7   \n  Lines       38574    38166     -408   \n  Branches     5050     4970      -80   \n==========================================\n+ Hits        25906    25924      +18   \n+ Misses      10989    10561     -428   \n- Partials     1679     1681       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (-0.68%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 55.36% <0%> (-0.43%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.16% <0%> (+0.2%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 58.5% <0%> (+0.22%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.04% <0%> (+0.63%) | :arrow_up: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 90.32% <0%> (+1.61%) | :arrow_up: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (+3.44%) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 81.01% <0%> (+6.48%) | :arrow_up: |\n| ... and 2 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b305147...75852ee. Read the comment docs.\n. # Codecov Report\nMerging #1445 into master will decrease coverage by 0.02%.\nThe diff coverage is 77.64%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1445      +/-\n=========================================\n- Coverage   67.92%   67.9%   -0.03%   \n=========================================\n  Files         785     785            \n  Lines       38166   38141      -25   \n  Branches     4970    4969       -1   \n=========================================\n- Hits        25925   25898      -27   \n- Misses      10553   10556       +3   \n+ Partials     1688    1687       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pi/restlet/resources/PinotTableSegmentConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...i/restlet/resources/PinotTableMetadataConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...i/restlet/resources/PinotTableIndexingConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/common/config/OfflineTableConfig.java | 100% <100%> (+55.55%) | :arrow_up: |\n| ...kedin/pinot/common/config/RealtimeTableConfig.java | 100% <100%> (+55.55%) | :arrow_up: |\n| ...i/restlet/resources/PinotTableRestletResource.java | 40.42% <100%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 58.58% <33.33%> (+0.08%) | :arrow_up: |\n| ...kedin/pinot/common/config/AbstractTableConfig.java | 77.52% <80.26%> (+1.23%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cd23830...a7b66a0. Read the comment docs.\n. # Codecov Report\nMerging #1452 into master will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1452      +/-\n=========================================\n+ Coverage   67.85%   67.9%   +0.04%   \n=========================================\n  Files         785     785            \n  Lines       38141   38164      +23   \n  Branches     4969    4973       +4   \n=========================================\n+ Hits        25880   25914      +34   \n+ Misses      10566   10563       -3   \n+ Partials     1695    1687       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 87.68% <100%> (+1.06%) | :arrow_up: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 98.88% <100%> (+0.08%) | :arrow_up: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.55% <0%> (-4.64%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-2.6%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f3e7cde...22320df. Read the comment docs.\n. # Codecov Report\nMerging #1460 into master will decrease coverage by 0.01%.\nThe diff coverage is 58.57%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1460      +/-\n==========================================\n- Coverage   67.69%   67.67%   -0.02%   \n==========================================\n  Files         784      786       +2   \n  Lines       38278    38327      +49   \n  Branches     4982     4989       +7   \n==========================================\n+ Hits        25912    25939      +27   \n- Misses      10680    10704      +24   \n+ Partials     1686     1684       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 86.61% <\u00f8> (-1.07%) | :arrow_down: |\n| ...in/pinot/core/plan/ColumnarDataSourcePlanNode.java | 54.54% <100%> (+10.79%) | :arrow_up: |\n| ...m/linkedin/pinot/core/plan/ProjectionPlanNode.java | 64.51% <100%> (+2.01%) | :arrow_up: |\n| ...ot/core/plan/MetadataBasedAggregationPlanNode.java | 35.71% <35.71%> (\u00f8) | |\n| ...erator/query/MetadataBasedAggregationOperator.java | 64.28% <64.28%> (\u00f8) | |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 91.17% <90.9%> (-0.5%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 92.17% <0%> (-6.71%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2872a66...c17abcb. Read the comment docs.\n. # Codecov Report\nMerging #1461 into master will increase coverage by 0.01%.\nThe diff coverage is 79.13%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1461      +/-\n==========================================\n+ Coverage   67.74%   67.76%   +0.01%   \n==========================================\n  Files         786      784       -2   \n  Lines       38291    38278      -13   \n  Branches     4984     4982       -2   \n==========================================\n- Hits        25942    25940       -2   \n+ Misses      10668    10656      -12   \n- Partials     1681     1682       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/data/manager/config/TableDataManagerConfig.java | 77.27% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 51.54% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/realtime/impl/FileBasedStreamProviderConfig.java | 44.44% <\u00f8> (\u00f8) | :arrow_up: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 77.77% <\u00f8> (\u00f8) | :arrow_up: |\n| ...impl/kafka/KafkaHighLevelStreamProviderConfig.java | 54.28% <\u00f8> (\u00f8) | :arrow_up: |\n| .../data/manager/offline/OfflineTableDataManager.java | 88.88% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.6% <\u00f8> (\u00f8) | :arrow_up: |\n| .../impl/kafka/KafkaLowLevelStreamProviderConfig.java | 33.33% <\u00f8> (\u00f8) | :arrow_up: |\n| ...troller/helix/core/minion/ClusterInfoProvider.java | 29.41% <\u00f8> (\u00f8) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 79.55% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 38 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7ccf910...0d80fd9. Read the comment docs.\n. # Codecov Report\nMerging #1462 into master will increase coverage by 0.09%.\nThe diff coverage is 81.81%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1462      +/-\n==========================================\n+ Coverage   67.74%   67.84%   +0.09%   \n==========================================\n  Files         786      787       +1   \n  Lines       38291    38497     +206   \n  Branches     4984     5015      +31   \n==========================================\n+ Hits        25942    26119     +177   \n- Misses      10668    10675       +7   \n- Partials     1681     1703      +22\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <\u00f8> (-2.21%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.16% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 93.02% <\u00f8> (+2.11%) | :arrow_up: |\n| ...r/docvaliterators/RealtimeSingleValueIterator.java | 91.89% <100%> (+23.71%) | :arrow_up: |\n| ...core/operator/blocks/RealtimeSingleValueBlock.java | 65.62% <100%> (+2.29%) | :arrow_up: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 67.81% <60.86%> (-5.63%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.14% <67.56%> (-1.06%) | :arrow_down: |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 88.23% <88.5%> (+27.12%) | :arrow_up: |\n| ...ator/docvalsets/RealtimeFixedWidthRawValueSet.java | 94.11% <94.11%> (\u00f8) | |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ... and 46 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7ccf910...9d3c77e. Read the comment docs.\n. # Codecov Report\nMerging #1467 into master will decrease coverage by 0.07%.\nThe diff coverage is 42.64%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1467      +/-\n==========================================\n- Coverage    67.9%   67.82%   -0.08%   \n==========================================\n  Files         787      787            \n  Lines       38490    38519      +29   \n  Branches     5015     5022       +7   \n==========================================\n- Hits        26135    26126       -9   \n- Misses      10653    10688      +35   \n- Partials     1702     1705       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../manager/offline/FileBasedInstanceDataManager.java | 71.76% <0%> (+1.64%) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 59.23% <38.46%> (-1.73%) | :arrow_down: |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 77.58% <54.54%> (-7.32%) | :arrow_down: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 69.46% <6.66%> (-8.32%) | :arrow_down: |\n| ...in/pinot/common/messages/SegmentReloadMessage.java | 90.9% <66.66%> (-9.1%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 58.69% <90.9%> (+0.11%) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 78bb3ec...7963d72. Read the comment docs.\n. # Codecov Report\nMerging #1468 into master will increase coverage by 0.09%.\nThe diff coverage is 89.13%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1468      +/-\n==========================================\n+ Coverage    67.9%   67.99%   +0.09%   \n==========================================\n  Files         787      788       +1   \n  Lines       38490    38548      +58   \n  Branches     5015     5026      +11   \n==========================================\n+ Hits        26135    26212      +77   \n+ Misses      10653    10635      -18   \n+ Partials     1702     1701       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <\u00f8> (+0.19%) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 70.53% <\u00f8> (+0.39%) | :arrow_up: |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 95.04% <\u00f8> (+5.89%) | :arrow_up: |\n| ...converter/stats/RealtimeSegmentStatsContainer.java | 93.33% <75%> (+1.66%) | :arrow_up: |\n| ...erter/stats/RealtimeNoDictionaryColStatistics.java | 89.77% <89.77%> (\u00f8) | |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 78bb3ec...2e7a5ad. Read the comment docs.\n. # Codecov Report\nMerging #1471 into master will increase coverage by 0.03%.\nThe diff coverage is 91.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1471      +/-\n==========================================\n+ Coverage   67.89%   67.92%   +0.03%   \n==========================================\n  Files         788      788            \n  Lines       38577    38582       +5   \n  Branches     5033     5033            \n==========================================\n+ Hits        26191    26208      +17   \n+ Misses      10677    10667      -10   \n+ Partials     1709     1707       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 64.7% <0%> (\u00f8) | :arrow_up: |\n| ...pinot/server/realtime/ControllerLeaderLocator.java | 87.87% <100%> (+2.16%) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (-1.32%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 55.79% <0%> (+0.42%) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 34d40c0...26e6927. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@6e43c21). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1472   +/-\n=========================================\n  Coverage          ?   67.84%         \n=========================================\n  Files             ?      787         \n  Lines             ?    38490         \n  Branches          ?     5015         \n=========================================\n  Hits              ?    26112         \n  Misses            ?    10673         \n  Partials          ?     1705\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6e43c21...6df5d01. Read the comment docs.\n. # Codecov Report\nMerging #1475 into master will increase coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1475      +/-\n==========================================\n+ Coverage   67.89%   67.97%   +0.07%   \n==========================================\n  Files         788      788            \n  Lines       38548    38548            \n  Branches     5026     5026            \n==========================================\n+ Hits        26172    26202      +30   \n+ Misses      10679    10640      -39   \n- Partials     1697     1706       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...election/iterator/LongSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/core/query/selection/SelectionFetcher.java | 78.94% <0%> (-5.27%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 82.69% <0%> (-1.93%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2d2723...6905376. Read the comment docs.\n. # Codecov Report\nMerging #1476 into master will increase coverage by 0.09%.\nThe diff coverage is 92.85%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1476      +/-\n==========================================\n+ Coverage   67.94%   68.04%   +0.09%   \n==========================================\n  Files         827      827            \n  Lines       40301    40313      +12   \n  Branches     5304     5307       +3   \n==========================================\n+ Hits        27382    27430      +48   \n+ Misses      11075    11040      -35   \n+ Partials     1844     1843       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inot/core/query/pruner/PartitionSegmentPruner.java | 85% <92.85%> (+2.85%) | :arrow_up: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-1.3%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <0%> (+0.54%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.04% <0%> (+0.63%) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 82.69% <0%> (+0.96%) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 79.38% <0%> (+1.03%) | :arrow_up: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.24% <0%> (+2.06%) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <0%> (+2.2%) | :arrow_up: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ea36144...5261eca. Read the comment docs.\n. # Codecov Report\nMerging #1477 into master will increase coverage by 0.04%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1477      +/-\n==========================================\n+ Coverage   67.89%   67.93%   +0.04%   \n==========================================\n  Files         788      790       +2   \n  Lines       38577    38654      +77   \n  Branches     5033     5039       +6   \n==========================================\n+ Hits        26191    26260      +69   \n- Misses      10677    10684       +7   \n- Partials     1709     1710       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 90% <\u00f8> (\u00f8) | :arrow_up: |\n| ...java/com/linkedin/pinot/core/common/Constants.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 83.87% <\u00f8> (\u00f8) | :arrow_up: |\n| ...erter/stats/RealtimeNoDictionaryColStatistics.java | 89.77% <0%> (\u00f8) | :arrow_up: |\n| .../core/segment/creator/ColumnIndexCreationInfo.java | 94.87% <100%> (+0.27%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 56.55% <0%> (-2.07%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 34d40c0...523264b. Read the comment docs.\n. # Codecov Report\nMerging #1482 into master will decrease coverage by 0.01%.\nThe diff coverage is 84.88%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1482      +/-\n==========================================\n- Coverage      68%   67.99%   -0.02%   \n==========================================\n  Files         790      789       -1   \n  Lines       38623    38599      -24   \n  Branches     5028     5033       +5   \n==========================================\n- Hits        26266    26245      -21   \n- Misses      10655    10656       +1   \n+ Partials     1702     1698       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 67.27% <\u00f8> (-1.7%) | :arrow_down: |\n| ...pi/restlet/resources/PinotTableSegmentConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...i/restlet/resources/PinotTableMetadataConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...i/restlet/resources/PinotTableIndexingConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...controller/helix/ControllerRequestBuilderUtil.java | 95% <0%> (+11.09%) | :arrow_up: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 62.5% <100%> (-2.89%) | :arrow_down: |\n| ...i/restlet/resources/PinotTableRestletResource.java | 40.74% <100%> (+0.31%) | :arrow_up: |\n| .../linkedin/pinot/common/config/TableTaskConfig.java | 50% <50%> (\u00f8) | |\n| ...controller/helix/core/minion/PinotTaskManager.java | 70.17% <77.77%> (+0.17%) | :arrow_up: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7014376...55448a5. Read the comment docs.\n. # Codecov Report\nMerging #1485 into master will increase coverage by 0.09%.\nThe diff coverage is 69.81%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1485      +/-\n==========================================\n+ Coverage   67.88%   67.98%   +0.09%   \n==========================================\n  Files         789      790       +1   \n  Lines       38591    38636      +45   \n  Branches     5034     5039       +5   \n==========================================\n+ Hits        26199    26268      +69   \n+ Misses      10686    10660      -26   \n- Partials     1706     1708       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 63.63% <60%> (-1.07%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.57% <70.83%> (+2.4%) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 65.38% <0%> (-1.89%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 55.36% <0%> (-0.43%) | :arrow_down: |\n| ...va/com/linkedin/pinot/common/utils/DateFormat.java | | |\n| ...din/pinot/pql/parsers/pql2/ast/OptionsAstNode.java | 100% <0%> (\u00f8) | |\n| ...edin/pinot/pql/parsers/pql2/ast/OptionAstNode.java | 60% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8dc9415...ce63970. Read the comment docs.\n. # Codecov Report\nMerging #1488 into master will increase coverage by 0.04%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1488      +/-\n==========================================\n+ Coverage   67.96%   68.01%   +0.04%   \n==========================================\n  Files         790      790            \n  Lines       38626    38623       -3   \n  Branches     5028     5028            \n==========================================\n+ Hits        26253    26268      +15   \n+ Misses      10665    10652      -13   \n+ Partials     1708     1703       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 80.98% <33.33%> (-0.35%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.35% <0%> (-3.68%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.04% <0%> (+0.63%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.18% <0%> (+0.67%) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 97.36% <0%> (+1.31%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 52.94% <0%> (+2.94%) | :arrow_up: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 64.28% <0%> (+3.57%) | :arrow_up: |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 57d068c...af517c3. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@3de6239). Click here to learn what that means.\nThe diff coverage is 15.62%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1491   +/-\n========================================\n  Coverage          ?   48.1%         \n========================================\n  Files             ?     806         \n  Lines             ?   38929         \n  Branches          ?    5076         \n========================================\n  Hits              ?   18727         \n  Misses            ?   18573         \n  Partials          ?    1629\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../api/restlet/resources/LLCSegmentCommitUpload.java | 0% <0%> (\u00f8) | |\n| ...ler/api/restlet/resources/LLCSegmentCommitEnd.java | 0% <0%> (\u00f8) | |\n| ...r/api/restlet/resources/LLCSegmentCommitStart.java | 0% <0%> (\u00f8) | |\n| .../api/restlet/resources/SegmentCompletionUtils.java | 0% <0%> (\u00f8) | |\n| .../restlet/resources/LLCSegmentStoppedConsuming.java | 0% <0%> (\u00f8) | |\n| ...roller/api/restlet/resources/LLCSegmentCommit.java | 63.33% <100%> (\u00f8) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 32.43% <100%> (\u00f8) | |\n| ...inot/controller/api/ControllerRestApplication.java | 84.41% <100%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 82.53% <66.66%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3de6239...e43d601. Read the comment docs.\n. # Codecov Report\nMerging #1492 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1492      +/-\n==========================================\n+ Coverage   67.92%   67.96%   +0.04%   \n==========================================\n  Files         791      790       -1   \n  Lines       38618    38609       -9   \n  Branches     5037     5036       -1   \n==========================================\n+ Hits        26230    26242      +12   \n+ Misses      10683    10661      -22   \n- Partials     1705     1706       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 65.38% <\u00f8> (-1.89%) | :arrow_down: |\n| ...ommon/request/helper/ControllerRequestBuilder.java | 93.02% <\u00f8> (+0.97%) | :arrow_up: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 82.69% <0%> (-1.93%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0265d95...7dda9de. Read the comment docs.\n. # Codecov Report\nMerging #1493 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1493      +/-\n==========================================\n+ Coverage   67.92%   67.92%   +<.01%   \n==========================================\n  Files         791      790       -1   \n  Lines       38618    38609       -9   \n  Branches     5037     5036       -1   \n==========================================\n- Hits        26230    26226       -4   \n- Misses      10683    10686       +3   \n+ Partials     1705     1697       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommon/request/helper/ControllerRequestBuilder.java | 94.18% <\u00f8> (+2.14%) | :arrow_up: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 65.38% <\u00f8> (-1.89%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.57% <0%> (-3.97%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 55.36% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.16% <0%> (+0.2%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.18% <0%> (+0.67%) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 75.42% <0%> (+1.14%) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 82.69% <0%> (+1.92%) | :arrow_up: |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0265d95...68201e2. Read the comment docs.\n. # Codecov Report\nMerging #1496 into master will decrease coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1496      +/-\n==========================================\n- Coverage   67.98%   67.91%   -0.07%   \n==========================================\n  Files         790      790            \n  Lines       38652    38652            \n  Branches     5039     5039            \n==========================================\n- Hits        26278    26252      -26   \n- Misses      10667    10689      +22   \n- Partials     1707     1711       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.2% <0%> (-1.73%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.28% <0%> (-1.15%) | :arrow_down: |\n| ...lter/predicate/RangePredicateEvaluatorFactory.java | 74.5% <0%> (-0.5%) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 68.04% <0%> (-0.49%) | :arrow_down: |\n| ...n/pinot/routing/HelixExternalViewBasedRouting.java | 44.59% <0%> (-0.27%) | :arrow_down: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f31de2a...71ac66d. Read the comment docs.\n. # Codecov Report\nMerging #1497 into master will decrease coverage by 0.03%.\nThe diff coverage is 23.94%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1497      +/-\n=========================================\n- Coverage   67.93%   67.9%   -0.04%   \n=========================================\n  Files         790     790            \n  Lines       38654   38626      -28   \n  Branches     5039    5028      -11   \n=========================================\n- Hits        26261   26229      -32   \n- Misses      10684   10687       +3   \n- Partials     1709    1710       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.17% <35%> (+0.47%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 70.43% <75%> (+0.76%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 53.21% <0%> (-2.15%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (-1.32%) | :arrow_down: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f1d4ceb...b1341bc. Read the comment docs.\n. # Codecov Report\nMerging #1502 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1502      +/-\n==========================================\n+ Coverage   67.91%   67.94%   +0.03%   \n==========================================\n  Files         789      789            \n  Lines       38599    38599            \n  Branches     5033     5033            \n==========================================\n+ Hits        26214    26226      +12   \n+ Misses      10681    10673       -8   \n+ Partials     1704     1700       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../restlet/resources/PinotTenantRestletResource.java | 48.17% <\u00f8> (\u00f8) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 72.6% <0%> (-2.74%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.04% <0%> (+0.63%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.18% <0%> (+0.67%) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 82.69% <0%> (+0.96%) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f327ffc...69f1555. Read the comment docs.\n. # Codecov Report\nMerging #1505 into master will increase coverage by 8.25%.\nThe diff coverage is 52.32%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1505      +/-\n==========================================\n+ Coverage   59.67%   67.92%   +8.25%   \n==========================================\n  Files         790      792       +2   \n  Lines       38607    38693      +86   \n  Branches     5034     5049      +15   \n==========================================\n+ Hits        23037    26282    +3245   \n+ Misses      13940    10700    -3240   \n- Partials     1630     1711      +81\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.71% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/common/config/ColumnPartitionConfig.java | 72.97% <25%> (-13.24%) | :arrow_down: |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 77.41% <50%> (-6.59%) | :arrow_down: |\n| ...ot/controller/helix/core/util/ZKMetadataUtils.java | 74.28% <53.84%> (-12.08%) | :arrow_down: |\n| ...mon/metadata/segment/SegmentPartitionMetadata.java | 58.33% <58.33%> (\u00f8) | |\n| ...mmon/metadata/segment/ColumnPartitionMetadata.java | 58.82% <58.82%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| .../resources/BasePinotControllerRestletResource.java | 87.75% <0%> (\u00f8) | :arrow_up: |\n| ... and 231 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a5881d9...b438036. Read the comment docs.\n. # Codecov Report\nMerging #1507 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1507      +/-\n==========================================\n- Coverage   67.97%   67.96%   -0.01%   \n==========================================\n  Files         789      789            \n  Lines       38599    38599            \n  Branches     5033     5033            \n==========================================\n- Hits        26238    26235       -3   \n- Misses      10662    10664       +2   \n- Partials     1699     1700       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.71% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 79.61% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 82.69% <0%> (-1.93%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 23d8c6b...0f3ed05. Read the comment docs.\n. # Codecov Report\nMerging #1508 into master will decrease coverage by 0.06%.\nThe diff coverage is 43.58%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1508      +/-\n==========================================\n- Coverage   67.96%   67.89%   -0.07%   \n==========================================\n  Files         789      790       +1   \n  Lines       38599    38607       +8   \n  Branches     5033     5034       +1   \n==========================================\n- Hits        26233    26212      -21   \n- Misses      10659    10690      +31   \n+ Partials     1707     1705       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <\u00f8> (\u00f8) | :arrow_up: |\n| ...time/impl/dictionary/MutableDictionaryFactory.java | 55.55% <\u00f8> (\u00f8) | :arrow_up: |\n| .../core/operator/blocks/RealtimeMultiValueBlock.java | 58.62% <\u00f8> (\u00f8) | :arrow_up: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 68% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/operator/blocks/RealtimeSingleValueBlock.java | 65.62% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/core/realtime/utils/RealtimeDimensionsSerDe.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...lter/predicate/RangePredicateEvaluatorFactory.java | 74.5% <100%> (-0.5%) | :arrow_down: |\n| ...time/impl/datasource/RealtimeColumnDataSource.java | 57.69% <100%> (\u00f8) | :arrow_up: |\n| ...e/impl/dictionary/BaseOnHeapMutableDictionary.java | 95.23% <100%> (+36.7%) | :arrow_up: |\n| ...re/realtime/impl/dictionary/MutableDictionary.java | 27.27% <27.27%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6ae8168...09e3537. Read the comment docs.\n. # Codecov Report\nMerging #1513 into master will decrease coverage by 8.6%.\nThe diff coverage is 53.68%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1513      +/-\n==========================================\n- Coverage   67.89%   59.28%   -8.61%   \n==========================================\n  Files         792      818      +26   \n  Lines       38693    39534     +841   \n  Branches     5049     5182     +133   \n==========================================\n- Hits        26271    23439    -2832   \n- Misses      10711    14418    +3707   \n+ Partials     1711     1677      -34\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 33.96% <33.96%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 33.96% <33.96%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 33.96% <33.96%> (\u00f8) | |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 39.62% <39.62%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.13% <75.13%> (\u00f8) | |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ection/iterator/StringSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 0% <0%> (-100%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 305 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d295634...bc9a56f. Read the comment docs.\n. # Codecov Report\nMerging #1526 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1526      +/-\n==========================================\n- Coverage   67.89%   67.88%   -0.01%   \n==========================================\n  Files         792      792            \n  Lines       38693    38700       +7   \n  Branches     5049     5049            \n==========================================\n+ Hits        26271    26272       +1   \n+ Misses      10711    10709       -2   \n- Partials     1711     1719       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.79% <\u00f8> (-1.39%) | :arrow_down: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...in/pinot/common/messages/SegmentReloadMessage.java | 81.81% <0%> (-9.1%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 76.19% <0%> (-3.58%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 18aa410...711c793. Read the comment docs.\n. # Codecov Report\nMerging #1527 into master will increase coverage by 0.12%.\nThe diff coverage is 54.54%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1527      +/-\n==========================================\n+ Coverage   67.89%   68.02%   +0.12%   \n==========================================\n  Files         792      792            \n  Lines       38693    38657      -36   \n  Branches     5049     5045       -4   \n==========================================\n+ Hits        26271    26296      +25   \n+ Misses      10711    10651      -60   \n+ Partials     1711     1710       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../manager/offline/FileBasedInstanceDataManager.java | 71.76% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/api/restlet/resources/PinotTableSchema.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.24% <0%> (+0.06%) | :arrow_up: |\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...troller/helix/core/minion/ClusterInfoProvider.java | 38.46% <0%> (+9.04%) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 50.51% <100%> (-1.04%) | :arrow_down: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 70.07% <100%> (+0.61%) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.75% <60%> (+3.52%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 72.17% <75%> (\u00f8) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b933bcc...2ff1786. Read the comment docs.\n. # Codecov Report\nMerging #1532 into master will increase coverage by 0.03%.\nThe diff coverage is 56.62%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1532      +/-\n==========================================\n+ Coverage   67.89%   67.93%   +0.03%   \n==========================================\n  Files         792      796       +4   \n  Lines       38693    38775      +82   \n  Branches     5049     5067      +18   \n==========================================\n+ Hits        26271    26340      +69   \n- Misses      10711    10716       +5   \n- Partials     1711     1719       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../broker/pruner/SegmentZKMetadataPrunerService.java | 100% <100%> (\u00f8) | |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 86.33% <100%> (+0.04%) | :arrow_up: |\n| ...broker/pruner/SegmentZKMetadataPrunerProvider.java | 41.66% <41.66%> (\u00f8) | |\n| ...pinot/broker/pruner/PartitionZKMetadataPruner.java | 41.86% <41.86%> (\u00f8) | |\n| ...t/core/data/partition/ModuloPartitionFunction.java | 72.72% <50%> (+6.06%) | :arrow_up: |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 86.79% <60%> (-1.33%) | :arrow_down: |\n| ...edin/pinot/broker/pruner/SegmentPrunerContext.java | 83.33% <83.33%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b933bcc...e3f8cda. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@e4d1ca6). Click here to learn what that means.\nThe diff coverage is 73.52%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1536   +/-\n=========================================\n  Coverage          ?   67.93%         \n=========================================\n  Files             ?      802         \n  Lines             ?    38839         \n  Branches          ?     5065         \n=========================================\n  Hits              ?    26386         \n  Misses            ?    10727         \n  Partials          ?     1726\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 57.85% <\u00f8> (\u00f8) | |\n| ...com/linkedin/pinot/minion/metrics/MinionTimer.java | 0% <0%> (\u00f8) | |\n| .../linkedin/pinot/controller/api/pojos/Instance.java | 45.65% <0%> (\u00f8) | |\n| .../java/com/linkedin/pinot/minion/MinionContext.java | 100% <100%> (\u00f8) | |\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 67.27% <100%> (\u00f8) | |\n| ...inkedin/pinot/minion/metrics/MinionQueryPhase.java | 100% <100%> (\u00f8) | |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 100% <100%> (\u00f8) | |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 100% <100%> (\u00f8) | |\n| ...com/linkedin/pinot/minion/metrics/MinionGauge.java | 11.11% <11.11%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.36% <50%> (\u00f8) | |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e4d1ca6...a6503d8. Read the comment docs.\n. # Codecov Report\nMerging #1538 into master will decrease coverage by 0.06%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1538      +/-\n==========================================\n- Coverage   47.96%   47.89%   -0.07%   \n==========================================\n  Files         796      796            \n  Lines       38775    38779       +4   \n  Branches     5067     5068       +1   \n==========================================\n- Hits        18598    18575      -23   \n- Misses      18554    18598      +44   \n+ Partials     1623     1606      -17\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 58.06% <80%> (+0.76%) | :arrow_up: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 0% <0%> (-75%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 50.92% <0%> (-16.67%) | :arrow_down: |\n| ...aggregation/groupby/utils/ValueToIdMapFactory.java | 44.44% <0%> (-11.12%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 48.9% <0%> (-10.54%) | :arrow_down: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 52.73% <0%> (-8.22%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2635f74...8fcac62. Read the comment docs.\n. # Codecov Report\nMerging #1540 into master will increase coverage by 8.44%.\nThe diff coverage is 74.59%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1540      +/-\n==========================================\n+ Coverage   59.25%   67.69%   +8.44%   \n==========================================\n  Files         810      813       +3   \n  Lines       39019    39138     +119   \n  Branches     5086     5105      +19   \n==========================================\n+ Hits        23119    26494    +3375   \n+ Misses      14253    10909    -3344   \n- Partials     1647     1735      +88\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 81.81% <\u00f8> (\u00f8) | :arrow_up: |\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../helix/core/sharding/RandomAssignmentStrategy.java | 86.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ore/sharding/SegmentAssignmentStrategyFactory.java | 33.33% <100%> (+8.33%) | :arrow_up: |\n| ...harding/ReplicaGroupSegmentAssignmentStrategy.java | 100% <100%> (\u00f8) | |\n| ...x/core/sharding/SegmentAssignmentStrategyEnum.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 64.7% <100%> (+2.2%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 68.5% <33.33%> (+9.37%) | :arrow_up: |\n| ...inot/common/config/ReplicaGroupStrategyConfig.java | 45.83% <45.83%> (\u00f8) | |\n| ...ment/PartitionToReplicaGroupMappingZKMetadata.java | 73.33% <73.33%> (\u00f8) | |\n| ... and 245 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 634cc60...5fcbcf7. Read the comment docs.\n. # Codecov Report\nMerging #1547 into master will decrease coverage by 8.52%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1547      +/-\n==========================================\n- Coverage   67.96%   59.44%   -8.53%   \n==========================================\n  Files         822      822            \n  Lines       39944    40020      +76   \n  Branches     5262     5275      +13   \n==========================================\n- Hits        27148    23789    -3359   \n- Misses      11020    14529    +3509   \n+ Partials     1776     1702      -74\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../controller/helix/ControllerRequestURLBuilder.java | 55.76% <100%> (-14.82%) | :arrow_down: |\n| ...restlet/resources/PinotSegmentRestletResource.java | 10.92% <31.57%> (-20.17%) | :arrow_down: |\n| ...din/pinot/server/api/resources/TablesResource.java | 80.7% <78.57%> (-0.7%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 49.73% <92.85%> (-9.36%) | :arrow_down: |\n| ...n/iterator/StringArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...election/iterator/LongSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ection/iterator/StringSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 247 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3b04092...44d6592. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@f51cef2). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1551   +/-\n=========================================\n  Coverage          ?   67.68%         \n=========================================\n  Files             ?      810         \n  Lines             ?    39017         \n  Branches          ?     5085         \n=========================================\n  Hits              ?    26409         \n  Misses            ?    10888         \n  Partials          ?     1720\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.37% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f51cef2...baf344b. Read the comment docs.\n. # Codecov Report\nMerging #1553 into master will decrease coverage by 8.38%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1553      +/-\n==========================================\n- Coverage   67.62%   59.24%   -8.39%   \n==========================================\n  Files         810      810            \n  Lines       39017    39017            \n  Branches     5085     5085            \n==========================================\n- Hits        26387    23117    -3270   \n- Misses      10908    14253    +3345   \n+ Partials     1722     1647      -75\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ection/iterator/StringSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ection/iterator/DoubleSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 0% <0%> (-100%) | :arrow_down: |\n| ...pinot/minion/exception/TaskCancelledException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | :arrow_down: |\n| ...n/iterator/StringArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...inkedin/pinot/minion/metrics/MinionQueryPhase.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 230 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c6803b0...a474564. Read the comment docs.\n. # Codecov Report\nMerging #1555 into master will increase coverage by 0.25%.\nThe diff coverage is 25%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1555      +/-\n==========================================\n+ Coverage   49.02%   49.27%   +0.25%   \n==========================================\n  Files         818      818            \n  Lines       39538    39574      +36   \n  Branches     5180     5183       +3   \n==========================================\n+ Hits        19383    19501     +118   \n+ Misses      18473    18374      -99   \n- Partials     1682     1699      +17\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ler/api/restlet/resources/LLCSegmentCommitEnd.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../api/restlet/resources/SegmentCompletionUtils.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 57.38% <0%> (+8.48%) | :arrow_up: |\n| .../api/restlet/resources/LLCSegmentCommitUpload.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ava/com/linkedin/pinot/common/utils/FileUtils.java | 37.5% <20%> (-29.17%) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 78.72% <56.25%> (-3.03%) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 32.43% <62.5%> (\u00f8) | :arrow_up: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 58.82% <0%> (-26.48%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 76.92% <0%> (-3.85%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4f574c9...891e417. Read the comment docs.\n. # Codecov Report\nMerging #1556 into master will decrease coverage by 0.06%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1556      +/-\n==========================================\n- Coverage   67.62%   67.56%   -0.07%   \n==========================================\n  Files         810      810            \n  Lines       39017    39019       +2   \n  Branches     5085     5086       +1   \n==========================================\n- Hits        26387    26363      -24   \n- Misses      10908    10926      +18   \n- Partials     1722     1730       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/routing/RoutingTableBuilderFactory.java | 52.63% <66.66%> (-0.15%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.57% <0%> (-3.9%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 51.35% <0%> (-2.71%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-2.6%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c93d9b...b207f73. Read the comment docs.\n. # Codecov Report\nMerging #1558 into master will decrease coverage by 0.2%.\nThe diff coverage is 18.43%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1558      +/-\n==========================================\n- Coverage   68.16%   67.96%   -0.21%   \n==========================================\n  Files         818      819       +1   \n  Lines       39597    39705     +108   \n  Branches     5187     5211      +24   \n==========================================\n- Hits        26990    26984       -6   \n- Misses      10841    10948     +107   \n- Partials     1766     1773       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lder/KafkaLowLevelConsumerRoutingTableBuilder.java | 85.57% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ker/routing/builder/RandomRoutingTableBuilder.java | 9.09% <\u00f8> (\u00f8) | :arrow_up: |\n| ...uting/builder/LargeClusterRoutingTableBuilder.java | 81.81% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ment/PartitionToReplicaGroupMappingZKMetadata.java | 73.33% <\u00f8> (\u00f8) | :arrow_up: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.85% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ing/builder/BalancedRandomRoutingTableBuilder.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 40% <0%> (-0.91%) | :arrow_down: |\n| ...r/routing/builder/AbstractRoutingTableBuilder.java | 92.3% <0%> (-2.43%) | :arrow_down: |\n| ...pinot/broker/pruner/PartitionZKMetadataPruner.java | 40% <0%> (-1.87%) | :arrow_down: |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c98b455...09ae985. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@df7f3fd). Click here to learn what that means.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1562   +/-\n=========================================\n  Coverage          ?   49.41%         \n=========================================\n  Files             ?      813         \n  Lines             ?    39149         \n  Branches          ?     5106         \n=========================================\n  Hits              ?    19344         \n  Misses            ?    18113         \n  Partials          ?     1692\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 48.9% <0%> (\u00f8) | |\n| ...pinot/core/query/pruner/AbstractSegmentPruner.java | 73.07% <55.55%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update df7f3fd...91f272e. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@54d8cd8). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1566   +/-\n=========================================\n  Coverage          ?   68.09%         \n=========================================\n  Files             ?      818         \n  Lines             ?    39542         \n  Branches          ?     5182         \n=========================================\n  Hits              ?    26927         \n  Misses            ?    10854         \n  Partials          ?     1761\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 54d8cd8...f59a56d. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@54d8cd8). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1567   +/-\n=========================================\n  Coverage          ?   59.32%         \n=========================================\n  Files             ?      818         \n  Lines             ?    39542         \n  Branches          ?     5182         \n=========================================\n  Hits              ?    23457         \n  Misses            ?    14405         \n  Partials          ?     1680\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 54d8cd8...586c1b2. Read the comment docs.\n. # Codecov Report\nMerging #1571 into master will increase coverage by 0.03%.\nThe diff coverage is 81.15%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1571      +/-\n==========================================\n+ Coverage   68.09%   68.13%   +0.03%   \n==========================================\n  Files         818      818            \n  Lines       39542    39552      +10   \n  Branches     5182     5186       +4   \n==========================================\n+ Hits        26926    26948      +22   \n+ Misses      10860    10849      -11   \n+ Partials     1756     1755       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 86.08% <80%> (-0.25%) | :arrow_down: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 87.8% <80%> (+0.07%) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.24% <84.61%> (+0.34%) | :arrow_up: |\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 34.78% <0%> (-8.7%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...re/operator/docvalsets/UnSortedSingleValueSet.java | 64.61% <0%> (-4.62%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 09aa411...4c23b9a. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@a6e1312). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1589   +/-\n=========================================\n  Coverage          ?   68.04%         \n=========================================\n  Files             ?      818         \n  Lines             ?    39538         \n  Branches          ?     5180         \n=========================================\n  Hits              ?    26904         \n  Misses            ?    10876         \n  Partials          ?     1758\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaJSONMessageDecoder.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a6e1312...c859cb5. Read the comment docs.\n. # Codecov Report\nMerging #1591 into master will increase coverage by 19.03%.\nThe diff coverage is 73.5%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1591       +/-\n===========================================\n+ Coverage   49.02%   68.06%   +19.03%   \n===========================================\n  Files         818      822        +4   \n  Lines       39538    39941      +403   \n  Branches     5180     5261       +81   \n===========================================\n+ Hits        19383    27184     +7801   \n+ Misses      18473    10986     -7487   \n- Partials     1682     1771       +89\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/core/segment/memory/PinotByteBuffer.java | 69.53% <0%> (+3.9%) | :arrow_up: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 37.73% <0%> (+37.73%) | :arrow_up: |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 39.62% <0%> (+39.62%) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 37.73% <0%> (+37.73%) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 37.73% <0%> (+37.73%) | :arrow_up: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 73.62% <100%> (+73.62%) | :arrow_up: |\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 50% <50%> (\u00f8) | |\n| .../pinot/core/io/writer/impl/OffHeapStringStore.java | 75.9% <75.9%> (\u00f8) | |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 92.77% <92.77%> (\u00f8) | |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-36.37%) | :arrow_down: |\n| ... and 429 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4f574c9...293a68b. Read the comment docs.\n. # Codecov Report\nMerging #1597 into master will decrease coverage by 0.04%.\nThe diff coverage is 63.63%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1597      +/-\n==========================================\n- Coverage   68.17%   68.13%   -0.05%   \n==========================================\n  Files         818      818            \n  Lines       39574    39587      +13   \n  Branches     5183     5183            \n==========================================\n- Hits        26980    26971       -9   \n- Misses      10835    10852      +17   \n- Partials     1759     1764       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 59.25% <100%> (\u00f8) | :arrow_up: |\n| ...ot/core/query/scheduler/QuerySchedulerFactory.java | 31.57% <33.33%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 73.21% <62.16%> (-17.27%) | :arrow_down: |\n| .../pinot/server/request/ScheduledRequestHandler.java | 88.23% <62.5%> (+0.51%) | :arrow_up: |\n| ...pinot/core/query/scheduler/FCFSQueryScheduler.java | 90% <83.33%> (-10%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 68.57% <0%> (-11.43%) | :arrow_down: |\n| ...kedin/pinot/common/query/context/TimerContext.java | 85.71% <0%> (-4.77%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 12d0bcc...979528b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@3036f6f). Click here to learn what that means.\nThe diff coverage is 34.24%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1599   +/-\n=========================================\n  Coverage          ?   48.64%         \n=========================================\n  Files             ?      819         \n  Lines             ?    39710         \n  Branches          ?     5219         \n=========================================\n  Hits              ?    19318         \n  Misses            ?    18711         \n  Partials          ?     1681\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../restlet/resources/LLCSegmentStoppedConsuming.java | 0% <0%> (\u00f8) | |\n| ...ller/api/restlet/resources/LLCExtendBuildTime.java | 0% <0%> (\u00f8) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 30.12% <13.33%> (\u00f8) | |\n| .../api/restlet/resources/SegmentCompletionUtils.java | 37.03% <35.89%> (\u00f8) | |\n| ...ller/api/restlet/resources/LLCSegmentConsumed.java | 75% <75%> (\u00f8) | |\n| ...roller/api/restlet/resources/LLCSegmentCommit.java | 64.44% <85.71%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3036f6f...7117afd. Read the comment docs.\n. # Codecov Report\nMerging #1600 into master will increase coverage by 0.18%.\nThe diff coverage is 87.77%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1600      +/-\n==========================================\n+ Coverage   67.76%   67.95%   +0.18%   \n==========================================\n  Files         829      829            \n  Lines       40250    40317      +67   \n  Branches     5295     5302       +7   \n==========================================\n+ Hits        27275    27397     +122   \n+ Misses      11131    11069      -62   \n- Partials     1844     1851       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.96% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.14% <0%> (-0.75%) | :arrow_down: |\n| ...r/api/restlet/resources/LLCSegmentCommitStart.java | 77.77% <100%> (+77.77%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.33% <100%> (+0.5%) | :arrow_up: |\n| ...ger/config/FileBasedInstanceDataManagerConfig.java | 67.44% <100%> (+0.77%) | :arrow_up: |\n| ...ler/api/restlet/resources/LLCSegmentCommitEnd.java | 77.77% <100%> (+77.77%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <100%> (+0.63%) | :arrow_up: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 86.95% <100%> (+0.59%) | :arrow_up: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 92.35% <100%> (+2.28%) | :arrow_up: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 47.16% <100%> (+1.53%) | :arrow_up: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c7e2fbf...f944e7b. Read the comment docs.\n. # Codecov Report\nMerging #1605 into master will increase coverage by 0.21%.\nThe diff coverage is 73.7%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1605      +/-\n==========================================\n+ Coverage   67.67%   67.88%   +0.21%   \n==========================================\n  Files         825      829       +4   \n  Lines       40128    40244     +116   \n  Branches     5279     5301      +22   \n==========================================\n+ Hits        27155    27321     +166   \n+ Misses      11163    11094      -69   \n- Partials     1810     1829      +19\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/transport/common/SegmentId.java | 43.47% <\u00f8> (+8.69%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.96% <0%> (-6.04%) | :arrow_down: |\n| ...lder/KafkaLowLevelConsumerRoutingTableBuilder.java | 87.14% <100%> (+1.56%) | :arrow_up: |\n| ...ntroller/helix/core/realtime/TableConfigCache.java | 100% <100%> (\u00f8) | |\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 47.36% <38.88%> (-1.47%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.22% <55.55%> (-1.71%) | :arrow_down: |\n| .../builder/KafkaLowLevelRoutingTableBuilderUtil.java | 82.05% <82.05%> (\u00f8) | |\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 84.44% <84.44%> (\u00f8) | |\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 66.66% <86.95%> (+66.66%) | :arrow_up: |\n| ...der/AbstractPartitionAwareRoutingTableBuilder.java | 93.93% <93.93%> (\u00f8) | |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 763fb53...8d7aab9. Read the comment docs.\n. # Codecov Report\nMerging #1606 into master will decrease coverage by 8.71%.\nThe diff coverage is 72%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1606      +/-\n==========================================\n- Coverage   67.98%   59.27%   -8.72%   \n==========================================\n  Files         819      819            \n  Lines       39709    39719      +10   \n  Branches     5219     5221       +2   \n==========================================\n- Hits        26996    23542    -3454   \n- Misses      10961    14494    +3533   \n+ Partials     1752     1683      -69\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 85.74% <100%> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/core/startree/StarTreeDataSorter.java | 78.72% <69.56%> (-2.23%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...election/iterator/LongSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...pinot/minion/exception/TaskCancelledException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...n/iterator/StringArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 244 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dae8d25...3a840b0. Read the comment docs.\n. # Codecov Report\nMerging #1608 into master will decrease coverage by 19.22%.\nThe diff coverage is 53.33%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1608       +/-\n===========================================\n- Coverage   67.98%   48.76%   -19.23%   \n===========================================\n  Files         819      819             \n  Lines       39709    39714        +5   \n  Branches     5219     5220        +1   \n===========================================\n- Hits        26996    19365     -7631   \n- Misses      10961    18662     +7701   \n+ Partials     1752     1687       -65\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.01% <\u00f8> (-3.9%) | :arrow_down: |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 0% <0%> (-39.63%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 0% <0%> (-33.97%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 0% <0%> (-33.97%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 0% <0%> (-33.97%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 48.67% <100%> (-28.46%) | :arrow_down: |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 63.93% <100%> (-31.11%) | :arrow_down: |\n| ...din/pinot/core/segment/memory/PinotDataBuffer.java | 47.61% <25%> (-7.94%) | :arrow_down: |\n| ...edin/pinot/core/util/BaseIndexedPriorityQueue.java | 0% <0%> (-100%) | :arrow_down: |\n| ...din/pinot/pql/parsers/pql2/ast/OptionsAstNode.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 407 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dae8d25...c2974c2. Read the comment docs.\n. # Codecov Report\nMerging #1609 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1609      +/-\n==========================================\n+ Coverage   67.98%   68.01%   +0.02%   \n==========================================\n  Files         819      819            \n  Lines       39709    39715       +6   \n  Branches     5219     5218       -1   \n==========================================\n+ Hits        26996    27011      +15   \n+ Misses      10961    10946      -15   \n- Partials     1752     1758       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.09% <100%> (+0.18%) | :arrow_up: |\n| .../controller/helix/core/SegmentDeletionManager.java | 73.45% <100%> (+1.37%) | :arrow_up: |\n| ...y/selection/comparator/DocIdLongValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 80% <0%> (-10%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <0%> (-3.13%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 82.35% <0%> (-2.95%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.34% <0%> (-2.21%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dae8d25...3a96d38. Read the comment docs.\n. # Codecov Report\nMerging #1616 into master will increase coverage by 8.7%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1616     +/-\n=========================================\n+ Coverage   59.39%   68.09%   +8.7%   \n=========================================\n  Files         822      822           \n  Lines       39941    39944      +3   \n  Branches     5261     5262      +1   \n=========================================\n+ Hits        23721    27200   +3479   \n+ Misses      14527    10982   -3545   \n- Partials     1693     1762     +69\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 74.57% <100%> (+19.21%) | :arrow_up: |\n| .../resources/BasePinotControllerRestletResource.java | 87.75% <0%> (\u00f8) | :arrow_up: |\n| .../controller/helix/core/SegmentDeletionManager.java | 73.45% <0%> (\u00f8) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.82% <0%> (+0.24%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.41% <0%> (+0.63%) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52% <0%> (+0.66%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.56% <0%> (+0.68%) | :arrow_up: |\n| ...ing/builder/GeneratorBasedRoutingTableBuilder.java | 97.95% <0%> (+1.02%) | :arrow_up: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 73.62% <0%> (+1.09%) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.56% <0%> (+1.19%) | :arrow_up: |\n| ... and 243 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 440d36c...01c33bd. Read the comment docs.\n. # Codecov Report\nMerging #1618 into master will decrease coverage by 3.18%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1618      +/-\n=========================================\n- Coverage   48.69%   45.5%   -3.19%   \n=========================================\n  Files         822     822            \n  Lines       40020   40021       +1   \n  Branches     5275    5276       +1   \n=========================================\n- Hits        19486   18210    -1276   \n- Misses      18842   20176    +1334   \n+ Partials     1692    1635      -57\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.33% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.88% <0%> (-1.73%) | :arrow_down: |\n| ...ient/JsonAsyncHttpPinotClientTransportFactory.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ection/iterator/StringSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| .../reader/impl/v1/VarByteChunkSingleValueReader.java | 0% <0%> (-100%) | :arrow_down: |\n| ...election/iterator/LongSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| .../writer/impl/v1/VarByteChunkSingleValueWriter.java | 0% <0%> (-93.11%) | :arrow_down: |\n| ...query/aggregation/groupby/utils/StringToIdMap.java | 0% <0%> (-85.72%) | :arrow_down: |\n| ...e/query/aggregation/groupby/utils/LongToIdMap.java | 0% <0%> (-75%) | :arrow_down: |\n| ...linkedin/pinot/broker/routing/CfgBasedRouting.java | 0% <0%> (-73.34%) | :arrow_down: |\n| ... and 104 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4a7a555...45e588f. Read the comment docs.\n. # Codecov Report\nMerging #1621 into master will increase coverage by 0.11%.\nThe diff coverage is 89.89%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1621      +/-\n==========================================\n+ Coverage   67.96%   68.07%   +0.11%   \n==========================================\n  Files         822      825       +3   \n  Lines       39944    40096     +152   \n  Branches     5262     5276      +14   \n==========================================\n+ Hits        27148    27296     +148   \n+ Misses      11020    11015       -5   \n- Partials     1776     1785       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 77.36% <100%> (+0.11%) | :arrow_up: |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 39.62% <100%> (\u00f8) | :arrow_up: |\n| ...eaderwriter/RealtimeIndexOffHeapMemoryManager.java | 100% <100%> (\u00f8) | |\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 50% <100%> (\u00f8) | :arrow_up: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 92.94% <100%> (+0.17%) | :arrow_up: |\n| .../pinot/core/io/writer/impl/OffHeapStringStore.java | 76.47% <100%> (+0.56%) | :arrow_up: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 37.73% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/core/io/writer/impl/DirectMemoryManager.java | 100% <100%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 37.73% <100%> (\u00f8) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 37.73% <100%> (\u00f8) | :arrow_up: |\n| ... and 39 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3b04092...20a48d2. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1c7df69). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1622   +/-\n=========================================\n  Coverage          ?   48.72%         \n=========================================\n  Files             ?      822         \n  Lines             ?    40020         \n  Branches          ?     5275         \n=========================================\n  Hits              ?    19500         \n  Misses            ?    18814         \n  Partials          ?     1706\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...harding/ReplicaGroupSegmentAssignmentStrategy.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1c7df69...f0ee4d2. Read the comment docs.\n. # Codecov Report\nMerging #1629 into master will increase coverage by 0.01%.\nThe diff coverage is 94.28%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1629      +/-\n==========================================\n+ Coverage   68.13%   68.14%   +0.01%   \n==========================================\n  Files         825      825            \n  Lines       40106    40127      +21   \n  Branches     5278     5278            \n==========================================\n+ Hits        27325    27345      +20   \n- Misses      11000    11013      +13   \n+ Partials     1781     1769      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...egation/function/customobject/MinMaxRangePair.java | 62.06% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 94.52% <100%> (\u00f8) | :arrow_up: |\n| ...ery/aggregation/function/customobject/AvgPair.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/core/common/datatable/ObjectCustomSerDe.java | 91.33% <93.33%> (-2.47%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.93% <0%> (-3.85%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 51.35% <0%> (-2.71%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d3bf5a8...a2ef2c7. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@d3bf5a8). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1631   +/-\n=========================================\n  Coverage          ?   67.71%         \n=========================================\n  Files             ?      825         \n  Lines             ?    40107         \n  Branches          ?     5279         \n=========================================\n  Hits              ?    27159         \n  Misses            ?    11140         \n  Partials          ?     1808\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 40% <\u00f8> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.88% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d3bf5a8...dd0c451. Read the comment docs.\n. # Codecov Report\nMerging #1636 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster    #1636   +/-\n=======================================\n  Coverage   67.79%   67.79%         \n=======================================\n  Files         825      825         \n  Lines       40128    40128         \n  Branches     5279     5279         \n=======================================\n  Hits        27203    27203         \n+ Misses      11122    11116    -6   \n- Partials     1803     1809    +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...inot/common/utils/ControllerTenantNameBuilder.java | 69.44% <0%> (-5.56%) | :arrow_down: |\n| ...ava/com/linkedin/pinot/common/utils/MmapUtils.java | 53.54% <0%> (-5.17%) | :arrow_down: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 60% <0%> (-4%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.68% <0%> (-1.66%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 72.82% <0%> (-1.09%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2b812fd...ebbac53. Read the comment docs.\n. # Codecov Report\nMerging #1638 into master will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1638      +/-\n==========================================\n- Coverage   67.79%   67.75%   -0.04%   \n==========================================\n  Files         825      825            \n  Lines       40128    40128            \n  Branches     5279     5279            \n==========================================\n- Hits        27203    27190      -13   \n- Misses      11122    11134      +12   \n- Partials     1803     1804       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ger/config/FileBasedInstanceDataManagerConfig.java | 66.66% <100%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...ava/com/linkedin/pinot/common/utils/MmapUtils.java | 53.54% <0%> (-5.17%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.68% <0%> (-1.66%) | :arrow_down: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 86.36% <0%> (-1.52%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-1.36%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.94% <0%> (+0.34%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a874f32...e8e0c0a. Read the comment docs.\n. # Codecov Report\nMerging #1639 into master will increase coverage by 0.39%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1639      +/-\n==========================================\n+ Coverage   45.85%   46.24%   +0.39%   \n==========================================\n  Files         825      825            \n  Lines       40128    40128            \n  Branches     5279     5279            \n==========================================\n+ Hits        18400    18557     +157   \n+ Misses      20073    19907     -166   \n- Partials     1655     1664       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...r/dociditerators/RangelessBitmapDocIdIterator.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 53.57% <0%> (-7.15%) | :arrow_down: |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 27.65% <0%> (-5.32%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 88.5% <0%> (-1.4%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 53.79% <0%> (-1.38%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <0%> (-1.11%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 37.93% <0%> (-0.22%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 84.14% <0%> (+0.64%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 53.67% <0%> (+0.79%) | :arrow_up: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e58f95d...a5c64f1. Read the comment docs.\n. # Codecov Report\nMerging #1641 into master will increase coverage by 21.42%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1641       +/-\n===========================================\n+ Coverage   46.21%   67.64%   +21.42%   \n===========================================\n  Files         825      825             \n  Lines       40128    40128             \n  Branches     5279     5279             \n===========================================\n+ Hits        18547    27143     +8596   \n+ Misses      19909    11180     -8729   \n- Partials     1672     1805      +133\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/common/restlet/resources/TablesList.java | 100% <\u00f8> (+100%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-1.73%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <0%> (-1.11%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.54% <0%> (+0.34%) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.6% <0%> (+0.8%) | :arrow_up: |\n| ...core/query/selection/SelectionOperatorService.java | 86.32% <0%> (+0.85%) | :arrow_up: |\n| ... and 426 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b219491...f523ace. Read the comment docs.\n. # Codecov Report\nMerging #1642 into master will increase coverage by 21.53%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1642       +/-\n===========================================\n+ Coverage   46.21%   67.75%   +21.53%   \n===========================================\n  Files         825      825             \n  Lines       40128    40128             \n  Branches     5279     5279             \n===========================================\n+ Hits        18547    27190     +8643   \n+ Misses      19909    11132     -8777   \n- Partials     1672     1806      +134\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.2% <0%> (-3.45%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.6% <0%> (+0.8%) | :arrow_up: |\n| ...core/query/selection/SelectionOperatorService.java | 86.32% <0%> (+0.85%) | :arrow_up: |\n| ...inkedin/pinot/core/startree/StarTreeDataTable.java | 86.84% <0%> (+0.87%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 84.78% <0%> (+1.29%) | :arrow_up: |\n| ... and 426 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b219491...9e1b3a8. Read the comment docs.\n. # Codecov Report\nMerging #1643 into master will decrease coverage by 2.22%.\nThe diff coverage is 4.37%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1643      +/-\n==========================================\n- Coverage   67.94%   65.71%   -2.23%   \n==========================================\n  Files         827      860      +33   \n  Lines       40301    41740    +1439   \n  Branches     5304     5489     +185   \n==========================================\n+ Hits        27382    27431      +49   \n- Misses      11075    12459    +1384   \n- Partials     1844     1850       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 91.66% <\u00f8> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.7% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/controller/validation/StorageQuotaChecker.java | 93.54% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/controller/api/restlet/resources/TableSize.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/resources/PinotSegmentUploadRestletResource.java | 51.29% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/controller/api/resources/LandingPageHandler.java | 0% <0%> (\u00f8) | |\n| ...edin/pinot/controller/api/resources/Constants.java | 0% <0%> (\u00f8) | |\n| ...edin/pinot/controller/api/resources/StateType.java | 0% <0%> (\u00f8) | |\n| ...oller/api/resources/PinotTableIndexingConfigs.java | 0% <0%> (\u00f8) | |\n| ...not/controller/api/resources/PinotTableSchema.java | 0% <0%> (\u00f8) | |\n| ... and 80 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a179204...4f2efef. Read the comment docs.\n. # Codecov Report\nMerging #1645 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1645      +/-\n==========================================\n+ Coverage   67.79%   67.84%   +0.04%   \n==========================================\n  Files         829      829            \n  Lines       40256    40245      -11   \n  Branches     5303     5300       -3   \n==========================================\n+ Hits        27293    27303      +10   \n+ Misses      11126    11104      -22   \n- Partials     1837     1838       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/impl/kafka/AvroRecordToPinotRowGenerator.java | 64.7% <\u00f8> (-4.19%) | :arrow_down: |\n| ...not/pql/parsers/pql2/ast/StringLiteralAstNode.java | 66.66% <0%> (-16.67%) | :arrow_down: |\n| ...inot/pql/parsers/pql2/ast/FunctionCallAstNode.java | 70% <0%> (-13.34%) | :arrow_down: |\n| ...in/pinot/common/response/broker/GroupByResult.java | 88.88% <0%> (-11.12%) | :arrow_down: |\n| .../function/DistinctCountHLLAggregationFunction.java | 35.71% <0%> (-8.04%) | :arrow_down: |\n| ...ion/function/DistinctCountAggregationFunction.java | 34.51% <0%> (-7.97%) | :arrow_down: |\n| ...not/core/plan/maker/BrokerRequestPreProcessor.java | 76.92% <0%> (-7.7%) | :arrow_down: |\n| ...ot/core/query/pruner/SegmentPrunerServiceImpl.java | 68.42% <0%> (-5.27%) | :arrow_down: |\n| ...java/com/linkedin/pinot/core/util/trace/Trace.java | 69.23% <0%> (-5.13%) | :arrow_down: |\n| ...m/linkedin/pinot/core/util/trace/TraceContext.java | 89.01% <0%> (-4.4%) | :arrow_down: |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 093cea3...1e3fa17. Read the comment docs.\n. # Codecov Report\nMerging #1646 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1646      +/-\n==========================================\n+ Coverage   67.72%   67.72%   +<.01%   \n==========================================\n  Files         825      825            \n  Lines       40128    40128            \n  Branches     5279     5279            \n==========================================\n+ Hits        27175    27178       +3   \n- Misses      11144    11146       +2   \n+ Partials     1809     1804       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 51.35% <0%> (-2.71%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.01% <0%> (-2.32%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.24% <0%> (-1.11%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.77% <0%> (-0.8%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.89% <0%> (-0.7%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 77.35% <0%> (-0.58%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (-0.43%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 49792e9...37a5c74. Read the comment docs.\n. # Codecov Report\nMerging #1648 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1648      +/-\n==========================================\n- Coverage   67.72%   67.67%   -0.05%   \n==========================================\n  Files         825      825            \n  Lines       40128    40128            \n  Branches     5279     5279            \n==========================================\n- Hits        27175    27157      -18   \n- Misses      11144    11168      +24   \n+ Partials     1809     1803       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.59% <\u00f8> (-0.22%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 77.04% <0%> (-4.92%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 51.35% <0%> (-2.71%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.58%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.01% <0%> (-2.32%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-2.23%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 49792e9...a73ff6c. Read the comment docs.\n. # Codecov Report\nMerging #1652 into master will increase coverage by 0.18%.\nThe diff coverage is 72.22%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1652      +/-\n=========================================\n+ Coverage   67.72%   67.9%   +0.18%   \n=========================================\n  Files         825     829       +4   \n  Lines       40128   40253     +125   \n  Branches     5279    5303      +24   \n=========================================\n+ Hits        27175   27335     +160   \n+ Misses      11144   11088      -56   \n- Partials     1809    1830      +21\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.58% <60%> (-0.22%) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 75.3% <87.5%> (+1.04%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...ix/EmptySegmentOnlineOfflineStateModelFactory.java | 68.42% <0%> (-10.53%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.96% <0%> (-6.04%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 51.35% <0%> (-2.71%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 71.68% <0%> (-1.77%) | :arrow_down: |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9c3ef29...764ccde. Read the comment docs.\n. # Codecov Report\nMerging #1653 into master will increase coverage by 0.14%.\nThe diff coverage is 76.92%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1653      +/-\n==========================================\n+ Coverage    67.7%   67.85%   +0.14%   \n==========================================\n  Files         829      829            \n  Lines       40244    40241       -3   \n  Branches     5300     5295       -5   \n==========================================\n+ Hits        27249    27305      +56   \n+ Misses      11150    11100      -50   \n+ Partials     1845     1836       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...time/impl/kafka/AvroRecordToPinotRowGenerator.java | 83.87% <83.33%> (+19.16%) | :arrow_up: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 72.82% <0%> (-2.72%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.68% <0%> (-1.66%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 88.02% <0%> (-0.65%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.89% <0%> (+0.2%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.22% <0%> (+0.54%) | :arrow_up: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 69dde01...5a79722. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@6748ebc). Click here to learn what that means.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1657   +/-\n=========================================\n  Coverage          ?   67.94%         \n=========================================\n  Files             ?      829         \n  Lines             ?    40247         \n  Branches          ?     5301         \n=========================================\n  Hits              ?    27345         \n  Misses            ?    11079         \n  Partials          ?     1823\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...or/transform/function/TimeConversionTransform.java | 73.68% <60%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6748ebc...1f25edf. Read the comment docs.\n. # Codecov Report\nMerging #1658 into master will increase coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1658      +/-\n==========================================\n+ Coverage   67.79%   67.87%   +0.07%   \n==========================================\n  Files         829      829            \n  Lines       40256    40255       -1   \n  Branches     5303     5303            \n==========================================\n+ Hits        27293    27324      +31   \n+ Misses      11126    11100      -26   \n+ Partials     1837     1831       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...controller/helix/ControllerRequestBuilderUtil.java | 94.87% <\u00f8> (-0.13%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.28% <0%> (-2.86%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-1.73%) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 74.09% <0%> (-1.21%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 82.4% <0%> (-0.93%) | :arrow_down: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 84.93% <0%> (-0.69%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 70.07% <0%> (\u00f8) | :arrow_up: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 093cea3...296e0bc. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@6748ebc). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1659   +/-\n=========================================\n  Coverage          ?   67.92%         \n=========================================\n  Files             ?      829         \n  Lines             ?    40244         \n  Branches          ?     5301         \n=========================================\n  Hits              ?    27335         \n  Misses            ?    11075         \n  Partials          ?     1834\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/realtime/TableConfigCache.java | 100% <\u00f8> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6748ebc...d07ef75. Read the comment docs.\n. # Codecov Report\nMerging #1660 into master will increase coverage by 0.03%.\nThe diff coverage is 25%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1660      +/-\n==========================================\n+ Coverage   67.79%   67.83%   +0.03%   \n==========================================\n  Files         829      829            \n  Lines       40256    40253       -3   \n  Branches     5303     5296       -7   \n==========================================\n+ Hits        27293    27307      +14   \n+ Misses      11126    11110      -16   \n+ Partials     1837     1836       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/resources/PinotSegmentUploadRestletResource.java | 50.39% <25%> (-0.61%) | :arrow_down: |\n| ...not/pql/parsers/pql2/ast/StringLiteralAstNode.java | 66.66% <0%> (-16.67%) | :arrow_down: |\n| ...inot/pql/parsers/pql2/ast/FunctionCallAstNode.java | 70% <0%> (-13.34%) | :arrow_down: |\n| ...in/pinot/common/response/broker/GroupByResult.java | 88.88% <0%> (-11.12%) | :arrow_down: |\n| .../function/DistinctCountHLLAggregationFunction.java | 35.71% <0%> (-8.04%) | :arrow_down: |\n| ...ion/function/DistinctCountAggregationFunction.java | 34.51% <0%> (-7.97%) | :arrow_down: |\n| ...not/core/plan/maker/BrokerRequestPreProcessor.java | 76.92% <0%> (-7.7%) | :arrow_down: |\n| ...ion/groupby/AggregationGroupByTrimmingService.java | 94% <0%> (-6%) | :arrow_down: |\n| ...ot/core/query/pruner/SegmentPrunerServiceImpl.java | 68.42% <0%> (-5.27%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-5.18%) | :arrow_down: |\n| ... and 49 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 093cea3...842cbf3. Read the comment docs.\n. # Codecov Report\nMerging #1661 into master will increase coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1661      +/-\n==========================================\n+ Coverage   67.79%   67.88%   +0.08%   \n==========================================\n  Files         829      829            \n  Lines       40256    40256            \n  Branches     5303     5303            \n==========================================\n+ Hits        27293    27328      +35   \n+ Misses      11126    11097      -29   \n+ Partials     1837     1831       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.28% <0%> (-2.86%) | :arrow_down: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 51.35% <0%> (-2.71%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-1.73%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 70.07% <0%> (\u00f8) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 85.43% <0%> (+0.64%) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 093cea3...acba0c4. Read the comment docs.\n. # Codecov Report\nMerging #1662 into master will increase coverage by <.01%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1662      +/-\n==========================================\n+ Coverage   67.88%   67.89%   +<.01%   \n==========================================\n  Files         829      829            \n  Lines       40255    40263       +8   \n  Branches     5303     5303            \n==========================================\n+ Hits        27329    27337       +8   \n- Misses      11089    11094       +5   \n+ Partials     1837     1832       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ion/groupby/AggregationGroupByTrimmingService.java | 98% <85.71%> (-2%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-3.45%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.68% <0%> (-1.66%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.24% <0%> (+0.69%) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 82.69% <0%> (+0.96%) | :arrow_up: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 452e3ba...2d8f2b4. Read the comment docs.\n. # Codecov Report\nMerging #1663 into master will decrease coverage by 0.15%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1663      +/-\n==========================================\n- Coverage   67.92%   67.77%   -0.16%   \n==========================================\n  Files         829      829            \n  Lines       40255    40244      -11   \n  Branches     5303     5300       -3   \n==========================================\n- Hits        27344    27275      -69   \n- Misses      11087    11127      +40   \n- Partials     1824     1842      +18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/pql/parsers/pql2/ast/StringLiteralAstNode.java | 66.66% <0%> (-16.67%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...inot/pql/parsers/pql2/ast/FunctionCallAstNode.java | 70% <0%> (-13.34%) | :arrow_down: |\n| ...in/pinot/common/response/broker/GroupByResult.java | 88.88% <0%> (-11.12%) | :arrow_down: |\n| .../function/DistinctCountHLLAggregationFunction.java | 35.71% <0%> (-8.04%) | :arrow_down: |\n| ...ion/function/DistinctCountAggregationFunction.java | 34.51% <0%> (-7.97%) | :arrow_down: |\n| ...not/core/plan/maker/BrokerRequestPreProcessor.java | 76.92% <0%> (-7.7%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/SegmentPrunerServiceImpl.java | 68.42% <0%> (-5.27%) | :arrow_down: |\n| ... and 39 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4827807...f403bbf. Read the comment docs.\n. # Codecov Report\nMerging #1664 into master will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1664      +/-\n==========================================\n+ Coverage   67.77%   67.79%   +0.02%   \n==========================================\n  Files         829      829            \n  Lines       40244    40245       +1   \n  Branches     5300     5300            \n==========================================\n+ Hits        27274    27286      +12   \n+ Misses      11131    11122       -9   \n+ Partials     1839     1837       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nkedin/pinot/core/startree/StarTreeDataSorter.java | 77.89% <0%> (-0.83%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 71.62% <0%> (-5.41%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...core/retention/strategy/TimeRetentionStrategy.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 68.5% <0%> (-1.58%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 62.68% <0%> (-1.5%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.14% <0%> (-1.15%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 88.02% <0%> (-0.65%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c68c42c...af590a8. Read the comment docs.\n. # Codecov Report\nMerging #1665 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1665      +/-\n=========================================\n- Coverage   67.72%   67.7%   -0.02%   \n=========================================\n  Files         829     829            \n  Lines       40249   40249            \n  Branches     5295    5295            \n=========================================\n- Hits        27260   27252       -8   \n- Misses      11148   11151       +3   \n- Partials     1841    1846       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.2% <0%> (-1.73%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.64% <0%> (-1.05%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (\u00f8) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (+1.01%) | :arrow_up: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 92.17% <0%> (+1.11%) | :arrow_up: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bf596a9...9c6ca55. Read the comment docs.\n. # Codecov Report\nMerging #1667 into master will increase coverage by 8.93%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1667      +/-\n=========================================\n+ Coverage   59.06%     68%   +8.93%   \n=========================================\n  Files         829     829            \n  Lines       40320   40323       +3   \n  Branches     5303    5304       +1   \n=========================================\n+ Hits        23817   27423    +3606   \n+ Misses      14749   11052    -3697   \n- Partials     1754    1848      +94\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...aggregation/function/AggregationFunctionUtils.java | 91.3% <100%> (+1.3%) | :arrow_up: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 67.75% <0%> (-0.47%) | :arrow_down: |\n| .../resources/BasePinotControllerRestletResource.java | 87.75% <0%> (\u00f8) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 49.57% <0%> (+0.42%) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52% <0%> (+0.66%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (+0.67%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.94% <0%> (+0.68%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.33% <0%> (+0.71%) | :arrow_up: |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 87.73% <0%> (+0.94%) | :arrow_up: |\n| ... and 248 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8619d40...02644e7. Read the comment docs.\n. # Codecov Report\nMerging #1668 into master will increase coverage by 0.12%.\nThe diff coverage is 76.02%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1668      +/-\n==========================================\n+ Coverage   65.66%   65.79%   +0.12%   \n==========================================\n  Files         868      885      +17   \n  Lines       42136    42593     +457   \n  Branches     5551     5596      +45   \n==========================================\n+ Hits        27669    28023     +354   \n- Misses      12607    12694      +87   \n- Partials     1860     1876      +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 56.86% <\u00f8> (-2.4%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 86.02% <\u00f8> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/operator/MCombineGroupByOperator.java | 76.74% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/core/query/scheduler/QuerySchedulerFactory.java | 25% <0%> (-6.58%) | :arrow_down: |\n| .../pinot/server/api/resources/SchedulerResource.java | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/server/starter/FileBasedServer.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ore/query/scheduler/fcfs/BoundedFCFSScheduler.java | 0% <0%> (\u00f8) | |\n| .../scheduler/tokenbucket/TokenPriorityScheduler.java | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/exception/QueryException.java | 87.5% <100%> (+0.83%) | :arrow_up: |\n| .../scheduler/resources/UnboundedResourceManager.java | 100% <100%> (\u00f8) | |\n| ... and 57 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 46865df...4ee63a7. Read the comment docs.\n. # Codecov Report\nMerging #1669 into master will increase coverage by 8.86%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1669      +/-\n==========================================\n+ Coverage   59.06%   67.93%   +8.86%   \n==========================================\n  Files         829      829            \n  Lines       40320    40332      +12   \n  Branches     5303     5308       +5   \n==========================================\n+ Hits        23817    27401    +3584   \n+ Misses      14749    11083    -3666   \n- Partials     1754     1848      +94\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...r/servlet/PinotBrokerRoutingTableDebugServlet.java | 61.9% <0%> (+61.9%) | :arrow_up: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 94.73% <0%> (-1.32%) | :arrow_down: |\n| .../resources/BasePinotControllerRestletResource.java | 87.75% <0%> (\u00f8) | :arrow_up: |\n| ...aggregation/function/AggregationFunctionUtils.java | 90.62% <0%> (+0.62%) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52% <0%> (+0.66%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (+0.67%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.94% <0%> (+0.68%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.33% <0%> (+0.71%) | :arrow_up: |\n| .../controller/helix/core/SegmentDeletionManager.java | 71.68% <0%> (+0.88%) | :arrow_up: |\n| ... and 248 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8619d40...c8a2e7c. Read the comment docs.\n. # Codecov Report\nMerging #1672 into master will increase coverage by 0.13%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1672      +/-\n=========================================\n+ Coverage   67.87%     68%   +0.13%   \n=========================================\n  Files         829     829            \n  Lines       40325   40324       -1   \n  Branches     5306    5307       +1   \n=========================================\n+ Hits        27369   27421      +52   \n+ Misses      11109   11063      -46   \n+ Partials     1847    1840       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.91% <100%> (-0.05%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-3.96%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (\u00f8) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 73.22% <0%> (\u00f8) | :arrow_up: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2c88c22...4a396cd. Read the comment docs.\n. # Codecov Report\nMerging #1673 into master will increase coverage by 0.06%.\nThe diff coverage is 20%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1673      +/-\n==========================================\n+ Coverage   67.87%   67.93%   +0.06%   \n==========================================\n  Files         829      829            \n  Lines       40325    40338      +13   \n  Branches     5306     5306            \n==========================================\n+ Hits        27369    27405      +36   \n+ Misses      11109    11089      -20   \n+ Partials     1847     1844       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 71.42% <0%> (-1.18%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 82.02% <0%> (+8.41%) | :arrow_up: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 75.36% <26.66%> (-1.69%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 49.25% <0%> (-14.93%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...core/retention/strategy/TimeRetentionStrategy.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.68% <0%> (-1.66%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 88.02% <0%> (-0.65%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2c88c22...ffe04ae. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@5c9344a). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1676   +/-\n=========================================\n  Coverage          ?   67.95%         \n=========================================\n  Files             ?      829         \n  Lines             ?    40337         \n  Branches          ?     5307         \n=========================================\n  Hits              ?    27411         \n  Misses            ?    11085         \n  Partials          ?     1841\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 75.36% <100%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 82.02% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5c9344a...c07e698. Read the comment docs.\n. # Codecov Report\nMerging #1678 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1678      +/-\n==========================================\n+ Coverage   67.95%   67.96%   +<.01%   \n==========================================\n  Files         829      829            \n  Lines       40337    40337            \n  Branches     5307     5307            \n==========================================\n+ Hits        27411    27415       +4   \n+ Misses      11083    11077       -6   \n- Partials     1843     1845       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.09% <0%> (+0.78%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-1.38%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.24% <0%> (+0.69%) | :arrow_up: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 86.76% <0%> (+0.73%) | :arrow_up: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8e07e6b...2c29df4. Read the comment docs.\n. # Codecov Report\nMerging #1681 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1681      +/-\n==========================================\n+ Coverage   67.95%   67.98%   +0.02%   \n==========================================\n  Files         829      829            \n  Lines       40337    40334       -3   \n  Branches     5307     5304       -3   \n==========================================\n+ Hits        27411    27420       +9   \n+ Misses      11083    11068      -15   \n- Partials     1843     1846       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/core/segment/index/readers/StringDictionary.java | 72.97% <100%> (-2.03%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 77.31% <0%> (-2.07%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 80.76% <0%> (-1.93%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-1.38%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8e07e6b...8bf13b7. Read the comment docs.\n. # Codecov Report\nMerging #1684 into master will decrease coverage by 0.01%.\nThe diff coverage is 67.56%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1684      +/-\n==========================================\n- Coverage    67.9%   67.88%   -0.02%   \n==========================================\n  Files         829      830       +1   \n  Lines       40334    40399      +65   \n  Branches     5304     5312       +8   \n==========================================\n+ Hits        27389    27426      +37   \n- Misses      11104    11128      +24   \n- Partials     1841     1845       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.94% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 68.96% <100%> (+1.69%) | :arrow_up: |\n| .../com/linkedin/pinot/common/config/TableConfig.java | 86.27% <33.33%> (-0.8%) | :arrow_down: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 85.13% <60%> (-1.83%) | :arrow_down: |\n| .../segment/index/readers/OnHeapStringDictionary.java | 66.66% <66.66%> (\u00f8) | |\n| ...ore/segment/index/column/ColumnIndexContainer.java | 79.62% <73.33%> (-1.63%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 49.25% <0%> (-14.93%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-2.24%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 466e027...d7e0d7e. Read the comment docs.\n. # Codecov Report\nMerging #1686 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1686      +/-\n==========================================\n+ Coverage   67.88%   67.88%   +<.01%   \n==========================================\n  Files         829      829            \n  Lines       40334    40334            \n  Branches     5304     5304            \n==========================================\n+ Hits        27379    27380       +1   \n- Misses      11110    11113       +3   \n+ Partials     1845     1841       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-2.24%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 95.55% <0%> (+2.22%) | :arrow_up: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 71.42% <0%> (+2.59%) | :arrow_up: |\n| ...ain/java/com/linkedin/pinot/client/Connection.java | 54.05% <0%> (+2.7%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (+2.73%) | :arrow_up: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 72.72% <0%> (+3.03%) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 95.55% <0%> (+4.44%) | :arrow_up: |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb2c301...8f402dc. Read the comment docs.\n. # Codecov Report\nMerging #1690 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1690      +/-\n==========================================\n+ Coverage    67.9%   67.92%   +0.01%   \n==========================================\n  Files         829      829            \n  Lines       40334    40334            \n  Branches     5304     5304            \n==========================================\n+ Hits        27389    27395       +6   \n+ Misses      11104    11090      -14   \n- Partials     1841     1849       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 87.67% <0%> (-10.96%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.35% <0%> (-3.68%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 45.28% <0%> (-1.89%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.54% <0%> (-0.7%) | :arrow_down: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8e8d560...d7726ab. Read the comment docs.\n. # Codecov Report\nMerging #1694 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1694      +/-\n==========================================\n+ Coverage   67.92%   67.92%   +<.01%   \n==========================================\n  Files         830      830            \n  Lines       40399    40399            \n  Branches     5312     5312            \n==========================================\n+ Hits        27439    27442       +3   \n- Misses      11106    11111       +5   \n+ Partials     1854     1846       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 68% <0%> (-4%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (+1.11%) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.44% <0%> (+1.12%) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bd4cb14...c901914. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@7472e64). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1695   +/-\n=========================================\n  Coverage          ?   67.99%         \n=========================================\n  Files             ?      830         \n  Lines             ?    40399         \n  Branches          ?     5312         \n=========================================\n  Hits              ?    27469         \n  Misses            ?    11088         \n  Partials          ?     1842\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7472e64...5330e8e. Read the comment docs.\n. # Codecov Report\nMerging #1697 into master will increase coverage by 0.05%.\nThe diff coverage is 55.55%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1697      +/-\n==========================================\n+ Coverage   67.88%   67.93%   +0.05%   \n==========================================\n  Files         830      830            \n  Lines       40399    40379      -20   \n  Branches     5312     5309       -3   \n==========================================\n+ Hits        27425    27432       +7   \n+ Misses      11125    11098      -27   \n  Partials     1849     1849\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/resources/PinotSegmentUploadRestletResource.java | 51.29% <55.55%> (+0.89%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.31% <0%> (-0.59%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.59% <0%> (+0.34%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (+0.67%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (+1.57%) | :arrow_up: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 21725a9...75976d9. Read the comment docs.\n. # Codecov Report\nMerging #1700 into master will increase coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1700      +/-\n==========================================\n+ Coverage   67.88%   67.97%   +0.08%   \n==========================================\n  Files         830      830            \n  Lines       40399    40399            \n  Branches     5312     5312            \n==========================================\n+ Hits        27425    27460      +35   \n+ Misses      11125    11091      -34   \n+ Partials     1849     1848       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.09% <0%> (+0.19%) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.59% <0%> (+0.34%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <0%> (+0.54%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 21725a9...67c9890. Read the comment docs.\n. # Codecov Report\nMerging #1701 into master will increase coverage by 21.46%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1701       +/-\n===========================================\n+ Coverage   46.42%   67.88%   +21.46%   \n===========================================\n  Files         830      830             \n  Lines       40379    40381        +2   \n  Branches     5309     5311        +2   \n===========================================\n+ Hits        18745    27412     +8667   \n+ Misses      19964    11121     -8843   \n- Partials     1670     1848      +178\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 84.78% <100%> (+84.78%) | :arrow_up: |\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 65.71% <50%> (+65.71%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-2.74%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.28% <0%> (+0.34%) | :arrow_up: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 87.19% <0%> (+0.6%) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.6% <0%> (+0.8%) | :arrow_up: |\n| ... and 422 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9373a4f...4c545df. Read the comment docs.\n. # Codecov Report\nMerging #1705 into master will decrease coverage by <.01%.\nThe diff coverage is 30%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1705      +/-\n==========================================\n- Coverage   67.95%   67.95%   -0.01%   \n==========================================\n  Files         830      830            \n  Lines       40381    40388       +7   \n  Branches     5311     5313       +2   \n==========================================\n+ Hits        27441    27445       +4   \n- Misses      11084    11087       +3   \n  Partials     1856     1856\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 72.15% <100%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <22.22%> (-0.96%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 71.01% <0%> (-4.35%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-3.45%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-2.23%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 79.72% <0%> (-1.85%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.2% <0%> (-1.73%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2671977...2eb8d35. Read the comment docs.\n. # Codecov Report\nMerging #1708 into master will increase coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1708      +/-\n==========================================\n+ Coverage   67.87%   67.94%   +0.06%   \n==========================================\n  Files         830      830            \n  Lines       40388    40388            \n  Branches     5313     5313            \n==========================================\n+ Hits        27415    27440      +25   \n+ Misses      11114    11100      -14   \n+ Partials     1859     1848      -11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.03% <0%> (-2.21%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <0%> (+0.19%) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.94% <0%> (+0.34%) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 92.17% <0%> (+1.11%) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (+1.12%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8cc6b7f...f21772a. Read the comment docs.\n. # Codecov Report\nMerging #1710 into master will increase coverage by 0.07%.\nThe diff coverage is 72.07%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1710      +/-\n==========================================\n+ Coverage   67.94%   68.01%   +0.07%   \n==========================================\n  Files         827      831       +4   \n  Lines       40301    40497     +196   \n  Branches     5304     5331      +27   \n==========================================\n+ Hits        27382    27544     +162   \n- Misses      11075    11103      +28   \n- Partials     1844     1850       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.96% <\u00f8> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 32.14% <0%> (-1.2%) | :arrow_down: |\n| ...pinot/controller/util/TableRetentionValidator.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/core/common/MinionConstants.java | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 59.49% <100%> (\u00f8) | :arrow_up: |\n| ...x/core/minion/generator/TaskGeneratorRegistry.java | 90% <100%> (+1.11%) | :arrow_up: |\n| ...controller/helix/core/minion/PinotTaskManager.java | 76.66% <100%> (+6.49%) | :arrow_up: |\n| .../pinot/core/query/utils/SimpleSegmentMetadata.java | 37.25% <100%> (+1.25%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <100%> (-7.36%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 42 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 542d16b...e4d3fa0. Read the comment docs.\n. # Codecov Report\nMerging #1712 into master will increase coverage by 0.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1712      +/-\n==========================================\n+ Coverage   67.87%   67.99%   +0.11%   \n==========================================\n  Files         830      830            \n  Lines       40388    40388            \n  Branches     5313     5313            \n==========================================\n+ Hits        27415    27461      +46   \n+ Misses      11114    11075      -39   \n+ Partials     1859     1852       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 53.84% <0%> (-5.13%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 56.55% <0%> (-2.07%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.68% <0%> (-1.66%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-1.12%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.24% <0%> (-0.35%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <0%> (+0.19%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <0%> (+0.54%) | :arrow_up: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update be59cbd...25fd766. Read the comment docs.\n. # Codecov Report\nMerging #1716 into master will increase coverage by <.01%.\nThe diff coverage is 58.51%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1716      +/-\n==========================================\n+ Coverage   67.94%   67.95%   +<.01%   \n==========================================\n  Files         830      830            \n  Lines       40388    40325      -63   \n  Branches     5313     5312       -1   \n==========================================\n- Hits        27441    27401      -40   \n+ Misses      11098    11075      -23   \n  Partials     1849     1849\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/operator/blocks/BlockMetadataImpl.java | 68.75% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/operator/docvaliterators/MultiValueIterator.java | 66.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roker/routing/TableConfigRoutingTableSelector.java | 65.71% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/core/query/scheduler/QuerySchedulerFactory.java | 31.57% <\u00f8> (\u00f8) | :arrow_up: |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 46.15% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/server/request/ScheduledRequestHandler.java | 88.23% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/metadata/partition/SegmentPartitionMetadata.java | 58.33% <\u00f8> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <\u00f8> (+0.77%) | :arrow_up: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 72.04% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 143 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fe1982a...b2c1710. Read the comment docs.\n. # Codecov Report\nMerging #1721 into master will increase coverage by 0.08%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1721      +/-\n==========================================\n+ Coverage   67.94%   68.03%   +0.08%   \n==========================================\n  Files         830      827       -3   \n  Lines       40388    40301      -87   \n  Branches     5313     5304       -9   \n==========================================\n- Hits        27441    27417      -24   \n+ Misses      11098    11040      -58   \n+ Partials     1849     1844       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.94% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 71.73% <100%> (-0.31%) | :arrow_down: |\n| ...ker/routing/builder/RandomRoutingTableBuilder.java | 0% <0%> (-9.1%) | :arrow_down: |\n| ...ing/builder/BalancedRandomRoutingTableBuilder.java | 94.11% <0%> (-5.89%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 72.82% <0%> (-2.72%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.68% <0%> (-1.66%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| .../com/linkedin/pinot/common/config/TableConfig.java | 85.29% <0%> (-0.99%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f4b0ba1...11ea859. Read the comment docs.\n. # Codecov Report\nMerging #1727 into master will increase coverage by 0.17%.\nThe diff coverage is 84.78%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1727      +/-\n==========================================\n+ Coverage   67.94%   68.12%   +0.17%   \n==========================================\n  Files         831      834       +3   \n  Lines       40497    40539      +42   \n  Branches     5331     5336       +5   \n==========================================\n+ Hits        27516    27616     +100   \n+ Misses      11133    11072      -61   \n- Partials     1848     1851       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...function/time/converter/JavaTimeUnitConverter.java | 100% <100%> (\u00f8) | |\n| .../function/time/converter/TimeConverterFactory.java | 66.66% <66.66%> (\u00f8) | |\n| ...or/transform/function/TimeConversionTransform.java | 72.22% <66.66%> (-1.47%) | :arrow_down: |\n| ...nction/time/converter/CustomTimeUnitConverter.java | 87.09% <87.09%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-8.89%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-1.73%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 94.73% <0%> (-1.32%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7ab48c8...26fd720. Read the comment docs.\n. # Codecov Report\nMerging #1728 into master will decrease coverage by 0.65%.\nThe diff coverage is 49.68%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1728      +/-\n==========================================\n- Coverage    70.2%   69.55%   -0.66%   \n==========================================\n  Files         813      827      +14   \n  Lines       38923    40128    +1205   \n  Branches     5134     5380     +246   \n==========================================\n+ Hits        27327    27910     +583   \n- Misses       9808    10351     +543   \n- Partials     1788     1867      +79\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/pql/parsers/pql2/ast/PredicateAstNode.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 58.53% <\u00f8> (\u00f8) | :arrow_up: |\n| ...edin/pinot/pql/parsers/pql2/ast/HavingAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...aggregation/function/AggregationFunctionUtils.java | 92.85% <100%> (+1.55%) | :arrow_up: |\n| ...in/pinot/core/query/reduce/ComparisonFunction.java | 100% <100%> (\u00f8) | |\n| ...linkedin/pinot/common/utils/request/QueryTree.java | 100% <100%> (\u00f8) | |\n| ...ers/pql2/ast/PredicateParenthesisGroupAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...not/pql/parsers/pql2/ast/PredicateListAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/common/request/HavingFilterQuery.java | 30.4% <30.4%> (\u00f8) | |\n| ...in/pinot/common/utils/request/HavingQueryTree.java | 36.36% <36.36%> (\u00f8) | |\n| ... and 72 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a948f84...b9617fc. Read the comment docs.\n. # Codecov Report\nMerging #1735 into master will increase coverage by 9.14%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1735      +/-\n==========================================\n+ Coverage   58.88%   68.03%   +9.14%   \n==========================================\n  Files         834      834            \n  Lines       40539    40543       +4   \n  Branches     5336     5336            \n==========================================\n+ Hits        23871    27582    +3711   \n+ Misses      14923    11103    -3820   \n- Partials     1745     1858     +113\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 90.69% <100%> (+90.69%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 38.59% <100%> (+6.52%) | :arrow_up: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 51.28% <0%> (-5.13%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 72.82% <0%> (-2.72%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 79.8% <0%> (\u00f8) | :arrow_up: |\n| .../resources/BasePinotControllerRestletResource.java | 87.75% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 52% <0%> (+0.66%) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (+0.67%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.94% <0%> (+0.68%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.33% <0%> (+0.71%) | :arrow_up: |\n| ... and 252 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 14c37fa...c05d56a. Read the comment docs.\n. # Codecov Report\nMerging #1739 into master will decrease coverage by 2.07%.\nThe diff coverage is 5.25%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1739      +/-\n==========================================\n- Coverage   68.05%   65.98%   -2.08%   \n==========================================\n  Files         834      865      +31   \n  Lines       40543    41924    +1381   \n  Branches     5336     5518     +182   \n==========================================\n+ Hits        27592    27662      +70   \n- Misses      11094    12395    +1301   \n- Partials     1857     1867      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/controller/util/SegmentCompletionUtils.java | 72.22% <\u00f8> (\u00f8) | |\n| .../restlet/resources/LLCSegmentStoppedConsuming.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/controller/api/restlet/resources/TableSize.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/api/restlet/resources/LLCSegmentCommit.java | 66.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/controller/validation/StorageQuotaChecker.java | 93.54% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ller/api/restlet/resources/LLCSegmentConsumed.java | 77.77% <\u00f8> (\u00f8) | :arrow_up: |\n| ...r/api/restlet/resources/LLCSegmentCommitStart.java | 77.77% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ler/api/restlet/resources/LLCSegmentCommitEnd.java | 77.77% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/resources/PinotSegmentUploadRestletResource.java | 51.29% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 97 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 96ca7da...a0e0068. Read the comment docs.\n. # Codecov Report\nMerging #1740 into master will decrease coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1740      +/-\n==========================================\n- Coverage   68.05%   68.01%   -0.05%   \n==========================================\n  Files         834      834            \n  Lines       40543    40539       -4   \n  Branches     5336     5336            \n==========================================\n- Hits        27592    27571      -21   \n- Misses      11094    11104      +10   \n- Partials     1857     1864       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/common/utils/request/FilterQueryTree.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/common/utils/request/RequestUtils.java | 70.29% <100%> (+1.54%) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 71.01% <0%> (-4.35%) | :arrow_down: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 68% <0%> (-4%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-2.23%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 75c10f4...0f16142. Read the comment docs.\n. # Codecov Report\nMerging #1744 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1744      +/-\n==========================================\n+ Coverage   68.02%   68.05%   +0.03%   \n==========================================\n  Files         834      834            \n  Lines       40539    40539            \n  Branches     5336     5336            \n==========================================\n+ Hits        27576    27589      +13   \n+ Misses      11107    11097      -10   \n+ Partials     1856     1853       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pi/restlet/resources/PinotTaskRestletResource.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-2.26%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (-1.58%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <0%> (+0.19%) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.59% <0%> (+0.34%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <0%> (+0.54%) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 87a6751...5de27fe. Read the comment docs.\n. # Codecov Report\nMerging #1745 into master will increase coverage by 0.09%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1745      +/-\n==========================================\n+ Coverage   67.98%   68.08%   +0.09%   \n==========================================\n  Files         834      834            \n  Lines       40539    40539            \n  Branches     5336     5336            \n==========================================\n+ Hits        27562    27601      +39   \n+ Misses      11119    11085      -34   \n+ Partials     1858     1853       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 86.53% <0%> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 51.28% <0%> (-5.13%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.24% <0%> (-1.38%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.94% <0%> (-0.2%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.59% <0%> (+0.34%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.86% <0%> (+0.63%) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.44% <0%> (+1.12%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 76.37% <0%> (+1.57%) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d295ebf...2dec879. Read the comment docs.\n. # Codecov Report\nMerging #1752 into master will increase coverage by 8.9%.\nThe diff coverage is 91.89%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1752     +/-\n=========================================\n+ Coverage   57.06%   65.97%   +8.9%   \n=========================================\n  Files         865      865           \n  Lines       41948    41902     -46   \n  Branches     5520     5517      -3   \n=========================================\n+ Hits        23939    27644   +3705   \n+ Misses      16255    12401   -3854   \n- Partials     1754     1857    +103\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/core/segment/store/SegmentLocalFSDirectory.java | 67.05% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/segment/store/SegmentDirectory.java | 71.42% <\u00f8> (\u00f8) | :arrow_up: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 83.56% <\u00f8> (+6.53%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 38.59% <\u00f8> (+3.5%) | :arrow_up: |\n| .../pinot/core/query/utils/SimpleSegmentMetadata.java | 37.25% <\u00f8> (\u00f8) | :arrow_up: |\n| ...starter/helix/DefaultHelixStarterServerConfig.java | 96.29% <\u00f8> (-0.14%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.07% <100%> (+0.78%) | :arrow_up: |\n| ...kedin/pinot/core/segment/index/loader/Loaders.java | 89.18% <100%> (-0.56%) | :arrow_down: |\n| ...inot/core/segment/store/FilePerIndexDirectory.java | 88.13% <100%> (\u00f8) | :arrow_up: |\n| .../columnminmaxvalue/ColumnMinMaxValueGenerator.java | 80.76% <100%> (-0.72%) | :arrow_down: |\n| ... and 265 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update acb1340...361a6e8. Read the comment docs.\n. # Codecov Report\nMerging #1753 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1753      +/-\n==========================================\n+ Coverage   68.02%   68.03%   +0.01%   \n==========================================\n  Files         834      834            \n  Lines       40539    40538       -1   \n  Branches     5336     5335       -1   \n==========================================\n+ Hits        27578    27582       +4   \n- Misses      11101    11102       +1   \n+ Partials     1860     1854       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gment/index/readers/SortedInvertedIndexReader.java | 76.47% <100%> (-1.31%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 49.25% <0%> (-14.93%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.24% <0%> (-1.38%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <0%> (+0.77%) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (+0.96%) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9c25081...93ef6f4. Read the comment docs.\n. # Codecov Report\nMerging #1758 into master will decrease coverage by 0.12%.\nThe diff coverage is 77.27%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1758      +/-\n==========================================\n- Coverage   68.12%   67.99%   -0.13%   \n==========================================\n  Files         834      834            \n  Lines       40538    40549      +11   \n  Branches     5335     5337       +2   \n==========================================\n- Hits        27616    27573      -43   \n- Misses      11072    11114      +42   \n- Partials     1850     1862      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 75.67% <100%> (+2.94%) | :arrow_up: |\n| .../linkedin/pinot/core/minion/RawIndexConverter.java | 60.97% <58.33%> (-0.36%) | :arrow_down: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 85.41% <0%> (-6.25%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 51.28% <0%> (-5.13%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 70de36e...b61c422. Read the comment docs.\n. # Codecov Report\nMerging #1759 into master will increase coverage by 0.1%.\nThe diff coverage is 61.76%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1759     +/-\n========================================\n+ Coverage    65.9%     66%   +0.1%   \n========================================\n  Files         865     865           \n  Lines       41924   41937     +13   \n  Branches     5518    5518           \n========================================\n+ Hits        27629   27681     +52   \n+ Misses      12433   12401     -32   \n+ Partials     1862    1855      -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <0%> (+0.54%) | :arrow_up: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 69.56% <63.63%> (-2.59%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 71.11% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-1.73%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <0%> (+0.19%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.86% <0%> (+0.63%) | :arrow_up: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 20ed5c7...00965fa. Read the comment docs.\n. # Codecov Report\nMerging #1762 into master will decrease coverage by 0.14%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1762      +/-\n==========================================\n- Coverage      66%   65.86%   -0.15%   \n==========================================\n  Files         865      865            \n  Lines       41941    41941            \n  Branches     5521     5521            \n==========================================\n- Hits        27684    27623      -61   \n- Misses      12398    12450      +52   \n- Partials     1859     1868       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/controller/validation/ValidationManager.java | 73.27% <0%> (-8.3%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/startree/StarTreeIndexNodeOffHeap.java | 70.58% <0%> (-5.89%) | :arrow_down: |\n| ...om/linkedin/pinot/core/startree/StarTreeSerDe.java | 80.62% <0%> (-4.38%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 71.01% <0%> (-4.35%) | :arrow_down: |\n| ...om/linkedin/pinot/core/startree/hll/HllConfig.java | 70.58% <0%> (-2.95%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.13% <0%> (-2.21%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 35e99df...3364c4c. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@6204f63). Click here to learn what that means.\nThe diff coverage is 89.91%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1767   +/-\n=========================================\n  Coverage          ?   65.91%         \n=========================================\n  Files             ?      865         \n  Lines             ?    41941         \n  Branches          ?     5522         \n=========================================\n  Hits              ?    27646         \n  Misses            ?    12428         \n  Partials          ?     1867\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gregation/function/FastHLLAggregationFunction.java | 61.9% <0%> (\u00f8) | |\n| .../function/DistinctCountHLLAggregationFunction.java | 35.39% <0%> (\u00f8) | |\n| ...ion/function/PercentileEstAggregationFunction.java | 71.18% <0%> (\u00f8) | |\n| ...gation/function/PercentileAggregationFunction.java | 69.84% <0%> (\u00f8) | |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 79.24% <0%> (\u00f8) | |\n| ...y/aggregation/function/SumAggregationFunction.java | 100% <100%> (\u00f8) | |\n| ...y/aggregation/function/AvgAggregationFunction.java | 96% <100%> (\u00f8) | |\n| ...n/pinot/core/operator/MCombineGroupByOperator.java | 76.74% <100%> (\u00f8) | |\n| ...y/aggregation/function/MinAggregationFunction.java | 100% <100%> (\u00f8) | |\n| ...y/aggregation/function/MaxAggregationFunction.java | 100% <100%> (\u00f8) | |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6204f63...4387933. Read the comment docs.\n. # Codecov Report\nMerging #1772 into master will increase coverage by 0.01%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1772      +/-\n==========================================\n+ Coverage   65.85%   65.87%   +0.01%   \n==========================================\n  Files         865      865            \n  Lines       41941    41941            \n  Branches     5522     5521       -1   \n==========================================\n+ Hits        27621    27629       +8   \n- Misses      12447    12453       +6   \n+ Partials     1873     1859      -14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 53.33% <60%> (+0.66%) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 73.27% <0%> (-6.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 92% <0%> (-4%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.36% <0%> (-0.78%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 77.4% <0%> (-0.67%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7fa026f...1af85fb. Read the comment docs.\n. # Codecov Report\nMerging #1773 into master will increase coverage by 0.09%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1773      +/-\n==========================================\n+ Coverage   65.85%   65.95%   +0.09%   \n==========================================\n  Files         865      865            \n  Lines       41941    41941            \n  Branches     5522     5522            \n==========================================\n+ Hits        27621    27661      +40   \n+ Misses      12447    12418      -29   \n+ Partials     1873     1862      -11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.85% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.59% <0%> (+0.34%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <0%> (+0.54%) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 82.69% <0%> (+0.96%) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 79.38% <0%> (+1.03%) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (+1.31%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7fa026f...f11b0ea. Read the comment docs.\n. # Codecov Report\nMerging #1774 into master will increase coverage by 0.01%.\nThe diff coverage is 8.82%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1774      +/-\n==========================================\n+ Coverage   65.85%   65.87%   +0.01%   \n==========================================\n  Files         865      866       +1   \n  Lines       41941    41975      +34   \n  Branches     5522     5528       +6   \n==========================================\n+ Hits        27621    27650      +29   \n- Misses      12447    12464      +17   \n+ Partials     1873     1861      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../controller/api/ControllerAdminApiApplication.java | 86% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ler/api/resources/PinotSegmentRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...roller/api/resources/ControllerResponseFilter.java | 20% <20%> (\u00f8) | |\n| ...in/pinot/controller/api/resources/HeaderAdder.java | 6.45% <6.66%> (+0.2%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.36% <0%> (-0.78%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 68dfdaf...bf3abb9. Read the comment docs.\n. # Codecov Report\nMerging #1782 into master will increase coverage by 0.12%.\nThe diff coverage is 81.48%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1782      +/-\n=========================================\n+ Coverage   65.97%   66.1%   +0.12%   \n=========================================\n  Files         885     883       -2   \n  Lines       42739   42689      -50   \n  Branches     5626    5615      -11   \n=========================================\n+ Hits        28199   28219      +20   \n+ Misses      12673   12613      -60   \n+ Partials     1867    1857      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/impl/datasource/RealtimeColumnDataSource.java | 57.69% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/core/operator/docidsets/BitmapDocIdSet.java | 79.41% <100%> (\u00f8) | :arrow_up: |\n| ...gment/index/readers/BitmapInvertedIndexReader.java | 74.46% <60%> (\u00f8) | :arrow_up: |\n| ...gment/index/readers/SortedInvertedIndexReader.java | 76.47% <66.66%> (\u00f8) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.11% <74.35%> (-0.81%) | :arrow_down: |\n| ...mpl/invertedindex/RealtimeInvertedIndexReader.java | 93.75% <93.75%> (\u00f8) | |\n| ...impl/dictionary/StringOnHeapMutableDictionary.java | 84.09% <0%> (-6.82%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ee9a3da...53a9227. Read the comment docs.\n. # Codecov Report\nMerging #1784 into master will decrease coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1784      +/-\n==========================================\n- Coverage   65.84%   65.78%   -0.07%   \n==========================================\n  Files         866      866            \n  Lines       41975    41975            \n  Branches     5528     5528            \n==========================================\n- Hits        27639    27612      -27   \n- Misses      12469    12493      +24   \n- Partials     1867     1870       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.85% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 73.27% <0%> (-6.46%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 80% <0%> (-2.23%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-1.73%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (-1.58%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.24% <0%> (-1.38%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0fe67af...ceba358. Read the comment docs.\n. # Codecov Report\nMerging #1785 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1785      +/-\n==========================================\n+ Coverage    65.8%   65.81%   +0.01%   \n==========================================\n  Files         866      866            \n  Lines       41975    41973       -2   \n  Branches     5528     5528            \n==========================================\n+ Hits        27621    27626       +5   \n+ Misses      12483    12472      -11   \n- Partials     1871     1875       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/data/partition/PartitionFunctionFactory.java | 70% <\u00f8> (-2.73%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...query/aggregation/groupby/utils/DoubleToIdMap.java | 68.75% <0%> (-6.25%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 77.31% <0%> (-2.07%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 80.76% <0%> (-1.93%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (-1.58%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-1.12%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (\u00f8) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (\u00f8) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6cbf94c...988641f. Read the comment docs.\n. # Codecov Report\nMerging #1791 into master will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1791      +/-\n==========================================\n- Coverage   65.84%   65.82%   -0.03%   \n==========================================\n  Files         866      866            \n  Lines       41973    41973            \n  Branches     5528     5528            \n==========================================\n- Hits        27638    27628      -10   \n- Misses      12468    12476       +8   \n- Partials     1867     1869       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ller/api/resources/PinotControllerHealthCheck.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6b25a7c...c00a5dc. Read the comment docs.\n. # Codecov Report\nMerging #1794 into master will decrease coverage by 0.31%.\nThe diff coverage is 94.44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1794      +/-\n==========================================\n- Coverage   65.84%   65.53%   -0.32%   \n==========================================\n  Files         885      885            \n  Lines       42593    42584       -9   \n  Branches     5596     5597       +1   \n==========================================\n- Hits        28047    27909     -138   \n- Misses      12671    12802     +131   \n+ Partials     1875     1873       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 62.75% <94.44%> (-4.13%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-59.43%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 52.53% <0%> (-29.04%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-3.45%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e6f8abc...72e9717. Read the comment docs.\n. # Codecov Report\nMerging #1795 into master will increase coverage by 0.05%.\nThe diff coverage is 81.63%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1795      +/-\n==========================================\n+ Coverage   65.83%   65.89%   +0.05%   \n==========================================\n  Files         866      866            \n  Lines       41973    41983      +10   \n  Branches     5528     5531       +3   \n==========================================\n+ Hits        27634    27663      +29   \n+ Misses      12467    12448      -19   \n  Partials     1872     1872\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 64.43% <81.63%> (+0.7%) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-2.26%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (-1.58%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.24% <0%> (-0.35%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.13% <0%> (+0.19%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f9b406e...dea97b4. Read the comment docs.\n. # Codecov Report\nMerging #1796 into master will increase coverage by 0.11%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1796      +/-\n==========================================\n+ Coverage   65.77%   65.88%   +0.11%   \n==========================================\n  Files         866      866            \n  Lines       41983    41982       -1   \n  Branches     5531     5531            \n==========================================\n+ Hits        27613    27661      +48   \n+ Misses      12497    12449      -48   \n+ Partials     1873     1872       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../reader/impl/v1/VarByteChunkSingleValueReader.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 47.79% <0%> (-5.15%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.59% <0%> (+0.34%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.31% <0%> (+0.54%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.07% <0%> (+0.66%) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (+0.96%) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 999d892...80c3be9. Read the comment docs.\n. # Codecov Report\nMerging #1797 into master will increase coverage by 0.09%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1797      +/-\n==========================================\n+ Coverage   65.82%   65.91%   +0.09%   \n==========================================\n  Files         866      866            \n  Lines       41982    41977       -5   \n  Branches     5531     5530       -1   \n==========================================\n+ Hits        27633    27670      +37   \n+ Misses      12480    12433      -47   \n- Partials     1869     1874       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.48% <80%> (+0.62%) | :arrow_up: |\n| ...inot/common/utils/ControllerTenantNameBuilder.java | 69.44% <0%> (-11.12%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.99% <0%> (-1.77%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 94.73% <0%> (-1.32%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2bdf963...ff94723. Read the comment docs.\n. # Codecov Report\nMerging #1798 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1798      +/-\n=========================================\n+ Coverage   65.77%   65.8%   +0.03%   \n=========================================\n  Files         866     866            \n  Lines       41983   41983            \n  Branches     5531    5531            \n=========================================\n+ Hits        27613   27629      +16   \n+ Misses      12497   12483      -14   \n+ Partials     1873    1871       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 79.75% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/operator/blocks/IntermediateResultsBlock.java | 71.02% <100%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <0%> (-7.36%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.57% <0%> (+0.42%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 78.07% <0%> (+0.66%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ef47c7e...b721b13. Read the comment docs.\n. # Codecov Report\nMerging #1802 into master will decrease coverage by 0.13%.\nThe diff coverage is 2%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1802      +/-\n==========================================\n- Coverage   65.82%   65.68%   -0.14%   \n==========================================\n  Files         866      866            \n  Lines       41982    42009      +27   \n  Branches     5531     5535       +4   \n==========================================\n- Hits        27633    27593      -40   \n- Misses      12480    12542      +62   \n- Partials     1869     1874       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableIndexingConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...oller/api/resources/PinotTableMetadataConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/api/resources/PinotTableSegmentConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ller/api/resources/PinotTenantRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ller/api/resources/PinotSchemaRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...oller/api/resources/PinotTableRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../controller/api/resources/PinotTableInstances.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.45% <100%> (+0.21%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2fcd9bf...85f26f7. Read the comment docs.\n. # Codecov Report\nMerging #1804 into master will decrease coverage by 0.03%.\nThe diff coverage is 74.78%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1804      +/-\n==========================================\n- Coverage   65.88%   65.84%   -0.04%   \n==========================================\n  Files         866      867       +1   \n  Lines       41977    42122     +145   \n  Branches     5530     5547      +17   \n==========================================\n+ Hits        27655    27735      +80   \n- Misses      12459    12520      +61   \n- Partials     1863     1867       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 37.03% <0%> (-0.7%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 37.03% <0%> (-0.7%) | :arrow_down: |\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 48.21% <0%> (-1.79%) | :arrow_down: |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 38.88% <0%> (-0.74%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 37.03% <0%> (-0.7%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 72.82% <100%> (-2.72%) | :arrow_down: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 85.26% <20%> (-7.68%) | :arrow_down: |\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 84.31% <84.31%> (\u00f8) | |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 28.57% <0%> (-19.05%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b43229a...1413739. Read the comment docs.\n. # Codecov Report\nMerging #1807 into master will decrease coverage by 0.1%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1807      +/-\n==========================================\n- Coverage   65.84%   65.73%   -0.11%   \n==========================================\n  Files         866      866            \n  Lines       42004    42010       +6   \n  Branches     5534     5539       +5   \n==========================================\n- Hits        27658    27617      -41   \n- Misses      12477    12526      +49   \n+ Partials     1869     1867       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/controller/api/resources/Constants.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...oller/api/resources/PinotTableRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ller/api/resources/PinotSchemaRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ler/api/resources/PinotSegmentRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 73.27% <0%> (-6.46%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9c2533d...7717c0a. Read the comment docs.\n. # Codecov Report\nMerging #1809 into master will decrease coverage by 0.14%.\nThe diff coverage is 97.64%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1809      +/-\n==========================================\n- Coverage   66.18%   66.04%   -0.15%   \n==========================================\n  Files         885      885            \n  Lines       42716    42739      +23   \n  Branches     5615     5626      +11   \n==========================================\n- Hits        28273    28227      -46   \n- Misses      12565    12648      +83   \n+ Partials     1878     1864      -14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <100%> (\u00f8) | :arrow_up: |\n| .../aggregation/groupby/AggregationGroupByResult.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...upby/NoDictionaryMultiColumnGroupKeyGenerator.java | 90.09% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/operator/MCombineGroupByOperator.java | 76.74% <100%> (\u00f8) | :arrow_up: |\n| ...e/query/aggregation/groupby/GroupKeyGenerator.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 93.54% <100%> (\u00f8) | :arrow_up: |\n| ...tion/groupby/DictionaryBasedGroupKeyGenerator.java | 97.57% <97.57%> (\u00f8) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-59.43%) | :arrow_down: |\n| ...java/com/linkedin/pinot/core/query/utils/Pair.java | 63.63% <0%> (-36.37%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 55.7% <0%> (-25.58%) | :arrow_down: |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2b398a3...6a82dc7. Read the comment docs.\n. # Codecov Report\nMerging #1811 into master will decrease coverage by 0.1%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1811      +/-\n==========================================\n- Coverage   65.84%   65.73%   -0.11%   \n==========================================\n  Files         867      868       +1   \n  Lines       42128    42142      +14   \n  Branches     5552     5551       -1   \n==========================================\n- Hits        27738    27702      -36   \n- Misses      12517    12578      +61   \n+ Partials     1873     1862      -11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...server/starter/helix/HelixInstanceDataManager.java | 78.4% <\u00f8> (+1.83%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 100% <100%> (\u00f8) | |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 64.81% <100%> (+0.37%) | :arrow_up: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 85.33% <72.5%> (+1.77%) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.41% <80%> (+0.07%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.22% <83.33%> (+0.09%) | :arrow_up: |\n| ...r/api/restlet/resources/LLCSegmentCommitStart.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...ller/api/restlet/resources/LLCSegmentConsumed.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...ler/api/restlet/resources/LLCSegmentCommitEnd.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...t/controller/api/restlet/resources/TableViews.java | 1.63% <0%> (-73.78%) | :arrow_down: |\n| ... and 49 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c9923de...7570d57. Read the comment docs.\n. # Codecov Report\nMerging #1812 into master will decrease coverage by 0.31%.\nThe diff coverage is 94.11%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1812      +/-\n==========================================\n- Coverage   65.84%   65.52%   -0.32%   \n==========================================\n  Files         867      885      +18   \n  Lines       42128    42599     +471   \n  Branches     5552     5601      +49   \n==========================================\n+ Hits        27738    27912     +174   \n- Misses      12517    12814     +297   \n  Partials     1873     1873\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/pql/parsers/Pql2AstListener.java | 86.16% <100%> (+0.54%) | :arrow_up: |\n| ...pinot/pql/parsers/pql2/ast/InPredicateAstNode.java | 73.07% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/common/utils/request/FilterQueryTree.java | 96.77% <87.5%> (-3.23%) | :arrow_down: |\n| ...r/api/restlet/resources/LLCSegmentCommitStart.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...ller/api/restlet/resources/LLCSegmentConsumed.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...ler/api/restlet/resources/LLCSegmentCommitEnd.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...t/controller/api/restlet/resources/TableViews.java | 1.63% <0%> (-73.78%) | :arrow_down: |\n| .../api/restlet/resources/LLCSegmentCommitUpload.java | 0% <0%> (-65%) | :arrow_down: |\n| .../resources/BasePinotControllerRestletResource.java | 24.48% <0%> (-63.27%) | :arrow_down: |\n| ...estlet/resources/PinotInstanceRestletResource.java | 0% <0%> (-60.19%) | :arrow_down: |\n| ... and 94 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c9923de...e1023b3. Read the comment docs.\n. # Codecov Report\nMerging #1813 into master will decrease coverage by 0.23%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1813      +/-\n=========================================\n- Coverage   65.84%   65.6%   -0.24%   \n=========================================\n  Files         867     867            \n  Lines       42128   42128            \n  Branches     5552    5552            \n=========================================\n- Hits        27738   27639      -99   \n- Misses      12517   12614      +97   \n- Partials     1873    1875       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 45.58% <\u00f8> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 45.45% <100%> (\u00f8) | :arrow_up: |\n| ...ler/api/restlet/resources/LLCSegmentCommitEnd.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...ller/api/restlet/resources/LLCSegmentConsumed.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...r/api/restlet/resources/LLCSegmentCommitStart.java | 0% <0%> (-77.78%) | :arrow_down: |\n| ...t/controller/api/restlet/resources/TableViews.java | 1.63% <0%> (-73.78%) | :arrow_down: |\n| .../api/restlet/resources/LLCSegmentCommitUpload.java | 0% <0%> (-65%) | :arrow_down: |\n| .../resources/BasePinotControllerRestletResource.java | 24.48% <0%> (-63.27%) | :arrow_down: |\n| ...estlet/resources/PinotInstanceRestletResource.java | 0% <0%> (-60.19%) | :arrow_down: |\n| .../restlet/resources/PinotTenantRestletResource.java | 0% <0%> (-48.18%) | :arrow_down: |\n| ... and 46 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 91a621a...86657c1. Read the comment docs.\n. # Codecov Report\nMerging #1814 into master will increase coverage by 0.03%.\nThe diff coverage is 15.27%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1814      +/-\n==========================================\n+ Coverage   65.69%   65.72%   +0.03%   \n==========================================\n  Files         867      867            \n  Lines       42128    42122       -6   \n  Branches     5552     5552            \n==========================================\n+ Hits        27674    27683       +9   \n+ Misses      12594    12580      -14   \n+ Partials     1860     1859       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...troller/api/resources/PinotTableTenantConfigs.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...oller/api/resources/PinotTableIndexingConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 49.48% <0%> (+1.72%) | :arrow_up: |\n| ...ller/api/resources/PinotSchemaRestletResource.java | 42.85% <0%> (\u00f8) | :arrow_up: |\n| ...not/controller/api/resources/PinotTableSchema.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../controller/api/resources/PinotTableInstances.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...oller/api/resources/PinotTableMetadataConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/controller/api/resources/TableSize.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ller/api/resources/PinotTenantRestletResource.java | 29.36% <0%> (\u00f8) | :arrow_up: |\n| ...ler/api/resources/PinotSegmentRestletResource.java | 27.48% <14.28%> (\u00f8) | :arrow_up: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e924e69...dae9e0c. Read the comment docs.\n. # Codecov Report\nMerging #1817 into master will increase coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1817      +/-\n=========================================\n+ Coverage   65.84%   65.9%   +0.05%   \n=========================================\n  Files         885     885            \n  Lines       42593   42595       +2   \n  Branches     5596    5597       +1   \n=========================================\n+ Hits        28047   28073      +26   \n+ Misses      12671   12646      -25   \n- Partials     1875    1876       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/controller/validation/ValidationManager.java | 81.27% <0%> (-0.29%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.24% <0%> (-1.38%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 083f5b1...590f5d7. Read the comment docs.\n. # Codecov Report\nMerging #1819 into master will decrease coverage by 0.17%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1819      +/-\n==========================================\n- Coverage   65.51%   65.33%   -0.18%   \n==========================================\n  Files         885      885            \n  Lines       42584    42594      +10   \n  Branches     5597     5599       +2   \n==========================================\n- Hits        27898    27829      -69   \n- Misses      12814    12897      +83   \n+ Partials     1872     1868       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/pql/parsers/pql2/ast/InPredicateAstNode.java | 75.86% <100%> (+2.78%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 88.06% <100%> (+0.03%) | :arrow_up: |\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/pql/parsers/Pql2AstListener.java | 85.71% <60%> (+0.09%) | :arrow_up: |\n| ...kedin/pinot/core/common/predicate/InPredicate.java | 66.66% <66.66%> (-8.34%) | :arrow_down: |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ...inkedin/pinot/minion/metrics/MinionQueryPhase.java | 0% <0%> (-100%) | :arrow_down: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 0% <0%> (-100%) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionContext.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9dedc8d...7e3d4d7. Read the comment docs.\n. # Codecov Report\nMerging #1820 into master will increase coverage by 0.47%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1820      +/-\n==========================================\n+ Coverage   65.55%   66.03%   +0.47%   \n==========================================\n  Files         885      885            \n  Lines       42586    42716     +130   \n  Branches     5598     5615      +17   \n==========================================\n+ Hits        27918    28206     +288   \n+ Misses      12796    12631     -165   \n- Partials     1872     1879       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/core/common/predicate/InPredicate.java | 66.66% <0%> (-8.34%) | :arrow_down: |\n| .../core/query/scheduler/MultiLevelPriorityQueue.java | 87.5% <0%> (-7.74%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/impl/dictionary/BaseOnHeapMutableDictionary.java | 90.9% <0%> (-4.33%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 58.62% <0%> (-4.14%) | :arrow_down: |\n| ...in/pinot/common/utils/request/FilterQueryTree.java | 96.77% <0%> (-3.23%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 47.86% <0%> (-2.66%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 62.68% <0%> (-1.5%) | :arrow_down: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4b88645...40d80fd. Read the comment docs.\n. # Codecov Report\nMerging #1822 into master will increase coverage by 21.74%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1822       +/-\n===========================================\n+ Coverage   43.77%   65.52%   +21.74%   \n===========================================\n  Files         885      885             \n  Lines       42609    42609             \n  Branches     5603     5603             \n===========================================\n+ Hits        18654    27921     +9267   \n+ Misses      22337    12820     -9517   \n- Partials     1618     1868      +250\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 49.25% <0%> (-14.93%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.24% <0%> (+0.34%) | :arrow_up: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 87.19% <0%> (+0.6%) | :arrow_up: |\n| ...core/query/selection/SelectionOperatorService.java | 86.32% <0%> (+0.85%) | :arrow_up: |\n| ...inkedin/pinot/core/startree/StarTreeDataTable.java | 86.84% <0%> (+0.87%) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (+1.12%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 88.06% <0%> (+1.29%) | :arrow_up: |\n| .../linkedin/pinot/server/starter/ServerInstance.java | 73.91% <0%> (+1.44%) | :arrow_up: |\n| ... and 438 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 60aa367...73be1c7. Read the comment docs.\n. # Codecov Report\nMerging #1823 into master will increase coverage by 0.18%.\nThe diff coverage is 83.94%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1823      +/-\n==========================================\n+ Coverage   65.73%   65.91%   +0.18%   \n==========================================\n  Files         885      885            \n  Lines       42609    42708      +99   \n  Branches     5603     5611       +8   \n==========================================\n+ Hits        28008    28150     +142   \n+ Misses      12725    12676      -49   \n- Partials     1876     1882       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/realtime/impl/dictionary/MutableDictionary.java | 27.27% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.14% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 38.59% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/impl/dictionary/BaseOnHeapMutableDictionary.java | 90.9% <0%> (-4.33%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <100%> (+44.78%) | :arrow_up: |\n| ...ger/config/FileBasedInstanceDataManagerConfig.java | 68.18% <100%> (+0.73%) | :arrow_up: |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 94.54% <100%> (+55.65%) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75% <100%> (-2.42%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <100%> (+52.05%) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <100%> (+32.05%) | :arrow_up: |\n| ... and 55 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bc44c5b...2a7c736. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@4058fda). Click here to learn what that means.\nThe diff coverage is 95.83%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1824   +/-\n=========================================\n  Coverage          ?   49.37%         \n=========================================\n  Files             ?      815         \n  Lines             ?    38888         \n  Branches          ?     5130         \n=========================================\n  Hits              ?    19200         \n  Misses            ?    18048         \n  Partials          ?     1640\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.11% <100%> (\u00f8) | |\n| ...re/realtime/impl/kafka/PinotKafkaMessagesImpl.java | 100% <100%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 58.66% <100%> (\u00f8) | |\n| ...ealtime/impl/kafka/PinotKafkaMessageAndOffset.java | 100% <100%> (\u00f8) | |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 53.87% <87.5%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 53.15% <91.66%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4058fda...189bdd4. Read the comment docs.\n. # Codecov Report\nMerging #1825 into master will decrease coverage by 0.08%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1825      +/-\n==========================================\n- Coverage   65.73%   65.64%   -0.09%   \n==========================================\n  Files         885      885            \n  Lines       42609    42610       +1   \n  Branches     5603     5603            \n==========================================\n- Hits        28008    27971      -37   \n- Misses      12725    12760      +35   \n- Partials     1876     1879       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 88.1% <100%> (+0.03%) | :arrow_up: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 34.78% <0%> (-4.35%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bc44c5b...54f0d74. Read the comment docs.\n. # Codecov Report\nMerging #1827 into master will decrease coverage by 0.17%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1827      +/-\n==========================================\n- Coverage   66.13%   65.95%   -0.18%   \n==========================================\n  Files         885      885            \n  Lines       42708    42712       +4   \n  Branches     5611     5611            \n==========================================\n- Hits        28243    28171      -72   \n- Misses      12593    12676      +83   \n+ Partials     1872     1865       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 47.86% <0%> (-1.7%) | :arrow_down: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-23.19%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 55.7% <0%> (-10.51%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 58.62% <0%> (-4.14%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0508866...be53151. Read the comment docs.\n. # Codecov Report\nMerging #1828 into master will decrease coverage by 0.19%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1828     +/-\n=========================================\n- Coverage   66.13%   65.93%   -0.2%   \n=========================================\n  Files         885      885           \n  Lines       42708    42716      +8   \n  Branches     5611     5615      +4   \n=========================================\n- Hits        28243    28166     -77   \n- Misses      12593    12670     +77   \n- Partials     1872     1880      +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/query/scheduler/MultiLevelPriorityQueue.java | 87.5% <0%> (-7.74%) | :arrow_down: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-23.19%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 52.05% <0%> (-14.16%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 80% <0%> (-9.1%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0508866...d384693. Read the comment docs.\n. # Codecov Report\nMerging #1830 into master will increase coverage by 0.12%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1830      +/-\n==========================================\n+ Coverage    65.9%   66.02%   +0.12%   \n==========================================\n  Files         885      885            \n  Lines       42712    42712            \n  Branches     5611     5611            \n==========================================\n+ Hits        28149    28201      +52   \n+ Misses      12698    12638      -60   \n- Partials     1865     1873       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 51.28% <0%> (-5.13%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-2.74%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 93.33% <0%> (-2.23%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-1.73%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 962c96a...e2f8fe2. Read the comment docs.\n. # Codecov Report\nMerging #1833 into master will increase coverage by 2.59%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1833      +/-\n==========================================\n+ Coverage   66.18%   68.78%   +2.59%   \n==========================================\n  Files         885      853      -32   \n  Lines       42716    40673    -2043   \n  Branches     5615     5318     -297   \n==========================================\n- Hits        28273    27977     -296   \n+ Misses      12565    10839    -1726   \n+ Partials     1878     1857      -21\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 91.66% <\u00f8> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/controller/api/pojos/Instance.java | 38.18% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ler/api/resources/PinotSegmentRestletResource.java | 27.48% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/server/api/resources/MmapDebugResource.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/controller/util/SegmentCompletionUtils.java | 75% <\u00f8> (+2.77%) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 57.37% <100%> (+0.35%) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.16% <100%> (-5.52%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-59.43%) | :arrow_down: |\n| ...java/com/linkedin/pinot/core/query/utils/Pair.java | 63.63% <0%> (-36.37%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 52.05% <0%> (-29.23%) | :arrow_down: |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 307b669...7c423cc. Read the comment docs.\n. # Codecov Report\nMerging #1834 into master will increase coverage by 0.29%.\nThe diff coverage is 87.93%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1834      +/-\n==========================================\n+ Coverage   69.24%   69.53%   +0.29%   \n==========================================\n  Files         843      825      -18   \n  Lines       39966    39481     -485   \n  Branches     5246     5216      -30   \n==========================================\n- Hits        27673    27454     -219   \n+ Misses      10453    10218     -235   \n+ Partials     1840     1809      -31\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ava/com/linkedin/pinot/core/common/DataSource.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/segment/memory/PinotByteBuffer.java | 69.53% <\u00f8> (\u00f8) | :arrow_up: |\n| ...mpl/invertedindex/RealtimeInvertedIndexReader.java | 96.77% <\u00f8> (+3.02%) | :arrow_up: |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 98.92% <\u00f8> (+3.8%) | :arrow_up: |\n| ...gment/index/readers/BitmapInvertedIndexReader.java | 76.08% <0%> (+1.61%) | :arrow_up: |\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 81.81% <100%> (\u00f8) | :arrow_up: |\n| ...writer/BaseSingleColumnMultiValueReaderWriter.java | 15.78% <100%> (+11.02%) | :arrow_up: |\n| ...inot/core/io/reader/impl/v1/SortedIndexReader.java | 100% <100%> (\u00f8) | |\n| .../pinot/core/operator/blocks/BlockMetadataImpl.java | 100% <100%> (+31.25%) | :arrow_up: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 70.31% <100%> (\u00f8) | :arrow_up: |\n| ... and 48 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 44106be...9193e5f. Read the comment docs.\n. # Codecov Report\nMerging #1835 into master will not change coverage.\nThe diff coverage is n/a.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster    #1835   +/-\n=======================================\n  Coverage   65.97%   65.97%         \n=======================================\n  Files         885      885         \n  Lines       42739    42739         \n  Branches     5626     5626         \n=======================================\n  Hits        28199    28199         \n+ Misses      12673    12668    -5   \n- Partials     1867     1872    +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 85.41% <0%> (-6.25%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...eader/impl/FixedByteSingleValueMultiColReader.java | 79.03% <0%> (-3.23%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 61.19% <0%> (-2.99%) | :arrow_down: |\n| ...din/pinot/core/segment/memory/PinotByteBuffer.java | 67.18% <0%> (-2.35%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 75.26% <0%> (-2.11%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 92fbeee...c9fbd73. Read the comment docs.\n. # Codecov Report\nMerging #1842 into master will increase coverage by 2.95%.\nThe diff coverage is 75.64%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1842      +/-\n==========================================\n+ Coverage   65.99%   68.94%   +2.95%   \n==========================================\n  Files         883      854      -29   \n  Lines       42689    40749    -1940   \n  Branches     5615     5328     -287   \n==========================================\n- Hits        28172    28096      -76   \n+ Misses      12658    10794    -1864   \n  Partials     1859     1859\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 67.93% <100%> (+0.17%) | :arrow_up: |\n| ...inkedin/pinot/common/data/TimeGranularitySpec.java | 76.92% <100%> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 72.22% <72.22%> (\u00f8) | |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 80.43% <80.95%> (+0.06%) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.16% <0%> (-5.52%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 87.89% <0%> (-4.46%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| ... and 60 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac17734...e90f4ac. Read the comment docs.\n. # Codecov Report\nMerging #1847 into master will increase coverage by 0.34%.\nThe diff coverage is 95.25%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1847      +/-\n==========================================\n+ Coverage   68.86%   69.21%   +0.34%   \n==========================================\n  Files         853      841      -12   \n  Lines       40673    39871     -802   \n  Branches     5318     5234      -84   \n==========================================\n- Hits        28008    27595     -413   \n+ Misses      10810    10448     -362   \n+ Partials     1855     1828      -27\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/segment/index/column/ColumnIndexContainer.java | 79.62% <\u00f8> (\u00f8) | :arrow_up: |\n| ...index/converter/SegmentFormatConverterFactory.java | 20% <0%> (-30%) | :arrow_down: |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 61.01% <0%> (\u00f8) | :arrow_up: |\n| ...e/operator/docvaliterators/MultiValueIterator.java | 66.66% <100%> (\u00f8) | :arrow_up: |\n| ...e/io/writer/impl/v1/FixedBitSingleValueWriter.java | 53.33% <100%> (+3.33%) | :arrow_up: |\n| ...re/io/reader/impl/v1/FixedBitMultiValueReader.java | 100% <100%> (+13.69%) | :arrow_up: |\n| ...re/io/writer/impl/v1/FixedBitMultiValueWriter.java | 73.77% <100%> (-10.36%) | :arrow_down: |\n| ...e/io/reader/impl/v1/FixedBitSingleValueReader.java | 100% <100%> (+15.38%) | :arrow_up: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 69.44% <75%> (+0.87%) | :arrow_up: |\n| .../pinot/core/io/reader/impl/FixedByteIntReader.java | 85.71% <83.33%> (\u00f8) | |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d096d7f...a45a46c. Read the comment docs.\n. # Codecov Report\nMerging #1848 into master will increase coverage by <.01%.\nThe diff coverage is 73.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1848      +/-\n==========================================\n+ Coverage   69.33%   69.33%   +<.01%   \n==========================================\n  Files         841      842       +1   \n  Lines       39871    39885      +14   \n  Branches     5234     5235       +1   \n==========================================\n+ Hits        27644    27655      +11   \n- Misses      10396    10397       +1   \n- Partials     1831     1833       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/common/exception/PermanentDownloadException.java | 100% <100%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 52.51% <50%> (+6.92%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 32% <66.66%> (+3.42%) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 63.75% <80%> (+5.13%) | :arrow_up: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.93% <0%> (-13.7%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dc36f55...3a7dc7c. Read the comment docs.\n. # Codecov Report\nMerging #1850 into master will decrease coverage by <.01%.\nThe diff coverage is 14.28%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1850      +/-\n==========================================\n- Coverage   69.01%   69.01%   -0.01%   \n==========================================\n  Files         842      842            \n  Lines       39885    39890       +5   \n  Branches     5235     5236       +1   \n==========================================\n+ Hits        27528    27529       +1   \n- Misses      10529    10538       +9   \n+ Partials     1828     1823       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 84% <14.28%> (-4.34%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-3.64%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75% <0%> (-2.66%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (-0.43%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 65.83% <0%> (-0.28%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 67cf973...d8930c3. Read the comment docs.\n. # Codecov Report\nMerging #1851 into master will decrease coverage by 0.11%.\nThe diff coverage is 91.66%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1851      +/-\n=========================================\n- Coverage   69.51%   69.4%   -0.12%   \n=========================================\n  Files         825     825            \n  Lines       39481   39483       +2   \n  Branches     5216    5215       -1   \n=========================================\n- Hits        27445   27402      -43   \n- Misses      10220   10264      +44   \n- Partials     1816    1817       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/core/io/util/PinotDataBitSet.java | 100% <100%> (+0.86%) | :arrow_up: |\n| ...re/io/reader/impl/v1/FixedBitMultiValueReader.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/io/reader/impl/FixedBitIntReader.java | 90% <66.66%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/io/writer/impl/FixedBitIntWriter.java | 90.9% <66.66%> (\u00f8) | :arrow_up: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f0797bc...5eb99fb. Read the comment docs.\n. # Codecov Report\nMerging #1853 into master will increase coverage by 0.61%.\nThe diff coverage is 77.46%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1853      +/-\n=========================================\n+ Coverage   69.19%   69.8%   +0.61%   \n=========================================\n  Files         825     813      -12   \n  Lines       39483   38877     -606   \n  Branches     5215    5129      -86   \n=========================================\n- Hits        27322   27140     -182   \n+ Misses      10354    9951     -403   \n+ Partials     1807    1786      -21\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 77.36% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/data/readers/RecordReaderUtils.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/data/readers/CSVRecordReader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/core/data/readers/JSONRecordReader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...re/io/writer/impl/v1/FixedBitMultiValueWriter.java | 73.77% <100%> (\u00f8) | :arrow_up: |\n| ...e/io/writer/impl/v1/FixedBitSingleValueWriter.java | 53.33% <100%> (\u00f8) | :arrow_up: |\n| ...e/io/reader/impl/v1/FixedBitSingleValueReader.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...re/realtime/impl/dictionary/MutableDictionary.java | 100% <100%> (+72.72%) | :arrow_up: |\n| ...inot/core/segment/index/readers/IntDictionary.java | 100% <100%> (+20%) | :arrow_up: |\n| ...t/core/segment/index/readers/DoubleDictionary.java | 91.66% <100%> (+41.66%) | :arrow_up: |\n| ... and 42 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4c1fe54...3fe7b13. Read the comment docs.\n. # Codecov Report\nMerging #1855 into master will decrease coverage by <.01%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1855      +/-\n==========================================\n- Coverage   69.19%   69.19%   -0.01%   \n==========================================\n  Files         825      825            \n  Lines       39483    39486       +3   \n  Branches     5215     5215            \n==========================================\n- Hits        27322    27321       -1   \n+ Misses      10354    10353       -1   \n- Partials     1807     1812       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/core/realtime/impl/kafka/KafkaBrokerWrapper.java | 47.05% <0%> (-2.95%) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 58.02% <50%> (-0.07%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 24% <0%> (-8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 44.6% <0%> (-7.92%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4c1fe54...b29b4f6. Read the comment docs.\n. # Codecov Report\nMerging #1856 into master will increase coverage by 20.22%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster   #1856       +/-\n==========================================\n+ Coverage   48.87%   69.1%   +20.22%   \n==========================================\n  Files         834     834             \n  Lines       40583   40922      +339   \n  Branches     5437    5515       +78   \n==========================================\n+ Hits        19834   28278     +8444   \n+ Misses      19030   10745     -8285   \n- Partials     1719    1899      +180\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 40.88% <0%> (+13.06%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 59.33% <0%> (-26.83%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (-2.99%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 88.44% <0%> (+0.5%) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 58.06% <0%> (+0.8%) | :arrow_up: |\n| ...core/query/selection/SelectionOperatorService.java | 86.32% <0%> (+0.85%) | :arrow_up: |\n| ...inkedin/pinot/core/startree/StarTreeDataTable.java | 86.84% <0%> (+0.87%) | :arrow_up: |\n| ... and 424 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2c9e3e0...0dddf49. Read the comment docs.\n. # Codecov Report\nMerging #1858 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1858      +/-\n==========================================\n- Coverage   69.82%   69.78%   -0.05%   \n==========================================\n  Files         813      813            \n  Lines       38880    38880            \n  Branches     5129     5129            \n==========================================\n- Hits        27149    27132      -17   \n- Misses       9948     9958      +10   \n- Partials     1783     1790       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 51.28% <0%> (-5.13%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 78.18% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-2.26%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.59% <0%> (-1.75%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (-1.58%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ebff612...99003fd. Read the comment docs.\n. # Codecov Report\nMerging #1859 into master will increase coverage by <.01%.\nThe diff coverage is 63.63%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1859      +/-\n==========================================\n+ Coverage   70.17%   70.18%   +<.01%   \n==========================================\n  Files         813      813            \n  Lines       38880    38879       -1   \n  Branches     5129     5130       +1   \n==========================================\n+ Hits        27283    27286       +3   \n- Misses       9800     9801       +1   \n+ Partials     1797     1792       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/core/operator/docidsets/SizeBasedDocIdSet.java | 50% <100%> (\u00f8) | :arrow_up: |\n| ...erator/blocks/MatchEntireSegmentDocIdSetBlock.java | 83.33% <100%> (+3.33%) | :arrow_up: |\n| ...perator/dociditerators/SizeBasedDocIdIterator.java | 58.33% <50%> (-5.96%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-5.46%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 61.81% <0%> (-4.55%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 59.73% <0%> (-4.03%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-1.82%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e6addef...c7c881c. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@4058fda). Click here to learn what that means.\nThe diff coverage is 96%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1860   +/-\n=========================================\n  Coverage          ?   70.06%         \n=========================================\n  Files             ?      813         \n  Lines             ?    38980         \n  Branches          ?     5143         \n=========================================\n  Hits              ?    27310         \n  Misses            ?     9875         \n  Partials          ?     1795\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/io/writer/impl/OffHeapStringStore.java | 77.01% <100%> (\u00f8) | |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.73% <100%> (\u00f8) | |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 77.83% <100%> (\u00f8) | |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 98.94% <100%> (\u00f8) | |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.47% <100%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <100%> (\u00f8) | |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 84.61% <88.88%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4058fda...3c39de9. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@4058fda). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1861   +/-\n=========================================\n  Coverage          ?   70.08%         \n=========================================\n  Files             ?      813         \n  Lines             ?    38903         \n  Branches          ?     5132         \n=========================================\n  Hits              ?    27266         \n  Misses            ?     9839         \n  Partials          ?     1798\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4058fda...923cf22. Read the comment docs.\n. # Codecov Report\nMerging #1868 into master will increase coverage by 0.02%.\nThe diff coverage is 89.34%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1868      +/-\n==========================================\n+ Coverage    70.1%   70.13%   +0.02%   \n==========================================\n  Files         813      813            \n  Lines       38923    38906      -17   \n  Branches     5134     5136       +2   \n==========================================\n- Hits        27288    27285       -3   \n+ Misses       9837     9824      -13   \n+ Partials     1798     1797       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...erator/dociditerators/ArrayBasedDocIdIterator.java | 78.26% <80.95%> (-16.19%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <87.8%> (-0.03%) | :arrow_down: |\n| .../core/operator/dociditerators/OrDocIdIterator.java | 92.06% <93.33%> (+7.44%) | :arrow_up: |\n| ...inot/core/operator/filter/EmptyFilterOperator.java | 71.42% <0%> (-9.53%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 55.17% <0%> (-3.45%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| ...in/java/com/linkedin/pinot/common/utils/Pairs.java | 80% <0%> (-2.67%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3f72843...e92e7f8. Read the comment docs.\n. # Codecov Report\nMerging #1869 into master will decrease coverage by 0.06%.\nThe diff coverage is 18.75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1869      +/-\n==========================================\n- Coverage    70.1%   70.04%   -0.07%   \n==========================================\n  Files         813      813            \n  Lines       38923    38911      -12   \n  Branches     5134     5138       +4   \n==========================================\n- Hits        27288    27256      -32   \n- Misses       9837     9856      +19   \n- Partials     1798     1799       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 46.42% <\u00f8> (-0.94%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 38.59% <\u00f8> (\u00f8) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 62.4% <\u00f8> (\u00f8) | :arrow_up: |\n| .../impl/kafka/KafkaLowLevelStreamProviderConfig.java | 33.33% <0%> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.49% <25%> (-0.82%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 51.11% <0%> (-24.45%) | :arrow_down: |\n| ...erator/dociditerators/ArrayBasedDocIdIterator.java | 78.26% <0%> (-16.19%) | :arrow_down: |\n| ...inot/core/operator/filter/EmptyFilterOperator.java | 71.42% <0%> (-9.53%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3f72843...e859515. Read the comment docs.\n. # Codecov Report\nMerging #1871 into master will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1871      +/-\n==========================================\n+ Coverage   70.11%   70.13%   +0.02%   \n==========================================\n  Files         813      813            \n  Lines       38906    38906            \n  Branches     5136     5136            \n==========================================\n+ Hits        27278    27288      +10   \n+ Misses       9841     9824      -17   \n- Partials     1787     1794       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaJSONMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 94.73% <0%> (-1.32%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (\u00f8) | :arrow_up: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7b37bf1...5e5e67c. Read the comment docs.\n. # Codecov Report\nMerging #1872 into master will increase coverage by 0.06%.\nThe diff coverage is 91.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1872      +/-\n==========================================\n+ Coverage   70.06%   70.13%   +0.06%   \n==========================================\n  Files         814      816       +2   \n  Lines       38955    38960       +5   \n  Branches     5147     5148       +1   \n==========================================\n+ Hits        27294    27324      +30   \n+ Misses       9857     9829      -28   \n- Partials     1804     1807       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.53% <100%> (+0.04%) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 62.69% <100%> (+0.29%) | :arrow_up: |\n| ...ealtime/impl/kafka/SimpleConsumerMessageBatch.java | 100% <100%> (\u00f8) | |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 57.5% <100%> (-0.53%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.63% <78.57%> (-0.77%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (-2.99%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-2.78%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d73f478...f0d8773. Read the comment docs.\n. # Codecov Report\nMerging #1873 into master will decrease coverage by 0.01%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1873      +/-\n==========================================\n- Coverage   70.18%   70.17%   -0.02%   \n==========================================\n  Files         813      813            \n  Lines       38906    38918      +12   \n  Branches     5136     5139       +3   \n==========================================\n+ Hits        27308    27310       +2   \n- Misses       9806     9819      +13   \n+ Partials     1792     1789       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.39% <100%> (+0.05%) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.89% <100%> (+0.23%) | :arrow_up: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 77.83% <100%> (\u00f8) | :arrow_up: |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 98.94% <100%> (\u00f8) | :arrow_up: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.73% <100%> (\u00f8) | :arrow_up: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 81.96% <72.72%> (-2.65%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 24% <0%> (-8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 44.6% <0%> (-7.92%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 89055bc...12e076b. Read the comment docs.\n. # Codecov Report\nMerging #1874 into master will decrease coverage by 0.03%.\nThe diff coverage is 95.65%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1874      +/-\n==========================================\n- Coverage    70.1%   70.07%   -0.04%   \n==========================================\n  Files         813      813            \n  Lines       38918    39253     +335   \n  Branches     5139     5210      +71   \n==========================================\n+ Hits        27282    27505     +223   \n- Misses       9841     9937      +96   \n- Partials     1795     1811      +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...data/manager/offline/AbstractTableDataManager.java | 90.99% <100%> (+0.08%) | :arrow_up: |\n| ...pinot/core/io/writer/impl/DirectMemoryManager.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 82.53% <100%> (+0.57%) | :arrow_up: |\n| ...com/linkedin/pinot/common/metrics/ServerGauge.java | 95% <100%> (+0.26%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...eaderwriter/RealtimeIndexOffHeapMemoryManager.java | 96.42% <91.66%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 68.86% <0%> (-7.45%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed7d9a3...b430a30. Read the comment docs.\n. # Codecov Report\nMerging #1875 into master will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1875      +/-\n==========================================\n+ Coverage    70.1%   70.12%   +0.02%   \n==========================================\n  Files         813      813            \n  Lines       38918    38918            \n  Branches     5139     5139            \n==========================================\n+ Hits        27282    27293      +11   \n+ Misses       9841     9830      -11   \n  Partials     1795     1795\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 61.81% <0%> (-4.55%) | :arrow_down: |\n| ...aggregation/function/AggregationFunctionUtils.java | 86.95% <0%> (-4.35%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 76.36% <0%> (-1.82%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed7d9a3...073ccf7. Read the comment docs.\n. # Codecov Report\nMerging #1880 into master will decrease coverage by 0.1%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1880      +/-\n==========================================\n- Coverage   70.17%   70.06%   -0.11%   \n==========================================\n  Files         813      813            \n  Lines       38941    38941            \n  Branches     5144     5144            \n==========================================\n- Hits        27325    27284      -41   \n- Misses       9825     9852      +27   \n- Partials     1791     1805      +14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...eaderwriter/RealtimeIndexOffHeapMemoryManager.java | 96.42% <100%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-10.91%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 61.19% <0%> (-5.98%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7dd3eba...2e41e82. Read the comment docs.\n. # Codecov Report\nMerging #1882 into master will decrease coverage by 0.02%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1882      +/-\n==========================================\n- Coverage   70.17%   70.14%   -0.03%   \n==========================================\n  Files         813      813            \n  Lines       38941    38960      +19   \n  Branches     5144     5148       +4   \n==========================================\n+ Hits        27325    27330       +5   \n- Misses       9825     9829       +4   \n- Partials     1791     1801      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/operator/docvalsets/ConstantBlockValSet.java | 20% <0%> (-2.23%) | :arrow_down: |\n| ...nction/time/converter/CustomTimeUnitConverter.java | 88.88% <100%> (+1.79%) | :arrow_up: |\n| ...or/transform/function/TimeConversionTransform.java | 63.63% <33.33%> (-8.59%) | :arrow_down: |\n| ...function/time/converter/JavaTimeUnitConverter.java | 81.81% <66.66%> (-18.19%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-5.46%) | :arrow_down: |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 51.28% <0%> (-5.13%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 51c3629...fcb3688. Read the comment docs.\n. # Codecov Report\nMerging #1883 into master will increase coverage by 20.28%.\nThe diff coverage is 78.18%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1883       +/-\n===========================================\n+ Coverage   49.26%   69.55%   +20.28%   \n===========================================\n  Files         813      836       +23   \n  Lines       38960    40260     +1300   \n  Branches     5148     5403      +255   \n===========================================\n+ Hits        19193    28001     +8808   \n+ Misses      18131    10379     -7752   \n- Partials     1636     1880      +244\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...harding/ReplicaGroupSegmentAssignmentStrategy.java | 100% <\u00f8> (+100%) | :arrow_up: |\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.28% <0%> (+0.44%) | :arrow_up: |\n| .../BalancedSegmentSizeSegmentAssignmentStrategy.java | 100% <100%> (\u00f8) | |\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 100% <100%> (+18.18%) | :arrow_up: |\n| ...troller/helix/core/sharding/SegmentSizeMetric.java | 100% <100%> (\u00f8) | |\n| ...ot/common/restlet/resources/ServerPerfMetrics.java | 100% <100%> (\u00f8) | |\n| ...ore/sharding/SegmentAssignmentStrategyFactory.java | 40% <100%> (+28.88%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61% <100%> (+23.16%) | :arrow_up: |\n| ...x/core/sharding/SegmentAssignmentStrategyEnum.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 477 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0ba7ded...b73cc06. Read the comment docs.\n. # Codecov Report\nMerging #1884 into master will increase coverage by <.01%.\nThe diff coverage is 72%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1884      +/-\n=========================================\n+ Coverage    70.2%   70.2%   +<.01%   \n=========================================\n  Files         813     813            \n  Lines       38941   38952      +11   \n  Branches     5144    5145       +1   \n=========================================\n+ Hits        27340   27348       +8   \n- Misses       9804    9807       +3   \n  Partials     1797    1797\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../manager/offline/FileBasedInstanceDataManager.java | 67.44% <0%> (-0.8%) | :arrow_down: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 78.57% <100%> (+0.17%) | :arrow_up: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 92.1% <100%> (+0.21%) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.14% <100%> (\u00f8) | :arrow_up: |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 75.75% <71.42%> (-1.83%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 59.73% <0%> (-4.03%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-1.82%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-1.73%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 56ea991...598f4ab. Read the comment docs.\n. # Codecov Report\nMerging #1885 into master will increase coverage by 20.88%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1885       +/-\n===========================================\n+ Coverage   49.26%   70.14%   +20.88%   \n===========================================\n  Files         813      813             \n  Lines       38960    38941       -19   \n  Branches     5148     5144        -4   \n===========================================\n+ Hits        19193    27315     +8122   \n+ Misses      18131     9835     -8296   \n- Partials     1636     1791      +155\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/operator/docvalsets/ConstantBlockValSet.java | 22.22% <\u00f8> (+22.22%) | :arrow_up: |\n| ...nction/time/converter/CustomTimeUnitConverter.java | 87.09% <\u00f8> (+87.09%) | :arrow_up: |\n| ...function/time/converter/JavaTimeUnitConverter.java | 100% <100%> (+100%) | :arrow_up: |\n| ...or/transform/function/TimeConversionTransform.java | 72.22% <50%> (+58.58%) | :arrow_up: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 55.17% <0%> (-27.59%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 85.45% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (-2.99%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ... and 420 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0ba7ded...390cb59. Read the comment docs.\n. # Codecov Report\nMerging #1889 into master will increase coverage by 0.16%.\nThe diff coverage is 48.93%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1889      +/-\n==========================================\n+ Coverage   70.11%   70.28%   +0.16%   \n==========================================\n  Files         813      814       +1   \n  Lines       38941    38939       -2   \n  Branches     5144     5145       +1   \n==========================================\n+ Hits        27303    27367      +64   \n+ Misses       9837     9776      -61   \n+ Partials     1801     1796       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 57.89% <\u00f8> (-0.28%) | :arrow_down: |\n| ...roller/api/resources/PinotTaskRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...controller/api/resources/StringResultResponse.java | 0% <0%> (\u00f8) | |\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 83.05% <100%> (+12.14%) | :arrow_up: |\n| ...inot/controller/api/resources/SuccessResponse.java | 100% <100%> (+28.57%) | :arrow_up: |\n| ...controller/helix/core/minion/PinotTaskManager.java | 76.71% <76.19%> (+0.04%) | :arrow_up: |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | :arrow_down: |\n| ...inot/broker/servlet/PinotClientRequestServlet.java | 48.78% <0%> (-14.64%) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 60% <0%> (-11.43%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8be4c2e...b7d2a0a. Read the comment docs.\n. # Codecov Report\nMerging #1890 into master will decrease coverage by 0.08%.\nThe diff coverage is 40.35%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1890      +/-\n==========================================\n- Coverage   69.58%   69.49%   -0.09%   \n==========================================\n  Files         833      834       +1   \n  Lines       40453    40593     +140   \n  Branches     5421     5440      +19   \n==========================================\n+ Hits        28148    28209      +61   \n- Misses      10427    10495      +68   \n- Partials     1878     1889      +11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 32.14% <\u00f8> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 78.04% <\u00f8> (+4.87%) | :arrow_up: |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 69.04% <0%> (-1.69%) | :arrow_down: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.73% <100%> (+0.16%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 85.65% <16.66%> (-1.69%) | :arrow_down: |\n| ...edin/pinot/core/minion/BackfillDateTimeColumn.java | 39.36% <39.36%> (\u00f8) | |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 79.25% <40%> (-4.62%) | :arrow_down: |\n| ...inkedin/pinot/common/data/TimeGranularitySpec.java | 75% <57.14%> (-1.93%) | :arrow_down: |\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 82.88% <6.25%> (-2.87%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 77.85% <66.66%> (-0.23%) | :arrow_down: |\n| ... and 50 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c7ba3b...72dda39. Read the comment docs.\n. # Codecov Report\nMerging #1891 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1891      +/-\n==========================================\n+ Coverage   70.12%   70.12%   +<.01%   \n==========================================\n  Files         814      814            \n  Lines       38950    38955       +5   \n  Branches     5146     5147       +1   \n==========================================\n+ Hits        27314    27318       +4   \n- Misses       9833     9836       +3   \n+ Partials     1803     1801       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 90.9% <0%> (-1.3%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (\u00f8) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 91c7bf5...a023050. Read the comment docs.\n. # Codecov Report\nMerging #1892 into master will increase coverage by 0.07%.\nThe diff coverage is 93.75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1892      +/-\n==========================================\n+ Coverage   69.48%   69.55%   +0.07%   \n==========================================\n  Files         828      828            \n  Lines       40132    40144      +12   \n  Branches     5386     5390       +4   \n==========================================\n+ Hits        27884    27924      +40   \n+ Misses      10376    10351      -25   \n+ Partials     1872     1869       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...roller/api/resources/PinotTaskRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 87.03% <100%> (+0.49%) | :arrow_up: |\n| ...troller/helix/core/minion/ClusterInfoProvider.java | 71.42% <100%> (\u00f8) | :arrow_up: |\n| ...controller/helix/core/minion/PinotTaskManager.java | 75% <100%> (-0.87%) | :arrow_down: |\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 81.39% <95%> (-1.04%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1762793...6b16cfa. Read the comment docs.\n. # Codecov Report\nMerging #1894 into master will increase coverage by 0.06%.\nThe diff coverage is 94.44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1894      +/-\n==========================================\n+ Coverage   70.06%   70.12%   +0.06%   \n==========================================\n  Files         814      814            \n  Lines       38955    38953       -2   \n  Branches     5147     5148       +1   \n==========================================\n+ Hits        27294    27317      +23   \n+ Misses       9857     9834      -23   \n+ Partials     1804     1802       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...roller/api/resources/PinotTaskRestletResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 57.61% <100%> (-0.28%) | :arrow_down: |\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 82.43% <100%> (-0.62%) | :arrow_down: |\n| ...controller/helix/core/minion/PinotTaskManager.java | 75.86% <92.3%> (-0.86%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-11.12%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (-2.99%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e9e9063...7b0ea47. Read the comment docs.\n. # Codecov Report\nMerging #1902 into master will decrease coverage by <.01%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1902      +/-\n==========================================\n- Coverage   69.48%   69.47%   -0.01%   \n==========================================\n  Files         828      828            \n  Lines       40132    40146      +14   \n  Branches     5386     5385       -1   \n==========================================\n+ Hits        27884    27890       +6   \n- Misses      10376    10391      +15   \n+ Partials     1872     1865       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 66.66% <37.5%> (-2.78%) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 87.34% <60%> (-0.67%) | :arrow_down: |\n| ...or/impl/inv/OffHeapBitmapInvertedIndexCreator.java | 88.97% <90.62%> (-1.11%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-2.26%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-2.13%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1762793...0758d4f. Read the comment docs.\n. # Codecov Report\nMerging #1908 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1908      +/-\n==========================================\n- Coverage   69.53%   69.49%   -0.05%   \n==========================================\n  Files         830      830            \n  Lines       40163    40163            \n  Branches     5390     5390            \n==========================================\n- Hits        27929    27910      -19   \n- Misses      10362    10379      +17   \n- Partials     1872     1874       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 24% <0%> (-8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 44.6% <0%> (-7.92%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 91.11% <0%> (-4.45%) | :arrow_down: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 92% <0%> (-4%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 57.04% <0%> (-2.69%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e13045a...1508f57. Read the comment docs.\n. # Codecov Report\nMerging #1910 into master will decrease coverage by 0.03%.\nThe diff coverage is 90.47%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1910      +/-\n=========================================\n- Coverage   69.53%   69.5%   -0.04%   \n=========================================\n  Files         830     830            \n  Lines       40163   40168       +5   \n  Branches     5390    5391       +1   \n=========================================\n- Hits        27929   27917      -12   \n- Misses      10362   10381      +19   \n+ Partials     1872    1870       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 87.38% <90.47%> (-0.35%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 24% <0%> (-8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 44.6% <0%> (-7.92%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.28% <0%> (-2.82%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 57.04% <0%> (-2.69%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e13045a...2a745c2. Read the comment docs.\n. # Codecov Report\nMerging #1911 into master will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1911      +/-\n==========================================\n- Coverage   69.53%   69.51%   -0.03%   \n==========================================\n  Files         830      830            \n  Lines       40163    40163            \n  Branches     5390     5390            \n==========================================\n- Hits        27929    27919      -10   \n- Misses      10362    10376      +14   \n+ Partials     1872     1868       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 81.39% <\u00f8> (\u00f8) | :arrow_up: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 24% <0%> (-8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 44.6% <0%> (-7.92%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 57.04% <0%> (-2.69%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-2.13%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ae96a77...ddd6476. Read the comment docs.\n. # Codecov Report\nMerging #1915 into master will increase coverage by 0.19%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1915      +/-\n==========================================\n+ Coverage   69.32%   69.51%   +0.19%   \n==========================================\n  Files         830      830            \n  Lines       40163    40173      +10   \n  Branches     5390     5391       +1   \n==========================================\n+ Hits        27844    27928      +84   \n+ Misses      10453    10374      -79   \n- Partials     1866     1871       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 91.66% <100%> (+0.49%) | :arrow_up: |\n| ...in/pinot/core/plan/AggregationGroupByPlanNode.java | 60% <100%> (+2.1%) | :arrow_up: |\n| ...ore/operator/query/AggregationGroupByOperator.java | 88.46% <100%> (+0.46%) | :arrow_up: |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 93.61% <100%> (+0.06%) | :arrow_up: |\n| ...tion/groupby/DictionaryBasedGroupKeyGenerator.java | 97.57% <100%> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 92% <0%> (-4%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 651899f...ef3702a. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@7955963). Click here to learn what that means.\nThe diff coverage is 62.85%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1919   +/-\n=========================================\n  Coverage          ?   69.68%         \n=========================================\n  Files             ?      834         \n  Lines             ?    40502         \n  Branches          ?     5425         \n=========================================\n  Hits              ?    28224         \n  Misses            ?    10401         \n  Partials          ?     1877\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommon/segment/fetcher/LocalFileSegmentFetcher.java | 50% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.16% <100%> (\u00f8) | |\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 94.91% <100%> (\u00f8) | |\n| ...not/common/segment/fetcher/HdfsSegmentFetcher.java | 35.84% <35.84%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.66% <60%> (\u00f8) | |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 84.21% <78.57%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7955963...21b6c00. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@7955963). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #1920   +/-\n========================================\n  Coverage          ?   69.5%         \n========================================\n  Files             ?     830         \n  Lines             ?   40167         \n  Branches          ?    5391         \n========================================\n  Hits              ?   27920         \n  Misses            ?   10382         \n  Partials          ?    1865\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...tion/groupby/DictionaryBasedGroupKeyGenerator.java | 97.56% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7955963...7fb1b19. Read the comment docs.\n. # Codecov Report\nMerging #1921 into master will decrease coverage by 0.06%.\nThe diff coverage is 70.45%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1921      +/-\n==========================================\n- Coverage   69.58%   69.52%   -0.07%   \n==========================================\n  Files         830      830            \n  Lines       40172    40169       -3   \n  Branches     5391     5394       +3   \n==========================================\n- Hits        27955    27926      -29   \n- Misses      10348    10370      +22   \n- Partials     1869     1873       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/operator/MCombineGroupByOperator.java | 75.55% <60.71%> (-1.19%) | :arrow_down: |\n| .../com/linkedin/pinot/core/plan/CombinePlanNode.java | 73.8% <87.5%> (-3.75%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-19.36%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-12.73%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 52.23% <0%> (-11.95%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-5.18%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0576447...1f4c60c. Read the comment docs.\n. # Codecov Report\nMerging #1923 into master will decrease coverage by <.01%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1923      +/-\n=========================================\n- Coverage    69.5%   69.5%   -0.01%   \n=========================================\n  Files         830     830            \n  Lines       40169   40225      +56   \n  Branches     5394    5394            \n=========================================\n+ Hits        27920   27957      +37   \n- Misses      10376   10396      +20   \n+ Partials     1873    1872       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gregation/function/AggregationFunctionFactory.java | 75.91% <50%> (-17.92%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (-2.99%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-2.71%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 87.23% <0%> (-2.13%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 76.28% <0%> (-2.07%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 349cbd4...29c8d03. Read the comment docs.\n. # Codecov Report\nMerging #1925 into master will decrease coverage by 20.52%.\nThe diff coverage is 70.27%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1925       +/-\n===========================================\n- Coverage   69.58%   49.06%   -20.53%   \n===========================================\n  Files         833      833             \n  Lines       40453    40430       -23   \n  Branches     5421     5418        -3   \n===========================================\n- Hits        28148    19835     -8313   \n- Misses      10427    18883     +8456   \n+ Partials     1878     1712      -166\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.2% <0%> (-2.39%) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 52.41% <100%> (-17.22%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.11% <100%> (-1.59%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 58.15% <62.5%> (-17.38%) | :arrow_down: |\n| ...ot/common/metadata/stream/KafkaStreamMetadata.java | 47.91% <66.66%> (-15.42%) | :arrow_down: |\n| ...realtime/impl/kafka/PinotKafkaConsumerFactory.java | 71.42% <71.42%> (\u00f8) | |\n| .../transport/common/ReplicaSelectionGranularity.java | 0% <0%> (-100%) | :arrow_down: |\n| ...aggregation/function/MaxMVAggregationFunction.java | 0% <0%> (-100%) | :arrow_down: |\n| ...din/pinot/pql/parsers/pql2/ast/OptionsAstNode.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 438 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b037018...a207857. Read the comment docs.\n. # Codecov Report\nMerging #1926 into master will increase coverage by 10.46%.\nThe diff coverage is 90.06%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1926       +/-\n===========================================\n+ Coverage   59.11%   69.57%   +10.46%   \n===========================================\n  Files         830      833        +3   \n  Lines       40225    40359      +134   \n  Branches     5394     5402        +8   \n===========================================\n+ Hits        23777    28081     +4304   \n+ Misses      14721    10405     -4316   \n- Partials     1727     1873      +146\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/operator/transform/TransformUtils.java | 50% <\u00f8> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 73.17% <100%> (+0.94%) | :arrow_up: |\n| ...or/transform/DateTimeConversionTransformUtils.java | 79.54% <79.54%> (\u00f8) | |\n| ...ransform/function/DateTimeConversionTransform.java | 85% <85%> (\u00f8) | |\n| ...inot/common/utils/time/DateTimeFieldSpecUtils.java | 96.38% <96.38%> (\u00f8) | |\n| .../linkedin/pinot/transport/common/SegmentIdSet.java | 51.28% <0%> (-5.13%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.28% <0%> (-2.82%) | :arrow_down: |\n| ... and 271 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fc762fb...b992815. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@47193f3). Click here to learn what that means.\nThe diff coverage is 64.7%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1928   +/-\n=========================================\n  Coverage          ?   69.51%         \n=========================================\n  Files             ?      830         \n  Lines             ?    40310         \n  Branches          ?     5412         \n=========================================\n  Hits              ?    28023         \n  Misses            ?    10423         \n  Partials          ?     1864\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 43.04% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.92% <68.75%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 47193f3...df2a586. Read the comment docs.\n. # Codecov Report\nMerging #1930 into master will decrease coverage by 0.01%.\nThe diff coverage is 64.83%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1930      +/-\n==========================================\n- Coverage   69.58%   69.56%   -0.02%   \n==========================================\n  Files         833      832       -1   \n  Lines       40453    40412      -41   \n  Branches     5421     5417       -4   \n==========================================\n- Hits        28148    28114      -34   \n  Misses      10427    10427            \n+ Partials     1878     1871       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/broker/api/resources/PinotBrokerHealthCheck.java | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 87.09% <100%> (-0.3%) | :arrow_down: |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 27.77% <27.77%> (\u00f8) | |\n| ...n/pinot/broker/api/resources/PinotBrokerDebug.java | 55% <55%> (\u00f8) | |\n| ...pinot/broker/broker/BrokerAdminApiApplication.java | 90.9% <90.9%> (\u00f8) | |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...linkedin/pinot/broker/broker/BrokerClientConf.java | 33.33% <0%> (-16.67%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 24% <0%> (-8%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 43.97% <0%> (-7.81%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b037018...8af45bd. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b2f4448). Click here to learn what that means.\nThe diff coverage is 69.56%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1933   +/-\n=========================================\n  Coverage          ?   69.52%         \n=========================================\n  Files             ?      830         \n  Lines             ?    40230         \n  Branches          ?     5395         \n=========================================\n  Hits              ?    27969         \n  Misses            ?    10395         \n  Partials          ?     1866\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 65.45% <0%> (\u00f8) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.33% <100%> (\u00f8) | |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 49.74% <100%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 43.97% <33.33%> (\u00f8) | |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 58.06% <75%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b2f4448...623b8cf. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b2f4448). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #1935   +/-\n=========================================\n  Coverage          ?   69.49%         \n=========================================\n  Files             ?      830         \n  Lines             ?    40229         \n  Branches          ?     5394         \n=========================================\n  Hits              ?    27957         \n  Misses            ?    10403         \n  Partials          ?     1869\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 82.44% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b2f4448...e99f95e. Read the comment docs.\n. # Codecov Report\nMerging #1939 into master will decrease coverage by 0.18%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1939      +/-\n==========================================\n- Coverage   69.55%   69.37%   -0.19%   \n==========================================\n  Files         833      834       +1   \n  Lines       40430    41279     +849   \n  Branches     5418     5581     +163   \n==========================================\n+ Hits        28123    28639     +516   \n- Misses      10433    10741     +308   \n- Partials     1874     1899      +25\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/server/request/ScheduledRequestHandler.java | 85.71% <100%> (-2.53%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.42% <57.14%> (-0.69%) | :arrow_down: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 80.43% <69.23%> (+3.51%) | :arrow_up: |\n| ...inkedin/pinot/common/query/ServerQueryRequest.java | 94.11% <93.33%> (+7.75%) | :arrow_up: |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 49.15% <0%> (-21.58%) | :arrow_down: |\n| ...inkedin/pinot/common/data/TimeGranularitySpec.java | 60% <0%> (-16.93%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 70.95% <0%> (-7.12%) | :arrow_down: |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 77.45% <0%> (-6.42%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8733cee...95d2fa2. Read the comment docs.\n. # Codecov Report\nMerging #1946 into master will decrease coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1946      +/-\n==========================================\n- Coverage   69.55%   69.49%   -0.07%   \n==========================================\n  Files         833      834       +1   \n  Lines       40430    40608     +178   \n  Branches     5418     5444      +26   \n==========================================\n+ Hits        28123    28221      +98   \n- Misses      10433    10506      +73   \n- Partials     1874     1881       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/common/utils/request/RequestUtils.java | 79.02% <100%> (+2.45%) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-9.1%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 79.25% <0%> (-4.62%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 82.88% <0%> (-2.87%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8733cee...ad7dbea. Read the comment docs.\n. # Codecov Report\nMerging #1947 into master will increase coverage by 20.58%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1947       +/-\n===========================================\n+ Coverage   48.87%   69.45%   +20.58%   \n===========================================\n  Files         834      828        -6   \n  Lines       40583    40449      -134   \n  Branches     5437     5422       -15   \n===========================================\n+ Hits        19834    28095     +8261   \n+ Misses      19030    10485     -8545   \n- Partials     1719     1869      +150\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.58% <100%> (+1.41%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 58.1% <81.48%> (+58.1%) | :arrow_up: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 88.44% <0%> (+0.5%) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 58.06% <0%> (+0.8%) | :arrow_up: |\n| ...core/query/selection/SelectionOperatorService.java | 86.32% <0%> (+0.85%) | :arrow_up: |\n| ...inkedin/pinot/core/startree/StarTreeDataTable.java | 86.84% <0%> (+0.87%) | :arrow_up: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 66.36% <0%> (+0.9%) | :arrow_up: |\n| ... and 418 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2c9e3e0...f4a03cf. Read the comment docs.\n. # Codecov Report\nMerging #1950 into master will decrease coverage by 0.12%.\nThe diff coverage is 40%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1950      +/-\n==========================================\n- Coverage   69.41%   69.28%   -0.13%   \n==========================================\n  Files         828      828            \n  Lines       40472    40474       +2   \n  Branches     5427     5427            \n==========================================\n- Hits        28093    28044      -49   \n- Misses      10502    10562      +60   \n+ Partials     1877     1868       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../controller/helix/ControllerRequestURLBuilder.java | 67.92% <0%> (-1.31%) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 50% <50%> (+0.25%) | :arrow_up: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 39.13% <0%> (-36.24%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 66.21% <0%> (-15.07%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-9.1%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.26% <0%> (-2.64%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9487bcc...ab2424e. Read the comment docs.\n. # Codecov Report\nMerging #1955 into master will increase coverage by 0.05%.\nThe diff coverage is 84.9%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1955      +/-\n==========================================\n+ Coverage   69.66%   69.71%   +0.05%   \n==========================================\n  Files         824      820       -4   \n  Lines       40299    40036     -263   \n  Branches     5423     5377      -46   \n==========================================\n- Hits        28073    27910     -163   \n+ Misses      10357    10271      -86   \n+ Partials     1869     1855      -14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 86.81% <\u00f8> (-0.29%) | :arrow_down: |\n| ...linkedin/pinot/broker/routing/CfgBasedRouting.java | 38.46% <0%> (-8.21%) | :arrow_down: |\n| ...roker/routing/builder/BaseRoutingTableBuilder.java | 100% <100%> (\u00f8) | |\n| ...ing/builder/BalancedRandomRoutingTableBuilder.java | 100% <100%> (+5.88%) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <100%> (+0.21%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 58.1% <100%> (\u00f8) | :arrow_up: |\n| ...ing/builder/DefaultOfflineRoutingTableBuilder.java | 47.91% <47.05%> (-1.02%) | :arrow_down: |\n| .../pinot/transport/config/PerTableRoutingConfig.java | 56% <57.14%> (-1.9%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <69.23%> (-1.74%) | :arrow_down: |\n| ...uting/builder/LargeClusterRoutingTableBuilder.java | 68.75% <77.77%> (-13.07%) | :arrow_down: |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0b8461e...97a3522. Read the comment docs.\n. # Codecov Report\nMerging #1956 into master will increase coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1956      +/-\n==========================================\n+ Coverage   69.44%   69.47%   +0.03%   \n==========================================\n  Files         829      829            \n  Lines       40546    40544       -2   \n  Branches     5434     5434            \n==========================================\n+ Hits        28156    28169      +13   \n+ Misses      10514    10494      -20   \n- Partials     1876     1881       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 50.51% <0%> (+0.51%) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (-0.43%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 74.19% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 228175f...ffa2fca. Read the comment docs.\n. # Codecov Report\nMerging #1959 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1959      +/-\n==========================================\n+ Coverage   69.44%   69.47%   +0.03%   \n==========================================\n  Files         829      829            \n  Lines       40546    40546            \n  Branches     5434     5434            \n==========================================\n+ Hits        28156    28170      +14   \n+ Misses      10514    10503      -11   \n+ Partials     1876     1873       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.78% <0%> (-2.11%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-1.82%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.24% <0%> (-1.05%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 81.73% <0%> (-0.97%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 65.45% <0%> (-0.91%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 27a67f4...9ed9ed4. Read the comment docs.\n. # Codecov Report\nMerging #1965 into master will increase coverage by <.01%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1965      +/-\n==========================================\n+ Coverage   69.47%   69.47%   +<.01%   \n==========================================\n  Files         829      828       -1   \n  Lines       40544    40513      -31   \n  Branches     5434     5434            \n==========================================\n- Hits        28167    28146      -21   \n+ Misses      10498    10489       -9   \n+ Partials     1879     1878       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ger/config/FileBasedInstanceDataManagerConfig.java | 69.04% <\u00f8> (+0.86%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.66% <\u00f8> (\u00f8) | :arrow_up: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 91.66% <\u00f8> (-0.44%) | :arrow_down: |\n| ...starter/helix/DefaultHelixStarterServerConfig.java | 96.15% <\u00f8> (-0.15%) | :arrow_down: |\n| .../manager/offline/FileBasedInstanceDataManager.java | 70.66% <0%> (+3.22%) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.14% <100%> (\u00f8) | :arrow_up: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 79.83% <100%> (+1.26%) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 56.46% <100%> (-0.59%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b9f5882...c777e3f. Read the comment docs.\n. # Codecov Report\nMerging #1967 into master will not change coverage.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff           @@\nmaster    #1967   +/-\n=======================================\n  Coverage   69.44%   69.44%         \n=======================================\n  Files         828      828         \n  Lines       40513    40513         \n  Branches     5434     5434         \n=======================================\n  Hits        28133    28133         \n+ Misses      10501    10498    -3   \n- Partials     1879     1882    +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.61% <100%> (+0.68%) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 60.9% <0%> (-5.46%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 68.83% <0%> (-2.6%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-2.24%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (-1.58%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 92ec489...9439199. Read the comment docs.\n. # Codecov Report\nMerging #1968 into master will increase coverage by 0.15%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1968      +/-\n==========================================\n+ Coverage   69.44%   69.59%   +0.15%   \n==========================================\n  Files         828      824       -4   \n  Lines       40513    40288     -225   \n  Branches     5434     5421      -13   \n==========================================\n- Hits        28133    28040      -93   \n+ Misses      10501    10362     -139   \n- Partials     1879     1886       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 88.38% <\u00f8> (-0.06%) | :arrow_down: |\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 93.54% <\u00f8> (+36.68%) | :arrow_up: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-12.91%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...data/manager/offline/TableDataManagerProvider.java | 66.66% <0%> (-6.67%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...din/pinot/server/api/resources/TablesResource.java | 77.19% <0%> (-3.51%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (-2.99%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 92ec489...8127fd3. Read the comment docs.\n. # Codecov Report\nMerging #1969 into master will increase coverage by 20.26%.\nThe diff coverage is 63.63%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1969       +/-\n===========================================\n+ Coverage   49.39%   69.66%   +20.26%   \n===========================================\n  Files         824      824             \n  Lines       40288    40293        +5   \n  Branches     5421     5423        +2   \n===========================================\n+ Hits        19902    28070     +8168   \n+ Misses      18657    10349     -8308   \n- Partials     1729     1874      +145\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.66% <\u00f8> (+1.66%) | :arrow_up: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 91.89% <100%> (+0.22%) | :arrow_up: |\n| ...re/data/manager/config/TableDataManagerConfig.java | 79.16% <100%> (+1.89%) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 47.05% <50%> (-0.81%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 56.46% <0%> (-2.73%) | :arrow_down: |\n| ... and 420 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d18dd11...f3949c2. Read the comment docs.\n. # Codecov Report\nMerging #1970 into master will decrease coverage by 10.26%.\nThe diff coverage is 73.33%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1970       +/-\n===========================================\n- Coverage   69.62%   59.35%   -10.27%   \n===========================================\n  Files         824      824             \n  Lines       40293    40304       +11   \n  Branches     5423     5423             \n===========================================\n- Hits        28053    23923     -4130   \n- Misses      10368    14660     +4292   \n+ Partials     1872     1721      -151\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 90% <73.33%> (-4.92%) | :arrow_down: |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | :arrow_down: |\n| ...inkedin/pinot/minion/metrics/MinionQueryPhase.java | 0% <0%> (-100%) | :arrow_down: |\n| ...core/query/exception/BadQueryRequestException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 0% <0%> (-100%) | :arrow_down: |\n| ...n/iterator/StringArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 260 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 769128c...7b4a968. Read the comment docs.\n. # Codecov Report\nMerging #1973 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1973      +/-\n==========================================\n+ Coverage   69.69%   69.72%   +0.03%   \n==========================================\n  Files         824      824            \n  Lines       40304    40305       +1   \n  Branches     5423     5423            \n==========================================\n+ Hits        28088    28103      +15   \n+ Misses      10340    10327      -13   \n+ Partials     1876     1875       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 90.14% <100%> (+0.14%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-12.91%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.28% <0%> (-1.05%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3e67e98...360416b. Read the comment docs.\n. # Codecov Report\nMerging #1977 into master will decrease coverage by 0.12%.\nThe diff coverage is 74.18%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1977      +/-\n==========================================\n- Coverage   69.82%   69.69%   -0.13%   \n==========================================\n  Files         820      820            \n  Lines       39975    39900      -75   \n  Branches     5372     5369       -3   \n==========================================\n- Hits        27911    27807     -104   \n- Misses      10214    10247      +33   \n+ Partials     1850     1846       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...data/manager/offline/TableDataManagerProvider.java | 63.63% <100%> (-3.04%) | :arrow_down: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 84.21% <100%> (-1.51%) | :arrow_down: |\n| .../data/manager/offline/OfflineTableDataManager.java | 100% <100%> (+11.11%) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 56.91% <50%> (-2.28%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 45.28% <56.25%> (-1.78%) | :arrow_down: |\n| .../pinot/server/api/resources/TableSizeResource.java | 88.46% <66.66%> (\u00f8) | :arrow_up: |\n| ...din/pinot/server/api/resources/TablesResource.java | 77.19% <66.66%> (\u00f8) | :arrow_up: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 76.11% <70.37%> (-3.72%) | :arrow_down: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 78.02% <72.5%> (-0.77%) | :arrow_down: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 19cbf16...fcdcdbd. Read the comment docs.\n. # Codecov Report\nMerging #1979 into master will decrease coverage by 0.05%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1979      +/-\n==========================================\n- Coverage    69.7%   69.64%   -0.06%   \n==========================================\n  Files         824      824            \n  Lines       40305    40298       -7   \n  Branches     5423     5423            \n==========================================\n- Hits        28093    28067      -26   \n- Misses      10346    10349       +3   \n- Partials     1866     1882      +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 83.2% <100%> (+0.76%) | :arrow_up: |\n| ...starter/helix/DefaultHelixStarterServerConfig.java | 96% <100%> (-0.16%) | :arrow_down: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 78.78% <50%> (+1.64%) | :arrow_up: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-12.91%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-10.91%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0614d10...88456e7. Read the comment docs.\n. # Codecov Report\nMerging #1980 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1980      +/-\n==========================================\n- Coverage    69.7%   69.65%   -0.05%   \n==========================================\n  Files         824      824            \n  Lines       40305    40305            \n  Branches     5423     5423            \n==========================================\n- Hits        28093    28073      -20   \n- Misses      10346    10360      +14   \n- Partials     1866     1872       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-9.1%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 86.02% <0%> (-0.74%) | :arrow_down: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0614d10...a4e3b1f. Read the comment docs.\n. # Codecov Report\nMerging #1981 into master will decrease coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1981      +/-\n==========================================\n- Coverage   69.74%   69.68%   -0.06%   \n==========================================\n  Files         824      824            \n  Lines       40298    40299       +1   \n  Branches     5423     5423            \n==========================================\n- Hits        28104    28084      -20   \n- Misses      10324    10353      +29   \n+ Partials     1870     1862       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.62% <100%> (+0.04%) | :arrow_up: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-14.55%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 43.97% <0%> (-7.81%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 74.19% <0%> (-6.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1e1284c...e6c5a10. Read the comment docs.\n. # Codecov Report\nMerging #1983 into master will decrease coverage by 0.02%.\nThe diff coverage is 94.44%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1983      +/-\n=========================================\n- Coverage   69.73%   69.7%   -0.03%   \n=========================================\n  Files         829     830       +1   \n  Lines       40017   40029      +12   \n  Branches     5383    5383            \n=========================================\n- Hits        27904   27901       -3   \n- Misses      10258   10267       +9   \n- Partials     1855    1861       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.09% <\u00f8> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/startree/hll/HllConstants.java | 0% <\u00f8> (\u00f8) | |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.13% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/core/query/utils/SimpleSegmentMetadata.java | 37.25% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.8% <\u00f8> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/common/config/TableConfig.java | 85.29% <\u00f8> (\u00f8) | :arrow_up: |\n| ...com/linkedin/pinot/core/startree/MetricBuffer.java | 71.25% <\u00f8> (\u00f8) | :arrow_up: |\n| .../function/DistinctCountHLLAggregationFunction.java | 35.39% <\u00f8> (\u00f8) | :arrow_up: |\n| ...gregation/function/FastHLLAggregationFunction.java | 61.9% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.26% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 458c9b0...9a525a8. Read the comment docs.\n. # Codecov Report\nMerging #1989 into master will increase coverage by 0.12%.\nThe diff coverage is 84.1%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1989      +/-\n==========================================\n+ Coverage   69.63%   69.75%   +0.12%   \n==========================================\n  Files         820      820            \n  Lines       40058    39975      -83   \n  Branches     5381     5372       -9   \n==========================================\n- Hits        27894    27885       -9   \n+ Misses      10300    10238      -62   \n+ Partials     1864     1852      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/fwd/SingleValueSortedForwardIndexCreator.java | 96% <\u00f8> (\u00f8) | :arrow_up: |\n| ...mpl/fwd/MultiValueUnsortedForwardIndexCreator.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...or/impl/fwd/SingleValueVarByteRawIndexCreator.java | 60% <\u00f8> (+3.75%) | :arrow_up: |\n| ...egment/creator/BaseSingleValueRawIndexCreator.java | 12.5% <\u00f8> (+1.38%) | :arrow_up: |\n| ...pl/fwd/SingleValueUnsortedForwardIndexCreator.java | 88.88% <100%> (\u00f8) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 58.13% <25%> (-0.6%) | :arrow_down: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 85.09% <80.64%> (-1.55%) | :arrow_down: |\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 77.77% <82.35%> (+11.11%) | :arrow_up: |\n| ...tor/impl/inv/OnHeapBitmapInvertedIndexCreator.java | 86.2% <86.2%> (\u00f8) | |\n| ...or/impl/inv/OffHeapBitmapInvertedIndexCreator.java | 86.45% <86.2%> (-2.52%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 149aada...4592e87. Read the comment docs.\n. # Codecov Report\nMerging #1991 into master will increase coverage by 0.01%.\nThe diff coverage is 44.44%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1991      +/-\n=========================================\n+ Coverage   69.69%   69.7%   +0.01%   \n=========================================\n  Files         824     824            \n  Lines       40299   40312      +13   \n  Branches     5423    5425       +2   \n=========================================\n+ Hits        28086   28100      +14   \n+ Misses      10337   10332       -5   \n- Partials     1876    1880       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...time/converter/stats/RealtimeColumnStatistics.java | 69.23% <0%> (-1.09%) | :arrow_down: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.64% <0%> (-0.3%) | :arrow_down: |\n| ...erter/stats/RealtimeNoDictionaryColStatistics.java | 88.76% <0%> (-1.01%) | :arrow_down: |\n| .../impl/stats/AbstractColumnStatisticsCollector.java | 89.47% <0%> (-1.6%) | :arrow_down: |\n| ...com/linkedin/pinot/common/metrics/ServerGauge.java | 95.23% <100%> (+0.23%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.43% <100%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.89% <100%> (\u00f8) | :arrow_up: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 73.77% <40%> (-7.37%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 55.17% <0%> (-31.04%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 70.27% <0%> (-8.11%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ca97b59...b1ffc9e. Read the comment docs.\n. # Codecov Report\nMerging #1992 into master will decrease coverage by 0.06%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1992      +/-\n==========================================\n- Coverage   69.69%   69.62%   -0.07%   \n==========================================\n  Files         824      824            \n  Lines       40299    40308       +9   \n  Branches     5423     5425       +2   \n==========================================\n- Hits        28086    28066      -20   \n- Misses      10337    10363      +26   \n- Partials     1876     1879       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.56% <77.77%> (+0.03%) | :arrow_up: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 55.17% <0%> (-31.04%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 47.22% <0%> (-13.89%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 75% <0%> (-3.58%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-1.36%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 78.35% <0%> (-1.04%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 748a66f...9469c81. Read the comment docs.\n. # Codecov Report\nMerging #1996 into master will decrease coverage by 0.12%.\nThe diff coverage is 81.67%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #1996      +/-\n=========================================\n- Coverage   69.82%   69.7%   -0.13%   \n=========================================\n  Files         820     826       +6   \n  Lines       39975   39991      +16   \n  Branches     5372    5381       +9   \n=========================================\n- Hits        27911   27874      -37   \n- Misses      10214   10261      +47   \n- Partials     1850    1856       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/common/datetime/convertor/SDFToSDFConvertor.java | 0% <0%> (\u00f8) | |\n| ...mmon/datetime/convertor/EpochToEpochConvertor.java | 100% <100%> (\u00f8) | |\n| ...common/datetime/convertor/EpochToSDFConvertor.java | 100% <100%> (\u00f8) | |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 78.04% <100%> (\u00f8) | :arrow_up: |\n| ...din/pinot/pql/parsers/pql2/ast/GroupByAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...common/datetime/convertor/SDFToEpochConvertor.java | 100% <100%> (\u00f8) | |\n| ...edin/pinot/core/minion/BackfillDateTimeColumn.java | 40% <100%> (+0.63%) | :arrow_up: |\n| ...t/common/datetime/convertor/DateTimeConvertor.java | 71.92% <71.92%> (\u00f8) | |\n| ...din/pinot/common/data/DateTimeGranularitySpec.java | 77.27% <77.27%> (\u00f8) | |\n| ...n/datetime/convertor/DateTimeConvertorFactory.java | 80% <80%> (\u00f8) | |\n| ... and 57 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 19cbf16...4965a2e. Read the comment docs.\n. # Codecov Report\nMerging #1997 into master will increase coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #1997      +/-\n==========================================\n+ Coverage   69.71%   69.79%   +0.07%   \n==========================================\n  Files         829      829            \n  Lines       40013    40013            \n  Branches     5383     5383            \n==========================================\n+ Hits        27896    27927      +31   \n+ Misses      10262    10237      -25   \n+ Partials     1855     1849       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 64.17% <0%> (-2.99%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 97.36% <0%> (-1.32%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...data/manager/offline/AbstractTableDataManager.java | 91.5% <0%> (-0.95%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (+0.67%) | :arrow_up: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d2b603...9cb2a33. Read the comment docs.\n. # Codecov Report\nMerging #1999 into master will decrease coverage by 10.81%.\nThe diff coverage is 37.03%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #1999       +/-\n===========================================\n- Coverage   69.66%   58.85%   -10.82%   \n===========================================\n  Files         820      820             \n  Lines       39900    39906        +6   \n  Branches     5369     5372        +3   \n===========================================\n- Hits        27797    23486     -4311   \n- Misses      10256    14721     +4465   \n+ Partials     1847     1699      -148\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 39.66% <0%> (-27.11%) | :arrow_down: |\n| ...eaderwriter/RealtimeIndexOffHeapMemoryManager.java | 82.75% <0%> (-13.67%) | :arrow_down: |\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 84.49% <100%> (+0.49%) | :arrow_up: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 0% <0%> (-100%) | :arrow_down: |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | :arrow_down: |\n| ...n/iterator/StringArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionContext.java | 0% <0%> (-100%) | :arrow_down: |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 274 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 26cd93c...5b4bd1a. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9938cd7). Click here to learn what that means.\nThe diff coverage is 80.33%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2000   +/-\n=========================================\n  Coverage          ?   71.07%         \n  Complexity        ?        7         \n=========================================\n  Files             ?      964         \n  Lines             ?    46115         \n  Branches          ?     6424         \n=========================================\n  Hits              ?    32776         \n  Misses            ?    11215         \n  Partials          ?     2124\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/core/io/util/FixedByteValueReaderWriter.java | 95.23% <0%> (\u00f8) | 0 <0> (?) | |\n| ...gment/index/readers/ImmutableDictionaryReader.java | 94.26% <100%> (\u00f8) | 0 <0> (?) | |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.8% <100%> (\u00f8) | 0 <0> (?) | |\n| ...indexsegment/immutable/ImmutableSegmentLoader.java | 92.15% <100%> (\u00f8) | 0 <0> (?) | |\n| ...irtualcolumn/SegmentNameVirtualColumnProvider.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...inot/core/segment/index/readers/IntDictionary.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...t/core/segment/index/readers/StringDictionary.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...gment/virtualcolumn/BaseVirtualColumnProvider.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...t/core/query/selection/SelectionOperatorUtils.java | 93.11% <100%> (\u00f8) | 0 <0> (?) | |\n| ...t/virtualcolumn/HostNameVirtualColumnProvider.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9938cd7...ee9694d. Read the comment docs.\n. # Codecov Report\nMerging #2004 into master will decrease coverage by 0.01%.\nThe diff coverage is 92.59%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2004      +/-\n==========================================\n- Coverage   69.66%   69.64%   -0.02%   \n==========================================\n  Files         820      820            \n  Lines       39906    39906            \n  Branches     5372     5372            \n==========================================\n- Hits        27801    27794       -7   \n- Misses      10253    10262       +9   \n+ Partials     1852     1850       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...eaderwriter/RealtimeIndexOffHeapMemoryManager.java | 93.1% <0%> (\u00f8) | :arrow_up: |\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 84.49% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.57% <93.75%> (\u00f8) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-10.91%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-3.64%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dde2a8a...e5c28d5. Read the comment docs.\n. # Codecov Report\nMerging #2005 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2005      +/-\n=========================================\n+ Coverage   69.66%   69.7%   +0.03%   \n=========================================\n  Files         820     820            \n  Lines       39906   39906            \n  Branches     5372    5372            \n=========================================\n+ Hits        27801   27816      +15   \n+ Misses      10253   10246       -7   \n+ Partials     1852    1844       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.28% <0%> (-2.82%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <0%> (-2.13%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 92.72% <0%> (-1.82%) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 74.69% <0%> (-1.81%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 86.02% <0%> (-0.74%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dde2a8a...ae6a142. Read the comment docs.\n. # Codecov Report\nMerging #2006 into master will increase coverage by 0.11%.\nThe diff coverage is 40%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2006      +/-\n==========================================\n+ Coverage   69.66%   69.78%   +0.11%   \n==========================================\n  Files         820      826       +6   \n  Lines       39906    39995      +89   \n  Branches     5372     5381       +9   \n==========================================\n+ Hits        27801    27910     +109   \n+ Misses      10253    10243      -10   \n+ Partials     1852     1842      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pi/resources/InvalidControllerConfigException.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ntroller/api/resources/FileUploadPathProvider.java | 87.5% <0%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 44.05% <100%> (+0.08%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...ransform/function/DateTimeConversionTransform.java | 78.57% <0%> (-6.43%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 86.02% <0%> (-0.74%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78.37% <0%> (\u00f8) | :arrow_up: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dde2a8a...7c4ddbe. Read the comment docs.\n. # Codecov Report\nMerging #2008 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2008      +/-\n==========================================\n+ Coverage    69.7%   69.71%   +<.01%   \n==========================================\n  Files         826      826            \n  Lines       39991    39991            \n  Branches     5381     5381            \n==========================================\n+ Hits        27877    27880       +3   \n- Misses      10259    10260       +1   \n+ Partials     1855     1851       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 77.02% <0%> (-1.36%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-1.12%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (-0.71%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 56.55% <0%> (-0.69%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.43% <0%> (-0.2%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3560946...7497f58. Read the comment docs.\n. # Codecov Report\nMerging #2009 into master will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2009      +/-\n=========================================\n- Coverage   69.76%   69.7%   -0.07%   \n=========================================\n  Files         826     826            \n  Lines       39991   39995       +4   \n  Branches     5381    5382       +1   \n=========================================\n- Hits        27900   27877      -23   \n- Misses      10243   10264      +21   \n- Partials     1848    1854       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ller/api/resources/PinotSchemaRestletResource.java | 40.29% <0%> (-2.56%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 43.97% <0%> (-7.81%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 014c16e...5fadc48. Read the comment docs.\n. # Codecov Report\nMerging #2010 into master will decrease coverage by 0.07%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2010      +/-\n==========================================\n- Coverage   69.76%   69.69%   -0.08%   \n==========================================\n  Files         826      829       +3   \n  Lines       39991    40009      +18   \n  Branches     5381     5382       +1   \n==========================================\n- Hits        27900    27883      -17   \n- Misses      10243    10266      +23   \n- Partials     1848     1860      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/controller/api/resources/HeaderAdder.java | 74.19% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/controller/api/access/AllowAllAccess.java | 100% <100%> (\u00f8) | |\n| ...not/controller/api/resources/AccessController.java | 100% <100%> (\u00f8) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 45.13% <100%> (+1.49%) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 59.23% <100%> (+1.06%) | :arrow_up: |\n| ...t/controller/api/access/AllowAllAccessFactory.java | 100% <100%> (\u00f8) | |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-12.91%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 014c16e...dba3eb5. Read the comment docs.\n. # Codecov Report\nMerging #2013 into master will decrease coverage by <.01%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2013      +/-\n==========================================\n- Coverage   69.71%   69.71%   -0.01%   \n==========================================\n  Files         829      829            \n  Lines       40013    40016       +3   \n  Branches     5383     5383            \n==========================================\n  Hits        27896    27896            \n- Misses      10262    10267       +5   \n+ Partials     1855     1853       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 86.95% <100%> (+0.14%) | :arrow_up: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 71.27% <50%> (-0.47%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-2.07%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.44% <0%> (+1.12%) | :arrow_up: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d2b603...ce23f81. Read the comment docs.\n. # Codecov Report\nMerging #2014 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2014      +/-\n==========================================\n+ Coverage   69.64%   69.68%   +0.03%   \n==========================================\n  Files         829      829            \n  Lines       40016    40016            \n  Branches     5383     5383            \n==========================================\n+ Hits        27870    27885      +15   \n+ Misses      10282    10272      -10   \n+ Partials     1864     1859       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-2.24%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.8% <0%> (-1.58%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 74.19% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (\u00f8) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 36417ab...1382fd6. Read the comment docs.\n. # Codecov Report\nMerging #2016 into master will increase coverage by 0.08%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2016      +/-\n==========================================\n+ Coverage   69.64%   69.73%   +0.08%   \n==========================================\n  Files         829      829            \n  Lines       40016    40017       +1   \n  Branches     5383     5383            \n==========================================\n+ Hits        27870    27904      +34   \n+ Misses      10282    10259      -23   \n+ Partials     1864     1854      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.86% <0%> (-0.38%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 97.36% <0%> (-1.32%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (\u00f8) | :arrow_up: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 79.72% <0%> (+1.35%) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 36417ab...a9f7243. Read the comment docs.\n. # Codecov Report\nMerging #2019 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2019      +/-\n=========================================\n- Coverage   69.73%   69.7%   -0.03%   \n=========================================\n  Files         829     829            \n  Lines       40017   40019       +2   \n  Branches     5383    5383            \n=========================================\n- Hits        27904   27896       -8   \n- Misses      10258   10262       +4   \n- Partials     1855    1861       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/kafka/KafkaHighLevelStreamProviderConfig.java | 54.71% <100%> (+0.43%) | :arrow_up: |\n| ...realtime/impl/kafka/PinotKafkaConsumerFactory.java | 75% <100%> (+3.57%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.63% <100%> (\u00f8) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 77.77% <0%> (-17.78%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-9.1%) | :arrow_down: |\n| ... and 30 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 458c9b0...8228bb7. Read the comment docs.\n. # Codecov Report\nMerging #2020 into master will decrease coverage by 10.77%.\nThe diff coverage is 8.06%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2020       +/-\n===========================================\n- Coverage   69.67%   58.89%   -10.78%   \n===========================================\n  Files         829      830        +1   \n  Lines       40019    40031       +12   \n  Branches     5383     5384        +1   \n===========================================\n- Hits        27883    23577     -4306   \n- Misses      10283    14749     +4466   \n+ Partials     1853     1705      -148\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 22.72% <5.55%> (-64.31%) | :arrow_down: |\n| .../core/minion/generator/BasePinotTaskGenerator.java | 9.09% <9.09%> (\u00f8) | |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...pinot/minion/exception/TaskCancelledException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...n/iterator/StringArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/ComparisonFunction.java | 0% <0%> (-100%) | :arrow_down: |\n| ...core/query/exception/BadQueryRequestException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 272 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9a5df01...7b07c4f. Read the comment docs.\n. # Codecov Report\nMerging #2022 into master will decrease coverage by 0.01%.\nThe diff coverage is 80.85%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2022      +/-\n==========================================\n- Coverage   69.73%   69.72%   -0.02%   \n==========================================\n  Files         829      829            \n  Lines       40023    40065      +42   \n  Branches     5383     5401      +18   \n==========================================\n+ Hits        27912    27934      +22   \n- Misses      10258    10277      +19   \n- Partials     1853     1854       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/segment/index/column/ColumnIndexContainer.java | 78% <0%> (-4.98%) | :arrow_down: |\n| ...impl/dictionary/StringOnHeapMutableDictionary.java | 91.3% <100%> (+0.39%) | :arrow_up: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 92.98% <100%> (+11.16%) | :arrow_up: |\n| ...inot/core/segment/index/readers/IntDictionary.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 66.66% <100%> (-16.97%) | :arrow_down: |\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 98.27% <100%> (+0.06%) | :arrow_up: |\n| ...ot/core/segment/index/readers/FloatDictionary.java | 92.85% <100%> (+1.19%) | :arrow_up: |\n| ...not/core/segment/index/readers/LongDictionary.java | 92.85% <100%> (+1.19%) | :arrow_up: |\n| ...t/core/segment/index/readers/StringDictionary.java | 75% <100%> (+3.57%) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 89.36% <100%> (-6.2%) | :arrow_down: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 712802a...22594a4. Read the comment docs.\n. # Codecov Report\nMerging #2025 into master will decrease coverage by 0.06%.\nThe diff coverage is 83.61%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2025      +/-\n==========================================\n- Coverage   69.69%   69.63%   -0.07%   \n==========================================\n  Files         830      829       -1   \n  Lines       40075    39931     -144   \n  Branches     5401     5399       -2   \n==========================================\n- Hits        27931    27805     -126   \n  Misses      10279    10279            \n+ Partials     1865     1847      -18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 100% <100%> (+16.66%) | :arrow_up: |\n| ...ot/core/operator/filter/StarTreeIndexOperator.java | 85.49% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/core/startree/StarTreeIndexNodeOffHeap.java | 72.6% <100%> (+2.01%) | :arrow_up: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.52% <100%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/startree/StarTreeBuilderConfig.java | 100% <100%> (+11.11%) | :arrow_up: |\n| ...din/pinot/core/segment/index/IndexSegmentImpl.java | 49.33% <60%> (+0.76%) | :arrow_up: |\n| .../linkedin/pinot/core/startree/DimensionBuffer.java | 72% <63.15%> (+2.43%) | :arrow_up: |\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 79.21% <80.09%> (-3.68%) | :arrow_down: |\n| ...ava/com/linkedin/pinot/core/startree/StarTree.java | 62.5% <81.81%> (-1.61%) | :arrow_down: |\n| .../linkedin/pinot/core/startree/StarTreeOffHeap.java | 82.69% <88.57%> (-2.56%) | :arrow_down: |\n| ... and 30 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4c798a5...3ea99cf. Read the comment docs.\n. # Codecov Report\nMerging #2027 into master will increase coverage by 0.07%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2027      +/-\n==========================================\n+ Coverage   69.69%   69.76%   +0.07%   \n==========================================\n  Files         830      830            \n  Lines       40075    40079       +4   \n  Branches     5401     5402       +1   \n==========================================\n+ Hits        27931    27963      +32   \n+ Misses      10279    10250      -29   \n- Partials     1865     1866       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/transport/netty/NettyClientConnection.java | 74.28% <0%> (-2.19%) | :arrow_down: |\n| ...in/pinot/transport/common/AsyncResponseFuture.java | 80.71% <0%> (-0.59%) | :arrow_down: |\n| ...m/linkedin/pinot/transport/pool/KeyedPoolImpl.java | 93.9% <100%> (\u00f8) | :arrow_up: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 83.08% <100%> (-2.95%) | :arrow_down: |\n| ...nkedin/pinot/transport/common/CompositeFuture.java | 57.35% <100%> (+2.8%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 58.1% <50%> (\u00f8) | :arrow_up: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-19.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.97% <0%> (-6.39%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9133bef...a555c2a. Read the comment docs.\n. # Codecov Report\nMerging #2030 into master will increase coverage by 0.07%.\nThe diff coverage is 76.31%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2030      +/-\n==========================================\n+ Coverage   69.69%   69.76%   +0.07%   \n==========================================\n  Files         830      830            \n  Lines       40075    40078       +3   \n  Branches     5401     5401            \n==========================================\n+ Hits        27931    27962      +31   \n+ Misses      10279    10259      -20   \n+ Partials     1865     1857       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/core/minion/RawIndexConverter.java | 60.97% <\u00f8> (\u00f8) | :arrow_up: |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 100% <100%> (+24.32%) | :arrow_up: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 78.57% <75%> (-21.43%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-19.36%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 49.25% <0%> (-17.92%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 89.94% <0%> (-2.24%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 84.21% <0%> (-1.76%) | :arrow_down: |\n| ...data/manager/offline/AbstractTableDataManager.java | 91.5% <0%> (-0.95%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9b95396...ece3938. Read the comment docs.\n. # Codecov Report\nMerging #2037 into master will increase coverage by 0.15%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2037      +/-\n==========================================\n+ Coverage    69.6%   69.75%   +0.15%   \n==========================================\n  Files         830      830            \n  Lines       40079    40079            \n  Branches     5402     5402            \n==========================================\n+ Hits        27895    27958      +63   \n+ Misses      10323    10260      -63   \n  Partials     1861     1861\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/api/resources/AccessController.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-19.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.97% <0%> (-12.77%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 73.68% <0%> (-7.02%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 92.98% <0%> (-1.76%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (-0.71%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.43% <0%> (-0.2%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f9805f3...a0fbef7. Read the comment docs.\n. # Codecov Report\nMerging #2038 into master will increase coverage by 0.14%.\nThe diff coverage is 81.81%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2038      +/-\n==========================================\n+ Coverage    69.6%   69.74%   +0.14%   \n==========================================\n  Files         830      830            \n  Lines       40079    40084       +5   \n  Branches     5402     5402            \n==========================================\n+ Hits        27895    27956      +61   \n+ Misses      10323    10275      -48   \n+ Partials     1861     1853       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.57% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...eaderwriter/RealtimeIndexOffHeapMemoryManager.java | 93.1% <0%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 80.85% <100%> (+0.41%) | :arrow_up: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 84.61% <100%> (+0.4%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.63% <100%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.89% <100%> (\u00f8) | :arrow_up: |\n| ...com/linkedin/pinot/common/metrics/ServerGauge.java | 95.45% <100%> (+0.21%) | :arrow_up: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 92.1% <100%> (+0.21%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <50%> (-20%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f9805f3...8130d77. Read the comment docs.\n. # Codecov Report\nMerging #2039 into master will decrease coverage by 0.07%.\nThe diff coverage is 53.19%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2039      +/-\n==========================================\n- Coverage   69.76%   69.69%   -0.08%   \n==========================================\n  Files         830      830            \n  Lines       40079    40097      +18   \n  Branches     5402     5405       +3   \n==========================================\n- Hits        27961    27944      -17   \n- Misses      10258    10287      +29   \n- Partials     1860     1866       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/segment/index/loader/IndexLoadingConfig.java | 84.81% <100%> (+0.59%) | :arrow_up: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 92.1% <100%> (+0.21%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.36% <48.83%> (-1.28%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 87.23% <0%> (-6.39%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 84.21% <0%> (-5.27%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 89.47% <0%> (-3.51%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d9b5d4d...d965a45. Read the comment docs.\n. # Codecov Report\nMerging #2040 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2040      +/-\n==========================================\n- Coverage   69.76%   69.74%   -0.02%   \n==========================================\n  Files         830      830            \n  Lines       40079    40079            \n  Branches     5402     5402            \n==========================================\n- Hits        27961    27954       -7   \n- Misses      10258    10265       +7   \n  Partials     1860     1860\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.33% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.71% <0%> (-5.27%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <0%> (-2.13%) | :arrow_down: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 77.31% <0%> (-2.07%) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 80.76% <0%> (-1.93%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.1% <0%> (-0.71%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d9b5d4d...1154a50. Read the comment docs.\n. # Codecov Report\nMerging #2041 into master will decrease coverage by 0.09%.\nThe diff coverage is 53.19%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2041     +/-\n=========================================\n- Coverage   69.77%   69.68%   -0.1%   \n=========================================\n  Files         830      830           \n  Lines       40084    40102     +18   \n  Branches     5402     5405      +3   \n=========================================\n- Hits        27970    27944     -26   \n- Misses      10252    10289     +37   \n- Partials     1862     1869      +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/data/manager/config/TableDataManagerConfig.java | 76.92% <100%> (-2.25%) | :arrow_down: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 92.3% <100%> (+0.2%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.56% <50%> (-1.08%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 42.72% <50%> (-2.56%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 55.17% <0%> (-31.04%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-10%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 70.21% <0%> (-6.39%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 58.51% <0%> (-4.26%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4e0b842...5c91985. Read the comment docs.\n. # Codecov Report\nMerging #2045 into master will increase coverage by 0.02%.\nThe diff coverage is 86.2%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2045      +/-\n==========================================\n+ Coverage   69.68%   69.71%   +0.02%   \n==========================================\n  Files         830      830            \n  Lines       40102    40102            \n  Branches     5405     5406       +1   \n==========================================\n+ Hits        27947    27956       +9   \n+ Misses      10289    10278      -11   \n- Partials     1866     1868       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/transport/common/AsyncResponseFuture.java | 81.29% <\u00f8> (+0.58%) | :arrow_up: |\n| ...n/pinot/transport/netty/NettyClientConnection.java | 76.47% <\u00f8> (+2.18%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 58.1% <66.66%> (\u00f8) | :arrow_up: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 85.91% <86.66%> (-0.12%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.83% <90.9%> (-0.17%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.17% <0%> (-8.78%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 74.19% <0%> (-6.46%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 84.21% <0%> (-5.27%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 55fab91...e802c38. Read the comment docs.\n. # Codecov Report\nMerging #2048 into master will decrease coverage by 0.33%.\nThe diff coverage is 46.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2048      +/-\n==========================================\n- Coverage   69.68%   69.35%   -0.34%   \n==========================================\n  Files         830      830            \n  Lines       40102    40386     +284   \n  Branches     5405     5483      +78   \n==========================================\n+ Hits        27947    28010      +63   \n- Misses      10289    10509     +220   \n- Partials     1866     1867       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 46.34% <46.66%> (+0.88%) | :arrow_up: |\n| ...in/pinot/transport/common/AsyncResponseFuture.java | 57.36% <0%> (-23.36%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 65.94% <0%> (-22.06%) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 41.74% <0%> (-16.37%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 69.71% <0%> (-16.32%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.17% <0%> (-8.78%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 80.85% <0%> (-6.39%) | :arrow_down: |\n| ...n/pinot/transport/netty/NettyClientConnection.java | 68.42% <0%> (-5.87%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 02aef39...4d9a0e8. Read the comment docs.\n. # Codecov Report\nMerging #2052 into master will decrease coverage by 0.07%.\nThe diff coverage is 77.96%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2052      +/-\n=========================================\n- Coverage   69.78%   69.7%   -0.08%   \n=========================================\n  Files         830     830            \n  Lines       40115   40097      -18   \n  Branches     5411    5411            \n=========================================\n- Hits        27993   27950      -43   \n- Misses      10253   10268      +15   \n- Partials     1869    1879      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/core/plan/GlobalPlanImplV0.java | 90% <\u00f8> (-1.67%) | :arrow_down: |\n| .../linkedin/pinot/core/util/trace/TraceCallable.java | 72.72% <62.5%> (-18.94%) | :arrow_down: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 81.63% <75%> (+0.78%) | :arrow_up: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 80.34% <80%> (-2.11%) | :arrow_down: |\n| .../linkedin/pinot/core/util/trace/TraceRunnable.java | 91.66% <87.5%> (-0.65%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.08% <0%> (-14.9%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 80.7% <0%> (-14.04%) | :arrow_down: |\n| ...m/linkedin/pinot/core/util/trace/TraceContext.java | 78.02% <0%> (-10.99%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 484d7cd...0bfa80e. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@354ad3f). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2053   +/-\n=========================================\n  Coverage          ?   69.78%         \n=========================================\n  Files             ?      830         \n  Lines             ?    40102         \n  Branches          ?     5406         \n=========================================\n  Hits              ?    27985         \n  Misses            ?    10250         \n  Partials          ?     1867\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 92.3% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 354ad3f...84673e4. Read the comment docs.\n. # Codecov Report\nMerging #2057 into master will decrease coverage by 0.04%.\nThe diff coverage is 52.43%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2057      +/-\n==========================================\n- Coverage   69.51%   69.47%   -0.05%   \n==========================================\n  Files         830      828       -2   \n  Lines       40097    39994     -103   \n  Branches     5411     5398      -13   \n==========================================\n- Hits        27874    27786      -88   \n+ Misses      10350    10334      -16   \n- Partials     1873     1874       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/core/operator/BaseOperator.java | 19.04% <11.11%> (-74.29%) | :arrow_down: |\n| .../linkedin/pinot/core/util/trace/TraceCallable.java | 62.5% <40%> (-10.23%) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 80.86% <40%> (+0.52%) | :arrow_up: |\n| ...m/linkedin/pinot/core/util/trace/TraceContext.java | 71.69% <70.45%> (-6.33%) | :arrow_down: |\n| .../linkedin/pinot/core/util/trace/TraceRunnable.java | 88.88% <80%> (-2.78%) | :arrow_down: |\n| ...inkedin/pinot/common/utils/NamedThreadFactory.java | 50% <0%> (-33.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...re/operator/filter/MatchEntireSegmentOperator.java | 75% <0%> (-12.5%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ... and 46 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 404d82f...bc487b2. Read the comment docs.\n. # Codecov Report\nMerging #2059 into master will increase coverage by 0.11%.\nThe diff coverage is 4.76%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2059      +/-\n==========================================\n+ Coverage   69.51%   69.62%   +0.11%   \n==========================================\n  Files         830      830            \n  Lines       40097    40138      +41   \n  Branches     5411     5423      +12   \n==========================================\n+ Hits        27874    27947      +73   \n+ Misses      10350    10297      -53   \n- Partials     1873     1894      +21\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 70.31% <0%> (-3.46%) | :arrow_down: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 80% <0%> (-2.36%) | :arrow_down: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.52% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 60.51% <2.7%> (-6.06%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.97% <0%> (-12.77%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 89.36% <0%> (-6.39%) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 108a1a5...cbb4a69. Read the comment docs.\n. # Codecov Report\nMerging #2061 into master will decrease coverage by 0.16%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2061      +/-\n==========================================\n- Coverage   69.47%   69.31%   -0.17%   \n==========================================\n  Files         828      827       -1   \n  Lines       39994    39678     -316   \n  Branches     5398     5379      -19   \n==========================================\n- Hits        27786    27502     -284   \n+ Misses      10334    10320      -14   \n+ Partials     1874     1856      -18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ommon/exception/PermanentPushFailureException.java | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 31.34% <0%> (-12.72%) | :arrow_down: |\n| .../com/linkedin/pinot/startree/hll/HllSizeUtils.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-19.36%) | :arrow_down: |\n| ...com/linkedin/pinot/core/startree/MetricBuffer.java | 60% <0%> (-11.25%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 89.36% <0%> (-6.39%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 89.36% <0%> (-6.39%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 70.21% <0%> (-6.39%) | :arrow_down: |\n| .../com/linkedin/pinot/core/startree/hll/HllUtil.java | 58.33% <0%> (-6.26%) | :arrow_down: |\n| ... and 55 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 404d82f...4d6138e. Read the comment docs.\n. # Codecov Report\nMerging #2065 into master will increase coverage by 0.24%.\nThe diff coverage is 78.94%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2065      +/-\n==========================================\n+ Coverage   69.35%   69.59%   +0.24%   \n==========================================\n  Files         827      826       -1   \n  Lines       39850    39614     -236   \n  Branches     5396     5371      -25   \n==========================================\n- Hits        27638    27571      -67   \n+ Misses      10354    10203     -151   \n+ Partials     1858     1840      -18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/broker/api/RequesterIdentity.java | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/exception/QueryException.java | 87.69% <100%> (+0.19%) | :arrow_up: |\n| ...ot/broker/broker/AllowAllAccessControlFactory.java | 100% <100%> (\u00f8) | |\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/metrics/BrokerQueryPhase.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 27.77% <50%> (\u00f8) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.17% <75%> (-0.67%) | :arrow_down: |\n| ...edin/pinot/broker/broker/AccessControlFactory.java | 75% <75%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| ...inot/core/segment/store/SegmentDirectoryPaths.java | 68.42% <0%> (-5.27%) | :arrow_down: |\n| ... and 48 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d5014e2...7f1457d. Read the comment docs.\n. # Codecov Report\nMerging #2066 into master will increase coverage by 0.14%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2066      +/-\n==========================================\n+ Coverage   69.35%   69.49%   +0.14%   \n==========================================\n  Files         827      823       -4   \n  Lines       39850    39583     -267   \n  Branches     5396     5369      -27   \n==========================================\n- Hits        27638    27510     -128   \n+ Misses      10354    10231     -123   \n+ Partials     1858     1842      -16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 67.27% <\u00f8> (-1.7%) | :arrow_down: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 85.91% <\u00f8> (+1.3%) | :arrow_up: |\n| ...kedin/pinot/core/segment/index/loader/Loaders.java | 88.88% <100%> (-0.31%) | :arrow_down: |\n| ...din/pinot/core/startree/StarTreeBuilderConfig.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/segment/index/IndexSegmentImpl.java | 49.33% <100%> (\u00f8) | :arrow_up: |\n| ...ot/core/operator/filter/StarTreeIndexOperator.java | 84.45% <100%> (\u00f8) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.04% <100%> (-0.06%) | :arrow_down: |\n| .../linkedin/pinot/core/startree/OffHeapStarTree.java | 58.1% <21.21%> (\u00f8) | |\n| ...kedin/pinot/core/startree/OffHeapStarTreeNode.java | 83.63% <83.63%> (\u00f8) | |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d5014e2...43cb91b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b220d7f). Click here to learn what that means.\nThe diff coverage is 51.21%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2070   +/-\n=========================================\n  Coverage          ?   69.56%         \n=========================================\n  Files             ?      826         \n  Lines             ?    39622         \n  Branches          ?     5373         \n=========================================\n  Hits              ?    27564         \n  Misses            ?    10212         \n  Partials          ?     1846\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.26% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.06% <0%> (\u00f8) | |\n| ...pinot/core/data/readers/CSVRecordReaderConfig.java | 0% <0%> (\u00f8) | |\n| ...ava/com/linkedin/pinot/startree/hll/HllConfig.java | 94.44% <0%> (\u00f8) | |\n| ...kedin/pinot/core/data/readers/CSVRecordReader.java | 0% <0%> (\u00f8) | |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.04% <100%> (\u00f8) | |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 71.27% <100%> (\u00f8) | |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 86.95% <100%> (\u00f8) | |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.12% <77.77%> (\u00f8) | |\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 95.83% <90.9%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b220d7f...31ae198. Read the comment docs.\n. # Codecov Report\nMerging #2073 into master will increase coverage by 0.04%.\nThe diff coverage is 84.61%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2073      +/-\n=========================================\n+ Coverage   69.36%   69.4%   +0.04%   \n=========================================\n  Files         827     830       +3   \n  Lines       39677   39703      +26   \n  Branches     5379    5381       +2   \n=========================================\n+ Hits        27520   27554      +34   \n+ Misses      10313   10295      -18   \n- Partials     1844    1854      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/controller/ControllerConf.java | 45.13% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 59.37% <100%> (+0.51%) | :arrow_up: |\n| ...ller/api/resources/PinotSchemaRestletResource.java | 44.44% <100%> (+4.14%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.4% <100%> (+0.07%) | :arrow_up: |\n| ...i/events/DefaultMetadataChangeNotifierFactory.java | 100% <100%> (\u00f8) | |\n| ...ller/api/events/DefaultMetadataChangeNotifier.java | 66.66% <66.66%> (\u00f8) | |\n| ...ller/api/events/MetadataChangeNotifierFactory.java | 75% <75%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8746388...36135c0. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@7824a5f). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2083   +/-\n=========================================\n  Coverage          ?   69.39%         \n=========================================\n  Files             ?      827         \n  Lines             ?    39678         \n  Branches          ?     5379         \n=========================================\n  Hits              ?    27536         \n  Misses            ?    10301         \n  Partials          ?     1841\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7824a5f...99b1706. Read the comment docs.\n. # Codecov Report\nMerging #2085 into master will increase coverage by 0.12%.\nThe diff coverage is 92.8%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2085      +/-\n==========================================\n+ Coverage   69.69%   69.82%   +0.12%   \n==========================================\n  Files         830      827       -3   \n  Lines       39370    39255     -115   \n  Branches     5292     5277      -15   \n==========================================\n- Hits        27439    27408      -31   \n+ Misses      10106    10038      -68   \n+ Partials     1825     1809      -16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 69.56% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/core/operator/blocks/BitmapBlock.java | 100% <100%> (+33.33%) | :arrow_up: |\n| ...java/com/linkedin/pinot/core/common/Predicate.java | 84.21% <100%> (+0.42%) | :arrow_up: |\n| ...rator/filter/predicate/BasePredicateEvaluator.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...a/com/linkedin/pinot/core/plan/FilterPlanNode.java | 93.61% <100%> (-0.98%) | :arrow_down: |\n| ...kedin/pinot/common/utils/request/RequestUtils.java | 86.4% <77.77%> (+7.37%) | :arrow_up: |\n| ...inot/core/operator/filter/FilterOperatorUtils.java | 84% <84%> (\u00f8) | |\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 81.25% <91.66%> (+2.08%) | :arrow_up: |\n| .../pinot/core/operator/docidsets/BitmapDocIdSet.java | 96.96% <96.42%> (+17.55%) | :arrow_up: |\n| ...rator/filter/StarTreeIndexBasedFilterOperator.java | 96.98% <96.98%> (\u00f8) | |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1b5fd87...2f3a680. Read the comment docs.\n. # Codecov Report\nMerging #2086 into master will increase coverage by 0.1%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2086     +/-\n=========================================\n+ Coverage   69.28%   69.39%   +0.1%   \n=========================================\n  Files         827      827           \n  Lines       39678    39677      -1   \n  Branches     5379     5379           \n=========================================\n+ Hits        27492    27534     +42   \n+ Misses      10336    10297     -39   \n+ Partials     1850     1846      -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/pql/parsers/Pql2AstListener.java | 88.67% <\u00f8> (-0.08%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-12.91%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.17% <0%> (-8.78%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 31.34% <0%> (-5.48%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.47% <0%> (-5.27%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.17% <0%> (-3.45%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 56.91% <0%> (-3.26%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8f7413...94c290c. Read the comment docs.\n. # Codecov Report\nMerging #2099 into master will increase coverage by 0.24%.\nThe diff coverage is 80.95%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2099      +/-\n==========================================\n+ Coverage   69.39%   69.63%   +0.24%   \n==========================================\n  Files         830      827       -3   \n  Lines       39702    39593     -109   \n  Branches     5381     5372       -9   \n==========================================\n+ Hits        27550    27570      +20   \n+ Misses      10302    10178     -124   \n+ Partials     1850     1845       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/operator/MCombineGroupByOperator.java | 75.28% <\u00f8> (+0.83%) | :arrow_up: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 79.45% <\u00f8> (+1.07%) | :arrow_up: |\n| ...linkedin/pinot/core/operator/MCombineOperator.java | 61.85% <\u00f8> (+0.63%) | :arrow_up: |\n| ...nkedin/pinot/core/operator/filter/AndOperator.java | 96% <\u00f8> (-0.16%) | :arrow_down: |\n| ...re/operator/filter/MatchEntireSegmentOperator.java | 75% <\u00f8> (\u00f8) | :arrow_up: |\n| ...edin/pinot/core/operator/blocks/DocIdSetBlock.java | 63.63% <\u00f8> (+5.3%) | :arrow_up: |\n| ...erator/blocks/MatchEntireSegmentDocIdSetBlock.java | 100% <\u00f8> (+16.66%) | :arrow_up: |\n| ...core/operator/blocks/CompositeBaseFilterBlock.java | 100% <\u00f8> (+11.11%) | :arrow_up: |\n| ...re/segment/index/data/source/ColumnDataSource.java | 97.29% <\u00f8> (-0.08%) | :arrow_down: |\n| .../pinot/core/operator/filter/CompositeOperator.java | 50% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 60 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ba9c763...e145287. Read the comment docs.\n. # Codecov Report\nMerging #2102 into master will decrease coverage by 0.11%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2102      +/-\n==========================================\n- Coverage   69.88%   69.76%   -0.12%   \n==========================================\n  Files         824      826       +2   \n  Lines       39052    39184     +132   \n  Branches     5246     5265      +19   \n==========================================\n+ Hits        27290    27338      +48   \n- Misses       9966    10041      +75   \n- Partials     1796     1805       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gregation/function/AggregationFunctionFactory.java | 76.59% <100%> (+0.68%) | :arrow_up: |\n| ...ot/core/plan/MetadataBasedAggregationPlanNode.java | 35.71% <100%> (\u00f8) | :arrow_up: |\n| ...erator/query/MetadataBasedAggregationOperator.java | 57.57% <15.38%> (-27.43%) | :arrow_down: |\n| .../core/plan/DictionaryBasedAggregationPlanNode.java | 73.33% <73.33%> (\u00f8) | |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 84.05% <82.05%> (-7.61%) | :arrow_down: |\n| ...ator/query/DictionaryBasedAggregationOperator.java | 89.28% <89.28%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-12.91%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fcf1a26...1a3032c. Read the comment docs.\n. # Codecov Report\nMerging #2106 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2106      +/-\n==========================================\n+ Coverage   69.52%   69.53%   +<.01%   \n==========================================\n  Files         827      827            \n  Lines       39593    39588       -5   \n  Branches     5372     5372            \n==========================================\n- Hits        27529    27528       -1   \n+ Misses      10218    10214       -4   \n  Partials     1846     1846\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...va/com/linkedin/pinot/client/GroupByResultSet.java | 25.53% <100%> (+0.53%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-20%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 43.9% <0%> (-2.44%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7cabeaa...4ddfc49. Read the comment docs.\n. # Codecov Report\nMerging #2112 into master will increase coverage by 0.16%.\nThe diff coverage is 89.26%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2112      +/-\n=========================================\n+ Coverage   69.53%   69.7%   +0.16%   \n=========================================\n  Files         828     830       +2   \n  Lines       39605   39370     -235   \n  Branches     5374    5292      -82   \n=========================================\n- Hits        27541   27444      -97   \n+ Misses      10215   10102     -113   \n+ Partials     1849    1824      -25\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/core/operator/blocks/OrBlock.java | 62.5% <\u00f8> (+6.94%) | :arrow_up: |\n| ...me/impl/dictionary/IntOnHeapMutableDictionary.java | 95.55% <\u00f8> (-0.19%) | :arrow_down: |\n| ...gment/index/readers/ImmutableDictionaryReader.java | 93.06% <\u00f8> (\u00f8) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 95.55% <\u00f8> (+6.19%) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <\u00f8> (-7.43%) | :arrow_down: |\n| ...impl/dictionary/StringOnHeapMutableDictionary.java | 90.9% <\u00f8> (-0.4%) | :arrow_down: |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 94.54% <\u00f8> (-0.2%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <\u00f8> (-1.09%) | :arrow_down: |\n| ...in/pinot/core/operator/blocks/ProjectionBlock.java | 73.33% <\u00f8> (+4.58%) | :arrow_up: |\n| ...in/pinot/core/operator/blocks/MultiValueBlock.java | 75% <\u00f8> (+8.33%) | :arrow_up: |\n| ... and 59 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ee9e549...faf1f1d. Read the comment docs.\n. # Codecov Report\nMerging #2113 into master will increase coverage by 0.09%.\nThe diff coverage is 83.87%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2113      +/-\n==========================================\n+ Coverage    69.5%   69.59%   +0.09%   \n==========================================\n  Files         827      828       +1   \n  Lines       39601    39605       +4   \n  Branches     5374     5374            \n==========================================\n+ Hits        27526    27565      +39   \n+ Misses      10231    10190      -41   \n- Partials     1844     1850       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/operator/docidsets/SortedDocIdSet.java | 71.42% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/operator/blocks/EmptyFilterBlock.java | 100% <100%> (\u00f8) | |\n| ...a/com/linkedin/pinot/core/plan/FilterPlanNode.java | 90.69% <100%> (\u00f8) | :arrow_up: |\n| ...e/operator/docidsets/EmptyFilterBlockDocIdSet.java | 72.72% <72.72%> (\u00f8) | |\n| ...erator/dociditerators/EmptyBlockDocIdIterator.java | 85.71% <80%> (\u00f8) | |\n| ...inot/core/operator/filter/EmptyFilterOperator.java | 77.77% <83.33%> (+7.77%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 84.21% <0%> (-10.53%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a36e67d...a4b6f8e. Read the comment docs.\n. # Codecov Report\nMerging #2131 into master will decrease coverage by 0.07%.\nThe diff coverage is 90.9%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2131      +/-\n==========================================\n- Coverage   69.81%   69.73%   -0.08%   \n==========================================\n  Files         827      826       -1   \n  Lines       39255    39157      -98   \n  Branches     5277     5277            \n==========================================\n- Hits        27404    27305      -99   \n+ Misses      10044    10040       -4   \n- Partials     1807     1812       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 83.05% <\u00f8> (+1.08%) | :arrow_up: |\n| .../linkedin/pinot/core/operator/UResultOperator.java | 80% <\u00f8> (+13.33%) | :arrow_up: |\n| ...re/segment/index/data/source/ColumnDataSource.java | 97.14% <\u00f8> (-0.16%) | :arrow_down: |\n| ...linkedin/pinot/core/operator/MCombineOperator.java | 62.92% <\u00f8> (+1.06%) | :arrow_up: |\n| .../core/operator/filter/ScanBasedFilterOperator.java | 84% <\u00f8> (-1.19%) | :arrow_down: |\n| ...pinot/core/operator/query/AggregationOperator.java | 94.44% <\u00f8> (+8.08%) | :arrow_up: |\n| ...core/operator/query/MSelectionOrderByOperator.java | 85.29% <\u00f8> (+3.71%) | :arrow_up: |\n| ...re/operator/filter/MatchEntireSegmentOperator.java | 66.66% <\u00f8> (-8.34%) | :arrow_down: |\n| ...edin/pinot/core/plan/InstanceResponsePlanNode.java | 64.28% <\u00f8> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/operator/MProjectionOperator.java | 86.36% <\u00f8> (-4.27%) | :arrow_down: |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 774f873...1f4300d. Read the comment docs.\n. # Codecov Report\nMerging #2133 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2133      +/-\n==========================================\n- Coverage    69.8%   69.79%   -0.01%   \n==========================================\n  Files         826      826            \n  Lines       39157    39159       +2   \n  Branches     5277     5277            \n==========================================\n- Hits        27333    27331       -2   \n- Misses      10019    10026       +7   \n+ Partials     1805     1802       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 96.15% <100%> (+0.32%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-7.28%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 92.2% <0%> (+1.29%) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 98.68% <0%> (+1.31%) | :arrow_up: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f251e27...5f5f901. Read the comment docs.\n. # Codecov Report\nMerging #2134 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2134      +/-\n==========================================\n+ Coverage   69.73%   69.75%   +0.01%   \n==========================================\n  Files         826      826            \n  Lines       39159    39160       +1   \n  Branches     5277     5277            \n==========================================\n+ Hits        27309    27316       +7   \n- Misses      10034    10037       +3   \n+ Partials     1816     1807       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 96.29% <100%> (+0.14%) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-14.55%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-11.12%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <0%> (-2.13%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.2% <0%> (-1.73%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 97.36% <0%> (-1.32%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b641e2a...6b62127. Read the comment docs.\n. # Codecov Report\nMerging #2137 into master will decrease coverage by 0.08%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2137      +/-\n==========================================\n- Coverage   69.81%   69.73%   -0.09%   \n==========================================\n  Files         826      826            \n  Lines       39160    39151       -9   \n  Branches     5277     5272       -5   \n==========================================\n- Hits        27340    27302      -38   \n- Misses      10017    10040      +23   \n- Partials     1803     1809       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/core/startree/StarTreeDataTable.java | 97.82% <\u00f8> (+3.82%) | :arrow_up: |\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 85.03% <71.42%> (-0.23%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-15.16%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 90% <0%> (-10%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-5.56%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 31f9a2b...a573334. Read the comment docs.\n. # Codecov Report\nMerging #2145 into master will increase coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2145      +/-\n==========================================\n+ Coverage   69.79%   69.85%   +0.05%   \n==========================================\n  Files         826      826            \n  Lines       39151    39152       +1   \n  Branches     5272     5272            \n==========================================\n+ Hits        27325    27348      +23   \n+ Misses      10023     9997      -26   \n- Partials     1803     1807       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 57.91% <0%> (-0.23%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 90% <0%> (-10%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.28% <0%> (-2.82%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <0%> (-2.13%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 56f8920...cbcaf65. Read the comment docs.\n. # Codecov Report\nMerging #2153 into master will increase coverage by 0.07%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2153      +/-\n==========================================\n+ Coverage   69.76%   69.83%   +0.07%   \n==========================================\n  Files         826      826            \n  Lines       39147    39135      -12   \n  Branches     5272     5269       -3   \n==========================================\n+ Hits        27310    27331      +21   \n+ Misses      10030     9999      -31   \n+ Partials     1807     1805       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 92.85% <0%> (-3.44%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 75% <0%> (+1.22%) | :arrow_up: |\n| ...edin/pinot/core/minion/BackfillDateTimeColumn.java | 40.42% <0%> (+0.42%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.04% <100%> (\u00f8) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 60.08% <75%> (+2.16%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.58%) | :arrow_down: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e49849f...5137860. Read the comment docs.\n. # Codecov Report\nMerging #2162 into master will decrease coverage by 11.07%.\nThe diff coverage is 26.82%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2162       +/-\n===========================================\n- Coverage   69.76%   58.69%   -11.08%   \n===========================================\n  Files         826      826             \n  Lines       39135    39170       +35   \n  Branches     5269     5271        +2   \n===========================================\n- Hits        27302    22989     -4313   \n- Misses      10023    14529     +4506   \n+ Partials     1810     1652      -158\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/core/common/MinionConstants.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 27.86% <\u00f8> (-8.2%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 76.94% <0%> (-2.86%) | :arrow_down: |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 0% <0%> (-75.68%) | :arrow_down: |\n| .../pinot/core/query/utils/SimpleSegmentMetadata.java | 36.53% <0%> (-0.72%) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 2.05% <0%> (-48.47%) | :arrow_down: |\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 9.09% <0%> (-77.95%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 16.74% <0%> (-14.6%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 50.66% <19.04%> (-10.27%) | :arrow_down: |\n| ...mon/metadata/segment/OfflineSegmentZKMetadata.java | 63.23% <70%> (-0.56%) | :arrow_down: |\n| ... and 283 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 646b444...96d13a2. Read the comment docs.\n. # Codecov Report\nMerging #2170 into master will increase coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2170      +/-\n==========================================\n+ Coverage   69.76%   69.82%   +0.06%   \n==========================================\n  Files         826      826            \n  Lines       39135    39134       -1   \n  Branches     5269     5269            \n==========================================\n+ Hits        27302    27326      +24   \n+ Misses      10023    10009      -14   \n+ Partials     1810     1799      -11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 31.5% <0%> (+0.15%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <0%> (-2.13%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f4119a5...c5b0eeb. Read the comment docs.\n. # Codecov Report\nMerging #2171 into master will increase coverage by 0.02%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2171      +/-\n==========================================\n+ Coverage   69.76%   69.79%   +0.02%   \n==========================================\n  Files         826      824       -2   \n  Lines       39135    39141       +6   \n  Branches     5269     5272       +3   \n==========================================\n+ Hits        27302    27317      +15   \n+ Misses      10023    10017       -6   \n+ Partials     1810     1807       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 84.93% <80%> (-5.21%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 74.19% <0%> (-6.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...core/retention/strategy/TimeRetentionStrategy.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 97.36% <0%> (-1.32%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f4119a5...2af1187. Read the comment docs.\n. # Codecov Report\nMerging #2177 into master will decrease coverage by 0.01%.\nThe diff coverage is 47.05%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2177      +/-\n==========================================\n- Coverage   69.78%   69.76%   -0.02%   \n==========================================\n  Files         826      824       -2   \n  Lines       39134    39139       +5   \n  Branches     5269     5270       +1   \n==========================================\n- Hits        27308    27304       -4   \n- Misses      10018    10024       +6   \n- Partials     1808     1811       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/api/resources/PqlQueryResource.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../controller/helix/ControllerRequestURLBuilder.java | 68.51% <100%> (+0.59%) | :arrow_up: |\n| ...inkedin/pinot/common/exception/QueryException.java | 87.69% <100%> (\u00f8) | :arrow_up: |\n| ...t/controller/api/access/AllowAllAccessFactory.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 50.74% <57.14%> (+0.23%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-20%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 058b3e2...aa5f602. Read the comment docs.\n. # Codecov Report\nMerging #2182 into master will decrease coverage by <.01%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2182      +/-\n==========================================\n- Coverage   69.78%   69.78%   -0.01%   \n==========================================\n  Files         824      824            \n  Lines       39141    39145       +4   \n  Branches     5272     5272            \n==========================================\n+ Hits        27314    27316       +2   \n- Misses      10023    10024       +1   \n- Partials     1804     1805       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 87.23% <100%> (+0.27%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.12% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 70.83% <50%> (-0.45%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-8.89%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 74.19% <0%> (-6.46%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 56.38% <0%> (-6.39%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a41215a...889afde. Read the comment docs.\n. # Codecov Report\nMerging #2187 into master will increase coverage by 0.05%.\nThe diff coverage is 51.04%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2187      +/-\n==========================================\n+ Coverage   69.74%   69.79%   +0.05%   \n==========================================\n  Files         824      823       -1   \n  Lines       39145    39052      -93   \n  Branches     5272     5246      -26   \n==========================================\n- Hits        27300    27257      -43   \n+ Misses      10041     9994      -47   \n+ Partials     1804     1801       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 60.08% <\u00f8> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/data/readers/CSVRecordReader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/data/readers/RecordReaderUtils.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/core/data/readers/JSONRecordReader.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/realtime/impl/kafka/KafkaJSONMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...pinot/core/data/readers/CSVRecordReaderConfig.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/core/data/readers/FileFormat.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...creator/RecordReaderSegmentCreationDataSource.java | 70.83% <100%> (+1.13%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.88% <100%> (-0.16%) | :arrow_down: |\n| ...time/impl/kafka/AvroRecordToPinotRowGenerator.java | 100% <100%> (+16.12%) | :arrow_up: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 73c9be1...dabb1eb. Read the comment docs.\n. # Codecov Report\nMerging #2188 into master will increase coverage by 0.01%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2188      +/-\n==========================================\n+ Coverage   69.74%   69.75%   +0.01%   \n==========================================\n  Files         824      825       +1   \n  Lines       39145    39145            \n  Branches     5272     5272            \n==========================================\n+ Hits        27300    27304       +4   \n+ Misses      10041    10028      -13   \n- Partials     1804     1813       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/core/common/predicate/InPredicate.java | 100% <\u00f8> (+33.33%) | :arrow_up: |\n| ...in/pinot/core/common/predicate/NotInPredicate.java | 100% <\u00f8> (+25%) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 92.06% <100%> (\u00f8) | :arrow_up: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 91.66% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/common/predicate/BaseInPredicate.java | 66.66% <66.66%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-5.46%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 73c9be1...917f0aa. Read the comment docs.\n. # Codecov Report\nMerging #2200 into master will decrease coverage by 0.05%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2200      +/-\n==========================================\n- Coverage   69.88%   69.82%   -0.06%   \n==========================================\n  Files         824      824            \n  Lines       39052    39053       +1   \n  Branches     5246     5246            \n==========================================\n- Hits        27290    27268      -22   \n- Misses       9966     9988      +22   \n- Partials     1796     1797       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 84.72% <\u00f8> (-0.21%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <0%> (-0.59%) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 59.37% <100%> (\u00f8) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 57.25% <100%> (+0.34%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-12.91%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aad0a45...0cf4271. Read the comment docs.\n. # Codecov Report\nMerging #2201 into master will decrease coverage by 0.16%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2201      +/-\n==========================================\n- Coverage    69.8%   69.63%   -0.17%   \n==========================================\n  Files         824      824            \n  Lines       39091    39106      +15   \n  Branches     5250     5251       +1   \n==========================================\n- Hits        27287    27231      -56   \n- Misses      10008    10072      +64   \n- Partials     1796     1803       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/core/common/MinionConstants.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 87.27% <100%> (+0.23%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 32.51% <100%> (+1.01%) | :arrow_up: |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 76.31% <100%> (+0.64%) | :arrow_up: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 39.13% <0%> (-36.24%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 66.66% <0%> (-14.62%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 01a926c...2f47f35. Read the comment docs.\n. # Codecov Report\nMerging #2202 into master will decrease coverage by 0.08%.\nThe diff coverage is 63.63%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2202      +/-\n==========================================\n- Coverage   69.88%   69.79%   -0.09%   \n==========================================\n  Files         824      824            \n  Lines       39052    39063      +11   \n  Branches     5246     5246            \n==========================================\n- Hits        27290    27263      -27   \n- Misses       9966     9999      +33   \n- Partials     1796     1801       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.06% <\u00f8> (\u00f8) | :arrow_up: |\n| ...mon/metadata/segment/OfflineSegmentZKMetadata.java | 63.76% <63.63%> (-0.03%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-7.28%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed94fc7...f0b0403. Read the comment docs.\n. # Codecov Report\nMerging #2203 into master will decrease coverage by 11.12%.\nThe diff coverage is 25.49%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2203       +/-\n===========================================\n- Coverage   69.88%   58.75%   -11.13%   \n===========================================\n  Files         824      824             \n  Lines       39052    39070       +18   \n  Branches     5246     5246             \n===========================================\n- Hits        27290    22957     -4333   \n- Misses       9966    14470     +4504   \n+ Partials     1796     1643      -153\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 4.76% <0%> (-45.99%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 51.05% <37.14%> (-9.88%) | :arrow_down: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 0% <0%> (-100%) | :arrow_down: |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...n/pinot/core/operator/blocks/EmptyFilterBlock.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionContext.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 281 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed94fc7...0b1668a. Read the comment docs.\n. # Codecov Report\nMerging #2204 into master will decrease coverage by 0.01%.\nThe diff coverage is 85.29%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2204      +/-\n==========================================\n- Coverage    69.8%   69.78%   -0.02%   \n==========================================\n  Files         824      826       +2   \n  Lines       39091    39136      +45   \n  Branches     5250     5252       +2   \n==========================================\n+ Hits        27287    27313      +26   \n- Misses      10008    10012       +4   \n- Partials     1796     1811      +15\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/core/io/compression/PassThroughDecompressor.java | 100% <100%> (\u00f8) | |\n| .../reader/impl/v1/VarByteChunkSingleValueReader.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...riter/impl/v1/FixedByteChunkSingleValueWriter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...not/core/io/compression/PassThroughCompressor.java | 100% <100%> (\u00f8) | |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.3% <100%> (+0.03%) | :arrow_up: |\n| .../impl/fwd/SingleValueFixedByteRawIndexCreator.java | 91.66% <100%> (+27.77%) | :arrow_up: |\n| .../linkedin/pinot/core/minion/RawIndexConverter.java | 60.97% <100%> (\u00f8) | :arrow_up: |\n| .../writer/impl/v1/VarByteChunkSingleValueWriter.java | 96.55% <100%> (\u00f8) | :arrow_up: |\n| ...or/impl/fwd/SingleValueVarByteRawIndexCreator.java | 57.14% <100%> (-2.86%) | :arrow_down: |\n| .../io/reader/impl/v1/BaseChunkSingleValueReader.java | 94.11% <100%> (+2.94%) | :arrow_up: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 01a926c...e1112a0. Read the comment docs.\n. # Codecov Report\nMerging #2207 into master will decrease coverage by 0.07%.\nThe diff coverage is 19.04%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2207      +/-\n==========================================\n- Coverage   69.89%   69.82%   -0.08%   \n==========================================\n  Files         824      824            \n  Lines       39070    39091      +21   \n  Branches     5246     5250       +4   \n==========================================\n- Hits        27308    27294      -14   \n- Misses       9963     9997      +34   \n- Partials     1799     1800       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 71.71% <19.04%> (-8.45%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 90% <0%> (-10%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-7.28%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 31.5% <0%> (-5.5%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a44ceea...7362edc. Read the comment docs.\n. # Codecov Report\nMerging #2210 into master will decrease coverage by 0.05%.\nThe diff coverage is 23.46%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2210      +/-\n==========================================\n- Coverage    69.8%   69.75%   -0.06%   \n==========================================\n  Files         824      828       +4   \n  Lines       39091    39279     +188   \n  Branches     5250     5269      +19   \n==========================================\n+ Hits        27287    27398     +111   \n- Misses      10008    10087      +79   \n+ Partials     1796     1794       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/common/segment/fetcher/NoOpFetcher.java | 0% <0%> (\u00f8) | |\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 88.88% <100%> (+4.16%) | :arrow_up: |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 20% <20%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 33.49% <41.17%> (+1.99%) | :arrow_up: |\n| ...erator/query/MetadataBasedAggregationOperator.java | 57.57% <0%> (-27.43%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 84.05% <0%> (-7.61%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ... and 30 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 690d1dc...f788adb. Read the comment docs.\n. # Codecov Report\nMerging #2216 into master will decrease coverage by 0.08%.\nThe diff coverage is 46.23%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2216      +/-\n==========================================\n- Coverage   69.82%   69.74%   -0.09%   \n==========================================\n  Files         830      830            \n  Lines       39324    39367      +43   \n  Branches     5271     5279       +8   \n==========================================\n- Hits        27459    27455       -4   \n- Misses      10064    10105      +41   \n- Partials     1801     1807       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/controller/ControllerConf.java | 43.96% <0%> (-1.17%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 75.57% <100%> (-0.81%) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 50.37% <42.42%> (-2.01%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.21% <50%> (+0.27%) | :arrow_up: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-15.16%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f04a17a...976fedd. Read the comment docs.\n. # Codecov Report\nMerging #2221 into master will decrease coverage by 0.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2221      +/-\n==========================================\n- Coverage   69.83%   69.71%   -0.12%   \n==========================================\n  Files         828      828            \n  Lines       39279    39279            \n  Branches     5269     5269            \n==========================================\n- Hits        27430    27383      -47   \n- Misses      10048    10092      +44   \n- Partials     1801     1804       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-31.58%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-20%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...r/api/resources/WebApplicationExceptionMapper.java | 70.58% <0%> (-11.77%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 33.49% <0%> (-5.42%) | :arrow_down: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1e53bf2...2f8e322. Read the comment docs.\n. # Codecov Report\nMerging #2238 into master will increase coverage by 0.05%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2238      +/-\n==========================================\n+ Coverage   69.82%   69.87%   +0.05%   \n==========================================\n  Files         830      830            \n  Lines       39324    39321       -3   \n  Branches     5271     5272       +1   \n==========================================\n+ Hits        27459    27477      +18   \n+ Misses      10064    10041      -23   \n- Partials     1801     1803       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 86.95% <80%> (-1.94%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 61.29% <0%> (-19.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 84.44% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 33c864c...94ca17f. Read the comment docs.\n. # Codecov Report\nMerging #2253 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2253      +/-\n==========================================\n+ Coverage   69.75%   69.79%   +0.03%   \n==========================================\n  Files         830      830            \n  Lines       39365    39367       +2   \n  Branches     5280     5280            \n==========================================\n+ Hits        27460    27476      +16   \n+ Misses      10094    10087       -7   \n+ Partials     1811     1804       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 91.11% <100%> (+0.41%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 74.19% <0%> (-6.46%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (\u00f8) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fb99f9d...1075849. Read the comment docs.\n. # Codecov Report\nMerging #2257 into master will increase coverage by 0.03%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2257      +/-\n==========================================\n+ Coverage   69.91%   69.95%   +0.03%   \n==========================================\n  Files         834      835       +1   \n  Lines       39476    39486      +10   \n  Branches     5294     5295       +1   \n==========================================\n+ Hits        27601    27622      +21   \n+ Misses      10053    10046       -7   \n+ Partials     1822     1818       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 89.18% <100%> (-0.56%) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 51.28% <77.77%> (-0.23%) | :arrow_down: |\n| ...pinot/common/utils/PinotMinionUserAgentHeader.java | 80% <80%> (\u00f8) | |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5822be2...ea874f7. Read the comment docs.\n. # Codecov Report\nMerging #2258 into master will increase coverage by 0.01%.\nThe diff coverage is 89.74%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2258      +/-\n==========================================\n+ Coverage   69.78%   69.79%   +0.01%   \n==========================================\n  Files         830      831       +1   \n  Lines       39367    39380      +13   \n  Branches     5280     5280            \n==========================================\n+ Hits        27472    27486      +14   \n+ Misses      10089    10081       -8   \n- Partials     1806     1813       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/common/config/PinotTaskConfig.java | 64.7% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/minion/executor/BaseTaskExecutor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionContext.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 50.37% <100%> (+0.75%) | :arrow_up: |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 100% <100%> (+23.68%) | :arrow_up: |\n| .../pinot/minion/taskfactory/TaskFactoryRegistry.java | 75.55% <80%> (-2.23%) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 91.66% <85.71%> (+0.55%) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 90% <90%> (\u00f8) | |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8a5be9b...64098f2. Read the comment docs.\n. # Codecov Report\nMerging #2266 into master will decrease coverage by 0.17%.\nThe diff coverage is 78.26%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2266      +/-\n==========================================\n- Coverage   69.79%   69.62%   -0.18%   \n==========================================\n  Files         831      834       +3   \n  Lines       39380    39476      +96   \n  Branches     5280     5294      +14   \n==========================================\n- Hits        27486    27485       -1   \n- Misses      10088    10184      +96   \n- Partials     1806     1807       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/core/data/readers/JSONRecordReader.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/data/readers/CSVRecordReader.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...inot/core/data/readers/GenericRowRecordReader.java | 100% <\u00f8> (\u00f8) | |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 57.37% <\u00f8> (+4.91%) | :arrow_up: |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 91.3% <\u00f8> (\u00f8) | :arrow_up: |\n| ...edin/pinot/core/minion/BackfillDateTimeColumn.java | 55.93% <0%> (+5.93%) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionContext.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/minion/executor/TaskExecutorRegistry.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ore/realtime/impl/FileBasedStreamProviderImpl.java | 57.89% <100%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/segment/StarTreeMetadata.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 43 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 819677a...d2671e8. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@a3cb045). Click here to learn what that means.\nThe diff coverage is 25%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2272   +/-\n=========================================\n  Coverage          ?   69.82%         \n=========================================\n  Files             ?      834         \n  Lines             ?    39476         \n  Branches          ?     5294         \n=========================================\n  Hits              ?    27563         \n  Misses            ?    10091         \n  Partials          ?     1822\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 75% <25%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a3cb045...3e927ad. Read the comment docs.\n. # Codecov Report\nMerging #2284 into master will decrease coverage by 0.04%.\nThe diff coverage is 70.27%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2284      +/-\n==========================================\n- Coverage   69.91%   69.87%   -0.05%   \n==========================================\n  Files         834      839       +5   \n  Lines       39476    39662     +186   \n  Branches     5294     5335      +41   \n==========================================\n+ Hits        27601    27712     +111   \n- Misses      10053    10121      +68   \n- Partials     1822     1829       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gation/function/PercentileAggregationFunction.java | 68.85% <\u00f8> (-0.99%) | :arrow_down: |\n| ...ion/function/DistinctCountAggregationFunction.java | 33.92% <\u00f8> (-1.16%) | :arrow_down: |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 78.43% <\u00f8> (-0.82%) | :arrow_down: |\n| ...ion/function/PercentileEstAggregationFunction.java | 70.17% <\u00f8> (-1.02%) | :arrow_down: |\n| ...y/aggregation/function/SumAggregationFunction.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...gregation/function/FastHLLAggregationFunction.java | 60.65% <\u00f8> (-1.25%) | :arrow_down: |\n| .../function/DistinctCountHLLAggregationFunction.java | 34.23% <\u00f8> (-1.17%) | :arrow_down: |\n| ...aggregation/function/CountAggregationFunction.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 95.83% <\u00f8> (-0.17%) | :arrow_down: |\n| ...pinot/core/operator/query/AggregationOperator.java | 94.73% <100%> (+0.29%) | :arrow_up: |\n| ... and 80 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5822be2...0045026. Read the comment docs.\n. # Codecov Report\nMerging #2285 into master will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2285      +/-\n==========================================\n+ Coverage   69.85%   69.89%   +0.04%   \n==========================================\n  Files         835      835            \n  Lines       39486    39489       +3   \n  Branches     5295     5295            \n==========================================\n+ Hits        27581    27600      +19   \n+ Misses      10080    10076       -4   \n+ Partials     1825     1813      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ava/com/linkedin/pinot/startree/hll/HllConfig.java | 94.87% <100%> (+0.42%) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 58.51% <0%> (-6.39%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-2.78%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.37% <0%> (-0.19%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.44% <0%> (+1.12%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 77.09% <0%> (+1.52%) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 46.34% <0%> (+1.62%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8e5befb...6d5db62. Read the comment docs.\n. # Codecov Report\nMerging #2287 into master will increase coverage by 0.04%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2287      +/-\n==========================================\n+ Coverage   69.85%   69.89%   +0.04%   \n==========================================\n  Files         835      835            \n  Lines       39486    39468      -18   \n  Branches     5295     5293       -2   \n==========================================\n+ Hits        27581    27585       +4   \n+ Misses      10080    10062      -18   \n+ Partials     1825     1821       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.7% <\u00f8> (+0.39%) | :arrow_up: |\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 32.14% <\u00f8> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 75% <\u00f8> (-3.05%) | :arrow_down: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 78.46% <100%> (\u00f8) | :arrow_up: |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 80.68% <50%> (+1.43%) | :arrow_up: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-10%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8e5befb...0350ba6. Read the comment docs.\n. # Codecov Report\nMerging #2289 into master will decrease coverage by 0.02%.\nThe diff coverage is 42.85%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2289      +/-\n==========================================\n- Coverage   69.87%   69.85%   -0.03%   \n==========================================\n  Files         835      835            \n  Lines       39471    39478       +7   \n  Branches     5293     5295       +2   \n==========================================\n- Hits        27582    27578       -4   \n- Misses      10072    10080       +8   \n- Partials     1817     1820       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 50.91% <0%> (-0.37%) | :arrow_down: |\n| ...pinot/common/utils/PinotMinionUserAgentHeader.java | 60% <50%> (-20%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-1.73%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.04% <0%> (-1.53%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 84cfcee...9a4f895. Read the comment docs.\n. # Codecov Report\nMerging #2290 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2290      +/-\n==========================================\n+ Coverage   69.93%   69.94%   +0.01%   \n==========================================\n  Files         835      835            \n  Lines       39468    39469       +1   \n  Branches     5293     5293            \n==========================================\n+ Hits        27600    27605       +5   \n+ Misses      10060    10056       -4   \n  Partials     1808     1808\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...eaderwriter/RealtimeIndexOffHeapMemoryManager.java | 93.33% <100%> (+0.22%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-20%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-5.46%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-5.46%) | :arrow_down: |\n| ...aggregation/function/AggregationFunctionUtils.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 45.52% <0%> (-0.82%) | :arrow_down: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1cda55c...6c60506. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9f28a99). Click here to learn what that means.\nThe diff coverage is 95.74%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #2295   +/-\n========================================\n  Coverage          ?   69.9%         \n========================================\n  Files             ?     838         \n  Lines             ?   39506         \n  Branches          ?    5301         \n========================================\n  Hits              ?   27617         \n  Misses            ?   10067         \n  Partials          ?    1822\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/core/minion/BackfillDateTimeColumn.java | 55.93% <\u00f8> (\u00f8) | |\n| ...mmon/datetime/convertor/EpochToEpochConvertor.java | 100% <\u00f8> (\u00f8) | |\n| ...common/datetime/convertor/SDFToEpochConvertor.java | 100% <\u00f8> (\u00f8) | |\n| ...ransform/function/DateTimeConversionTransform.java | 76% <100%> (\u00f8) | |\n| ...t/common/datetime/convertor/SDFToSDFConvertor.java | 100% <100%> (\u00f8) | |\n| ...common/datetime/convertor/EpochToSDFConvertor.java | 100% <100%> (\u00f8) | |\n| ...n/pinot/common/data/DateTimeFormatPatternSpec.java | 100% <100%> (\u00f8) | |\n| ...t/common/datetime/convertor/DateTimeConvertor.java | 69.09% <100%> (\u00f8) | |\n| ...din/pinot/common/data/DateTimeGranularitySpec.java | 84% <100%> (\u00f8) | |\n| ...edin/pinot/common/data/DateTimeFormatUnitSpec.java | 87.5% <87.5%> (\u00f8) | |\n| ... and 1 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9f28a99...7d1bfe3. Read the comment docs.\n. # Codecov Report\nMerging #2296 into master will decrease coverage by 0.09%.\nThe diff coverage is 88.23%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2296     +/-\n=========================================\n- Coverage   69.95%   69.86%   -0.1%   \n=========================================\n  Files         835      836      +1   \n  Lines       39472    39494     +22   \n  Branches     5294     5296      +2   \n=========================================\n- Hits        27614    27592     -22   \n- Misses      10044    10083     +39   \n- Partials     1814     1819      +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 77.61% <100%> (+2.61%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.7% <100%> (\u00f8) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 61.47% <77.77%> (+0.59%) | :arrow_up: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 68.42% <0%> (-15.79%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-7.28%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-4.55%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ee3ffa8...f435daa. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b97a764). Click here to learn what that means.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2299   +/-\n=========================================\n  Coverage          ?   70.16%         \n=========================================\n  Files             ?      841         \n  Lines             ?    39516         \n  Branches          ?     5311         \n=========================================\n  Hits              ?    27725         \n  Misses            ?     9966         \n  Partials          ?     1825\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 94.11% <100%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.9% <42.85%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b97a764...6407777. Read the comment docs.\n. # Codecov Report\nMerging #2300 into master will increase coverage by 0.23%.\nThe diff coverage is 43.95%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2300      +/-\n==========================================\n+ Coverage   69.92%   70.16%   +0.23%   \n==========================================\n  Files         838      847       +9   \n  Lines       39506    41191    +1685   \n  Branches     5301     5624     +323   \n==========================================\n+ Hits        27624    28900    +1276   \n- Misses      10068    10417     +349   \n- Partials     1814     1874      +60\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.16% <0%> (-1.02%) | :arrow_down: |\n| ...ation/function/MinMVStringAggregationFunction.java | 0% <0%> (\u00f8) | |\n| ...ation/function/MaxMVStringAggregationFunction.java | 0% <0%> (\u00f8) | |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 88.5% <100%> (+0.11%) | :arrow_up: |\n| ...core/operator/blocks/IntermediateResultsBlock.java | 72.89% <100%> (+0.51%) | :arrow_up: |\n| ...egation/function/MaxStringAggregationFunction.java | 50% <50%> (\u00f8) | |\n| ...egation/function/MinStringAggregationFunction.java | 50% <50%> (\u00f8) | |\n| ...gregation/function/AggregationFunctionFactory.java | 76.51% <75%> (-0.09%) | :arrow_down: |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 84.05% <83.33%> (\u00f8) | :arrow_up: |\n| ...ator/query/DictionaryBasedAggregationOperator.java | 91.17% <93.75%> (+1.89%) | :arrow_up: |\n| ... and 63 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4863088...df90f6e. Read the comment docs.\n. # Codecov Report\nMerging #2301 into master will increase coverage by 0.12%.\nThe diff coverage is 46.47%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2301      +/-\n==========================================\n+ Coverage   69.92%   70.04%   +0.12%   \n==========================================\n  Files         838      839       +1   \n  Lines       39506    39398     -108   \n  Branches     5301     5289      -12   \n==========================================\n- Hits        27624    27598      -26   \n+ Misses      10068     9987      -81   \n+ Partials     1814     1813       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| .../src/main/java/com/linkedin/pinot/serde/SerDe.java | 80% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (\u00f8) | |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 36.36% <0%> (-6.31%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 69.56% <100%> (\u00f8) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 89.47% <100%> (+0.28%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 56.52% <22.22%> (-11.9%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/FileDownloadUtils.java | 39.28% <39.28%> (\u00f8) | |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 50.91% <50%> (\u00f8) | :arrow_up: |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f9a143a...a00d9e3. Read the comment docs.\n. # Codecov Report\nMerging #2306 into master will increase coverage by 0.01%.\nThe diff coverage is 78.4%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2306      +/-\n==========================================\n+ Coverage   69.92%   69.94%   +0.01%   \n==========================================\n  Files         838      840       +2   \n  Lines       39506    39592      +86   \n  Branches     5301     5313      +12   \n==========================================\n+ Hits        27624    27691      +67   \n- Misses      10068    10077       +9   \n- Partials     1814     1824      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/data/readers/RecordReaderFactory.java | 38.46% <0%> (-3.21%) | :arrow_down: |\n| ...m/linkedin/pinot/core/data/readers/FileFormat.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/data/readers/RecordReaderUtils.java | 44.68% <66.66%> (+44.68%) | :arrow_up: |\n| ...ot/core/data/readers/ThriftRecordReaderConfig.java | 80% <80%> (\u00f8) | |\n| ...in/pinot/core/data/readers/ThriftRecordReader.java | 81.53% <81.53%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-14.55%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-10.91%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1caf01a...1b7e731. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@31d65f0). Click here to learn what that means.\nThe diff coverage is 69.85%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2309   +/-\n=========================================\n  Coverage          ?   70.05%         \n=========================================\n  Files             ?      841         \n  Lines             ?    39492         \n  Branches          ?     5310         \n=========================================\n  Hits              ?    27666         \n  Misses            ?     9998         \n  Partials          ?     1828\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (\u00f8) | |\n| ...ot/controller/helix/core/util/ZKMetadataUtils.java | 75% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | |\n| ...om/linkedin/pinot/core/common/MinionConstants.java | 0% <\u00f8> (\u00f8) | |\n| .../pinot/core/query/utils/SimpleSegmentMetadata.java | 36% <\u00f8> (\u00f8) | |\n| ...kedin/pinot/minion/executor/PurgeTaskExecutor.java | 75% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/FileUploadUtils.java | 65.67% <0%> (\u00f8) | |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 55.55% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 43.96% <0%> (\u00f8) | |\n| ...inot/core/segment/store/SegmentDirectoryPaths.java | 75% <100%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 31d65f0...947fa47. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@e114463). Click here to learn what that means.\nThe diff coverage is 29.41%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2314   +/-\n=========================================\n  Coverage          ?   70.13%         \n=========================================\n  Files             ?      839         \n  Lines             ?    39415         \n  Branches          ?     5291         \n=========================================\n  Hits              ?    27642         \n  Misses            ?     9964         \n  Partials          ?     1809\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 89.79% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.28% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 68.03% <38.46%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e114463...89754fe. Read the comment docs.\n. # Codecov Report\nMerging #2315 into master will decrease coverage by 0.09%.\nThe diff coverage is 38.88%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2315     +/-\n=========================================\n- Coverage   70.13%   70.04%   -0.1%   \n=========================================\n  Files         841      841           \n  Lines       39484    39502     +18   \n  Branches     5301     5302      +1   \n=========================================\n- Hits        27694    27670     -24   \n- Misses       9962    10006     +44   \n+ Partials     1828     1826      -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 89.79% <0%> (-1.88%) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.89% <33.33%> (-0.48%) | :arrow_down: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 68.29% <42.85%> (-3.27%) | :arrow_down: |\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/FileDownloadUtils.java | 39.28% <0%> (-35.72%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 56.52% <0%> (-17.4%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 55.55% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-5.46%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f5c3e11...6f95350. Read the comment docs.\n. # Codecov Report\nMerging #2319 into master will decrease coverage by 0.01%.\nThe diff coverage is 41.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2319      +/-\n==========================================\n- Coverage   70.09%   70.08%   -0.02%   \n==========================================\n  Files         841      841            \n  Lines       39492    39500       +8   \n  Branches     5310     5310            \n==========================================\n  Hits        27683    27683            \n- Misses       9984     9990       +6   \n- Partials     1825     1827       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 66.41% <41.66%> (-1.89%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 90% <0%> (-10%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <0%> (-2.13%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 75.57% <0%> (-1.53%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.81% <0%> (-1.42%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.37% <0%> (-0.19%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0b4a2a0...49d5e7f. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@420e6d1). Click here to learn what that means.\nThe diff coverage is 46.15%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2321   +/-\n=========================================\n  Coverage          ?   70.03%         \n=========================================\n  Files             ?      841         \n  Lines             ?    39523         \n  Branches          ?     5313         \n=========================================\n  Hits              ?    27681         \n  Misses            ?    10010         \n  Partials          ?     1832\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.09% <20%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.68% <62.5%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 420e6d1...bd0c358. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@420e6d1). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #2322   +/-\n========================================\n  Coverage          ?   70.1%         \n========================================\n  Files             ?     841         \n  Lines             ?   39512         \n  Branches          ?    5311         \n========================================\n  Hits              ?   27700         \n  Misses            ?    9991         \n  Partials          ?    1821\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/api/resources/PqlQueryResource.java | 0% <0%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 420e6d1...918560c. Read the comment docs.\n. # Codecov Report\nMerging #2324 into master will decrease coverage by <.01%.\nThe diff coverage is 67.85%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2324      +/-\n==========================================\n- Coverage   69.37%   69.36%   -0.01%   \n==========================================\n  Files         840      842       +2   \n  Lines       39485    39462      -23   \n  Branches     5307     5299       -8   \n==========================================\n- Hits        27391    27372      -19   \n- Misses      10300    10308       +8   \n+ Partials     1794     1782      -12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../common/utils/retry/AttemptsExceededException.java | 0% <0%> (\u00f8) | |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 69.49% <100%> (+2.82%) | :arrow_up: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 100% <100%> (+18.18%) | :arrow_up: |\n| ...nkedin/pinot/common/utils/retry/RetryPolicies.java | 60% <100%> (\u00f8) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 62.4% <20%> (-0.3%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.97% <20%> (+0.29%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 56.52% <40%> (-1.82%) | :arrow_down: |\n| ...n/pinot/common/utils/retry/NoDelayRetryPolicy.java | 66.66% <66.66%> (+16.66%) | :arrow_up: |\n| ...inot/common/utils/retry/FixedDelayRetryPolicy.java | 75% <75%> (+25%) | :arrow_up: |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2883183...98b896e. Read the comment docs.\n. # Codecov Report\nMerging #2325 into master will decrease coverage by 0.15%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2325      +/-\n==========================================\n- Coverage    69.4%   69.25%   -0.16%   \n==========================================\n  Files         862      840      -22   \n  Lines       39947    39485     -462   \n  Branches     5374     5307      -67   \n==========================================\n- Hits        27726    27344     -382   \n+ Misses      10413    10339      -74   \n+ Partials     1808     1802       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/core/data/readers/JSONRecordReader.java | 0% <0%> (-91.18%) | :arrow_down: |\n| ...edin/pinot/common/segment/fetcher/NoOpFetcher.java | 0% <0%> (-83.34%) | :arrow_down: |\n| ...kedin/pinot/core/data/readers/CSVRecordReader.java | 0% <0%> (-68.63%) | :arrow_down: |\n| ...pinot/core/data/readers/CSVRecordReaderConfig.java | 0% <0%> (-43.75%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 57.37% <0%> (-26.23%) | :arrow_down: |\n| ...inot/common/utils/retry/FixedDelayRetryPolicy.java | 50% <0%> (-25%) | :arrow_down: |\n| ...din/pinot/core/data/readers/RecordReaderUtils.java | 44.68% <0%> (-21.28%) | :arrow_down: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 75% <0%> (-19.12%) | :arrow_down: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 81.81% <0%> (-18.19%) | :arrow_down: |\n| ... and 214 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a893483...12540e5. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b97a764). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2326   +/-\n=========================================\n  Coverage          ?   70.06%         \n=========================================\n  Files             ?      841         \n  Lines             ?    39512         \n  Branches          ?     5311         \n=========================================\n  Hits              ?    27684         \n  Misses            ?     9999         \n  Partials          ?     1829\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b97a764...b4407e2. Read the comment docs.\n. # Codecov Report\nMerging #2327 into master will decrease coverage by 0.89%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2327     +/-\n=========================================\n- Coverage   70.19%   69.29%   -0.9%   \n=========================================\n  Files         840      840           \n  Lines       39485    39485           \n  Branches     5307     5307           \n=========================================\n- Hits        27715    27360    -355   \n- Misses       9945    10332    +387   \n+ Partials     1825     1793     -32\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/reduce/ComparisonFunction.java | 0% <0%> (-100%) | :arrow_down: |\n| .../core/query/reduce/HavingClauseComparisonTree.java | 0% <0%> (-82.82%) | :arrow_down: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 0% <0%> (-80.65%) | :arrow_down: |\n| ...inot/core/query/reduce/GreaterEqualComparison.java | 0% <0%> (-66.67%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 0% <0%> (-66.67%) | :arrow_down: |\n| ...in/pinot/core/query/reduce/LessThanComparison.java | 0% <0%> (-66.67%) | :arrow_down: |\n| ...pinot/core/query/reduce/GreaterThanComparison.java | 0% <0%> (-66.67%) | :arrow_down: |\n| ...n/pinot/core/query/reduce/LessEqualComparison.java | 0% <0%> (-66.67%) | :arrow_down: |\n| ...din/pinot/core/query/reduce/BetweenComparison.java | 0% <0%> (-65%) | :arrow_down: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 0% <0%> (-55.56%) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aa8bbdb...ac8f990. Read the comment docs.\n. # Codecov Report\nMerging #2341 into master will decrease coverage by 0.07%.\nThe diff coverage is 56.48%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2341      +/-\n==========================================\n- Coverage   69.35%   69.28%   -0.08%   \n==========================================\n  Files         842      847       +5   \n  Lines       39474    39571      +97   \n  Branches     5300     5315      +15   \n==========================================\n+ Hits        27378    27416      +38   \n- Misses      10306    10367      +61   \n+ Partials     1790     1788       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../segment/index/readers/OnHeapStringDictionary.java | 59.25% <\u00f8> (+7.64%) | :arrow_up: |\n| ...ore/segment/index/column/ColumnIndexContainer.java | 89.36% <100%> (+11.81%) | :arrow_up: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 86.3% <100%> (+0.38%) | :arrow_up: |\n| ...t/core/segment/index/readers/OnHeapDictionary.java | 25% <25%> (\u00f8) | |\n| ...re/segment/index/readers/OnHeapLongDictionary.java | 52.17% <52.17%> (\u00f8) | |\n| .../segment/index/readers/OnHeapDoubleDictionary.java | 54.54% <54.54%> (\u00f8) | |\n| ...e/segment/index/readers/OnHeapFloatDictionary.java | 56.52% <56.52%> (\u00f8) | |\n| ...ore/segment/index/readers/OnHeapIntDictionary.java | 60% <60%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cc87801...6b27939. Read the comment docs.\n. # Codecov Report\nMerging #2343 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2343      +/-\n=========================================\n- Coverage    69.3%   69.3%   -0.01%   \n=========================================\n  Files         842     842            \n  Lines       39462   39465       +3   \n  Branches     5299    5299            \n=========================================\n  Hits        27350   27350            \n- Misses      10321   10328       +7   \n+ Partials     1791    1787       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gment/index/readers/ImmutableDictionaryReader.java | 93.13% <100%> (+0.06%) | :arrow_up: |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 84.28% <100%> (+0.22%) | :arrow_up: |\n| ...re/realtime/impl/dictionary/MutableDictionary.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-7.28%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.39% <0%> (-3.53%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-2.23%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 33a9aba...9e1aaa3. Read the comment docs.\n. # Codecov Report\nMerging #2356 into master will decrease coverage by 0.08%.\nThe diff coverage is 53.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2356      +/-\n==========================================\n- Coverage   69.33%   69.24%   -0.09%   \n==========================================\n  Files         842      842            \n  Lines       39465    39474       +9   \n  Branches     5299     5300       +1   \n==========================================\n- Hits        27363    27335      -28   \n- Misses      10315    10345      +30   \n- Partials     1787     1794       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/common/segment/fetcher/NoOpFetcher.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HdfsSegmentFetcher.java | 37.03% <100%> (+1.18%) | :arrow_up: |\n| ...ommon/segment/fetcher/LocalFileSegmentFetcher.java | 57.14% <100%> (+7.14%) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <100%> (+1.81%) | :arrow_up: |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 46% <33.33%> (-2.89%) | :arrow_down: |\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 84.72% <60%> (-2.24%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-20%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-11.12%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-10.91%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d7577d...f2ef586. Read the comment docs.\n. # Codecov Report\nMerging #2357 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2357      +/-\n==========================================\n- Coverage   69.33%   69.32%   -0.01%   \n==========================================\n  Files         842      842            \n  Lines       39465    39462       -3   \n  Branches     5299     5299            \n==========================================\n- Hits        27363    27357       -6   \n- Misses      10315    10316       +1   \n- Partials     1787     1789       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 70.1% <100%> (-0.9%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 84.44% <0%> (-4.45%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-3.45%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.1% <0%> (-2.13%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d7577d...063e451. Read the comment docs.\n. # Codecov Report\nMerging #2361 into master will increase coverage by 21.46%.\nThe diff coverage is 68.42%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2361       +/-\n===========================================\n+ Coverage   47.78%   69.25%   +21.46%   \n===========================================\n  Files         847      847             \n  Lines       39576    39585        +9   \n  Branches     5316     5320        +4   \n===========================================\n+ Hits        18911    27414     +8503   \n+ Misses      19058    10379     -8679   \n- Partials     1607     1792      +185\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.09% <\u00f8> (+38.27%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 74.66% <68.42%> (+16.74%) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-11.12%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-2.26%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.81% <0%> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 53.97% <0%> (+0.41%) | :arrow_up: |\n| ... and 422 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 27f99b0...cdcbed3. Read the comment docs.\n. # Codecov Report\nMerging #2362 into master will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2362      +/-\n==========================================\n- Coverage   69.35%   69.29%   -0.06%   \n==========================================\n  Files         842      847       +5   \n  Lines       39474    39576     +102   \n  Branches     5300     5316      +16   \n==========================================\n+ Hits        27378    27425      +47   \n- Misses      10306    10362      +56   \n+ Partials     1790     1789       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 41.81% <0%> (-4.19%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 78.18% <0%> (-12.73%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 72.61% <0%> (-3.58%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.28% <0%> (-2.82%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d276510...35fee4a. Read the comment docs.\n. # Codecov Report\nMerging #2376 into master will increase coverage by 0.11%.\nThe diff coverage is 89.79%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2376      +/-\n==========================================\n+ Coverage   69.23%   69.34%   +0.11%   \n==========================================\n  Files         839      839            \n  Lines       39239    39259      +20   \n  Branches     5290     5293       +3   \n==========================================\n+ Hits        27167    27226      +59   \n+ Misses      10301    10266      -35   \n+ Partials     1771     1767       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/controller/api/resources/TableSize.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 94.44% <100%> (+2.77%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.81% <100%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 95% <100%> (+0.88%) | :arrow_up: |\n| ...not/controller/validation/StorageQuotaChecker.java | 94.87% <100%> (+1.32%) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.89% <84.31%> (\u00f8) | :arrow_up: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.8% <94.11%> (+0.19%) | :arrow_up: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 47.22% <0%> (-16.67%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 90% <0%> (-10%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 47c5ead...6b92d36. Read the comment docs.\n. # Codecov Report\nMerging #2380 into master will increase coverage by 0.01%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2380      +/-\n==========================================\n+ Coverage   69.25%   69.26%   +0.01%   \n==========================================\n  Files         847      849       +2   \n  Lines       39585    39594       +9   \n  Branches     5320     5320            \n==========================================\n+ Hits        27415    27426      +11   \n- Misses      10378    10383       +5   \n+ Partials     1792     1785       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../common/utils/retry/AttemptsExceededException.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (\u00f8) | |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <66.66%> (-10.77%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-20%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.26% <0%> (-2.64%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 45.52% <0%> (-0.82%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.1% <0%> (-0.71%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7eae22c...0cff952. Read the comment docs.\n. # Codecov Report\nMerging #2382 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2382      +/-\n==========================================\n- Coverage   69.25%   69.24%   -0.02%   \n==========================================\n  Files         849      849            \n  Lines       39594    39594            \n  Branches     5320     5320            \n==========================================\n- Hits        27420    27415       -5   \n- Misses      10389    10390       +1   \n- Partials     1785     1789       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-21.82%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-1.82%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cae6f1c...7918187. Read the comment docs.\n. # Codecov Report\nMerging #2387 into master will increase coverage by 0.02%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2387      +/-\n==========================================\n+ Coverage    69.4%   69.43%   +0.02%   \n==========================================\n  Files         862      861       -1   \n  Lines       39947    39910      -37   \n  Branches     5374     5369       -5   \n==========================================\n- Hits        27726    27710      -16   \n+ Misses      10413    10392      -21   \n  Partials     1808     1808\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (\u00f8) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 63.41% <100%> (+7.85%) | :arrow_up: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <100%> (\u00f8) | :arrow_up: |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 75.38% <100%> (\u00f8) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-12.73%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a893483...6e462bc. Read the comment docs.\n. # Codecov Report\nMerging #2388 into master will increase coverage by 0.19%.\nThe diff coverage is 18.91%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2388      +/-\n==========================================\n+ Coverage   69.26%   69.46%   +0.19%   \n==========================================\n  Files         849      848       -1   \n  Lines       39594    39592       -2   \n  Branches     5320     5336      +16   \n==========================================\n+ Hits        27425    27502      +77   \n+ Misses      10382    10297      -85   \n- Partials     1787     1793       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/java/com/linkedin/pinot/core/util/AvroUtils.java | 55.73% <0%> (-18.18%) | :arrow_down: |\n| ...edin/pinot/core/data/readers/JSONRecordReader.java | 91.17% <100%> (+91.17%) | :arrow_up: |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 0% <0%> (-41.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HdfsSegmentFetcher.java | 0% <0%> (-37.04%) | :arrow_down: |\n| ...om/linkedin/pinot/common/config/RoutingConfig.java | 45.45% <0%> (-31.47%) | :arrow_down: |\n| ...n/pinot/common/data/DateTimeFormatPatternSpec.java | 70% <0%> (-30%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| .../linkedin/pinot/common/config/TableTaskConfig.java | 31.57% <0%> (-22.97%) | :arrow_down: |\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 52.17% <0%> (-20.56%) | :arrow_down: |\n| ...in/pinot/common/config/SegmentPartitionConfig.java | 46.15% <0%> (-20.52%) | :arrow_down: |\n| ... and 122 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 39a9661...5062b37. Read the comment docs.\n. # Codecov Report\nMerging #2395 into master will increase coverage by <.01%.\nThe diff coverage is 94.73%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2395      +/-\n==========================================\n+ Coverage   69.26%   69.26%   +<.01%   \n==========================================\n  Files         849      848       -1   \n  Lines       39594    39592       -2   \n  Branches     5320     5321       +1   \n==========================================\n- Hits        27425    27424       -1   \n- Misses      10382    10384       +2   \n+ Partials     1787     1784       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.44% <100%> (+0.15%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 77.77% <100%> (+2.2%) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 78.02% <100%> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 53.97% <50%> (\u00f8) | :arrow_up: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-15.16%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 58.51% <0%> (-4.26%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aff6efb...078ba5a. Read the comment docs.\n. # Codecov Report\nMerging #2400 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2400      +/-\n==========================================\n+ Coverage   69.27%   69.27%   +<.01%   \n==========================================\n  Files         848      848            \n  Lines       39592    39599       +7   \n  Branches     5321     5322       +1   \n==========================================\n+ Hits        27428    27434       +6   \n- Misses      10376    10377       +1   \n  Partials     1788     1788\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.03% <0%> (-0.42%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-2.78%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.81% <0%> (-1.49%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...data/manager/offline/AbstractTableDataManager.java | 91.5% <0%> (-0.95%) | :arrow_down: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c9e07c...fff811c. Read the comment docs.\n. # Codecov Report\nMerging #2401 into master will increase coverage by <.01%.\nThe diff coverage is 56.25%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2401      +/-\n==========================================\n+ Coverage   69.28%   69.29%   +<.01%   \n==========================================\n  Files         848      848            \n  Lines       39597    39545      -52   \n  Branches     5322     5316       -6   \n==========================================\n- Hits        27435    27402      -33   \n+ Misses      10375    10356      -19   \n  Partials     1787     1787\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 85.33% <100%> (+0.61%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 57.33% <44.44%> (+3.36%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 62.24% <66.66%> (+0.79%) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 77.77% <0%> (-17.78%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 47.22% <0%> (-16.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-10.91%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (-1.32%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update dc66df1...973d469. Read the comment docs.\n. # Codecov Report\nMerging #2403 into master will decrease coverage by 0.03%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2403      +/-\n==========================================\n- Coverage    69.4%   69.37%   -0.04%   \n==========================================\n  Files         862      862            \n  Lines       39947    39950       +3   \n  Branches     5374     5375       +1   \n==========================================\n- Hits        27726    27716      -10   \n- Misses      10413    10421       +8   \n- Partials     1808     1813       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 78.5% <50%> (-0.29%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-9.1%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 84.44% <0%> (-4.45%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.39% <0%> (-3.53%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a893483...533d69e. Read the comment docs.\n. # Codecov Report\nMerging #2404 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2404      +/-\n==========================================\n+ Coverage   69.27%   69.31%   +0.03%   \n==========================================\n  Files         848      848            \n  Lines       39592    39597       +5   \n  Branches     5321     5322       +1   \n==========================================\n+ Hits        27428    27446      +18   \n+ Misses      10376    10366      -10   \n+ Partials     1788     1785       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/controller/validation/ValidationManager.java | 81.27% <100%> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.87% <100%> (+1.2%) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 62.09% <100%> (-0.31%) | :arrow_down: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 70.49% <100%> (+0.49%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 58.51% <0%> (-4.26%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 55c0b16...6e7b0a5. Read the comment docs.\n. # Codecov Report\nMerging #2408 into master will decrease coverage by 0.09%.\nThe diff coverage is 74.41%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2408     +/-\n=========================================\n- Coverage   69.35%   69.25%   -0.1%   \n=========================================\n  Files         848      848           \n  Lines       39545    39513     -32   \n  Branches     5316     5309      -7   \n=========================================\n- Hits        27425    27365     -60   \n- Misses      10339    10373     +34   \n+ Partials     1781     1775      -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.81% <0%> (-0.53%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 45.52% <0%> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 58.89% <100%> (\u00f8) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 69.49% <100%> (\u00f8) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 89.79% <100%> (\u00f8) | :arrow_up: |\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 95.12% <100%> (+9.78%) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 55.55% <37.5%> (\u00f8) | :arrow_up: |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 0% <0%> (-41.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HdfsSegmentFetcher.java | 0% <0%> (-37.04%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 78afab1...da1cea8. Read the comment docs.\n. # Codecov Report\nMerging #2413 into master will decrease coverage by 0.16%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2413      +/-\n==========================================\n- Coverage   69.35%   69.19%   -0.17%   \n==========================================\n  Files         848      848            \n  Lines       39545    39521      -24   \n  Branches     5316     5309       -7   \n==========================================\n- Hits        27425    27345      -80   \n- Misses      10339    10389      +50   \n- Partials     1781     1787       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 75.87% <\u00f8> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.56% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 88.19% <100%> (+0.3%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 70.16% <100%> (+0.07%) | :arrow_up: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 69.56% <100%> (\u00f8) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 58.06% <100%> (\u00f8) | :arrow_up: |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 0% <0%> (-41.82%) | :arrow_down: |\n| ...not/common/segment/fetcher/HdfsSegmentFetcher.java | 0% <0%> (-37.04%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fd61de5...de062f6. Read the comment docs.\n. # Codecov Report\nMerging #2420 into master will increase coverage by 0.09%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2420      +/-\n==========================================\n+ Coverage   69.23%   69.33%   +0.09%   \n==========================================\n  Files         848      848            \n  Lines       39513    39516       +3   \n  Branches     5309     5309            \n==========================================\n+ Hits        27358    27399      +41   \n+ Misses      10377    10336      -41   \n- Partials     1778     1781       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 61.92% <100%> (+0.44%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-7.28%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.37% <0%> (-0.19%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.16% <0%> (+0.35%) | :arrow_up: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb5b9e7...84a2642. Read the comment docs.\n. # Codecov Report\nMerging #2421 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2421      +/-\n==========================================\n- Coverage   69.23%   69.19%   -0.05%   \n==========================================\n  Files         848      848            \n  Lines       39513    39513            \n  Branches     5309     5309            \n==========================================\n- Hits        27358    27342      -16   \n- Misses      10377    10393      +16   \n  Partials     1778     1778\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-1.82%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (-0.36%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (\u00f8) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb5b9e7...6af1ac3. Read the comment docs.\n. # Codecov Report\nMerging #2425 into master will increase coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2425      +/-\n==========================================\n+ Coverage   69.24%   69.32%   +0.07%   \n==========================================\n  Files         839      839            \n  Lines       39320    39327       +7   \n  Branches     5302     5303       +1   \n==========================================\n+ Hits        27229    27264      +35   \n+ Misses      10318    10288      -30   \n- Partials     1773     1775       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 44.71% <0%> (-1.63%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.8% <0%> (-0.44%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.37% <0%> (-0.19%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (\u00f8) | :arrow_up: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 76.51% <0%> (+0.67%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a6c26f7...1714220. Read the comment docs.\n. # Codecov Report\nMerging #2427 into master will decrease coverage by 0.24%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2427      +/-\n==========================================\n- Coverage    69.4%   69.16%   -0.25%   \n==========================================\n  Files         848      848            \n  Lines       39516    39516            \n  Branches     5309     5309            \n==========================================\n- Hits        27428    27333      -95   \n- Misses      10307    10411     +104   \n+ Partials     1781     1772       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (-50%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 80% <0%> (-20%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-18.19%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <0%> (-15.39%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4680dc2...7a9b32a. Read the comment docs.\n. # Codecov Report\nMerging #2428 into master will decrease coverage by 0.03%.\nThe diff coverage is 86.08%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2428      +/-\n==========================================\n- Coverage    69.4%   69.37%   -0.04%   \n==========================================\n  Files         848      847       -1   \n  Lines       39516    39548      +32   \n  Branches     5309     5325      +16   \n==========================================\n+ Hits        27428    27437       +9   \n- Misses      10307    10329      +22   \n- Partials     1781     1782       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 62.09% <100%> (\u00f8) | :arrow_up: |\n| ...tion/UniformStreamPartitionAssignmentStrategy.java | 100% <100%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 63.21% <100%> (+0.96%) | :arrow_up: |\n| ...rtition/StreamPartitionAssignmentStrategyEnum.java | 100% <100%> (\u00f8) | |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 52.63% <100%> (-14.65%) | :arrow_down: |\n| .../com/linkedin/pinot/common/config/TableConfig.java | 79.64% <40%> (-5.65%) | :arrow_down: |\n| ...lix/core/realtime/partition/RealtimePartition.java | 53.33% <53.33%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 64.28% <64.28%> (\u00f8) | |\n| ...n/pinot/common/config/StreamConsumptionConfig.java | 66.66% <66.66%> (\u00f8) | |\n| ...tion/StreamPartitionAssignmentStrategyFactory.java | 76.19% <76.19%> (\u00f8) | |\n| ... and 119 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4680dc2...5381c66. Read the comment docs.\n. # Codecov Report\nMerging #2430 into master will decrease coverage by 0.11%.\nThe diff coverage is 68.96%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2430      +/-\n==========================================\n- Coverage    69.4%   69.29%   -0.12%   \n==========================================\n  Files         848      848            \n  Lines       39516    39516            \n  Branches     5309     5312       +3   \n==========================================\n- Hits        27428    27384      -44   \n- Misses      10307    10357      +50   \n+ Partials     1781     1775       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 57.97% <62.5%> (-11.6%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 69.56% <83.33%> (-7.76%) | :arrow_down: |\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (-50%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <0%> (-15.39%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 55.55% <0%> (-9.41%) | :arrow_down: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4680dc2...8ab2f41. Read the comment docs.\n. # Codecov Report\nMerging #2431 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2431      +/-\n==========================================\n- Coverage   69.24%   69.21%   -0.03%   \n==========================================\n  Files         848      848            \n  Lines       39521    39522       +1   \n  Branches     5309     5309            \n==========================================\n- Hits        27367    27356      -11   \n- Misses      10374    10388      +14   \n+ Partials     1780     1778       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/core/data/partition/MurmurPartitionFunction.java | 77.77% <100%> (+2.77%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-6.07%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| .../com/linkedin/pinot/client/ExternalViewReader.java | 50% <0%> (-2.86%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 85.91% <0%> (-0.71%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d95d3c5...0603cc9. Read the comment docs.\n. # Codecov Report\nMerging #2432 into master will increase coverage by 0.03%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2432      +/-\n==========================================\n+ Coverage   69.23%   69.26%   +0.03%   \n==========================================\n  Files         848      846       -2   \n  Lines       39516    39437      -79   \n  Branches     5312     5310       -2   \n==========================================\n- Hits        27360    27318      -42   \n+ Misses      10376    10335      -41   \n- Partials     1780     1784       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 82.59% <\u00f8> (+2.92%) | :arrow_up: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 78.46% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/operator/query/MSelectionOrderByOperator.java | 85.29% <0%> (\u00f8) | :arrow_up: |\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../helix/core/sharding/RandomAssignmentStrategy.java | 100% <100%> (+13.33%) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 66.95% <100%> (+0.37%) | :arrow_up: |\n| ...harding/ReplicaGroupSegmentAssignmentStrategy.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/segment/index/IndexSegmentImpl.java | 50.68% <100%> (+0.68%) | :arrow_up: |\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 90% <100%> (+8.18%) | :arrow_up: |\n| ...t/core/query/selection/SelectionOperatorUtils.java | 95.41% <100%> (\u00f8) | :arrow_up: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 628b8fb...2de4e6e. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@16fc79f). Click here to learn what that means.\nThe diff coverage is 85.62%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2439   +/-\n=========================================\n  Coverage          ?   69.25%         \n=========================================\n  Files             ?      839         \n  Lines             ?    39239         \n  Branches          ?     5290         \n=========================================\n  Hits              ?    27175         \n  Misses            ?    10294         \n  Partials          ?     1770\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 78.46% <\u00f8> (\u00f8) | |\n| ...ot/controller/helix/core/util/ZKMetadataUtils.java | 74.07% <100%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 80.3% <100%> (\u00f8) | |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 77.77% <100%> (\u00f8) | |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 91.3% <100%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.56% <100%> (\u00f8) | |\n| ...converter/stats/RealtimeSegmentStatsContainer.java | 93.75% <100%> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.89% <80%> (\u00f8) | |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 69.1% <80.59%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 81.6% <85.45%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 16fc79f...2deecd2. Read the comment docs.\n. # Codecov Report\nMerging #2440 into master will decrease coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2440      +/-\n==========================================\n- Coverage    69.3%   69.22%   -0.09%   \n==========================================\n  Files         846      839       -7   \n  Lines       39437    39319     -118   \n  Branches     5310     5302       -8   \n==========================================\n- Hits        27331    27217     -114   \n+ Misses      10326    10324       -2   \n+ Partials     1780     1778       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 90% <0%> (-10%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-9.1%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 85.41% <0%> (-6.25%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...eader/impl/FixedByteSingleValueMultiColReader.java | 58.06% <0%> (-3.23%) | :arrow_down: |\n| ...din/pinot/core/segment/memory/PinotByteBuffer.java | 67.18% <0%> (-2.35%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 75.77% <0%> (-2.07%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 31b1dcb...a2b77ba. Read the comment docs.\n. # Codecov Report\nMerging #2450 into master will decrease coverage by 0.08%.\nThe diff coverage is 76.15%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2450      +/-\n==========================================\n- Coverage   69.41%   69.33%   -0.09%   \n==========================================\n  Files         839      840       +1   \n  Lines       39259    39232      -27   \n  Branches     5293     5281      -12   \n==========================================\n- Hits        27253    27202      -51   \n- Misses      10232    10263      +31   \n+ Partials     1774     1767       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 47.36% <100%> (+14.03%) | :arrow_up: |\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 88.43% <100%> (\u00f8) | :arrow_up: |\n| ...pl/fwd/SingleValueUnsortedForwardIndexCreator.java | 88.88% <100%> (\u00f8) | :arrow_up: |\n| ...x/loader/defaultcolumn/V3DefaultColumnHandler.java | 85% <100%> (\u00f8) | :arrow_up: |\n| .../impl/fwd/SingleValueFixedByteRawIndexCreator.java | 91.66% <100%> (\u00f8) | :arrow_up: |\n| ...mpl/fwd/MultiValueUnsortedForwardIndexCreator.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...or/impl/fwd/SingleValueVarByteRawIndexCreator.java | 57.14% <100%> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/core/minion/RawIndexConverter.java | 60.75% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 80.3% <100%> (\u00f8) | :arrow_up: |\n| ...impl/fwd/SingleValueSortedForwardIndexCreator.java | 96% <100%> (\u00f8) | :arrow_up: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fe460bd...c486fa1. Read the comment docs.\n. # Codecov Report\nMerging #2452 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2452      +/-\n==========================================\n+ Coverage   69.37%   69.41%   +0.03%   \n==========================================\n  Files         848      852       +4   \n  Lines       39531    39681     +150   \n  Branches     5328     5335       +7   \n==========================================\n+ Hits        27426    27545     +119   \n- Misses      10311    10352      +41   \n+ Partials     1794     1784      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 81.39% <100%> (\u00f8) | :arrow_up: |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 74.62% <100%> (-0.76%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-18.19%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (-1.77%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5cb7839...d4364b7. Read the comment docs.\n. # Codecov Report\nMerging #2457 into master will increase coverage by 0.15%.\nThe diff coverage is 87.09%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2457      +/-\n==========================================\n+ Coverage    69.4%   69.55%   +0.15%   \n==========================================\n  Files         840      840            \n  Lines       39232    39216      -16   \n  Branches     5281     5278       -3   \n==========================================\n+ Hits        27228    27278      +50   \n+ Misses      10239    10163      -76   \n- Partials     1765     1775      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/core/data/readers/JSONRecordReader.java | 88.23% <100%> (+88.23%) | :arrow_up: |\n| ...pinot/core/data/readers/CSVRecordReaderConfig.java | 43.75% <100%> (+43.75%) | :arrow_up: |\n| ...kedin/pinot/core/data/readers/CSVRecordReader.java | 68.62% <81.81%> (+68.62%) | :arrow_up: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 72.61% <0%> (-3.58%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7466094...962f674. Read the comment docs.\n. # Codecov Report\nMerging #2462 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2462      +/-\n==========================================\n- Coverage    69.4%   69.34%   -0.06%   \n==========================================\n  Files         840      840            \n  Lines       39232    39232            \n  Branches     5281     5281            \n==========================================\n- Hits        27228    27205      -23   \n- Misses      10239    10262      +23   \n  Partials     1765     1765\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 72.61% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-2.82%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 75.8% <0%> (-2.69%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7466094...44dd72d. Read the comment docs.\n. # Codecov Report\nMerging #2463 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2463      +/-\n==========================================\n- Coverage   69.56%   69.55%   -0.02%   \n==========================================\n  Files         840      840            \n  Lines       39221    39220       -1   \n  Branches     5278     5279       +1   \n==========================================\n- Hits        27285    27280       -5   \n- Misses      10168    10171       +3   \n- Partials     1768     1769       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 100% <100%> (+1.05%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-1.73%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 96.05% <0%> (-1.32%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.09% <0%> (-0.2%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 84f377f...7491b10. Read the comment docs.\n. # Codecov Report\nMerging #2464 into master will decrease coverage by <.01%.\nThe diff coverage is 28.57%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2464      +/-\n==========================================\n- Coverage   69.59%   69.59%   -0.01%   \n==========================================\n  Files         840      840            \n  Lines       39216    39221       +5   \n  Branches     5278     5278            \n==========================================\n  Hits        27294    27294            \n- Misses      10155    10161       +6   \n+ Partials     1767     1766       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ler/api/resources/PinotSegmentRestletResource.java | 26.7% <28.57%> (-0.79%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 933c729...8f4ab54. Read the comment docs.\n. # Codecov Report\nMerging #2471 into master will decrease coverage by 0.15%.\nThe diff coverage is 27.75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2471      +/-\n==========================================\n- Coverage   69.51%   69.35%   -0.16%   \n==========================================\n  Files         840      840            \n  Lines       39220    39376     +156   \n  Branches     5279     5299      +20   \n==========================================\n+ Hits        27263    27309      +46   \n- Misses      10186    10292     +106   \n- Partials     1771     1775       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/data/DimensionFieldSpec.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| .../java/com/linkedin/pinot/common/config/Tenant.java | 74.54% <0%> (+1.33%) | :arrow_up: |\n| .../linkedin/pinot/common/config/TableTaskConfig.java | 31.57% <0%> (-22.97%) | :arrow_down: |\n| ...din/pinot/common/config/ColumnPartitionConfig.java | 69.23% <0%> (-3.75%) | :arrow_down: |\n| ...inkedin/pinot/common/config/TableCustomConfig.java | 16.12% <0%> (-5.62%) | :arrow_down: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 53.08% <0%> (-17.41%) | :arrow_down: |\n| .../com/linkedin/pinot/common/config/QuotaConfig.java | 36% <0%> (-16.95%) | :arrow_down: |\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 52.17% <0%> (-20.56%) | :arrow_down: |\n| ...com/linkedin/pinot/common/config/TenantConfig.java | 22.85% <0%> (-7.92%) | :arrow_down: |\n| ...inot/common/config/ReplicaGroupStrategyConfig.java | 55% <0%> (+9.16%) | :arrow_up: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 28e3594...fe6036c. Read the comment docs.\n. # Codecov Report\nMerging #2472 into master will decrease coverage by 0.54%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2472      +/-\n==========================================\n- Coverage   69.51%   68.96%   -0.55%   \n==========================================\n  Files         840      840            \n  Lines       39220    41149    +1929   \n  Branches     5279     5568     +289   \n==========================================\n+ Hits        27263    28378    +1115   \n- Misses      10186    10961     +775   \n- Partials     1771     1810      +39\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/data/DimensionFieldSpec.java | 42.85% <0%> (-57.15%) | :arrow_down: |\n| ...n/pinot/common/data/DateTimeFormatPatternSpec.java | 50% <0%> (-50%) | :arrow_down: |\n| ...linkedin/pinot/common/data/DateTimeFormatSpec.java | 53.92% <0%> (-40.91%) | :arrow_down: |\n| ...in/pinot/common/config/SegmentPartitionConfig.java | 34.28% <0%> (-32.39%) | :arrow_down: |\n| .../linkedin/pinot/common/config/TableTaskConfig.java | 23.07% <0%> (-31.47%) | :arrow_down: |\n| ...edin/pinot/common/data/DateTimeFormatUnitSpec.java | 56.81% <0%> (-30.69%) | :arrow_down: |\n| ...din/pinot/common/data/DateTimeGranularitySpec.java | 55.81% <0%> (-28.19%) | :arrow_down: |\n| .../com/linkedin/pinot/common/config/QuotaConfig.java | 26.47% <0%> (-26.48%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| .../linkedin/pinot/common/data/StarTreeIndexSpec.java | 50% <0%> (-22.73%) | :arrow_down: |\n| ... and 309 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4af6d44...6f64883. Read the comment docs.\n. # Codecov Report\nMerging #2473 into master will increase coverage by <.01%.\nThe diff coverage is 74.56%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2473      +/-\n==========================================\n+ Coverage   69.49%   69.49%   +<.01%   \n==========================================\n  Files         847      847            \n  Lines       39522    39529       +7   \n  Branches     5315     5327      +12   \n==========================================\n+ Hits        27464    27470       +6   \n+ Misses      10280    10275       -5   \n- Partials     1778     1784       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/data/DimensionFieldSpec.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 92.4% <100%> (-4.97%) | :arrow_down: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 95.65% <100%> (+0.3%) | :arrow_up: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 74.71% <61.11%> (+4.66%) | :arrow_up: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 80.46% <77.77%> (+1.05%) | :arrow_up: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 91.17% <80%> (-8.83%) | :arrow_down: |\n| ...inkedin/pinot/common/data/TimeGranularitySpec.java | 76.53% <84%> (+1.53%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 02ffe22...08fc437. Read the comment docs.\n. # Codecov Report\nMerging #2475 into master will increase coverage by 0.08%.\nThe diff coverage is 15.18%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2475      +/-\n==========================================\n+ Coverage   69.32%   69.41%   +0.08%   \n==========================================\n  Files         840      848       +8   \n  Lines       39376    39549     +173   \n  Branches     5299     5329      +30   \n==========================================\n+ Hits        27299    27452     +153   \n- Misses      10302    10304       +2   \n- Partials     1775     1793      +18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/common/utils/ClientSSLContextGenerator.java | 0% <0%> (\u00f8) | |\n| ...pinot/server/realtime/ControllerLeaderLocator.java | 88.23% <100%> (+0.35%) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 78.26% <100%> (+0.23%) | :arrow_up: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 54.32% <46.66%> (-3.66%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-11.12%) | :arrow_down: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 91.17% <0%> (-8.83%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 42 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8bbb5fe...4180f27. Read the comment docs.\n. # Codecov Report\nMerging #2476 into master will increase coverage by 0.05%.\nThe diff coverage is 86.98%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2476      +/-\n==========================================\n+ Coverage   69.32%   69.37%   +0.05%   \n==========================================\n  Files         840      840            \n  Lines       39376    39350      -26   \n  Branches     5299     5289      -10   \n==========================================\n+ Hits        27299    27301       +2   \n+ Misses      10302    10274      -28   \n  Partials     1775     1775\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.28% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...inot/core/realtime/impl/RealtimeSegmentConfig.java | 96.22% <\u00f8> (\u00f8) | :arrow_up: |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...e/impl/dictionary/IntOffHeapMutableDictionary.java | 94.54% <100%> (\u00f8) | :arrow_up: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <100%> (+3.63%) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/core/io/writer/impl/DirectMemoryManager.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 98.21% <100%> (\u00f8) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <100%> (-3.64%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8bbb5fe...597546d. Read the comment docs.\n. # Codecov Report\nMerging #2481 into master will increase coverage by 0.15%.\nThe diff coverage is 83.2%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2481      +/-\n==========================================\n+ Coverage   69.33%   69.48%   +0.15%   \n==========================================\n  Files         870      871       +1   \n  Lines       40604    40830     +226   \n  Branches     5488     5544      +56   \n==========================================\n+ Hits        28152    28372     +220   \n+ Misses      10629    10619      -10   \n- Partials     1823     1839      +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...x/core/rebalance/RebalanceUserConfigConstants.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...oller/api/resources/PinotTableRestletResource.java | 39.15% <10%> (+0.23%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.14% <100%> (+1.64%) | :arrow_up: |\n| ...ore/rebalance/RebalanceSegmentStrategyFactory.java | 60% <50%> (+10%) | :arrow_up: |\n| ...ebalance/ReplicaGroupRebalanceSegmentStrategy.java | 85.77% <85.77%> (\u00f8) | |\n| ...controller/helix/ControllerRequestBuilderUtil.java | 91.11% <92%> (-3.77%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2685dbf...f6e6080. Read the comment docs.\n. # Codecov Report\nMerging #2482 into master will increase coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2482      +/-\n=========================================\n+ Coverage   69.44%   69.5%   +0.05%   \n=========================================\n  Files         847     847            \n  Lines       39529   39529            \n  Branches     5327    5327            \n=========================================\n+ Hits        27452   27473      +21   \n+ Misses      10290   10269      -21   \n  Partials     1787    1787\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 76.36% <0%> (-1.82%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e7aaac7...23325d0. Read the comment docs.\n. # Codecov Report\nMerging #2488 into master will increase coverage by 0.08%.\nThe diff coverage is 20%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2488      +/-\n==========================================\n+ Coverage    69.4%   69.48%   +0.08%   \n==========================================\n  Files         848      848            \n  Lines       39550    39566      +16   \n  Branches     5329     5332       +3   \n==========================================\n+ Hits        27448    27491      +43   \n+ Misses      10310    10291      -19   \n+ Partials     1792     1784       -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 67.22% <0%> (-2.34%) | :arrow_down: |\n| .../api/resources/ControllerApplicationException.java | 60% <100%> (\u00f8) | :arrow_up: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.39% <0%> (-4.23%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 78.37% <0%> (-2.09%) | :arrow_down: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 94.11% <0%> (-1.54%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 76.29% <0%> (+1.48%) | :arrow_up: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fe6e083...c27b9e1. Read the comment docs.\n. # Codecov Report\nMerging #2489 into master will increase coverage by 0.03%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2489      +/-\n==========================================\n+ Coverage    69.4%   69.43%   +0.03%   \n==========================================\n  Files         848      848            \n  Lines       39550    39562      +12   \n  Branches     5329     5332       +3   \n==========================================\n+ Hits        27448    27469      +21   \n+ Misses      10310    10303       -7   \n+ Partials     1792     1790       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 78.37% <0%> (-2.09%) | :arrow_down: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 94.11% <76.92%> (-1.54%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-4.45%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fe6e083...f39a52c. Read the comment docs.\n. # Codecov Report\nMerging #2490 into master will decrease coverage by 0.04%.\nThe diff coverage is 57.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2490      +/-\n==========================================\n- Coverage   69.48%   69.43%   -0.05%   \n==========================================\n  Files         848      848            \n  Lines       39555    39550       -5   \n  Branches     5330     5329       -1   \n==========================================\n- Hits        27484    27462      -22   \n- Misses      10279    10302      +23   \n+ Partials     1792     1786       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 63.12% <100%> (-0.1%) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 55.7% <25%> (-1.12%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 49.31% <52.17%> (-3.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-20%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 96ca68d...e9e0bf5. Read the comment docs.\n. # Codecov Report\nMerging #2491 into master will increase coverage by 0.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2491      +/-\n==========================================\n+ Coverage   69.45%   69.56%   +0.11%   \n==========================================\n  Files         848      848            \n  Lines       39562    39555       -7   \n  Branches     5332     5330       -2   \n==========================================\n+ Hits        27479    27518      +39   \n+ Misses      10293    10243      -50   \n- Partials     1790     1794       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 80.93% <\u00f8> (+2.55%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-17.78%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 85.91% <0%> (-0.71%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (\u00f8) | :arrow_up: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 60337be...1cbcff2. Read the comment docs.\n. # Codecov Report\nMerging #2493 into master will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2493      +/-\n==========================================\n- Coverage   69.52%   69.47%   -0.06%   \n==========================================\n  Files         848      848            \n  Lines       39555    39555            \n  Branches     5330     5330            \n==========================================\n- Hits        27500    27480      -20   \n- Misses      10266    10285      +19   \n- Partials     1789     1790       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 74.71% <\u00f8> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 92.15% <0%> (-1.97%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 72.61% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f617059...ed8a81a. Read the comment docs.\n. # Codecov Report\nMerging #2494 into master will increase coverage by 0.19%.\nThe diff coverage is 79.35%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2494      +/-\n==========================================\n+ Coverage   69.37%   69.56%   +0.19%   \n==========================================\n  Files         848      852       +4   \n  Lines       39531    39670     +139   \n  Branches     5328     5333       +5   \n==========================================\n+ Hits        27426    27598     +172   \n+ Misses      10311    10280      -31   \n+ Partials     1794     1792       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...upby/NoDictionaryMultiColumnGroupKeyGenerator.java | 92.92% <\u00f8> (+2.83%) | :arrow_up: |\n| ...l/FixedByteSingleValueMultiColumnReaderWriter.java | 100% <100%> (\u00f8) | |\n| ...writer/BaseSingleValueMultiColumnReaderWriter.java | 4.76% <4.76%> (\u00f8) | |\n| ...va/com/linkedin/pinot/core/util/FixedIntArray.java | 66.66% <66.66%> (\u00f8) | |\n| ...din/pinot/core/util/FixedIntArrayOffHeapIdMap.java | 81.57% <81.57%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 84% <83.33%> (+3.07%) | :arrow_up: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-5.46%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4109035...6c3a3a8. Read the comment docs.\n. # Codecov Report\nMerging #2495 into master will increase coverage by 0.1%.\nThe diff coverage is 94.44%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2495     +/-\n=========================================\n+ Coverage   69.39%   69.49%   +0.1%   \n=========================================\n  Files         848      848           \n  Lines       39550    39526     -24   \n  Branches     5329     5327      -2   \n=========================================\n+ Hits        27446    27469     +23   \n+ Misses      10310    10271     -39   \n+ Partials     1794     1786      -8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 61.56% <\u00f8> (-0.36%) | :arrow_down: |\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 88.63% <100%> (+0.2%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.55% <100%> (-0.15%) | :arrow_down: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 90.71% <66.66%> (-0.72%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| .../core/segment/creator/ColumnIndexCreationInfo.java | 89.74% <0%> (-5.13%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 75.77% <0%> (-2.07%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5e2784f...f55382c. Read the comment docs.\n. # Codecov Report\nMerging #2496 into master will decrease coverage by 0.22%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2496      +/-\n==========================================\n- Coverage   69.59%   69.37%   -0.23%   \n==========================================\n  Files         848      848            \n  Lines       39554    39826     +272   \n  Branches     5329     5396      +67   \n==========================================\n+ Hits        27528    27628     +100   \n- Misses      10236    10395     +159   \n- Partials     1790     1803      +13\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 81.39% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (-50%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <0%> (-15.39%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-12.73%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 67.22% <0%> (-10.09%) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 55.55% <0%> (-9.41%) | :arrow_down: |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 91515c0...fc8d28b. Read the comment docs.\n. # Codecov Report\nMerging #2497 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2497      +/-\n==========================================\n+ Coverage   69.42%   69.44%   +0.01%   \n==========================================\n  Files         848      848            \n  Lines       39530    39530            \n  Branches     5327     5327            \n==========================================\n+ Hits        27444    27450       +6   \n+ Misses      10297    10295       -2   \n+ Partials     1789     1785       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (-0.71%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 92.92% <0%> (+1.01%) | :arrow_up: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.44% <0%> (+1.12%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cc5ef44...d153511. Read the comment docs.\n. # Codecov Report\nMerging #2499 into master will decrease coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2499      +/-\n==========================================\n- Coverage   69.42%   69.38%   -0.05%   \n==========================================\n  Files         848      848            \n  Lines       39530    39531       +1   \n  Branches     5327     5328       +1   \n==========================================\n- Hits        27444    27427      -17   \n- Misses      10297    10308      +11   \n- Partials     1789     1796       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.93% <100%> (+0.64%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-1.52%) | :arrow_down: |\n| ... and 6 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cc5ef44...90d3bc3. Read the comment docs.\n. # Codecov Report\nMerging #2501 into master will increase coverage by 0.2%.\nThe diff coverage is 88.69%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2501     +/-\n=========================================\n+ Coverage   69.21%   69.42%   +0.2%   \n=========================================\n  Files         859      859           \n  Lines       39889    39879     -10   \n  Branches     5351     5352      +1   \n=========================================\n+ Hits        27609    27684     +75   \n+ Misses      10481    10388     -93   \n- Partials     1799     1807      +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (-14.04%) | :arrow_down: |\n| ...pinot/core/io/util/FixedByteValueReaderWriter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.55% <100%> (\u00f8) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.8% <100%> (+0.04%) | :arrow_up: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 91.42% <100%> (\u00f8) | :arrow_up: |\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 82.88% <86.02%> (-5.76%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2a4c18b...6cbe9bf. Read the comment docs.\n. # Codecov Report\nMerging #2507 into master will increase coverage by 0.03%.\nThe diff coverage is 75.26%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2507      +/-\n==========================================\n+ Coverage   69.39%   69.43%   +0.03%   \n==========================================\n  Files         852      859       +7   \n  Lines       39711    39951     +240   \n  Branches     5336     5354      +18   \n==========================================\n+ Hits        27559    27739     +180   \n- Misses      10363    10415      +52   \n- Partials     1789     1797       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 62.09% <\u00f8> (\u00f8) | :arrow_up: |\n| ...oller/api/resources/PinotTableRestletResource.java | 39.87% <0%> (-1.01%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.15% <0%> (-1.56%) | :arrow_down: |\n| ...x/core/rebalance/RebalanceUserConfigConstants.java | 0% <0%> (\u00f8) | |\n| ...tion/StreamPartitionAssignmentStrategyFactory.java | 76.19% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/config/OfflineTagConfig.java | 100% <100%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 70% <100%> (+5.71%) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 81.6% <100%> (+0.47%) | :arrow_up: |\n| ...tion/UniformStreamPartitionAssignmentStrategy.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...va/com/linkedin/pinot/common/config/TagConfig.java | 100% <100%> (\u00f8) | |\n| ... and 47 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d09dac0...6ab8669. Read the comment docs.\n. # Codecov Report\nMerging #2508 into master will decrease coverage by 0.14%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2508      +/-\n==========================================\n- Coverage   69.56%   69.41%   -0.15%   \n==========================================\n  Files         852      852            \n  Lines       39670    39670            \n  Branches     5333     5333            \n==========================================\n- Hits        27595    27536      -59   \n- Misses      10284    10341      +57   \n- Partials     1791     1793       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 98.21% <100%> (\u00f8) | :arrow_up: |\n| ...t/common/exception/PermanentDownloadException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <0%> (-15.39%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 67.22% <0%> (-10.09%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4e6f18f...7b20801. Read the comment docs.\n. # Codecov Report\nMerging #2513 into master will decrease coverage by 0.11%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2513      +/-\n==========================================\n- Coverage   69.46%   69.34%   -0.12%   \n==========================================\n  Files         852      852            \n  Lines       39670    39678       +8   \n  Branches     5333     5335       +2   \n==========================================\n- Hits        27555    27515      -40   \n- Misses      10326    10376      +50   \n+ Partials     1789     1787       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 53.93% <60%> (-0.39%) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 39.13% <0%> (-36.24%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 64.62% <0%> (-16.99%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-7.28%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| .../builder/KafkaLowLevelRoutingTableBuilderUtil.java | 82.05% <0%> (-5.13%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-3.64%) | :arrow_down: |\n| ...ery/aggregation/function/customobject/AvgPair.java | 96.77% <0%> (-3.23%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update adedbe0...a314527. Read the comment docs.\n. # Codecov Report\nMerging #2516 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2516      +/-\n==========================================\n+ Coverage    69.4%   69.41%   +0.01%   \n==========================================\n  Files         852      852            \n  Lines       39678    39679       +1   \n  Branches     5335     5335            \n==========================================\n+ Hits        27538    27544       +6   \n+ Misses      10346    10337       -9   \n- Partials     1794     1798       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/core/segment/memory/PinotByteBuffer.java | 69.53% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/io/writer/impl/v1/FixedBitSingleValueWriter.java | 56.25% <100%> (+2.91%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 92% <0%> (-4%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a29534b...3af9cfe. Read the comment docs.\n. # Codecov Report\nMerging #2522 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2522      +/-\n==========================================\n- Coverage   69.44%   69.42%   -0.03%   \n==========================================\n  Files         852      852            \n  Lines       39681    39681            \n  Branches     5335     5335            \n==========================================\n- Hits        27558    27549       -9   \n- Misses      10334    10345      +11   \n+ Partials     1789     1787       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 91.42% <100%> (+0.71%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-15.16%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...aggregation/function/AggregationFunctionUtils.java | 89.28% <0%> (-3.58%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 73.33% <0%> (-1.49%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.18% <0%> (-1.13%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.73% <0%> (-0.2%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 67be7cc...b73eaf0. Read the comment docs.\n. # Codecov Report\nMerging #2523 into master will increase coverage by 0.01%.\nThe diff coverage is 84.84%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2523      +/-\n==========================================\n+ Coverage   69.44%   69.46%   +0.01%   \n==========================================\n  Files         852      852            \n  Lines       39681    39718      +37   \n  Branches     5335     5339       +4   \n==========================================\n+ Hits        27558    27591      +33   \n- Misses      10334    10341       +7   \n+ Partials     1789     1786       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.77% <84.84%> (-0.16%) | :arrow_down: |\n| ...n/java/com/linkedin/pinot/core/util/AvroUtils.java | 56.55% <0%> (-17.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.39% <0%> (-4.23%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (+0.35%) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 67be7cc...7055dd5. Read the comment docs.\n. # Codecov Report\nMerging #2529 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2529      +/-\n==========================================\n+ Coverage   69.47%   69.52%   +0.04%   \n==========================================\n  Files         852      852            \n  Lines       39681    39677       -4   \n  Branches     5335     5335            \n==========================================\n+ Hits        27569    27586      +17   \n+ Misses      10326    10303      -23   \n- Partials     1786     1788       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 51.94% <\u00f8> (-1.14%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (-0.43%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.1% <0%> (-0.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | :arrow_up: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b06641c...bd64724. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1a254d7). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2536   +/-\n=========================================\n  Coverage          ?   69.38%         \n=========================================\n  Files             ?      852         \n  Lines             ?    39711         \n  Branches          ?     5336         \n=========================================\n  Hits              ?    27554         \n  Misses            ?    10365         \n  Partials          ?     1792\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 85.71% <\u00f8> (\u00f8) | |\n| ...not/controller/validation/StorageQuotaChecker.java | 95% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1a254d7...fda3afa. Read the comment docs.\n. # Codecov Report\nMerging #2537 into master will increase coverage by 0.03%.\nThe diff coverage is 77.35%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2537      +/-\n==========================================\n+ Coverage   69.39%   69.43%   +0.03%   \n==========================================\n  Files         852      852            \n  Lines       39711    39789      +78   \n  Branches     5336     5347      +11   \n==========================================\n+ Hits        27559    27627      +68   \n- Misses      10363    10368       +5   \n- Partials     1789     1794       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inot/core/realtime/impl/RealtimeSegmentConfig.java | 96.55% <100%> (+0.32%) | :arrow_up: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 54.43% <100%> (+1.79%) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.63% <33.33%> (-0.72%) | :arrow_down: |\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 83.09% <69.23%> (-1.4%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.32% <69.23%> (-0.65%) | :arrow_down: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 69.11% <79.41%> (+0.74%) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-5.56%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d09dac0...a018b57. Read the comment docs.\n. # Codecov Report\nMerging #2544 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2544      +/-\n==========================================\n+ Coverage   69.39%   69.39%   +<.01%   \n==========================================\n  Files         852      852            \n  Lines       39711    39709       -2   \n  Branches     5336     5336            \n==========================================\n- Hits        27559    27558       -1   \n+ Misses      10363    10357       -6   \n- Partials     1789     1794       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 75.38% <\u00f8> (+0.75%) | :arrow_up: |\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 81.39% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d09dac0...dde9f33. Read the comment docs.\n. # Codecov Report\nMerging #2546 into master will decrease coverage by <.01%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2546      +/-\n==========================================\n- Coverage   69.42%   69.42%   -0.01%   \n==========================================\n  Files         852      852            \n  Lines       39783    39791       +8   \n  Branches     5347     5347            \n==========================================\n+ Hits        27621    27624       +3   \n- Misses      10364    10369       +5   \n  Partials     1798     1798\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.81% <40%> (-0.36%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 76.14% <50%> (-0.09%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.2% <0%> (-3.45%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 44.71% <0%> (-1.63%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 34e10e8...5524c77. Read the comment docs.\n. # Codecov Report\nMerging #2547 into master will decrease coverage by 0.97%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2547      +/-\n==========================================\n- Coverage   69.42%   68.44%   -0.98%   \n==========================================\n  Files         852      860       +8   \n  Lines       39783    40960    +1177   \n  Branches     5347     5656     +309   \n==========================================\n+ Hits        27621    28037     +416   \n- Misses      10364    11087     +723   \n- Partials     1798     1836      +38\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../api/resources/ControllerApplicationException.java | 60% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 68.14% <33.33%> (+0.91%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ion/BalancedStreamPartitionAssignmentStrategy.java | 72.6% <0%> (-23.7%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 58.86% <0%> (-22.75%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-15.16%) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 62.43% <0%> (-13.8%) | :arrow_down: |\n| ...lix/core/realtime/partition/RealtimePartition.java | 40% <0%> (-13.34%) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 50.61% <0%> (-11.09%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 34 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 34e10e8...d3ba24e. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@d4824dc). Click here to learn what that means.\nThe diff coverage is 67.53%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2549   +/-\n=========================================\n  Coverage          ?   69.36%         \n=========================================\n  Files             ?      861         \n  Lines             ?    39918         \n  Branches          ?     5360         \n=========================================\n  Hits              ?    27690         \n  Misses            ?    10414         \n  Partials          ?     1814\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ion/BalancedStreamPartitionAssignmentStrategy.java | 96.36% <\u00f8> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.87% <\u00f8> (\u00f8) | |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 76.29% <\u00f8> (\u00f8) | |\n| ...tion/UniformStreamPartitionAssignmentStrategy.java | 100% <\u00f8> (\u00f8) | |\n| .../partition/StreamPartitionAssignmentGenerator.java | 93.93% <\u00f8> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 74.8% <\u00f8> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 81.6% <\u00f8> (\u00f8) | |\n| ...in/pinot/common/partition/PartitionAssignment.java | 70% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.53% <100%> (\u00f8) | |\n| ...harding/ReplicaGroupSegmentAssignmentStrategy.java | 100% <100%> (\u00f8) | |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d4824dc...893fd6a. Read the comment docs.\n. # Codecov Report\nMerging #2551 into master will increase coverage by 0.19%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2551      +/-\n=========================================\n+ Coverage   69.21%   69.4%   +0.19%   \n=========================================\n  Files         859     859            \n  Lines       39889   39890       +1   \n  Branches     5351    5351            \n=========================================\n+ Hits        27609   27687      +78   \n+ Misses      10481   10399      -82   \n- Partials     1799    1804       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...minion/executor/BaseSegmentConversionExecutor.java | 70% <100%> (+0.5%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-3.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 77.77% <0%> (+1.38%) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2a4c18b...fa56dca. Read the comment docs.\n. # Codecov Report\nMerging #2553 into master will decrease coverage by 0.13%.\nThe diff coverage is 18.18%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2553      +/-\n==========================================\n- Coverage   69.47%   69.33%   -0.14%   \n==========================================\n  Files         859      859            \n  Lines       39880    39880            \n  Branches     5352     5355       +3   \n==========================================\n- Hits        27706    27651      -55   \n- Misses      10366    10411      +45   \n- Partials     1808     1818      +10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ler/api/resources/PinotSegmentRestletResource.java | 31.25% <18.18%> (+4.54%) | :arrow_up: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-11.12%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update be57fd9...f708be4. Read the comment docs.\n. # Codecov Report\nMerging #2556 into master will decrease coverage by 0.1%.\nThe diff coverage is 93.75%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2556      +/-\n==========================================\n- Coverage   69.47%   69.37%   -0.11%   \n==========================================\n  Files         859      859            \n  Lines       39880    39877       -3   \n  Branches     5352     5352            \n==========================================\n- Hits        27706    27664      -42   \n- Misses      10366    10408      +42   \n+ Partials     1808     1805       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 87.19% <93.75%> (+0.21%) | :arrow_up: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 72.61% <0%> (-3.58%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 73.33% <0%> (-2.97%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update be57fd9...4f1cf9a. Read the comment docs.\n. # Codecov Report\nMerging #2559 into master will increase coverage by 0.01%.\nThe diff coverage is 73.91%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2559      +/-\n==========================================\n+ Coverage    69.4%   69.42%   +0.01%   \n==========================================\n  Files         859      860       +1   \n  Lines       39877    39874       -3   \n  Branches     5355     5353       -2   \n==========================================\n+ Hits        27676    27681       +5   \n+ Misses      10389    10383       -6   \n+ Partials     1812     1810       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 53.93% <100%> (\u00f8) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 70% <100%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/utils/SimpleHttpResponse.java | 100% <100%> (\u00f8) | |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.38% <50%> (-2.76%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.39% <0%> (-3.53%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.28% <0%> (-2.82%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 77314d0...2b80324. Read the comment docs.\n. # Codecov Report\nMerging #2560 into master will decrease coverage by 0.04%.\nThe diff coverage is 83.56%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2560      +/-\n==========================================\n- Coverage    69.4%   69.36%   -0.05%   \n==========================================\n  Files         859      860       +1   \n  Lines       39877    39903      +26   \n  Branches     5355     5358       +3   \n==========================================\n+ Hits        27676    27678       +2   \n- Misses      10389    10408      +19   \n- Partials     1812     1817       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/controller/validation/ValidationManager.java | 81.6% <100%> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 74.8% <83.33%> (+0.05%) | :arrow_up: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-15.16%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-14.55%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.38% <0%> (-2.76%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 77314d0...2855512. Read the comment docs.\n. # Codecov Report\nMerging #2581 into master will increase coverage by 0.07%.\nThe diff coverage is 70%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2581      +/-\n==========================================\n+ Coverage   69.37%   69.45%   +0.07%   \n==========================================\n  Files         861      861            \n  Lines       39918    39935      +17   \n  Branches     5360     5362       +2   \n==========================================\n+ Hits        27693    27735      +42   \n+ Misses      10415    10387      -28   \n- Partials     1810     1813       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/server/starter/helix/HelixServerStarter.java | 76.14% <70%> (-2.12%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-17.78%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-3.45%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.1% <0%> (-1.07%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (-0.43%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update daf835a...d184566. Read the comment docs.\n. # Codecov Report\nMerging #2586 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2586      +/-\n=========================================\n+ Coverage   69.37%   69.4%   +0.03%   \n=========================================\n  Files         861     861            \n  Lines       39918   39918            \n  Branches     5360    5360            \n=========================================\n+ Hits        27693   27706      +13   \n+ Misses      10415   10404      -11   \n+ Partials     1810    1808       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 39.87% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 49.14% <0%> (-0.43%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.81% <0%> (-0.36%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d8722bc...c347173. Read the comment docs.\n. # Codecov Report\nMerging #2604 into master will increase coverage by 0.02%.\nThe diff coverage is 75.8%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2604      +/-\n==========================================\n+ Coverage   69.37%   69.39%   +0.02%   \n==========================================\n  Files         861      862       +1   \n  Lines       39910    40034     +124   \n  Branches     5357     5375      +18   \n==========================================\n+ Hits        27686    27781      +95   \n- Misses      10422    10436      +14   \n- Partials     1802     1817      +15\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/controller/ControllerConf.java | 42.97% <20%> (-1%) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 77.87% <77.87%> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 60.23% <83.33%> (+0.83%) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 88.67% <0%> (-5.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 91765a7...182519a. Read the comment docs.\n. # Codecov Report\nMerging #2606 into master will decrease coverage by 0.01%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2606      +/-\n==========================================\n- Coverage   69.37%   69.35%   -0.02%   \n==========================================\n  Files         861      861            \n  Lines       39910    39909       -1   \n  Branches     5357     5357            \n==========================================\n- Hits        27686    27679       -7   \n- Misses      10422    10425       +3   \n- Partials     1802     1805       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 57.5% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pl/kafka/KafkaHighLevelConsumerStreamProvider.java | 76.47% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ealtime/impl/kafka/SimpleConsumerMessageBatch.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/realtime/impl/kafka/KafkaAvroMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...e/realtime/impl/kafka/KafkaJSONMessageDecoder.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 46.42% <0%> (\u00f8) | :arrow_up: |\n| ...impl/kafka/KafkaHighLevelStreamProviderConfig.java | 55.66% <100%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 68.89% <100%> (-0.2%) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/realtime/stream/StreamMetadata.java | 65.26% <100%> (\u00f8) | |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 91765a7...1a4b9a9. Read the comment docs.\n. # Codecov Report\nMerging #2608 into master will decrease coverage by 0.03%.\nThe diff coverage is 38.46%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2608      +/-\n==========================================\n- Coverage   69.42%   69.39%   -0.04%   \n==========================================\n  Files         862      861       -1   \n  Lines       39947    39950       +3   \n  Branches     5374     5374            \n==========================================\n- Hits        27734    27723      -11   \n- Misses      10408    10423      +15   \n+ Partials     1805     1804       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 70.94% <38.46%> (-5.36%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-14.55%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 93.33% <0%> (-2.23%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.6% <0%> (-0.95%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (\u00f8) | :arrow_up: |\n| ...not/controller/validation/StorageQuotaChecker.java | 95% <0%> (\u00f8) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f356425...a461792. Read the comment docs.\n. # Codecov Report\nMerging #2610 into master will increase coverage by <.01%.\nThe diff coverage is 84.29%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2610      +/-\n==========================================\n+ Coverage   69.37%   69.37%   +<.01%   \n==========================================\n  Files         861      861            \n  Lines       39909    39859      -50   \n  Branches     5357     5364       +7   \n==========================================\n- Hits        27688    27654      -34   \n+ Misses      10411    10406       -5   \n+ Partials     1810     1799      -11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/core/common/BaseBlockValSet.java | 4.34% <\u00f8> (\u00f8) | :arrow_up: |\n| ...upby/NoDictionaryMultiColumnGroupKeyGenerator.java | 92.92% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/operator/blocks/ProjectionBlock.java | 73.33% <100%> (\u00f8) | :arrow_up: |\n| ...tion/groupby/DictionaryBasedGroupKeyGenerator.java | 97.65% <100%> (+0.08%) | :arrow_up: |\n| ...re/segment/index/data/source/ColumnDataSource.java | 94.59% <50%> (-2.55%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 73.98% <72.97%> (-2.53%) | :arrow_down: |\n| ...va/com/linkedin/pinot/core/common/DataFetcher.java | 80.73% <78.31%> (+2.56%) | :arrow_up: |\n| ...ore/operator/docvalsets/ProjectionBlockValSet.java | 84.21% <81.25%> (+5.04%) | :arrow_up: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-12.13%) | :arrow_down: |\n| ...din/pinot/core/operator/blocks/TransformBlock.java | 64.28% <0%> (-7.15%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update da16c67...5597733. Read the comment docs.\n. # Codecov Report\nMerging #2613 into master will decrease coverage by 0.02%.\nThe diff coverage is 92.3%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2613      +/-\n==========================================\n- Coverage   69.38%   69.36%   -0.03%   \n==========================================\n  Files         862      862            \n  Lines       39983    39971      -12   \n  Branches     5382     5381       -1   \n==========================================\n- Hits        27742    27724      -18   \n- Misses      10425    10431       +6   \n  Partials     1816     1816\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/common/predicate/BaseInPredicate.java | 66.66% <100%> (\u00f8) | :arrow_up: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 94.59% <100%> (+3.68%) | :arrow_up: |\n| ...om/linkedin/pinot/pql/parsers/Pql2AstListener.java | 88.6% <100%> (-0.08%) | :arrow_down: |\n| ...pinot/pql/parsers/pql2/ast/InPredicateAstNode.java | 63.63% <100%> (-2.47%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.08% <100%> (-0.05%) | :arrow_down: |\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 71.96% <80%> (-0.77%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 334d504...2f89421. Read the comment docs.\n. # Codecov Report\nMerging #2614 into master will decrease coverage by 0.01%.\nThe diff coverage is 92.3%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2614      +/-\n==========================================\n- Coverage    69.4%   69.38%   -0.02%   \n==========================================\n  Files         862      862            \n  Lines       39983    39971      -12   \n  Branches     5382     5381       -1   \n==========================================\n- Hits        27749    27734      -15   \n- Misses      10419    10425       +6   \n+ Partials     1815     1812       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.24% <100%> (+2.33%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.08% <100%> (-0.05%) | :arrow_down: |\n| ...n/pinot/core/common/predicate/BaseInPredicate.java | 66.66% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/pql/parsers/pql2/ast/InPredicateAstNode.java | 63.63% <100%> (-2.47%) | :arrow_down: |\n| ...om/linkedin/pinot/pql/parsers/Pql2AstListener.java | 88.6% <100%> (-0.08%) | :arrow_down: |\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 71.96% <80%> (-0.77%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f077f9a...f1bc0c8. Read the comment docs.\n. # Codecov Report\nMerging #2622 into master will decrease coverage by 0.05%.\nThe diff coverage is 55.55%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2622      +/-\n==========================================\n- Coverage   69.42%   69.37%   -0.06%   \n==========================================\n  Files         862      862            \n  Lines       39947    39955       +8   \n  Branches     5374     5375       +1   \n==========================================\n- Hits        27732    27717      -15   \n- Misses      10409    10426      +17   \n- Partials     1806     1812       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 90% <100%> (+0.2%) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 67.16% <50%> (-2.84%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 33988ca...19e94b9. Read the comment docs.\n. # Codecov Report\nMerging #2623 into master will increase coverage by 0.01%.\nThe diff coverage is 88.23%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2623      +/-\n=========================================\n+ Coverage   69.38%   69.4%   +0.01%   \n=========================================\n  Files         862     862            \n  Lines       39983   39959      -24   \n  Branches     5382    5375       -7   \n=========================================\n- Hits        27742   27732      -10   \n+ Misses      10425   10420       -5   \n+ Partials     1816    1807       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/plan/AggregationGroupByPlanNode.java | 60% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 84.05% <\u00f8> (-0.23%) | :arrow_down: |\n| ...m/linkedin/pinot/core/plan/ProjectionPlanNode.java | 65.62% <100%> (+1.1%) | :arrow_up: |\n| ...kedin/pinot/common/utils/request/RequestUtils.java | 87.06% <100%> (-0.94%) | :arrow_down: |\n| ...perator/transform/TransformExpressionOperator.java | 90.9% <100%> (+6.29%) | :arrow_up: |\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 72.47% <100%> (-0.26%) | :arrow_down: |\n| ...om/linkedin/pinot/core/plan/TransformPlanNode.java | 75% <100%> (+12.73%) | :arrow_up: |\n| ...t/core/query/selection/SelectionOperatorUtils.java | 95.41% <100%> (\u00f8) | :arrow_up: |\n| ...mon/request/transform/TransformExpressionTree.java | 80.76% <80%> (-9.71%) | :arrow_down: |\n| ...operator/transform/DefaultExpressionEvaluator.java | 86.36% <87.5%> (-1.14%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b529eed...c4a9670. Read the comment docs.\n. # Codecov Report\nMerging #2624 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2624      +/-\n==========================================\n- Coverage    69.4%   69.39%   -0.01%   \n==========================================\n  Files         862      862            \n  Lines       39983    39983            \n  Branches     5382     5382            \n==========================================\n- Hits        27749    27748       -1   \n- Misses      10419    10423       +4   \n+ Partials     1815     1812       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.38% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 88.67% <0%> (-5.67%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-2.82%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.45% <0%> (-2.18%) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 74.69% <0%> (-1.81%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 44.71% <0%> (-1.63%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.44% <0%> (-1.13%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f077f9a...867ec5c. Read the comment docs.\n. # Codecov Report\nMerging #2627 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2627      +/-\n==========================================\n+ Coverage   69.38%   69.39%   +0.01%   \n==========================================\n  Files         862      862            \n  Lines       39983    39983            \n  Branches     5382     5382            \n==========================================\n+ Hits        27742    27746       +4   \n+ Misses      10425    10424       -1   \n+ Partials     1816     1813       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 62.76% <0%> (-2.13%) | :arrow_down: |\n| ...src/main/java/com/linkedin/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.1% <0%> (-1.07%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 73.43% <0%> (\u00f8) | :arrow_up: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0a5bc80...be5f30e. Read the comment docs.\n. # Codecov Report\nMerging #2630 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2630      +/-\n==========================================\n- Coverage   69.42%   69.36%   -0.06%   \n==========================================\n  Files         862      862            \n  Lines       39947    39947            \n  Branches     5374     5374            \n==========================================\n- Hits        27732    27711      -21   \n- Misses      10409    10429      +20   \n- Partials     1806     1807       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-20%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 44.71% <0%> (-1.63%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ce2143c...302767a. Read the comment docs.\n. # Codecov Report\nMerging #2633 into master will increase coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2633      +/-\n=========================================\n+ Coverage   69.33%   69.4%   +0.06%   \n=========================================\n  Files         862     862            \n  Lines       39947   39947            \n  Branches     5374    5374            \n=========================================\n+ Hits        27698   27725      +27   \n+ Misses      10438   10411      -27   \n  Partials     1811    1811\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...mon/request/transform/TransformExpressionTree.java | 80.76% <100%> (\u00f8) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-3.45%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (-2.48%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 88.7% <0%> (-1.62%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (\u00f8) | :arrow_up: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 86.61% <0%> (+0.7%) | :arrow_up: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 30fae06...76ac4e6. Read the comment docs.\n. # Codecov Report\nMerging #2637 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2637      +/-\n=========================================\n- Coverage   69.42%   69.4%   -0.03%   \n=========================================\n  Files         862     862            \n  Lines       39947   39947            \n  Branches     5374    5374            \n=========================================\n- Hits        27734   27726       -8   \n- Misses      10408   10410       +2   \n- Partials     1805    1811       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/validation/StorageQuotaChecker.java | 95% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f356425...0728563. Read the comment docs.\n. # Codecov Report\nMerging #2640 into master will decrease coverage by 0.07%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2640      +/-\n==========================================\n- Coverage    69.4%   69.33%   -0.08%   \n==========================================\n  Files         862      861       -1   \n  Lines       39947    39953       +6   \n  Branches     5374     5375       +1   \n==========================================\n- Hits        27726    27702      -24   \n- Misses      10413    10434      +21   \n- Partials     1808     1817       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.48% <\u00f8> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 55.84% <66.66%> (+0.14%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 85.41% <0%> (-6.25%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 70.94% <0%> (-5.36%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-3.64%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a893483...8bf4ae9. Read the comment docs.\n. # Codecov Report\nMerging #2643 into master will increase coverage by 0.11%.\nThe diff coverage is 57.14%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2643      +/-\n=========================================\n+ Coverage   69.39%   69.5%   +0.11%   \n=========================================\n  Files         861     860       -1   \n  Lines       39950   39925      -25   \n  Branches     5374    5372       -2   \n=========================================\n+ Hits        27722   27750      +28   \n+ Misses      10416   10366      -50   \n+ Partials     1812    1809       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 71.91% <57.14%> (+0.97%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 67.16% <0%> (-2.84%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-2.03%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-1.73%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.1% <0%> (-1.07%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 557e6ab...a9f0c8e. Read the comment docs.\n. # Codecov Report\nMerging #2651 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2651      +/-\n==========================================\n- Coverage   69.47%   69.42%   -0.06%   \n==========================================\n  Files         860      860            \n  Lines       39927    39927            \n  Branches     5372     5372            \n==========================================\n- Hits        27739    27719      -20   \n- Misses      10370    10395      +25   \n+ Partials     1818     1813       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (-50%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <0%> (-15.39%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.38% <0%> (-11.54%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6e6ab83...04cc0f1. Read the comment docs.\n. # Codecov Report\nMerging #2652 into master will decrease coverage by 0.12%.\nThe diff coverage is 64.22%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2652      +/-\n==========================================\n- Coverage   69.36%   69.23%   -0.13%   \n==========================================\n  Files         860      862       +2   \n  Lines       39855    40413     +558   \n  Branches     5363     5459      +96   \n==========================================\n+ Hits        27645    27981     +336   \n- Misses      10407    10621     +214   \n- Partials     1803     1811       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/operator/query/AggregationGroupByOperator.java | 95% <\u00f8> (-0.46%) | :arrow_down: |\n| ...pinot/core/operator/query/AggregationOperator.java | 94.11% <\u00f8> (-0.62%) | :arrow_down: |\n| ...form/function/TimeConversionTransformFunction.java | 100% <100%> (\u00f8) | |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 100% <100%> (+5.43%) | :arrow_up: |\n| ...tion/groupby/DictionaryBasedGroupKeyGenerator.java | 97.64% <100%> (-0.01%) | :arrow_down: |\n| ...not/core/operator/transform/TransformOperator.java | 94.44% <100%> (+3.53%) | :arrow_up: |\n| ...in/pinot/core/operator/blocks/ProjectionBlock.java | 69.23% <100%> (+2.56%) | :arrow_up: |\n| ...core/query/exception/BadQueryRequestException.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../query/aggregation/DefaultAggregationExecutor.java | 100% <100%> (+10.52%) | :arrow_up: |\n| ...core/operator/docvalsets/TransformBlockValSet.java | 14.89% <14.89%> (-37.74%) | :arrow_down: |\n| ... and 53 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1bb018a...471b9bc. Read the comment docs.\n. # Codecov Report\nMerging #2653 into master will decrease coverage by 0.11%.\nThe diff coverage is 63.97%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2653      +/-\n==========================================\n- Coverage   69.47%   69.36%   -0.12%   \n==========================================\n  Files         860      861       +1   \n  Lines       39927    40076     +149   \n  Branches     5372     5403      +31   \n==========================================\n+ Hits        27739    27797      +58   \n- Misses      10370    10458      +88   \n- Partials     1818     1821       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 69.76% <100%> (+1.47%) | :arrow_up: |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 64.4% <52.17%> (-19.2%) | :arrow_down: |\n| ...data/readers/MultiplePinotSegmentRecordReader.java | 72.22% <72.22%> (\u00f8) | |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (-50%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <0%> (-15.39%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-14.55%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.38% <0%> (-11.54%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6e6ab83...78c6fcb. Read the comment docs.\n. # Codecov Report\nMerging #2655 into master will increase coverage by 0.07%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2655      +/-\n==========================================\n+ Coverage   69.37%   69.44%   +0.07%   \n==========================================\n  Files         860      860            \n  Lines       39879    39885       +6   \n  Branches     5365     5366       +1   \n==========================================\n+ Hits        27665    27699      +34   \n+ Misses      10408    10383      -25   \n+ Partials     1806     1803       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 87.29% <100%> (+0.21%) | :arrow_up: |\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-7.28%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-6.07%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.93% <0%> (-3.45%) | :arrow_down: |\n| .../com/linkedin/pinot/client/ExternalViewReader.java | 50% <0%> (-2.86%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 44.71% <0%> (-1.63%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d184679...d2a3528. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@462b295). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2656   +/-\n=========================================\n  Coverage          ?   69.37%         \n=========================================\n  Files             ?      860         \n  Lines             ?    39925         \n  Branches          ?     5372         \n=========================================\n  Hits              ?    27697         \n  Misses            ?    10411         \n  Partials          ?     1817\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 78.5% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 462b295...aa150c6. Read the comment docs.\n. # Codecov Report\nMerging #2659 into master will decrease coverage by 0.05%.\nThe diff coverage is 67.92%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2659      +/-\n==========================================\n- Coverage   69.44%   69.38%   -0.06%   \n==========================================\n  Files         860      860            \n  Lines       39931    39888      -43   \n  Branches     5373     5363      -10   \n==========================================\n- Hits        27729    27678      -51   \n- Misses      10392    10411      +19   \n+ Partials     1810     1799      -11\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ransform/function/DateTimeConversionTransform.java | 5.88% <0%> (-70.12%) | :arrow_down: |\n| .../transformer/timeunit/JavaTimeUnitTransformer.java | 100% <100%> (\u00f8) | |\n| ...rm/transformer/datetime/SDFToEpochTransformer.java | 100% <100%> (\u00f8) | |\n| ...ransformer/timeunit/CustomTimeUnitTransformer.java | 100% <100%> (\u00f8) | |\n| .../transformer/datetime/EpochToEpochTransformer.java | 100% <100%> (\u00f8) | |\n| ...or/transform/function/TimeConversionTransform.java | 72.22% <100%> (\u00f8) | :arrow_up: |\n| .../transformer/datetime/BaseDateTimeTransformer.java | 100% <100%> (\u00f8) | |\n| ...form/transformer/datetime/SDFToSDFTransformer.java | 100% <100%> (\u00f8) | |\n| ...rm/transformer/datetime/EpochToSDFTransformer.java | 100% <100%> (\u00f8) | |\n| ...edin/pinot/common/data/DateTimeFormatUnitSpec.java | 68.29% <64.7%> (-7.47%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c5cd3f6...fa7f2bb. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@cff235a). Click here to learn what that means.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2660   +/-\n=========================================\n  Coverage          ?   69.43%         \n=========================================\n  Files             ?      860         \n  Lines             ?    39931         \n  Branches          ?     5373         \n=========================================\n  Hits              ?    27725         \n  Misses            ?    10395         \n  Partials          ?     1811\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.69% <83.33%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cff235a...7fe80e3. Read the comment docs.\n. # Codecov Report\nMerging #2667 into master will increase coverage by 0.02%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2667      +/-\n==========================================\n+ Coverage   69.44%   69.47%   +0.02%   \n==========================================\n  Files         860      860            \n  Lines       39931    39940       +9   \n  Branches     5373     5374       +1   \n==========================================\n+ Hits        27729    27747      +18   \n+ Misses      10392    10387       -5   \n+ Partials     1810     1806       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/segment/index/loader/IndexLoadingConfig.java | 83.33% <50%> (-2.97%) | :arrow_down: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 55.42% <75%> (+0.99%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 83.09% <0%> (-2.82%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c5cd3f6...4a8cc30. Read the comment docs.\n. # Codecov Report\nMerging #2671 into master will increase coverage by 0.02%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2671      +/-\n==========================================\n+ Coverage   69.35%   69.37%   +0.02%   \n==========================================\n  Files         860      860            \n  Lines       39897    39889       -8   \n  Branches     5364     5366       +2   \n==========================================\n+ Hits        27669    27672       +3   \n+ Misses      10424    10414      -10   \n+ Partials     1804     1803       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ller/api/resources/PinotSchemaRestletResource.java | 39.06% <60%> (-5.39%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 91.06% <0%> (-1.12%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (+2.06%) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 92.93% <0%> (+2.82%) | :arrow_up: |\n| ... and 4 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c084ab...5dc722f. Read the comment docs.\n. # Codecov Report\nMerging #2672 into master will increase coverage by 0.1%.\nThe diff coverage is 75%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2672     +/-\n=========================================\n+ Coverage   69.35%   69.45%   +0.1%   \n=========================================\n  Files         860      860           \n  Lines       39897    39894      -3   \n  Branches     5364     5363      -1   \n=========================================\n+ Hits        27669    27707     +38   \n+ Misses      10424    10388     -36   \n+ Partials     1804     1799      -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/pql/parsers/pql2/ast/GroupByAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 79.18% <50%> (+0.68%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <0%> (-1.02%) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 57.43% <0%> (-0.68%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (+0.35%) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3c084ab...9b060e6. Read the comment docs.\n. # Codecov Report\nMerging #2673 into master will increase coverage by 0.02%.\nThe diff coverage is 62.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2673      +/-\n==========================================\n+ Coverage   69.36%   69.38%   +0.02%   \n==========================================\n  Files         860      860            \n  Lines       39886    39879       -7   \n  Branches     5365     5365            \n==========================================\n+ Hits        27666    27671       +5   \n+ Misses      10415    10409       -6   \n+ Partials     1805     1799       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ller/api/resources/PinotSchemaRestletResource.java | 40% <60%> (+0.93%) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 58.26% <61.9%> (+0.19%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.03% <66.66%> (+0.19%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 53.65% <0%> (-4.88%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.28% <0%> (-2.82%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 81.05% <0%> (-2.11%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update adbc712...aba53cd. Read the comment docs.\n. # Codecov Report\nMerging #2674 into master will decrease coverage by 0.02%.\nThe diff coverage is 18.18%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2674      +/-\n==========================================\n- Coverage   69.37%   69.35%   -0.03%   \n==========================================\n  Files         860      861       +1   \n  Lines       39879    39888       +9   \n  Branches     5365     5365            \n==========================================\n- Hits        27665    27663       -2   \n- Misses      10408    10419      +11   \n  Partials     1806     1806\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../linkedin/pinot/core/minion/RawIndexConverter.java | 60.75% <\u00f8> (\u00f8) | :arrow_up: |\n| ...or/impl/fwd/SingleValueVarByteRawIndexCreator.java | 57.14% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 91.55% <\u00f8> (\u00f8) | :arrow_up: |\n| .../writer/impl/v1/VarByteChunkSingleValueWriter.java | 96.55% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 77.61% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/common/compression/ChunkCompressorFactory.java | 64.7% <\u00f8> (\u00f8) | |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 55.42% <\u00f8> (\u00f8) | :arrow_up: |\n| .../io/writer/impl/v1/BaseChunkSingleValueWriter.java | 78.18% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/common/compression/SnappyCompressor.java | 100% <\u00f8> (\u00f8) | |\n| ...inot/common/compression/PassThroughCompressor.java | 100% <\u00f8> (\u00f8) | |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7f45055...e512774. Read the comment docs.\n. # Codecov Report\nMerging #2675 into master will increase coverage by 0.02%.\nThe diff coverage is 71.77%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2675      +/-\n==========================================\n+ Coverage   69.17%   69.19%   +0.02%   \n==========================================\n  Files         862      866       +4   \n  Lines       40413    40532     +119   \n  Branches     5459     5475      +16   \n==========================================\n+ Hits        27956    28047      +91   \n- Misses      10640    10661      +21   \n- Partials     1817     1824       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 74.86% <100%> (+0.14%) | :arrow_up: |\n| ...inot/core/data/extractors/PlainFieldExtractor.java | 80.82% <45%> (-4.68%) | :arrow_down: |\n| ...edin/pinot/core/data/function/FunctionInvoker.java | 48% <48%> (\u00f8) | |\n| ...din/pinot/core/data/function/FunctionRegistry.java | 70.58% <70.58%> (\u00f8) | |\n| ...inkedin/pinot/core/data/function/FunctionInfo.java | 73.33% <73.33%> (\u00f8) | |\n| ...ore/data/function/FunctionExpressionEvaluator.java | 95.65% <95.65%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2a0153...3482476. Read the comment docs.\n. # Codecov Report\nMerging #2676 into master will decrease coverage by 0.1%.\nThe diff coverage is 70.96%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2676      +/-\n==========================================\n- Coverage   69.37%   69.26%   -0.11%   \n==========================================\n  Files         860      865       +5   \n  Lines       39879    40488     +609   \n  Branches     5365     5472     +107   \n==========================================\n+ Hits        27665    28045     +380   \n- Misses      10408    10629     +221   \n- Partials     1806     1814       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../partition/StreamPartitionAssignmentGenerator.java | 93.93% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.49% <0%> (-0.2%) | :arrow_down: |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 76.08% <0%> (+4.16%) | :arrow_up: |\n| ...oller/api/resources/PinotTableRestletResource.java | 38.92% <0%> (-0.96%) | :arrow_down: |\n| ...pinot/common/exception/InvalidConfigException.java | 100% <100%> (\u00f8) | |\n| ...me/segment/ConsumingSegmentAssignmentStrategy.java | 100% <100%> (\u00f8) | |\n| ...in/pinot/common/partition/PartitionAssignment.java | 58.62% <33.33%> (-11.38%) | :arrow_down: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 80% <66.66%> (\u00f8) | :arrow_up: |\n| ...common/partition/PartitionAssignmentGenerator.java | 88.67% <88.67%> (\u00f8) | |\n| ...core/operator/docvalsets/TransformBlockValSet.java | 14.89% <0%> (-38.96%) | :arrow_down: |\n| ... and 88 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 333d038...244ba3b. Read the comment docs.\n. # Codecov Report\nMerging #2677 into master will decrease coverage by <.01%.\nThe diff coverage is 83.47%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2677      +/-\n==========================================\n- Coverage   69.37%   69.36%   -0.01%   \n==========================================\n  Files         860      860            \n  Lines       39879    39849      -30   \n  Branches     5365     5362       -3   \n==========================================\n- Hits        27665    27641      -24   \n+ Misses      10408    10406       -2   \n+ Partials     1806     1802       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 91.91% <\u00f8> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/core/common/BaseBlockValSet.java | 4.54% <\u00f8> (+0.19%) | :arrow_up: |\n| ...upby/NoDictionaryMultiColumnGroupKeyGenerator.java | 92.92% <\u00f8> (\u00f8) | :arrow_up: |\n| ...e/query/aggregation/groupby/GroupKeyGenerator.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ore/operator/docvalsets/ProjectionBlockValSet.java | 84.21% <\u00f8> (\u00f8) | :arrow_up: |\n| ...tion/groupby/DictionaryBasedGroupKeyGenerator.java | 97.65% <\u00f8> (\u00f8) | :arrow_up: |\n| .../query/aggregation/DefaultAggregationExecutor.java | 89.47% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/operator/docvalsets/TransformBlockValSet.java | 52.63% <\u00f8> (-1.22%) | :arrow_down: |\n| ...linkedin/pinot/core/operator/DocIdSetOperator.java | 92% <100%> (\u00f8) | |\n| ... and 46 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7f45055...10b9add. Read the comment docs.\n. # Codecov Report\nMerging #2680 into master will increase coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2680      +/-\n==========================================\n+ Coverage   69.17%   69.25%   +0.07%   \n==========================================\n  Files         862      862            \n  Lines       40413    40413            \n  Branches     5459     5459            \n==========================================\n+ Hits        27956    27987      +31   \n+ Misses      10640    10623      -17   \n+ Partials     1817     1803      -14\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 56.09% <0%> (-4.88%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-4.45%) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 75.22% <0%> (-2.66%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-1.38%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.24% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.6% <0%> (-0.95%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.27% <0%> (+0.19%) | :arrow_up: |\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 69.41% <0%> (+0.3%) | :arrow_up: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2a0153...e966362. Read the comment docs.\n. # Codecov Report\nMerging #2681 into master will increase coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2681      +/-\n==========================================\n+ Coverage   69.17%   69.23%   +0.06%   \n==========================================\n  Files         862      862            \n  Lines       40413    40401      -12   \n  Branches     5459     5459            \n==========================================\n+ Hits        27956    27973      +17   \n+ Misses      10640    10614      -26   \n+ Partials     1817     1814       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/common/datatable/DataTableBuilder.java | 98.8% <\u00f8> (+7.74%) | :arrow_up: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.24% <0%> (-1.36%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.31% <0%> (-1.13%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (+0.68%) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.81% <0%> (+0.7%) | :arrow_up: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2a0153...090c3de. Read the comment docs.\n. # Codecov Report\nMerging #2682 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2682      +/-\n==========================================\n+ Coverage   69.44%   69.48%   +0.03%   \n==========================================\n  Files         871      871            \n  Lines       40839    40839            \n  Branches     5551     5551            \n==========================================\n+ Hits        28360    28375      +15   \n+ Misses      10635    10619      -16   \n- Partials     1844     1845       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 92.85% <0%> (-5.36%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 56.09% <0%> (-4.88%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-3.64%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.39% <0%> (-3.53%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 527ad31...414884a. Read the comment docs.\n. # Codecov Report\nMerging #2686 into master will increase coverage by 22.26%.\nThe diff coverage is 69.23%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2686       +/-\n===========================================\n+ Coverage   47.21%   69.48%   +22.26%   \n===========================================\n  Files         868      873        +5   \n  Lines       41967    42027       +60   \n  Branches     5695     5696        +1   \n===========================================\n+ Hits        19815    29202     +9387   \n+ Misses      20498    10968     -9530   \n- Partials     1654     1857      +203\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.5% <\u00f8> (+1.56%) | :arrow_up: |\n| .../pinot/minion/events/PurgeMinionEventObserver.java | 0% <0%> (\u00f8) | |\n| ...inot/minion/events/DefaultMinionEventObserver.java | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/core/minion/SegmentPurger.java | 80.55% <0%> (+80.55%) | :arrow_up: |\n| ...oller/api/events/MetadataEventNotifierFactory.java | 75% <100%> (\u00f8) | :arrow_up: |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 91.07% <100%> (+0.33%) | :arrow_up: |\n| ...nion/events/DefaultMinionEventObserverFactory.java | 66.66% <66.66%> (\u00f8) | |\n| ...kedin/pinot/minion/executor/PurgeTaskExecutor.java | 68% <72.72%> (+68%) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 71.42% <75%> (\u00f8) | :arrow_up: |\n| ... and 447 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d88c2a4...e38954a. Read the comment docs.\n. # Codecov Report\nMerging #2688 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2688      +/-\n==========================================\n+ Coverage   69.23%   69.24%   +<.01%   \n==========================================\n  Files         865      865            \n  Lines       40488    40488            \n  Branches     5472     5472            \n==========================================\n+ Hits        28031    28034       +3   \n+ Misses      10640    10636       -4   \n- Partials     1817     1818       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 71.69% <\u00f8> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.13% <0%> (-1.27%) | :arrow_down: |\n| ...data/manager/offline/AbstractTableDataManager.java | 91.5% <0%> (-0.95%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 81.6% <0%> (-0.95%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 78.04% <0%> (-0.82%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.45% <0%> (-0.71%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed9b799...b847e5e. Read the comment docs.\n. # Codecov Report\nMerging #2692 into master will increase coverage by 0.11%.\nThe diff coverage is 90.32%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2692      +/-\n==========================================\n+ Coverage   69.23%   69.35%   +0.11%   \n==========================================\n  Files         869      870       +1   \n  Lines       40607    40604       -3   \n  Branches     5488     5488            \n==========================================\n+ Hits        28113    28159      +46   \n+ Misses      10664    10619      -45   \n+ Partials     1830     1826       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...r/transform/function/LiteralTransformFunction.java | 20% <\u00f8> (\u00f8) | :arrow_up: |\n| ...form/function/MultiplicationTransformFunction.java | 95.45% <\u00f8> (\u00f8) | :arrow_up: |\n| .../transform/function/AdditionTransformFunction.java | 95.45% <\u00f8> (\u00f8) | :arrow_up: |\n| ...form/function/TimeConversionTransformFunction.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ansform/function/SubtractionTransformFunction.java | 95.45% <\u00f8> (\u00f8) | :arrow_up: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <\u00f8> (\u00f8) | :arrow_up: |\n| .../function/DateTimeConversionTransformFunction.java | 56.25% <\u00f8> (\u00f8) | :arrow_up: |\n| .../transform/function/DivisionTransformFunction.java | 95.45% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/operator/docvalsets/TransformBlockValSet.java | 14.89% <0%> (\u00f8) | :arrow_up: |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8bbf3a5...cc64fc2. Read the comment docs.\n. # Codecov Report\nMerging #2695 into master will increase coverage by 0.02%.\nThe diff coverage is 82.94%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2695      +/-\n=========================================\n+ Coverage   69.27%   69.3%   +0.02%   \n=========================================\n  Files         905     908       +3   \n  Lines       43188   43349     +161   \n  Branches     5848    5874      +26   \n=========================================\n+ Hits        29919   30043     +124   \n- Misses      11285   11304      +19   \n- Partials     1984    2002      +18\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/validation/StorageQuotaChecker.java | 82.97% <\u00f8> (-6.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <100%> (+0.62%) | :arrow_up: |\n| ...m/linkedin/pinot/broker/queryquota/HitCounter.java | 100% <100%> (\u00f8) | |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 73.63% <100%> (+0.48%) | :arrow_up: |\n| ...com/linkedin/pinot/common/metrics/BrokerGauge.java | 80% <100%> (+68.88%) | :arrow_up: |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 87.5% <100%> (+0.13%) | :arrow_up: |\n| ...edin/pinot/broker/queryquota/QueryQuotaConfig.java | 100% <100%> (\u00f8) | |\n| ...inkedin/pinot/common/exception/QueryException.java | 88.05% <100%> (+0.36%) | :arrow_up: |\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 84.89% <37.5%> (-1.53%) | :arrow_down: |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 47c146d...59389ee. Read the comment docs.\n. # Codecov Report\nMerging #2696 into master will decrease coverage by 0.05%.\nThe diff coverage is 43.47%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2696      +/-\n==========================================\n- Coverage   69.49%   69.43%   -0.06%   \n==========================================\n  Files         871      871            \n  Lines       40818    40839      +21   \n  Branches     5544     5551       +7   \n==========================================\n- Hits        28366    28358       -8   \n- Misses      10613    10633      +20   \n- Partials     1839     1848       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/realtime/impl/RealtimeSegmentImpl.java | 67.24% <43.47%> (-1.88%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 56.09% <0%> (-4.88%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 70.23% <0%> (-2.39%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 46.99% <0%> (-2.15%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ee275ce...712b1c2. Read the comment docs.\n. # Codecov Report\nMerging #2697 into master will increase coverage by 0.03%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2697      +/-\n==========================================\n+ Coverage   69.44%   69.47%   +0.03%   \n==========================================\n  Files         871      872       +1   \n  Lines       40839    40854      +15   \n  Branches     5551     5554       +3   \n==========================================\n+ Hits        28360    28383      +23   \n+ Misses      10635    10626       -9   \n- Partials     1844     1845       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/core/plan/DocIdSetPlanNode.java | 58.82% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/core/operator/DocIdSetOperator.java | 92% <0%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/core/plan/SelectionPlanNode.java | 62.06% <72.22%> (+7.52%) | :arrow_up: |\n| ...ot/core/operator/query/EmptySelectionOperator.java | 87.5% <87.5%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 81.81% <0%> (-13.64%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-9.1%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.46% <0%> (-5.64%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-3.64%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 527ad31...6739164. Read the comment docs.\n. # Codecov Report\nMerging #2703 into master will decrease coverage by 0.11%.\nThe diff coverage is 18.44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2703      +/-\n==========================================\n- Coverage   68.52%   68.41%   -0.12%   \n==========================================\n  Files         876      877       +1   \n  Lines       42319    42415      +96   \n  Branches     5754     5764      +10   \n==========================================\n+ Hits        29001    29018      +17   \n- Misses      11452    11526      +74   \n- Partials     1866     1871       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.01% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/core/data/udfs/DateTimeFunctions.java | 0% <0%> (\u00f8) | |\n| ...ore/data/function/FunctionExpressionEvaluator.java | 95.45% <100%> (-0.2%) | :arrow_down: |\n| ...a/com/linkedin/pinot/pql/parsers/Pql2Compiler.java | 72.72% <100%> (+0.76%) | :arrow_up: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 70.06% <19.04%> (-7.88%) | :arrow_down: |\n| ...ansformer/datetime/DateTimeTransformerFactory.java | 35.71% <21.87%> (-50.01%) | :arrow_down: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 90% <66.66%> (-4.12%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-14.55%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-11.12%) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5f36a65...b0d80e2. Read the comment docs.\n. # Codecov Report\nMerging #2707 into master will increase coverage by 21.8%.\nThe diff coverage is 73.78%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2707      +/-\n==========================================\n+ Coverage   46.71%   68.52%   +21.8%   \n==========================================\n  Files         874      876       +2   \n  Lines       42261    42434     +173   \n  Branches     5722     5755      +33   \n==========================================\n+ Hits        19743    29077    +9334   \n+ Misses      20881    11491    -9390   \n- Partials     1637     1866     +229\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/data/readers/RecordReaderFactory.java | 46.15% <0%> (+7.69%) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 62.83% <20%> (+14.39%) | :arrow_up: |\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 56.6% <28.57%> (+56.6%) | :arrow_up: |\n| ...data/readers/MultiplePinotSegmentRecordReader.java | 68.18% <68.18%> (\u00f8) | |\n| ...not/core/data/readers/sort/PinotSegmentSorter.java | 85.1% <85.1%> (\u00f8) | |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 86.36% <94.44%> (+86.36%) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-14.55%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ... and 439 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 99d0385...36a0cd8. Read the comment docs.\n. # Codecov Report\nMerging #2709 into master will decrease coverage by 0.06%.\nThe diff coverage is 47.82%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2709      +/-\n==========================================\n- Coverage   69.53%   69.46%   -0.07%   \n==========================================\n  Files         872      871       -1   \n  Lines       40855    40830      -25   \n  Branches     5555     5552       -3   \n==========================================\n- Hits        28408    28364      -44   \n- Misses      10599    10622      +23   \n+ Partials     1848     1844       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/core/plan/MetadataBasedAggregationPlanNode.java | 52.63% <42.85%> (+16.91%) | :arrow_up: |\n| ...m/linkedin/pinot/core/plan/ProjectionPlanNode.java | 61.11% <55.55%> (+4.58%) | :arrow_up: |\n| ...not/common/exception/HttpErrorStatusException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 0% <0%> (-50%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 69.23% <0%> (-15.39%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.38% <0%> (-11.54%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 471d44a...b0a6469. Read the comment docs.\n. # Codecov Report\nMerging #2710 into master will increase coverage by 0.11%.\nThe diff coverage is 90%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2710      +/-\n==========================================\n+ Coverage   69.44%   69.56%   +0.11%   \n==========================================\n  Files         871      871            \n  Lines       40830    40833       +3   \n  Branches     5552     5553       +1   \n==========================================\n+ Hits        28355    28406      +51   \n+ Misses      10629    10587      -42   \n+ Partials     1846     1840       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/pql/parsers/pql2/ast/GroupByAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/pql/parsers/pql2/ast/OptionAstNode.java | 60% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/pql/parsers/pql2/ast/IdentifierAstNode.java | 77.77% <83.33%> (-2.23%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.1% <0%> (-4.26%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.48% <0%> (-3.45%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 44.71% <0%> (-1.63%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.99% <0%> (-0.89%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 69.08% <0%> (+0.19%) | :arrow_up: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e61fcd2...c60bdf1. Read the comment docs.\n. # Codecov Report\nMerging #2711 into master will decrease coverage by 0.12%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2711      +/-\n==========================================\n- Coverage   69.44%   69.31%   -0.13%   \n==========================================\n  Files         871      871            \n  Lines       40830    40831       +1   \n  Branches     5552     5552            \n==========================================\n- Hits        28355    28304      -51   \n- Misses      10629    10684      +55   \n+ Partials     1846     1843       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 39.13% <0%> (-36.24%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 64.15% <0%> (-17.46%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 58.51% <0%> (-4.26%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 75.22% <0%> (-2.66%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 44.71% <0%> (-1.63%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.39% <0%> (-1.59%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e61fcd2...f0b82ae. Read the comment docs.\n. # Codecov Report\nMerging #2712 into master will decrease coverage by 0.02%.\nThe diff coverage is 76.74%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2712      +/-\n==========================================\n- Coverage   69.37%   69.35%   -0.03%   \n==========================================\n  Files         871      871            \n  Lines       42123    42110      -13   \n  Branches     5716     5714       -2   \n==========================================\n- Hits        29224    29205      -19   \n- Misses      11029    11033       +4   \n- Partials     1870     1872       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 82.14% <76.74%> (-3.95%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 75.59% <0%> (-2.4%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f7e94d1...f9f0e66. Read the comment docs.\n. # Codecov Report\nMerging #2713 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2713      +/-\n==========================================\n+ Coverage   69.37%   69.41%   +0.03%   \n==========================================\n  Files         871      871            \n  Lines       42123    42121       -2   \n  Branches     5716     5716            \n==========================================\n+ Hits        29224    29237      +13   \n+ Misses      11029    11011      -18   \n- Partials     1870     1873       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inot/common/utils/retry/FixedDelayRetryPolicy.java | 100% <\u00f8> (+25%) | :arrow_up: |\n| ...n/pinot/common/utils/retry/NoDelayRetryPolicy.java | 100% <\u00f8> (+33.33%) | :arrow_up: |\n| ...mon/utils/retry/ExponentialBackoffRetryPolicy.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...edin/pinot/common/utils/retry/BaseRetryPolicy.java | 100% <100%> (+30.76%) | :arrow_up: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f7e94d1...cfeb85d. Read the comment docs.\n. # Codecov Report\nMerging #2714 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2714      +/-\n==========================================\n- Coverage   69.37%   69.36%   -0.02%   \n==========================================\n  Files         871      871            \n  Lines       42123    42123            \n  Branches     5716     5716            \n==========================================\n- Hits        29224    29218       -6   \n- Misses      11029    11032       +3   \n- Partials     1870     1873       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.99% <0%> (-2.73%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | :arrow_down: |\n| ...ebalance/ReplicaGroupRebalanceSegmentStrategy.java | 82.62% <0%> (-0.85%) | :arrow_down: |\n| ... and 7 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f7e94d1...9ef2174. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@a9134f7). Click here to learn what that means.\nThe diff coverage is 62.41%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2721   +/-\n=========================================\n  Coverage          ?   68.53%         \n=========================================\n  Files             ?      874         \n  Lines             ?    42226         \n  Branches          ?     5722         \n=========================================\n  Hits              ?    28939         \n  Misses            ?    11431         \n  Partials          ?     1856\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...me/segment/ConsumingSegmentAssignmentStrategy.java | 100% <\u00f8> (\u00f8) | |\n| .../builder/KafkaLowLevelRoutingTableBuilderUtil.java | 80.76% <\u00f8> (\u00f8) | |\n| .../partition/StreamPartitionAssignmentGenerator.java | 48.57% <\u00f8> (\u00f8) | |\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 82.6% <100%> (\u00f8) | |\n| ...common/partition/PartitionAssignmentGenerator.java | 95.23% <100%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.46% <100%> (\u00f8) | |\n| ...lder/KafkaLowLevelConsumerRoutingTableBuilder.java | 78.84% <100%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 50.32% <100%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 66.66% <50%> (\u00f8) | |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a9134f7...8e4506d. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@235c521). Click here to learn what that means.\nThe diff coverage is 92.2%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2722   +/-\n=========================================\n  Coverage          ?   69.44%         \n=========================================\n  Files             ?      871         \n  Lines             ?    42034         \n  Branches          ?     5700         \n=========================================\n  Hits              ?    29192         \n  Misses            ?    10988         \n  Partials          ?     1854\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...anager/realtime/SegmentBuildTimeLeaseExtender.java | 64.15% <100%> (\u00f8) | |\n| ...com/linkedin/pinot/common/metrics/ServerGauge.java | 95.65% <100%> (\u00f8) | |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 51.85% <100%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 72.24% <91.42%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 235c521...5af2b1c. Read the comment docs.\n. # Codecov Report\nMerging #2723 into master will decrease coverage by <.01%.\nThe diff coverage is 79.53%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2723      +/-\n==========================================\n- Coverage   69.35%   69.35%   -0.01%   \n==========================================\n  Files         871      868       -3   \n  Lines       42015    41948      -67   \n  Branches     5700     5695       -5   \n==========================================\n- Hits        29140    29091      -49   \n+ Misses      11015    10996      -19   \n- Partials     1860     1861       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 73.13% <\u00f8> (-4.48%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <\u00f8> (-25%) | :arrow_down: |\n| ...converter/stats/RealtimeSegmentStatsContainer.java | 94.44% <\u00f8> (\u00f8) | :arrow_up: |\n| ...tats/RealtimeSegmentSegmentCreationDataSource.java | 77.77% <100%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.59% <100%> (\u00f8) | :arrow_up: |\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 67.15% <100%> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 77.99% <100%> (\u00f8) | :arrow_up: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 77.14% <100%> (\u00f8) | :arrow_up: |\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 68.29% <100%> (\u00f8) | :arrow_up: |\n| .../data/manager/offline/OfflineTableDataManager.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 505f8ec...2d5c556. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@a61a2f5). Click here to learn what that means.\nThe diff coverage is 75.29%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2726   +/-\n=========================================\n  Coverage          ?   69.41%         \n=========================================\n  Files             ?      871         \n  Lines             ?    42015         \n  Branches          ?     5700         \n=========================================\n  Hits              ?    29164         \n  Misses            ?    10995         \n  Partials          ?     1856\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/retention/strategy/TimeRetentionStrategy.java | 100% <100%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 76.34% <71.23%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a61a2f5...deba569. Read the comment docs.\n. # Codecov Report\nMerging #2731 into master will decrease coverage by 0.09%.\nThe diff coverage is 83.51%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2731     +/-\n=========================================\n- Coverage   69.46%   69.37%   -0.1%   \n=========================================\n  Files         873      873           \n  Lines       42032    41985     -47   \n  Branches     5698     5683     -15   \n=========================================\n- Hits        29198    29126     -72   \n- Misses      10976    11001     +25   \n  Partials     1858     1858\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 63.91% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <\u00f8> (+25%) | :arrow_up: |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 83.33% <\u00f8> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/server/starter/ServerInstance.java | 77.35% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/manager/offline/ImmutableSegmentDataManager.java | 87.5% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 82.05% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 83.05% <\u00f8> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.86% <\u00f8> (+1.62%) | :arrow_up: |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 76.11% <\u00f8> (\u00f8) | :arrow_up: |\n| ...data/manager/offline/TableDataManagerProvider.java | 60% <0%> (+1.66%) | :arrow_up: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8738a2c...d2fa6bb. Read the comment docs.\n. # Codecov Report\nMerging #2732 into master will increase coverage by 0.06%.\nThe diff coverage is 76.08%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2732      +/-\n==========================================\n+ Coverage   68.47%   68.54%   +0.06%   \n==========================================\n  Files         874      874            \n  Lines       42226    42261      +35   \n  Branches     5722     5722            \n==========================================\n+ Hits        28916    28966      +50   \n+ Misses      11457    11446      -11   \n+ Partials     1853     1849       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/io/reader/BaseSingleColumnSingleValueReader.java | 5.88% <0%> (-0.37%) | :arrow_down: |\n| ...inot/core/data/extractors/PlainFieldExtractor.java | 80.82% <0%> (\u00f8) | :arrow_up: |\n| ...riter/BaseSingleColumnSingleValueReaderWriter.java | 24% <0%> (-1%) | :arrow_down: |\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 60.86% <0%> (-7.43%) | :arrow_down: |\n| .../reader/impl/v1/VarByteChunkSingleValueReader.java | 96.96% <100%> (+1.73%) | :arrow_up: |\n| .../writer/impl/v1/VarByteChunkSingleValueWriter.java | 100% <100%> (+3.44%) | :arrow_up: |\n| ...riter/impl/v1/FixedByteChunkSingleValueWriter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...eader/impl/v1/FixedByteChunkSingleValueReader.java | 65.9% <83.33%> (+6.53%) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 58.18% <0%> (-14.55%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d34e4ad...1654ef3. Read the comment docs.\n. # Codecov Report\nMerging #2733 into master will increase coverage by 0.02%.\nThe diff coverage is 74.59%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2733      +/-\n==========================================\n+ Coverage   68.49%   68.52%   +0.02%   \n==========================================\n  Files         876      876            \n  Lines       42434    42287     -147   \n  Branches     5755     5748       -7   \n==========================================\n- Hits        29064    28976      -88   \n+ Misses      11499    11445      -54   \n+ Partials     1871     1866       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/core/startree/MetricBuffer.java | 64% <\u00f8> (+4.74%) | :arrow_up: |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 88.75% <0%> (+1.56%) | :arrow_up: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 96% <100%> (\u00f8) | :arrow_up: |\n| ...gation/function/PercentileAggregationFunction.java | 69.84% <100%> (\u00f8) | :arrow_up: |\n| .../function/DistinctCountHLLAggregationFunction.java | 34.51% <100%> (\u00f8) | :arrow_up: |\n| ...gregation/function/FastHLLAggregationFunction.java | 61.9% <100%> (\u00f8) | :arrow_up: |\n| ...y/aggregation/function/MinAggregationFunction.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ion/function/DistinctCountAggregationFunction.java | 34.21% <100%> (\u00f8) | :arrow_up: |\n| ...aggregation/function/CountAggregationFunction.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 79.24% <100%> (\u00f8) | :arrow_up: |\n| ... and 38 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1c1a6a6...b2590e0. Read the comment docs.\n. # Codecov Report\nMerging #2734 into master will increase coverage by 0.03%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2734      +/-\n==========================================\n+ Coverage   68.48%   68.51%   +0.03%   \n==========================================\n  Files         874      876       +2   \n  Lines       42261    42292      +31   \n  Branches     5722     5748      +26   \n==========================================\n+ Hits        28943    28977      +34   \n+ Misses      11467    11448      -19   \n- Partials     1851     1867      +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 62.83% <\u00f8> (-0.84%) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 73.13% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.91% <100%> (+0.04%) | :arrow_up: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.66% <100%> (+0.11%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 80% <0%> (-17.64%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-9.1%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 80% <0%> (-7.28%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 71.28% <0%> (-6.67%) | :arrow_down: |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 99d0385...5c08302. Read the comment docs.\n. # Codecov Report\nMerging #2738 into master will decrease coverage by 0.06%.\nThe diff coverage is 94.59%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2738      +/-\n==========================================\n- Coverage   69.33%   69.27%   -0.07%   \n==========================================\n  Files         910      905       -5   \n  Lines       43316    43216     -100   \n  Branches     5870     5848      -22   \n==========================================\n- Hits        30034    29936      -98   \n+ Misses      11298    11296       -2   \n  Partials     1984     1984\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/common/data/DateTimeGranularitySpec.java | 83.87% <100%> (+3.22%) | :arrow_up: |\n| .../transformer/datetime/BaseDateTimeTransformer.java | 95.23% <93.1%> (-4.77%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-7.76%) | :arrow_down: |\n| ...in/pinot/common/partition/PartitionAssignment.java | 68.96% <0%> (-6.9%) | :arrow_down: |\n| ...builder/BasePartitionAwareRoutingTableBuilder.java | 78.12% <0%> (-6.25%) | :arrow_down: |\n| ...not/controller/validation/StorageQuotaChecker.java | 89.36% <0%> (-5.99%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-5.46%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.19% <0%> (-5.23%) | :arrow_down: |\n| ... and 42 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0b95798...fd80f91. Read the comment docs.\n. # Codecov Report\nMerging #2741 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2741      +/-\n==========================================\n+ Coverage    68.5%   68.53%   +0.02%   \n==========================================\n  Files         876      876            \n  Lines       42287    42288       +1   \n  Branches     5748     5748            \n==========================================\n+ Hits        28968    28980      +12   \n+ Misses      11456    11444      -12   \n- Partials     1863     1864       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 77.94% <100%> (+0.16%) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 62.5% <0%> (-0.4%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (\u00f8) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 66.66% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.03% <0%> (+0.16%) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 95039bd...364a9b9. Read the comment docs.\n. # Codecov Report\nMerging #2746 into master will decrease coverage by 0.17%.\nThe diff coverage is 52.97%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2746      +/-\n==========================================\n- Coverage   68.53%   68.35%   -0.18%   \n==========================================\n  Files         876      893      +17   \n  Lines       42288    42876     +588   \n  Branches     5748     5832      +84   \n==========================================\n+ Hits        28980    29306     +326   \n- Misses      11445    11625     +180   \n- Partials     1863     1945      +82\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/common/config/QuotaConfig.java | 44% <\u00f8> (+8%) | :arrow_up: |\n| .../linkedin/pinot/common/config/TableTaskConfig.java | 31.57% <\u00f8> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 92.59% <\u00f8> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/config/TableCustomConfig.java | 16.12% <\u00f8> (\u00f8) | :arrow_up: |\n| ...com/linkedin/pinot/common/config/TenantConfig.java | 25.71% <\u00f8> (+2.85%) | :arrow_up: |\n| ...om/linkedin/pinot/common/config/RoutingConfig.java | 45.45% <\u00f8> (\u00f8) | :arrow_up: |\n| ...inot/common/config/ReplicaGroupStrategyConfig.java | 50% <\u00f8> (\u00f8) | :arrow_up: |\n| ...n/config/SegmentsValidationAndRetentionConfig.java | 46.59% <\u00f8> (+1.13%) | :arrow_up: |\n| .../linkedin/pinot/common/data/DateTimeFieldSpec.java | 94.11% <\u00f8> (\u00f8) | :arrow_up: |\n| ...din/pinot/common/config/ColumnPartitionConfig.java | 62.79% <0%> (-4.71%) | :arrow_down: |\n| ... and 69 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 769b55a...aee2adf. Read the comment docs.\n. # Codecov Report\nMerging #2749 into master will increase coverage by 0.03%.\nThe diff coverage is 88.67%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2749      +/-\n==========================================\n+ Coverage   68.53%   68.56%   +0.03%   \n==========================================\n  Files         876      876            \n  Lines       42288    42344      +56   \n  Branches     5748     5756       +8   \n==========================================\n+ Hits        28980    29035      +55   \n- Misses      11445    11446       +1   \n  Partials     1863     1863\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 74.13% <83.33%> (+2.85%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 86.44% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 73.68% <0%> (-1.32%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-1.06%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | :arrow_up: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c2f5dcf...5294483. Read the comment docs.\n. # Codecov Report\nMerging #2751 into master will increase coverage by 0.09%.\nThe diff coverage is 44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2751      +/-\n==========================================\n+ Coverage   69.14%   69.24%   +0.09%   \n==========================================\n  Files         903      903            \n  Lines       43043    43044       +1   \n  Branches     5840     5839       -1   \n==========================================\n+ Hits        29762    29804      +42   \n+ Misses      11302    11274      -28   \n+ Partials     1979     1966      -13\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...troller/api/resources/PinotTableTenantConfigs.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.53% <33.33%> (+0.06%) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 85.96% <88.88%> (+0.41%) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.74% <0%> (-0.17%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 909ef7c...eac40fd. Read the comment docs.\n. # Codecov Report\nMerging #2753 into master will increase coverage by 0.01%.\nThe diff coverage is 40%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2753      +/-\n==========================================\n+ Coverage   68.53%   68.54%   +0.01%   \n==========================================\n  Files         876      876            \n  Lines       42288    42290       +2   \n  Branches     5748     5748            \n==========================================\n+ Hits        28980    28987       +7   \n+ Misses      11445    11439       -6   \n- Partials     1863     1864       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 66.41% <40%> (-0.25%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.33% <0%> (-2.67%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 88.13% <0%> (-1.7%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | :arrow_down: |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 78.04% <0%> (-0.82%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d57001...b3f9117. Read the comment docs.\n. # Codecov Report\nMerging #2754 into master will increase coverage by <.01%.\nThe diff coverage is 69.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2754      +/-\n==========================================\n+ Coverage   69.14%   69.14%   +<.01%   \n==========================================\n  Files         896      902       +6   \n  Lines       42600    43042     +442   \n  Branches     5791     5841      +50   \n==========================================\n+ Hits        29454    29762     +308   \n- Misses      11203    11312     +109   \n- Partials     1943     1968      +25\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/query/selection/SelectionFetcher.java | 73.68% <\u00f8> (\u00f8) | :arrow_up: |\n| ...re/segment/index/readers/OnHeapLongDictionary.java | 50% <\u00f8> (+2%) | :arrow_up: |\n| ...t/core/segment/index/readers/StringDictionary.java | 100% <\u00f8> (+25%) | :arrow_up: |\n| ...t/core/segment/index/readers/OnHeapDictionary.java | 100% <\u00f8> (+75%) | :arrow_up: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 91.6% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/core/segment/index/readers/BaseDictionary.java | 53.12% <0%> (-27.83%) | :arrow_down: |\n| .../segment/index/readers/OnHeapStringDictionary.java | 59.25% <0%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/core/common/BaseBlockValSet.java | 4.16% <0%> (-0.38%) | :arrow_down: |\n| ...n/function/PercentileEstMVAggregationFunction.java | 72.41% <0%> (-23.05%) | :arrow_down: |\n| ...ection/iterator/StringSelectionColumnIterator.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 69 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb46dc4...c44d558. Read the comment docs.\n. # Codecov Report\nMerging #2757 into master will increase coverage by 0.02%.\nThe diff coverage is 88.23%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2757      +/-\n==========================================\n+ Coverage   68.49%   68.52%   +0.02%   \n==========================================\n  Files         876      876            \n  Lines       42292    42319      +27   \n  Branches     5748     5754       +6   \n==========================================\n+ Hits        28969    28997      +28   \n+ Misses      11453    11450       -3   \n- Partials     1870     1872       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.14% <100%> (+0.24%) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 62.22% <100%> (+1.75%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.06% <80.95%> (-0.02%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1.67%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7e72193...0771254. Read the comment docs.\n. # Codecov Report\nMerging #2758 into master will increase coverage by 0.03%.\nThe diff coverage is 72.93%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2758      +/-\n==========================================\n+ Coverage   68.52%   68.56%   +0.03%   \n==========================================\n  Files         876      881       +5   \n  Lines       42319    42448     +129   \n  Branches     5754     5772      +18   \n==========================================\n+ Hits        29001    29103     +102   \n- Misses      11452    11463      +11   \n- Partials     1866     1882      +16\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/core/data/readers/RecordReaderUtils.java | 69.23% <100%> (+3.27%) | :arrow_up: |\n| ...data/readers/MultiplePinotSegmentRecordReader.java | 80.37% <100%> (+12.19%) | :arrow_up: |\n| ...ore/data/readers/aggregate/MaxValueAggregator.java | 33.33% <33.33%> (\u00f8) | |\n| ...ore/data/readers/aggregate/SumValueAggregator.java | 50% <50%> (\u00f8) | |\n| ...data/readers/aggregate/ValueAggregatorFactory.java | 55.55% <55.55%> (\u00f8) | |\n| .../MultipleRollupPinotSegmentRecordReaderConfig.java | 80% <80%> (\u00f8) | |\n| ...eaders/MultipleRollupPinotSegmentRecordReader.java | 80.95% <80.95%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5f36a65...bd00012. Read the comment docs.\n. # Codecov Report\nMerging #2759 into master will increase coverage by 0.04%.\nThe diff coverage is 92.3%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2759      +/-\n==========================================\n+ Coverage   68.52%   68.57%   +0.04%   \n==========================================\n  Files         876      876            \n  Lines       42319    42352      +33   \n  Branches     5754     5759       +5   \n==========================================\n+ Hits        29001    29044      +43   \n+ Misses      11452    11440      -12   \n- Partials     1866     1868       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 38.32% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.5% <\u00f8> (\u00f8) | :arrow_up: |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 78.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/common/utils/time/TimeUtils.java | 85.71% <100%> (+15.12%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.9% <60%> (-0.16%) | :arrow_down: |\n| ...on/metadata/segment/RealtimeSegmentZKMetadata.java | 71.18% <93.33%> (+4.51%) | :arrow_up: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-18.19%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5f36a65...001c31f. Read the comment docs.\n. # Codecov Report\nMerging #2761 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2761      +/-\n==========================================\n+ Coverage   68.52%   68.53%   +<.01%   \n==========================================\n  Files         876      876            \n  Lines       42319    42319            \n  Branches     5754     5754            \n==========================================\n+ Hits        29001    29005       +4   \n+ Misses      11452    11442      -10   \n- Partials     1866     1872       +6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...mpl/dictionary/StringOffHeapMutableDictionary.java | 96.42% <0%> (-1.79%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.96% <0%> (-1.56%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 66.66% <0%> (-0.92%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5f36a65...e53e163. Read the comment docs.\n. # Codecov Report\nMerging #2762 into master will increase coverage by 11.31%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2762       +/-\n===========================================\n+ Coverage   57.51%   68.82%   +11.31%   \n===========================================\n  Files         876      876             \n  Lines       42319    42429      +110   \n  Branches     5754     5824       +70   \n===========================================\n+ Hits        24339    29201     +4862   \n+ Misses      16288    11368     -4920   \n- Partials     1692     1860      +168\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 45.14% <\u00f8> (+39.33%) | :arrow_up: |\n| ...pinot/controller/validation/ValidationManager.java | 84.39% <\u00f8> (+48.32%) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 48.23% <0%> (+0.41%) | :arrow_up: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.69% <0%> (+0.63%) | :arrow_up: |\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 80.95% <0%> (+0.68%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.7%) | :arrow_up: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 88.43% <0%> (+0.74%) | :arrow_up: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.54% <0%> (+0.9%) | :arrow_up: |\n| ...din/pinot/core/realtime/stream/StreamMetadata.java | 67.88% <0%> (+0.91%) | :arrow_up: |\n| ... and 278 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2d22966...84e50a3. Read the comment docs.\n. # Codecov Report\nMerging #2765 into master will increase coverage by 0.09%.\nThe diff coverage is 76.81%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2765      +/-\n==========================================\n+ Coverage   69.05%   69.15%   +0.09%   \n==========================================\n  Files         876      896      +20   \n  Lines       42026    42600     +574   \n  Branches     5713     5791      +78   \n==========================================\n+ Hits        29023    29460     +437   \n- Misses      11139    11201      +62   \n- Partials     1864     1939      +75\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.42% <100%> (+15.81%) | :arrow_up: |\n| ...n/pinot/common/config/StreamConsumptionConfig.java | 75% <100%> (+8.33%) | :arrow_up: |\n| ...x/core/realtime/segment/FlushThresholdUpdater.java | 42.1% <42.1%> (\u00f8) | |\n| ...realtime/segment/FlushThresholdUpdaterFactory.java | 50% <50%> (\u00f8) | |\n| ...realtime/segment/DefaultFlushThresholdUpdater.java | 91.3% <91.3%> (\u00f8) | |\n| ...ava/com/linkedin/pinot/startree/hll/HllConfig.java | 67.85% <0%> (-27.02%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...din/pinot/common/config/ColumnPartitionConfig.java | 62.79% <0%> (-4.71%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ... and 57 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 55d8af4...d60abfe. Read the comment docs.\n. # Codecov Report\nMerging #2770 into master will increase coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2770      +/-\n==========================================\n+ Coverage      69%   69.08%   +0.08%   \n==========================================\n  Files         896      896            \n  Lines       42600    42600            \n  Branches     5791     5791            \n==========================================\n+ Hits        29396    29431      +35   \n+ Misses      11263    11223      -40   \n- Partials     1941     1946       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-18.19%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 57.73% <0%> (-6.19%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.96% <0%> (-1.56%) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e329d15...3cc5e75. Read the comment docs.\n. # Codecov Report\nMerging #2771 into master will increase coverage by 0.03%.\nThe diff coverage is 75.44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2771      +/-\n==========================================\n+ Coverage   69.14%   69.17%   +0.03%   \n==========================================\n  Files         896      897       +1   \n  Lines       42600    42601       +1   \n  Branches     5791     5790       -1   \n==========================================\n+ Hits        29454    29470      +16   \n+ Misses      11203    11194       -9   \n+ Partials     1943     1937       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/core/minion/SegmentPurger.java | 82.19% <0%> (+1.63%) | :arrow_up: |\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 70.08% <100%> (+2.28%) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 91.37% <100%> (+0.3%) | :arrow_up: |\n| ...t/minion/executor/TaskExecutorFactoryRegistry.java | 100% <100%> (\u00f8) | |\n| ...nion/events/DefaultMinionEventObserverFactory.java | 100% <100%> (+33.33%) | :arrow_up: |\n| ...executor/ConvertToRawIndexTaskExecutorFactory.java | 100% <100%> (\u00f8) | |\n| ...ot/minion/events/EventObserverFactoryRegistry.java | 100% <100%> (\u00f8) | |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../linkedin/pinot/common/config/PinotTaskConfig.java | 54.54% <45.45%> (+2.16%) | :arrow_up: |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb46dc4...46d1031. Read the comment docs.\n. # Codecov Report\nMerging #2778 into master will decrease coverage by 0.02%.\nThe diff coverage is 67.59%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2778      +/-\n==========================================\n- Coverage   69.17%   69.15%   -0.03%   \n==========================================\n  Files         903      903            \n  Lines       43044    43029      -15   \n  Branches     5839     5834       -5   \n==========================================\n- Hits        29777    29757      -20   \n- Misses      11301    11303       +2   \n- Partials     1966     1969       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...x/core/minion/generator/TaskGeneratorRegistry.java | 90% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 88.13% <100%> (+0.2%) | :arrow_up: |\n| ...controller/helix/core/minion/PinotTaskManager.java | 79.24% <53.84%> (+5.56%) | :arrow_up: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.98% <67.46%> (+0.19%) | :arrow_up: |\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 78.16% <81.81%> (-4.45%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 88f48c8...f7b389a. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@2e90c64). Click here to learn what that means.\nThe diff coverage is 22.85%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2780   +/-\n=========================================\n  Coverage          ?   69.12%         \n=========================================\n  Files             ?      903         \n  Lines             ?    43033         \n  Branches          ?     5833         \n=========================================\n  Hits              ?    29745         \n  Misses            ?    11310         \n  Partials          ?     1978\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ot/common/segment/fetcher/HttpsSegmentFetcher.java | 0% <0%> (\u00f8) | |\n| ...not/common/segment/fetcher/HdfsSegmentFetcher.java | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/segment/fetcher/NoOpFetcher.java | 83.33% <100%> (\u00f8) | |\n| ...ommon/segment/fetcher/LocalFileSegmentFetcher.java | 57.14% <100%> (\u00f8) | |\n| ...not/common/segment/fetcher/HttpSegmentFetcher.java | 60% <42.85%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e90c64...4644b5f. Read the comment docs.\n. # Codecov Report\nMerging #2781 into master will increase coverage by 0.06%.\nThe diff coverage is 78.82%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2781      +/-\n==========================================\n+ Coverage   69.12%   69.19%   +0.06%   \n==========================================\n  Files         905      909       +4   \n  Lines       43050    43220     +170   \n  Branches     5837     5860      +23   \n==========================================\n+ Hits        29757    29904     +147   \n- Misses      11321    11325       +4   \n- Partials     1972     1991      +19\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...data/readers/MultiplePinotSegmentRecordReader.java | 73.63% <\u00f8> (+5.45%) | :arrow_up: |\n| ...din/pinot/core/data/readers/RecordReaderUtils.java | 69.23% <100%> (+3.27%) | :arrow_up: |\n| .../core/minion/segment/DefaultRecordPartitioner.java | 100% <100%> (\u00f8) | |\n| ...m/linkedin/pinot/core/minion/SegmentConverter.java | 65.78% <65.78%> (\u00f8) | |\n| .../pinot/core/minion/segment/MapperRecordReader.java | 83.33% <83.33%> (\u00f8) | |\n| ...pinot/core/minion/segment/ReducerRecordReader.java | 92% <92%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-10.91%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-3.64%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.63% <0%> (-1.52%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 00d8bba...67de1ac. Read the comment docs.\n. # Codecov Report\nMerging #2782 into master will decrease coverage by 0.04%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2782      +/-\n==========================================\n- Coverage    69.2%   69.16%   -0.05%   \n==========================================\n  Files         903      903            \n  Lines       43029    43024       -5   \n  Branches     5834     5832       -2   \n==========================================\n- Hits        29779    29758      -21   \n- Misses      11286    11297      +11   \n- Partials     1964     1969       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../partition/StreamPartitionAssignmentGenerator.java | 68% <\u00f8> (+19.42%) | :arrow_up: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.34% <\u00f8> (+0.65%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.56% <66.66%> (+0.03%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 45.94% <0%> (-13.52%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.19% <0%> (-5.23%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e90c64...cfa37be. Read the comment docs.\n. # Codecov Report\nMerging #2783 into master will increase coverage by 0.1%.\nThe diff coverage is 82.73%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2783     +/-\n=========================================\n+ Coverage    69.2%   69.31%   +0.1%   \n=========================================\n  Files         903      910      +7   \n  Lines       43029    43312    +283   \n  Branches     5834     5868     +34   \n=========================================\n+ Hits        29779    30021    +242   \n- Misses      11286    11300     +14   \n- Partials     1964     1991     +27\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/common/config/StreamConsumptionConfig.java | 66.66% <\u00f8> (-8.34%) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.68% <100%> (+0.13%) | :arrow_up: |\n| ...realtime/segment/DefaultFlushThresholdUpdater.java | 100% <100%> (+8.69%) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.14% <100%> (+1.72%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.06% <100%> (+0.15%) | :arrow_up: |\n| ...segment/SegmentSizeBasedFlushThresholdUpdater.java | 65% <65%> (\u00f8) | |\n| .../realtime/segment/CommittingSegmentDescriptor.java | 76% <76%> (\u00f8) | |\n| .../realtime/segment/FlushThresholdUpdateManager.java | 92% <92%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ... and 52 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e90c64...f40121e. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@fce6dd5). Click here to learn what that means.\nThe diff coverage is 68.96%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2785   +/-\n=========================================\n  Coverage          ?   69.17%         \n=========================================\n  Files             ?      905         \n  Lines             ?    43041         \n  Branches          ?     5835         \n=========================================\n  Hits              ?    29775         \n  Misses            ?    11296         \n  Partials          ?     1970\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 87.75% <100%> (\u00f8) | |\n| ...n/java/com/linkedin/pinot/common/data/Segment.java | 46.15% <46.15%> (\u00f8) | |\n| ...elix/core/minion/generator/TaskGeneratorUtils.java | 84.61% <84.61%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fce6dd5...e647a1f. Read the comment docs.\n. # Codecov Report\nMerging #2786 into master will increase coverage by 0.05%.\nThe diff coverage is 16.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2786      +/-\n==========================================\n+ Coverage   69.12%   69.18%   +0.05%   \n==========================================\n  Files         905      905            \n  Lines       43041    43050       +9   \n  Branches     5835     5837       +2   \n==========================================\n+ Hits        29751    29782      +31   \n+ Misses      11314    11297      -17   \n+ Partials     1976     1971       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.01% <\u00f8> (\u00f8) | :arrow_up: |\n| .../operator/docvaliterators/SingleValueIterator.java | 88.23% <0%> (-5.52%) | :arrow_down: |\n| ...pinot/core/operator/docvalsets/SingleValueSet.java | 84.72% <0%> (-9.13%) | :arrow_down: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 74.82% <100%> (+0.85%) | :arrow_up: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 90.19% <33.33%> (-1.97%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 754bcbb...1adb030. Read the comment docs.\n. # Codecov Report\nMerging #2787 into master will increase coverage by 0.13%.\nThe diff coverage is 60%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2787      +/-\n==========================================\n+ Coverage   69.12%   69.25%   +0.13%   \n==========================================\n  Files         905      905            \n  Lines       43041    43048       +7   \n  Branches     5835     5838       +3   \n==========================================\n+ Hits        29751    29813      +62   \n+ Misses      11314    11266      -48   \n+ Partials     1976     1969       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/minion/executor/PurgeTaskExecutor.java | 72% <0%> (-6.27%) | :arrow_down: |\n| .../com/linkedin/pinot/core/minion/SegmentPurger.java | 82.05% <75%> (-0.15%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.71% <0%> (-3.39%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-1.82%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-0.87%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 754bcbb...60f6e07. Read the comment docs.\n. # Codecov Report\nMerging #2789 into master will increase coverage by 23.38%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2789       +/-\n===========================================\n+ Coverage   45.87%   69.26%   +23.38%   \n===========================================\n  Files         909      909             \n  Lines       43220    43220             \n  Branches     5860     5860             \n===========================================\n+ Hits        19829    29936    +10107   \n+ Misses      21737    11304    -10433   \n- Partials     1654     1980      +326\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/common/utils/time/TimeUtils.java | 85.71% <100%> (+45.71%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-2.65%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (+0.33%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.55% <0%> (+0.4%) | :arrow_up: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.14% <0%> (+0.57%) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 62.22% <0%> (+0.74%) | :arrow_up: |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 62.89% <0%> (+0.78%) | :arrow_up: |\n| ... and 475 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c540235...7cf70ac. Read the comment docs.\n. # Codecov Report\nMerging #2791 into master will decrease coverage by 0.34%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2791      +/-\n==========================================\n- Coverage   69.21%   68.86%   -0.35%   \n==========================================\n  Files         909      909            \n  Lines       43227    43227            \n  Branches     5863     5863            \n==========================================\n- Hits        29918    29768     -150   \n- Misses      11322    11476     +154   \n+ Partials     1987     1983       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91% <0%> (+0.66%) | :arrow_up: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 46.19% <0%> (-39.77%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 68.03% <0%> (-10.66%) | :arrow_down: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 70% <0%> (-10%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b4efa3a...ec935b5. Read the comment docs.\n. # Codecov Report\nMerging #2792 into master will increase coverage by 24.1%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2792      +/-\n==========================================\n+ Coverage   45.18%   69.28%   +24.1%   \n==========================================\n  Files         909      909            \n  Lines       43231    43232       +1   \n  Branches     5863     5862       -1   \n==========================================\n+ Hits        19534    29954   +10420   \n+ Misses      22090    11289   -10801   \n- Partials     1607     1989     +382\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/core/data/extractors/PinotDataType.java | 88.6% <\u00f8> (+72.15%) | :arrow_up: |\n| ...impl/stats/BytesColumnPredIndexStatsCollector.java | 55.55% <0%> (+55.55%) | :arrow_up: |\n| ...inot/core/data/extractors/PlainFieldExtractor.java | 81.93% <100%> (+26.9%) | :arrow_up: |\n| ...n/java/com/linkedin/pinot/core/util/AvroUtils.java | 51.72% <100%> (+11.37%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-4.45%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (+0.33%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.55% <0%> (+0.4%) | :arrow_up: |\n| ... and 476 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c6d982e...1fb26d1. Read the comment docs.\n. # Codecov Report\nMerging #2793 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2793      +/-\n==========================================\n+ Coverage   69.21%   69.22%   +<.01%   \n==========================================\n  Files         909      909            \n  Lines       43227    43231       +4   \n  Branches     5863     5863            \n==========================================\n+ Hits        29918    29925       +7   \n+ Misses      11322    11320       -2   \n+ Partials     1987     1986       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...function/PercentileTDigestAggregationFunction.java | 77.21% <100%> (+0.59%) | :arrow_up: |\n| ...gregation/function/AggregationFunctionFactory.java | 80.47% <100%> (+0.23%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.19% <0%> (-5.23%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 83.62% <0%> (-2.34%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b4efa3a...65efb58. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@cae1883). Click here to learn what that means.\nThe diff coverage is 3.17%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2794   +/-\n=========================================\n  Coverage          ?   68.98%         \n=========================================\n  Files             ?      918         \n  Lines             ?    43552         \n  Branches          ?     5935         \n=========================================\n  Hits              ?    30045         \n  Misses            ?    11478         \n  Partials          ?     2029\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | |\n| ...ontroller/api/storage/PinotSegmentUploadUtils.java | 0% <0%> (\u00f8) | |\n| ...n/pinot/controller/api/storage/SegmentVersion.java | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/filesystem/PinotFSFactory.java | 0% <0%> (\u00f8) | |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 75% <0%> (\u00f8) | |\n| .../controller/api/storage/SegmentUploaderConfig.java | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 42.42% <30%> (\u00f8) | |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 55.42% <33.33%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cae1883...3325193. Read the comment docs.\n. # Codecov Report\nMerging #2795 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2795      +/-\n==========================================\n+ Coverage   69.24%   69.26%   +0.02%   \n==========================================\n  Files         909      909            \n  Lines       43232    43232            \n  Branches     5862     5862            \n==========================================\n+ Hits        29934    29945      +11   \n+ Misses      11306    11297       -9   \n+ Partials     1992     1990       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...gregation/function/AggregationFunctionFactory.java | 80.47% <100%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.59%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.96% <0%> (-1.56%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.63% <0%> (-1.52%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 84.79% <0%> (-1.17%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bb27a0f...02ed41f. Read the comment docs.\n. # Codecov Report\nMerging #2796 into master will increase coverage by <.01%.\nThe diff coverage is 45.28%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2796      +/-\n=========================================\n+ Coverage   69.29%   69.3%   +<.01%   \n=========================================\n  Files         910     910            \n  Lines       43315   43316       +1   \n  Branches     5869    5870       +1   \n=========================================\n+ Hits        30016   30018       +2   \n- Misses      11302   11308       +6   \n+ Partials     1997    1990       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/broker/api/resources/PinotClientRequest.java | 21.73% <0%> (-6.04%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 84.33% <42.85%> (-2.82%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.87% <50%> (+0.37%) | :arrow_up: |\n| ...pinot/broker/broker/BrokerAdminApiApplication.java | 94.28% <88.88%> (+2.98%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-1.59%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7c80f36...2c450d4. Read the comment docs.\n. # Codecov Report\nMerging #2800 into master will increase coverage by 0.15%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2800      +/-\n==========================================\n+ Coverage    69.1%   69.25%   +0.15%   \n==========================================\n  Files         909      909            \n  Lines       43232    43232            \n  Branches     5862     5862            \n==========================================\n+ Hits        29874    29941      +67   \n+ Misses      11371    11300      -71   \n- Partials     1987     1991       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...edin/pinot/controller/api/resources/TableSize.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.55% <0%> (\u00f8) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29516e7...7ecf417. Read the comment docs.\n. # Codecov Report\nMerging #2801 into master will increase coverage by 0.14%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2801      +/-\n==========================================\n+ Coverage    69.1%   69.24%   +0.14%   \n==========================================\n  Files         909      909            \n  Lines       43232    43232            \n  Branches     5862     5862            \n==========================================\n+ Hits        29874    29937      +63   \n+ Misses      11371    11307      -64   \n- Partials     1987     1988       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...t/core/query/scheduler/OutOfCapacityException.java | 100% <\u00f8> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.82% <0%> (\u00f8) | :arrow_up: |\n| .../core/query/scheduler/MultiLevelPriorityQueue.java | 84.53% <100%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-7.28%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 47.81% <0%> (-0.42%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 29516e7...b15af2c. Read the comment docs.\n. # Codecov Report\nMerging #2804 into master will increase coverage by 23.48%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2804       +/-\n===========================================\n+ Coverage   45.72%   69.21%   +23.48%   \n===========================================\n  Files         910      910             \n  Lines       43312    43313        +1   \n  Branches     5868     5868             \n===========================================\n+ Hits        19805    29978    +10173   \n+ Misses      21861    11352    -10509   \n- Partials     1646     1983      +337\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/minion/taskfactory/TaskFactoryRegistry.java | 75.47% <100%> (+0.47%) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-2.65%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-1.7%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.33% <0%> (+0.33%) | :arrow_up: |\n| ... and 479 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 44c1deb...0c2828f. Read the comment docs.\n. # Codecov Report\nMerging #2805 into master will increase coverage by 23.5%.\nThe diff coverage is 41.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2805      +/-\n==========================================\n+ Coverage   45.72%   69.23%   +23.5%   \n==========================================\n  Files         910      905       -5   \n  Lines       43312    43206     -106   \n  Branches     5868     5851      -17   \n==========================================\n+ Hits        19805    29914   +10109   \n+ Misses      21861    11302   -10559   \n- Partials     1646     1990     +344\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 91.96% <\u00f8> (+86.6%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.15% <33.33%> (+23.78%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 55.87% <40%> (-0.28%) | :arrow_down: |\n| ...ontroller/api/resources/ServerTableSizeReader.java | 78.04% <42.85%> (+78.04%) | :arrow_up: |\n| ...not/controller/validation/StorageQuotaChecker.java | 89.36% <50%> (+42.85%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 21.73% <0%> (-6.04%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | :arrow_down: |\n| ... and 488 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 44c1deb...9fb53dc. Read the comment docs.\n. # Codecov Report\nMerging #2806 into master will increase coverage by 23.58%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2806       +/-\n===========================================\n+ Coverage   45.72%   69.31%   +23.58%   \n===========================================\n  Files         910      910             \n  Lines       43312    43314        +2   \n  Branches     5868     5869        +1   \n===========================================\n+ Hits        19805    30023    +10218   \n+ Misses      21861    11299    -10562   \n- Partials     1646     1992      +346\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...builder/BasePartitionAwareRoutingTableBuilder.java | 84.37% <\u00f8> (+84.37%) | :arrow_up: |\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 69.33% <100%> (+69.33%) | :arrow_up: |\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 82.6% <100%> (+82.6%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-2.65%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 91.11% <0%> (-2.23%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | :arrow_down: |\n| ... and 478 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 44c1deb...692e147. Read the comment docs.\n. # Codecov Report\nMerging #2807 into master will increase coverage by 23.58%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2807       +/-\n===========================================\n+ Coverage   45.72%   69.31%   +23.58%   \n===========================================\n  Files         910      910             \n  Lines       43312    43312             \n  Branches     5868     5868             \n===========================================\n+ Hits        19805    30020    +10215   \n+ Misses      21861    11302    -10559   \n- Partials     1646     1990      +344\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-2.65%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-1.7%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.63% <0%> (-1.52%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-0.67%) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.55% <0%> (+0.4%) | :arrow_up: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 62.22% <0%> (+0.74%) | :arrow_up: |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 62.89% <0%> (+0.78%) | :arrow_up: |\n| ... and 476 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 44c1deb...f8eeadc. Read the comment docs.\n. # Codecov Report\nMerging #2808 into master will decrease coverage by 0.05%.\nThe diff coverage is 46.66%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2808      +/-\n==========================================\n- Coverage   69.27%   69.22%   -0.06%   \n==========================================\n  Files         905      905            \n  Lines       43188    43252      +64   \n  Branches     5848     5861      +13   \n==========================================\n+ Hits        29919    29941      +22   \n- Misses      11285    11328      +43   \n+ Partials     1984     1983       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/config/CombinedConfig.java | 6.89% <0%> (-13.11%) | :arrow_down: |\n| ...com/linkedin/pinot/common/config/Deserializer.java | 57.27% <100%> (+0.81%) | :arrow_up: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 90.74% <100%> (+0.54%) | :arrow_up: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.19% <100%> (+0.17%) | :arrow_up: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 75.49% <100%> (+0.66%) | :arrow_up: |\n| ...edin/pinot/common/config/CombinedConfigLoader.java | 37.93% <46.15%> (-0.54%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 47.16% <0%> (-9.44%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-2.65%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 47c146d...97bde85. Read the comment docs.\n. # Codecov Report\nMerging #2812 into master will decrease coverage by 0.03%.\nThe diff coverage is 78.04%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2812      +/-\n==========================================\n- Coverage   69.29%   69.25%   -0.04%   \n==========================================\n  Files         910      906       -4   \n  Lines       43315    43227      -88   \n  Branches     5869     5857      -12   \n==========================================\n- Hits        30016    29938      -78   \n+ Misses      11302    11301       -1   \n+ Partials     1997     1988       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../com/linkedin/pinot/common/config/TableConfig.java | 78.54% <100%> (+0.26%) | :arrow_up: |\n| ...com/linkedin/pinot/common/config/TenantConfig.java | 31.57% <100%> (+5.86%) | :arrow_up: |\n| ...inot/common/utils/ControllerTenantNameBuilder.java | 76.92% <100%> (+1.92%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 62.65% <100%> (+1.24%) | :arrow_up: |\n| ...inkedin/pinot/common/config/TagOverrideConfig.java | 50% <50%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...in/pinot/common/partition/PartitionAssignment.java | 68.96% <0%> (-6.9%) | :arrow_down: |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 21.73% <0%> (-6.04%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7c80f36...6f674ba. Read the comment docs.\n. # Codecov Report\nMerging #2813 into master will increase coverage by 13.28%.\nThe diff coverage is 81.13%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster   #2813       +/-\n==========================================\n+ Coverage   45.91%   59.2%   +13.28%   \n==========================================\n  Files         905     905             \n  Lines       43186   43186             \n  Branches     5848    5848             \n==========================================\n+ Hits        19831   25569     +5738   \n+ Misses      21699   15740     -5959   \n- Partials     1656    1877      +221\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/server/starter/helix/HelixServerStarter.java | 0% <0%> (-80.77%) | :arrow_down: |\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/config/OfflineTagConfig.java | 100% <100%> (+100%) | :arrow_up: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 60% <100%> (-10%) | :arrow_down: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 67.59% <100%> (+3.7%) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 43.28% <100%> (-16.42%) | :arrow_down: |\n| ...controller/helix/ControllerRequestBuilderUtil.java | 93.54% <100%> (+74.19%) | :arrow_up: |\n| .../helix/core/sharding/RandomAssignmentStrategy.java | 100% <100%> (+100%) | :arrow_up: |\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 91.17% <100%> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 53.86% <81.81%> (+16.49%) | :arrow_up: |\n| ... and 629 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f9d55f7...279fa54. Read the comment docs.\n. # Codecov Report\nMerging #2814 into master will decrease coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2814      +/-\n==========================================\n- Coverage   69.29%   69.21%   -0.09%   \n==========================================\n  Files         910      905       -5   \n  Lines       43315    43187     -128   \n  Branches     5869     5848      -21   \n==========================================\n- Hits        30016    29891     -125   \n- Misses      11302    11305       +3   \n+ Partials     1997     1991       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...common/partition/PartitionAssignmentGenerator.java | 95.23% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...in/pinot/common/partition/PartitionAssignment.java | 68.96% <0%> (-6.9%) | :arrow_down: |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 21.73% <0%> (-6.04%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 84.33% <0%> (-2.82%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7c80f36...3b85b2e. Read the comment docs.\n. # Codecov Report\nMerging #2816 into master will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2816      +/-\n==========================================\n- Coverage    69.3%   69.26%   -0.04%   \n==========================================\n  Files         910      910            \n  Lines       43316    43315       -1   \n  Branches     5870     5870            \n==========================================\n- Hits        30021    30003      -18   \n- Misses      11306    11318      +12   \n- Partials     1989     1994       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...common/partition/PartitionAssignmentGenerator.java | 95.16% <100%> (-0.08%) | :arrow_down: |\n| ...va/com/linkedin/pinot/common/config/TagConfig.java | 66.66% <100%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 80% <100%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/config/OfflineTagConfig.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 78.68% <100%> (\u00f8) | :arrow_up: |\n| ...ebalance/ReplicaGroupRebalanceSegmentStrategy.java | 83.47% <100%> (\u00f8) | :arrow_up: |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 86.89% <100%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 23495ff...096ea13. Read the comment docs.\n. # Codecov Report\nMerging #2817 into master will increase coverage by 0.02%.\nThe diff coverage is 81.08%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2817      +/-\n==========================================\n+ Coverage   69.19%   69.22%   +0.02%   \n==========================================\n  Files         905      905            \n  Lines       43194    43186       -8   \n  Branches     5850     5849       -1   \n==========================================\n+ Hits        29888    29895       +7   \n+ Misses      11312    11303       -9   \n+ Partials     1994     1988       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.36% <\u00f8> (-0.04%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <\u00f8> (+1.8%) | :arrow_up: |\n| .../partition/StreamPartitionAssignmentGenerator.java | 95.16% <100%> (\u00f8) | |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 86.89% <75%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.06% <77.27%> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.05% <90%> (-0.1%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-11.12%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ff2aabd...1096531. Read the comment docs.\n. # Codecov Report\nMerging #2818 into master will increase coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2818      +/-\n==========================================\n+ Coverage   69.24%   69.27%   +0.03%   \n==========================================\n  Files         905      905            \n  Lines       43186    43194       +8   \n  Branches     5848     5850       +2   \n==========================================\n+ Hits        29905    29924      +19   \n+ Misses      11293    11281      -12   \n- Partials     1988     1989       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 85.18% <100%> (+2.57%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 80% <0%> (-7.28%) | :arrow_down: |\n| ...builder/BasePartitionAwareRoutingTableBuilder.java | 78.12% <0%> (-6.25%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-5.48%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f60d30f...f6995c9. Read the comment docs.\n. # Codecov Report\nMerging #2819 into master will decrease coverage by 0.34%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2819      +/-\n==========================================\n- Coverage   69.19%   68.84%   -0.35%   \n==========================================\n  Files         905      908       +3   \n  Lines       43194    43952     +758   \n  Branches     5850     5998     +148   \n==========================================\n+ Hits        29888    30260     +372   \n- Misses      11312    11677     +365   \n- Partials     1994     2015      +21\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...com/linkedin/pinot/common/config/TenantConfig.java | 25.71% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 60.49% <0%> (-23.85%) | :arrow_down: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 66.66% <0%> (-23.53%) | :arrow_down: |\n| ...not/controller/validation/StorageQuotaChecker.java | 73.01% <0%> (-22.34%) | :arrow_down: |\n| ...m/linkedin/pinot/common/config/CombinedConfig.java | 5.4% <0%> (-14.6%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...com/linkedin/pinot/common/config/Deserializer.java | 46.74% <0%> (-9.72%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...edin/pinot/common/config/CombinedConfigLoader.java | 30.55% <0%> (-7.91%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ff2aabd...de408ec. Read the comment docs.\n. # Codecov Report\nMerging #2821 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2821      +/-\n==========================================\n+ Coverage   69.24%   69.24%   +<.01%   \n==========================================\n  Files         905      905            \n  Lines       43186    43176      -10   \n  Branches     5849     5847       -2   \n==========================================\n- Hits        29902    29898       -4   \n+ Misses      11300    11294       -6   \n  Partials     1984     1984\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.87% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 23.8% <\u00f8> (+2.07%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 86.41% <\u00f8> (+2.08%) | :arrow_up: |\n| ...din/pinot/pql/parsers/pql2/ast/OptionsAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9328c09...057ac15. Read the comment docs.\n. # Codecov Report\nMerging #2823 into master will decrease coverage by 0.23%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2823      +/-\n==========================================\n- Coverage   69.29%   69.06%   -0.24%   \n==========================================\n  Files         908      908            \n  Lines       43349    43598     +249   \n  Branches     5874     5938      +64   \n==========================================\n+ Hits        30039    30111      +72   \n- Misses      11308    11473     +165   \n- Partials     2002     2014      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/broker/queryquota/HitCounter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/common/data/MetricFieldSpec.java | 66.66% <0%> (-23.53%) | :arrow_down: |\n| ...m/linkedin/pinot/common/config/CombinedConfig.java | 5.4% <0%> (-14.6%) | :arrow_down: |\n| ...com/linkedin/pinot/common/config/Deserializer.java | 46.74% <0%> (-9.72%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...edin/pinot/common/config/CombinedConfigLoader.java | 30.55% <0%> (-7.91%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 69.6% <0%> (-5.23%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2315a72...8eff2fc. Read the comment docs.\n. # Codecov Report\nMerging #2826 into master will decrease coverage by 0.02%.\nThe diff coverage is 69.59%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2826      +/-\n==========================================\n- Coverage   69.19%   69.17%   -0.03%   \n==========================================\n  Files         908      910       +2   \n  Lines       43455    43507      +52   \n  Branches     5900     5908       +8   \n==========================================\n+ Hits        30069    30095      +26   \n- Misses      11370    11402      +32   \n+ Partials     2016     2010       -6\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/utils/TenantNameBuilder.java | 0% <0%> (-75%) | :arrow_down: |\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 66.41% <100%> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/common/config/TableConfig.java | 79.75% <100%> (+0.65%) | :arrow_up: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 73.63% <100%> (\u00f8) | :arrow_up: |\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 91.17% <100%> (\u00f8) | :arrow_up: |\n| ...controller/helix/ControllerRequestBuilderUtil.java | 93.65% <100%> (+0.1%) | :arrow_up: |\n| ...linkedin/pinot/common/config/OfflineTagConfig.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 100% <100%> (+20%) | :arrow_up: |\n| .../helix/core/sharding/RandomAssignmentStrategy.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4d08805...81a5065. Read the comment docs.\n. # Codecov Report\nMerging #2827 into master will decrease coverage by 0.71%.\nThe diff coverage is 81.81%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2827      +/-\n==========================================\n- Coverage   69.25%   68.53%   -0.72%   \n==========================================\n  Files         908      910       +2   \n  Lines       43413    45072    +1659   \n  Branches     5887     6344     +457   \n==========================================\n+ Hits        30064    30891     +827   \n- Misses      11342    12099     +757   \n- Partials     2007     2082      +75\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 78.33% <81.81%> (-0.36%) | :arrow_down: |\n| ...linkedin/pinot/common/config/OfflineTagConfig.java | 57.14% <0%> (-42.86%) | :arrow_down: |\n| ...pinot/common/response/broker/SelectionResults.java | 70% <0%> (-30%) | :arrow_down: |\n| .../com/linkedin/pinot/core/minion/SegmentPurger.java | 55.65% <0%> (-26.4%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 49.47% <0%> (-20.61%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/TenantNameBuilder.java | 58.33% <0%> (-16.67%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...t/core/query/selection/SelectionOperatorUtils.java | 81.4% <0%> (-12.55%) | :arrow_down: |\n| .../pinot/core/operator/docidsets/BitmapDocIdSet.java | 84.84% <0%> (-12.13%) | :arrow_down: |\n| ... and 40 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update da30818...dbcb9a3. Read the comment docs.\n. # Codecov Report\nMerging #2829 into master will decrease coverage by 0.03%.\nThe diff coverage is 94.23%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2829      +/-\n==========================================\n- Coverage   69.25%   69.21%   -0.04%   \n==========================================\n  Files         908      909       +1   \n  Lines       43413    43458      +45   \n  Branches     5887     5899      +12   \n==========================================\n+ Hits        30064    30081      +17   \n- Misses      11342    11369      +27   \n- Partials     2007     2008       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.31% <0%> (-0.57%) | :arrow_down: |\n| ...pinot/pql/parsers/pql2/ast/InPredicateAstNode.java | 64.91% <100%> (+0.62%) | :arrow_up: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 85.02% <100%> (+0.13%) | :arrow_up: |\n| ...mon/request/transform/TransformExpressionTree.java | 79.24% <100%> (\u00f8) | :arrow_up: |\n| .../broker/requesthandler/RequestPreprocessUtils.java | 95% <95%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.19% <0%> (-5.23%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3e52885...513263e. Read the comment docs.\n. # Codecov Report\nMerging #2830 into master will increase coverage by 0.01%.\nThe diff coverage is 79.16%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2830      +/-\n==========================================\n+ Coverage   69.25%   69.26%   +0.01%   \n==========================================\n  Files         908      908            \n  Lines       43413    43445      +32   \n  Branches     5887     5895       +8   \n==========================================\n+ Hits        30064    30092      +28   \n- Misses      11342    11350       +8   \n+ Partials     2007     2003       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.31% <0%> (-0.57%) | :arrow_down: |\n| ...ion/groupby/AggregationGroupByTrimmingService.java | 94.44% <100%> (\u00f8) | :arrow_up: |\n| ...core/query/selection/SelectionOperatorService.java | 84.31% <100%> (-2.13%) | :arrow_down: |\n| ...aggregation/function/AggregationFunctionUtils.java | 87.5% <33.33%> (-5.61%) | :arrow_down: |\n| ...t/core/query/selection/SelectionOperatorUtils.java | 92.98% <79.41%> (-0.97%) | :arrow_down: |\n| ...pinot/common/response/broker/SelectionResults.java | 80% <80%> (-20%) | :arrow_down: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 78.5% <84.61%> (-0.17%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac707c4...9293c8c. Read the comment docs.\n. # Codecov Report\nMerging #2831 into master will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2831      +/-\n==========================================\n- Coverage   69.25%   69.21%   -0.04%   \n==========================================\n  Files         908      908            \n  Lines       43413    43414       +1   \n  Branches     5887     5887            \n==========================================\n- Hits        30064    30048      -16   \n- Misses      11342    11363      +21   \n+ Partials     2007     2003       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 72.06% <100%> (-0.99%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-4.77%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.59%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 49.03% <0%> (-1.3%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 83.62% <0%> (-1.17%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac707c4...3a0ff33. Read the comment docs.\n. # Codecov Report\nMerging #2833 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2833      +/-\n==========================================\n+ Coverage   69.25%   69.26%   +0.01%   \n==========================================\n  Files         908      908            \n  Lines       43413    43413            \n  Branches     5887     5887            \n==========================================\n+ Hits        30064    30069       +5   \n- Misses      11342    11346       +4   \n+ Partials     2007     1998       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.19% <0%> (-5.23%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 78.82% <0%> (-1.18%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 83.62% <0%> (-1.17%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.6% <0%> (-0.53%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.51% <0%> (\u00f8) | :arrow_up: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac707c4...33e5c14. Read the comment docs.\n. # Codecov Report\nMerging #2835 into master will increase coverage by 0.11%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2835      +/-\n==========================================\n+ Coverage   69.11%   69.22%   +0.11%   \n==========================================\n  Files         908      908            \n  Lines       43414    43417       +3   \n  Branches     5887     5888       +1   \n==========================================\n+ Hits        30006    30056      +50   \n+ Misses      11404    11357      -47   \n  Partials     2004     2004\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/common/utils/TarGzCompressionUtils.java | 75.25% <50%> (-1.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-1.82%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6efb1ba...48c3cf9. Read the comment docs.\n. # Codecov Report\nMerging #2836 into master will increase coverage by 23.55%.\nThe diff coverage is 75%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2836       +/-\n===========================================\n+ Coverage   45.65%   69.21%   +23.55%   \n===========================================\n  Files         908      908             \n  Lines       43417    43425        +8   \n  Branches     5888     5890        +2   \n===========================================\n+ Hits        19824    30055    +10231   \n+ Misses      21935    11359    -10576   \n- Partials     1658     2011      +353\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 70.4% <75%> (+15.69%) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-7.28%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 80% <0%> (-7.28%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.63% <0%> (-1.52%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (+0.33%) | :arrow_up: |\n| ... and 480 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 07b0508...74bc4a0. Read the comment docs.\n. # Codecov Report\nMerging #2837 into master will increase coverage by 0.04%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2837      +/-\n==========================================\n+ Coverage   69.22%   69.27%   +0.04%   \n==========================================\n  Files         908      908            \n  Lines       43417    43417            \n  Branches     5888     5888            \n==========================================\n+ Hits        30057    30077      +20   \n+ Misses      11354    11343      -11   \n+ Partials     2006     1997       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/common/utils/TarGzCompressionUtils.java | 77.31% <33.33%> (+2.06%) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 65.21% <0%> (-4.35%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.63% <0%> (-1.52%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d01f209...4c0138b. Read the comment docs.\n. # Codecov Report\nMerging #2840 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2840      +/-\n==========================================\n- Coverage   69.25%   69.23%   -0.02%   \n==========================================\n  Files         908      908            \n  Lines       43457    43457            \n  Branches     5898     5898            \n==========================================\n- Hits        30095    30089       -6   \n- Misses      11354    11355       +1   \n- Partials     2008     2013       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 57.73% <0%> (-6.19%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 72.75% <0%> (-1.31%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f64283b...ae144c3. Read the comment docs.\n. # Codecov Report\nMerging #2841 into master will increase coverage by 0.06%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2841      +/-\n==========================================\n+ Coverage   69.25%   69.31%   +0.06%   \n==========================================\n  Files         908      908            \n  Lines       43457    43461       +4   \n  Branches     5898     5900       +2   \n==========================================\n+ Hits        30095    30127      +32   \n+ Misses      11354    11326      -28   \n  Partials     2008     2008\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 61.17% <50%> (+0.05%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-1.82%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 84.79% <0%> (-1.17%) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f64283b...f6fa39b. Read the comment docs.\n. # Codecov Report\nMerging #2842 into master will decrease coverage by 0.22%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2842      +/-\n==========================================\n- Coverage   69.25%   69.03%   -0.23%   \n==========================================\n  Files         908      912       +4   \n  Lines       43457    43616     +159   \n  Branches     5898     5927      +29   \n==========================================\n+ Hits        30095    30109      +14   \n- Misses      11354    11490     +136   \n- Partials     2008     2017       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../main/java/com/linkedin/pinot/storage/PinotFS.java | 0% <0%> (\u00f8) | |\n| .../java/com/linkedin/pinot/storage/LocalPinotFS.java | 0% <0%> (\u00f8) | |\n| ...java/com/linkedin/pinot/storage/HadoopPinotFS.java | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-12.73%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| .../com/linkedin/pinot/core/minion/SegmentPurger.java | 77.1% <0%> (-4.95%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.75% <0%> (-2.71%) | :arrow_down: |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f64283b...c6c2b48. Read the comment docs.\n. # Codecov Report\nMerging #2844 into master will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2844      +/-\n==========================================\n+ Coverage    69.2%   69.24%   +0.04%   \n==========================================\n  Files         908      908            \n  Lines       43461    43707     +246   \n  Branches     5900     5961      +61   \n==========================================\n+ Hits        30076    30265     +189   \n- Misses      11369    11417      +48   \n- Partials     2016     2025       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...edin/pinot/common/utils/TarGzCompressionUtils.java | 79.06% <100%> (+1.75%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| .../com/linkedin/pinot/core/minion/SegmentPurger.java | 55.65% <0%> (-26.4%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-9.1%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.01% <0%> (-2.51%) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 89.63% <0%> (-1.83%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | :arrow_down: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 62.45% <0%> (-0.39%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (\u00f8) | :arrow_up: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f615f53...3d23ca6. Read the comment docs.\n. # Codecov Report\nMerging #2845 into master will increase coverage by 0.07%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2845      +/-\n==========================================\n+ Coverage    69.2%   69.28%   +0.07%   \n==========================================\n  Files         908      908            \n  Lines       43461    43462       +1   \n  Branches     5900     5900            \n==========================================\n+ Hits        30076    30111      +35   \n+ Misses      11369    11339      -30   \n+ Partials     2016     2012       -4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...din/pinot/pql/parsers/pql2/ast/OptionsAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-9.1%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 84.79% <0%> (-1.17%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-1.06%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.06% <0%> (+0.16%) | :arrow_up: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.14% <0%> (+0.57%) | :arrow_up: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f615f53...a8da32c. Read the comment docs.\n. # Codecov Report\nMerging #2850 into master will decrease coverage by 0.02%.\nThe diff coverage is 63.63%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2850      +/-\n==========================================\n- Coverage   69.19%   69.16%   -0.03%   \n==========================================\n  Files         908      908            \n  Lines       43455    43462       +7   \n  Branches     5900     5900            \n==========================================\n- Hits        30069    30062       -7   \n- Misses      11370    11385      +15   \n+ Partials     2016     2015       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 85.41% <100%> (\u00f8) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.75% <55.55%> (-1.29%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 61.19% <0%> (-5.23%) | :arrow_down: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 92% <0%> (-4%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.96% <0%> (-1.56%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.63% <0%> (-1.52%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 536a1a5...a906976. Read the comment docs.\n. # Codecov Report\nMerging #2851 into master will increase coverage by 0.02%.\nThe diff coverage is 71.03%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2851      +/-\n==========================================\n+ Coverage   69.19%   69.21%   +0.02%   \n==========================================\n  Files         908      909       +1   \n  Lines       43455    43506      +51   \n  Branches     5900     5913      +13   \n==========================================\n+ Hits        30069    30113      +44   \n- Misses      11370    11378       +8   \n+ Partials     2016     2015       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 100% <100%> (+20%) | :arrow_up: |\n| ...controller/helix/ControllerRequestBuilderUtil.java | 93.65% <100%> (+0.1%) | :arrow_up: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 73.63% <100%> (\u00f8) | :arrow_up: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 80.76% <100%> (\u00f8) | :arrow_up: |\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 91.17% <100%> (\u00f8) | :arrow_up: |\n| .../helix/core/sharding/RandomAssignmentStrategy.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 66.41% <100%> (\u00f8) | :arrow_up: |\n| ...com/linkedin/pinot/common/config/TenantConfig.java | 31.57% <100%> (+5.86%) | :arrow_up: |\n| ...linkedin/pinot/common/config/OfflineTagConfig.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4d08805...5b8f1e3. Read the comment docs.\n. # Codecov Report\nMerging #2855 into master will decrease coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2855      +/-\n==========================================\n- Coverage   69.23%   69.17%   -0.07%   \n==========================================\n  Files         909      909            \n  Lines       43512    43512            \n  Branches     5913     5913            \n==========================================\n- Hits        30127    30098      -29   \n- Misses      11372    11397      +25   \n- Partials     2013     2017       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...or/impl/inv/OffHeapBitmapInvertedIndexCreator.java | 88.11% <100%> (+0.99%) | :arrow_up: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-4.77%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-3.64%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...m/linkedin/pinot/client/DynamicBrokerSelector.java | 69.69% <0%> (-3.04%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 440070e...53c23bd. Read the comment docs.\n. # Codecov Report\nMerging #2857 into master will increase coverage by 0.08%.\nThe diff coverage is 92.3%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2857      +/-\n==========================================\n+ Coverage   69.17%   69.25%   +0.08%   \n==========================================\n  Files         909      909            \n  Lines       43512    43516       +4   \n  Branches     5913     5915       +2   \n==========================================\n+ Hits        30098    30138      +40   \n+ Misses      11398    11361      -37   \n- Partials     2016     2017       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 61.62% <\u00f8> (-0.06%) | :arrow_down: |\n| ...t/core/io/compression/PassThroughDecompressor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/core/io/compression/SnappyDecompressor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.63% <88.88%> (-0.13%) | :arrow_down: |\n| ...or/SelectionSingleValueColumnWithDictIterator.java | 77.77% <0%> (-22.23%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...ot/core/segment/index/readers/BytesDictionary.java | 90.9% <0%> (-9.1%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1b0d1b8...2bba52b. Read the comment docs.\n. # Codecov Report\nMerging #2858 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2858      +/-\n==========================================\n+ Coverage   69.23%   69.25%   +0.01%   \n==========================================\n  Files         909      909            \n  Lines       43516    43495      -21   \n  Branches     5915     5910       -5   \n==========================================\n- Hits        30129    30123       -6   \n+ Misses      11364    11346      -18   \n- Partials     2023     2026       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 78.76% <\u00f8> (+12.34%) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.31% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 69.23% <0%> (-2.06%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 70010ad...18a3e06. Read the comment docs.\n. # Codecov Report\nMerging #2860 into master will decrease coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2860      +/-\n==========================================\n- Coverage   69.23%   69.15%   -0.09%   \n==========================================\n  Files         909      909            \n  Lines       43516    43670     +154   \n  Branches     5915     5949      +34   \n==========================================\n+ Hits        30129    30200      +71   \n- Misses      11364    11447      +83   \n  Partials     2023     2023\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.47% <\u00f8> (\u00f8) | :arrow_up: |\n| ...a/com/linkedin/pinot/common/utils/SchemaUtils.java | 9.58% <\u00f8> (\u00f8) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 56.73% <0%> (-6.16%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.51% <0%> (-2.81%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.99% <0%> (-2.73%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb5a85c...1a82f99. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@80c25a4). Click here to learn what that means.\nThe diff coverage is 70%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2866   +/-\n=========================================\n  Coverage          ?   69.24%         \n=========================================\n  Files             ?      909         \n  Lines             ?    43496         \n  Branches          ?     5910         \n=========================================\n  Hits              ?    30118         \n  Misses            ?    11357         \n  Partials          ?     2021\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 63.03% <70%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 80c25a4...f5547fc. Read the comment docs.\n. # Codecov Report\nMerging #2867 into master will decrease coverage by 0.02%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2867      +/-\n==========================================\n- Coverage   69.26%   69.24%   -0.03%   \n==========================================\n  Files         909      909            \n  Lines       43496    43502       +6   \n  Branches     5910     5913       +3   \n==========================================\n- Hits        30127    30121       -6   \n- Misses      11348    11359      +11   \n- Partials     2021     2022       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/segment/index/loader/SegmentPreProcessor.java | 78.78% <50%> (-6.4%) | :arrow_down: |\n| .../selection/comparator/DocIdFloatValComparator.java | 0% <0%> (-81.82%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...ection/comparator/CompositeDocIdValComparator.java | 71.42% <0%> (-8.58%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 21c2d10...243420e. Read the comment docs.\n. # Codecov Report\nMerging #2874 into master will increase coverage by 0.06%.\nThe diff coverage is 20%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2874      +/-\n==========================================\n+ Coverage   69.18%   69.24%   +0.06%   \n==========================================\n  Files         909      909            \n  Lines       43502    43543      +41   \n  Branches     5913     5920       +7   \n==========================================\n+ Hits        30098    30153      +55   \n+ Misses      11390    11368      -22   \n- Partials     2014     2022       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ller/api/resources/PinotSchemaRestletResource.java | 32.22% <16.66%> (-8.36%) | :arrow_down: |\n| ...oller/api/resources/PinotTableRestletResource.java | 37.56% <33.33%> (-0.72%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-5.46%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1.67%) | :arrow_down: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac0a968...648cd41. Read the comment docs.\n. # Codecov Report\nMerging #2875 into master will increase coverage by 0.11%.\nThe diff coverage is 77.27%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2875      +/-\n=========================================\n+ Coverage   69.18%   69.3%   +0.11%   \n=========================================\n  Files         909     909            \n  Lines       43502   43505       +3   \n  Branches     5913    5914       +1   \n=========================================\n+ Hits        30098   30150      +52   \n+ Misses      11390   11338      -52   \n- Partials     2014    2017       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.14% <100%> (+1.42%) | :arrow_up: |\n| .../realtime/segment/FlushThresholdUpdateManager.java | 92.59% <100%> (+0.59%) | :arrow_up: |\n| ...segment/SegmentSizeBasedFlushThresholdUpdater.java | 68.33% <72.22%> (+3.33%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 84.44% <0%> (-11.12%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1.67%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2111a49...8b34e6d. Read the comment docs.\n. # Codecov Report\nMerging #2876 into master will increase coverage by 0.11%.\nThe diff coverage is 92.3%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2876      +/-\n=========================================\n+ Coverage   69.18%   69.3%   +0.11%   \n=========================================\n  Files         909     909            \n  Lines       43502   43513      +11   \n  Branches     5913    5914       +1   \n=========================================\n+ Hits        30098   30157      +59   \n+ Misses      11390   11335      -55   \n- Partials     2014    2021       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.04% <100%> (+0.89%) | :arrow_up: |\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 67.15% <100%> (\u00f8) | :arrow_up: |\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 81.41% <90%> (+0.45%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 80% <0%> (-12.73%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 65.21% <0%> (-4.35%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2111a49...2d08488. Read the comment docs.\n. # Codecov Report\nMerging #2878 into master will decrease coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2878      +/-\n==========================================\n- Coverage   69.28%   69.22%   -0.07%   \n==========================================\n  Files         909      909            \n  Lines       43516    43516            \n  Branches     5915     5915            \n==========================================\n- Hits        30151    30123      -28   \n- Misses      11345    11358      +13   \n- Partials     2020     2035      +15\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 67.05% <\u00f8> (-0.1%) | :arrow_down: |\n| ...ore/realtime/impl/RealtimeSegmentStatsHistory.java | 80.89% <100%> (-0.52%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5b97faa...b592fb9. Read the comment docs.\n. # Codecov Report\nMerging #2880 into master will decrease coverage by 0.28%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2880      +/-\n==========================================\n- Coverage   69.26%   68.97%   -0.29%   \n==========================================\n  Files         909      909            \n  Lines       43516    43516            \n  Branches     5915     5915            \n==========================================\n- Hits        30140    30017     -123   \n- Misses      11350    11492     +142   \n+ Partials     2026     2007      -19\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ler/api/resources/PinotSegmentRestletResource.java | 29.41% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.47% <\u00f8> (\u00f8) | :arrow_up: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 46.19% <0%> (-39.77%) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 67.5% <0%> (-10.84%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bfa3213...91d4936. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@5ffc862). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2885   +/-\n=========================================\n  Coverage          ?   69.16%         \n=========================================\n  Files             ?      912         \n  Lines             ?    43623         \n  Branches          ?     5932         \n=========================================\n  Hits              ?    30171         \n  Misses            ?    11431         \n  Partials          ?     2021\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5ffc862...a6a92bc. Read the comment docs.\n. # Codecov Report\nMerging #2886 into master will increase coverage by <.01%.\nThe diff coverage is 86.4%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2886      +/-\n==========================================\n+ Coverage   69.17%   69.17%   +<.01%   \n==========================================\n  Files         912      912            \n  Lines       43597    43598       +1   \n  Branches     5926     5926            \n==========================================\n+ Hits        30157    30160       +3   \n+ Misses      11416    11410       -6   \n- Partials     2024     2028       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...dex/loader/invertedindex/InvertedIndexHandler.java | 78.57% <33.33%> (\u00f8) | :arrow_up: |\n| ...or/impl/inv/OffHeapBitmapInvertedIndexCreator.java | 85.29% <87.65%> (-2.83%) | :arrow_down: |\n| ...tor/impl/inv/OnHeapBitmapInvertedIndexCreator.java | 85.18% <88.88%> (-1.03%) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <90%> (+0.08%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 69.23% <0%> (-2.06%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0370753...a14ed31. Read the comment docs.\n. # Codecov Report\nMerging #2887 into master will increase coverage by 0.14%.\nThe diff coverage is 93.75%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2887      +/-\n=========================================\n+ Coverage   69.15%   69.3%   +0.14%   \n=========================================\n  Files         912     912            \n  Lines       43623   43651      +28   \n  Branches     5932    5931       -1   \n=========================================\n+ Hits        30168   30251      +83   \n+ Misses      11421   11385      -36   \n+ Partials     2034    2015      -19\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 78.33% <93.75%> (\u00f8) | :arrow_up: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-6.78%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| .../transformer/datetime/BaseDateTimeTransformer.java | 95.23% <0%> (-4.77%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 63.03% <0%> (+0.38%) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 48.23% <0%> (+0.41%) | :arrow_up: |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 03852e1...57a90ca. Read the comment docs.\n. # Codecov Report\nMerging #2888 into master will increase coverage by 24.29%.\nThe diff coverage is 87.09%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #2888       +/-\n=============================================\n+ Coverage     45.88%   70.17%   +24.29%   \n- Complexity        0        4        +4   \n=============================================\n  Files           931      955       +24   \n  Lines         43697    44704     +1007   \n  Branches       5972     6077      +105   \n=============================================\n+ Hits          20050    31371    +11321   \n+ Misses        21959    11257    -10702   \n- Partials       1688     2076      +388\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 71.69% <\u00f8> (+71.69%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/startree/v2/AggregationFunctionColumnPair.java | 78.26% <\u00f8> (+13.04%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...din/pinot/core/startree/v2/StarTreeV2Metadata.java | 84.61% <\u00f8> (+7.69%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/core/startree/v2/TreeNode.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/core/startree/v2/OnHeapStarTreeV2Loader.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...indexsegment/immutable/ImmutableSegmentLoader.java | 90.24% <100%> (+1.05%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/indexsegment/immutable/ImmutableSegmentImpl.java | 74.44% <100%> (+5.83%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...din/pinot/core/startree/v2/StarTreeV2Constant.java | 25% <25%> (\u00f8) | 0 <0> (?) | |\n| ...inkedin/pinot/core/startree/v2/StarTreeV2Impl.java | 40% <40%> (\u00f8) | 0 <0> (?) | |\n| ...rtree/v2/StarTreeV2AggfunColumnPairDataSource.java | 47.82% <47.82%> (\u00f8) | 0 <0> (?) | |\n| ... and 548 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 989ffb7...b0cea99. Read the comment docs.\n. # Codecov Report\nMerging #2890 into master will increase coverage by 23.44%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2890       +/-\n===========================================\n+ Coverage   45.73%   69.17%   +23.44%   \n===========================================\n  Files         912      912             \n  Lines       43651    43652        +1   \n  Branches     5931     5931             \n===========================================\n+ Hits        19962    30196    +10234   \n+ Misses      22008    11428    -10580   \n- Partials     1681     2028      +347\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...troller/helix/core/retention/RetentionManager.java | 78.72% <100%> (+35.71%) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 84.44% <0%> (-2.23%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 39.55% <0%> (-1.5%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-0.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (\u00f8) | :arrow_up: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 62.64% <0%> (+0.38%) | :arrow_up: |\n| ... and 483 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a501186...491397b. Read the comment docs.\n. # Codecov Report\nMerging #2891 into master will increase coverage by 23.48%.\nThe diff coverage is 81.81%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2891       +/-\n===========================================\n+ Coverage   45.73%   69.21%   +23.48%   \n===========================================\n  Files         912      914        +2   \n  Lines       43651    43416      -235   \n  Branches     5931     5922        -9   \n===========================================\n+ Hits        19962    30052    +10090   \n+ Misses      22008    11348    -10660   \n- Partials     1681     2016      +335\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 74.26% <81.81%> (+17.63%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 76.36% <0%> (-10.91%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | :arrow_down: |\n| ...erator/query/MetadataBasedAggregationOperator.java | 55.88% <0%> (-1.27%) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 81.35% <0%> (-0.85%) | :arrow_down: |\n| ...om/linkedin/pinot/core/plan/TransformPlanNode.java | 75% <0%> (-0.76%) | :arrow_down: |\n| ... and 495 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a501186...d9bdceb. Read the comment docs.\n. # Codecov Report\nMerging #2892 into master will increase coverage by 0.05%.\nThe diff coverage is 70%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2892      +/-\n==========================================\n+ Coverage   69.14%   69.19%   +0.05%   \n==========================================\n  Files         912      912            \n  Lines       43652    43597      -55   \n  Branches     5931     5926       -5   \n==========================================\n- Hits        30181    30167      -14   \n+ Misses      11447    11409      -38   \n+ Partials     2024     2021       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...function/PercentileTDigestAggregationFunction.java | 69.23% <100%> (-7.99%) | :arrow_down: |\n| ...n/function/PercentileEstMVAggregationFunction.java | 100% <100%> (+27.58%) | :arrow_up: |\n| ...tion/function/PercentileMVAggregationFunction.java | 100% <100%> (+4.54%) | :arrow_up: |\n| ...ion/function/PercentileEstAggregationFunction.java | 71.15% <100%> (-0.04%) | :arrow_down: |\n| ...gation/function/PercentileAggregationFunction.java | 69.64% <100%> (-0.2%) | :arrow_down: |\n| ...gregation/function/AggregationFunctionFactory.java | 76.68% <50%> (-3.79%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 462b795...22c183b. Read the comment docs.\n. # Codecov Report\nMerging #2894 into master will decrease coverage by <.01%.\nThe diff coverage is 90.29%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2894      +/-\n==========================================\n- Coverage   69.17%   69.17%   -0.01%   \n==========================================\n  Files         912      913       +1   \n  Lines       43597    43470     -127   \n  Branches     5926     5932       +6   \n==========================================\n- Hits        30157    30069      -88   \n+ Misses      11416    11376      -40   \n- Partials     2024     2025       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...egation/function/FastHLLMVAggregationFunction.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ot/core/plan/MetadataBasedAggregationPlanNode.java | 59.09% <0%> (\u00f8) | :arrow_up: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 96% <100%> (\u00f8) | :arrow_up: |\n| ...om/linkedin/pinot/core/plan/TransformPlanNode.java | 75% <100%> (-0.76%) | :arrow_down: |\n| ...unction/DistinctCountHLLMVAggregationFunction.java | 31.62% <100%> (\u00f8) | :arrow_up: |\n| ...y/aggregation/function/MaxAggregationFunction.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...aggregation/function/MinMVAggregationFunction.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../aggregation/function/AggregationFunctionType.java | 100% <100%> (\u00f8) | |\n| .../function/DistinctCountHLLAggregationFunction.java | 34.51% <100%> (\u00f8) | :arrow_up: |\n| ...aggregation/function/SumMVAggregationFunction.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0370753...19a75d5. Read the comment docs.\n. # Codecov Report\nMerging #2897 into master will increase coverage by 9.79%.\nThe diff coverage is 20%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2897      +/-\n==========================================\n+ Coverage   59.23%   69.03%   +9.79%   \n==========================================\n  Files         912      912            \n  Lines       43598    43599       +1   \n  Branches     5926     5926            \n==========================================\n+ Hits        25827    30099    +4272   \n+ Misses      15863    11481    -4382   \n- Partials     1908     2019     +111\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 40.9% <20%> (+5.48%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 47.81% <0%> (-0.42%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 49.03% <0%> (+0.64%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.7%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <0%> (+0.75%) | :arrow_up: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.68% <0%> (+0.9%) | :arrow_up: |\n| ...din/pinot/core/realtime/stream/StreamMetadata.java | 67.88% <0%> (+0.91%) | :arrow_up: |\n| ... and 276 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e22e1ce...e3c10ad. Read the comment docs.\n. # Codecov Report\nMerging #2898 into master will increase coverage by 23.33%.\nThe diff coverage is 45.22%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2898       +/-\n===========================================\n+ Coverage   45.82%   69.16%   +23.33%   \n===========================================\n  Files         912      912             \n  Lines       43591    43539       -52   \n  Branches     5925     5919        -6   \n===========================================\n+ Hits        19976    30112    +10136   \n+ Misses      21947    11406    -10541   \n- Partials     1668     2021      +353\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ler/api/resources/PinotSegmentRestletResource.java | 29.41% <0%> (+4.27%) | :arrow_up: |\n| ...oller/api/resources/PinotTableRestletResource.java | 39.88% <0%> (+15.88%) | :arrow_up: |\n| ...er/api/resources/PinotInstanceRestletResource.java | 63.26% <100%> (+29.26%) | :arrow_up: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.39% <44.11%> (+24.31%) | :arrow_up: |\n| ...oller/helix/core/PinotResourceManagerResponse.java | 76.92% <75%> (+2.72%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-4.43%) | :arrow_down: |\n| ... and 486 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update edd1383...bf14c47. Read the comment docs.\n. # Codecov Report\nMerging #2899 into master will decrease coverage by 9.94%.\nThe diff coverage is 10%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2899      +/-\n==========================================\n- Coverage   69.15%   59.21%   -9.95%   \n==========================================\n  Files         912      912            \n  Lines       43598    43591       -7   \n  Branches     5926     5925       -1   \n==========================================\n- Hits        30152    25812    -4340   \n- Misses      11429    15870    +4441   \n+ Partials     2017     1909     -108\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 53.6% <0%> (-6.87%) | :arrow_down: |\n| ...er/api/resources/PinotInstanceRestletResource.java | 50% <15.78%> (-18.75%) | :arrow_down: |\n| ...ection/iterator/DoubleSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...inkedin/pinot/minion/metrics/MinionQueryPhase.java | 0% <0%> (-100%) | :arrow_down: |\n| ...pinot/minion/exception/TaskCancelledException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...executor/ConvertToRawIndexTaskExecutorFactory.java | 0% <0%> (-100%) | :arrow_down: |\n| ...t/minion/executor/TaskExecutorFactoryRegistry.java | 0% <0%> (-100%) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 272 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e22e1ce...d6923d0. Read the comment docs.\n. # Codecov Report\nMerging #2906 into master will increase coverage by 9.84%.\nThe diff coverage is 73.17%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2906      +/-\n==========================================\n+ Coverage   59.21%   69.05%   +9.84%   \n==========================================\n  Files         913      914       +1   \n  Lines       43413    43428      +15   \n  Branches     5925     5926       +1   \n==========================================\n+ Hits        25707    29991    +4284   \n+ Misses      15801    11417    -4384   \n- Partials     1905     2020     +115\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...server/starter/helix/HelixInstanceDataManager.java | 81.74% <100%> (+81.74%) | :arrow_up: |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 76.11% <100%> (+76.11%) | :arrow_up: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 64.51% <59.09%> (+64.51%) | :arrow_up: |\n| ...kedin/pinot/server/starter/helix/SegmentLocks.java | 83.33% <83.33%> (\u00f8) | |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 65% <85.71%> (+65%) | :arrow_up: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <0%> (-4.09%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 48.23% <0%> (+0.41%) | :arrow_up: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 49.03% <0%> (+0.64%) | :arrow_up: |\n| ... and 278 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c1dfb76...f22aff8. Read the comment docs.\n. # Codecov Report\nMerging #2909 into master will decrease coverage by 0.07%.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2909      +/-\n==========================================\n- Coverage   69.27%   69.19%   -0.08%   \n==========================================\n  Files         914      914            \n  Lines       43387    43394       +7   \n  Branches     5919     5919            \n==========================================\n- Hits        30056    30028      -28   \n- Misses      11326    11349      +23   \n- Partials     2005     2017      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/common/exception/QueryException.java | 88.4% <100%> (+0.34%) | :arrow_up: |\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 77.86% <33.33%> (-3.49%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d79d80b...255c643. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@ed0ab1e). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2912   +/-\n=========================================\n  Coverage          ?   69.22%         \n=========================================\n  Files             ?      913         \n  Lines             ?    43413         \n  Branches          ?     5925         \n=========================================\n  Hits              ?    30054         \n  Misses            ?    11343         \n  Partials          ?     2016\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed0ab1e...ef8c424. Read the comment docs.\n. # Codecov Report\nMerging #2914 into master will increase coverage by 0.11%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2914      +/-\n==========================================\n+ Coverage   69.09%   69.21%   +0.11%   \n==========================================\n  Files         913      913            \n  Lines       43413    43413            \n  Branches     5925     5925            \n==========================================\n+ Hits        29995    30047      +52   \n+ Misses      11397    11345      -52   \n  Partials     2021     2021\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 42.6% <0%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (\u00f8) | :arrow_up: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.06% <0%> (+0.16%) | :arrow_up: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b491ed5...4e1f504. Read the comment docs.\n. # Codecov Report\nMerging #2921 into master will increase coverage by <.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2921      +/-\n==========================================\n+ Coverage   69.15%   69.16%   +<.01%   \n==========================================\n  Files         914      914            \n  Lines       43417    43420       +3   \n  Branches     5922     5923       +1   \n==========================================\n+ Hits        30027    30032       +5   \n+ Misses      11369    11367       -2   \n  Partials     2021     2021\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 39.41% <0%> (-1.63%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.07% <0%> (-2.12%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4c59879...2b267d9. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b4efa42). Click here to learn what that means.\nThe diff coverage is 50%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2922   +/-\n=========================================\n  Coverage          ?   70.79%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      987         \n  Lines             ?    45486         \n  Branches          ?     6101         \n=========================================\n  Hits              ?    32201         \n  Misses            ?    11179         \n  Partials          ?     2106\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.18% <0%> (\u00f8) | 0 <0> (?) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.9% <50%> (\u00f8) | 0 <0> (?) | |\n| ...inot/broker/queryquota/TableQueryQuotaManager.java | 69.12% <51.21%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b4efa42...375e047. Read the comment docs.\n. # Codecov Report\nMerging #2926 into master will decrease coverage by <.01%.\nThe diff coverage is 87.17%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2926      +/-\n==========================================\n- Coverage   69.24%   69.23%   -0.01%   \n==========================================\n  Files         914      914            \n  Lines       43417    43387      -30   \n  Branches     5920     5919       -1   \n==========================================\n- Hits        30063    30040      -23   \n+ Misses      11342    11337       -5   \n+ Partials     2012     2010       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ery/scheduler/tokenbucket/TokenSchedulerGroup.java | 67.18% <0%> (\u00f8) | :arrow_up: |\n| ...inkedin/pinot/common/query/ServerQueryRequest.java | 94.11% <100%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 84.12% <100%> (\u00f8) | :arrow_up: |\n| .../pinot/server/request/ScheduledRequestHandler.java | 86.2% <100%> (\u00f8) | :arrow_up: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 76.33% <100%> (+0.36%) | :arrow_up: |\n| .../core/query/scheduler/fcfs/FCFSSchedulerGroup.java | 87.5% <66.66%> (+14.77%) | :arrow_up: |\n| ...kedin/pinot/common/query/context/TimerContext.java | 91.66% <90%> (+13.66%) | :arrow_up: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 93de8c5...8006014. Read the comment docs.\n. # Codecov Report\nMerging #2929 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2929      +/-\n==========================================\n- Coverage   69.25%   69.23%   -0.02%   \n==========================================\n  Files         914      914            \n  Lines       43418    43418            \n  Branches     5922     5922            \n==========================================\n- Hits        30068    30061       -7   \n- Misses      11336    11340       +4   \n- Partials     2014     2017       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.07% <0%> (-3.18%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.14% <0%> (-2.86%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.33% <0%> (-1.34%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2361187...44afb54. Read the comment docs.\n. # Codecov Report\nMerging #2931 into master will increase coverage by 0.07%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2931      +/-\n==========================================\n+ Coverage   69.15%   69.23%   +0.07%   \n==========================================\n  Files         914      914            \n  Lines       43418    43417       -1   \n  Branches     5922     5920       -2   \n==========================================\n+ Hits        30027    30059      +32   \n+ Misses      11366    11350      -16   \n+ Partials     2025     2008      -17\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.31% <\u00f8> (\u00f8) | :arrow_up: |\n| .../realtime/segment/FlushThresholdUpdateManager.java | 100% <100%> (+7.4%) | :arrow_up: |\n| .../impl/kafka/KafkaLowLevelStreamProviderConfig.java | 62.85% <100%> (+34.85%) | :arrow_up: |\n| ...segment/SegmentSizeBasedFlushThresholdUpdater.java | 70.31% <72.72%> (+1.97%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-15.16%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-5.09%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 001b076...1596b7a. Read the comment docs.\n. # Codecov Report\nMerging #2933 into master will increase coverage by 9.93%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2933      +/-\n==========================================\n+ Coverage   59.23%   69.16%   +9.93%   \n==========================================\n  Files         914      914            \n  Lines       43394    43414      +20   \n  Branches     5919     5923       +4   \n==========================================\n+ Hits        25704    30029    +4325   \n+ Misses      15794    11375    -4419   \n- Partials     1896     2010     +114\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 78.51% <100%> (+14.39%) | :arrow_up: |\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 95.23% <100%> (+0.23%) | :arrow_up: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 83.87% <79.16%> (+3.87%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.7%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <0%> (+0.75%) | :arrow_up: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.68% <0%> (+0.9%) | :arrow_up: |\n| ...din/pinot/core/realtime/stream/StreamMetadata.java | 67.88% <0%> (+0.91%) | :arrow_up: |\n| ... and 275 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8c6d0f...be5641b. Read the comment docs.\n. # Codecov Report\nMerging #2934 into master will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2934      +/-\n==========================================\n- Coverage   69.26%   69.22%   -0.04%   \n==========================================\n  Files         914      914            \n  Lines       43416    43416            \n  Branches     5922     5922            \n==========================================\n- Hits        30070    30054      -16   \n- Misses      11332    11343      +11   \n- Partials     2014     2019       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.98% <100%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 733c445...4cc0c7a. Read the comment docs.\n. # Codecov Report\nMerging #2935 into master will increase coverage by 0.1%.\nThe diff coverage is 69.23%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2935     +/-\n=========================================\n+ Coverage   69.23%   69.34%   +0.1%   \n=========================================\n  Files         914      914           \n  Lines       43420    43432     +12   \n  Branches     5924     5925      +1   \n=========================================\n+ Hits        30064    30117     +53   \n+ Misses      11339    11315     -24   \n+ Partials     2017     2000     -17\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ontroller/api/resources/ServerTableSizeReader.java | 78.04% <100%> (\u00f8) | :arrow_up: |\n| ...not/controller/validation/StorageQuotaChecker.java | 81.35% <50%> (-3.55%) | :arrow_down: |\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 91.52% <83.33%> (-0.44%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 80.17% <0%> (-1.73%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.14% <0%> (+0.57%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.06% <0%> (+0.97%) | :arrow_up: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b089e64...6cdea19. Read the comment docs.\n. # Codecov Report\nMerging #2937 into master will decrease coverage by 0.05%.\nThe diff coverage is 33%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #2937      +/-\n===========================================\n- Coverage     70.36%   70.3%   -0.06%   \n  Complexity        4       4            \n===========================================\n  Files           950     951       +1   \n  Lines         43962   44056      +94   \n  Branches       5938    5949      +11   \n===========================================\n+ Hits          30934   30974      +40   \n- Misses        10970   11004      +34   \n- Partials       2058    2078      +20\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.22% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/helix/ControllerRequestURLBuilder.java | 72.88% <100%> (+0.95%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...api/resources/PinotTableConfigRestletResource.java | 24.71% <24.71%> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/common/config/TableConfig.java | 80% <83.33%> (+0.24%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...cheduler/resources/PolicyBasedResourceManager.java | 75% <0%> (-18.75%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 66.66% <0%> (-15.56%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c269cc7...64772a4. Read the comment docs.\n. # Codecov Report\nMerging #2938 into master will decrease coverage by 0.03%.\nThe diff coverage is 10%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2938      +/-\n==========================================\n- Coverage   69.24%   69.21%   -0.04%   \n==========================================\n  Files         914      914            \n  Lines       43394    43404      +10   \n  Branches     5919     5922       +3   \n==========================================\n- Hits        30049    30040       -9   \n- Misses      11340    11351      +11   \n- Partials     2005     2013       +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...java/com/linkedin/pinot/common/utils/DataSize.java | 68.75% <10%> (-26.71%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 62.12% <0%> (-4.55%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 71.11% <0%> (-4.45%) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.33% <0%> (-2.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 90.9% <0%> (-1.82%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 88.13% <0%> (-1.7%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 622b68d...4a4a324. Read the comment docs.\n. # Codecov Report\nMerging #2939 into master will decrease coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2939      +/-\n==========================================\n- Coverage    69.3%   69.23%   -0.07%   \n==========================================\n  Files         914      914            \n  Lines       43394    43513     +119   \n  Branches     5919     5934      +15   \n==========================================\n+ Hits        30073    30126      +53   \n- Misses      11312    11373      +61   \n- Partials     2009     2014       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | :arrow_down: |\n| ...java/com/linkedin/pinot/common/utils/DataSize.java | 78.12% <0%> (-17.33%) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.18% <0%> (-5.22%) | :arrow_down: |\n| ...not/controller/validation/StorageQuotaChecker.java | 78.68% <0%> (-4.3%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | :arrow_down: |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | :arrow_down: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 50% <0%> (-2.57%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 69.23% <0%> (-2.06%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-1.82%) | :arrow_down: |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e65d1db...1e7b252. Read the comment docs.\n. # Codecov Report\nMerging #2940 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2940      +/-\n==========================================\n- Coverage   69.24%   69.22%   -0.03%   \n==========================================\n  Files         914      914            \n  Lines       43394    43394            \n  Branches     5919     5919            \n==========================================\n- Hits        30049    30040       -9   \n- Misses      11340    11342       +2   \n- Partials     2005     2012       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 74.06% <0%> (\u00f8) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-5.09%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...y/aggregation/function/AvgAggregationFunction.java | 92% <0%> (-4%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-3.45%) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 622b68d...ee66e6a. Read the comment docs.\n. # Codecov Report\nMerging #2941 into master will increase coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2941      +/-\n=========================================\n+ Coverage   69.21%   69.3%   +0.08%   \n=========================================\n  Files         914     914            \n  Lines       43394   43394            \n  Branches     5919    5919            \n=========================================\n+ Hits        30035   30073      +38   \n+ Misses      11343   11312      -31   \n+ Partials     2016    2009       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/common/metrics/BrokerQueryPhase.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ot/common/utils/retry/AttemptFailureException.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/common/partition/PartitionAssignment.java | 68.96% <\u00f8> (\u00f8) | :arrow_up: |\n| ...ava/com/linkedin/pinot/common/utils/MmapUtils.java | 58.75% <\u00f8> (\u00f8) | :arrow_up: |\n| ...va/com/linkedin/pinot/common/utils/DataSchema.java | 86.02% <\u00f8> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 92.59% <\u00f8> (\u00f8) | :arrow_up: |\n| .../pinot/common/restlet/resources/TableSegments.java | 66.66% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/common/exception/InvalidConfigException.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/config/CombinedConfig.java | 6.89% <\u00f8> (\u00f8) | :arrow_up: |\n| ...edin/pinot/common/metrics/AggregatedHistogram.java | 63.63% <\u00f8> (\u00f8) | :arrow_up: |\n| ... and 303 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 84d6166...7b3b2ce. Read the comment docs.\n. # Codecov Report\nMerging #2943 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2943      +/-\n==========================================\n- Coverage   69.24%   69.23%   -0.01%   \n==========================================\n  Files         914      914            \n  Lines       43394    43394            \n  Branches     5919     5919            \n==========================================\n- Hits        30047    30043       -4   \n- Misses      11334    11335       +1   \n- Partials     2013     2016       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 71.11% <0%> (-4.45%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| .../pinot/core/operator/docidsets/BitmapDocIdSet.java | 93.93% <0%> (-3.04%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 76.33% <0%> (-1.53%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 78.82% <0%> (-1.18%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0be1ec6...605e8f4. Read the comment docs.\n. # Codecov Report\nMerging #2946 into master will increase coverage by 0.01%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2946      +/-\n==========================================\n+ Coverage    69.9%   69.92%   +0.01%   \n==========================================\n  Files         923      924       +1   \n  Lines       43491    43512      +21   \n  Branches     5933     5937       +4   \n==========================================\n+ Hits        30402    30425      +23   \n+ Misses      11049    11045       -4   \n- Partials     2040     2042       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ava/com/linkedin/pinot/common/utils/ZkStarter.java | 75.32% <68.75%> (+3.68%) | :arrow_up: |\n| ...java/com/linkedin/pinot/common/utils/LogUtils.java | 90.9% <90.9%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 66.66% <0%> (-15.56%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-2.59%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5edcec5...9f7acb9. Read the comment docs.\n. # Codecov Report\nMerging #2948 into master will increase coverage by 0.01%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2948      +/-\n==========================================\n+ Coverage   69.24%   69.25%   +0.01%   \n==========================================\n  Files         914      914            \n  Lines       43394    43420      +26   \n  Branches     5919     5924       +5   \n==========================================\n+ Hits        30047    30072      +25   \n- Misses      11334    11336       +2   \n+ Partials     2013     2012       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/validation/StorageQuotaChecker.java | 84.9% <87.5%> (+1.92%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4dbfb4f...c8e848b. Read the comment docs.\n. # Codecov Report\nMerging #2949 into master will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2949      +/-\n==========================================\n- Coverage   69.24%   69.18%   -0.06%   \n==========================================\n  Files         914      914            \n  Lines       43473    43483      +10   \n  Branches     5928     5928            \n==========================================\n- Hits        30101    30085      -16   \n- Misses      11363    11384      +21   \n- Partials     2009     2014       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.18% <0%> (-5.22%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-3.71%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3cb59ff...b502784. Read the comment docs.\n. # Codecov Report\nMerging #2950 into master will decrease coverage by <.01%.\nThe diff coverage is 62.74%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2950      +/-\n==========================================\n- Coverage   69.23%   69.23%   -0.01%   \n==========================================\n  Files         914      914            \n  Lines       43420    43448      +28   \n  Branches     5924     5924            \n==========================================\n+ Hits        30064    30082      +18   \n- Misses      11339    11354      +15   \n+ Partials     2017     2012       -5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...anager/realtime/SegmentBuildTimeLeaseExtender.java | 56.6% <100%> (\u00f8) | :arrow_up: |\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.04% <100%> (+1.49%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.8% <100%> (+0.72%) | :arrow_up: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 50% <44.11%> (-2.57%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b089e64...cd0b78d. Read the comment docs.\n. # Codecov Report\nMerging #2951 into master will increase coverage by 0.02%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2951      +/-\n==========================================\n+ Coverage   69.23%   69.26%   +0.02%   \n==========================================\n  Files         914      914            \n  Lines       43420    43424       +4   \n  Branches     5924     5924            \n==========================================\n+ Hits        30064    30076      +12   \n+ Misses      11339    11338       -1   \n+ Partials     2017     2010       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 52.56% <\u00f8> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 74.31% <100%> (+0.04%) | :arrow_up: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 42.4% <33.33%> (-0.23%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-15.16%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b089e64...29ad81c. Read the comment docs.\n. # Codecov Report\nMerging #2952 into master will increase coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2952      +/-\n==========================================\n+ Coverage   69.23%   69.29%   +0.05%   \n==========================================\n  Files         914      914            \n  Lines       43420    43420            \n  Branches     5924     5924            \n==========================================\n+ Hits        30064    30089      +25   \n+ Misses      11339    11323      -16   \n+ Partials     2017     2008       -9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 79.59% <100%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 78.82% <0%> (-1.18%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | :arrow_up: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b089e64...9218bbe. Read the comment docs.\n. # Codecov Report\nMerging #2953 into master will increase coverage by 23.84%.\nThe diff coverage is 49.48%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2953       +/-\n===========================================\n+ Coverage   45.88%   69.73%   +23.84%   \n===========================================\n  Files         931      934        +3   \n  Lines       43697    43812      +115   \n  Branches     5972     5984       +12   \n===========================================\n+ Hits        20050    30551    +10501   \n+ Misses      21959    11201    -10758   \n- Partials     1688     2060      +372\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <\u00f8> (+19.93%) | :arrow_up: |\n| .../com/linkedin/pinot/filesystem/PinotFSFactory.java | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/utils/TarGzCompressionUtils.java | 79.06% <100%> (+2.32%) | :arrow_up: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 72.81% <100%> (+14%) | :arrow_up: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 42.74% <33.33%> (+5.94%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 57.89% <54.92%> (+1.47%) | :arrow_up: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 75.53% <75%> (+13.31%) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 85.71% <0%> (-5.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | :arrow_down: |\n| ... and 497 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 989ffb7...a7f682b. Read the comment docs.\n. # Codecov Report\nMerging #2955 into master will increase coverage by 23.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2955       +/-\n===========================================\n+ Coverage   45.84%   68.87%   +23.02%   \n===========================================\n  Files         914      914             \n  Lines       43463    43473       +10   \n  Branches     5925     5928        +3   \n===========================================\n+ Hits        19925    29941    +10016   \n+ Misses      21869    11527    -10342   \n- Partials     1669     2005      +336\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 46.19% <0%> (-21.64%) | :arrow_down: |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 88.13% <0%> (-5.09%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-4.43%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ... and 481 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 529571f...1e97289. Read the comment docs.\n. # Codecov Report\nMerging #2956 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2956      +/-\n==========================================\n- Coverage   69.29%   69.24%   -0.05%   \n==========================================\n  Files         914      914            \n  Lines       43432    43431       -1   \n  Branches     5925     5925            \n==========================================\n- Hits        30096    30074      -22   \n- Misses      11326    11343      +17   \n- Partials     2010     2014       +4\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/validation/StorageQuotaChecker.java | 82.75% <\u00f8> (+1.4%) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ebcac4c...adf55fb. Read the comment docs.\n. # Codecov Report\nMerging #2957 into master will increase coverage by 0.03%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2957      +/-\n==========================================\n+ Coverage    69.2%   69.24%   +0.03%   \n==========================================\n  Files         914      914            \n  Lines       43476    43486      +10   \n  Branches     5929     5929            \n==========================================\n+ Hits        30088    30110      +22   \n+ Misses      11373    11359      -14   \n- Partials     2015     2017       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.8% <80%> (+0.93%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 84.44% <0%> (-4.45%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a7c0ca1...f1e7b49. Read the comment docs.\n. # Codecov Report\nMerging #2958 into master will decrease coverage by 0.09%.\nThe diff coverage is 70%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2958     +/-\n=========================================\n- Coverage   69.21%   69.12%   -0.1%   \n=========================================\n  Files         914      914           \n  Lines       43473    43476      +3   \n  Branches     5928     5929      +1   \n=========================================\n- Hits        30091    30052     -39   \n- Misses      11368    11413     +45   \n+ Partials     2014     2011      -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...not/controller/validation/StorageQuotaChecker.java | 78.68% <70%> (-4.08%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 76.02% <0%> (-9.95%) | :arrow_down: |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-5.46%) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.33% <0%> (-5%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-4.77%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e0dac48...c6a3272. Read the comment docs.\n. # Codecov Report\nMerging #2959 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2959      +/-\n==========================================\n+ Coverage   69.22%   69.24%   +0.01%   \n==========================================\n  Files         914      914            \n  Lines       43496    43500       +4   \n  Branches     5929     5929            \n==========================================\n+ Hits        30112    30121       +9   \n+ Misses      11369    11366       -3   \n+ Partials     2015     2013       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <100%> (+0.4%) | :arrow_up: |\n| ...linkedin/pinot/transport/netty/NettyTCPServer.java | 89.65% <100%> (+0.76%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-9.1%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 83.63% <0%> (-9.1%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 39.55% <0%> (-1.5%) | :arrow_down: |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 78.82% <0%> (-1.18%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (\u00f8) | :arrow_up: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 76a34cc...743aa0f. Read the comment docs.\n. # Codecov Report\nMerging #2960 into master will decrease coverage by 0.11%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2960      +/-\n==========================================\n- Coverage   69.22%   69.11%   -0.12%   \n==========================================\n  Files         914      914            \n  Lines       43496    43573      +77   \n  Branches     5929     5942      +13   \n==========================================\n+ Hits        30112    30116       +4   \n- Misses      11369    11442      +73   \n  Partials     2015     2015\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.22% <0%> (-0.38%) | :arrow_down: |\n| ...oller/api/resources/PinotTableRestletResource.java | 40.9% <0%> (-1.7%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 53.69% <0%> (-25.91%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...linkedin/pinot/transport/netty/NettyTCPServer.java | 65% <0%> (-23.89%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 83.63% <0%> (-9.1%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 76a34cc...cc75d96. Read the comment docs.\n. # Codecov Report\nMerging #2965 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2965      +/-\n=========================================\n+ Coverage   69.76%   69.8%   +0.04%   \n=========================================\n  Files         915     915            \n  Lines       43436   43436            \n  Branches     5922    5922            \n=========================================\n+ Hits        30304   30322      +18   \n+ Misses      11113   11098      -15   \n+ Partials     2019    2016       -3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-3.64%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 88.13% <0%> (-1.7%) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-1.06%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-0.69%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 86.54% <0%> (+0.58%) | :arrow_up: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 59.31% <0%> (+1.37%) | :arrow_up: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 96.15% <0%> (+3.84%) | :arrow_up: |\n| ... and 5 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0c9da75...1dfcae8. Read the comment docs.\n. # Codecov Report\nMerging #2966 into master will decrease coverage by 0.13%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2966      +/-\n==========================================\n- Coverage   69.79%   69.66%   -0.14%   \n==========================================\n  Files         915      915            \n  Lines       43436    43460      +24   \n  Branches     5922     5926       +4   \n==========================================\n- Hits        30317    30276      -41   \n- Misses      11099    11161      +62   \n- Partials     2020     2023       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 56.38% <0%> (-5.25%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5068ef9...2d5a814. Read the comment docs.\n. # Codecov Report\nMerging #2967 into master will increase coverage by 0.06%.\nThe diff coverage is 80%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2967      +/-\n==========================================\n+ Coverage   69.18%   69.25%   +0.06%   \n==========================================\n  Files         914      914            \n  Lines       43513    43520       +7   \n  Branches     5934     5935       +1   \n==========================================\n+ Hits        30103    30138      +35   \n+ Misses      11391    11370      -21   \n+ Partials     2019     2012       -7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 95.45% <100%> (+0.21%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.8% <100%> (\u00f8) | :arrow_up: |\n| ...not/controller/validation/StorageQuotaChecker.java | 77.61% <71.42%> (-1.08%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...egation/function/customobject/MinMaxRangePair.java | 68.96% <0%> (-6.9%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d87add7...5e0d2fe. Read the comment docs.\n. # Codecov Report\nMerging #2968 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2968      +/-\n==========================================\n- Coverage   69.21%   69.19%   -0.03%   \n==========================================\n  Files         914      914            \n  Lines       43520    43520            \n  Branches     5935     5935            \n==========================================\n- Hits        30122    30112      -10   \n- Misses      11385    11392       +7   \n- Partials     2013     2016       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 65.18% <0%> (\u00f8) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-7.28%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 77.58% <0%> (-4.32%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 80ddaf4...88bf883. Read the comment docs.\n. # Codecov Report\nMerging #2969 into master will increase coverage by 0.09%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #2969      +/-\n=========================================\n+ Coverage   69.21%   69.3%   +0.09%   \n=========================================\n  Files         914     914            \n  Lines       43520   43525       +5   \n  Branches     5935    5937       +2   \n=========================================\n+ Hits        30122   30165      +43   \n+ Misses      11385   11347      -38   \n  Partials     2013    2013\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../controller/helix/ControllerRequestURLBuilder.java | 71.92% <100%> (+1.02%) | :arrow_up: |\n| ...oller/api/resources/PinotTableRestletResource.java | 45.25% <80%> (+4.34%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-4.77%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 80ddaf4...3d4e6c6. Read the comment docs.\n. # Codecov Report\nMerging #2970 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2970      +/-\n==========================================\n- Coverage   69.27%   69.25%   -0.02%   \n==========================================\n  Files         914      914            \n  Lines       43525    43527       +2   \n  Branches     5937     5937            \n==========================================\n- Hits        30150    30144       -6   \n- Misses      11363    11364       +1   \n- Partials     2012     2019       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-2.08%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-3.45%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1bf0f91...c5f58b7. Read the comment docs.\n. # Codecov Report\nMerging #2972 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2972      +/-\n==========================================\n+ Coverage   69.23%   69.26%   +0.03%   \n==========================================\n  Files         914      914            \n  Lines       43527    43563      +36   \n  Branches     5937     5956      +19   \n==========================================\n+ Hits        30137    30175      +38   \n+ Misses      11375    11368       -7   \n- Partials     2015     2020       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-8.89%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 79.12% <0%> (-4.76%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 93.54% <0%> (-1.91%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.03% <0%> (-1.49%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 000ecc1...af63368. Read the comment docs.\n. # Codecov Report\nMerging #2973 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2973      +/-\n==========================================\n+ Coverage   69.23%   69.26%   +0.02%   \n==========================================\n  Files         914      914            \n  Lines       43527    43529       +2   \n  Branches     5937     5937            \n==========================================\n+ Hits        30137    30150      +13   \n+ Misses      11375    11364      -11   \n  Partials     2015     2015\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 95.65% <100%> (+0.19%) | :arrow_up: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 83.97% <100%> (+0.1%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | :arrow_down: |\n| ...n/pinot/core/io/writer/impl/MmapMemoryManager.java | 80% <0%> (-6.16%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 000ecc1...a563c99. Read the comment docs.\n. # Codecov Report\nMerging #2975 into master will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2975      +/-\n==========================================\n- Coverage   69.27%   69.25%   -0.03%   \n==========================================\n  Files         914      917       +3   \n  Lines       43529    44642    +1113   \n  Branches     5937     6171     +234   \n==========================================\n+ Hits        30155    30915     +760   \n- Misses      11362    11684     +322   \n- Partials     2012     2043      +31\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...l/FixedByteSingleValueMultiColumnReaderWriter.java | 72.64% <0%> (-27.36%) | :arrow_down: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 54.19% <0%> (-26.58%) | :arrow_down: |\n| .../pinot/core/io/writer/impl/OffHeapStringStore.java | 73.03% <0%> (-21.26%) | :arrow_down: |\n| ...ava/com/linkedin/pinot/common/utils/MmapUtils.java | 39.37% <0%> (-19.38%) | :arrow_down: |\n| ...pinot/core/io/writer/impl/DirectMemoryManager.java | 90% <0%> (-10%) | :arrow_down: |\n| ...inot/core/segment/store/FilePerIndexDirectory.java | 79.01% <0%> (-9.33%) | :arrow_down: |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 62.73% <0%> (-8.55%) | :arrow_down: |\n| ...re/io/reader/impl/v1/FixedBitMultiValueReader.java | 92.3% <0%> (-7.7%) | :arrow_down: |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 78.37% <0%> (-7.34%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7115324...dd455d0. Read the comment docs.\n. # Codecov Report\nMerging #2976 into master will increase coverage by 23.5%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2976      +/-\n==========================================\n+ Coverage   45.78%   69.29%   +23.5%   \n==========================================\n  Files         914      914            \n  Lines       43529    43519      -10   \n  Branches     5937     5936       -1   \n==========================================\n+ Hits        19931    30156   +10225   \n+ Misses      21914    11343   -10571   \n- Partials     1684     2020     +336\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...unction/DistinctCountHLLMVAggregationFunction.java | 31.62% <0%> (+31.62%) | :arrow_up: |\n| ...n/function/DistinctCountMVAggregationFunction.java | 32.45% <0%> (+32.45%) | :arrow_up: |\n| ...ion/function/DistinctCountAggregationFunction.java | 36.79% <0%> (+36.79%) | :arrow_up: |\n| .../function/DistinctCountHLLAggregationFunction.java | 35.13% <0%> (+35.13%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 78.18% <0%> (-14.55%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-14.55%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.33% <0%> (+0.33%) | :arrow_up: |\n| ... and 483 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f7d3bb5...8a424e7. Read the comment docs.\n. # Codecov Report\nMerging #2977 into master will increase coverage by 0.47%.\nThe diff coverage is 42.1%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2977      +/-\n==========================================\n+ Coverage   69.27%   69.75%   +0.47%   \n==========================================\n  Files         914      915       +1   \n  Lines       43529    43443      -86   \n  Branches     5937     5927      -10   \n==========================================\n+ Hits        30155    30303     +148   \n+ Misses      11358    11115     -243   \n- Partials     2016     2025       +9\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 45.25% <\u00f8> (\u00f8) | :arrow_up: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.59% <42.1%> (-0.72%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 76.36% <0%> (-7.28%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.97%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...e/io/writer/impl/v1/FixedBitSingleValueWriter.java | 58.82% <0%> (-2.29%) | :arrow_down: |\n| ... and 54 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f7d3bb5...ec50dac. Read the comment docs.\n. # Codecov Report\nMerging #2979 into master will increase coverage by 10.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2979       +/-\n===========================================\n+ Coverage    59.7%   69.76%   +10.05%   \n===========================================\n  Files         915      915             \n  Lines       43438    43436        -2   \n  Branches     5922     5922             \n===========================================\n+ Hits        25936    30301     +4365   \n+ Misses      15597    11114     -4483   \n- Partials     1905     2021      +116\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.8% <\u00f8> (+53.3%) | :arrow_up: |\n| ...minion/executor/BaseSegmentConversionExecutor.java | 72.97% <100%> (+70.34%) | :arrow_up: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.7%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <0%> (+0.75%) | :arrow_up: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.68% <0%> (+0.9%) | :arrow_up: |\n| ...din/pinot/core/realtime/stream/StreamMetadata.java | 67.88% <0%> (+0.91%) | :arrow_up: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.45% <0%> (+1.04%) | :arrow_up: |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 87.5% <0%> (+1.04%) | :arrow_up: |\n| ... and 272 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 980d768...4d2fe1f. Read the comment docs.\n. # Codecov Report\nMerging #2980 into master will decrease coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2980      +/-\n==========================================\n- Coverage   69.79%   69.73%   -0.07%   \n==========================================\n  Files         915      915            \n  Lines       43436    43469      +33   \n  Branches     5922     5932      +10   \n==========================================\n- Hits        30317    30311       -6   \n- Misses      11099    11131      +32   \n- Partials     2020     2027       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <\u00f8> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 56.38% <0%> (-5.25%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 57.14% <0%> (-4.77%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-3.64%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5068ef9...6e1a675. Read the comment docs.\n. # Codecov Report\nMerging #2983 into master will increase coverage by 24.27%.\nThe diff coverage is 84.54%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2983       +/-\n===========================================\n+ Coverage   45.48%   69.76%   +24.27%   \n===========================================\n  Files         915      915             \n  Lines       43469    43423       -46   \n  Branches     5932     5928        -4   \n===========================================\n+ Hits        19773    30294    +10521   \n+ Misses      22029    11097    -10932   \n- Partials     1667     2032      +365\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...eader/impl/FixedByteSingleValueMultiColReader.java | 57.37% <100%> (+11.47%) | :arrow_up: |\n| ...kedin/pinot/core/startree/OffHeapStarTreeNode.java | 85.45% <100%> (\u00f8) | :arrow_up: |\n| .../com/linkedin/pinot/core/startree/hll/HllUtil.java | 59.18% <100%> (+59.18%) | :arrow_up: |\n| ...eader/impl/v1/FixedByteChunkSingleValueReader.java | 65.9% <100%> (+36.36%) | :arrow_up: |\n| .../linkedin/pinot/core/startree/OffHeapStarTree.java | 46.57% <100%> (-0.42%) | :arrow_down: |\n| ...com/linkedin/pinot/core/startree/MetricBuffer.java | 72.46% <71.21%> (+24.46%) | :arrow_up: |\n| .../linkedin/pinot/core/startree/DimensionBuffer.java | 68% <78.57%> (+4%) | :arrow_up: |\n| ...inkedin/pinot/core/startree/StarTreeDataTable.java | 92.68% <88.88%> (-5.15%) | :arrow_down: |\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 85.82% <90.12%> (+9.71%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ... and 491 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 45c4c62...b8053ca. Read the comment docs.\n. # Codecov Report\nMerging #2985 into master will increase coverage by 0.25%.\nThe diff coverage is 89.62%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2985      +/-\n==========================================\n+ Coverage   69.58%   69.84%   +0.25%   \n==========================================\n  Files         915      912       -3   \n  Lines       43423    43341      -82   \n  Branches     5928     5923       -5   \n==========================================\n+ Hits        30218    30270      +52   \n+ Misses      11175    11036     -139   \n- Partials     2030     2035       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 88.75% <\u00f8> (\u00f8) | :arrow_up: |\n| ...inot/core/io/reader/impl/v1/SortedIndexReader.java | 98.11% <0%> (\u00f8) | :arrow_up: |\n| ...re/io/reader/impl/v1/FixedBitMultiValueReader.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../io/reader/impl/v1/BaseChunkSingleValueReader.java | 94.23% <100%> (\u00f8) | :arrow_up: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.45% <100%> (\u00f8) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <100%> (\u00f8) | :arrow_up: |\n| .../writer/impl/v1/VarByteChunkSingleValueWriter.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...t/core/segment/index/readers/DoubleDictionary.java | 92.85% <100%> (\u00f8) | :arrow_up: |\n| ...egation/function/customobject/MinMaxRangePair.java | 68.96% <100%> (\u00f8) | :arrow_up: |\n| ... and 48 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b761292...b426b2b. Read the comment docs.\n. # Codecov Report\nMerging #2986 into master will decrease coverage by 0.1%.\nThe diff coverage is 67.85%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2986      +/-\n============================================\n- Coverage     69.85%   69.75%   -0.11%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43848    43875      +27   \n  Branches       5987     5993       +6   \n============================================\n- Hits          30632    30605      -27   \n- Misses        11165    11206      +41   \n- Partials       2051     2064      +13\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 48.54% <67.85%> (+3.29%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e3363a8...4e62656. Read the comment docs.\n. # Codecov Report\nMerging #2987 into master will increase coverage by 0.4%.\nThe diff coverage is 87.39%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2987     +/-\n===========================================\n+ Coverage     70.29%   70.69%   +0.4%   \n  Complexity        4        4           \n===========================================\n  Files           935      958     +23   \n  Lines         43471    44866   +1395   \n  Branches       5894     6053    +159   \n===========================================\n+ Hits          30556    31718   +1162   \n- Misses        10869    11055    +186   \n- Partials       2046     2093     +47\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 71.69% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 67.35% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../startree/v2/PercentileEstAggregationFunction.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...inkedin/pinot/core/startree/v2/StarTreeLoader.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/core/startree/v2/TreeNode.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...rtree/v2/PercentileTDigestAggregationFunction.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 83.22% <100%> (+2.11%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...indexsegment/immutable/ImmutableSegmentLoader.java | 90.24% <100%> (+1.05%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/indexsegment/immutable/ImmutableSegmentImpl.java | 74.44% <100%> (+0.02%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...din/pinot/core/startree/v2/StarTreeV2Constant.java | 33.33% <33.33%> (\u00f8) | 0 <0> (?) | |\n| ... and 78 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3147d2a...f9de49f. Read the comment docs.\n. # Codecov Report\nMerging #2988 into master will increase coverage by 10.17%.\nThe diff coverage is 92.22%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #2988       +/-\n===========================================\n+ Coverage   59.76%   69.94%   +10.17%   \n===========================================\n  Files         912      911        -1   \n  Lines       43341    43260       -81   \n  Branches     5923     5915        -8   \n===========================================\n+ Hits        25902    30257     +4355   \n+ Misses      15522    10962     -4560   \n- Partials     1917     2041      +124\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inot/core/plan/AggregationFunctionInitializer.java | 100% <\u00f8> (+28.57%) | :arrow_up: |\n| ...ation/function/AggregationFunctionVisitorBase.java | 50% <\u00f8> (+2%) | :arrow_up: |\n| ...ot/core/plan/MetadataBasedAggregationPlanNode.java | 55% <0%> (-4.1%) | :arrow_down: |\n| ...gregation/function/AggregationFunctionFactory.java | 83.33% <0%> (+6.58%) | :arrow_up: |\n| ...y/aggregation/function/SumAggregationFunction.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...y/aggregation/function/MaxAggregationFunction.java | 100% <100%> (+7.89%) | :arrow_up: |\n| ...aggregation/function/CountAggregationFunction.java | 100% <100%> (+4.16%) | :arrow_up: |\n| .../function/DistinctCountHLLAggregationFunction.java | 34.54% <100%> (-0.59%) | :arrow_down: |\n| ...aggregation/function/MaxMVAggregationFunction.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...gregation/function/FastHLLAggregationFunction.java | 61.29% <100%> (-0.62%) | :arrow_down: |\n| ... and 302 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6be9309...a45aa29. Read the comment docs.\n. # Codecov Report\nMerging #2989 into master will decrease coverage by 0.09%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2989     +/-\n=========================================\n- Coverage   69.99%   69.89%   -0.1%   \n=========================================\n  Files         911      913      +2   \n  Lines       43260    43288     +28   \n  Branches     5915     5917      +2   \n=========================================\n- Hits        30281    30258     -23   \n- Misses      10952    10995     +43   \n- Partials     2027     2035      +8\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...e/indexsegment/immutable/ImmutableSegmentImpl.java | 64.28% <0%> (-1.17%) | :arrow_down: |\n| ...din/pinot/core/startree/v2/StarTreeV2Metadata.java | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/AggregationFunctionColumnPair.java | 0% <0%> (\u00f8) | |\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 66.86% <0%> (-0.2%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 86.66% <0%> (-8.89%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0002137...ee9fa7e. Read the comment docs.\n. # Codecov Report\nMerging #2990 into master will decrease coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2990      +/-\n==========================================\n- Coverage   69.93%   69.89%   -0.05%   \n==========================================\n  Files         913      913            \n  Lines       43288    43289       +1   \n  Branches     5917     5918       +1   \n==========================================\n- Hits        30274    30257      -17   \n- Misses      10984    10999      +15   \n- Partials     2030     2033       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 91.59% <100%> (+0.07%) | :arrow_up: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 688ba11...03bbf94. Read the comment docs.\n. # Codecov Report\nMerging #2991 into master will decrease coverage by 24.09%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2991      +/-\n==========================================\n- Coverage   69.78%   45.68%   -24.1%   \n==========================================\n  Files         934      915      -19   \n  Lines       43813    43412     -401   \n  Branches     5985     5933      -52   \n==========================================\n- Hits        30573    19833   -10740   \n- Misses      11180    21916   +10736   \n+ Partials     2060     1663     -397\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 0% <0%> (\u00f8) | |\n| ...aggregation/function/SumMVAggregationFunction.java | 0% <0%> (-100%) | :arrow_down: |\n| ...n/function/PercentileEstMVAggregationFunction.java | 0% <0%> (-100%) | :arrow_down: |\n| ...t/core/query/scheduler/OutOfCapacityException.java | 0% <0%> (-100%) | :arrow_down: |\n| ...linkedin/pinot/common/utils/request/QueryTree.java | 0% <0%> (-100%) | :arrow_down: |\n| ...edin/pinot/broker/queryquota/QueryQuotaConfig.java | 0% <0%> (-100%) | :arrow_down: |\n| ...aggregation/function/MinMVAggregationFunction.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ore/segment/memory/PinotNonNativeOrderLBuffer.java | 0% <0%> (-100%) | :arrow_down: |\n| ...ransformer/timeunit/CustomTimeUnitTransformer.java | 0% <0%> (-100%) | :arrow_down: |\n| .../common/utils/retry/AttemptsExceededException.java | 0% <0%> (-100%) | :arrow_down: |\n| ... and 540 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a12cc47...9087f23. Read the comment docs.\n. # Codecov Report\nMerging #2992 into master will decrease coverage by 0.01%.\nThe diff coverage is 78.57%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2992      +/-\n==========================================\n- Coverage   69.93%   69.92%   -0.02%   \n==========================================\n  Files         913      913            \n  Lines       43288    43288            \n  Branches     5917     5917            \n==========================================\n- Hits        30274    30267       -7   \n- Misses      10984    10990       +6   \n- Partials     2030     2031       +1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...core/segment/index/loader/SegmentPreProcessor.java | 78.78% <100%> (-0.63%) | :arrow_down: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 91.6% <100%> (\u00f8) | :arrow_up: |\n| .../columnminmaxvalue/ColumnMinMaxValueGenerator.java | 73.43% <100%> (\u00f8) | :arrow_up: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 81.59% <50%> (-0.15%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 80.98% <77.77%> (-0.58%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-10.91%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 688ba11...437fe8a. Read the comment docs.\n. # Codecov Report\nMerging #2993 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2993      +/-\n==========================================\n- Coverage   69.93%   69.92%   -0.02%   \n==========================================\n  Files         913      913            \n  Lines       43288    43288            \n  Branches     5917     5917            \n==========================================\n- Hits        30274    30269       -5   \n- Misses      10984    10990       +6   \n+ Partials     2030     2029       -1\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 88.67% <0%> (-9.44%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 688ba11...1d0048f. Read the comment docs.\n. # Codecov Report\nMerging #2995 into master will decrease coverage by 0.01%.\nThe diff coverage is 75.51%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2995      +/-\n============================================\n- Coverage     70.26%   70.25%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           935      936       +1   \n  Lines         43479    43507      +28   \n  Branches       5898     5899       +1   \n============================================\n+ Hits          30551    30566      +15   \n- Misses        10879    10890      +11   \n- Partials       2049     2051       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.31% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 95.45% <100%> (+0.21%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 86.36% <100%> (+0.64%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.64% <100%> (+0.65%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 65.26% <100%> (+0.74%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 57.49% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../common/segment/fetcher/PinotFSSegmentFetcher.java | 42.85% <42.85%> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/filesystem/PinotFSFactory.java | 66.66% <63.63%> (+66.66%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ommon/segment/fetcher/LocalFileSegmentFetcher.java | 0% <0%> (-57.15%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 76ee958...880aa95. Read the comment docs.\n. # Codecov Report\nMerging #2996 into master will decrease coverage by 0.06%.\nThe diff coverage is 95.74%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #2996      +/-\n==========================================\n- Coverage   69.92%   69.85%   -0.07%   \n==========================================\n  Files         913      913            \n  Lines       43288    43290       +2   \n  Branches     5917     5917            \n==========================================\n- Hits        30269    30242      -27   \n- Misses      10990    11012      +22   \n- Partials     2029     2036       +7\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <95.74%> (+0.13%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-10.91%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-3.45%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | :arrow_down: |\n| ...aggregation/function/AggregationFunctionUtils.java | 84.37% <0%> (-3.13%) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cd98557...800ef48. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b0c20b7). Click here to learn what that means.\nThe diff coverage is 51.07%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #2997   +/-\n=========================================\n  Coverage          ?   69.79%         \n=========================================\n  Files             ?      914         \n  Lines             ?    43377         \n  Branches          ?     5931         \n=========================================\n  Hits              ?    30273         \n  Misses            ?    11066         \n  Partials          ?     2038\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/function/PercentileEstMVAggregationFunction.java | 100% <100%> (\u00f8) | |\n| ...tion/function/PercentileMVAggregationFunction.java | 100% <100%> (\u00f8) | |\n| ...n/function/DistinctCountMVAggregationFunction.java | 26.66% <21.42%> (\u00f8) | |\n| ...unction/DistinctCountHLLMVAggregationFunction.java | 25.92% <21.42%> (\u00f8) | |\n| .../function/DistinctCountHLLAggregationFunction.java | 30.88% <27.9%> (\u00f8) | |\n| ...ion/function/PercentileEstAggregationFunction.java | 50% <38.59%> (\u00f8) | |\n| ...gregation/function/FastHLLAggregationFunction.java | 66.12% <51.85%> (\u00f8) | |\n| ...function/PercentileTDigestAggregationFunction.java | 64.47% <58.82%> (\u00f8) | |\n| ...gregation/function/AggregationFunctionFactory.java | 84.44% <66.66%> (\u00f8) | |\n| ...nction/PercentileTDigestMVAggregationFunction.java | 66.66% <66.66%> (\u00f8) | |\n| ... and 3 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b0c20b7...bf5f980. Read the comment docs.\n. # Codecov Report\nMerging #2998 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #2998      +/-\n============================================\n+ Coverage     70.46%   70.48%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           993      993            \n  Lines         45638    45638            \n  Branches       6111     6111            \n============================================\n+ Hits          32157    32166       +9   \n+ Misses        11355    11347       -8   \n+ Partials       2126     2125       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.9% <0%> (-3.23%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/data/manager/BaseTableDataManager.java | 92.59% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 79.38% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 870c5d7...a78d4ed. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b0c20b7). Click here to learn what that means.\nThe diff coverage is 13.33%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3003   +/-\n=========================================\n  Coverage          ?   69.91%         \n=========================================\n  Files             ?      915         \n  Lines             ?    43297         \n  Branches          ?     5918         \n=========================================\n  Hits              ?    30272         \n  Misses            ?    10994         \n  Partials          ?     2031\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/realtime/stream/TransientConsumerException.java | 0% <0%> (\u00f8) | |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 61.77% <0%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.59% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 78.76% <0%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.8% <0%> (\u00f8) | |\n| ...re/realtime/stream/PermanentConsumerException.java | 100% <100%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b0c20b7...603992f. Read the comment docs.\n. # Codecov Report\nMerging #3005 into master will increase coverage by <.01%.\nThe diff coverage is 74.54%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #3005      +/-\n==========================================\n+ Coverage   69.66%   69.67%   +<.01%   \n==========================================\n  Files         916      917       +1   \n  Lines       43383    43389       +6   \n  Branches     5931     5931            \n==========================================\n+ Hits        30223    30230       +7   \n+ Misses      11127    11123       -4   \n- Partials     2033     2036       +3\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 44.85% <71.42%> (-16.92%) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 74.68% <74.68%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-7.28%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.93% <0%> (-1.38%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.06% <0%> (-0.64%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 28b5898...21b5169. Read the comment docs.\n. # Codecov Report\nMerging #3008 into master will increase coverage by 10.1%.\nThe diff coverage is 74.44%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #3008      +/-\n==========================================\n+ Coverage   59.74%   69.84%   +10.1%   \n==========================================\n  Files         917      917            \n  Lines       43389    43356      -33   \n  Branches     5931     5920      -11   \n==========================================\n+ Hits        25923    30284    +4361   \n+ Misses      15545    11038    -4507   \n- Partials     1921     2034     +113\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...aggregation/function/CountAggregationFunction.java | 100% <\u00f8> (+4.16%) | :arrow_up: |\n| ...kedin/pinot/core/query/reduce/EqualComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...pinot/core/query/reduce/GreaterThanComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...ot/core/plan/MetadataBasedAggregationPlanNode.java | 55% <0%> (\u00f8) | :arrow_up: |\n| ...inot/core/query/reduce/GreaterEqualComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/core/query/reduce/InAndNotInComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...din/pinot/core/query/reduce/BetweenComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...n/pinot/core/query/reduce/LessEqualComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/reduce/LessThanComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...in/pinot/core/query/reduce/NotEqualComparison.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ... and 322 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3606ace...39cfc55. Read the comment docs.\n. # Codecov Report\nMerging #3009 into master will increase coverage by 10.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3009       +/-\n===========================================\n+ Coverage   59.74%   69.77%   +10.02%   \n===========================================\n  Files         917      917             \n  Lines       43389    43391        +2   \n  Branches     5931     5931             \n===========================================\n+ Hits        25923    30275     +4352   \n+ Misses      15545    11080     -4465   \n- Partials     1921     2036      +115\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 91.66% <100%> (+5.55%) | :arrow_up: |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 92.06% <100%> (+1.58%) | :arrow_up: |\n| ...java/com/linkedin/pinot/common/utils/HashUtil.java | 5.71% <100%> (+5.71%) | :arrow_up: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-4.77%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <0%> (+0.34%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <0%> (+0.75%) | :arrow_up: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | :arrow_up: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.68% <0%> (+0.9%) | :arrow_up: |\n| ... and 276 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3606ace...91800f5. Read the comment docs.\n. # Codecov Report\nMerging #3010 into master will decrease coverage by 0.07%.\nThe diff coverage is 60.78%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3010      +/-\n===========================================\n- Coverage     70.37%   70.3%   -0.08%   \n  Complexity        4       4            \n===========================================\n  Files           934     934            \n  Lines         43504   43527      +23   \n  Branches       5907    5910       +3   \n===========================================\n- Hits          30617   30601      -16   \n- Misses        10827   10856      +29   \n- Partials       2060    2070      +10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 83.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 83.05% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/operator/filter/ScanBasedFilterOperator.java | 84% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 81.96% <0%> (-2.78%) | 0 <0> (\u00f8) | |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 89.18% <0%> (-2.48%) | 0 <0> (\u00f8) | |\n| .../filter/predicate/InPredicateEvaluatorFactory.java | 90.62% <0%> (-1.44%) | 0 <0> (\u00f8) | |\n| ...predicate/RegexpLikePredicateEvaluatorFactory.java | 30.76% <0%> (-1.24%) | 0 <0> (\u00f8) | |\n| ...predicate/BaseRawValueBasedPredicateEvaluator.java | 84.21% <0%> (-3.07%) | 0 <0> (\u00f8) | |\n| ...ter/predicate/EqualsPredicateEvaluatorFactory.java | 89.13% <0%> (-1.99%) | 0 <0> (\u00f8) | |\n| ...edicate/BaseDictionaryBasedPredicateEvaluator.java | 52.38% <0%> (-2.62%) | 0 <0> (\u00f8) | |\n| ... and 42 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 584c478...1e28101. Read the comment docs.\n. # Codecov Report\nMerging #3011 into master will increase coverage by 10.01%.\nThe diff coverage is 25%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3011       +/-\n===========================================\n+ Coverage   59.74%   69.75%   +10.01%   \n===========================================\n  Files         917      917             \n  Lines       43389    43397        +8   \n  Branches     5931     5934        +3   \n===========================================\n+ Hits        25923    30273     +4350   \n+ Misses      15545    11079     -4466   \n- Partials     1921     2045      +124\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 44.38% <25%> (+1.92%) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-4.77%) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (\u00f8) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <0%> (+0.34%) | :arrow_up: |\n| ...regation/function/customobject/QuantileDigest.java | 48.23% <0%> (+0.41%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <0%> (+0.75%) | :arrow_up: |\n| ... and 278 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3606ace...5480b81. Read the comment docs.\n. # Codecov Report\nMerging #3012 into master will increase coverage by 24%.\nThe diff coverage is 75.59%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #3012      +/-\n==========================================\n+ Coverage   45.94%   69.95%     +24%   \n==========================================\n  Files         917      923       +6   \n  Lines       43361    43598     +237   \n  Branches     5920     5967      +47   \n==========================================\n+ Hits        19924    30499   +10575   \n+ Misses      21772    11071   -10701   \n- Partials     1665     2028     +363\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/minion/rollup/aggregate/MaxValueAggregator.java | 0% <0%> (\u00f8) | |\n| ...inion/rollup/aggregate/ValueAggregatorFactory.java | 44.44% <44.44%> (\u00f8) | |\n| ...re/minion/rollup/aggregate/SumValueAggregator.java | 54.54% <54.54%> (\u00f8) | |\n| ...m/linkedin/pinot/core/minion/rollup/MergeType.java | 81.81% <81.81%> (\u00f8) | |\n| ...not/core/minion/rollup/RollupRecordAggregator.java | 90.9% <90.9%> (\u00f8) | |\n| ...ore/minion/rollup/MergeRollupSegmentConverter.java | 91.93% <91.93%> (\u00f8) | |\n| ...x/loader/defaultcolumn/V1DefaultColumnHandler.java | 90% <0%> (-10%) | :arrow_down: |\n| ...x/loader/defaultcolumn/V3DefaultColumnHandler.java | 14.81% <0%> (-5.19%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ... and 488 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bd06a8e...19d43ff. Read the comment docs.\n. # Codecov Report\nMerging #3014 into master will decrease coverage by 0.2%.\nThe diff coverage is 10.78%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #3014      +/-\n==========================================\n- Coverage   69.87%   69.67%   -0.21%   \n==========================================\n  Files         917      918       +1   \n  Lines       43356    43446      +90   \n  Branches     5920     5941      +21   \n==========================================\n- Hits        30294    30269      -25   \n- Misses      11027    11140     +113   \n- Partials     2035     2037       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...re/realtime/stream/PinotStreamConsumerFactory.java | 75% <\u00f8> (\u00f8) | :arrow_up: |\n| .../impl/kafka/KafkaSimpleStreamMetadataProvider.java | 0% <0%> (\u00f8) | |\n| ...ore/realtime/impl/kafka/SimpleConsumerWrapper.java | 45.79% <100%> (+0.93%) | :arrow_up: |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 50% <36.36%> (-50%) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 74.68% <83.33%> (\u00f8) | :arrow_up: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-12.13%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d960c0c...ae9c056. Read the comment docs.\n. # Codecov Report\nMerging #3017 into master will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #3017      +/-\n=========================================\n+ Coverage   69.87%   69.9%   +0.02%   \n=========================================\n  Files         917     917            \n  Lines       43356   43359       +3   \n  Branches     5920    5920            \n=========================================\n+ Hits        30294   30308      +14   \n+ Misses      11027   11026       -1   \n+ Partials     2035    2025      -10\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/startree/v2/AggregationFunctionColumnPair.java | 0% <0%> (\u00f8) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-1.82%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5faa4d4...b76ddea. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@a7fa16d). Click here to learn what that means.\nThe diff coverage is 43.47%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3024   +/-\n=========================================\n  Coverage          ?   69.71%         \n=========================================\n  Files             ?      917         \n  Lines             ?    43358         \n  Branches          ?     5921         \n=========================================\n  Hits              ?    30227         \n  Misses            ?    11100         \n  Partials          ?     2031\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...x/loader/defaultcolumn/V3DefaultColumnHandler.java | 22.22% <0%> (\u00f8) | |\n| ...n/pinot/core/segment/index/loader/LoaderUtils.java | 87.09% <100%> (\u00f8) | |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 91.83% <100%> (\u00f8) | |\n| ...x/loader/defaultcolumn/V1DefaultColumnHandler.java | 77.77% <33.33%> (\u00f8) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a7fa16d...c142513. Read the comment docs.\n. # Codecov Report\nMerging #3025 into master will increase coverage by 24.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3025       +/-\n===========================================\n+ Coverage   45.85%   69.92%   +24.06%   \n===========================================\n  Files         923      923             \n  Lines       43485    43491        +6   \n  Branches     5931     5933        +2   \n===========================================\n+ Hits        19939    30410    +10471   \n+ Misses      21875    11043    -10832   \n- Partials     1671     2038      +367\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...ore/startree/v2/AggregationFunctionColumnPair.java | 77.27% <100%> (+77.27%) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-9.1%) | :arrow_down: |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (+0.33%) | :arrow_up: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 56.8% <0%> (+0.38%) | :arrow_up: |\n| ... and 487 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bcd6f2f...289cb34. Read the comment docs.\n. # Codecov Report\nMerging #3028 into master will increase coverage by 23.92%.\nThe diff coverage is 33.92%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3028       +/-\n===========================================\n+ Coverage   45.88%   69.81%   +23.92%   \n===========================================\n  Files         931      933        +2   \n  Lines       43697    43762       +65   \n  Branches     5972     5977        +5   \n===========================================\n+ Hits        20050    30552    +10502   \n+ Misses      21959    11154    -10805   \n- Partials     1688     2056      +368\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...om/linkedin/pinot/core/common/MinionConstants.java | 0% <\u00f8> (\u00f8) | :arrow_up: |\n| ...pinot/minion/executor/SegmentConversionResult.java | 90.47% <\u00f8> (+14.28%) | :arrow_up: |\n| ...ecutor/BaseMultipleSegmentsConversionExecutor.java | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/minion/executor/PurgeTaskExecutor.java | 72% <100%> (+72%) | :arrow_up: |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| .../executor/BaseSingleSegmentConversionExecutor.java | 91.11% <100%> (\u00f8) | |\n| .../java/com/linkedin/pinot/minion/MinionContext.java | 90.9% <33.33%> (+22.48%) | :arrow_up: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 85.71% <50%> (-5.67%) | :arrow_down: |\n| .../pinot/minion/executor/SegmentConversionUtils.java | 52.94% <52.94%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ... and 495 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 989ffb7...8f223e0. Read the comment docs.\n. # Codecov Report\nMerging #3029 into master will decrease coverage by 0.01%.\nThe diff coverage is 75.42%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster   #3029      +/-\n=========================================\n- Coverage   69.92%   69.9%   -0.02%   \n=========================================\n  Files         924     931       +7   \n  Lines       43512   43697     +185   \n  Branches     5937    5972      +35   \n=========================================\n+ Hits        30427   30548     +121   \n- Misses      11047   11099      +52   \n- Partials     2038    2050      +12\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...kedin/pinot/common/utils/request/RequestUtils.java | 94.87% <\u00f8> (+7.8%) | :arrow_up: |\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 67.35% <\u00f8> (+0.49%) | :arrow_up: |\n| .../query/aggregation/DefaultAggregationExecutor.java | 100% <\u00f8> (\u00f8) | :arrow_up: |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.12% <100%> (\u00f8) | |\n| ...pinot/core/operator/query/AggregationOperator.java | 95% <100%> (+0.88%) | :arrow_up: |\n| ...din/pinot/core/operator/blocks/TransformBlock.java | 69.23% <100%> (+2.56%) | :arrow_up: |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...aggregation/function/AggregationFunctionUtils.java | 89.74% <100%> (+0.85%) | :arrow_up: |\n| ...ore/operator/query/AggregationGroupByOperator.java | 95.65% <100%> (+0.65%) | :arrow_up: |\n| ...ore/startree/v2/AggregationFunctionColumnPair.java | 78.26% <100%> (+0.98%) | :arrow_up: |\n| ... and 43 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 661310f...bd26900. Read the comment docs.\n. # Codecov Report\nMerging #3030 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #3030      +/-\n==========================================\n- Coverage   69.92%   69.91%   -0.02%   \n==========================================\n  Files         924      924            \n  Lines       43512    43512            \n  Branches     5937     5937            \n==========================================\n- Hits        30427    30420       -7   \n- Misses      11047    11049       +2   \n- Partials     2038     2043       +5\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 76.11% <0%> (\u00f8) | :arrow_up: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | :arrow_down: |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | :arrow_down: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 85.38% <0%> (-1.17%) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 661310f...c8f9d42. Read the comment docs.\n. # Codecov Report\nMerging #3032 into master will increase coverage by 24.08%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3032       +/-\n===========================================\n+ Coverage   45.88%   69.97%   +24.08%   \n===========================================\n  Files         931      931             \n  Lines       43697    43690        -7   \n  Branches     5972     5970        -2   \n===========================================\n+ Hits        20050    30571    +10521   \n+ Misses      21959    11072    -10887   \n- Partials     1688     2047      +359\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 96.66% <100%> (+15%) | :arrow_up: |\n| ...din/pinot/pql/parsers/pql2/ast/GroupByAstNode.java | 100% <100%> (\u00f8) | :arrow_up: |\n| ...inot/pql/parsers/pql2/ast/FunctionCallAstNode.java | 48.48% <100%> (+0.98%) | :arrow_up: |\n| ...din/pinot/core/operator/blocks/TransformBlock.java | 69.23% <100%> (\u00f8) | :arrow_up: |\n| ...mon/request/transform/TransformExpressionTree.java | 80.32% <71.42%> (+0.69%) | :arrow_up: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (\u00f8) | :arrow_up: |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (\u00f8) | :arrow_up: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (+0.33%) | :arrow_up: |\n| ... and 490 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 989ffb7...d9babe1. Read the comment docs.\n. # Codecov Report\nMerging #3033 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #3033      +/-\n==========================================\n+ Coverage   69.81%   69.82%   +0.01%   \n==========================================\n  Files         933      933            \n  Lines       43762    43762            \n  Branches     5977     5977            \n==========================================\n+ Hits        30554    30559       +5   \n+ Misses      11158    11151       -7   \n- Partials     2050     2052       +2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | :arrow_down: |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.12% <0%> (-1.83%) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | :arrow_down: |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | :arrow_up: |\n| ...in/pinot/transport/common/AsyncResponseFuture.java | 82.97% <0%> (+1.41%) | :arrow_up: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 05c4050...34df67c. Read the comment docs.\n. # Codecov Report\nMerging #3034 into master will increase coverage by 24.05%.\nThe diff coverage is 79.48%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3034       +/-\n===========================================\n+ Coverage   45.88%   69.93%   +24.05%   \n===========================================\n  Files         931      931             \n  Lines       43697    43732       +35   \n  Branches     5972     5979        +7   \n===========================================\n+ Hits        20050    30584    +10534   \n+ Misses      21959    11092    -10867   \n- Partials     1688     2056      +368\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (\u00f8) | :arrow_up: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 37.31% <\u00f8> (+1.49%) | :arrow_up: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.76% <100%> (+9.81%) | :arrow_up: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 56.99% <100%> (+13.73%) | :arrow_up: |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 77.77% <61.53%> (+17.77%) | :arrow_up: |\n| ...m/linkedin/pinot/core/minion/SegmentConverter.java | 71.08% <80%> (+71.08%) | :arrow_up: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.48% <90.9%> (+20.29%) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | :arrow_down: |\n| ... and 491 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 989ffb7...9189ae4. Read the comment docs.\n. # Codecov Report\nMerging #3035 into master will increase coverage by 0.06%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@            Coverage Diff             @@\nmaster    #3035      +/-\n==========================================\n+ Coverage   69.81%   69.87%   +0.06%   \n==========================================\n  Files         933      933            \n  Lines       43762    43763       +1   \n  Branches     5977     5978       +1   \n==========================================\n+ Hits        30554    30581      +27   \n+ Misses      11158    11134      -24   \n+ Partials     2050     2048       -2\n```\n| Impacted Files | Coverage \u0394 | |\n|---|---|---|\n| ...m/linkedin/pinot/core/minion/SegmentConverter.java | 70.12% <71.42%> (+0.39%) | :arrow_up: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-7.28%) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | :arrow_down: |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | :arrow_down: |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.12% <0%> (-1.83%) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.03% <0%> (-1.49%) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 48.23% <0%> (+0.41%) | :arrow_up: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 05c4050...fcafe26. Read the comment docs.\n. # Codecov Report\nMerging #3037 into master will decrease coverage by 0.08%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3037      +/-\n============================================\n- Coverage     69.85%   69.77%   -0.09%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43848    43848            \n  Branches       5987     5987            \n============================================\n- Hits          30632    30593      -39   \n- Misses        11165    11195      +30   \n- Partials       2051     2060       +9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 65.21% <0%> (-4.35%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e3363a8...d496672. Read the comment docs.\n. # Codecov Report\nMerging #3039 into master will increase coverage by 0.01%.\nThe diff coverage is 42.85%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3039      +/-\n============================================\n+ Coverage     69.75%   69.76%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43868    43874       +6   \n  Branches       5991     5993       +2   \n============================================\n+ Hits          30601    30610       +9   \n+ Misses        11210    11199      -11   \n- Partials       2057     2065       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 56.18% <0%> (-0.2%) | 0 <0> (\u00f8) | |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 50.5% <60%> (+0.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 89.89% <0%> (-2.03%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 621f8bd...022c032. Read the comment docs.\n. # Codecov Report\nMerging #3041 into master will increase coverage by 0.01%.\nThe diff coverage is 58.33%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3041      +/-\n============================================\n+ Coverage     69.75%   69.77%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           935      936       +1   \n  Lines         43868    43875       +7   \n  Branches       5991     5991            \n============================================\n+ Hits          30601    30614      +13   \n+ Misses        11210    11203       -7   \n- Partials       2057     2058       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...din/pinot/server/api/resources/TablesResource.java | 77.19% <100%> (-0.4%) | 0 <0> (\u00f8) | |\n| .../pinot/server/api/resources/TableSizeResource.java | 84.61% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/server/api/resources/ResourceUtils.java | 37.5% <37.5%> (\u00f8) | 0 <0> (?) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-2.65%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 65.47% <0%> (-2.39%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-2.23%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 621f8bd...cff16fd. Read the comment docs.\n. # Codecov Report\nMerging #3042 into master will increase coverage by 0.59%.\nThe diff coverage is 57.14%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3042      +/-\n============================================\n+ Coverage     69.78%   70.38%   +0.59%   \n  Complexity        4        4            \n============================================\n  Files           936      934       -2   \n  Lines         43881    43504     -377   \n  Branches       5992     5907      -85   \n============================================\n- Hits          30624    30619       -5   \n+ Misses        11201    10828     -373   \n- Partials       2056     2057       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/pinot/controller/util/AutoAddInvertedIndex.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/broker/requesthandler/BrokerRequestHandler.java | 84.89% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/client/GroupByResultSet.java | 25.53% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/linkedin/pinot/client/AggregationResultSet.java | 25.8% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <100%> (-1%) | 0 <0> (\u00f8) | |\n| .../com/linkedin/pinot/client/SelectionResultSet.java | 24.32% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 205dc66...bf5aaaa. Read the comment docs.\n. # Codecov Report\nMerging #3043 into master will decrease coverage by 0.05%.\nThe diff coverage is 16.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3043      +/-\n============================================\n- Coverage     69.82%   69.76%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43874    43864      -10   \n  Branches       5993     5992       -1   \n============================================\n- Hits          30634    30602      -32   \n- Misses        11184    11203      +19   \n- Partials       2056     2059       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ava/com/linkedin/pinot/common/utils/ZkStarter.java | 71.64% <16.66%> (-3.69%) | 0 <0> (\u00f8) | |\n| ...java/com/linkedin/pinot/common/utils/LogUtils.java | 0% <0%> (-90.91%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ed07ddf...52ae55f. Read the comment docs.\n. # Codecov Report\nMerging #3044 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3044      +/-\n============================================\n- Coverage     69.79%   69.75%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43864    43864            \n  Branches       5992     5992            \n============================================\n- Hits          30617    30599      -18   \n- Misses        11185    11206      +21   \n+ Partials       2062     2059       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-1.7%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9d56c0b...9515386. Read the comment docs.\n. # Codecov Report\nMerging #3045 into master will decrease coverage by 0.11%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3045      +/-\n============================================\n- Coverage     69.79%   69.68%   -0.12%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43864    43874      +10   \n  Branches       5992     5992            \n============================================\n- Hits          30617    30575      -42   \n- Misses        11185    11247      +62   \n+ Partials       2062     2052      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 64.82% <100%> (+2.6%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 92.57% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 76.6% <0%> (-9.95%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.33% <0%> (-5%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9d56c0b...4176250. Read the comment docs.\n. # Codecov Report\nMerging #3046 into master will decrease coverage by 0.08%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3046      +/-\n============================================\n- Coverage     69.75%   69.67%   -0.09%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43864    43865       +1   \n  Branches       5992     5992            \n============================================\n- Hits          30597    30561      -36   \n- Misses        11208    11240      +32   \n- Partials       2059     2064       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.62% <0%> (-0.37%) | 0 <0> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0915545...50a3573. Read the comment docs.\n. # Codecov Report\nMerging #3047 into master will decrease coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3047      +/-\n============================================\n- Coverage     69.79%   69.76%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files           936      936            \n  Lines         43882    43881       -1   \n  Branches       5992     5992            \n============================================\n- Hits          30627    30612      -15   \n- Misses        11200    11209       +9   \n- Partials       2055     2060       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6a4edf3...3140aec. Read the comment docs.\n. # Codecov Report\nMerging #3048 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3048      +/-\n============================================\n+ Coverage     69.75%   69.77%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           935      936       +1   \n  Lines         43875    43881       +6   \n  Branches       5992     5992            \n============================================\n+ Hits          30606    30618      +12   \n+ Misses        11207    11205       -2   \n+ Partials       2062     2058       -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...mpl/fwd/MultiValueUnsortedForwardIndexCreator.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 87.58% <100%> (+0.08%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ...din/pinot/server/api/resources/TablesResource.java | 77.19% <0%> (-0.4%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 84029c1...aafc5db. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@6fadce7). Click here to learn what that means.\nThe diff coverage is 95.45%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3049   +/-\n=========================================\n  Coverage          ?   70.21%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      935         \n  Lines             ?    43479         \n  Branches          ?     5898         \n=========================================\n  Hits              ?    30529         \n  Misses            ?    10894         \n  Partials          ?     2056\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/broker/queryquota/TableQueryQuotaManager.java | 88.77% <95.45%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6fadce7...a191e0e. Read the comment docs.\n. # Codecov Report\nMerging #3050 into master will increase coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3050      +/-\n============================================\n+ Coverage     70.34%   70.36%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           934      934            \n  Lines         43504    43504            \n  Branches       5907     5907            \n============================================\n+ Hits          30601    30611      +10   \n+ Misses        10840    10833       -7   \n+ Partials       2063     2060       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...not/controller/api/resources/PqlQueryResource.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...y/aggregation/function/AvgAggregationFunction.java | 91.83% <0%> (-4.09%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 45.73% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aa3a4c9...5d188bb. Read the comment docs.\n. # Codecov Report\nMerging #3051 into master will increase coverage by 0.04%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3051      +/-\n============================================\n+ Coverage     70.37%   70.42%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files           934      934            \n  Lines         43504    43496       -8   \n  Branches       5907     5907            \n============================================\n+ Hits          30617    30630      +13   \n+ Misses        10827    10808      -19   \n+ Partials       2060     2058       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 60.94% <\u00f8> (-0.69%) | 0 <0> (\u00f8) | |\n| ...edin/pinot/controller/api/resources/TableSize.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/linkedin/pinot/common/http/MultiGetRequest.java | 94.44% <100%> (-0.56%) | 0 <0> (\u00f8) | |\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 91.52% <100%> (-0.08%) | 0 <0> (\u00f8) | |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 83.87% <100%> (-0.11%) | 0 <0> (\u00f8) | |\n| ...ontroller/api/resources/ServerTableSizeReader.java | 77.5% <100%> (-0.55%) | 0 <0> (\u00f8) | |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 57.89% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 584c478...3d4e432. Read the comment docs.\n. # Codecov Report\nMerging #3055 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3055      +/-\n============================================\n- Coverage     70.38%   70.38%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files           934      934            \n  Lines         43497    43496       -1   \n  Branches       5907     5907            \n============================================\n- Hits          30617    30615       -2   \n- Misses        10821    10825       +4   \n+ Partials       2059     2056       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.3% <\u00f8> (+0.36%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4489b3f...b8e2dcd. Read the comment docs.\n. # Codecov Report\nMerging #3057 into master will decrease coverage by 0.05%.\nThe diff coverage is 86.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3057      +/-\n============================================\n- Coverage     70.36%   70.31%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           934      935       +1   \n  Lines         43497    43439      -58   \n  Branches       5907     5894      -13   \n============================================\n- Hits          30606    30542      -64   \n- Misses        10835    10847      +12   \n+ Partials       2056     2050       -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.6% <100%> (-0.59%) | 0 <0> (\u00f8) | |\n| .../core/segment/creator/ColumnIndexCreationInfo.java | 93.1% <100%> (+2.85%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 91.89% <100%> (+0.05%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...erter/stats/RealtimeNoDictionaryColStatistics.java | 69.23% <33.33%> (-19.79%) | 0 <0> (\u00f8) | |\n| .../loader/defaultcolumn/DefaultColumnStatistics.java | 80% <80%> (\u00f8) | 0 <0> (?) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 48.1% <0%> (-17.73%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4d7e004...bca6796. Read the comment docs.\n. # Codecov Report\nMerging #3059 into master will increase coverage by 24.03%.\nThe diff coverage is 75%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3059       +/-\n=============================================\n+ Coverage     46.31%   70.34%   +24.03%   \n- Complexity        0        4        +4   \n=============================================\n  Files           934      934             \n  Lines         43496    43498        +2   \n  Branches       5907     5907             \n=============================================\n+ Hits          20145    30599    +10454   \n+ Misses        21663    10841    -10822   \n- Partials       1688     2058      +370\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (+100%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 78.04% <100%> (+78.04%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 31.42% <100%> (+31.42%) | 4 <0> (+4) | :arrow_up: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ... and 494 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8e2ca1b...7b4a2ca. Read the comment docs.\n. # Codecov Report\nMerging #3060 into master will increase coverage by 24.03%.\nThe diff coverage is 60%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3060       +/-\n=============================================\n+ Coverage     46.31%   70.35%   +24.03%   \n- Complexity        0        4        +4   \n=============================================\n  Files           934      934             \n  Lines         43496    43501        +5   \n  Branches       5907     5907             \n=============================================\n+ Hits          20145    30604    +10459   \n+ Misses        21663    10837    -10826   \n- Partials       1688     2060      +372\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 57.49% <0%> (-0.06%) | 0 <0> (\u00f8) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 41.66% <100%> (+5.78%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/controller/validation/StorageQuotaChecker.java | 78.26% <71.42%> (+46.91%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-11.12%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.59%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ... and 496 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8e2ca1b...02a54ca. Read the comment docs.\n. # Codecov Report\nMerging #3061 into master will decrease coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3061      +/-\n============================================\n- Coverage     70.44%   70.36%   -0.08%   \n  Complexity        4        4            \n============================================\n  Files           934      934            \n  Lines         43498    43503       +5   \n  Branches       5907     5907            \n============================================\n- Hits          30642    30612      -30   \n- Misses        10803    10836      +33   \n- Partials       2053     2055       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 65c9779...89de87c. Read the comment docs.\n. # Codecov Report\nMerging #3063 into master will decrease coverage by 0.09%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3063     +/-\n===========================================\n- Coverage     70.33%   70.23%   -0.1%   \n  Complexity        4        4           \n===========================================\n  Files           934      935      +1   \n  Lines         43503    43464     -39   \n  Branches       5907     5894     -13   \n===========================================\n- Hits          30598    30528     -70   \n- Misses        10843    10880     +37   \n+ Partials       2062     2056      -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/common/segment/fetcher/HdfsSegmentFetcher.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...erter/stats/RealtimeNoDictionaryColStatistics.java | 69.23% <0%> (-19.79%) | 0% <0%> (\u00f8) | |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 48.1% <0%> (-17.73%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5c8ed66...becd019. Read the comment docs.\n. # Codecov Report\nMerging #3064 into master will increase coverage by 0.06%.\nThe diff coverage is 93.75%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3064      +/-\n===========================================\n+ Coverage     70.33%   70.4%   +0.06%   \n  Complexity        4       4            \n===========================================\n  Files           934     934            \n  Lines         43503   43511       +8   \n  Branches       5907    5907            \n===========================================\n+ Hits          30598   30634      +36   \n+ Misses        10843   10822      -21   \n+ Partials       2062    2055       -7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...edin/pinot/controller/api/resources/TableSize.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 91.59% <100%> (+0.07%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.98% <100%> (+0.67%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 83.97% <100%> (+0.1%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 57.49% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ontroller/api/resources/ServerTableSizeReader.java | 78.04% <100%> (+0.54%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/linkedin/pinot/common/http/MultiGetRequest.java | 95% <100%> (+0.55%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e470b94...2c54f0a. Read the comment docs.\n. # Codecov Report\nMerging #3065 into master will increase coverage by 0.02%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3065      +/-\n============================================\n+ Coverage     70.26%   70.29%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43445    43444       -1   \n  Branches       5894     5894            \n============================================\n+ Hits          30525    30537      +12   \n+ Misses        10862    10859       -3   \n+ Partials       2058     2048      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ontroller/api/resources/ServerTableSizeReader.java | 76.92% <33.33%> (-0.58%) | 0 <0> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.86% <0%> (-2.07%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-1.59%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e673a9f...735f15c. Read the comment docs.\n. # Codecov Report\nMerging #3067 into master will decrease coverage by 0.07%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3067      +/-\n============================================\n- Coverage     70.29%   70.21%   -0.08%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43471    43476       +5   \n  Branches       5894     5896       +2   \n============================================\n- Hits          30556    30528      -28   \n- Misses        10869    10896      +27   \n- Partials       2046     2052       +6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 83.87% <\u00f8> (-0.11%) | 0 <0> (\u00f8) | |\n| ...edin/pinot/controller/api/resources/TableSize.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 57.49% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/ControllerGauge.java | 95.83% <100%> (+0.18%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/controller/validation/StorageQuotaChecker.java | 74.32% <25%> (-3.94%) | 0 <0> (\u00f8) | |\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 94.11% <93.75%> (+2.52%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 82.22% <0%> (-11.12%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3147d2a...9d8af77. Read the comment docs.\n. # Codecov Report\nMerging #3068 into master will increase coverage by 0.05%.\nThe diff coverage is 56.09%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3068      +/-\n============================================\n+ Coverage     70.29%   70.34%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files           935      936       +1   \n  Lines         43471    43511      +40   \n  Branches       5894     5901       +7   \n============================================\n+ Hits          30556    30606      +50   \n+ Misses        10869    10845      -24   \n- Partials       2046     2060      +14\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...not/controller/validation/StorageQuotaChecker.java | 79.71% <100%> (+1.44%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ontroller/api/resources/TableUploadQuotaCheck.java | 55% <55%> (\u00f8) | 0 <0> (?) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/broker/queryquota/HitCounter.java | 92.3% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 65.21% <0%> (-4.35%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3147d2a...cafa123. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@3f15e28). Click here to learn what that means.\nThe diff coverage is 88.09%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3073   +/-\n=========================================\n  Coverage          ?   70.23%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      935         \n  Lines             ?    43466         \n  Branches          ?     5896         \n=========================================\n  Hits              ?    30528         \n  Misses            ?    10886         \n  Partials          ?     2052\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 75.33% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...re/realtime/impl/dictionary/MutableDictionary.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/core/startree/hll/HllUtil.java | 57.44% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 87.5% <100%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/core/io/util/FixedByteValueReaderWriter.java | 95.23% <100%> (\u00f8) | 0 <0> (?) | |\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 85.8% <100%> (\u00f8) | 0 <0> (?) | |\n| ...eader/impl/FixedByteSingleValueMultiColReader.java | 57.37% <100%> (\u00f8) | 0 <0> (?) | |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 88.71% <100%> (\u00f8) | 0 <0> (?) | |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 91.89% <100%> (\u00f8) | 0 <0> (?) | |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 85.71% <100%> (\u00f8) | 0 <0> (?) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3f15e28...be4ad6c. Read the comment docs.\n. # Codecov Report\nMerging #3076 into master will increase coverage by 10.12%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3076       +/-\n============================================\n+ Coverage     60.08%   70.2%   +10.12%   \n  Complexity        4       4             \n============================================\n  Files           935     935             \n  Lines         43466   43466             \n  Branches       5896    5896             \n============================================\n+ Hits          26115   30517     +4402   \n+ Misses        15413   10891     -4522   \n- Partials       1938    2058      +120\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.6% <100%> (+10.05%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.69% <0%> (+0.63%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <0%> (+0.75%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.6% <0%> (+0.82%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.68% <0%> (+0.9%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 277 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d7ad06...e99fe0b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@6fadce7). Click here to learn what that means.\nThe diff coverage is 87.6%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3077   +/-\n=========================================\n  Coverage          ?   70.79%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      958         \n  Lines             ?    44864         \n  Branches          ?     6052         \n=========================================\n  Hits              ?    31763         \n  Misses            ?    11014         \n  Partials          ?     2087\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 71.69% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 83.22% <100%> (\u00f8) | 0 <0> (?) | |\n| ...rtree/v2/PercentileTDigestAggregationFunction.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...inkedin/pinot/core/startree/v2/StarTreeLoader.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/core/startree/v2/TreeNode.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...indexsegment/immutable/ImmutableSegmentLoader.java | 90.24% <100%> (\u00f8) | 0 <0> (?) | |\n| ...e/indexsegment/immutable/ImmutableSegmentImpl.java | 74.44% <100%> (\u00f8) | 0 <0> (?) | |\n| .../startree/v2/PercentileEstAggregationFunction.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...din/pinot/core/startree/v2/StarTreeV2Constant.java | 33.33% <33.33%> (\u00f8) | 0 <0> (?) | |\n| ...inkedin/pinot/core/startree/v2/StarTreeV2Impl.java | 44% <44%> (\u00f8) | 0 <0> (?) | |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6fadce7...448471f. Read the comment docs.\n. # Codecov Report\nMerging #3078 into master will increase coverage by 0.02%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3078      +/-\n============================================\n+ Coverage     70.22%   70.25%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           935      935            \n  Lines         43466    43467       +1   \n  Branches       5896     5896            \n============================================\n+ Hits          30525    30537      +12   \n+ Misses        10893    10879      -14   \n- Partials       2048     2051       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 36.76% <0%> (-0.55%) | 0 <0> (\u00f8) | |\n| ...ot/controller/helix/core/util/HelixSetupUtils.java | 64.28% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 76.19% <100%> (+2.64%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.12% <0%> (-0.61%) | 0% <0%> (\u00f8) | |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 25cf812...8ab5269. Read the comment docs.\n. # Codecov Report\nMerging #3079 into master will decrease coverage by 0.02%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3079      +/-\n===========================================\n- Coverage     70.22%   70.2%   -0.03%   \n  Complexity        4       4            \n===========================================\n  Files           935     935            \n  Lines         43466   43469       +3   \n  Branches       5896    5896            \n===========================================\n- Hits          30525   30516       -9   \n- Misses        10893   10900       +7   \n- Partials       2048    2053       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...function/PercentileTDigestAggregationFunction.java | 63.29% <50%> (-1.19%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 84.21% <0%> (-2.34%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.03% <0%> (-1.49%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 25cf812...5d6e26d. Read the comment docs.\n. # Codecov Report\nMerging #3088 into master will increase coverage by 10.17%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3088       +/-\n=============================================\n+ Coverage     60.08%   70.26%   +10.17%   \n  Complexity        4        4             \n=============================================\n  Files           935      935             \n  Lines         43479    43481        +2   \n  Branches       5898     5899        +1   \n=============================================\n+ Hits          26124    30551     +4427   \n+ Misses        15419    10881     -4538   \n- Partials       1936     2049      +113\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ing/HelixExternalViewBasedTimeBoundaryService.java | 61.66% <33.33%> (+6.49%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 47.81% <0%> (-0.42%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.72% <0%> (+0.75%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.6% <0%> (+0.82%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 282 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5fa5c6e...2d271d9. Read the comment docs.\n. # Codecov Report\nMerging #3091 into master will increase coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3091      +/-\n============================================\n+ Coverage     70.29%   70.31%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           951      951            \n  Lines         43963    43963            \n  Branches       5938     5938            \n============================================\n+ Hits          30903    30911       +8   \n+ Misses        10993    10990       -3   \n+ Partials       2067     2062       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ller/api/resources/PinotTenantRestletResource.java | 29.13% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/api/resources/PinotTableInstances.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.59%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 85.38% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2a2315a...1f2bb01. Read the comment docs.\n. # Codecov Report\nMerging #3094 into master will decrease coverage by 0.02%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3094      +/-\n============================================\n- Coverage     70.26%   70.23%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files           936      936            \n  Lines         43509    43520      +11   \n  Branches       5900     5901       +1   \n============================================\n- Hits          30570    30566       -4   \n- Misses        10890    10898       +8   \n- Partials       2049     2056       +7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 23.91% <0%> (-7.52%) | 4 <1> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.03% <0%> (-1.49%) | 0% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d471b1...ed2bee0. Read the comment docs.\n. # Codecov Report\nMerging #3095 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3095      +/-\n============================================\n+ Coverage     70.21%   70.25%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files           936      936            \n  Lines         43520    43520            \n  Branches       5901     5901            \n============================================\n+ Hits          30558    30573      +15   \n+ Misses        10910    10891      -19   \n- Partials       2052     2056       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | 0% <0%> (\u00f8) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 66.66% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 199cf88...ed09af5. Read the comment docs.\n. # Codecov Report\nMerging #3096 into master will increase coverage by 0.07%.\nThe diff coverage is 54.54%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3096      +/-\n============================================\n+ Coverage     70.24%   70.31%   +0.07%   \n  Complexity        4        4            \n============================================\n  Files           936      936            \n  Lines         43520    43531      +11   \n  Branches       5901     5901            \n============================================\n+ Hits          30572    30611      +39   \n+ Misses        10896    10877      -19   \n+ Partials       2052     2043       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 23.4% <0%> (-0.51%) | 4 <0> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.56% <60%> (-0.08%) | 0 <0> (\u00f8) | |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 84.5% <60%> (-1.86%) | 0 <0> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-5.48%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.12% <0%> (-0.61%) | 0% <0%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a3859a4...1e0837b. Read the comment docs.\n. # Codecov Report\nMerging #3102 into master will decrease coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3102      +/-\n============================================\n- Coverage     70.36%   70.32%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files           962      962            \n  Lines         44312    44314       +2   \n  Branches       5958     5959       +1   \n============================================\n- Hits          31180    31164      -16   \n- Misses        11058    11074      +16   \n- Partials       2074     2076       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 91.17% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/rebalance/RebalanceSegmentStrategyFactory.java | 64.7% <0%> (-8.63%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 80.23% <0%> (-4.66%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | 0% <0%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2def3a0...cb76a27. Read the comment docs.\n. # Codecov Report\nMerging #3105 into master will decrease coverage by 0.14%.\nThe diff coverage is 83.75%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3105      +/-\n===========================================\n- Coverage     70.25%   70.1%   -0.15%   \n  Complexity        4       4            \n===========================================\n  Files           936     936            \n  Lines         43531   43493      -38   \n  Branches       5901    5901            \n===========================================\n- Hits          30581   30491      -90   \n- Misses        10898   10950      +52   \n  Partials       2052    2052\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...t/common/response/broker/BrokerResponseNative.java | 85.91% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/transport/conf/TransportClientConf.java | 68.42% <\u00f8> (-21.06%) | 0 <0> (\u00f8) | |\n| .../broker/broker/helix/DefaultHelixBrokerConfig.java | 94.11% <\u00f8> (-0.62%) | 0 <0> (\u00f8) | |\n| ...pinot/broker/broker/BrokerAdminApiApplication.java | 94.44% <100%> (+0.15%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 73.14% <100%> (-0.49%) | 0 <0> (\u00f8) | |\n| ...din/pinot/transport/config/RoutingTableConfig.java | 20% <100%> (-66.67%) | 0 <0> (\u00f8) | |\n| ...n/pinot/broker/api/resources/PinotBrokerDebug.java | 55% <50%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.05% <79.05%> (\u00f8) | 0 <0> (?) | |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 88.05% <88.05%> (\u00f8) | 0 <0> (?) | |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 90.74% <90.62%> (+3.24%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 26b0bda...70ae44d. Read the comment docs.\n. # Codecov Report\nMerging #3110 into master will increase coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3110      +/-\n============================================\n+ Coverage     70.08%   70.14%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files           936      936            \n  Lines         43493    43493            \n  Branches       5901     5901            \n============================================\n+ Hits          30483    30506      +23   \n+ Misses        10958    10936      -22   \n+ Partials       2052     2051       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 76.36% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.86% <0%> (-0.77%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.33% <0%> (-0.67%) | 0% <0%> (\u00f8) | |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 74.05% <0%> (-0.64%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 47.81% <0%> (-0.42%) | 0% <0%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.14% <0%> (+0.57%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.73% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 655a9c5...0d323e6. Read the comment docs.\n. # Codecov Report\nMerging #3111 into master will decrease coverage by <.01%.\nThe diff coverage is 60.78%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3111      +/-\n============================================\n- Coverage     70.08%   70.08%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files           936      936            \n  Lines         43493    43523      +30   \n  Branches       5901     5904       +3   \n============================================\n+ Hits          30483    30501      +18   \n- Misses        10958    10968      +10   \n- Partials       2052     2054       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 83.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 83.05% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/operator/filter/ScanBasedFilterOperator.java | 84% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edicate/BaseDictionaryBasedPredicateEvaluator.java | 52.38% <0%> (-2.62%) | 0 <0> (\u00f8) | |\n| ...erter/stats/RealtimeNoDictionaryColStatistics.java | 69.23% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 81.96% <0%> (-2.78%) | 0 <0> (\u00f8) | |\n| ...predicate/RegexpLikePredicateEvaluatorFactory.java | 30.76% <0%> (-1.24%) | 0 <0> (\u00f8) | |\n| ...ter/predicate/EqualsPredicateEvaluatorFactory.java | 89.13% <0%> (-1.99%) | 0 <0> (\u00f8) | |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 89.18% <0%> (-2.48%) | 0 <0> (\u00f8) | |\n| ...predicate/BaseRawValueBasedPredicateEvaluator.java | 84.21% <0%> (-3.07%) | 0 <0> (\u00f8) | |\n| ... and 34 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 655a9c5...2bbffde. Read the comment docs.\n. # Codecov Report\nMerging #3112 into master will decrease coverage by 10.17%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3112       +/-\n============================================\n- Coverage     70.07%   59.9%   -10.18%   \n  Complexity        4       4             \n============================================\n  Files           936     936             \n  Lines         43523   43527        +4   \n  Branches       5904    5904             \n============================================\n- Hits          30500   26074     -4426   \n- Misses        10969   15517     +4548   \n+ Partials       2054    1936      -118\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 22.91% <0%> (-0.49%) | 4 <0> (\u00f8) | |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 81.39% <100%> (+0.9%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...nion/events/DefaultMinionEventObserverFactory.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ection/iterator/DoubleSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 282 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3f01503...e6e363c. Read the comment docs.\n. # Codecov Report\nMerging #3113 into master will increase coverage by 0.01%.\nThe diff coverage is 73.52%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3113      +/-\n============================================\n+ Coverage     70.06%   70.08%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           936      936            \n  Lines         43527    43544      +17   \n  Branches       5904     5905       +1   \n============================================\n+ Hits          30499    30519      +20   \n+ Misses        10973    10971       -2   \n+ Partials       2055     2054       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/api/resources/FileUploadPathProvider.java | 73.17% <73.52%> (-14.33%) | 0 <0> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.05% <0%> (-2.1%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 38.97% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.15% <0%> (-0.61%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 47.81% <0%> (-0.42%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10f8242...058ec51. Read the comment docs.\n. # Codecov Report\nMerging #3115 into master will increase coverage by 0.09%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3115      +/-\n============================================\n+ Coverage     70.06%   70.16%   +0.09%   \n  Complexity        4        4            \n============================================\n  Files           936      938       +2   \n  Lines         43527    43541      +14   \n  Branches       5904     5904            \n============================================\n+ Hits          30499    30551      +52   \n+ Misses        10973    10940      -33   \n+ Partials       2055     2050       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/common/segment/crypt/DefaultPinotCrypter.java | 33.33% <33.33%> (\u00f8) | 0 <0> (?) | |\n| ...inot/common/segment/crypt/PinotCrypterFactory.java | 81.81% <81.81%> (\u00f8) | 0 <0> (?) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | 0% <0%> (\u00f8) | |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.05% <0%> (-2.1%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.15% <0%> (-0.61%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 10f8242...fc7bd4c. Read the comment docs.\n. # Codecov Report\nMerging #3118 into master will decrease coverage by 0.06%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3118      +/-\n============================================\n- Coverage     70.12%   70.06%   -0.07%   \n  Complexity        4        4            \n============================================\n  Files           934      938       +4   \n  Lines         43477    43580     +103   \n  Branches       5894     5905      +11   \n============================================\n+ Hits          30488    30533      +45   \n- Misses        10949    10992      +43   \n- Partials       2040     2055      +15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/common/segment/crypt/DefaultPinotCrypter.java | 33.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.82% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../common/segment/fetcher/PinotFSSegmentFetcher.java | 27.27% <0%> (-15.59%) | 0 <0> (\u00f8) | |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 65.97% <100%> (+0.71%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 41.17% <25%> (-0.5%) | 0 <0> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.7% <66.66%> (+0.13%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 83.11% <66.66%> (-1.4%) | 0 <0> (\u00f8) | |\n| ...pinot/core/operator/filter/BaseFilterOperator.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ... and 68 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update de08c3c...63b02a4. Read the comment docs.\n. # Codecov Report\nMerging #3121 into master will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3121      +/-\n============================================\n- Coverage     70.05%   70.03%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files           938      938            \n  Lines         43558    43558            \n  Branches       5905     5905            \n============================================\n- Hits          30516    30504      -12   \n- Misses        10983    10997      +14   \n+ Partials       2059     2057       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/pinot/core/query/request/ServerQueryRequest.java | 94.11% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...ore/query/scheduler/fcfs/BoundedFCFSScheduler.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/query/scheduler/QuerySchedulerFactory.java | 26.92% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../scheduler/resources/UnboundedResourceManager.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 82.05% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/query/request/context/TimerContext.java | 91.66% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...cheduler/resources/PolicyBasedResourceManager.java | 75% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4bdefd2...43bf653. Read the comment docs.\n. # Codecov Report\nMerging #3123 into master will increase coverage by <.01%.\nThe diff coverage is 88%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3123      +/-\n============================================\n+ Coverage     70.11%   70.12%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files           938      938            \n  Lines         43558    43545      -13   \n  Branches       5905     5904       -1   \n============================================\n- Hits          30540    30534       -6   \n+ Misses        10972    10961      -11   \n- Partials       2046     2050       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...din/pinot/server/api/resources/TablesResource.java | 75.47% <100%> (-1.73%) | 0 <0> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 85% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 81.3% <66.66%> (-0.3%) | 0 <0> (\u00f8) | |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 78.26% <88.88%> (+0.39%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 65.26% <90%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3e6e649...2bc441b. Read the comment docs.\n. # Codecov Report\nMerging #3124 into master will increase coverage by 0.04%.\nThe diff coverage is 90.34%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3124      +/-\n===========================================\n+ Coverage     70.06%   70.1%   +0.04%   \n  Complexity        4       4            \n===========================================\n  Files           938     938            \n  Lines         43536   43539       +3   \n  Branches       5903    5897       -6   \n===========================================\n+ Hits          30502   30523      +21   \n+ Misses        10980   10971       -9   \n+ Partials       2054    2045       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/query/scheduler/MultiLevelPriorityQueue.java | 84.53% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 78.83% <100%> (+1.79%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/query/pruner/SegmentPrunerService.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...not/core/query/pruner/DataSchemaSegmentPruner.java | 80% <100%> (+8.88%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...cheduler/resources/PolicyBasedResourceManager.java | 75% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/common/utils/request/RequestUtils.java | 96% <100%> (+1.12%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/query/scheduler/TableBasedGroupMapper.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/query/request/context/TimerContext.java | 91.66% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/query/scheduler/fcfs/FCFSQueryScheduler.java | 85.71% <50%> (-1.79%) | 0 <0> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 80.55% <66.66%> (+2.47%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f4fb97...db5edfa. Read the comment docs.\n. # Codecov Report\nMerging #3125 into master will decrease coverage by 0.08%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3125      +/-\n============================================\n- Coverage     70.13%   70.05%   -0.09%   \n  Complexity        4        4            \n============================================\n  Files           938      938            \n  Lines         43545    43536       -9   \n  Branches       5904     5903       -1   \n============================================\n- Hits          30542    30498      -44   \n- Misses        10954    10986      +32   \n- Partials       2049     2052       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/pinot/core/operator/CombineGroupByOperator.java | 74.35% <100%> (-2.66%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 72.56% <0%> (-6.2%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-3.71%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2a49a65...43a0b6c. Read the comment docs.\n. # Codecov Report\nMerging #3126 into master will increase coverage by 0.06%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3126      +/-\n============================================\n+ Coverage      70.1%   70.16%   +0.06%   \n  Complexity        4        4            \n============================================\n  Files           938      934       -4   \n  Lines         43539    43484      -55   \n  Branches       5897     5896       -1   \n============================================\n- Hits          30521    30510      -11   \n+ Misses        10978    10936      -42   \n+ Partials       2040     2038       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 90.41% <\u00f8> (+1.22%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edicate/BaseDictionaryBasedPredicateEvaluator.java | 55% <\u00f8> (+2.61%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ter/predicate/EqualsPredicateEvaluatorFactory.java | 91.11% <\u00f8> (+1.98%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...predicate/RegexpLikePredicateEvaluatorFactory.java | 32% <\u00f8> (+1.23%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...predicate/BaseRawValueBasedPredicateEvaluator.java | 87.27% <\u00f8> (+3.06%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/core/operator/filter/EmptyFilterOperator.java | 85.71% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <\u00f8> (+2.77%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...rator/filter/predicate/BasePredicateEvaluator.java | 50% <0%> (-50%) | 0 <0> (\u00f8) | |\n| ...lter/predicate/RangePredicateEvaluatorFactory.java | 90.72% <0%> (+0.53%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/segment/index/data/source/ColumnDataSource.java | 95.12% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 42 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0696d87...45fb48a. Read the comment docs.\n. # Codecov Report\nMerging #3128 into master will increase coverage by 0.01%.\nThe diff coverage is 88%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3128      +/-\n============================================\n+ Coverage     70.12%   70.13%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           938      934       -4   \n  Lines         43532    43486      -46   \n  Branches       5897     5897            \n============================================\n- Hits          30525    30499      -26   \n+ Misses        10960    10946      -14   \n+ Partials       2047     2041       -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/core/operator/filter/EmptyFilterOperator.java | 85.71% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...nkedin/pinot/core/operator/blocks/FilterBlock.java | 57.14% <100%> (\u00f8) | 0 <0> (?) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.15% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 85.29% <100%> (+1.96%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 86% <100%> (+2.94%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/operator/filter/BaseFilterOperator.java | 100% <100%> (+50%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.63% <100%> (-0.3%) | 0 <0> (\u00f8) | |\n| ...t/core/operator/filter/MatchAllFilterOperator.java | 66.66% <100%> (\u00f8) | 0 <0> (?) | |\n| ...n/pinot/core/operator/blocks/EmptyFilterBlock.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/com/linkedin/pinot/core/plan/FilterPlanNode.java | 90.47% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5f9b74e...4a86076. Read the comment docs.\n. # Codecov Report\nMerging #3129 into master will decrease coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3129      +/-\n============================================\n- Coverage      70.1%   70.08%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           938      938            \n  Lines         43539    43532       -7   \n  Branches       5897     5897            \n============================================\n- Hits          30521    30508      -13   \n+ Misses        10978    10976       -2   \n- Partials       2040     2048       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...edicate/BaseDictionaryBasedPredicateEvaluator.java | 55% <\u00f8> (+2.61%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lter/predicate/NotInPredicateEvaluatorFactory.java | 90.41% <\u00f8> (+1.22%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ter/predicate/EqualsPredicateEvaluatorFactory.java | 91.11% <\u00f8> (+1.98%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...predicate/BaseRawValueBasedPredicateEvaluator.java | 87.27% <\u00f8> (+3.06%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...predicate/RegexpLikePredicateEvaluatorFactory.java | 32% <\u00f8> (+1.23%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <\u00f8> (+2.77%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...rator/filter/predicate/BasePredicateEvaluator.java | 50% <0%> (-50%) | 0 <0> (\u00f8) | |\n| ...lter/predicate/RangePredicateEvaluatorFactory.java | 90.13% <0%> (-0.07%) | 0 <0> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-18.19%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0696d87...7f1f5c2. Read the comment docs.\n. # Codecov Report\nMerging #3130 into master will decrease coverage by 0.02%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3130      +/-\n============================================\n- Coverage      70.1%   70.07%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files           938      938            \n  Lines         43539    43539            \n  Branches       5897     5897            \n============================================\n- Hits          30521    30511      -10   \n- Misses        10978    10986       +8   \n- Partials       2040     2042       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/com/linkedin/pinot/core/plan/FilterPlanNode.java | 90.47% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/startree/plan/StarTreeTransformPlanNode.java | 75% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/core/startree/plan/StarTreeFilterPlanNode.java | 61.53% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/startree/plan/StarTreeProjectionPlanNode.java | 60% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.15% <100%> (-1.82%) | 0 <0> (\u00f8) | |\n| ...t/core/startree/plan/StarTreeDocIdSetPlanNode.java | 50% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/core/operator/filter/FilterOperatorUtils.java | 75.75% <33.33%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-15.16%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0696d87...e113c12. Read the comment docs.\n. # Codecov Report\nMerging #3137 into master will decrease coverage by 0.01%.\nThe diff coverage is 71.42%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3137      +/-\n============================================\n- Coverage     70.15%   70.13%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           934      934            \n  Lines         43486    43477       -9   \n  Branches       5897     5894       -3   \n============================================\n- Hits          30508    30493      -15   \n- Misses        10944    10945       +1   \n- Partials       2034     2039       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 70.73% <71.42%> (+4.06%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.05% <0%> (-2.1%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 028ea54...4b4cff8. Read the comment docs.\n. # Codecov Report\nMerging #3138 into master will decrease coverage by 0.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3138      +/-\n===========================================\n- Coverage     70.15%   70.1%   -0.06%   \n  Complexity        4       4            \n===========================================\n  Files           934     934            \n  Lines         43486   43486            \n  Branches       5897    5897            \n===========================================\n- Hits          30508   30486      -22   \n- Misses        10944   10954      +10   \n- Partials       2034    2046      +12\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 78.3% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.05% <0%> (-2.1%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/transport/common/AsyncResponseFuture.java | 81.56% <0%> (-1.42%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 028ea54...a95ef05. Read the comment docs.\n. # Codecov Report\nMerging #3140 into master will increase coverage by 0.02%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3140      +/-\n============================================\n+ Coverage     70.12%   70.14%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           934      934            \n  Lines         43477    43477            \n  Branches       5894     5894            \n============================================\n+ Hits          30488    30499      +11   \n+ Misses        10949    10940       -9   \n+ Partials       2040     2038       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/core/data/extractors/PlainFieldExtractor.java | 81.2% <\u00f8> (-0.73%) | 0 <0> (\u00f8) | |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 75.49% <75%> (+0.16%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/java/com/linkedin/pinot/core/util/AvroUtils.java | 52.89% <80%> (+1.16%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 85.38% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.06%) | 0% <0%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update de08c3c...e2d0f23. Read the comment docs.\n. # Codecov Report\nMerging #3143 into master will increase coverage by 0.16%.\nThe diff coverage is 91.39%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3143      +/-\n===========================================\n+ Coverage     70.14%   70.3%   +0.16%   \n  Complexity        4       4            \n===========================================\n  Files           934     941       +7   \n  Lines         43493   43733     +240   \n  Branches       5895    5917      +22   \n===========================================\n+ Hits          30506   30746     +240   \n+ Misses        10947   10936      -11   \n- Partials       2040    2051      +11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/common/utils/ServerType.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../linkedin/pinot/core/transport/ServerChannels.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...kedin/pinot/broker/broker/BrokerServerBuilder.java | 91.52% <100%> (+0.78%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inkedin/pinot/core/transport/DataTableHandler.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| .../pinot/core/common/datatable/DataTableFactory.java | 42.85% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...java/com/linkedin/pinot/core/transport/Server.java | 66.66% <66.66%> (\u00f8) | 0 <0> (?) | |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 88.37% <88.37%> (\u00f8) | 0 <0> (?) | |\n| .../linkedin/pinot/core/transport/ServerResponse.java | 90.47% <90.47%> (\u00f8) | 0 <0> (?) | |\n| ...com/linkedin/pinot/core/transport/QueryRouter.java | 93.22% <93.22%> (\u00f8) | 0 <0> (?) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5eabb84...5f4473b. Read the comment docs.\n. # Codecov Report\nMerging #3153 into master will decrease coverage by 0.14%.\nThe diff coverage is 70.71%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3153      +/-\n============================================\n- Coverage     70.29%   70.15%   -0.15%   \n  Complexity        4        4            \n============================================\n  Files           951      954       +3   \n  Lines         43963    44159     +196   \n  Branches       5938     5956      +18   \n============================================\n+ Hits          30903    30978      +75   \n- Misses        10993    11129     +136   \n+ Partials       2067     2052      -15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../api/resources/ControllerApplicationException.java | 60% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 22.91% <\u00f8> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 35.29% <\u00f8> (-0.53%) | 0 <0> (\u00f8) | |\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 50% <0%> (-50%) | 0 <0> (\u00f8) | |\n| ...linkedin/pinot/core/crypt/PinotCrypterFactory.java | 77.77% <100%> (\u00f8) | 0 <0> (?) | |\n| ...ntroller/api/resources/FileUploadPathProvider.java | 75.6% <100%> (+2.43%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 73.38% <100%> (-2.16%) | 0 <0> (\u00f8) | |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 81.81% <100%> (+0.42%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/core/crypt/DefaultPinotCrypter.java | 40% <40%> (\u00f8) | 0 <0> (?) | |\n| ... and 39 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c85e7b...2c2c689. Read the comment docs.\n. # Codecov Report\nMerging #3155 into master will increase coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3155      +/-\n============================================\n+ Coverage     70.24%   70.28%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files           941      941            \n  Lines         43737    43737            \n  Branches       5917     5917            \n============================================\n+ Hits          30723    30742      +19   \n+ Misses        10957    10947      -10   \n+ Partials       2057     2048       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/core/minion/PinotHelixTaskResourceManager.java | 78.16% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-2.12%) | 0% <0%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b582a49...139df9a. Read the comment docs.\n. # Codecov Report\nMerging #3166 into master will increase coverage by <.01%.\nThe diff coverage is 40%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3166      +/-\n============================================\n+ Coverage     70.31%   70.31%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files           941      941            \n  Lines         43733    43741       +8   \n  Branches       5917     5918       +1   \n============================================\n+ Hits          30749    30757       +8   \n+ Misses        10937    10934       -3   \n- Partials       2047     2050       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.56% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 40.87% <20%> (-0.8%) | 0 <0> (\u00f8) | |\n| .../controller/api/ControllerAdminApiApplication.java | 87.03% <50%> (-3.16%) | 0 <0> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update aa2316c...5a2b71b. Read the comment docs.\n. # Codecov Report\nMerging #3169 into master will decrease coverage by 0.05%.\nThe diff coverage is 66.38%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3169      +/-\n============================================\n- Coverage     70.29%   70.24%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           951      952       +1   \n  Lines         43963    43990      +27   \n  Branches       5938     5940       +2   \n============================================\n- Hits          30903    30899       -4   \n- Misses        10993    11019      +26   \n- Partials       2067     2072       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/realtime/stream/StreamConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| .../impl/kafka/KafkaSimpleStreamMetadataProvider.java | 43.67% <50%> (\u00f8) | 0 <0> (?) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.38% <55.55%> (-0.21%) | 0 <0> (\u00f8) | |\n| ...realtime/stream/StreamConsumerFactoryProvider.java | 62.5% <62.5%> (\u00f8) | 0 <0> (?) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.22% <64.28%> (-0.58%) | 0 <0> (\u00f8) | |\n| ...realtime/impl/kafka/KafkaSimpleStreamConsumer.java | 64.51% <64.51%> (\u00f8) | 0 <0> (?) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 78.57% <71.42%> (-0.19%) | 0 <0> (\u00f8) | |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 74.68% <91.66%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ... and 30 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8c85e7b...148a10d. Read the comment docs.\n. # Codecov Report\nMerging #3172 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3172      +/-\n============================================\n+ Coverage     70.29%   70.33%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files           951      950       -1   \n  Lines         43963    43962       -1   \n  Branches       5938     5938            \n============================================\n+ Hits          30903    30919      +16   \n+ Misses        10993    10985       -8   \n+ Partials       2067     2058       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.37% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.75% <0%> (-1.22%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.6% <0%> (-0.53%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.64% <0%> (-0.17%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 80% <0%> (+1.17%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 92.59% <0%> (+1.23%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 94.66% <0%> (+1.33%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2a2315a...749bcae. Read the comment docs.\n. # Codecov Report\nMerging #3192 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3192      +/-\n============================================\n+ Coverage     70.14%   70.19%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files           956      957       +1   \n  Lines         44216    44311      +95   \n  Branches       5960     5973      +13   \n============================================\n+ Hits          31017    31104      +87   \n+ Misses        11142    11140       -2   \n- Partials       2057     2067      +10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | 0% <0%> (\u00f8) | |\n| ...oller/api/resources/PinotTableRestletResource.java | 46.11% <0%> (-2.43%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-2.12%) | 0% <0%> (\u00f8) | |\n| ... and 39 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bf9108f...875c681. Read the comment docs.\n. # Codecov Report\nMerging #3193 into master will increase coverage by 0.01%.\nThe diff coverage is 87.5%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3193      +/-\n============================================\n+ Coverage     70.14%   70.15%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           956      956            \n  Lines         44217    44215       -2   \n  Branches       5960     5960            \n============================================\n+ Hits          31014    31020       +6   \n+ Misses        11143    11138       -5   \n+ Partials       2060     2057       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/pinot/core/operator/blocks/MultiValueBlock.java | 75% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/core/operator/blocks/SingleValueBlock.java | 80% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../operator/docvaliterators/SingleValueIterator.java | 87.5% <100%> (-0.74%) | 0 <0> (\u00f8) | |\n| ...e/operator/docvaliterators/MultiValueIterator.java | 81.81% <100%> (-1.52%) | 0 <0> (\u00f8) | |\n| ...pinot/core/operator/docvalsets/SingleValueSet.java | 91.66% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/operator/docvalsets/MultiValueSet.java | 85.71% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/segment/index/data/source/ColumnDataSource.java | 95.12% <66.66%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0a58013...385dd1c. Read the comment docs.\n. # Codecov Report\nMerging #3195 into master will decrease coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3195      +/-\n============================================\n- Coverage     70.18%   70.17%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44311    44309       -2   \n  Branches       5971     5973       +2   \n============================================\n- Hits          31101    31096       -5   \n- Misses        11136    11145       +9   \n+ Partials       2074     2068       -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 84.84% <100%> (-0.45%) | 0 <0> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92.3% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.77% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.15% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e9dfe64...72ddb2e. Read the comment docs.\n. # Codecov Report\nMerging #3196 into master will increase coverage by 10.51%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3196       +/-\n============================================\n+ Coverage     59.68%   70.2%   +10.51%   \n  Complexity        4       4             \n============================================\n  Files           957     957             \n  Lines         44307   44311        +4   \n  Branches       5973    5973             \n============================================\n+ Hits          26446   31108     +4662   \n+ Misses        15901   11138     -4763   \n- Partials       1960    2065      +105\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 75.94% <100%> (+1.27%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-0.58%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.8% <0%> (+0.74%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 70.73% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 305 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ee9d901...a17eebe. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@ee9d901). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3197   +/-\n=========================================\n  Coverage          ?   70.22%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      957         \n  Lines             ?    44309         \n  Branches          ?     5971         \n=========================================\n  Hits              ?    31115         \n  Misses            ?    11128         \n  Partials          ?     2066\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ee9d901...787834d. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@84964ff). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3200   +/-\n=========================================\n  Coverage          ?   70.19%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      957         \n  Lines             ?    44315         \n  Branches          ?     5974         \n=========================================\n  Hits              ?    31108         \n  Misses            ?    11141         \n  Partials          ?     2066\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 84964ff...aa1b513. Read the comment docs.\n. # Codecov Report\nMerging #3202 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3202      +/-\n===========================================\n+ Coverage     70.16%   70.2%   +0.04%   \n  Complexity        4       4            \n===========================================\n  Files           957     957            \n  Lines         44311   44327      +16   \n  Branches       5973    5976       +3   \n===========================================\n+ Hits          31089   31118      +29   \n+ Misses        11152   11140      -12   \n+ Partials       2070    2069       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.86% <0%> (-0.77%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-0.53%) | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <0%> (-0.52%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 84ef87d...a68ad3b. Read the comment docs.\n. # Codecov Report\nMerging #3206 into master will increase coverage by 0.07%.\nThe diff coverage is 61.53%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3206      +/-\n============================================\n+ Coverage     70.16%   70.23%   +0.07%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44311    44315       +4   \n  Branches       5973     5974       +1   \n============================================\n+ Hits          31089    31126      +37   \n+ Misses        11152    11127      -25   \n+ Partials       2070     2062       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 23.4% <0%> (\u00f8) | 4 <0> (?) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <0%> (-0.52%) | 0 <0> (\u00f8) | |\n| .../com/linkedin/pinot/filesystem/PinotFSFactory.java | 82.14% <100%> (+2.97%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../broker/helix/LiveInstancesChangeListenerImpl.java | 64.28% <0%> (-2.39%) | 0% <0%> (\u00f8) | |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.06% <0%> (-0.64%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-0.53%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.75% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2867d02...6661ff3. Read the comment docs.\n. # Codecov Report\nMerging #3208 into master will decrease coverage by 0.07%.\nThe diff coverage is 97.67%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3208      +/-\n============================================\n- Coverage     70.43%   70.36%   -0.08%   \n  Complexity        4        4            \n============================================\n  Files           959      959            \n  Lines         44241    44228      -13   \n  Branches       5962     5961       -1   \n============================================\n- Hits          31160    31119      -41   \n- Misses        11017    11038      +21   \n- Partials       2064     2071       +7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...mpl/fwd/MultiValueUnsortedForwardIndexCreator.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.76% <100%> (-0.05%) | 0 <0> (\u00f8) | |\n| ...pl/fwd/SingleValueUnsortedForwardIndexCreator.java | 100% <100%> (+10.52%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 92% <100%> (+0.1%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/core/io/util/PinotDataBitSet.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/fwd/SingleValueSortedForwardIndexCreator.java | 94.73% <93.75%> (-1.27%) | 0 <0> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b08c265...e792bea. Read the comment docs.\n. # Codecov Report\nMerging #3209 into master will increase coverage by 0.07%.\nThe diff coverage is 7.69%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3209      +/-\n============================================\n+ Coverage     70.17%   70.24%   +0.07%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44315    44322       +7   \n  Branches       5974     5975       +1   \n============================================\n+ Hits          31097    31133      +36   \n+ Misses        11147    11128      -19   \n+ Partials       2071     2061      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 20.75% <0%> (-2.65%) | 4 <0> (\u00f8) | |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 36.6% <100%> (+0.18%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.37% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.69% <0%> (+0.63%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b745abb...25dca37. Read the comment docs.\n. # Codecov Report\nMerging #3210 into master will decrease coverage by 10.52%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3210       +/-\n=============================================\n- Coverage     70.21%   59.69%   -10.53%   \n  Complexity        4        4             \n=============================================\n  Files           957      958        +1   \n  Lines         44315    44393       +78   \n  Branches       5974     5985       +11   \n=============================================\n- Hits          31116    26500     -4616   \n- Misses        11134    15931     +4797   \n+ Partials       2065     1962      -103\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...x/core/rebalance/RebalanceUserConfigConstants.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 92.53% <100%> (-0.57%) | 0 <0> (\u00f8) | |\n| ...ebalance/ReplicaGroupRebalanceSegmentStrategy.java | 82.09% <100%> (-1.38%) | 0 <0> (\u00f8) | |\n| ...pinot/controller/helix/core/IdealStateUpdater.java | 65.59% <65.59%> (\u00f8) | 0 <0> (?) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 53.56% <75%> (-6.6%) | 0 <0> (\u00f8) | |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ion/iterator/LongArraySelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...nion/events/DefaultMinionEventObserverFactory.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ection/iterator/DoubleSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 307 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b184998...4b65f01. Read the comment docs.\n. # Codecov Report\nMerging #3214 into master will decrease coverage by 0.06%.\nThe diff coverage is 53.48%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3214      +/-\n============================================\n- Coverage     70.21%   70.14%   -0.07%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44327    44344      +17   \n  Branches       5976     5979       +3   \n============================================\n- Hits          31123    31107      -16   \n- Misses        11145    11169      +24   \n- Partials       2059     2068       +9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 95.34% <\u00f8> (-0.11%) | 0 <0> (\u00f8) | |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 19.04% <0%> (-1.65%) | 4 <0> (\u00f8) | |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 65.26% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...nkedin/pinot/controller/api/upload/ZKOperator.java | 69.33% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 40.57% <33.33%> (-0.17%) | 0 <0> (\u00f8) | |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 36.39% <61.53%> (-0.22%) | 0 <0> (\u00f8) | |\n| ...ntroller/api/resources/FileUploadPathProvider.java | 71.42% <73.33%> (-4.19%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 72694e5...3d34f32. Read the comment docs.\n. # Codecov Report\nMerging #3217 into master will decrease coverage by 0.05%.\nThe diff coverage is 69.29%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3217      +/-\n============================================\n- Coverage     70.21%   70.15%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           957      958       +1   \n  Lines         44327    44420      +93   \n  Branches       5976     5987      +11   \n============================================\n+ Hits          31123    31162      +39   \n- Misses        11145    11183      +38   \n- Partials       2059     2075      +16\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...x/core/rebalance/RebalanceUserConfigConstants.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 92.53% <100%> (-0.57%) | 0 <0> (\u00f8) | |\n| ...ebalance/ReplicaGroupRebalanceSegmentStrategy.java | 82.09% <100%> (-1.38%) | 0 <0> (\u00f8) | |\n| ...pinot/controller/helix/core/IdealStateUpdater.java | 68.51% <68.51%> (\u00f8) | 0 <0> (?) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.18% <75%> (+0.01%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a2b655a...899eb3f. Read the comment docs.\n. # Codecov Report\nMerging #3220 into master will decrease coverage by 0.06%.\nThe diff coverage is 81.57%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3220      +/-\n============================================\n- Coverage     70.21%   70.15%   -0.07%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44327    44370      +43   \n  Branches       5976     5983       +7   \n============================================\n+ Hits          31125    31128       +3   \n- Misses        11137    11169      +32   \n- Partials       2065     2073       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 96.15% <\u00f8> (+3.84%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/data/manager/BaseTableDataManager.java | 93.82% <100%> (+0.4%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.96% <100%> (-1.37%) | 0 <0> (\u00f8) | |\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 85.18% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 45.76% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 69.33% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ing/builder/BalancedRandomRoutingTableBuilder.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lder/KafkaLowLevelConsumerRoutingTableBuilder.java | 79.62% <100%> (+0.78%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0edd29b...7dd2cf4. Read the comment docs.\n. # Codecov Report\nMerging #3221 into master will increase coverage by 0.17%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3221      +/-\n============================================\n+ Coverage     70.16%   70.33%   +0.17%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44344    44211     -133   \n  Branches       5979     5957      -22   \n============================================\n- Hits          31112    31094      -18   \n+ Misses        11163    11050     -113   \n+ Partials       2069     2067       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 60% <\u00f8> (+23.6%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 72.51% <0%> (-14.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 78% <0%> (-1.34%) | 0% <0%> (\u00f8) | |\n| ...ebalance/ReplicaGroupRebalanceSegmentStrategy.java | 82.62% <0%> (-0.85%) | 0% <0%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 980544c...44adedd. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@05af92f). Click here to learn what that means.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3222   +/-\n=========================================\n  Coverage          ?   70.36%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      957         \n  Lines             ?    44237         \n  Branches          ?     5961         \n=========================================\n  Hits              ?    31127         \n  Misses            ?    11039         \n  Partials          ?     2071\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <88.88%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 05af92f...596afa8. Read the comment docs.\n. # Codecov Report\nMerging #3223 into master will decrease coverage by 0.01%.\nThe diff coverage is 75.92%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3223      +/-\n============================================\n- Coverage     70.34%   70.33%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44237    44234       -3   \n  Branches       5961     5962       +1   \n============================================\n- Hits          31118    31111       -7   \n- Misses        11049    11053       +4   \n  Partials       2070     2070\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...harding/ReplicaGroupSegmentAssignmentStrategy.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...helix/core/sharding/BucketizedSegmentStrategy.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../partition/StreamPartitionAssignmentGenerator.java | 95.08% <100%> (-0.08%) | 0 <0> (\u00f8) | |\n| .../helix/core/sharding/RandomAssignmentStrategy.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../sharding/BalanceNumSegmentAssignmentStrategy.java | 90.9% <100%> (-0.27%) | 0 <0> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 78.57% <100%> (+6.25%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ebalance/ReplicaGroupRebalanceSegmentStrategy.java | 83.47% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 91.83% <50%> (-1.27%) | 0 <0> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.18% <71.42%> (+0.02%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 77.11% <75%> (-1.22%) | 0 <0> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3f6d161...7355199. Read the comment docs.\n. # Codecov Report\nMerging #3226 into master will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3226      +/-\n============================================\n+ Coverage     70.34%   70.36%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44237    44241       +4   \n  Branches       5961     5961            \n============================================\n+ Hits          31118    31128      +10   \n+ Misses        11049    11043       -6   \n  Partials       2070     2070\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.05% <0%> (-0.63%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-0.53%) | 0% <0%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 80c7a28...4867f92. Read the comment docs.\n. # Codecov Report\nMerging #3229 into master will increase coverage by 0.01%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3229      +/-\n============================================\n+ Coverage     70.34%   70.35%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44237    44240       +3   \n  Branches       5961     5963       +2   \n============================================\n+ Hits          31118    31126       +8   \n+ Misses        11049    11040       -9   \n- Partials       2070     2074       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/operator/query/SelectionOrderByOperator.java | 78.37% <0%> (-6.92%) | 0 <0> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-5.18%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 39.85% <0%> (-1.45%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 77.86% <0%> (-0.77%) | 0% <0%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 12c5f9a...e0be778. Read the comment docs.\n. # Codecov Report\nMerging #3230 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3230      +/-\n============================================\n- Coverage     70.33%   70.27%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           957      957            \n  Lines         44238    44238            \n  Branches       5962     5962            \n============================================\n- Hits          31113    31090      -23   \n- Misses        11056    11081      +25   \n+ Partials       2069     2067       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 77.19% <0%> (-6.44%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 72.03% <0%> (-5.09%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 71.42% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 71.11% <0%> (-2.23%) | 0% <0%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9d36680...760a274. Read the comment docs.\n. # Codecov Report\nMerging #3234 into master will decrease coverage by 0.13%.\nThe diff coverage is 90%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3234      +/-\n===========================================\n- Coverage     70.43%   70.3%   -0.14%   \n  Complexity        4       4            \n===========================================\n  Files           959     959            \n  Lines         44241   44262      +21   \n  Branches       5962    5965       +3   \n===========================================\n- Hits          31160   31117      -43   \n- Misses        11017   11070      +53   \n- Partials       2064    2075      +11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.26% <100%> (+0.08%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 80.25% <100%> (+0.92%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 60% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 64.35% <66.66%> (-0.91%) | 0 <0> (\u00f8) | |\n| ...nkedin/pinot/controller/api/upload/ZKOperator.java | 71.6% <92.85%> (+2.27%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b08c265...f0b72f2. Read the comment docs.\n. # Codecov Report\nMerging #3236 into master will decrease coverage by 0.27%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3236      +/-\n============================================\n- Coverage      70.3%   70.02%   -0.28%   \n  Complexity        4        4            \n============================================\n  Files           962      972      +10   \n  Lines         44378    44560     +182   \n  Branches       5975     5975            \n============================================\n+ Hits          31198    31205       +7   \n- Misses        11105    11280     +175   \n  Partials       2075     2075\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/core/data/aggregator/MaxValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...re/data/aggregator/MinMaxRangeValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...t/core/data/aggregator/ValueAggregatorFactory.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...a/aggregator/PercentileTDigestValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/core/data/aggregator/SumValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| .../data/aggregator/PercentileEstValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...ta/aggregator/DistinctCountHLLValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...not/core/data/aggregator/CountValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/core/data/aggregator/MinValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/core/data/aggregator/AvgValueAggregator.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6305780...b03dca9. Read the comment docs.\n. # Codecov Report\nMerging #3237 into master will increase coverage by 23.25%.\nThe diff coverage is 93.45%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3237       +/-\n=============================================\n+ Coverage     47.08%   70.33%   +23.25%   \n- Complexity        0        4        +4   \n=============================================\n  Files           959      960        +1   \n  Lines         44228    44230        +2   \n  Branches       5961     5958        -3   \n=============================================\n+ Hits          20824    31109    +10285   \n+ Misses        21679    11055    -10624   \n- Partials       1725     2066      +341\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 83.77% <100%> (+6.48%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/core/startree/OffHeapStarTreeNode.java | 85.18% <76.92%> (-0.27%) | 0 <0> (\u00f8) | |\n| .../linkedin/pinot/core/startree/OffHeapStarTree.java | 47.22% <93.75%> (+4.16%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/core/startree/StarTreeBuilderUtils.java | 96.1% <96.1%> (\u00f8) | 0 <0> (?) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.28% <0%> (-2.39%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 80.23% <0%> (-2.33%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-1.7%) | 0% <0%> (\u00f8) | |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 74.68% <0%> (-1.27%) | 0% <0%> (\u00f8) | |\n| ... and 487 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e5ec0f9...81ea476. Read the comment docs.\n. # Codecov Report\nMerging #3238 into master will increase coverage by 23.24%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3238       +/-\n=============================================\n+ Coverage     47.08%   70.33%   +23.24%   \n- Complexity        0        4        +4   \n=============================================\n  Files           959      959             \n  Lines         44228    44222        -6   \n  Branches       5961     5960        -1   \n=============================================\n+ Hits          20824    31102    +10278   \n+ Misses        21679    11048    -10631   \n- Partials       1725     2072      +347\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 92.59% <100%> (+92.59%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/data/readers/PinotSegmentColumnReader.java | 72.13% <75%> (+72.13%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 80.23% <0%> (-2.33%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-1.7%) | 0% <0%> (\u00f8) | |\n| ... and 490 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e5ec0f9...1810d16. Read the comment docs.\n. # Codecov Report\nMerging #3242 into master will decrease coverage by 0.04%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3242      +/-\n============================================\n- Coverage     70.38%   70.33%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files           960      960            \n  Lines         44245    44247       +2   \n  Branches       5960     5960            \n============================================\n- Hits          31141    31123      -18   \n- Misses        11031    11047      +16   \n- Partials       2073     2077       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 64.07% <50%> (-0.28%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 84.44% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.77% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2bc9a2f...a30267d. Read the comment docs.\n. # Codecov Report\nMerging #3244 into master will increase coverage by 0.03%.\nThe diff coverage is 86.13%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3244      +/-\n============================================\n+ Coverage     70.35%   70.38%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files           963      962       -1   \n  Lines         44363    44317      -46   \n  Branches       5974     5959      -15   \n============================================\n- Hits          31211    31192      -19   \n+ Misses        11078    11052      -26   \n+ Partials       2074     2073       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ion/function/PercentileEstAggregationFunction.java | 50% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 80.11% <100%> (+1.29%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/core/common/datatable/DataTableImplV2.java | 89.41% <100%> (+0.69%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../function/DistinctCountHLLAggregationFunction.java | 30.43% <22.22%> (-0.45%) | 0 <0> (\u00f8) | |\n| ...function/PercentileTDigestAggregationFunction.java | 63.29% <66.66%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 52.32% <84.61%> (+4.51%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/core/common/ObjectSerDeUtils.java | 91.56% <91.56%> (\u00f8) | 0 <0> (?) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8cf73e2...a969c84. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@7049f1a). Click here to learn what that means.\nThe diff coverage is 82.35%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3245   +/-\n=========================================\n  Coverage          ?   69.96%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      971         \n  Lines             ?    44553         \n  Branches          ?     5974         \n=========================================\n  Hits              ?    31170         \n  Misses            ?    11299         \n  Partials          ?     2084\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/realtime/stream/StreamConsumerFactory.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...altime/impl/kafka/KafkaStreamMetadataProvider.java | 43.67% <100%> (\u00f8) | 0 <0> (?) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.22% <100%> (\u00f8) | 0 <0> (?) | |\n| .../realtime/impl/kafka/KafkaStreamLevelConsumer.java | 71.42% <100%> (\u00f8) | 0 <0> (?) | |\n| ...altime/impl/kafka/KafkaPartitionLevelConsumer.java | 63.33% <37.5%> (\u00f8) | 0 <0> (?) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 71.69% <91.66%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7049f1a...5dad069. Read the comment docs.\n. # Codecov Report\nMerging #3248 into master will increase coverage by 0.04%.\nThe diff coverage is 84.61%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3248      +/-\n============================================\n+ Coverage     70.29%   70.34%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files           963      963            \n  Lines         44363    44353      -10   \n  Branches       5974     5972       -2   \n============================================\n+ Hits          31185    31198      +13   \n+ Misses        11094    11074      -20   \n+ Partials       2084     2081       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/routing/builder/RoutingTableInstancePruner.java | 84.21% <84.61%> (+11.79%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 63.63% <0%> (-14.55%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 86.16% <0%> (-1.89%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.37% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ...core/startree/operator/StarTreeFilterOperator.java | 95.75% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.33% <0%> (+1%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 92.59% <0%> (+1.23%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d56028...d0036d6. Read the comment docs.\n. # Codecov Report\nMerging #3250 into master will increase coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3250      +/-\n============================================\n+ Coverage     70.29%   70.34%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files           963      963            \n  Lines         44363    44363            \n  Branches       5974     5974            \n============================================\n+ Hits          31185    31208      +23   \n+ Misses        11094    11079      -15   \n+ Partials       2084     2076       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.37% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 48.23% <0%> (+0.41%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 86.54% <0%> (+1.16%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...core/startree/operator/StarTreeFilterOperator.java | 96.36% <0%> (+1.21%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 92.59% <0%> (+1.23%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.3% <0%> (+1.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d56028...65d259c. Read the comment docs.\n. # Codecov Report\nMerging #3252 into master will increase coverage by 10.53%.\nThe diff coverage is 26.66%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3252       +/-\n=============================================\n+ Coverage     59.82%   70.36%   +10.53%   \n  Complexity        4        4             \n=============================================\n  Files           962      962             \n  Lines         44307    44312        +5   \n  Branches       5957     5958        +1   \n=============================================\n+ Hits          26508    31180     +4672   \n+ Misses        15839    11068     -4771   \n- Partials       1960     2064      +104\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (+50%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 17.39% <0%> (-1.66%) | 4 <0> (\u00f8) | |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 81.81% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 52.32% <0%> (-0.45%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.11% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.76% <0%> (+0.74%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 70.73% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 310 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0a6df90...0f5ebb4. Read the comment docs.\n. # Codecov Report\nMerging #3253 into master will decrease coverage by 0.08%.\nThe diff coverage is 10.81%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3253      +/-\n============================================\n- Coverage     70.79%   70.71%   -0.09%   \n  Complexity        4        4            \n============================================\n  Files           983      985       +2   \n  Lines         45344    45443      +99   \n  Branches       6089     6104      +15   \n============================================\n+ Hits          32100    32133      +33   \n- Misses        11140    11196      +56   \n- Partials       2104     2114      +10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/server/api/resources/HealthCheckResource.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 54.54% <11.59%> (-22.22%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6d51261...3a190ff. Read the comment docs.\n. # Codecov Report\nMerging #3254 into master will increase coverage by <.01%.\nThe diff coverage is 33.33%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3254      +/-\n============================================\n+ Coverage     70.36%   70.37%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files           962      962            \n  Lines         44312    44375      +63   \n  Branches       5958     5974      +16   \n============================================\n+ Hits          31180    31227      +47   \n- Misses        11058    11077      +19   \n+ Partials       2074     2071       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ion/function/PercentileEstAggregationFunction.java | 53.24% <0%> (+3.24%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 52.32% <33.96%> (-26.53%) | 0 <0> (\u00f8) | |\n| ...y/aggregation/function/AvgAggregationFunction.java | 63.85% <40.42%> (-32.07%) | 0 <0> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | 0% <0%> (\u00f8) | |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 39.85% <0%> (-1.45%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | 0% <0%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8512bc...8d5b7e6. Read the comment docs.\n. # Codecov Report\nMerging #3255 into master will increase coverage by 0.04%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3255      +/-\n============================================\n+ Coverage     70.81%   70.85%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45294    45378      +84   \n  Branches       6083     6097      +14   \n============================================\n+ Hits          32075    32153      +78   \n- Misses        11117    11122       +5   \n- Partials       2102     2103       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/query/scheduler/fcfs/BoundedFCFSScheduler.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../scheduler/tokenbucket/TokenPriorityScheduler.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/query/scheduler/fcfs/FCFSQueryScheduler.java | 85.71% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.77% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 85.29% <100%> (+0.44%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/server/starter/ServerBuilder.java | 82.05% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/query/scheduler/QuerySchedulerFactory.java | 26.92% <25%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.22% <69.04%> (-7.78%) | 0 <0> (\u00f8) | |\n| .../linkedin/pinot/server/starter/ServerInstance.java | 78.18% <75%> (+0.82%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7353160...3c74181. Read the comment docs.\n. # Codecov Report\nMerging #3256 into master will decrease coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3256      +/-\n============================================\n- Coverage     70.36%   70.35%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           962      962            \n  Lines         44312    44313       +1   \n  Branches       5958     5958            \n============================================\n- Hits          31180    31176       -4   \n- Misses        11058    11063       +5   \n  Partials       2074     2074\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...gation/function/PercentileAggregationFunction.java | 75% <100%> (+0.45%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 84.74% <0%> (-3.39%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 65.47% <0%> (-2.39%) | 0% <0%> (\u00f8) | |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e8512bc...11022ec. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@63a6767). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3258   +/-\n=========================================\n  Coverage          ?   70.42%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      962         \n  Lines             ?    44314         \n  Branches          ?     5959         \n=========================================\n  Hits              ?    31208         \n  Misses            ?    11041         \n  Partials          ?     2065\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 63a6767...efa82d5. Read the comment docs.\n. # Codecov Report\nMerging #3259 into master will decrease coverage by 0.19%.\nThe diff coverage is 25.91%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3259     +/-\n===========================================\n- Coverage     69.95%   69.76%   -0.2%   \n  Complexity        4        4           \n===========================================\n  Files           972      978      +6   \n  Lines         44560    44736    +176   \n  Branches       5975     5992     +17   \n===========================================\n+ Hits          31174    31211     +37   \n- Misses        11305    11449    +144   \n+ Partials       2081     2076      -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...eader/impl/v1/FixedByteChunkSingleValueReader.java | 65.9% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/startree/v2/store/StarTreeIndexMapUtils.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...in/pinot/core/startree/v2/StarTreeV2Constants.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...startree/v2/store/StarTreeDimensionDataSource.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...re/startree/v2/store/StarTreeMetricDataSource.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...om/linkedin/pinot/core/startree/StarTreeUtils.java | 86.48% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...din/pinot/core/startree/v2/StarTreeV2Metadata.java | 41.66% <23.52%> (-35.26%) | 0 <0> (\u00f8) | |\n| ...ot/core/startree/v2/store/StarTreeLoaderUtils.java | 36.5% <36.5%> (\u00f8) | 0 <0> (?) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 79.86% <37.5%> (-1.26%) | 0 <0> (\u00f8) | |\n| ...ndex/converter/SegmentV1V2ToV3FormatConverter.java | 74.35% <50%> (-1.32%) | 0 <0> (\u00f8) | |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 13cfc6d...6a2b3a4. Read the comment docs.\n. # Codecov Report\nMerging #3260 into master will decrease coverage by 0.09%.\nThe diff coverage is 94.11%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3260     +/-\n===========================================\n- Coverage        70%   69.91%   -0.1%   \n  Complexity        4        4           \n===========================================\n  Files           972      972           \n  Lines         44560    44571     +11   \n  Branches       5975     5977      +2   \n===========================================\n- Hits          31194    31160     -34   \n- Misses        11286    11326     +40   \n- Partials       2080     2085      +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../pinot/core/data/manager/BaseTableDataManager.java | 93.42% <\u00f8> (-0.41%) | 0 <0> (\u00f8) | |\n| ...inkedin/pinot/common/exception/QueryException.java | 94.36% <100%> (+5.96%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 80% <93.33%> (+1.69%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 71.34% <0%> (-15.21%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b323d44...cd2168c. Read the comment docs.\n. # Codecov Report\nMerging #3264 into master will increase coverage by 10.28%.\nThe diff coverage is 84.84%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3264       +/-\n=============================================\n+ Coverage     60.22%   70.51%   +10.28%   \n  Complexity        4        4             \n=============================================\n  Files           987      990        +3   \n  Lines         45423    45408       -15   \n  Branches       6089     6091        +2   \n=============================================\n+ Hits          27356    32019     +4663   \n+ Misses        16074    11278     -4796   \n- Partials       1993     2111      +118\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 78.21% <100%> (+12.11%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 76.92% <100%> (+1.39%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/core/periodictask/BasePeriodicTask.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/controller/validation/ValidationManager.java | 28.46% <33.33%> (-2.79%) | 0 <0> (\u00f8) | |\n| ...controller/helix/core/minion/PinotTaskManager.java | 84% <62.5%> (+68.48%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 60.79% <73.68%> (-0.88%) | 0 <0> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 76% <76%> (\u00f8) | 0 <0> (?) | |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 87.02% <93.33%> (+5.08%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 97.14% <97.14%> (\u00f8) | 0 <0> (?) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ... and 325 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0d92355...64a881a. Read the comment docs.\n. # Codecov Report\nMerging #3268 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3268      +/-\n============================================\n+ Coverage     68.85%   68.87%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45284    45294      +10   \n  Branches       6083     6083            \n============================================\n+ Hits          31181    31197      +16   \n+ Misses        12024    12013      -11   \n- Partials       2079     2084       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inkedin/pinot/core/transport/DataTableHandler.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/metrics/BrokerGauge.java | 90.9% <100%> (+10.9%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../linkedin/pinot/core/transport/ServerChannels.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-11.12%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b6dfde8...88078cf. Read the comment docs.\n. # Codecov Report\nMerging #3269 into master will decrease coverage by 0.78%.\nThe diff coverage is 1.62%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3269      +/-\n===========================================\n- Coverage     69.69%   68.9%   -0.79%   \n  Complexity        4       4            \n===========================================\n  Files           977     983       +6   \n  Lines         44732   45283     +551   \n  Branches       5991    6083      +92   \n===========================================\n+ Hits          31174   31203      +29   \n- Misses        11481   12001     +520   \n- Partials       2077    2079       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/startree/v2/builder/OnHeapSingleTreeBuilder.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| .../startree/v2/builder/OffHeapSingleTreeBuilder.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...core/startree/v2/builder/MultipleTreesBuilder.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...or/impl/fwd/SingleValueVarByteRawIndexCreator.java | 52.63% <0%> (-14.04%) | 0 <0> (\u00f8) | |\n| ...ore/startree/v2/builder/StarTreeIndexCombiner.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...e/startree/v2/builder/StarTreeV2BuilderConfig.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 55.29% <40%> (-0.27%) | 0 <0> (\u00f8) | |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 86.45% <63.63%> (-1.26%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bf74587...12d6969. Read the comment docs.\n. # Codecov Report\nMerging #3270 into master will increase coverage by 1.77%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3270      +/-\n============================================\n+ Coverage     68.85%   70.62%   +1.77%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45283    45283            \n  Branches       6083     6083            \n============================================\n+ Hits          31180    31983     +803   \n+ Misses        12018    11194     -824   \n- Partials       2085     2106      +21\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/core/transport/DataTableHandler.java | 87.5% <0%> (-12.5%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 85.38% <0%> (+0.58%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.69% <0%> (+0.63%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.33% <0%> (+1%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f62f83...bda5ad1. Read the comment docs.\n. # Codecov Report\nMerging #3271 into master will increase coverage by 1.58%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3271      +/-\n============================================\n+ Coverage     68.85%   70.44%   +1.58%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45283    45283            \n  Branches       6083     6083            \n============================================\n+ Hits          31180    31899     +719   \n+ Misses        12018    11278     -740   \n- Partials       2085     2106      +21\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 80% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| ...java/com/linkedin/pinot/core/transport/Server.java | 59.25% <0%> (-7.41%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 83.33% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.69% <0%> (+0.63%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 55.97% <0%> (+0.68%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 87.25% <0%> (+0.79%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 40 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f62f83...9e7bf28. Read the comment docs.\n. # Codecov Report\nMerging #3275 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3275      +/-\n===========================================\n+ Coverage     68.85%   68.9%   +0.04%   \n  Complexity        4       4            \n===========================================\n  Files           983     983            \n  Lines         45283   45283            \n  Branches       6083    6083            \n===========================================\n+ Hits          31180   31202      +22   \n+ Misses        12018   12004      -14   \n+ Partials       2085    2077       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...y/aggregation/function/AvgAggregationFunction.java | 61.44% <0%> (-2.41%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 78.94% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-1.06%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 52.77% <0%> (+0.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.69% <0%> (+0.63%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c2b4de5...4e3f36c. Read the comment docs.\n. # Codecov Report\nMerging #3283 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3283      +/-\n============================================\n+ Coverage     68.85%   68.86%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45283    45284       +1   \n  Branches       6083     6083            \n============================================\n+ Hits          31180    31183       +3   \n+ Misses        12018    12017       -1   \n+ Partials       2085     2084       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 68.75% <100%> (+0.37%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/core/transport/DataTableHandler.java | 87.5% <0%> (-12.5%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ffc61d6...0de819a. Read the comment docs.\n. # Codecov Report\nMerging #3284 into master will increase coverage by 0.04%.\nThe diff coverage is 91.17%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3284      +/-\n===========================================\n+ Coverage     68.85%   68.9%   +0.04%   \n  Complexity        4       4            \n===========================================\n  Files           983     983            \n  Lines         45283   45283            \n  Branches       6083    6083            \n===========================================\n+ Hits          31180   31202      +22   \n+ Misses        12018   11998      -20   \n+ Partials       2085    2083       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 45.76% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...oller/api/resources/PinotTableRestletResource.java | 46.54% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.6% <100%> (+1.05%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...altime/impl/kafka/KafkaPartitionLevelConsumer.java | 63.33% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 75% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...realtime/stream/StreamConsumerFactoryProvider.java | 62.5% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 75.94% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/realtime/stream/StreamConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 73.22% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 773340d...e978465. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@fb3c74d). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3287   +/-\n=========================================\n  Coverage          ?   70.82%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      983         \n  Lines             ?    45294         \n  Branches          ?     6083         \n=========================================\n  Hits              ?    32079         \n  Misses            ?    11118         \n  Partials          ?     2097\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 94.71% <\u00f8> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fb3c74d...c740f2e. Read the comment docs.\n. # Codecov Report\nMerging #3294 into master will increase coverage by 0.02%.\nThe diff coverage is 65.38%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3294      +/-\n============================================\n+ Coverage     70.81%   70.83%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45294    45374      +80   \n  Branches       6083     6095      +12   \n============================================\n+ Hits          32075    32142      +67   \n- Misses        11117    11127      +10   \n- Partials       2102     2105       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...linkedin/pinot/core/crypt/PinotCrypterFactory.java | 77.77% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 61.13% <60%> (+1.13%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/linkedin/pinot/core/crypt/NoOpPinotCrypter.java | 80% <75%> (\u00f8) | 0 <0> (?) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 77.22% <0%> (-7.78%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (-4.81%) | 0% <0%> (\u00f8) | |\n| .../broker/helix/LiveInstancesChangeListenerImpl.java | 64.28% <0%> (-2.39%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 400fbe9...cac74c0. Read the comment docs.\n. # Codecov Report\nMerging #3295 into master will increase coverage by 0.06%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3295      +/-\n============================================\n+ Coverage     70.81%   70.87%   +0.06%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45294    45294            \n  Branches       6083     6083            \n============================================\n+ Hits          32075    32103      +28   \n+ Misses        11117    11098      -19   \n+ Partials       2102     2093       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../common/segment/fetcher/SegmentFetcherFactory.java | 95.34% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 86.56% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 64.07% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.56% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 39.85% <0%> (-1.45%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.33% <0%> (-1%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 400fbe9...2f6ee19. Read the comment docs.\n. # Codecov Report\nMerging #3300 into master will increase coverage by 0.03%.\nThe diff coverage is 86.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3300      +/-\n============================================\n+ Coverage     70.79%   70.83%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45378    45394      +16   \n  Branches       6097     6095       -2   \n============================================\n+ Hits          32124    32153      +29   \n+ Misses        11148    11130      -18   \n- Partials       2106     2111       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../com/linkedin/pinot/filesystem/PinotFSFactory.java | 84.37% <100%> (+2.23%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.98% <100%> (+0.41%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 76.75% <100%> (+2.86%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 84.72% <60%> (-1.85%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <0%> (-3.34%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0d3be35...0cb15fd. Read the comment docs.\n. # Codecov Report\nMerging #3302 into master will increase coverage by 0.05%.\nThe diff coverage is 74.74%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3302      +/-\n============================================\n+ Coverage     70.82%   70.87%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45374    45350      -24   \n  Branches       6095     6092       -3   \n============================================\n+ Hits          32135    32142       +7   \n+ Misses        11132    11103      -29   \n+ Partials       2107     2105       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 55.35% <100%> (+3.76%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 76.92% <62.06%> (-9.63%) | 0 <0> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.58% <86.36%> (-0.5%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/core/transport/DataTableHandler.java | 88% <0%> (-12%) | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/broker/queryquota/HitCounter.java | 92.3% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 80.23% <0%> (-4.66%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a09b739...e4837e0. Read the comment docs.\n. # Codecov Report\nMerging #3304 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3304      +/-\n============================================\n+ Coverage     70.82%   70.84%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45374    45374            \n  Branches       6095     6095            \n============================================\n+ Hits          32135    32143       +8   \n+ Misses        11132    11127       -5   \n+ Partials       2107     2104       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.56% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7fd3e8e...cef1f9d. Read the comment docs.\n. # Codecov Report\nMerging #3305 into master will decrease coverage by 0.05%.\nThe diff coverage is 42.85%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3305      +/-\n============================================\n- Coverage     70.82%   70.77%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45374    45384      +10   \n  Branches       6095     6096       +1   \n============================================\n- Hits          32135    32119      -16   \n- Misses        11132    11156      +24   \n- Partials       2107     2109       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/server/starter/helix/HelixServerStarter.java | 73.15% <42.85%> (-4.07%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 65.21% <0%> (-4.35%) | 0% <0%> (\u00f8) | |\n| .../segment/index/readers/OnHeapStringDictionary.java | 55.55% <0%> (-3.71%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a09b739...647be20. Read the comment docs.\n. # Codecov Report\nMerging #3313 into master will decrease coverage by <.01%.\nThe diff coverage is 55.55%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3313      +/-\n============================================\n- Coverage     70.79%   70.79%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45368    45372       +4   \n  Branches       6091     6093       +2   \n============================================\n+ Hits          32118    32119       +1   \n  Misses        11143    11143            \n- Partials       2107     2110       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.77% <100%> (-0.21%) | 0 <0> (\u00f8) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 40.71% <25%> (+0.13%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 78.47% <75%> (+0.45%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 45.45% <0%> (-18.19%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 60760ff...318ee2a. Read the comment docs.\n. # Codecov Report\nMerging #3314 into master will decrease coverage by 0.01%.\nThe diff coverage is 28.57%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3314      +/-\n============================================\n- Coverage     70.83%   70.82%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45348    45351       +3   \n  Branches       6091     6092       +1   \n============================================\n- Hits          32121    32118       -3   \n- Misses        11114    11118       +4   \n- Partials       2113     2115       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 72.85% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 34.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 69.1% <28.57%> (-0.58%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.77% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-2.23%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4dac15c...3fba1f2. Read the comment docs.\n. # Codecov Report\nMerging #3319 into master will decrease coverage by <.01%.\nThe diff coverage is 84.21%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3319      +/-\n============================================\n- Coverage     70.83%   70.82%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files           983      984       +1   \n  Lines         45348    45359      +11   \n  Branches       6091     6091            \n============================================\n+ Hits          32121    32127       +6   \n- Misses        11114    11119       +5   \n  Partials       2113     2113\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/realtime/stream/StreamConsumerFactory.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../realtime/impl/kafka/KafkaStreamLevelConsumer.java | 71.92% <100%> (+0.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 76.99% <100%> (+5.29%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.45% <100%> (-1.78%) | 0 <0> (\u00f8) | |\n| ...ot/core/realtime/stream/StreamDecoderProvider.java | 70% <70%> (\u00f8) | 0 <0> (?) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-8.89%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...afkaHighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4dac15c...2dbe845. Read the comment docs.\n. # Codecov Report\nMerging #3323 into master will decrease coverage by 0.16%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3323      +/-\n============================================\n- Coverage     70.83%   70.66%   -0.17%   \n  Complexity        4        4            \n============================================\n  Files           983      983            \n  Lines         45348    45348            \n  Branches       6091     6091            \n============================================\n- Hits          32121    32044      -77   \n- Misses        11114    11189      +75   \n- Partials       2113     2115       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/com/linkedin/pinot/client/ConnectionFactory.java | 44.44% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 68.75% <0%> (-9.73%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 71.11% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 70.06% <0%> (-6.13%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c07bbbf...e02435e. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@a186135). Click here to learn what that means.\nThe diff coverage is 48.57%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3326   +/-\n=========================================\n  Coverage          ?   70.71%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      985         \n  Lines             ?    45442         \n  Branches          ?     6100         \n=========================================\n  Hits              ?    32134         \n  Misses            ?    11199         \n  Partials          ?     2109\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 72.85% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 66% <42.1%> (\u00f8) | 0 <0> (?) | |\n| ...nkedin/pinot/controller/api/upload/ZKOperator.java | 68.23% <56.25%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a186135...2e5317b. Read the comment docs.\n. # Codecov Report\nMerging #3328 into master will increase coverage by 0.05%.\nThe diff coverage is 88.88%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3328      +/-\n============================================\n+ Coverage     70.79%   70.85%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files           984      984            \n  Lines         45369    45344      -25   \n  Branches       6092     6086       -6   \n============================================\n+ Hits          32121    32130       +9   \n+ Misses        11135    11109      -26   \n+ Partials       2113     2105       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.83% <0%> (+0.24%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ler/api/resources/PinotSegmentRestletResource.java | 29.41% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inkedin/pinot/controller/util/TableSizeReader.java | 96.07% <100%> (+1.96%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/linkedin/pinot/common/http/MultiGetRequest.java | 100% <100%> (+5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ontroller/api/resources/ServerTableSizeReader.java | 97.22% <100%> (+19.72%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-3.48%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e321bb8...29f2d5d. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@f0052c1). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #3332   +/-\n========================================\n  Coverage          ?   70.7%         \n  Complexity        ?       4         \n========================================\n  Files             ?     985         \n  Lines             ?   45424         \n  Branches          ?    6098         \n========================================\n  Hits              ?   32115         \n  Misses            ?   11199         \n  Partials          ?    2110\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...controller/helix/core/minion/PinotTaskManager.java | 72.41% <0%> (\u00f8) | 0 <0> (?) | |\n| ...nion/generator/ConvertToRawIndexTaskGenerator.java | 86% <0%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f0052c1...6ddf6ff. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@f0052c1). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3333   +/-\n=========================================\n  Coverage          ?   70.75%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      985         \n  Lines             ?    45418         \n  Branches          ?     6098         \n=========================================\n  Hits              ?    32135         \n  Misses            ?    11177         \n  Partials          ?     2106\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../broker/helix/LiveInstancesChangeListenerImpl.java | 66.66% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 63.33% <\u00f8> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f0052c1...b7cd68f. Read the comment docs.\n. # Codecov Report\nMerging #3336 into master will increase coverage by 0.04%.\nThe diff coverage is 93.54%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3336      +/-\n============================================\n+ Coverage      70.8%   70.84%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45760    45784      +24   \n  Branches       6135     6139       +4   \n============================================\n+ Hits          32400    32437      +37   \n+ Misses        11235    11219      -16   \n- Partials       2125     2128       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/core/query/pruner/PartitionSegmentPruner.java | 80% <0%> (-2.76%) | 0 <0> (\u00f8) | |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 80.07% <100%> (+0.4%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/query/pruner/SegmentPrunerService.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/common/response/broker/BrokerResponseNative.java | 89.01% <100%> (+0.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 80.32% <93.75%> (+1.42%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 45.45% <0%> (-15.16%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4f5b2dd...60cf509. Read the comment docs.\n. # Codecov Report\nMerging #3338 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3338      +/-\n============================================\n- Coverage     70.76%   70.71%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files           985      985            \n  Lines         45424    45424            \n  Branches       6098     6098            \n============================================\n- Hits          32145    32123      -22   \n- Misses        11165    11192      +27   \n+ Partials       2114     2109       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (-4.81%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 95143fa...19e58a0. Read the comment docs.\n. # Codecov Report\nMerging #3339 into master will increase coverage by 0.02%.\nThe diff coverage is 16.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3339      +/-\n============================================\n+ Coverage     70.69%   70.72%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           985      985            \n  Lines         45424    45430       +6   \n  Branches       6098     6098            \n============================================\n+ Hits          32114    32131      +17   \n+ Misses        11193    11190       -3   \n+ Partials       2117     2109       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 15.71% <0%> (-0.47%) | 4 <0> (\u00f8) | |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 82.22% <100%> (+0.4%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 45.94% <0%> (-8.11%) | 0% <0%> (\u00f8) | |\n| ...java/com/linkedin/pinot/core/transport/Server.java | 59.25% <0%> (-7.41%) | 0% <0%> (\u00f8) | |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 83.33% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.37% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update de24a02...26f856b. Read the comment docs.\n. # Codecov Report\nMerging #3343 into master will decrease coverage by 0.04%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3343      +/-\n============================================\n- Coverage     70.44%   70.39%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files           990      990            \n  Lines         45428    45430       +2   \n  Branches       6097     6097            \n============================================\n- Hits          32000    31982      -18   \n- Misses        11314    11330      +16   \n- Partials       2114     2118       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/pinot/common/utils/FileUploadDownloadClient.java | 71.83% <0%> (-1.03%) | 0 <0> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (-4.81%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-2.12%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bd80360...8da7e6e. Read the comment docs.\n. # Codecov Report\nMerging #3349 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3349      +/-\n============================================\n- Coverage     70.68%   70.66%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files           985      985            \n  Lines         45450    45453       +3   \n  Branches       6100     6100            \n============================================\n- Hits          32128    32120       -8   \n- Misses        11210    11219       +9   \n- Partials       2112     2114       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../com/linkedin/pinot/common/config/TableConfig.java | 80.23% <100%> (+0.23%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (-4.81%) | 0% <0%> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 76.72% <0%> (-2.59%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 39.85% <0%> (-1.45%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 74.82% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 315ec61...83b20ee. Read the comment docs.\n. # Codecov Report\nMerging #3352 into master will increase coverage by 0.09%.\nThe diff coverage is 79.66%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3352      +/-\n===========================================\n+ Coverage      70.7%   70.8%   +0.09%   \n  Complexity        4       4            \n===========================================\n  Files           985     987       +2   \n  Lines         45453   45432      -21   \n  Branches       6100    6089      -11   \n===========================================\n+ Hits          32139   32166      +27   \n+ Misses        11201   11153      -48   \n  Partials       2113    2113\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.92% <\u00f8> (-0.86%) | 0 <0> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 79.16% <0%> (+2.08%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 45.76% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...oller/api/resources/PinotTableRestletResource.java | 46.54% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 75% <100%> (+20.83%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 69.62% <100%> (+1.26%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.35% <100%> (-0.1%) | 0 <0> (\u00f8) | |\n| ...ot/core/realtime/stream/StreamDecoderProvider.java | 70% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/rebalance/DefaultRebalanceSegmentStrategy.java | 91.17% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/kafka/KafkaHighLevelStreamProviderConfig.java | 65.3% <100%> (+14.89%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f56bfbd...16e46e1. Read the comment docs.\n. # Codecov Report\nMerging #3354 into master will decrease coverage by 0.24%.\nThe diff coverage is 76.85%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3354      +/-\n============================================\n- Coverage      70.7%   70.46%   -0.25%   \n  Complexity        4        4            \n============================================\n  Files           985      992       +7   \n  Lines         45453    45581     +128   \n  Branches       6100     6107       +7   \n============================================\n- Hits          32139    32120      -19   \n- Misses        11201    11345     +144   \n- Partials       2113     2116       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.92% <0%> (-0.86%) | 0 <0> (\u00f8) | |\n| ...ot/common/messages/TimeboundaryRefreshMessage.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 92.05% <100%> (+1.71%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 72.17% <57.14%> (-0.98%) | 0 <0> (\u00f8) | |\n| ...elix/TimeboundaryRefreshMessageHandlerFactory.java | 71.42% <71.42%> (\u00f8) | 0 <0> (?) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.75% <82.05%> (-0.09%) | 0 <0> (\u00f8) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 27.81% <0%> (-49.27%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/core/crypt/NoOpPinotCrypter.java | 60% <0%> (-20%) | 0% <0%> (\u00f8) | |\n| ...inot/broker/queryquota/TableQueryQuotaManager.java | 69.12% <0%> (-19.65%) | 0% <0%> (\u00f8) | |\n| ... and 79 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f56bfbd...b906176. Read the comment docs.\n. # Codecov Report\nMerging #3356 into master will increase coverage by 10.46%.\nThe diff coverage is 94.23%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3356       +/-\n=============================================\n+ Coverage      60.2%   70.67%   +10.46%   \n  Complexity        4        4             \n=============================================\n  Files           987      987             \n  Lines         45487    45505       +18   \n  Branches       6097     6104        +7   \n=============================================\n+ Hits          27387    32159     +4772   \n+ Misses        16109    11223     -4886   \n- Partials       1991     2123      +132\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.25% <50%> (+6.41%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 70% <92.3%> (+8.09%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 74.78% <97.29%> (+11.27%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 57.87% <0%> (-0.45%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.76% <0%> (+0.74%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 315 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 51fa4b9...42fada6. Read the comment docs.\n. # Codecov Report\nMerging #3361 into master will increase coverage by 0.09%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3361      +/-\n============================================\n+ Coverage     70.67%   70.76%   +0.09%   \n  Complexity        4        4            \n============================================\n  Files           987      987            \n  Lines         45487    45487            \n  Branches       6098     6098            \n============================================\n+ Hits          32146    32191      +45   \n+ Misses        11226    11183      -43   \n+ Partials       2115     2113       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/data/manager/BaseTableDataManager.java | 92.59% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 90.9% <0%> (-1.02%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 79.38% <0%> (-0.77%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 78.47% <0%> (-0.7%) | 0% <0%> (\u00f8) | |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 74.41% <0%> (+1.16%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 92.59% <0%> (+1.23%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ef023d1...92026d9. Read the comment docs.\n. # Codecov Report\nMerging #3364 into master will decrease coverage by 0.03%.\nThe diff coverage is 86.55%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3364      +/-\n============================================\n- Coverage     70.66%   70.63%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files           986      987       +1   \n  Lines         45444    45423      -21   \n  Branches       6098     6089       -9   \n============================================\n- Hits          32112    32083      -29   \n- Misses        11204    11220      +16   \n+ Partials       2128     2120       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/realtime/stream/StreamConsumerFactory.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/realtime/impl/kafka/KafkaConsumerManager.java | 59.25% <100%> (+1.56%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...realtime/stream/StreamConsumerFactoryProvider.java | 62.5% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 68.75% <100%> (-0.88%) | 0 <0> (\u00f8) | |\n| .../realtime/segment/FlushThresholdUpdateManager.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...realtime/impl/kafka/KafkaLowLevelStreamConfig.java | 50% <50%> (\u00f8) | 0 <0> (?) | |\n| ...ealtime/impl/kafka/KafkaHighLevelStreamConfig.java | 74.07% <74.07%> (\u00f8) | 0 <0> (?) | |\n| ...re/realtime/stream/PartitionLevelStreamConfig.java | 76% <76%> (\u00f8) | 0 <0> (?) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 74.64% <83.33%> (-2.36%) | 0 <0> (\u00f8) | |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b498aed...de15991. Read the comment docs.\n. # Codecov Report\nMerging #3367 into master will increase coverage by 0.04%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3367      +/-\n============================================\n+ Coverage     70.64%   70.69%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files           987      987            \n  Lines         45487    45487            \n  Branches       6097     6097            \n============================================\n+ Hits          32135    32157      +22   \n+ Misses        11228    11212      -16   \n+ Partials       2124     2118       -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/server/starter/helix/HelixServerStarter.java | 54.54% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 84.44% <0%> (-8.89%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (-4.81%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c04c9f1...2c3c4ad. Read the comment docs.\n. # Codecov Report\nMerging #3369 into master will increase coverage by 0.01%.\nThe diff coverage is 81.57%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3369      +/-\n============================================\n+ Coverage      70.5%   70.51%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           990      990            \n  Lines         45451    45481      +30   \n  Branches       6100     6104       +4   \n============================================\n+ Hits          32044    32073      +29   \n- Misses        11298    11304       +6   \n+ Partials       2109     2104       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 33.92% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../java/com/linkedin/pinot/minion/MinionStarter.java | 85.52% <100%> (+0.8%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 64.76% <100%> (+0.68%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 65.84% <100%> (-0.17%) | 0 <0> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 60.98% <66.66%> (+0.19%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/core/crypt/PinotCrypterFactory.java | 75% <80%> (-2.78%) | 0 <0> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/core/crypt/NoOpPinotCrypter.java | 60% <0%> (-20%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 86f65e0...e753f6f. Read the comment docs.\n. # Codecov Report\nMerging #3370 into master will increase coverage by <.01%.\nThe diff coverage is 61.76%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3370      +/-\n============================================\n+ Coverage     70.46%   70.46%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files           990      990            \n  Lines         45481    45488       +7   \n  Branches       6104     6102       -2   \n============================================\n+ Hits          32049    32054       +5   \n- Misses        11326    11329       +3   \n+ Partials       2106     2105       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 84.09% <\u00f8> (+1.86%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 40.13% <33.33%> (-0.59%) | 0 <0> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.14% <66.66%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 78.57% <78.94%> (+1.84%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 72.27% <0%> (-5.95%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d347e9...11f6629. Read the comment docs.\n. # Codecov Report\nMerging #3371 into master will increase coverage by <.01%.\nThe diff coverage is 38.55%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3371      +/-\n============================================\n+ Coverage     70.57%   70.57%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45611    45664      +53   \n  Branches       6108     6115       +7   \n============================================\n+ Hits          32189    32227      +38   \n- Misses        11311    11327      +16   \n+ Partials       2111     2110       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 12.08% <0%> (-2.78%) | 4 <0> (\u00f8) | |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ntroller/api/resources/FileUploadPathProvider.java | 73.91% <50%> (+1.91%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 78.4% <53.84%> (-1.07%) | 0 <0> (\u00f8) | |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 85.71% <68%> (-7.31%) | 0 <0> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.39% <0%> (-1.66%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e8e20e...033e9b9. Read the comment docs.\n. # Codecov Report\nMerging #3372 into master will decrease coverage by 0.41%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3372      +/-\n===========================================\n- Coverage     70.82%   70.4%   -0.42%   \n  Complexity        4       4            \n===========================================\n  Files           987     992       +5   \n  Lines         45423   45578     +155   \n  Branches       6089    6107      +18   \n===========================================\n- Hits          32171   32090      -81   \n- Misses        11134   11365     +231   \n- Partials       2118    2123       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 27.81% <0%> (-51.35%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...ot/core/realtime/stream/PartitionCountFetcher.java | 54.16% <0%> (-20.84%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/core/crypt/NoOpPinotCrypter.java | 60% <0%> (-20%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 77.35% <0%> (-10.7%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 66.87% <0%> (-9.32%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/io/util/FixedByteValueReaderWriter.java | 87.5% <0%> (-7.74%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 57 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 78b6210...45c0ecf. Read the comment docs.\n. # Codecov Report\nMerging #3374 into master will decrease coverage by 0.06%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3374      +/-\n============================================\n- Coverage     70.82%   70.76%   -0.07%   \n  Complexity        4        4            \n============================================\n  Files           987      987            \n  Lines         45423    45423            \n  Branches       6089     6089            \n============================================\n- Hits          32171    32143      -28   \n- Misses        11134    11161      +27   \n- Partials       2118     2119       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/realtime/impl/kafka/KafkaJSONMessageDecoder.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 78.18% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.27% <0%> (-2.28%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 77.37% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 78b6210...a4d8c0d. Read the comment docs.\n. # Codecov Report\nMerging #3377 into master will increase coverage by 10.18%.\nThe diff coverage is 25%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3377       +/-\n=============================================\n+ Coverage     60.26%   70.45%   +10.18%   \n  Complexity        4        4             \n=============================================\n  Files           990      990             \n  Lines         45487    45484        -3   \n  Branches       6099     6099             \n=============================================\n+ Hits          27415    32045     +4630   \n+ Misses        16073    11323     -4750   \n- Partials       1999     2116      +117\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 65.32% <25%> (+60.87%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 54.16% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.76% <0%> (+0.74%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 70.73% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.05% <0%> (+0.89%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (+0.96%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.45% <0%> (+1.04%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 304 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fcab1ba...2aa3f08. Read the comment docs.\n. # Codecov Report\nMerging #3378 into master will increase coverage by 10.59%.\nThe diff coverage is 100%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3378       +/-\n=============================================\n+ Coverage     60.22%   70.81%   +10.59%   \n  Complexity        4        4             \n=============================================\n  Files           987      987             \n  Lines         45423    45440       +17   \n  Branches       6089     6092        +3   \n=============================================\n+ Hits          27356    32179     +4823   \n+ Misses        16074    11138     -4936   \n- Partials       1993     2123      +130\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/linkedin/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/core/query/reduce/BrokerReduceService.java | 78.78% <100%> (+23.96%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/operator/CombineGroupByOperator.java | 76.19% <100%> (+1.8%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.5% <100%> (+69.34%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/common/response/broker/BrokerResponseNative.java | 86.66% <100%> (+6.38%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/operator/blocks/IntermediateResultsBlock.java | 74.1% <100%> (+8.36%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 319 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0d92355...37888c0. Read the comment docs.\n. # Codecov Report\nMerging #3379 into master will increase coverage by 0.01%.\nThe diff coverage is 90.04%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3379      +/-\n============================================\n+ Coverage     70.46%   70.48%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files           990      992       +2   \n  Lines         45481    45519      +38   \n  Branches       6104     6105       +1   \n============================================\n+ Hits          32049    32082      +33   \n- Misses        11326    11331       +5   \n  Partials       2106     2106\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 69.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/linkedin/pinot/common/config/RoutingConfig.java | 45.45% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 45.76% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ing/builder/BalancedRandomRoutingTableBuilder.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 85.18% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...roker/routing/selector/DefaultSegmentSelector.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...roker/routing/selector/SegmentSelectorFactory.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...uting/builder/LargeClusterRoutingTableBuilder.java | 47.05% <100%> (-18.66%) | 0 <0> (\u00f8) | |\n| ...builder/BasePartitionAwareRoutingTableBuilder.java | 71.79% <66.66%> (+0.74%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <71.42%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d347e9...b3b1451. Read the comment docs.\n. # Codecov Report\nMerging #3380 into master will increase coverage by 10.59%.\nThe diff coverage is 100%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3380       +/-\n=============================================\n+ Coverage     60.22%   70.81%   +10.59%   \n  Complexity        4        4             \n=============================================\n  Files           987      987             \n  Lines         45423    45429        +6   \n  Branches       6089     6090        +1   \n=============================================\n+ Hits          27356    32171     +4815   \n+ Misses        16074    11138     -4936   \n- Partials       1993     2120      +127\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...kedin/pinot/core/realtime/stream/StreamConfig.java | 99.31% <100%> (+0.02%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.76% <0%> (+0.74%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 70.73% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.05% <0%> (+0.89%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 318 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0d92355...5f34c25. Read the comment docs.\n. # Codecov Report\nMerging #3385 into master will decrease coverage by 0.07%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3385      +/-\n============================================\n- Coverage     70.54%   70.47%   -0.08%   \n  Complexity        4        4            \n============================================\n  Files           990      990            \n  Lines         45430    45450      +20   \n  Branches       6097     6097            \n============================================\n- Hits          32049    32030      -19   \n- Misses        11275    11311      +36   \n- Partials       2106     2109       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/io/util/DictionaryDelegatingValueReader.java | 30.76% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/io/util/FixedByteValueReaderWriter.java | 87.8% <84%> (-7.44%) | 0 <0> (\u00f8) | |\n| ...om/linkedin/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 23.8% <0%> (-19.05%) | 0% <0%> (\u00f8) | |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 58.82% <0%> (-17.65%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 526ba5d...7e47037. Read the comment docs.\n. # Codecov Report\nMerging #3386 into master will increase coverage by 10.13%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3386       +/-\n============================================\n+ Coverage     60.26%   70.4%   +10.13%   \n  Complexity        4       4             \n============================================\n  Files           990     990             \n  Lines         45487   45503       +16   \n  Branches       6099    6100        +1   \n============================================\n+ Hits          27415   32037     +4622   \n+ Misses        16073   11357     -4716   \n- Partials       1999    2109      +110\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 14.86% <0%> (-0.42%) | 4 <0> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 78.57% <100%> (+4.46%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 76.78% <60%> (-7.31%) | 0 <0> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 312 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fcab1ba...ad4c9d1. Read the comment docs.\n. # Codecov Report\nMerging #3393 into master will decrease coverage by 0.01%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3393      +/-\n============================================\n- Coverage     70.47%   70.46%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           992      992            \n  Lines         45580    45581       +1   \n  Branches       6107     6107            \n============================================\n- Hits          32124    32120       -4   \n- Misses        11341    11344       +3   \n- Partials       2115     2117       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...re/data/manager/config/TableDataManagerConfig.java | 94.44% <\u00f8> (-0.8%) | 0 <0> (\u00f8) | |\n| ...server/starter/helix/HelixInstanceDataManager.java | 81.45% <100%> (+0.15%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 40.87% <100%> (+1.02%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...data/manager/offline/TableDataManagerProvider.java | 57.14% <60%> (-2.86%) | 0 <0> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...java/com/linkedin/pinot/core/transport/Server.java | 59.25% <0%> (-7.41%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0a4712f...127d548. Read the comment docs.\n. # Codecov Report\nMerging #3397 into master will decrease coverage by <.01%.\nThe diff coverage is 80%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3397      +/-\n============================================\n- Coverage     70.47%   70.46%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files           992      992            \n  Lines         45580    45577       -3   \n  Branches       6107     6107            \n============================================\n- Hits          32124    32118       -6   \n+ Misses        11341    11336       -5   \n- Partials       2115     2123       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/core/data/extractors/PlainFieldExtractor.java | 81.2% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/data/function/FunctionExpressionEvaluator.java | 95.34% <88.88%> (-0.31%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0a4712f...6820f57. Read the comment docs.\n. # Codecov Report\nMerging #3402 into master will increase coverage by 10.1%.\nThe diff coverage is 87.32%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3402      +/-\n============================================\n+ Coverage     60.37%   70.47%   +10.1%   \n  Complexity        4        4            \n============================================\n  Files           992      993       +1   \n  Lines         45578    45635      +57   \n  Branches       6107     6111       +4   \n============================================\n+ Hits          27517    32163    +4646   \n+ Misses        16065    11353    -4712   \n- Partials       1996     2119     +123\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.41% <100%> (+9.38%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/core/realtime/stream/StreamConfig.java | 99.31% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/realtime/stream/PartitionOffsetFetcher.java | 58.62% <100%> (+58.62%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...altime/impl/kafka/KafkaStreamMetadataProvider.java | 44.7% <25%> (+25.16%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...din/pinot/core/realtime/stream/OffsetCriteria.java | 89.47% <89.47%> (\u00f8) | 0 <0> (?) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.77% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 314 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0c31ba5...3cdb96f. Read the comment docs.\n. # Codecov Report\nMerging #3418 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3418      +/-\n============================================\n- Coverage     70.52%   70.48%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files           993      993            \n  Lines         45635    45635            \n  Branches       6111     6111            \n============================================\n- Hits          32186    32166      -20   \n- Misses        11331    11347      +16   \n- Partials       2118     2122       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.39% <0%> (-1.66%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.91% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/operator/CombineGroupByOperator.java | 75% <0%> (-1.2%) | 0% <0%> (\u00f8) | |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 73.25% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cfb97d5...b00b920. Read the comment docs.\n. # Codecov Report\nMerging #3421 into master will decrease coverage by 22.72%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3421       +/-\n============================================\n- Coverage     70.52%   47.8%   -22.73%   \n============================================\n  Files           993     993             \n  Lines         45635   45635             \n  Branches       6111    6111             \n============================================\n- Hits          32186   21814    -10372   \n- Misses        11331   22048    +10717   \n+ Partials       2118    1773      -345\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/query/scheduler/QuerySchedulerFactory.java | 26.92% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/broker/queryquota/QueryQuotaConfig.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...aggregation/function/AvgMVAggregationFunction.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/transport/common/NoneType.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...e/startree/v2/builder/OnHeapSingleTreeBuilder.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...a/aggregator/PercentileTDigestValueAggregator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/config/OfflineTagConfig.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...rm/transformer/datetime/SDFToEpochTransformer.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ore/segment/memory/PinotNonNativeOrderLBuffer.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 496 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cfb97d5...320c2af. Read the comment docs.\n. # Codecov Report\nMerging #3423 into master will increase coverage by 10.04%.\nThe diff coverage is 70.58%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3423       +/-\n=============================================\n+ Coverage      60.4%   70.45%   +10.04%   \n  Complexity        4        4             \n=============================================\n  Files           993      993             \n  Lines         45638    45628       -10   \n  Branches       6111     6111             \n=============================================\n+ Hits          27567    32146     +4579   \n+ Misses        16067    11350     -4717   \n- Partials       2004     2132      +128\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.75% <\u00f8> (+6.08%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.07% <\u00f8> (+9.52%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 39.58% <\u00f8> (+18.15%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ing/builder/GeneratorBasedRoutingTableBuilder.java | 96.73% <\u00f8> (+2.17%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 87.02% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../broker/broker/helix/DefaultHelixBrokerConfig.java | 93.75% <\u00f8> (-0.37%) | 0 <0> (\u00f8) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.05% <\u00f8> (+0.89%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/realtime/impl/kafka/KafkaJSONMessageDecoder.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.96% <\u00f8> (+27.4%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 326 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 75aa028...2e737c7. Read the comment docs.\n. # Codecov Report\nMerging #3424 into master will decrease coverage by 0.05%.\nThe diff coverage is 81.01%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3424      +/-\n============================================\n- Coverage     70.59%   70.53%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           994      997       +3   \n  Lines         45702    45610      -92   \n  Branches       6119     6108      -11   \n============================================\n- Hits          32262    32173      -89   \n- Misses        11318    11324       +6   \n+ Partials       2122     2113       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.41% <\u00f8> (-0.35%) | 0 <0> (\u00f8) | |\n| ...va/com/linkedin/pinot/common/utils/StringUtil.java | 70.58% <\u00f8> (-3.1%) | 0 <0> (\u00f8) | |\n| ...core/segment/creator/SegmentIndexCreationInfo.java | 92.3% <\u00f8> (-3.7%) | 0 <0> (\u00f8) | |\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/core/minion/BackfillDateTimeColumn.java | 55.55% <0%> (-0.9%) | 0 <0> (\u00f8) | |\n| ...inot/core/data/readers/GenericRowRecordReader.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/data/recordtransformer/TimeTransformer.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.38% <42.1%> (+0.2%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../data/recordtransformer/ExpressionTransformer.java | 47.36% <47.36%> (\u00f8) | 0 <0> (?) | |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 73.13% <66.66%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 38 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5ee6df6...ef4c29d. Read the comment docs.\n. # Codecov Report\nMerging #3425 into master will increase coverage by 0.06%.\nThe diff coverage is 81.81%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3425      +/-\n============================================\n+ Coverage     70.45%   70.52%   +0.06%   \n  Complexity        4        4            \n============================================\n  Files           993      993            \n  Lines         45634    45640       +6   \n  Branches       6111     6112       +1   \n============================================\n+ Hits          32153    32189      +36   \n+ Misses        11350    11329      -21   \n+ Partials       2131     2122       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...altime/impl/kafka/KafkaStreamConfigProperties.java | 25% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/realtime/stream/StreamConfigProperties.java | 66.66% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/core/realtime/stream/StreamConfig.java | 99.33% <100%> (+0.02%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 80.23% <60%> (+0.23%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 92% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f70c9c3...2fd07bc. Read the comment docs.\n. # Codecov Report\nMerging #3426 into master will decrease coverage by 12.7%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3426       +/-\n=============================================\n- Coverage      60.4%   47.69%   -12.71%   \n=============================================\n  Files           993      993             \n  Lines         45638    45644        +6   \n  Branches       6111     6111             \n=============================================\n- Hits          27567    21770     -5797   \n- Misses        16067    22092     +6025   \n+ Partials       2004     1782      -222\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 45.79% <0%> (-18.23%) | 0 <0> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 55.37% <100%> (+11.81%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/metrics/ServerGauge.java | 95.83% <100%> (+4.92%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/broker/queryquota/QueryQuotaConfig.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...aggregation/function/AvgMVAggregationFunction.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/transport/common/NoneType.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...e/startree/v2/builder/OnHeapSingleTreeBuilder.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...a/aggregator/PercentileTDigestValueAggregator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 676 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 75aa028...8050693. Read the comment docs.\n. # Codecov Report\nMerging #3427 into master will decrease coverage by 0.05%.\nThe diff coverage is 74.19%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3427      +/-\n============================================\n- Coverage     70.59%   70.53%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           993      994       +1   \n  Lines         45640    45702      +62   \n  Branches       6112     6119       +7   \n============================================\n+ Hits          32220    32238      +18   \n- Misses        11309    11338      +29   \n- Partials       2111     2126      +15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/segment/name/DefaultSegmentNameGenerator.java | 89.74% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 55.97% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...gment/name/NormalizedDateSegmentNameGenerator.java | 74.19% <74.19%> (\u00f8) | 0 <0> (?) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 72.27% <0%> (-5.95%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4f2696d...3084607. Read the comment docs.\n. # Codecov Report\nMerging #3433 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3433      +/-\n============================================\n+ Coverage     70.59%   70.61%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files           994      994            \n  Lines         45702    45703       +1   \n  Branches       6119     6119            \n============================================\n+ Hits          32262    32273      +11   \n+ Misses        11318    11312       -6   \n+ Partials       2122     2118       -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...t/core/query/selection/SelectionOperatorUtils.java | 93.14% <100%> (+0.02%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.39% <0%> (-1.66%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.91% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/data/manager/BaseTableDataManager.java | 92.59% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 74.6% <0%> (-0.53%) | 0% <0%> (\u00f8) | |\n| ... and 10 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5ee6df6...b4c35dd. Read the comment docs.\n. # Codecov Report\nMerging #3434 into master will decrease coverage by 0.02%.\nThe diff coverage is 92.02%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3434      +/-\n============================================\n- Coverage     70.57%   70.54%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45610    45627      +17   \n  Branches       6108     6107       -1   \n============================================\n- Hits          32187    32186       -1   \n- Misses        11310    11321      +11   \n- Partials       2113     2120       +7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 69.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...om/linkedin/pinot/common/config/RoutingConfig.java | 45.45% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/broker/routing/RoutingTableBuilderFactory.java | 45.76% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...uting/builder/LargeClusterRoutingTableBuilder.java | 47.05% <100%> (-18.66%) | 0 <0> (\u00f8) | |\n| ...der/PartitionAwareRealtimeRoutingTableBuilder.java | 85.18% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.39% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ing/builder/BalancedRandomRoutingTableBuilder.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ing/builder/DefaultOfflineRoutingTableBuilder.java | 47.05% <66.66%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...builder/BasePartitionAwareRoutingTableBuilder.java | 72.97% <75%> (+1.92%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5c296de...f0c16cd. Read the comment docs.\n. # Codecov Report\nMerging #3436 into master will decrease coverage by 0.05%.\nThe diff coverage is 85.71%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3436      +/-\n============================================\n- Coverage     70.57%   70.51%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           997      998       +1   \n  Lines         45611    45669      +58   \n  Branches       6108     6117       +9   \n============================================\n+ Hits          32189    32205      +16   \n- Misses        11311    11352      +41   \n- Partials       2111     2112       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/realtime/stream/StreamConsumerFactory.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/realtime/stream/StreamConfigProperties.java | 66.66% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../realtime/impl/kafka/KafkaStreamLevelConsumer.java | 76.92% <\u00f8> (+5.49%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/realtime/impl/kafka/SimpleConsumerFactory.java | 0% <0%> (-100%) | 0 <0> (\u00f8) | |\n| ...kedin/pinot/core/realtime/stream/StreamConfig.java | 99.33% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/realtime/impl/kafka/KafkaConsumerFactory.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 85.71% <0%> (-7.31%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e8e20e...af35b4f. Read the comment docs.\n. # Codecov Report\nMerging #3438 into master will increase coverage by 10.03%.\nThe diff coverage is 60%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3438       +/-\n============================================\n+ Coverage     60.47%   70.5%   +10.03%   \n  Complexity        4       4             \n============================================\n  Files           999     999             \n  Lines         45676   45680        +4   \n  Branches       6110    6110             \n============================================\n+ Hits          27621   32207     +4586   \n+ Misses        16051   11359     -4692   \n- Partials       2004    2114      +110\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 85.71% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...a/com/linkedin/pinot/filesystem/HadoopPinotFS.java | 0% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 12.08% <\u00f8> (\u00f8) | 4 <0> (?) | |\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/filesystem/PinotFSFactory.java | 80.55% <60%> (\u00f8) | 0 <0> (?) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...om/linkedin/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...not/transport/scattergather/ScatterGatherImpl.java | 55.06% <0%> (-0.64%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 310 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b70f2d5...a3647fc. Read the comment docs.\n. # Codecov Report\nMerging #3439 into master will decrease coverage by 0.02%.\nThe diff coverage is 76%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3439      +/-\n============================================\n- Coverage     70.57%   70.55%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45611    45571      -40   \n  Branches       6108     6099       -9   \n============================================\n- Hits          32189    32151      -38   \n+ Misses        11311    11307       -4   \n- Partials       2111     2113       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...re/data/recordtransformer/DataTypeTransformer.java | 85.71% <\u00f8> (-0.26%) | 0 <0> (\u00f8) | |\n| ...or/impl/fwd/SingleValueVarByteRawIndexCreator.java | 70.58% <\u00f8> (+7.43%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/java/com/linkedin/pinot/core/util/AvroUtils.java | 52.89% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/segment/index/readers/BytesDictionary.java | 100% <100%> (+9.09%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ent/index/column/PhysicalColumnIndexContainer.java | 90.74% <100%> (-0.17%) | 0 <0> (\u00f8) | |\n| .../data/recordtransformer/SanitationTransformer.java | 91.3% <100%> (-2.25%) | 0 <0> (\u00f8) | |\n| ...segment/creator/impl/SegmentDictionaryCreator.java | 87.14% <100%> (-0.36%) | 0 <0> (\u00f8) | |\n| .../impl/dictionary/BytesOnHeapMutableDictionary.java | 79.31% <55.55%> (+9.61%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/dictionary/BytesOffHeapMutableDictionary.java | 80.95% <71.42%> (+17.49%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...impl/stats/BytesColumnPredIndexStatsCollector.java | 56.6% <80.95%> (+4.22%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2e8e20e...556a165. Read the comment docs.\n. # Codecov Report\nMerging #3441 into master will decrease coverage by 0.06%.\nThe diff coverage is 23.07%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3441      +/-\n============================================\n- Coverage     70.57%   70.51%   -0.07%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45611    45619       +8   \n  Branches       6108     6110       +2   \n============================================\n- Hits          32189    32166      -23   \n- Misses        11311    11334      +23   \n- Partials       2111     2119       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../com/linkedin/pinot/controller/ControllerConf.java | 40.13% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 26.95% <16.66%> (-0.87%) | 0 <0> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 80% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.39% <0%> (-1.66%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.59%) | 0% <0%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0acea8f...3beaa74. Read the comment docs.\n. # Codecov Report\nMerging #3443 into master will decrease coverage by 0.22%.\nThe diff coverage is 21.27%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3443      +/-\n============================================\n- Coverage     70.52%   70.29%   -0.23%   \n  Complexity        4        4            \n============================================\n  Files           998     1001       +3   \n  Lines         45674    45826     +152   \n  Branches       6117     6134      +17   \n============================================\n+ Hits          32213    32215       +2   \n- Misses        11348    11494     +146   \n- Partials       2113     2117       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/utils/CommonConstants.java | 39.58% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/controller/api/upload/batch/SegmentsInBatch.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...upload/batch/SuccessBatchIdGenerationResponse.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...edin/pinot/controller/api/resources/TableSize.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/controller/api/upload/batch/SegmentEntry.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...not/controller/validation/StorageQuotaChecker.java | 42.2% <19.35%> (-32.12%) | 0 <0> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.5% <20%> (-0.25%) | 0 <0> (\u00f8) | |\n| .../pinot/controller/api/upload/SegmentValidator.java | 58.69% <33.33%> (-1.31%) | 0 <0> (\u00f8) | |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 76.16% <50%> (-2.82%) | 0 <0> (\u00f8) | |\n| ...nkedin/pinot/controller/api/upload/ZKOperator.java | 65.16% <55.55%> (-3.07%) | 0 <0> (\u00f8) | |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b3c2e08...a7111e5. Read the comment docs.\n. # Codecov Report\nMerging #3445 into master will decrease coverage by 0.01%.\nThe diff coverage is 91.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3445      +/-\n============================================\n- Coverage     70.53%   70.51%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files           999      999            \n  Lines         45668    45676       +8   \n  Branches       6110     6112       +2   \n============================================\n- Hits          32211    32208       -3   \n- Misses        11346    11351       +5   \n- Partials       2111     2117       +6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../data/recordtransformer/SanitationTransformer.java | 100% <100%> (+8.69%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/common/utils/StringUtil.java | 72.22% <100%> (+1.63%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 75.6% <82.35%> (-0.34%) | 0 <0> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a5291e1...2fb33f3. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@283c70a). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3446   +/-\n=========================================\n  Coverage          ?   70.61%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      999         \n  Lines             ?    45668         \n  Branches          ?     6110         \n=========================================\n  Hits              ?    32247         \n  Misses            ?    11315         \n  Partials          ?     2106\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 283c70a...6ae26c2. Read the comment docs.\n. # Codecov Report\nMerging #3448 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3448      +/-\n============================================\n+ Coverage     70.53%   70.54%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files           999      999            \n  Lines         45668    45668            \n  Branches       6110     6110            \n============================================\n+ Hits          32211    32215       +4   \n+ Misses        11346    11342       -4   \n  Partials       2111     2111\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-8.89%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.9% <0%> (-3.23%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.27% <0%> (-2.28%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.17% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.91% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a5291e1...ccd8830. Read the comment docs.\n. # Codecov Report\nMerging #3453 into master will increase coverage by 10.02%.\nThe diff coverage is 25%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3453       +/-\n============================================\n+ Coverage     60.48%   70.5%   +10.02%   \n  Complexity        4       4             \n============================================\n  Files           999     999             \n  Lines         45676   45676             \n  Branches       6112    6110        -2   \n============================================\n+ Hits          27626   32205     +4579   \n+ Misses        16046   11364     -4682   \n- Partials       2004    2107      +103\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/pinot/core/startree/OffHeapStarTreeBuilder.java | 84.17% <0%> (+0.4%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/startree/v2/builder/StarTreeIndexCombiner.java | 92.3% <100%> (+3.02%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/linkedin/pinot/common/utils/FileUtils.java | 58.33% <16.66%> (-29.17%) | 0 <0> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 58.31% <0%> (+0.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 54.16% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.41% <0%> (+0.77%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 306 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 283c70a...6e4d5a0. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b4496b6). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #3466   +/-\n========================================\n  Coverage          ?   70.5%         \n  Complexity        ?       4         \n========================================\n  Files             ?     999         \n  Lines             ?   45671         \n  Branches          ?    6109         \n========================================\n  Hits              ?   32200         \n  Misses            ?   11358         \n  Partials          ?    2113\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 80.2% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b4496b6...5cb7a20. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b4496b6). Click here to learn what that means.\nThe diff coverage is 93.33%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3470   +/-\n=========================================\n  Coverage          ?   70.56%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      999         \n  Lines             ?    45678         \n  Branches          ?     6112         \n=========================================\n  Hits              ?    32232         \n  Misses            ?    11333         \n  Partials          ?     2113\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../com/linkedin/pinot/core/plan/CombinePlanNode.java | 76.92% <93.33%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b4496b6...e7703de. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@b4496b6). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3472   +/-\n=========================================\n  Coverage          ?   70.45%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      999         \n  Lines             ?    45674         \n  Branches          ?     6110         \n=========================================\n  Hits              ?    32180         \n  Misses            ?    11369         \n  Partials          ?     2125\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/core/io/writer/impl/DirectMemoryManager.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...riter/impl/v1/FixedByteChunkSingleValueWriter.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...l/FixedByteSingleValueMultiColumnReaderWriter.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| .../FixedByteSingleColumnSingleValueReaderWriter.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| .../writer/impl/v1/VarByteChunkSingleValueWriter.java | 100% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...riter/impl/FixedByteSingleValueMultiColWriter.java | 85.1% <100%> (\u00f8) | 0 <0> (?) | |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 70.98% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b4496b6...1c86016. Read the comment docs.\n. # Codecov Report\nMerging #3474 into master will increase coverage by 0.03%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3474      +/-\n============================================\n+ Coverage     70.48%   70.52%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files           999      999            \n  Lines         45669    45672       +3   \n  Branches       6109     6109            \n============================================\n+ Hits          32192    32212      +20   \n+ Misses        11366    11346      -20   \n- Partials       2111     2114       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.02% <50%> (-0.76%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-3.48%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.91% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 92.57% <0%> (-0.58%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.21% <0%> (-0.17%) | 0% <0%> (\u00f8) | |\n| ... and 11 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a7df756...26fc225. Read the comment docs.\n. # Codecov Report\nMerging #3475 into master will increase coverage by 0.08%.\nThe diff coverage is 89.06%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3475      +/-\n============================================\n+ Coverage     70.58%   70.66%   +0.08%   \n  Complexity        4        4            \n============================================\n  Files           999      999            \n  Lines         45669    45664       -5   \n  Branches       6109     6109            \n============================================\n+ Hits          32236    32270      +34   \n+ Misses        11329    11266      -63   \n- Partials       2104     2128      +24\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...edin/pinot/core/periodictask/BasePeriodicTask.java | 70% <0%> (-30%) | 0 <0> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.95% <100%> (-6.25%) | 0 <0> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 97.14% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 76.92% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 84.61% <100%> (-2.41%) | 0 <0> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.84% <100%> (+0.86%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/controller/validation/ValidationManager.java | 66.42% <100%> (+39.47%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...controller/helix/core/minion/PinotTaskManager.java | 83.67% <66.66%> (-0.33%) | 0 <0> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.66% <84%> (+10.66%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c9a4e60...4c27e47. Read the comment docs.\n. # Codecov Report\nMerging #3476 into master will increase coverage by 0.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3476      +/-\n===========================================\n+ Coverage     70.48%   70.5%   +0.01%   \n  Complexity        4       4            \n===========================================\n  Files           999     999            \n  Lines         45669   45668       -1   \n  Branches       6109    6108       -1   \n===========================================\n+ Hits          32192   32196       +4   \n+ Misses        11366   11356      -10   \n- Partials       2111    2116       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...creator/RecordReaderSegmentCreationDataSource.java | 69.23% <100%> (-1.14%) | 0 <0> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.37% <100%> (-1.02%) | 0 <0> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 81.34% <100%> (+2.59%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/data/recordtransformer/CompoundTransformer.java | 84.61% <100%> (+1.28%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 90.29% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/data/recordtransformer/TimeTransformer.java | 88.88% <100%> (-11.12%) | 0 <0> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.95% <0%> (-6.25%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a7df756...e5389c1. Read the comment docs.\n. # Codecov Report\nMerging #3479 into master will increase coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3479      +/-\n============================================\n+ Coverage     70.53%   70.58%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files           999      999            \n  Lines         45669    45669            \n  Branches       6109     6109            \n============================================\n+ Hits          32212    32237      +25   \n+ Misses        11347    11323      -24   \n+ Partials       2110     2109       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...roker/routing/builder/BaseRoutingTableBuilder.java | 98.48% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-3.48%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.9% <0%> (-3.23%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 75.91% <0%> (-1.46%) | 0% <0%> (\u00f8) | |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.33% <0%> (-1.34%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.38% <0%> (+0.16%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1ffadef...d540048. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@d77982d). Click here to learn what that means.\nThe diff coverage is 90%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #3484   +/-\n========================================\n  Coverage          ?   58.8%         \n  Complexity        ?       4         \n========================================\n  Files             ?    1148         \n  Lines             ?   58097         \n  Branches          ?    8028         \n========================================\n  Hits              ?   34164         \n  Misses            ?   21556         \n  Partials          ?    2377\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inkedin/pinot/common/utils/time/TimeConverter.java | 88.88% <88.88%> (\u00f8) | 0 <0> (?) | |\n| ...t/core/data/recordtransformer/TimeTransformer.java | 93.93% <90.9%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d77982d...c9ce689. Read the comment docs.\n. # Codecov Report\nMerging #3494 into master will decrease coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3494      +/-\n============================================\n- Coverage     70.58%   70.55%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files           999      999            \n  Lines         45669    45669            \n  Branches       6109     6109            \n============================================\n- Hits          32236    32222      -14   \n- Misses        11329    11335       +6   \n- Partials       2104     2112       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 78.18% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 76.36% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.54% <0%> (-1.59%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 65.62% <0%> (-1.25%) | 0% <0%> (\u00f8) | |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 73.25% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 91.39% <0%> (-0.67%) | 0% <0%> (\u00f8) | |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6711f67...9aae356. Read the comment docs.\n. # Codecov Report\nMerging #3498 into master will decrease coverage by 0.15%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3498      +/-\n============================================\n- Coverage     70.67%   70.52%   -0.16%   \n  Complexity        4        4            \n============================================\n  Files           999      999            \n  Lines         45673    45673            \n  Branches       6112     6112            \n============================================\n- Hits          32281    32210      -71   \n- Misses        11274    11346      +72   \n+ Partials       2118     2117       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 26.42% <0%> (-33.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 66.66% <0%> (-8.89%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.39% <0%> (-1.66%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 87.5% <0%> (-0.97%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 79.38% <0%> (-0.77%) | 0% <0%> (\u00f8) | |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 78.98% <0%> (-0.64%) | 0% <0%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fa54c19...7d07426. Read the comment docs.\n. # Codecov Report\nMerging #3499 into master will increase coverage by 10.28%.\nThe diff coverage is 0%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3499       +/-\n=============================================\n+ Coverage     60.47%   70.75%   +10.28%   \n  Complexity        4        4             \n=============================================\n  Files           999      999             \n  Lines         45673    45674        +1   \n  Branches       6112     6112             \n=============================================\n+ Hits          27619    32315     +4696   \n+ Misses        16052    11236     -4816   \n- Partials       2002     2123      +121\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../controller/helix/ControllerRequestURLBuilder.java | 72.13% <0%> (+17.13%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...ot/core/segment/store/SegmentLocalFSDirectory.java | 64.94% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 58.31% <0%> (+0.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 54.16% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 75.6% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.41% <0%> (+0.77%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 307 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 402cf3b...ea301cf. Read the comment docs.\n. # Codecov Report\nMerging #3505 into master will increase coverage by 11.67%.\nThe diff coverage is 54.54%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3505       +/-\n=============================================\n+ Coverage     59.08%   70.76%   +11.67%   \n  Complexity        4        4             \n=============================================\n  Files          1155     1007      -148   \n  Lines         58552    46179    -12373   \n  Branches       8109     6193     -1916   \n=============================================\n- Hits          34596    32678     -1918   \n+ Misses        21559    11346    -10213   \n+ Partials       2397     2155      -242\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../com/linkedin/pinot/common/config/DurationDsl.java | 50% <54.54%> (-25%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 59.28% <0%> (-7.15%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ... and 162 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e2916ed...de218b2. Read the comment docs.\n. # Codecov Report\nMerging #3506 into master will increase coverage by 10.34%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3506       +/-\n=============================================\n+ Coverage     60.47%   70.81%   +10.34%   \n  Complexity        4        4             \n=============================================\n  Files           999      999             \n  Lines         45673    45692       +19   \n  Branches       6112     6117        +5   \n=============================================\n+ Hits          27619    32356     +4737   \n+ Misses        16052    11217     -4835   \n- Partials       2002     2119      +117\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ot/core/segment/store/SegmentLocalFSDirectory.java | 65.28% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 58.31% <0%> (+0.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 54.16% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...java/com/linkedin/pinot/common/data/FieldSpec.java | 75.6% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.41% <0%> (+0.77%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 70.73% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 310 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 402cf3b...ddccedb. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@39e3360). Click here to learn what that means.\nThe diff coverage is 91.09%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3511   +/-\n=========================================\n  Coverage          ?   70.99%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1012         \n  Lines             ?    46544         \n  Branches          ?     6221         \n=========================================\n  Hits              ?    33044         \n  Misses            ?    11337         \n  Partials          ?     2163\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...erator/query/MetadataBasedAggregationOperator.java | 87.5% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...ator/query/DictionaryBasedAggregationOperator.java | 89.28% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...inot/core/operator/docidsets/StarTreeDocIdSet.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...not/core/operator/transform/TransformOperator.java | 94.73% <100%> (\u00f8) | 0 <0> (?) | |\n| ...linkedin/pinot/core/operator/DocIdSetOperator.java | 92.59% <100%> (\u00f8) | 0 <0> (?) | |\n| ...gment/index/readers/BitmapInvertedIndexReader.java | 74.46% <100%> (\u00f8) | 0 <0> (?) | |\n| ...not/core/operator/query/SelectionOnlyOperator.java | 97.14% <100%> (\u00f8) | 0 <0> (?) | |\n| ...t/common/response/broker/BrokerResponseNative.java | 89.47% <100%> (\u00f8) | 0 <0> (?) | |\n| ...core/operator/blocks/IntermediateResultsBlock.java | 75.96% <100%> (\u00f8) | 0 <0> (?) | |\n| ...in/pinot/core/operator/CombineGroupByOperator.java | 77.52% <100%> (\u00f8) | 0 <0> (?) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 39e3360...0badef0. Read the comment docs.\n. # Codecov Report\nMerging #3512 into master will increase coverage by 0.2%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3512     +/-\n===========================================\n+ Coverage      70.5%   70.71%   +0.2%   \n  Complexity        4        4           \n===========================================\n  Files           999      999           \n  Lines         45673    45673           \n  Branches       6112     6112           \n===========================================\n+ Hits          32203    32297     +94   \n+ Misses        11360    11251    -109   \n- Partials       2110     2125     +15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...din/pinot/core/segment/store/SegmentDirectory.java | 71.42% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/segment/store/SingleFileIndexDirectory.java | 85.61% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/segment/store/ColumnIndexDirectory.java | 93.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/core/segment/store/FilePerIndexDirectory.java | 88.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/core/segment/index/loader/LoaderUtils.java | 87.09% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/segment/store/SegmentLocalFSDirectory.java | 64.94% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ndex/converter/SegmentV1V2ToV3FormatConverter.java | 74.35% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f64625b...687b27b. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@34d0e12). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3516   +/-\n=========================================\n  Coverage          ?   58.82%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1149         \n  Lines             ?    58094         \n  Branches          ?     8030         \n=========================================\n  Hits              ?    34172         \n  Misses            ?    21553         \n  Partials          ?     2369\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../controller/helix/core/SegmentDeletionManager.java | 80.16% <\u00f8> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 34d0e12...289ebde. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@d77982d). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3522   +/-\n=========================================\n  Coverage          ?   70.62%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      999         \n  Lines             ?    45671         \n  Branches          ?     6111         \n=========================================\n  Hits              ?    32254         \n  Misses            ?    11296         \n  Partials          ?     2121\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/server/realtime/ControllerLeaderLocator.java | 96% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d77982d...2d9d4db. Read the comment docs.\n. # Codecov Report\nMerging #3524 into master will decrease coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3524      +/-\n============================================\n- Coverage     70.83%   70.78%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files           998      998            \n  Lines         45669    45669            \n  Branches       6108     6108            \n============================================\n- Hits          32348    32326      -22   \n- Misses        11198    11210      +12   \n- Partials       2123     2133      +10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 60% <0%> (-15.56%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 84.74% <0%> (-6.78%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fdb9357...5598e9c. Read the comment docs.\n. # Codecov Report\nMerging #3525 into master will decrease coverage by 0.04%.\nThe diff coverage is 95.45%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3525      +/-\n============================================\n- Coverage     70.83%   70.78%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files           998      998            \n  Lines         45669    45722      +53   \n  Branches       6108     6112       +4   \n============================================\n+ Hits          32348    32364      +16   \n- Misses        11198    11233      +35   \n- Partials       2123     2125       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/pinot/core/query/request/ServerQueryRequest.java | 89.65% <\u00f8> (-0.51%) | 0 <0> (\u00f8) | |\n| .../linkedin/pinot/core/operator/CombineOperator.java | 60.2% <100%> (+0.82%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 78.7% <100%> (+0.4%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 86.48% <100%> (+1.19%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/core/operator/ExecutionStatistics.java | 95.83% <100%> (+1.38%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/operator/CombineGroupByOperator.java | 76.74% <100%> (+0.55%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.6% <100%> (+0.1%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/common/response/broker/BrokerResponseNative.java | 88.5% <100%> (+1.83%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/operator/blocks/IntermediateResultsBlock.java | 74.16% <75%> (+0.05%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fdb9357...dc33a3d. Read the comment docs.\n. # Codecov Report\nMerging #3528 into master will decrease coverage by 0.14%.\nThe diff coverage is 54.8%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3528      +/-\n============================================\n- Coverage     70.88%   70.74%   -0.15%   \n  Complexity        4        4            \n============================================\n  Files           997     1004       +7   \n  Lines         45779    45971     +192   \n  Branches       6137     6160      +23   \n============================================\n+ Hits          32449    32520      +71   \n- Misses        11208    11321     +113   \n- Partials       2122     2130       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/core/segment/store/ColumnIndexDirectory.java | 93.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ava/com/linkedin/pinot/core/common/DataSource.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/core/segment/creator/impl/V1Constants.java | 33.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...startree/v2/store/StarTreeDimensionDataSource.java | 72.72% <0%> (-3.47%) | 0 <0> (\u00f8) | |\n| .../core/segment/index/readers/BloomFilterReader.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...ot/core/segment/store/SegmentLocalFSDirectory.java | 63.84% <0%> (-1.11%) | 0 <0> (\u00f8) | |\n| ...re/startree/v2/store/StarTreeMetricDataSource.java | 56.52% <0%> (-2.57%) | 0 <0> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.29% <0%> (-0.28%) | 0 <0> (\u00f8) | |\n| ...inot/core/segment/store/FilePerIndexDirectory.java | 89.39% <100%> (+1.06%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/segment/index/loader/SegmentPreProcessor.java | 80% <100%> (+1.21%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 45 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f1559a7...bd83969. Read the comment docs.\n. # Codecov Report\nMerging #3535 into master will increase coverage by 0.13%.\nThe diff coverage is 88.99%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3535      +/-\n============================================\n+ Coverage     70.73%   70.87%   +0.13%   \n  Complexity        4        4            \n============================================\n  Files           998      997       -1   \n  Lines         45722    45758      +36   \n  Branches       6112     6135      +23   \n============================================\n+ Hits          32341    32429      +88   \n+ Misses        11264    11198      -66   \n- Partials       2117     2131      +14\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...predicate/RegexpLikePredicateEvaluatorFactory.java | 29.16% <\u00f8> (-2.84%) | 0 <0> (\u00f8) | |\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 85.29% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 78% <0%> (-8%) | 0 <0> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 85.24% <100%> (-6.28%) | 0 <0> (\u00f8) | |\n| ...edicate/BaseDictionaryBasedPredicateEvaluator.java | 59.09% <100%> (+4.09%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ter/predicate/EqualsPredicateEvaluatorFactory.java | 91.48% <100%> (+0.37%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/operator/filter/BaseFilterOperator.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/com/linkedin/pinot/core/plan/FilterPlanNode.java | 89.74% <100%> (-0.74%) | 0 <0> (\u00f8) | |\n| ...inot/core/operator/filter/EmptyFilterOperator.java | 85.71% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/core/operator/filter/FilterOperatorUtils.java | 84.37% <100%> (+8.61%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 44 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 37ad801...3e20ed0. Read the comment docs.\n. # Codecov Report\nMerging #3541 into master will decrease coverage by 11.95%.\nThe diff coverage is 73.68%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3541       +/-\n=============================================\n- Coverage      70.8%   58.84%   -11.96%   \n  Complexity        4        4             \n=============================================\n  Files           997     1147      +150   \n  Lines         45760    58190    +12430   \n  Branches       6135     8054     +1919   \n=============================================\n+ Hits          32400    34242     +1842   \n- Misses        11235    21577    +10342   \n- Partials       2125     2371      +246\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...in/java/com/linkedin/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 64.66% <73.68%> (-0.17%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 51.42% <0%> (-15%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-12.13%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-2.12%) | 0% <0%> (\u00f8) | |\n| ... and 175 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a834a49...343a5bf. Read the comment docs.\n. # Codecov Report\nMerging #3543 into master will decrease coverage by 0.16%.\nThe diff coverage is 78.91%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3543      +/-\n============================================\n- Coverage     70.88%   70.71%   -0.17%   \n  Complexity        4        4            \n============================================\n  Files           997     1007      +10   \n  Lines         45779    46137     +358   \n  Branches       6137     6184      +47   \n============================================\n+ Hits          32449    32625     +176   \n- Misses        11208    11370     +162   \n- Partials       2122     2142      +20\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 65.21% <0%> (-4.79%) | 0 <0> (\u00f8) | |\n| ...ommon/lineage/SegmentMergeLineageAccessHelper.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...om/linkedin/pinot/common/lineage/SegmentGroup.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...edin/pinot/common/lineage/SegmentMergeLineage.java | 85.82% <85.82%> (\u00f8) | 0 <0> (?) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 26.42% <0%> (-42.86%) | 0% <0%> (\u00f8) | |\n| ...ava/com/linkedin/pinot/common/utils/FileUtils.java | 25% <0%> (-33.34%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 77.35% <0%> (-10.7%) | 0% <0%> (\u00f8) | |\n| ... and 58 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 213ff9c...2a2eb30. Read the comment docs.\n. # Codecov Report\nMerging #3545 into master will decrease coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3545      +/-\n============================================\n- Coverage     70.89%   70.85%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files           998      998            \n  Lines         45669    45669            \n  Branches       6108     6108            \n============================================\n- Hits          32379    32361      -18   \n- Misses        11176    11186      +10   \n- Partials       2114     2122       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 88.67% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ce6a53f...c4d1c6d. Read the comment docs.\n. # Codecov Report\nMerging #3549 into master will decrease coverage by 0.13%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3549      +/-\n============================================\n- Coverage     70.73%   70.59%   -0.14%   \n  Complexity        4        4            \n============================================\n  Files           998      998            \n  Lines         45722    45723       +1   \n  Branches       6112     6112            \n============================================\n- Hits          32341    32278      -63   \n- Misses        11264    11328      +64   \n  Partials       2117     2117\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/api/resources/FileUploadPathProvider.java | 74.46% <100%> (+0.55%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-18.85%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 32.85% <0%> (-15%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 65.62% <0%> (-4.38%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.95% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9607ca4...b0c5ff4. Read the comment docs.\n. # Codecov Report\nMerging #3552 into master will decrease coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3552      +/-\n============================================\n- Coverage     70.73%   70.67%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           998      998            \n  Lines         45722    46154     +432   \n  Branches       6112     6297     +185   \n============================================\n+ Hits          32341    32621     +280   \n- Misses        11264    11380     +116   \n- Partials       2117     2153      +36\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 78.89% <100%> (+0.19%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...predicate/BaseRawValueBasedPredicateEvaluator.java | 53.84% <0%> (-33.43%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...filter/SortedInvertedIndexBasedFilterOperator.java | 61.84% <0%> (-24.16%) | 0% <0%> (\u00f8) | |\n| ...ore/operator/filter/BitmapBasedFilterOperator.java | 62% <0%> (-23.3%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 78.18% <0%> (-14.55%) | 0% <0%> (\u00f8) | |\n| .../predicate/NotEqualsPredicateEvaluatorFactory.java | 77.1% <0%> (-14.42%) | 0% <0%> (\u00f8) | |\n| ...lter/predicate/RangePredicateEvaluatorFactory.java | 77.2% <0%> (-12.93%) | 0% <0%> (\u00f8) | |\n| ...predicate/RegexpLikePredicateEvaluatorFactory.java | 21.87% <0%> (-10.13%) | 0% <0%> (\u00f8) | |\n| ...edicate/BaseDictionaryBasedPredicateEvaluator.java | 45% <0%> (-10%) | 0% <0%> (\u00f8) | |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 37ad801...847322e. Read the comment docs.\n. # Codecov Report\nMerging #3556 into master will increase coverage by 10.05%.\nThe diff coverage is 0%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3556       +/-\n=============================================\n+ Coverage     60.55%   70.61%   +10.05%   \n  Complexity        4        4             \n=============================================\n  Files           997      997             \n  Lines         45760    45760             \n  Branches       6135     6136        +1   \n=============================================\n+ Hits          27709    32312     +4603   \n+ Misses        16048    11327     -4721   \n- Partials       2003     2121      +118\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/AzurePinotFS.java | 12.08% <0%> (\u00f8) | 4 <0> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 57.87% <0%> (-0.45%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 81.56% <0%> (+0.34%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/utils/helix/HelixHelper.java | 54.16% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.41% <0%> (+0.77%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/utils/ServiceStatus.java | 70.73% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.05% <0%> (+0.89%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.45% <0%> (+1.04%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 302 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7d4ab9e...1563fd6. Read the comment docs.\n. # Codecov Report\nMerging #3558 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3558      +/-\n============================================\n- Coverage      70.8%   70.74%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45760    45760            \n  Branches       6135     6135            \n============================================\n- Hits          32400    32374      -26   \n- Misses        11235    11264      +29   \n+ Partials       2125     2122       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 34.78% <0%> (-36.24%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 47.85% <0%> (-18.58%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4f5b2dd...8d54f8b. Read the comment docs.\n. # Codecov Report\nMerging #3560 into master will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3560      +/-\n============================================\n- Coverage      70.8%   70.77%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45760    45760            \n  Branches       6135     6135            \n============================================\n- Hits          32400    32387      -13   \n- Misses        11235    11243       +8   \n- Partials       2125     2130       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-3.48%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...din/pinot/core/query/scheduler/QueryScheduler.java | 85.13% <0%> (-1.36%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac74d13...511f346. Read the comment docs.\n. # Codecov Report\nMerging #3561 into master will increase coverage by 0.14%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3561      +/-\n============================================\n+ Coverage      70.6%   70.75%   +0.14%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45760    45760            \n  Branches       6135     6135            \n============================================\n+ Hits          32308    32376      +68   \n+ Misses        11332    11245      -87   \n- Partials       2120     2139      +19\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 71.87% <0%> (-6.25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.48% <0%> (-3.71%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 90.39% <0%> (-1.66%) | 0% <0%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d9ad5c3...c6fd5e3. Read the comment docs.\n. # Codecov Report\nMerging #3563 into master will decrease coverage by 0.25%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3563      +/-\n============================================\n- Coverage     70.82%   70.56%   -0.26%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45765    45765            \n  Branches       6135     6135            \n============================================\n- Hits          32412    32296     -116   \n- Misses        11227    11348     +121   \n+ Partials       2126     2121       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 32.85% <0%> (-33.58%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 68.75% <0%> (-5.21%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 73.07% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 44c2859...12d0f4c. Read the comment docs.\n. # Codecov Report\nMerging #3566 into master will increase coverage by 0.26%.\nThe diff coverage is 46.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3566      +/-\n============================================\n+ Coverage     70.56%   70.82%   +0.26%   \n  Complexity        4        4            \n============================================\n  Files           997      997            \n  Lines         45765    45779      +14   \n  Branches       6135     6137       +2   \n============================================\n+ Hits          32294    32423     +129   \n+ Misses        11349    11218     -131   \n- Partials       2122     2138      +16\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.47% <100%> (+0.26%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...com/linkedin/pinot/common/metrics/ServerGauge.java | 96% <100%> (+0.16%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 72.29% <27.27%> (-5.08%) | 0 <0> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (-4.81%) | 0% <0%> (\u00f8) | |\n| ... and 30 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b62c611...19d95e8. Read the comment docs.\n. # Codecov Report\nMerging #3568 into master will increase coverage by 0.06%.\nThe diff coverage is 81.56%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3568      +/-\n============================================\n+ Coverage     67.22%   67.29%   +0.06%   \n  Complexity        4        4            \n============================================\n  Files          1027     1030       +3   \n  Lines         50812    50891      +79   \n  Branches       7091     7098       +7   \n============================================\n+ Hits          34159    34247      +88   \n+ Misses        14312    14305       -7   \n+ Partials       2341     2339       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/common/utils/CommonConstants.java | 35.55% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 88.27% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pache/pinot/common/utils/request/RequestUtils.java | 97.01% <100%> (+1.01%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../broker/requesthandler/BrokerRequestOptimizer.java | 71.42% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pache/pinot/broker/broker/BrokerServerBuilder.java | 91.22% <100%> (+0.15%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 50.81% <100%> (-8.51%) | 0 <0> (\u00f8) | |\n| .../pinot/broker/requesthandler/TableSchemaCache.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 88.63% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 72.8% <100%> (+0.48%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 36 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1be4b5c...36a8202. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@9dfb949). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3569   +/-\n=========================================\n  Coverage          ?   70.82%         \n  Complexity        ?        4         \n=========================================\n  Files             ?      997         \n  Lines             ?    45779         \n  Branches          ?     6137         \n=========================================\n  Hits              ?    32425         \n  Misses            ?    11217         \n  Partials          ?     2137\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9dfb949...2c126e0. Read the comment docs.\n. # Codecov Report\nMerging #3573 into master will decrease coverage by 11.97%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster   #3573       +/-\n============================================\n- Coverage     70.88%   58.9%   -11.98%   \n  Complexity        4       4             \n============================================\n  Files           997    1147      +150   \n  Lines         45779   58211    +12432   \n  Branches       6137    8056     +1919   \n============================================\n+ Hits          32449   34289     +1840   \n- Misses        11208   21545    +10337   \n- Partials       2122    2377      +255\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...t/tools/segment/converter/SegmentMergeCommand.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.95% <0%> (-6.25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 66.87% <0%> (-3.13%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 66.42% <0%> (-2.86%) | 0% <0%> (\u00f8) | |\n| ... and 167 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f1512e6...9c01ef5. Read the comment docs.\n. # Codecov Report\nMerging #3583 into master will decrease coverage by 0.13%.\nThe diff coverage is 76.36%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3583      +/-\n============================================\n- Coverage      70.8%   70.67%   -0.14%   \n  Complexity        4        4            \n============================================\n  Files          1007     1009       +2   \n  Lines         46179    46227      +48   \n  Branches       6193     6204      +11   \n============================================\n- Hits          32697    32670      -27   \n- Misses        11334    11410      +76   \n+ Partials       2148     2147       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...roker/routing/builder/BaseRoutingTableBuilder.java | 95.58% <0%> (-2.9%) | 0 <0> (\u00f8) | |\n| ...builder/BasePartitionAwareRoutingTableBuilder.java | 75.67% <0%> (-4.33%) | 0 <0> (\u00f8) | |\n| ...oker/routing/selector/SegmentSelectorProvider.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...ing/builder/DefaultOfflineRoutingTableBuilder.java | 47.05% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.03% <50%> (-1.37%) | 0 <0> (\u00f8) | |\n| ...ng/builder/DefaultRealtimeRoutingTableBuilder.java | 61.9% <50%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...broker/routing/selector/MergedSegmentSelector.java | 93.75% <93.75%> (\u00f8) | 0 <0> (?) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 15.94% <0%> (-55.08%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 26.42% <0%> (-32.86%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 683b22d...c514280. Read the comment docs.\n. # Codecov Report\nMerging #3584 into master will increase coverage by 0.1%.\nThe diff coverage is 75%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3584     +/-\n===========================================\n+ Coverage      70.8%   70.91%   +0.1%   \n  Complexity        4        4           \n===========================================\n  Files          1007     1007           \n  Lines         46179    46203     +24   \n  Branches       6193     6197      +4   \n===========================================\n+ Hits          32697    32763     +66   \n+ Misses        11334    11287     -47   \n- Partials       2148     2153      +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...altime/impl/kafka/KafkaStreamConfigProperties.java | 25% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 69.69% <100%> (+0.94%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...realtime/impl/kafka/KafkaLowLevelStreamConfig.java | 61.53% <66.66%> (+11.53%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/filter/FilterOperatorUtils.java | 84.37% <0%> (-3.13%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.32% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 683b22d...2aaa0dc. Read the comment docs.\n. # Codecov Report\nMerging #3587 into master will increase coverage by 0.19%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3587      +/-\n============================================\n+ Coverage     70.63%   70.82%   +0.19%   \n  Complexity        4        4            \n============================================\n  Files          1009     1009            \n  Lines         46227    46228       +1   \n  Branches       6204     6204            \n============================================\n+ Hits          32652    32742      +90   \n+ Misses        11421    11332      -89   \n  Partials       2154     2154\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.7% <100%> (+0.1%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.95% <0%> (-6.25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 55.65% <0%> (-2.22%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4b4224f...a0389f0. Read the comment docs.\n. # Codecov Report\nMerging #3588 into master will increase coverage by 11.92%.\nThe diff coverage is 0%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3588       +/-\n=============================================\n+ Coverage     58.91%   70.83%   +11.92%   \n  Complexity        4        4             \n=============================================\n  Files          1157     1009      -148   \n  Lines         58631    46254    -12377   \n  Branches       8124     6209     -1915   \n=============================================\n- Hits          34543    32766     -1777   \n+ Misses        21686    11327    -10359   \n+ Partials       2402     2161      -241\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 54.28% <0%> (-1.06%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 68.75% <0%> (-5.21%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 71.11% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 73.07% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-1.37%) | 0% <0%> (\u00f8) | |\n| ... and 164 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ea628a9...63f92b8. Read the comment docs.\n. # Codecov Report\nMerging #3589 into master will increase coverage by 0.07%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3589      +/-\n============================================\n+ Coverage     70.63%   70.71%   +0.07%   \n  Complexity        4        4            \n============================================\n  Files          1009     1009            \n  Lines         46254    46255       +1   \n  Branches       6209     6209            \n============================================\n+ Hits          32672    32707      +35   \n+ Misses        11427    11405      -22   \n+ Partials       2155     2143      -12\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...va/com/linkedin/pinot/filesystem/LocalPinotFS.java | 87.5% <100%> (+0.19%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 68.75% <0%> (-5.21%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 73.07% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.33% <0%> (-1.34%) | 0% <0%> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 79.33% <0%> (-0.83%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/core/common/DataBlockCache.java | 78.62% <0%> (-0.77%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 555ba8f...a2442fe. Read the comment docs.\n. # Codecov Report\nMerging #3591 into master will increase coverage by 0.01%.\nThe diff coverage is 77.77%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3591      +/-\n============================================\n+ Coverage     70.86%   70.88%   +0.01%   \n  Complexity        4        4            \n============================================\n  Files          1009     1009            \n  Lines         46255    46264       +9   \n  Branches       6209     6209            \n============================================\n+ Hits          32780    32795      +15   \n+ Misses        11315    11295      -20   \n- Partials       2160     2174      +14\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.28% <100%> (+0.43%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.05% <71.42%> (-0.02%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/broker/queryquota/HitCounter.java | 92.3% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 99c25a8...60b49d1. Read the comment docs.\n. # Codecov Report\nMerging #3593 into master will increase coverage by 0.02%.\nThe diff coverage is 40.74%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3593      +/-\n============================================\n+ Coverage     70.86%   70.89%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files          1009     1009            \n  Lines         46255    46282      +27   \n  Branches       6209     6211       +2   \n============================================\n+ Hits          32780    32811      +31   \n+ Misses        11315    11303      -12   \n- Partials       2160     2168       +8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.06% <100%> (+0.21%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.07% <38.46%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 45.45% <0%> (-18.19%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 78.18% <0%> (-14.55%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update feaca0a...a8bda2d. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@5afbebe). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3602   +/-\n=========================================\n  Coverage          ?   70.93%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1009         \n  Lines             ?    46282         \n  Branches          ?     6208         \n=========================================\n  Hits              ?    32829         \n  Misses            ?    11287         \n  Partials          ?     2166\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...rtualcolumn/SingleStringVirtualColumnProvider.java | 65.11% <100%> (\u00f8) | 0 <0> (?) | |\n| ...ment/virtualcolumn/DocIdVirtualColumnProvider.java | 70.58% <100%> (\u00f8) | 0 <0> (?) | |\n| ...gment/virtualcolumn/BaseVirtualColumnProvider.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...kedin/pinot/core/segment/index/ColumnMetadata.java | 81.17% <100%> (\u00f8) | 0 <0> (?) | |\n| .../core/operator/query/SelectionOrderByOperator.java | 91.66% <100%> (\u00f8) | 0 <0> (?) | |\n| ...t/core/query/selection/SelectionOperatorUtils.java | 93.04% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5afbebe...e0674fb. Read the comment docs.\n. # Codecov Report\nMerging #3604 into master will decrease coverage by 0.12%.\nThe diff coverage is 70.49%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3604      +/-\n============================================\n- Coverage     70.91%   70.79%   -0.13%   \n  Complexity        4        4            \n============================================\n  Files          1009     1010       +1   \n  Lines         46294    46330      +36   \n  Branches       6208     6210       +2   \n============================================\n- Hits          32829    32798      -31   \n- Misses        11298    11373      +75   \n+ Partials       2167     2159       -8\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.85% <\u00f8> (-0.05%) | 0 <0> (\u00f8) | |\n| ...not/controller/validation/StorageQuotaChecker.java | 73.33% <0%> (-1%) | 0 <0> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.07% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 97.22% <100%> (+0.07%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.82% <100%> (+1.33%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.71% <100%> (+0.64%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.12% <33.33%> (+0.06%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/controller/ControllerLeadershipManager.java | 70% <70%> (\u00f8) | 0 <0> (?) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 34.78% <0%> (-36.24%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 47.85% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a899cf4...83dba62. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@6a6c175). Click here to learn what that means.\nThe diff coverage is 76.47%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3606   +/-\n=========================================\n  Coverage          ?   70.66%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1009         \n  Lines             ?    46291         \n  Branches          ?     6208         \n=========================================\n  Hits              ?    32710         \n  Misses            ?    11427         \n  Partials          ?     2154\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...n/pinot/core/segment/index/loader/LoaderUtils.java | 87.09% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 54.54% <100%> (\u00f8) | 0 <0> (?) | |\n| ...com/linkedin/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...er/starter/helix/SegmentMessageHandlerFactory.java | 72.97% <66.66%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6a6c175...31318fc. Read the comment docs.\n. # Codecov Report\nMerging #3607 into master will increase coverage by 0.17%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3607      +/-\n============================================\n+ Coverage     70.65%   70.82%   +0.17%   \n  Complexity        4        4            \n============================================\n  Files          1009     1011       +2   \n  Lines         46291    46413     +122   \n  Branches       6208     6212       +4   \n============================================\n+ Hits          32705    32874     +169   \n+ Misses        11432    11374      -58   \n- Partials       2154     2165      +11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../controller/helix/ControllerRequestURLBuilder.java | 74.19% <100%> (+0.86%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 75.75% <100%> (+2.62%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/java/com/linkedin/pinot/common/data/Schema.java | 81.14% <100%> (+0.59%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...indexsegment/immutable/ImmutableSegmentLoader.java | 92.15% <100%> (-0.16%) | 0 <0> (\u00f8) | |\n| ...loader/defaultcolumn/BaseDefaultColumnHandler.java | 92% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...x/loader/defaultcolumn/V3DefaultColumnHandler.java | 22.22% <0%> (-55.56%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 40 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 569022a...aa4dd1c. Read the comment docs.\n. # Codecov Report\nMerging #3611 into master will increase coverage by 0.09%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3611      +/-\n============================================\n+ Coverage     70.65%   70.74%   +0.09%   \n  Complexity        4        4            \n============================================\n  Files          1009     1009            \n  Lines         46291    46290       -1   \n  Branches       6208     6208            \n============================================\n+ Hits          32705    32750      +45   \n+ Misses        11432    11380      -52   \n- Partials       2154     2160       +6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...data/readers/MultiplePinotSegmentRecordReader.java | 73.39% <66.66%> (-0.25%) | 0 <0> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 88.67% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.38% <0%> (-4.81%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 86.53% <0%> (-1.93%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 80be2cb...333833a. Read the comment docs.\n. # Codecov Report\nMerging #3613 into master will decrease coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3613      +/-\n============================================\n- Coverage     70.69%   70.66%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files          1009     1009            \n  Lines         46290    46294       +4   \n  Branches       6208     6208            \n============================================\n- Hits          32725    32714      -11   \n- Misses        11410    11427      +17   \n+ Partials       2155     2153       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/controller/helix/core/util/HelixSetupUtils.java | 63.76% <100%> (-0.52%) | 0 <0> (\u00f8) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 43.79% <100%> (+0.36%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...roller/helix/core/PinotTableIdealStateBuilder.java | 80.89% <100%> (+0.66%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 59.79% <100%> (-0.07%) | 0 <0> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 68.75% <0%> (-11.46%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d48e4fd...b15bac7. Read the comment docs.\n. # Codecov Report\nMerging #3614 into master will increase coverage by 0.19%.\nThe diff coverage is 73.75%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3614      +/-\n============================================\n+ Coverage     70.69%   70.89%   +0.19%   \n  Complexity        4        4            \n============================================\n  Files          1009     1010       +1   \n  Lines         46290    46370      +80   \n  Branches       6208     6208            \n============================================\n+ Hits          32725    32874     +149   \n+ Misses        11410    11326      -84   \n- Partials       2155     2170      +15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 88.63% <100%> (+0.54%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 88.19% <100%> (+0.14%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 23.8% <50%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/broker/api/RequestStatistics.java | 71.42% <71.42%> (\u00f8) | 0 <0> (?) | |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.35% <75%> (+0.64%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 35 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d48e4fd...0f39ad1. Read the comment docs.\n. # Codecov Report\nMerging #3618 into master will increase coverage by <.01%.\nThe diff coverage is 62.43%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3618      +/-\n============================================\n+ Coverage     70.66%   70.66%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files          1011     1011            \n  Lines         46413    46415       +2   \n  Branches       6212     6208       -4   \n============================================\n+ Hits          32798    32801       +3   \n- Misses        11456    11459       +3   \n+ Partials       2159     2155       -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/controller/validation/ValidationManager.java | 26.42% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 76.31% <100%> (+3.23%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 97.61% <100%> (+0.39%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 70.83% <4.76%> (-9.38%) | 0 <0> (\u00f8) | |\n| ...controller/helix/core/minion/PinotTaskManager.java | 87.75% <76.92%> (+4.08%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 84.37% <83.5%> (-0.25%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0146e5f...a991874. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@39e3360). Click here to learn what that means.\nThe diff coverage is 76.13%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #3622   +/-\n========================================\n  Coverage          ?     71%         \n  Complexity        ?       4         \n========================================\n  Files             ?    1012         \n  Lines             ?   46450         \n  Branches          ?    6212         \n========================================\n  Hits              ?   32983         \n  Misses            ?   11291         \n  Partials          ?    2176\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...controller/helix/core/minion/PinotTaskManager.java | 86% <0%> (\u00f8) | 0 <0> (?) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 80.61% <100%> (\u00f8) | 0 <0> (?) | |\n| ...troller/helix/core/retention/RetentionManager.java | 72.72% <100%> (\u00f8) | 0 <0> (?) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 62.71% <100%> (\u00f8) | 0 <0> (?) | |\n| ...n/pinot/controller/helix/SegmentStatusChecker.java | 89.06% <100%> (\u00f8) | 0 <0> (?) | |\n| .../periodictask/ControllerPeriodicTaskScheduler.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/controller/validation/ValidationManager.java | 78.72% <100%> (\u00f8) | 0 <0> (?) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 78.18% <70.73%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 91.66% <80%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 39e3360...7f9afe6. Read the comment docs.\n. # Codecov Report\nMerging #3624 into master will decrease coverage by 21.13%.\nThe diff coverage is 70.14%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3624       +/-\n=============================================\n- Coverage     70.95%   49.81%   -21.14%   \n  Complexity        4        4             \n=============================================\n  Files          1012     1160      +148   \n  Lines         46450    58864    +12414   \n  Branches       6212     8129     +1917   \n=============================================\n- Hits          32957    29324     -3633   \n- Misses        11320    27374    +16054   \n+ Partials       2173     2166        -7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...om/linkedin/pinot/core/common/BaseBlockValSet.java | 4.16% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/controller/helix/core/util/HelixSetupUtils.java | 65.67% <\u00f8> (+1.9%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/io/util/DictionaryDelegatingValueReader.java | 21.42% <0%> (-9.35%) | 0 <0> (\u00f8) | |\n| ...m/linkedin/pinot/broker/api/RequestStatistics.java | 0% <0%> (-71.43%) | 0 <0> (\u00f8) | |\n| ...gment/index/readers/ImmutableDictionaryReader.java | 94.3% <100%> (+0.04%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/core/segment/index/readers/BytesDictionary.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/segment/index/readers/StringDictionary.java | 94.11% <100%> (-5.89%) | 0 <0> (\u00f8) | |\n| ...pinot/core/io/util/FixedByteValueReaderWriter.java | 88.09% <100%> (+0.59%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/operator/docvalsets/SingleValueSet.java | 90.78% <100%> (-0.88%) | 0 <0> (\u00f8) | |\n| ...not/core/segment/index/readers/BaseDictionary.java | 44.73% <28.57%> (-8.39%) | 0 <0> (\u00f8) | |\n| ... and 468 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 09eb015...ae401ab. Read the comment docs.\n. # Codecov Report\nMerging #3627 into master will decrease coverage by 0.23%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3627      +/-\n============================================\n- Coverage     70.95%   70.71%   -0.24%   \n  Complexity        4        4            \n============================================\n  Files          1012     1012            \n  Lines         46450    46454       +4   \n  Branches       6212     6212            \n============================================\n- Hits          32957    32849     -108   \n- Misses        11320    11452     +132   \n+ Partials       2173     2153      -20\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/broker/api/RequestStatistics.java | 66.66% <0%> (-4.77%) | 0 <0> (\u00f8) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...pinot/controller/validation/ValidationManager.java | 34.75% <0%> (-43.98%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 71.42% <0%> (-3.07%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...m/linkedin/pinot/common/metrics/MetricsHelper.java | 73.41% <0%> (-2.54%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.77% <0%> (-2.1%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 09eb015...252d270. Read the comment docs.\n. # Codecov Report\nMerging #3633 into master will increase coverage by <.01%.\nThe diff coverage is 91.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3633      +/-\n============================================\n+ Coverage     70.68%   70.68%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files          1012     1012            \n  Lines         46454    46461       +7   \n  Branches       6212     6212            \n============================================\n+ Hits          32838    32843       +5   \n+ Misses        11461    11456       -5   \n- Partials       2155     2162       +7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.14% <91.66%> (+0.18%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 72.72% <0%> (-3.9%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.27% <0%> (-2.28%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.17% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ef32663...0b2211a. Read the comment docs.\n. # Codecov Report\nMerging #3640 into master will increase coverage by <.01%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3640      +/-\n============================================\n+ Coverage     70.68%   70.69%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files          1012     1012            \n  Lines         46454    46454            \n  Branches       6212     6212            \n============================================\n+ Hits          32838    32842       +4   \n+ Misses        11461    11457       -4   \n  Partials       2155     2155\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 95.19% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...edin/pinot/common/metadata/ZKMetadataProvider.java | 68.94% <0%> (-1.25%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 72.77% <0%> (-1.05%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 56.94% <0%> (-0.7%) | 0% <0%> (\u00f8) | |\n| ... and 9 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ef32663...39abb5a. Read the comment docs.\n. # Codecov Report\nMerging #3641 into master will increase coverage by 0.2%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3641     +/-\n===========================================\n+ Coverage     70.68%   70.89%   +0.2%   \n  Complexity        4        4           \n===========================================\n  Files          1012     1012           \n  Lines         46454    46452      -2   \n  Branches       6212     6212           \n===========================================\n+ Hits          32838    32934     +96   \n+ Misses        11461    11347    -114   \n- Partials       2155     2171     +16\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/controller/helix/core/util/HelixSetupUtils.java | 65.67% <\u00f8> (+1.9%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 72.72% <0%> (-3.9%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ef32663...44661d8. Read the comment docs.\n. # Codecov Report\nMerging #3644 into master will decrease coverage by <.01%.\nThe diff coverage is 43.87%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3644      +/-\n============================================\n- Coverage     70.68%   70.68%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files          1012     1014       +2   \n  Lines         46454    46523      +69   \n  Branches       6212     6214       +2   \n============================================\n+ Hits          32838    32884      +46   \n- Misses        11461    11477      +16   \n- Partials       2155     2162       +7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.57% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 76.62% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 25.27% <25%> (\u00f8) | 0 <0> (?) | |\n| ...er/validation/BrokerResourceValidationManager.java | 26.31% <26.31%> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 41.57% <31.25%> (-0.26%) | 0 <0> (\u00f8) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.95% <57.14%> (-0.76%) | 0 <0> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 57.14% <57.14%> (\u00f8) | 0 <0> (?) | |\n| ...in/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f7387e9...71b78d0. Read the comment docs.\n. # Codecov Report\nMerging #3664 into master will increase coverage by 0.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3664      +/-\n============================================\n+ Coverage     70.93%   71.04%   +0.11%   \n  Complexity        4        4            \n============================================\n  Files          1012     1012            \n  Lines         46461    46459       -2   \n  Branches       6212     6212            \n============================================\n+ Hits          32957    33007      +50   \n+ Misses        11333    11287      -46   \n+ Partials       2171     2165       -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...m/linkedin/pinot/common/config/CombinedConfig.java | 31.03% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inkedin/pinot/common/segment/StarTreeMetadata.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AbstractMetrics.java | 73.64% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/common/metrics/AggregatedLongGauge.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...uting/builder/LargeClusterRoutingTableBuilder.java | 43.75% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/com/linkedin/pinot/common/utils/DataSchema.java | 84.78% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/metrics/AggregatedMeter.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...edin/pinot/broker/queryquota/QueryQuotaConfig.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/broker/routing/CfgBasedRouting.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...broker/routing/selector/MergedSegmentSelector.java | 93.75% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 1006 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 0ea2232...cd42638. Read the comment docs.\n. # Codecov Report\nMerging #3667 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3667      +/-\n============================================\n- Coverage     70.93%   70.87%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files          1012     1014       +2   \n  Lines         46461    46519      +58   \n  Branches       6212     6214       +2   \n============================================\n+ Hits          32957    32971      +14   \n- Misses        11333    11376      +43   \n- Partials       2171     2172       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 45.45% <0%> (-15.16%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| .../com/linkedin/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 1005 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 842678d...24ffca3. Read the comment docs.\n. # Codecov Report\nMerging #3668 into master will increase coverage by 0.02%.\nThe diff coverage is 41.72%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3668      +/-\n============================================\n+ Coverage     70.64%   70.67%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files          1012     1014       +2   \n  Lines         46459    46519      +60   \n  Branches       6212     6214       +2   \n============================================\n+ Hits          32823    32878      +55   \n- Misses        11472    11477       +5   \n  Partials       2164     2164\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.57% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 72.72% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 25.27% <25%> (\u00f8) | 0 <0> (?) | |\n| ...er/validation/BrokerResourceValidationManager.java | 26.31% <26.31%> (\u00f8) | 0 <0> (?) | |\n| .../com/linkedin/pinot/controller/ControllerConf.java | 41.95% <29.54%> (+0.12%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...r/validation/RealtimeSegmentValidationManager.java | 52.38% <52.38%> (\u00f8) | 0 <0> (?) | |\n| ...m/linkedin/pinot/controller/ControllerStarter.java | 61.95% <57.14%> (-0.76%) | 0 <0> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 46ad4f9...96255c9. Read the comment docs.\n. # Codecov Report\nMerging #3669 into master will decrease coverage by 0.2%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3669      +/-\n============================================\n- Coverage     70.89%   70.68%   -0.21%   \n  Complexity        4        4            \n============================================\n  Files          1014     1014            \n  Lines         46519    46520       +1   \n  Branches       6214     6214            \n============================================\n- Hits          32980    32884      -96   \n- Misses        11367    11474     +107   \n+ Partials       2172     2162      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 78.99% <0%> (-0.37%) | 0 <0> (\u00f8) | |\n| ...nkedin/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 27.47% <0%> (-47.26%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 87.09% <0%> (-9.68%) | 0% <0%> (\u00f8) | |\n| ...kedin/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...inkedin/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 74.48% <0%> (-6.13%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 77.77% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...com/linkedin/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 493ed64...29bf13c. Read the comment docs.\n. # Codecov Report\nMerging #3671 into master will increase coverage by 0.07%.\nThe diff coverage is 67.05%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3671      +/-\n============================================\n+ Coverage      67.1%   67.18%   +0.07%   \n- Complexity        4       44      +40   \n============================================\n  Files          1027     1027            \n  Lines         50819    50879      +60   \n  Branches       7091     7105      +14   \n============================================\n+ Hits          34102    34181      +79   \n+ Misses        14392    14361      -31   \n- Partials       2325     2337      +12\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/org/apache/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 79.67% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...java/org/apache/pinot/filesystem/LocalPinotFS.java | 73.41% <18.75%> (-14.28%) | 0 <0> (\u00f8) | |\n| ...ava/org/apache/pinot/filesystem/HadoopPinotFS.java | 64.47% <77.27%> (+64.47%) | 40 <28> (+40) | :arrow_up: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/core/transport/DataTableHandler.java | 88% <0%> (-12%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 70.4% <0%> (-10.21%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cd2dc04...3c6279b. Read the comment docs.\n. # Codecov Report\nMerging #3677 into master will increase coverage by 0.21%.\nThe diff coverage is 57.7%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3677      +/-\n===========================================\n+ Coverage     70.88%   71.1%   +0.21%   \n  Complexity        4       4            \n===========================================\n  Files          1014    1015       +1   \n  Lines         46520   46401     -119   \n  Branches       6214    6203      -11   \n===========================================\n+ Hits          32977   32993      +16   \n+ Misses        11377   11251     -126   \n+ Partials       2166    2157       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pinot/common/response/broker/SelectionResults.java | 80% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inkedin/pinot/common/config/TableCustomConfig.java | 22.58% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...kedin/pinot/common/config/StarTreeIndexConfig.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../linkedin/pinot/controller/api/pojos/Instance.java | 41.17% <\u00f8> (+4.33%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../linkedin/pinot/common/config/TableTaskConfig.java | 42.85% <\u00f8> (+11.27%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...linkedin/pinot/common/data/DimensionFieldSpec.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/common/response/broker/AggregationResult.java | 60% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/common/restlet/resources/SegmentSizeInfo.java | 55.55% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/common/config/ReplicaGroupStrategyConfig.java | 50% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...m/linkedin/pinot/common/config/IndexingConfig.java | 54.28% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 99 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e7592ef...21da994. Read the comment docs.\n. # Codecov Report\nMerging #3682 into master will increase coverage by 21.33%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3682       +/-\n=============================================\n+ Coverage      45.9%   67.23%   +21.33%   \n- Complexity        0        4        +4   \n=============================================\n  Files          1027     1027             \n  Lines         50863    50863             \n  Branches       7106     7106             \n=============================================\n+ Hits          23349    34200    +10851   \n+ Misses        25556    14340    -11216   \n- Partials       1958     2323      +365\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 78.57% <\u00f8> (+60.2%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.03% <0%> (+0.32%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ava/org/apache/pinot/common/request/Selection.java | 35.8% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 65.32% <0%> (+0.5%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 69.69% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.9% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 516 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e7b20da...1ff65bc. Read the comment docs.\n. # Codecov Report\nMerging #3683 into master will increase coverage by 9.78%.\nThe diff coverage is 91.83%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3683      +/-\n===========================================\n+ Coverage     57.32%   67.1%   +9.78%   \n  Complexity        4       4            \n===========================================\n  Files          1027    1027            \n  Lines         50863   50863            \n  Branches       7106    7106            \n===========================================\n+ Hits          29155   34134    +4979   \n+ Misses        19557   14406    -5151   \n- Partials       2151    2323     +172\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../controller/helix/core/SegmentDeletionManager.java | 79.33% <\u00f8> (+4.13%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/minion/generator/TaskGeneratorUtils.java | 84.61% <\u00f8> (+84.61%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/common/utils/ClientSSLContextGenerator.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../java/org/apache/pinot/common/utils/JsonUtils.java | 43.47% <\u00f8> (+2.17%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/common/response/broker/BrokerResponseNative.java | 90.47% <\u00f8> (+4.76%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/pql/parsers/pql2/ast/StarColumnListAstNode.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/org/apache/pinot/common/config/TableConfig.java | 80.39% <\u00f8> (+11.37%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.9% <\u00f8> (+34.14%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...realtime/segment/DefaultFlushThresholdUpdater.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/pinot/controller/helix/SegmentStatusChecker.java | 89.06% <\u00f8> (+2.34%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 590 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c42af32...feaa1bd. Read the comment docs.\n. # Codecov Report\nMerging #3684 into master will decrease coverage by 0.03%.\nThe diff coverage is 21.73%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3684      +/-\n============================================\n- Coverage     67.26%   67.23%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50863    50880      +17   \n  Branches       7106     7107       +1   \n============================================\n- Hits          34213    34208       -5   \n- Misses        14307    14343      +36   \n+ Partials       2343     2329      -14\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/org/apache/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...java/org/apache/pinot/filesystem/AzurePinotFS.java | 11.57% <0%> (-0.51%) | 4 <0> (\u00f8) | |\n| ...ava/org/apache/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...java/org/apache/pinot/filesystem/LocalPinotFS.java | 88.23% <100%> (+0.73%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 79.5% <50%> (+0.16%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 30.76% <0%> (-43.96%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 43.47% <0%> (-36.24%) | 0% <0%> (\u00f8) | |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 30 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9e82f5e...8cf4d94. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@39130c3). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3685   +/-\n=========================================\n  Coverage          ?   67.26%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1027         \n  Lines             ?    50863         \n  Branches          ?     7106         \n=========================================\n  Hits              ?    34215         \n  Misses            ?    14311         \n  Partials          ?     2337\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.17% <\u00f8> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 39130c3...718096e. Read the comment docs.\n. # Codecov Report\nMerging #3687 into master will increase coverage by 9.97%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3687      +/-\n============================================\n+ Coverage     57.32%   67.29%   +9.97%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50863    50863            \n  Branches       7106     7106            \n============================================\n+ Hits          29155    34227    +5072   \n+ Misses        19557    14301    -5256   \n- Partials       2151     2335     +184\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 54.16% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 82.63% <0%> (+0.69%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.41% <0%> (+0.77%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/utils/ServiceStatus.java | 70.73% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.45% <0%> (+1.04%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...org/apache/pinot/controller/ControllerStarter.java | 61.95% <0%> (+1.08%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 319 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c42af32...ec1fa1d. Read the comment docs.\n. # Codecov Report\nMerging #3695 into master will increase coverage by 0.16%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3695      +/-\n============================================\n+ Coverage     67.04%   67.21%   +0.16%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50880    50880            \n  Branches       7107     7107            \n============================================\n+ Hits          34115    34198      +83   \n+ Misses        14433    14350      -83   \n  Partials       2332     2332\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...rEqualitiesToInClauseFilterQueryTreeOptimizer.java | 93.33% <0%> (-2.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 90.9% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/core/common/DataBlockCache.java | 78.62% <0%> (-1.53%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.29% <0%> (-0.61%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 76.36% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.35% <0%> (+0.32%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 58.31% <0%> (+0.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 55.35% <0%> (+1.19%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3755e83...db8f296. Read the comment docs.\n. # Codecov Report\nMerging #3701 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3701      +/-\n============================================\n+ Coverage     67.22%   67.25%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50878    50878            \n  Branches       7106     7106            \n============================================\n+ Hits          34204    34220      +16   \n+ Misses        14331    14314      -17   \n- Partials       2343     2344       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/filter/FilterOperatorUtils.java | 84.37% <0%> (-3.13%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 78.75% <0%> (-2.6%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 41.95% <0%> (-1.73%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 148f992...f4c403e. Read the comment docs.\n. # Codecov Report\nMerging #3703 into master will decrease coverage by 0.03%.\nThe diff coverage is 0%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3703      +/-\n============================================\n- Coverage     67.22%   67.19%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50878    50878            \n  Branches       7106     7106            \n============================================\n- Hits          34204    34186      -18   \n- Misses        14331    14346      +15   \n- Partials       2343     2346       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...mmon/metadata/segment/ColumnPartitionMetadata.java | 58.82% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 72.72% <0%> (-3.9%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/filter/FilterOperatorUtils.java | 84.37% <0%> (-3.13%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c48a38b...683762d. Read the comment docs.\n. # Codecov Report\nMerging #3704 into master will increase coverage by 0.06%.\nThe diff coverage is 83.33%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3704      +/-\n============================================\n+ Coverage     67.22%   67.29%   +0.06%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50878    50893      +15   \n  Branches       7106     7108       +2   \n============================================\n+ Hits          34204    34248      +44   \n+ Misses        14331    14300      -31   \n- Partials       2343     2345       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.42% <100%> (+0.38%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/pinot/controller/helix/SegmentStatusChecker.java | 86.4% <75%> (-2.67%) | 0 <0> (\u00f8) | |\n| ...mmon/metadata/segment/ColumnPartitionMetadata.java | 33.33% <0%> (-25.5%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 72.72% <0%> (-3.9%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update c48a38b...8bab1d2. Read the comment docs.\n. # Codecov Report\nMerging #3705 into master will decrease coverage by 0.23%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3705      +/-\n============================================\n- Coverage     67.29%   67.05%   -0.24%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50878    50878            \n  Branches       7106     7106            \n============================================\n- Hits          34238    34116     -122   \n- Misses        14292    14429     +137   \n+ Partials       2348     2333      -15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 25.27% <0%> (-50.55%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 41.26% <0%> (-38.1%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 73.41% <0%> (-2.54%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 42002f3...e21a089. Read the comment docs.\n. # Codecov Report\nMerging #3706 into master will decrease coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3706      +/-\n============================================\n- Coverage     67.29%   67.26%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50878    50878            \n  Branches       7106     7106            \n============================================\n- Hits          34238    34223      -15   \n- Misses        14292    14301       +9   \n- Partials       2348     2354       +6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 77.63% <0%> (-10.56%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...e/pinot/controller/helix/SegmentStatusChecker.java | 86.71% <0%> (-2.35%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 41.95% <0%> (-1.73%) | 0% <0%> (\u00f8) | |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 42002f3...c1c564a. Read the comment docs.\n. # Codecov Report\nMerging #3707 into master will increase coverage by 0.15%.\nThe diff coverage is 81.25%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3707      +/-\n============================================\n+ Coverage     67.09%   67.25%   +0.15%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50877    50828      -49   \n  Branches       7106     7093      -13   \n============================================\n+ Hits          34138    34186      +48   \n+ Misses        14410    14300     -110   \n- Partials       2329     2342      +13\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...indexsegment/immutable/ImmutableSegmentLoader.java | 92.15% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...che/pinot/server/api/resources/TablesResource.java | 75.47% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 71.47% <33.33%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 42.64% <50%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 82% <93.75%> (-0.64%) | 0 <0> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9cc609d...235fb4f. Read the comment docs.\n. # Codecov Report\nMerging #3711 into master will increase coverage by 0.08%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3711      +/-\n============================================\n+ Coverage     67.18%   67.27%   +0.08%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50830    50830            \n  Branches       7093     7093            \n============================================\n+ Hits          34150    34194      +44   \n+ Misses        14336    14307      -29   \n+ Partials       2344     2329      -15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 92.59% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...r/validation/RealtimeSegmentValidationManager.java | 41.26% <0%> (-15.88%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 63.73% <0%> (-12.09%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.82% <0%> (-1.05%) | 0% <0%> (\u00f8) | |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 89.45% <0%> (-0.85%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f09db48...1c02e49. Read the comment docs.\n. # Codecov Report\nMerging #3713 into master will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3713      +/-\n============================================\n- Coverage     67.09%   67.06%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50877    50830      -47   \n  Branches       7106     7093      -13   \n============================================\n- Hits          34138    34091      -47   \n  Misses        14410    14410            \n  Partials       2329     2329\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/controller/ControllerStarter.java | 62.36% <100%> (+0.4%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| .../segment/index/readers/OnHeapStringDictionary.java | 55.55% <0%> (-3.71%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 78.75% <0%> (-2.6%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 41.95% <0%> (-1.73%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 17c85c5...b5390af. Read the comment docs.\n. # Codecov Report\nMerging #3716 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3716      +/-\n============================================\n+ Coverage     67.28%   67.32%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50828    50828            \n  Branches       7093     7093            \n============================================\n+ Hits          34200    34218      +18   \n+ Misses        14277    14259      -18   \n  Partials       2351     2351\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 67.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 79.36% <0%> (-3.18%) | 0% <0%> (\u00f8) | |\n| ...der/HighLevelConsumerBasedRoutingTableBuilder.java | 90.9% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.32% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 87.5% <0%> (-0.97%) | 0% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.32% <0%> (-0.21%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a658f19...8994575. Read the comment docs.\n. # Codecov Report\nMerging #3718 into master will increase coverage by 0.28%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3718      +/-\n============================================\n+ Coverage     67.01%   67.29%   +0.28%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50798    50796       -2   \n  Branches       7091     7091            \n============================================\n+ Hits          34041    34182     +141   \n+ Misses        14423    14284     -139   \n+ Partials       2334     2330       -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 74.48% <0%> (-7.15%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 68.59% <0%> (-0.09%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/plan/maker/InstancePlanMakerImplV2.java | 95.71% <0%> (-0.07%) | 0% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.16% <0%> (+0.1%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.06% <0%> (+0.32%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 58.18% <0%> (+0.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 94.15% <0%> (+0.58%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 26f2aad...7a96b5c. Read the comment docs.\n. # Codecov Report\nMerging #3721 into master will decrease coverage by 0.16%.\nThe diff coverage is 69.56%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3721      +/-\n============================================\n- Coverage     67.18%   67.02%   -0.17%   \n  Complexity        4        4            \n============================================\n  Files          1027     1028       +1   \n  Lines         50830    50875      +45   \n  Branches       7093     7095       +2   \n============================================\n- Hits          34150    34097      -53   \n- Misses        14336    14444     +108   \n+ Partials       2344     2334      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/common/utils/CommonConstants.java | 39.58% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 86.5% <100%> (-1.7%) | 0 <0> (\u00f8) | |\n| ...a/org/apache/pinot/common/metrics/BrokerGauge.java | 91.66% <100%> (+0.75%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 89.13% <100%> (+0.49%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 76.52% <25%> (-2.84%) | 0 <0> (\u00f8) | |\n| ...broker/requesthandler/BrokerQPSMetricsHandler.java | 82.14% <82.14%> (\u00f8) | 0 <0> (?) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 27.47% <0%> (-48.36%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 45.45% <0%> (-18.19%) | 0% <0%> (\u00f8) | |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f09db48...0fc472d. Read the comment docs.\n. # Codecov Report\nMerging #3722 into master will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3722      +/-\n============================================\n+ Coverage     67.18%   67.21%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50830    50830            \n  Branches       7093     7093            \n============================================\n+ Hits          34150    34165      +15   \n+ Misses        14336    14324      -12   \n+ Partials       2344     2341       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 63.73% <0%> (-12.09%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 59.45% <0%> (-5.41%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 71.42% <0%> (-3.07%) | 0% <0%> (\u00f8) | |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 73.25% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 73.82% <0%> (-1.05%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f09db48...b1dd3af. Read the comment docs.\n. # Codecov Report\nMerging #3725 into master will increase coverage by 0.1%.\nThe diff coverage is 63.91%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3725     +/-\n===========================================\n+ Coverage     67.18%   67.28%   +0.1%   \n  Complexity        4        4           \n===========================================\n  Files          1027     1027           \n  Lines         50830    50800     -30   \n  Branches       7093     7090      -3   \n===========================================\n+ Hits          34150    34182     +32   \n+ Misses        14336    14278     -58   \n+ Partials       2344     2340      -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...erter/stats/RealtimeNoDictionaryColStatistics.java | 64% <\u00f8> (-5.24%) | 0 <0> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 73.07% <0%> (+1.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...lder/PartitionAwareOfflineRoutingTableBuilder.java | 68.42% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...che/pinot/common/config/ColumnPartitionConfig.java | 27.27% <0%> (-35.52%) | 0 <0> (\u00f8) | |\n| ...ot/controller/helix/core/util/ZKMetadataUtils.java | 68.96% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...time/converter/stats/RealtimeColumnStatistics.java | 46.57% <0%> (-1.53%) | 0 <0> (\u00f8) | |\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 75.75% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...mon/metadata/segment/SegmentPartitionMetadata.java | 65% <0%> (+8.47%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../impl/stats/SegmentPreIndexStatsCollectorImpl.java | 66.15% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 88.75% <100%> (+0.34%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 41 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f09db48...2a90700. Read the comment docs.\n. # Codecov Report\nMerging #3727 into master will decrease coverage by 0.11%.\nThe diff coverage is 60.1%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3727      +/-\n============================================\n- Coverage     67.18%   67.07%   -0.12%   \n  Complexity        4        4            \n============================================\n  Files          1027     1030       +3   \n  Lines         50830    50886      +56   \n  Branches       7093     7099       +6   \n============================================\n- Hits          34150    34130      -20   \n- Misses        14336    14422      +86   \n+ Partials       2344     2334      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/predicate/MatchesPredicateEvaluatorFactory.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 60% <0%> (-9.57%) | 0 <0> (\u00f8) | |\n| .../pinot/core/common/predicate/MatchesPredicate.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| ...a/org/apache/pinot/common/request/FilterQuery.java | 32.04% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...rg/apache/pinot/common/request/FilterQueryMap.java | 41.5% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/request/AggregationInfo.java | 32.91% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/config/Deserializer.java | 58.9% <100%> (+0.18%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../org/apache/pinot/pql/parsers/Pql2AstListener.java | 88.34% <100%> (+0.29%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/request/QuerySource.java | 35.75% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...org/apache/pinot/common/request/BrokerRequest.java | 19.48% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 49 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f09db48...0766764. Read the comment docs.\n. # Codecov Report\nMerging #3730 into master will decrease coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3730      +/-\n============================================\n- Coverage     67.27%   67.24%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50830    50830            \n  Branches       7093     7093            \n============================================\n- Hits          34197    34179      -18   \n- Misses        14290    14313      +23   \n+ Partials       2343     2338       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/validation/BrokerResourceValidationManager.java | 42.1% <0%> (-31.58%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 52.38% <0%> (-26.99%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...n/src/main/java/org/apache/pinot/common/Utils.java | 59.57% <0%> (-2.13%) | 0% <0%> (\u00f8) | |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 65% <0%> (-2%) | 0% <0%> (\u00f8) | |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 64.76% <0%> (-1.91%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8a231a6...929cb6d. Read the comment docs.\n. # Codecov Report\nMerging #3731 into master will decrease coverage by 0.26%.\nThe diff coverage is 54.54%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3731      +/-\n============================================\n- Coverage     67.27%   67.01%   -0.27%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50830    50830            \n  Branches       7093     7093            \n============================================\n- Hits          34197    34062     -135   \n- Misses        14290    14435     +145   \n+ Partials       2343     2333      -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 79.35% <54.54%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 25.27% <0%> (-39.57%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 41.26% <0%> (-38.1%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 42.1% <0%> (-31.58%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8a231a6...96b3dce. Read the comment docs.\n. # Codecov Report\nMerging #3733 into master will decrease coverage by 0.11%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3733      +/-\n============================================\n- Coverage     67.27%   67.15%   -0.12%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50830    50830            \n  Branches       7093     7093            \n============================================\n- Hits          34197    34137      -60   \n- Misses        14290    14352      +62   \n+ Partials       2343     2341       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 95.19% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...r/validation/RealtimeSegmentValidationManager.java | 41.26% <0%> (-38.1%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 45.45% <0%> (-18.19%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ... and 27 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8daad94...ca0c333. Read the comment docs.\n. # Codecov Report\nMerging #3734 into master will increase coverage by 0.1%.\nThe diff coverage is 89.89%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3734     +/-\n===========================================\n+ Coverage     67.22%   67.32%   +0.1%   \n  Complexity        4        4           \n===========================================\n  Files          1027     1028      +1   \n  Lines         50804    50891     +87   \n  Branches       7088     7092      +4   \n===========================================\n+ Hits          34152    34262    +110   \n+ Misses        14322    14294     -28   \n- Partials       2330     2335      +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...oller/api/resources/PinotTableRestletResource.java | 48.55% <50%> (-0.5%) | 0 <0> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 62.01% <90.62%> (+1.58%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...controller/api/resources/TableDeletionRequest.java | 96.55% <96.55%> (\u00f8) | 0 <0> (?) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 42.85% <0%> (-14.29%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 70.4% <0%> (-4.09%) | 0% <0%> (\u00f8) | |\n| .../org/apache/pinot/transport/netty/NettyServer.java | 80% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.17% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9004e38...27663ca. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@086b72b). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #3738   +/-\n========================================\n  Coverage          ?   67.2%         \n  Complexity        ?       4         \n========================================\n  Files             ?    1027         \n  Lines             ?   50790         \n  Branches          ?    7089         \n========================================\n  Hits              ?   34135         \n  Misses            ?   14321         \n  Partials          ?    2334\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../controller/api/ControllerAdminApiApplication.java | 87.03% <100%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/broker/broker/BrokerAdminApiApplication.java | 94.44% <100%> (\u00f8) | 0 <0> (?) | |\n| ...inot/server/starter/helix/AdminApiApplication.java | 88.88% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 086b72b...7e9ad0e. Read the comment docs.\n. # Codecov Report\nMerging #3739 into master will increase coverage by 0.05%.\nThe diff coverage is 60.29%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3739      +/-\n============================================\n+ Coverage     67.22%   67.27%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50804    50794      -10   \n  Branches       7088     7087       -1   \n============================================\n+ Hits          34152    34174      +22   \n+ Misses        14322    14284      -38   \n- Partials       2330     2336       +6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../java/org/apache/pinot/common/utils/JsonUtils.java | 43.47% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/common/response/broker/BrokerResponseNative.java | 90.47% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/metrics/ControllerMeter.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 63.63% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/pinot/pql/parsers/pql2/ast/PredicateAstNode.java | 50% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/org/apache/pinot/startree/hll/HllConstants.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ommon/segment/fetcher/LocalFileSegmentFetcher.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/controller/api/resources/LandingPageHandler.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/api/resources/PinotTableInstances.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/common/metrics/AggregatedMetricsRegistry.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 504 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8f239f5...2f2e6fc. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@086b72b). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3740   +/-\n=========================================\n  Coverage          ?   67.23%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1027         \n  Lines             ?    50790         \n  Branches          ?     7089         \n=========================================\n  Hits              ?    34149         \n  Misses            ?    14304         \n  Partials          ?     2337\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../controller/api/ControllerAdminApiApplication.java | 87.03% <100%> (\u00f8) | 0 <0> (?) | |\n| ...pinot/broker/broker/BrokerAdminApiApplication.java | 94.44% <100%> (\u00f8) | 0 <0> (?) | |\n| ...inot/server/starter/helix/AdminApiApplication.java | 88.88% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 086b72b...5517f23. Read the comment docs.\n. # Codecov Report\nMerging #3741 into master will increase coverage by 26.47%.\nThe diff coverage is 100%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3741       +/-\n=============================================\n+ Coverage     40.65%   67.13%   +26.47%   \n- Complexity        0        4        +4   \n=============================================\n  Files          1163     1027      -136   \n  Lines         58633    50804     -7829   \n  Branches       8100     7089     -1011   \n=============================================\n+ Hits          23839    34108    +10269   \n+ Misses        32755    14369    -18386   \n- Partials       2039     2327      +288\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 76.47% <\u00f8> (-1.72%) | 0 <0> (\u00f8) | |\n| ...controller/helix/core/minion/PinotTaskManager.java | 86.27% <100%> (+0.27%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...org/apache/pinot/controller/ControllerStarter.java | 62.56% <100%> (+0.2%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 78.78% <100%> (+58.37%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 45.85% <100%> (+10.22%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/pinot/controller/helix/SegmentStatusChecker.java | 89.14% <100%> (+33.14%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...r/validation/RealtimeSegmentValidationManager.java | 57.81% <100%> (-8.86%) | 0 <0> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 76.92% <100%> (+62.63%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.08% <100%> (-21.17%) | 0 <0> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 75% <100%> (+1.31%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 667 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 189e672...b454ce9. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@79f143b). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3743   +/-\n=========================================\n  Coverage          ?   67.04%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1027         \n  Lines             ?    50790         \n  Branches          ?     7089         \n=========================================\n  Hits              ?    34051         \n  Misses            ?    14414         \n  Partials          ?     2325\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 79f143b...edba00a. Read the comment docs.\n. # Codecov Report\nMerging #3746 into master will decrease coverage by 0.23%.\nThe diff coverage is 14.28%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3746      +/-\n============================================\n- Coverage     67.22%   66.99%   -0.24%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50790    50789       -1   \n  Branches       7089     7089            \n============================================\n- Hits          34142    34024     -118   \n- Misses        14313    14441     +128   \n+ Partials       2335     2324      -11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ler/api/resources/PinotSegmentRestletResource.java | 29.89% <0%> (-0.5%) | 0 <0> (\u00f8) | |\n| ...org/apache/pinot/core/util/trace/TraceContext.java | 71.69% <50%> (+1.52%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 27.47% <0%> (-47.26%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 42.1% <0%> (-31.58%) | 0% <0%> (\u00f8) | |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-12.13%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 54.05% <0%> (-10.82%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2995f3b...1067326. Read the comment docs.\n. # Codecov Report\nMerging #3748 into master will decrease coverage by 0.04%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3748      +/-\n============================================\n- Coverage     67.28%   67.24%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50803    50806       +3   \n  Branches       7089     7089            \n============================================\n- Hits          34182    34162      -20   \n- Misses        14289    14307      +18   \n- Partials       2332     2337       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.71% <100%> (-1.37%) | 0 <0> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 73.07% <0%> (-3.85%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 89.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 82.31% <0%> (-3.41%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/filter/FilterOperatorUtils.java | 84.37% <0%> (-3.13%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.27% <0%> (-2.28%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb7a918...a5cdda6. Read the comment docs.\n. # Codecov Report\nMerging #3749 into master will decrease coverage by 0.03%.\nThe diff coverage is 63.07%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3749      +/-\n============================================\n- Coverage     67.28%   67.24%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50803    50804       +1   \n  Branches       7089     7088       -1   \n============================================\n- Hits          34182    34163      -19   \n- Misses        14289    14316      +27   \n+ Partials       2332     2325       -7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/validation/BrokerResourceValidationManager.java | 31.57% <10%> (-13.43%) | 0 <0> (\u00f8) | |\n| ...org/apache/pinot/controller/ControllerStarter.java | 62.56% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/metrics/AbstractMetrics.java | 76.51% <100%> (+2.86%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/metrics/ControllerGauge.java | 96% <100%> (+0.16%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 70.4% <5.26%> (-1.31%) | 0 <0> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 74.72% <50%> (+10.59%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 74.32% <58.33%> (-2.6%) | 0 <0> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 42.85% <6.66%> (-36.84%) | 0 <0> (\u00f8) | |\n| ...controller/helix/core/minion/PinotTaskManager.java | 82.69% <60%> (-3.59%) | 0 <0> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 67.79% <75%> (+1.12%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb7a918...a75222a. Read the comment docs.\n. # Codecov Report\nMerging #3751 into master will decrease coverage by 17.4%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3751       +/-\n=============================================\n- Coverage     67.28%   49.87%   -17.41%   \n  Complexity        4        4             \n=============================================\n  Files          1027     1163      +136   \n  Lines         50803    58646     +7843   \n  Branches       7089     8100     +1011   \n=============================================\n- Hits          34182    29249     -4933   \n- Misses        14289    27233    +12944   \n+ Partials       2332     2164      -168\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/pinot/core/operator/blocks/EmptyFilterBlock.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ot/minion/events/EventObserverFactoryRegistry.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/minion/metrics/MinionQueryPhase.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ection/iterator/DoubleSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...nion/events/DefaultMinionEventObserverFactory.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 460 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb7a918...c42d6ce. Read the comment docs.\n. # Codecov Report\nMerging #3758 into master will increase coverage by 0.1%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3758     +/-\n===========================================\n+ Coverage     67.22%   67.32%   +0.1%   \n  Complexity        4        4           \n===========================================\n  Files          1027     1028      +1   \n  Lines         50804    50814     +10   \n  Branches       7088     7089      +1   \n===========================================\n+ Hits          34152    34213     +61   \n+ Misses        14322    14267     -55   \n- Partials       2330     2334      +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../pinot/controller/api/upload/SegmentValidator.java | 60% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/controller/validation/StorageQuotaChecker.java | 73.33% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../apache/pinot/controller/util/TableSizeReader.java | 96.07% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/controller/api/resources/PqlQueryResource.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...er/api/resources/PinotInstanceRestletResource.java | 65.95% <100%> (+0.74%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/common/exception/InstanceNotFoundException.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.65% <100%> (+0.22%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8f239f5...a61732a. Read the comment docs.\n. # Codecov Report\nMerging #3762 into master will decrease coverage by 0.07%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3762      +/-\n===========================================\n- Coverage     67.17%   67.1%   -0.08%   \n  Complexity        4       4            \n===========================================\n  Files          1027    1027            \n  Lines         50799   50799            \n  Branches       7091    7091            \n===========================================\n- Hits          34123   34087      -36   \n- Misses        14350   14397      +47   \n+ Partials       2326    2315      -11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 57.14% <0%> (-22.23%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f8a1ff2...4f1529d. Read the comment docs.\n. # Codecov Report\nMerging #3763 into master will increase coverage by 0.08%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3763      +/-\n============================================\n+ Coverage     67.09%   67.17%   +0.08%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50799    50814      +15   \n  Branches       7091     7091            \n============================================\n+ Hits          34082    34135      +53   \n+ Misses        14400    14350      -50   \n- Partials       2317     2329      +12\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.79% <100%> (+0.63%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 94b34e2...f538819. Read the comment docs.\n. # Codecov Report\nMerging #3768 into master will decrease coverage by 0.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3768      +/-\n============================================\n- Coverage     67.17%   67.05%   -0.12%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50799    50799            \n  Branches       7091     7091            \n============================================\n- Hits          34123    34064      -59   \n- Misses        14350    14414      +64   \n+ Partials       2326     2321       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 57.14% <0%> (-22.23%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 37fb02b...3b19e29. Read the comment docs.\n. # Codecov Report\nMerging #3770 into master will decrease coverage by 0.16%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3770      +/-\n============================================\n- Coverage     67.17%   67.01%   -0.17%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50799    50798       -1   \n  Branches       7091     7091            \n============================================\n- Hits          34123    34040      -83   \n- Misses        14350    14429      +79   \n- Partials       2326     2329       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 65.09% <\u00f8> (+0.6%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...r/validation/RealtimeSegmentValidationManager.java | 42.85% <0%> (-36.51%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.47% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2ce41cf...66ef450. Read the comment docs.\n. # Codecov Report\nMerging #3771 into master will increase coverage by 0.13%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3771      +/-\n===========================================\n+ Coverage     67.17%   67.3%   +0.13%   \n  Complexity        4       4            \n===========================================\n  Files          1027    1027            \n  Lines         50799   50799            \n  Branches       7091    7091            \n===========================================\n+ Hits          34123   34192      +69   \n+ Misses        14350   14269      -81   \n- Partials       2326    2338      +12\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 64% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.17% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ... and 26 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2ce41cf...05e79f3. Read the comment docs.\n. # Codecov Report\nMerging #3772 into master will increase coverage by 0.24%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3772      +/-\n============================================\n+ Coverage     67.02%   67.26%   +0.24%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50798    50798            \n  Branches       7091     7091            \n============================================\n+ Hits          34045    34169     +124   \n+ Misses        14424    14295     -129   \n- Partials       2329     2334       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/data/manager/BaseTableDataManager.java | 92.59% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/core/common/DataBlockCache.java | 79.38% <0%> (-0.77%) | 0% <0%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.56% <0%> (-0.59%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.16% <0%> (+0.3%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 67c6507...2f6b1f1. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@7e14e4f). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3776   +/-\n=========================================\n  Coverage          ?   67.08%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1027         \n  Lines             ?    50812         \n  Branches          ?     7091         \n=========================================\n  Hits              ?    34086         \n  Misses            ?    14407         \n  Partials          ?     2319\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7e14e4f...b3d63a1. Read the comment docs.\n. # Codecov Report\nMerging #3781 into master will decrease coverage by 0.06%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3781      +/-\n============================================\n- Coverage     67.22%   67.15%   -0.07%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50812    50812            \n  Branches       7091     7091            \n============================================\n- Hits          34159    34125      -34   \n- Misses        14312    14339      +27   \n- Partials       2341     2348       +7\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 64.44% <0%> (-17.78%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | 0% <0%> (\u00f8) | |\n| ...n/java/org/apache/pinot/core/transport/Server.java | 59.25% <0%> (-7.41%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 80% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...ore/startree/v2/builder/BaseSingleTreeBuilder.java | 90.47% <0%> (-4.77%) | 0% <0%> (\u00f8) | |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 84.09% <0%> (-4.55%) | 0% <0%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 98ef340...49b0d22. Read the comment docs.\n. # Codecov Report\nMerging #3783 into master will increase coverage by 0.05%.\nThe diff coverage is 66.66%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3783      +/-\n============================================\n+ Coverage     67.22%   67.28%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50812    50816       +4   \n  Branches       7091     7091            \n============================================\n+ Hits          34159    34192      +33   \n+ Misses        14312    14286      -26   \n+ Partials       2341     2338       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/common/config/CombinedConfig.java | 34.48% <0%> (-2.56%) | 0 <0> (\u00f8) | |\n| ...not/controller/api/resources/PinotTableSchema.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...main/java/org/apache/pinot/common/data/Schema.java | 80.51% <100%> (+0.17%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ava/org/apache/pinot/common/utils/SchemaUtils.java | 9.85% <50%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/api/resources/PinotSchemaRestletResource.java | 40.57% <50%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...er/validation/BrokerResourceValidationManager.java | 31.57% <0%> (-42.11%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cc658e4...71b04e6. Read the comment docs.\n. # Codecov Report\nMerging #3784 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3784      +/-\n============================================\n+ Coverage     67.29%   67.34%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50816    50816            \n  Branches       7091     7091            \n============================================\n+ Hits          34199    34224      +25   \n+ Misses        14284    14264      -20   \n+ Partials       2333     2328       -5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 74.48% <0%> (-7.15%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 76.36% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| .../org/apache/pinot/transport/netty/NettyServer.java | 80.8% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.79% <0%> (+0.29%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 88.46% <0%> (+0.96%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 80.11% <0%> (+1.16%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e9d4100...9f6308b. Read the comment docs.\n. # Codecov Report\nMerging #3785 into master will decrease coverage by 0.03%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3785      +/-\n============================================\n- Coverage     67.29%   67.26%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50816    50817       +1   \n  Branches       7091     7091            \n============================================\n- Hits          34199    34184      -15   \n- Misses        14284    14301      +17   \n+ Partials       2333     2332       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/pinot/common/data/DateTimeFormatPatternSpec.java | 68.75% <100%> (+1%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 51.64% <0%> (-23.08%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SVScanDocIdIterator.java | 67.85% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| .../org/apache/pinot/transport/netty/NettyServer.java | 80.8% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.76% <0%> (-2.22%) | 0% <0%> (\u00f8) | |\n| ...not/common/metadata/segment/SegmentZKMetadata.java | 77.5% <0%> (-0.63%) | 0% <0%> (\u00f8) | |\n| ... and 14 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e9d4100...f839df6. Read the comment docs.\n. # Codecov Report\nMerging #3786 into master will decrease coverage by 0.27%.\nThe diff coverage is 50%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3786      +/-\n============================================\n- Coverage     67.29%   67.02%   -0.28%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50816    50819       +3   \n  Branches       7091     7091            \n============================================\n- Hits          34199    34061     -138   \n- Misses        14284    14437     +153   \n+ Partials       2333     2321      -12\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ndex/converter/SegmentV1V2ToV3FormatConverter.java | 73.55% <50%> (-1.03%) | 0 <0> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.37% <0%> (-48.36%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 31.57% <0%> (-42.11%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 70.4% <0%> (-11.23%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 47.22% <0%> (-11.12%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update e9d4100...321df33. Read the comment docs.\n. # Codecov Report\nMerging #3788 into master will increase coverage by 0.12%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3788      +/-\n============================================\n+ Coverage     67.13%   67.26%   +0.12%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50819    50819            \n  Branches       7091     7091            \n============================================\n+ Hits          34118    34181      +63   \n+ Misses        14371    14303      -68   \n- Partials       2330     2335       +5\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 89.45% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...er/validation/BrokerResourceValidationManager.java | 47.36% <0%> (-26.32%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 57.14% <0%> (-23.81%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.38% <0%> (-1.65%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 54.43% <0%> (-1.19%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 103bc78...5168cc3. Read the comment docs.\n. # Codecov Report\nMerging #3791 into master will increase coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3791      +/-\n============================================\n+ Coverage     67.13%   67.17%   +0.03%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50819    50819            \n  Branches       7091     7091            \n============================================\n+ Hits          34118    34136      +18   \n+ Misses        14371    14351      -20   \n- Partials       2330     2332       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...n/java/org/apache/pinot/core/transport/Server.java | 59.25% <0%> (-7.41%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 84.09% <0%> (-4.55%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 77.77% <0%> (-3.18%) | 0% <0%> (\u00f8) | |\n| ...l/FixedByteSingleColumnMultiValueReaderWriter.java | 68.91% <0%> (-2.08%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.38% <0%> (-1.65%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 881de3f...dd7ed7f. Read the comment docs.\n. # Codecov Report\nMerging #3793 into master will decrease coverage by 0.12%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3793      +/-\n============================================\n- Coverage     67.13%   67.01%   -0.13%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50819    50819            \n  Branches       7091     7091            \n============================================\n- Hits          34118    34055      -63   \n- Misses        14371    14447      +76   \n+ Partials       2330     2317      -13\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...r/validation/RealtimeSegmentValidationManager.java | 42.85% <0%> (-38.1%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-15.16%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 70.4% <0%> (-4.09%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.76% <0%> (-2.22%) | 0% <0%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.38% <0%> (-1.65%) | 0% <0%> (\u00f8) | |\n| ...ata/manager/realtime/RealtimeTableDataManager.java | 41.17% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 881de3f...7631dfa. Read the comment docs.\n. # Codecov Report\nMerging #3796 into master will decrease coverage by 0.2%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3796      +/-\n============================================\n- Coverage     67.24%   67.03%   -0.21%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50819    50823       +4   \n  Branches       7091     7091            \n============================================\n- Hits          34174    34070     -104   \n- Misses        14303    14428     +125   \n+ Partials       2342     2325      -17\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ndex/converter/SegmentV1V2ToV3FormatConverter.java | 73.98% <100%> (+0.43%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/startree/v2/builder/MultipleTreesBuilder.java | 90.24% <100%> (+0.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 30.76% <0%> (-43.96%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 42.85% <0%> (-36.51%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 47.36% <0%> (-26.32%) | 0% <0%> (\u00f8) | |\n| ...e/pinot/core/io/writer/impl/MmapMemoryManager.java | 76.92% <0%> (-9.24%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a1a7f42...13dfc09. Read the comment docs.\n. # Codecov Report\nMerging #3802 into master will increase coverage by 7.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3802      +/-\n============================================\n+ Coverage     60.11%   67.23%   +7.11%   \n  Complexity        4        4            \n============================================\n  Files          1149     1027     -122   \n  Lines         57817    50819    -6998   \n  Branches       8014     7091     -923   \n============================================\n- Hits          34759    34168     -591   \n+ Misses        20647    14326    -6321   \n+ Partials       2411     2325      -86\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...r/validation/RealtimeSegmentValidationManager.java | 53.96% <0%> (-26.99%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 61.11% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.38% <0%> (-1.65%) | 0% <0%> (\u00f8) | |\n| ... and 147 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2321864...436bdca. Read the comment docs.\n. # Codecov Report\nMerging #3808 into master will decrease coverage by 0.03%.\nThe diff coverage is 89.55%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3808      +/-\n============================================\n- Coverage      67.1%   67.06%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1027     1028       +1   \n  Lines         50819    50886      +67   \n  Branches       7091     7105      +14   \n============================================\n+ Hits          34102    34128      +26   \n- Misses        14392    14434      +42   \n+ Partials       2325     2324       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...r/transform/function/TransformFunctionFactory.java | 61.22% <100%> (+0.8%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...transform/function/RemainderTransformFunction.java | 89.39% <89.39%> (\u00f8) | 0 <0> (?) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 31.57% <0%> (-42.11%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 70.4% <0%> (-10.21%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 18 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update cd2dc04...fb97cac. Read the comment docs.\n. # Codecov Report\nMerging #3813 into master will decrease coverage by 0.05%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3813      +/-\n============================================\n- Coverage      67.1%   67.05%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50819    50816       -3   \n  Branches       7091     7091            \n============================================\n- Hits          34102    34073      -29   \n- Misses        14392    14406      +14   \n- Partials       2325     2337      +12\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/pinot/common/utils/FileUploadDownloadClient.java | 69.62% <100%> (-0.67%) | 0 <0> (\u00f8) | |\n| ...ot/core/data/readers/ThriftRecordReaderConfig.java | 80% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 60.94% <100%> (+6.06%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 42.85% <0%> (-14.29%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 77.77% <0%> (-10.5%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ac058c5...e90ffd5. Read the comment docs.\n. # Codecov Report\nMerging #3819 into master will increase coverage by <.01%.\nThe diff coverage is 67.33%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3819      +/-\n===========================================\n+ Coverage     67.19%   67.2%   +<.01%   \n  Complexity        4       4            \n===========================================\n  Files          1027    1027            \n  Lines         50816   50826      +10   \n  Branches       7091    7094       +3   \n===========================================\n+ Hits          34147   34157      +10   \n+ Misses        14333   14332       -1   \n- Partials       2336    2337       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...troller/helix/core/retention/RetentionManager.java | 75% <\u00f8> (+0.97%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 29.06% <\u00f8> (-34.67%) | 0 <0> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 74.72% <0%> (+4.31%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/metrics/ControllerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pinot/core/periodictask/PeriodicTaskScheduler.java | 86.11% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ache/pinot/core/periodictask/BasePeriodicTask.java | 48.43% <42.59%> (-31.57%) | 0 <0> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 76.31% <74.07%> (+7.98%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...r/validation/RealtimeSegmentValidationManager.java | 81.66% <80%> (+38.8%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...er/validation/BrokerResourceValidationManager.java | 50% <80%> (+2.63%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/pinot/controller/helix/SegmentStatusChecker.java | 89.68% <82.75%> (+0.7%) | 0 <0> (\u00f8) | :arrow_down: |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eacb020...7654227. Read the comment docs.\n. # Codecov Report\nMerging #3821 into master will decrease coverage by 0.12%.\nThe diff coverage is 94.02%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3821      +/-\n============================================\n- Coverage     67.19%   67.07%   -0.13%   \n  Complexity        4        4            \n============================================\n  Files          1027     1029       +2   \n  Lines         50816    50775      -41   \n  Branches       7091     7092       +1   \n============================================\n- Hits          34147    34058      -89   \n- Misses        14333    14387      +54   \n+ Partials       2336     2330       -6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../pinot/core/segment/name/SegmentNameGenerator.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| .../core/segment/name/SimpleSegmentNameGenerator.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 60.47% <100%> (-0.47%) | 0 <0> (\u00f8) | |\n| ...t/creator/impl/SegmentIndexCreationDriverImpl.java | 89.62% <100%> (+0.17%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/core/segment/name/FixedSegmentNameGenerator.java | 80% <80%> (\u00f8) | 0 <0> (?) | |\n| ...gment/name/NormalizedDateSegmentNameGenerator.java | 93.02% <93.02%> (+18.82%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 28.57% <0%> (-35.17%) | 0% <0%> (\u00f8) | |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update eb0d5b6...1a5b4ff. Read the comment docs.\n. # Codecov Report\nMerging #3833 into master will decrease coverage by 0.09%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3833     +/-\n===========================================\n- Coverage     67.22%   67.13%   -0.1%   \n  Complexity        4        4           \n===========================================\n  Files          1027     1027           \n  Lines         50826    50826           \n  Branches       7094     7094           \n===========================================\n- Hits          34170    34124     -46   \n- Misses        14323    14379     +56   \n+ Partials       2333     2323     -10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/validation/BrokerResourceValidationManager.java | 50% <0%> (-31.25%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 55% <0%> (-26.67%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| ...elix/core/periodictask/ControllerPeriodicTask.java | 76.31% <0%> (-7.9%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7832abf...0d17d21. Read the comment docs.\n. # Codecov Report\nMerging #3834 into master will increase coverage by 0.08%.\nThe diff coverage is 61.53%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3834      +/-\n===========================================\n+ Coverage     67.12%   67.2%   +0.08%   \n  Complexity        4       4            \n===========================================\n  Files          1030    1030            \n  Lines         50829   50838       +9   \n  Branches       7102    7105       +3   \n===========================================\n+ Hits          34121   34168      +47   \n+ Misses        14369   14333      -36   \n+ Partials       2339    2337       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...java/org/apache/pinot/filesystem/AzurePinotFS.java | 11.95% <\u00f8> (+0.25%) | 4 <0> (\u00f8) | :arrow_down: |\n| ...ava/org/apache/pinot/filesystem/HadoopPinotFS.java | 0% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 72.62% <0%> (+1.24%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...java/org/apache/pinot/filesystem/LocalPinotFS.java | 87.09% <100%> (-0.6%) | 0 <0> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 77.59% <50%> (-2.08%) | 0 <0> (\u00f8) | |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 46.7% <50%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...main/java/org/apache/pinot/filesystem/PinotFS.java | 78.57% <75%> (-21.43%) | 0 <0> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 25% <0%> (-56.25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| ... and 29 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9269f5e...e1e358f. Read the comment docs.\n. # Codecov Report\nMerging #3835 into master will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3835      +/-\n============================================\n+ Coverage     67.22%   67.25%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files          1027     1027            \n  Lines         50826    50826            \n  Branches       7094     7094            \n============================================\n+ Hits          34170    34182      +12   \n+ Misses        14323    14300      -23   \n- Partials       2333     2344      +11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-38.34%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 50% <0%> (-31.25%) | 0% <0%> (\u00f8) | |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 80% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/broker/queryquota/HitCounter.java | 92.3% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7832abf...9c47e40. Read the comment docs.\n. # Codecov Report\nMerging #3836 into master will decrease coverage by 16.34%.\nThe diff coverage is 75%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3836       +/-\n=============================================\n- Coverage     67.02%   50.68%   -16.35%   \n  Complexity        4        4             \n=============================================\n  Files          1029     1150      +121   \n  Lines         50785    57721     +6936   \n  Branches       7095     7996      +901   \n=============================================\n- Hits          34040    29253     -4787   \n- Misses        14419    26300    +11881   \n+ Partials       2326     2168      -158\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...main/java/org/apache/pinot/filesystem/PinotFS.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../controller/helix/core/SegmentDeletionManager.java | 73.98% <75%> (-5.7%) | 0 <0> (\u00f8) | |\n| ...e/pinot/core/operator/blocks/EmptyFilterBlock.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...lection/iterator/FloatSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ot/minion/events/EventObserverFactoryRegistry.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...minion/executor/ConvertToRawIndexTaskExecutor.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...on/iterator/FloatArraySelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/minion/metrics/MinionMeter.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/minion/metrics/MinionQueryPhase.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...selection/iterator/IntSelectionColumnIterator.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 449 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3217d80...b63ca13. Read the comment docs.\n. # Codecov Report\nMerging #3837 into master will decrease coverage by 0.13%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3837      +/-\n============================================\n- Coverage     67.22%   67.08%   -0.14%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50785    50785            \n  Branches       7095     7095            \n============================================\n- Hits          34139    34070      -69   \n- Misses        14316    14389      +73   \n+ Partials       2330     2326       -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-40.01%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-3.48%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 62.29% <0%> (-3.28%) | 0% <0%> (\u00f8) | |\n| ... and 19 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update fb9c1dc...72fff5a. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1f9d096). Click here to learn what that means.\nThe diff coverage is 8.33%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3838   +/-\n=========================================\n  Coverage          ?   67.26%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1029         \n  Lines             ?    50808         \n  Branches          ?     7100         \n=========================================\n  Hits              ?    34177         \n  Misses            ?    14305         \n  Partials          ?     2326\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 61.76% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| ...ava/org/apache/pinot/filesystem/HadoopPinotFS.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 71.38% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f9d096...017219c. Read the comment docs.\n. # Codecov Report\nMerging #3840 into master will increase coverage by 9.84%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3840      +/-\n============================================\n+ Coverage     57.22%   67.07%   +9.84%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50785    50785            \n  Branches       7095     7095            \n============================================\n+ Hits          29061    34063    +5002   \n+ Misses        19575    14399    -5176   \n- Partials       2149     2323     +174\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...regation/function/customobject/QuantileDigest.java | 58.18% <0%> (+0.44%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 54.43% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 87.73% <0%> (+0.76%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/utils/ServiceStatus.java | 71.54% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 82% <0%> (+0.83%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.45% <0%> (+1.04%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.65% <0%> (+1.09%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 74.72% <0%> (+1.09%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 319 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 7ca6841...f5ad5c3. Read the comment docs.\n. # Codecov Report\nMerging #3844 into master will increase coverage by 9.84%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3844      +/-\n============================================\n+ Coverage     57.21%   67.06%   +9.84%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50785    50785            \n  Branches       7095     7095            \n============================================\n+ Hits          29059    34060    +5001   \n+ Misses        19576    14397    -5179   \n- Partials       2150     2328     +178\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 54.43% <0%> (+0.59%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/core/common/DataBlockCache.java | 77.86% <0%> (+0.76%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 87.73% <0%> (+0.76%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/utils/ServiceStatus.java | 71.54% <0%> (+0.81%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../pinot/core/segment/index/SegmentMetadataImpl.java | 82% <0%> (+0.83%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...e/io/writer/impl/MutableOffHeapByteArrayStore.java | 86.45% <0%> (+1.04%) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.65% <0%> (+1.09%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 320 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 729ba77...0b4024d. Read the comment docs.\n. # Codecov Report\nMerging #3845 into master will decrease coverage by 0.03%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3845      +/-\n============================================\n- Coverage     67.16%   67.13%   -0.04%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50785    50785            \n  Branches       7095     7095            \n============================================\n- Hits          34110    34092      -18   \n- Misses        14353    14368      +15   \n- Partials       2322     2325       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/validation/BrokerResourceValidationManager.java | 50% <0%> (-31.25%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-11.67%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 81.45% <0%> (-3.32%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 093f917...4ca7e2c. Read the comment docs.\n. # Codecov Report\nMerging #3849 into master will increase coverage by 0.13%.\nThe diff coverage is 84.61%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3849      +/-\n============================================\n+ Coverage     67.06%   67.19%   +0.13%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50785    50798      +13   \n  Branches       7095     7096       +1   \n============================================\n+ Hits          34060    34135      +75   \n+ Misses        14402    14331      -71   \n- Partials       2323     2332       +9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...i/resources/PinotSegmentUploadRestletResource.java | 66.66% <84.61%> (+0.82%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...elix/core/minion/generator/TaskGeneratorUtils.java | 72.22% <0%> (-12.4%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 78.35% <0%> (-2.58%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a3dd11b...a3e619b. Read the comment docs.\n. # Codecov Report\nMerging #3850 into master will increase coverage by 0.25%.\nThe diff coverage is 69.59%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3850      +/-\n============================================\n+ Coverage     67.06%   67.32%   +0.25%   \n  Complexity        4        4            \n============================================\n  Files          1029     1032       +3   \n  Lines         50785    50955     +170   \n  Branches       7095     7122      +27   \n============================================\n+ Hits          34060    34304     +244   \n+ Misses        14402    14306      -96   \n- Partials       2323     2345      +22\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/core/common/ObjectSerDeUtils.java | 91.9% <100%> (+0.34%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...regation/function/VarPopMVAggregationFunction.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...gregation/function/AggregationFunctionFactory.java | 85.1% <100%> (+0.66%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../aggregation/function/AggregationFunctionType.java | 96.22% <100%> (+0.14%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ggregation/function/VarPopAggregationFunction.java | 56.81% <56.81%> (\u00f8) | 0 <0> (?) | |\n| ...gregation/function/customobject/VarianceTuple.java | 63.15% <63.15%> (\u00f8) | 0 <0> (?) | |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ... and 33 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a3dd11b...2918381. Read the comment docs.\n. # Codecov Report\nMerging #3852 into master will decrease coverage by 0.01%.\nThe diff coverage is 75.71%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3852      +/-\n============================================\n- Coverage     67.33%   67.32%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files          1032     1034       +2   \n  Lines         50948    50998      +50   \n  Branches       7119     7122       +3   \n============================================\n+ Hits          34305    34332      +27   \n- Misses        14308    14312       +4   \n- Partials       2335     2354      +19\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/pinot/core/data/readers/RecordReaderFactory.java | 33.33% <0%> (-1.45%) | 0 <0> (\u00f8) | |\n| ...org/apache/pinot/core/data/readers/FileFormat.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ache/pinot/core/data/readers/AvroRecordReader.java | 86.66% <100%> (+3.33%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ain/java/org/apache/pinot/core/util/AvroUtils.java | 45.53% <66.66%> (+4.04%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/org/apache/pinot/common/utils/ParquetUtils.java | 72.22% <72.22%> (\u00f8) | 0 <0> (?) | |\n| ...e/pinot/core/data/readers/ParquetRecordReader.java | 83.87% <83.87%> (\u00f8) | 0 <0> (?) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 85.71% <0%> (-10.72%) | 0% <0%> (\u00f8) | |\n| ... and 28 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 8cadaec...53753d8. Read the comment docs.\n. # Codecov Report\nMerging #3856 into master will increase coverage by 0.2%.\nThe diff coverage is 94.44%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster    #3856     +/-\n===========================================\n+ Coverage     67.03%   67.23%   +0.2%   \n  Complexity        4        4           \n===========================================\n  Files          1029     1030      +1   \n  Lines         50790    50811     +21   \n  Branches       7096     7098      +2   \n===========================================\n+ Hits          34045    34163    +118   \n+ Misses        14413    14312    -101   \n- Partials       2332     2336      +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../pinot/controller/api/upload/SegmentValidator.java | 65.38% <100%> (+5.38%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 67.82% <100%> (+1.98%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.9% <100%> (+0.51%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/controller/api/upload/ZKOperator.java | 68.88% <100%> (+0.34%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ontroller/api/upload/SegmentValidatorResponse.java | 80% <80%> (\u00f8) | 0 <0> (?) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 70.85% <0%> (-2.02%) | 0% <0%> (\u00f8) | |\n| ...ache/pinot/common/metadata/ZKMetadataProvider.java | 72.45% <0%> (-1.2%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a745087...43b849e. Read the comment docs.\n. # Codecov Report\nMerging #3857 into master will decrease coverage by 0.17%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3857      +/-\n============================================\n- Coverage     67.32%   67.14%   -0.18%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50790    50790            \n  Branches       7096     7096            \n============================================\n- Hits          34192    34103      -89   \n- Misses        14258    14356      +98   \n+ Partials       2340     2331       -9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 43.47% <0%> (-36.24%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 25% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../broker/helix/LiveInstancesChangeListenerImpl.java | 62.79% <0%> (-2.33%) | 0% <0%> (\u00f8) | |\n| .../server/starter/helix/SegmentFetcherAndLoader.java | 65.09% <0%> (-1.89%) | 0% <0%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 50d3eae...4d32de6. Read the comment docs.\n. # Codecov Report\nMerging #3860 into master will increase coverage by 0.26%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3860      +/-\n============================================\n+ Coverage     67.06%   67.32%   +0.26%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50790    50790            \n  Branches       7096     7096            \n============================================\n+ Hits          34062    34196     +134   \n+ Misses        14405    14260     -145   \n- Partials       2323     2334      +11\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 83.63% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 57.63% <0%> (-1.39%) | 0% <0%> (\u00f8) | |\n| ...che/pinot/core/query/scheduler/QueryScheduler.java | 85.13% <0%> (-1.36%) | 0% <0%> (\u00f8) | |\n| ...g/apache/pinot/common/metrics/AbstractMetrics.java | 75.33% <0%> (-1.34%) | 0% <0%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.56% <0%> (-0.59%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 57.74% <0%> (-0.45%) | 0% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.49% <0%> (-0.2%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update bfce886...5d4bfce. Read the comment docs.\n. # Codecov Report\nMerging #3862 into master will increase coverage by 0.02%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3862      +/-\n============================================\n+ Coverage     67.03%   67.05%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files          1029     1029            \n  Lines         50790    50791       +1   \n  Branches       7096     7096            \n============================================\n+ Hits          34045    34057      +12   \n+ Misses        14413    14401      -12   \n- Partials       2332     2333       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...che/pinot/core/query/scheduler/QueryScheduler.java | 85.33% <100%> (+0.19%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-11.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 47.22% <0%> (-8.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 70.93% <0%> (-2.33%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.76% <0%> (-2.22%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/data/manager/BaseTableDataManager.java | 92.59% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a745087...bbaeffb. Read the comment docs.\n. # Codecov Report\nMerging #3864 into master will decrease coverage by 25.87%.\nThe diff coverage is 69.16%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3864       +/-\n=============================================\n- Coverage     67.33%   41.45%   -25.88%   \n=============================================\n  Files          1032     1155      +123   \n  Lines         50948    57900     +6952   \n  Branches       7119     8020      +901   \n=============================================\n- Hits          34305    24005    -10300   \n- Misses        14308    31855    +17547   \n+ Partials       2335     2040      -295\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/common/utils/CommonConstants.java | 35.55% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/tools/admin/command/StartControllerCommand.java | 0% <0%> (\u00f8) | 0 <0> (?) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 44.23% <100%> (-26.03%) | 0 <0> (\u00f8) | |\n| ...ore/rebalance/RebalanceSegmentStrategyFactory.java | 42.1% <100%> (-22.61%) | 0 <0> (\u00f8) | |\n| .../pinot/controller/ControllerLeadershipManager.java | 70.73% <100%> (+0.73%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../helix/core/realtime/SegmentCompletionManager.java | 31.73% <100%> (-37.92%) | 0 <0> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 39.05% <58.33%> (-21.86%) | 0 <0> (\u00f8) | |\n| ...org/apache/pinot/controller/ControllerStarter.java | 63.07% <69.23%> (+0.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 40.52% <75%> (-6.18%) | 0 <0> (\u00f8) | |\n| .../org/apache/pinot/common/http/MultiGetRequest.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 655 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 70b3b06...4c77143. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1f9d096). Click here to learn what that means.\nThe diff coverage is 0%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3868   +/-\n=========================================\n  Coverage          ?   67.07%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1029         \n  Lines             ?    50801         \n  Branches          ?     7098         \n=========================================\n  Hits              ?    34075         \n  Misses            ?    14395         \n  Partials          ?     2331\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.86% <0%> (\u00f8) | 0 <0> (?) | |\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 66.75% <0%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f9d096...a1988ce. Read the comment docs.\n. # Codecov Report\nMerging #3869 into master will decrease coverage by 0.06%.\nThe diff coverage is 84.37%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3869      +/-\n============================================\n- Coverage     67.33%   67.26%   -0.07%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50948    50967      +19   \n  Branches       7119     7121       +2   \n============================================\n- Hits          34305    34285      -20   \n- Misses        14308    14332      +24   \n- Partials       2335     2350      +15\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...altime/impl/kafka/KafkaStreamConfigProperties.java | 25% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...altime/impl/kafka/KafkaPartitionLevelConsumer.java | 68.57% <100%> (+6.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 70.05% <100%> (+0.18%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...realtime/impl/kafka/KafkaLowLevelStreamConfig.java | 62.74% <61.53%> (+1.2%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 80% <0%> (-12.73%) | 0% <0%> (\u00f8) | |\n| ...y/aggregation/function/AvgAggregationFunction.java | 69.87% <0%> (-10.85%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 85.71% <0%> (-10.72%) | 0% <0%> (\u00f8) | |\n| ... and 25 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update acc123c...fec08c6. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@1f9d096). Click here to learn what that means.\nThe diff coverage is 100%.\n\n\n```diff\n@@           Coverage Diff            @@\nmaster   #3870   +/-\n========================================\n  Coverage          ?   67.3%         \n  Complexity        ?       4         \n========================================\n  Files             ?    1029         \n  Lines             ?   50791         \n  Branches          ?    7096         \n========================================\n  Hits              ?   34185         \n  Misses            ?   14274         \n  Partials          ?    2332\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...che/pinot/core/query/scheduler/QueryScheduler.java | 86.66% <100%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 1f9d096...4d4a09e. Read the comment docs.\n. # Codecov Report\nMerging #3872 into master will decrease coverage by 0.17%.\nThe diff coverage is 85%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3872      +/-\n===========================================\n- Coverage     67.28%   67.1%   -0.18%   \n  Complexity        4       4            \n===========================================\n  Files          1029    1030       +1   \n  Lines         50801   50875      +74   \n  Branches       7098    7102       +4   \n===========================================\n- Hits          34180   34139      -41   \n- Misses        14286   14417     +131   \n+ Partials       2335    2319      -16\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/query/aggregation/groupby/GroupKeyGenerator.java | 100% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pache/pinot/core/operator/ExecutionStatistics.java | 96.42% <100%> (+0.59%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ion/groupby/AggregationGroupByTrimmingService.java | 94.53% <100%> (+0.08%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...he/pinot/core/operator/CombineGroupByOperator.java | 78.72% <100%> (+1.97%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ry/aggregation/groupby/DefaultGroupByExecutor.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/operator/query/AggregationGroupByOperator.java | 96% <100%> (+0.34%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/operator/blocks/IntermediateResultsBlock.java | 76.15% <100%> (+1.98%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/metrics/ServerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/query/aggregation/groupby/GroupByStatistics.java | 44.44% <44.44%> (\u00f8) | 0 <0> (?) | |\n| ...upby/NoDictionaryMultiColumnGroupKeyGenerator.java | 91.91% <66.66%> (-0.79%) | 0 <0> (\u00f8) | |\n| ... and 34 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f70935e...566f452. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@f697214). Click here to learn what that means.\nThe diff coverage is 55.21%.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3877   +/-\n=========================================\n  Coverage          ?   66.99%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1032         \n  Lines             ?    51047         \n  Branches          ?     7126         \n=========================================\n  Hits              ?    34201         \n  Misses            ?    14503         \n  Partials          ?     2343\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 94.15% <\u00f8> (\u00f8) | 0 <0> (?) | |\n| .../realtime/segment/CommittingSegmentDescriptor.java | 81.25% <100%> (\u00f8) | 0 <0> (?) | |\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 66.5% <100%> (\u00f8) | 0 <0> (?) | |\n| .../helix/core/realtime/SegmentCompletionManager.java | 69.51% <100%> (\u00f8) | 0 <0> (?) | |\n| ...er/api/resources/LLCSegmentCompletionHandlers.java | 52.84% <51%> (\u00f8) | 0 <0> (?) | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update f697214...1c0642e. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@126b022). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3884   +/-\n=========================================\n  Coverage          ?   67.03%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1029         \n  Lines             ?    50808         \n  Branches          ?     7100         \n=========================================\n  Hits              ?    34059         \n  Misses            ?    14420         \n  Partials          ?     2329\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 126b022...283baeb. Read the comment docs.\n. # Codecov Report\nMerging #3885 into master will increase coverage by 6.66%.\nThe diff coverage is 75.92%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3885      +/-\n============================================\n+ Coverage     60.45%   67.11%   +6.66%   \n  Complexity        4        4            \n============================================\n  Files          1153     1032     -121   \n  Lines         57766    50865    -6901   \n  Branches       8012     7105     -907   \n============================================\n- Hits          34920    34140     -780   \n+ Misses        20419    14382    -6037   \n+ Partials       2427     2343      -84\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...esthandler/ConnectionPoolBrokerRequestHandler.java | 88.27% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...broker/broker/helix/ExternalViewChangeHandler.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...a/org/apache/pinot/common/metrics/BrokerTimer.java | 88.88% <100%> (+1.38%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...oker/broker/helix/InstanceConfigChangeHandler.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...a/org/apache/pinot/common/metrics/BrokerMeter.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pache/pinot/broker/broker/BrokerServerBuilder.java | 91.07% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 65.15% <63.79%> (+2.85%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...broker/broker/helix/LiveInstanceChangeHandler.java | 65.9% <75%> (\u00f8) | 0 <0> (?) | |\n| .../pinot/broker/broker/helix/HelixBrokerStarter.java | 73.1% <92.85%> (+0.78%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ... and 152 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6fc48ce...549d0c6. Read the comment docs.\n. # Codecov Report\n:exclamation: No coverage uploaded for pull request base (master@4e7ffb3). Click here to learn what that means.\nThe diff coverage is n/a.\n\n\n```diff\n@@            Coverage Diff            @@\nmaster    #3886   +/-\n=========================================\n  Coverage          ?   67.07%         \n  Complexity        ?        4         \n=========================================\n  Files             ?     1029         \n  Lines             ?    50808         \n  Branches          ?     7100         \n=========================================\n  Hits              ?    34078         \n  Misses            ?    14395         \n  Partials          ?     2335\n```\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4e7ffb3...1c69e27. Read the comment docs.\n. # Codecov Report\nMerging #3893 into master will increase coverage by 6.75%.\nThe diff coverage is 57.69%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3893      +/-\n===========================================\n+ Coverage     60.45%   67.2%   +6.75%   \n  Complexity        4       4            \n===========================================\n  Files          1153    1032     -121   \n  Lines         57766   50884    -6882   \n  Branches       8012    7107     -905   \n===========================================\n- Hits          34920   34198     -722   \n+ Misses        20419   14341    -6078   \n+ Partials       2427    2345      -82\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/realtime/PinotLLCRealtimeSegmentManager.java | 70.25% <52.63%> (-2.37%) | 0 <0> (\u00f8) | |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 56.25% <71.42%> (+0.62%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-48.84%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 43.47% <0%> (-36.24%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 50% <0%> (-31.25%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 73.33% <0%> (-2.23%) | 0% <0%> (\u00f8) | |\n| ... and 154 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6fc48ce...fdffabe. Read the comment docs.\n. # Codecov Report\nMerging #3894 into master will increase coverage by 6.67%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3894      +/-\n============================================\n+ Coverage     60.45%   67.12%   +6.67%   \n  Complexity        4        4            \n============================================\n  Files          1153     1030     -123   \n  Lines         57766    50838    -6928   \n  Branches       8012     7105     -907   \n============================================\n- Hits          34920    34126     -794   \n+ Misses        20419    14383    -6036   \n+ Partials       2427     2329      -98\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 25% <0%> (-56.25%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-48.84%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 58.33% <0%> (-23.34%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 81.45% <0%> (-3.32%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ... and 144 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6fc48ce...fe1268b. Read the comment docs.\n. # Codecov Report\nMerging #3895 into master will decrease coverage by 0.02%.\nThe diff coverage is 82.3%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3895      +/-\n============================================\n- Coverage     67.23%   67.21%   -0.03%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50897    50884      -13   \n  Branches       7109     7108       -1   \n============================================\n- Hits          34220    34200      -20   \n- Misses        14339    14344       +5   \n- Partials       2338     2340       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ain/java/org/apache/pinot/core/util/AvroUtils.java | 41.48% <\u00f8> (-11.41%) | 0 <0> (\u00f8) | |\n| ...e/pinot/core/data/readers/RecordReaderFactory.java | 42.85% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ache/pinot/core/data/readers/JSONRecordReader.java | 90% <100%> (-0.91%) | 0 <0> (\u00f8) | |\n| ...time/impl/kafka/AvroRecordToPinotRowGenerator.java | 100% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ache/pinot/core/data/readers/AvroRecordReader.java | 85.1% <100%> (+7.05%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...che/pinot/core/data/readers/RecordReaderUtils.java | 75.3% <77.94%> (+6.07%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...he/pinot/core/data/readers/ThriftRecordReader.java | 83.67% <83.33%> (+2.13%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...pache/pinot/core/data/readers/CSVRecordReader.java | 71.15% <88.88%> (+2.52%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...startree/executor/StarTreeAggregationExecutor.java | 72.72% <0%> (-27.28%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update ce551eb...1b87860. Read the comment docs.\n. # Codecov Report\nMerging #3898 into master will decrease coverage by 0.07%.\nThe diff coverage is 82.35%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3898      +/-\n============================================\n- Coverage     67.31%   67.23%   -0.08%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50865    50877      +12   \n  Branches       7105     7107       +2   \n============================================\n- Hits          34238    34209      -29   \n- Misses        14292    14329      +37   \n- Partials       2335     2339       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 66.66% <82.35%> (+1.51%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-39.54%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 43.47% <0%> (-36.24%) | 0% <0%> (\u00f8) | |\n| .../org/apache/pinot/client/PinotClientException.java | 33.33% <0%> (-33.34%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...inot/client/JsonAsyncHttpPinotClientTransport.java | 63.63% <0%> (-21.22%) | 0% <0%> (\u00f8) | |\n| ...pinot/broker/api/resources/PinotClientRequest.java | 23.8% <0%> (-19.05%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4964f91...c71a67d. Read the comment docs.\n. # Codecov Report\nMerging #3899 into master will decrease coverage by 0.17%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3899      +/-\n============================================\n- Coverage     67.31%   67.13%   -0.18%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50865    50865            \n  Branches       7105     7105            \n============================================\n- Hits          34238    34148      -90   \n- Misses        14292    14379      +87   \n- Partials       2335     2338       +3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-39.54%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 80% <0%> (-15.56%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-9.44%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/common/data/TimeFieldSpec.java | 91.35% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 4964f91...9b424ad. Read the comment docs.\n. # Codecov Report\nMerging #3900 into master will decrease coverage by 0.04%.\nThe diff coverage is 25.92%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3900      +/-\n============================================\n- Coverage     67.26%   67.21%   -0.05%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50881    50907      +26   \n  Branches       7108     7110       +2   \n============================================\n- Hits          34223    34218       -5   \n- Misses        14322    14355      +33   \n+ Partials       2336     2334       -2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/core/data/readers/GenericRowRecordReader.java | 94.11% <0%> (-5.89%) | 0 <0> (\u00f8) | |\n| ...data/readers/MultiplePinotSegmentRecordReader.java | 72.72% <0%> (-0.67%) | 0 <0> (\u00f8) | |\n| ...ache/pinot/core/data/readers/JSONRecordReader.java | 87.09% <0%> (-2.91%) | 0 <0> (\u00f8) | |\n| ...pache/pinot/core/data/readers/CSVRecordReader.java | 69.81% <0%> (-1.35%) | 0 <0> (\u00f8) | |\n| .../pinot/core/minion/segment/MapperRecordReader.java | 81.08% <0%> (-2.26%) | 0 <0> (\u00f8) | |\n| ...pinot/core/minion/segment/ReducerRecordReader.java | 90.19% <0%> (-1.81%) | 0 <0> (\u00f8) | |\n| ...ealtime/converter/RealtimeSegmentRecordReader.java | 58.33% <0%> (-2.54%) | 0 <0> (\u00f8) | |\n| ...he/pinot/core/data/readers/ThriftRecordReader.java | 82% <0%> (-1.68%) | 0 <0> (\u00f8) | |\n| ...va/org/apache/pinot/core/minion/SegmentPurger.java | 76.19% <0%> (-0.92%) | 0 <0> (\u00f8) | |\n| ...ache/pinot/core/minion/BackfillDateTimeColumn.java | 54.68% <0%> (-0.87%) | 0 <0> (\u00f8) | |\n| ... and 32 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 63f0d3d...43c80d1. Read the comment docs.\n. # Codecov Report\nMerging #3906 into master will increase coverage by 0.08%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3906      +/-\n============================================\n+ Coverage     67.23%   67.32%   +0.08%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50897    50897            \n  Branches       7109     7109            \n============================================\n+ Hits          34220    34264      +44   \n+ Misses        14339    14295      -44   \n  Partials       2338     2338\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 58.33% <0%> (-23.34%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 85.71% <0%> (-10.72%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/BaseOffHeapMutableDictionary.java | 81.03% <0%> (-2.88%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-2.74%) | 0% <0%> (\u00f8) | |\n| ...inot/core/operator/docidsets/AndBlockDocIdSet.java | 55.55% <0%> (-2.09%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 3b95a64...b11dd74. Read the comment docs.\n. # Codecov Report\nMerging #3910 into master will decrease coverage by 25.71%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3910       +/-\n=============================================\n- Coverage     67.13%   41.41%   -25.72%   \n=============================================\n  Files          1032     1155      +123   \n  Lines         50884    57812     +6928   \n  Branches       7108     8015      +907   \n=============================================\n- Hits          34161    23943    -10218   \n- Misses        14391    31837    +17446   \n+ Partials       2332     2032      -300\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...inot/core/data/readers/GenericRowRecordReader.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| .../org/apache/pinot/common/http/MultiGetRequest.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...n/function/PercentileEstMVAggregationFunction.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...che/pinot/common/restlet/resources/TablesList.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...che/pinot/pql/parsers/pql2/ast/OptionsAstNode.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ers/pql2/ast/PredicateParenthesisGroupAstNode.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/scheduler/TableBasedGroupMapper.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...t/core/segment/index/readers/OnHeapDictionary.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...ommon/utils/retry/RetriableOperationException.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ...t/core/query/scheduler/OutOfCapacityException.java | 0% <0%> (-100%) | 0% <0%> (\u00f8) | |\n| ... and 641 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update a7a8bb6...1976eaf. Read the comment docs.\n. # Codecov Report\nMerging #3912 into master will increase coverage by 21.1%.\nThe diff coverage is 85%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3912      +/-\n============================================\n+ Coverage     46.02%   67.13%   +21.1%   \n- Complexity        0        4       +4   \n============================================\n  Files          1032     1032            \n  Lines         50884    50881       -3   \n  Branches       7108     7108            \n============================================\n+ Hits          23421    34160   +10739   \n+ Misses        25488    14385   -11103   \n- Partials       1975     2336     +361\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/realtime/converter/RealtimeSegmentConverter.java | 75% <\u00f8> (+2.27%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 62.45% <100%> (+12.11%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 87.45% <57.14%> (+10.44%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 29.06% <0%> (-17.45%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...manager/realtime/HLRealtimeSegmentDataManager.java | 78.35% <0%> (-2.58%) | 0% <0%> (\u00f8) | |\n| ... and 527 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 867edcf...7b7f871. Read the comment docs.\n. # Codecov Report\nMerging #3913 into master will decrease coverage by 0.18%.\nThe diff coverage is 55.55%.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3913      +/-\n===========================================\n- Coverage     67.29%   67.1%   -0.19%   \n  Complexity        4       4            \n===========================================\n  Files          1032    1032            \n  Lines         50881   50920      +39   \n  Branches       7108    7117       +9   \n===========================================\n- Hits          34240   34170      -70   \n- Misses        14306   14413     +107   \n- Partials       2335    2337       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/common/utils/CommonConstants.java | 35.55% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../scheduler/tokenbucket/TokenPriorityScheduler.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ore/query/scheduler/fcfs/BoundedFCFSScheduler.java | 0% <0%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/query/scheduler/fcfs/FCFSQueryScheduler.java | 85.71% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...che/pinot/core/query/scheduler/QueryScheduler.java | 77.65% <57.69%> (-9.01%) | 0 <0> (\u00f8) | |\n| ...roker/requesthandler/BaseBrokerRequestHandler.java | 76.69% <58.06%> (-3.87%) | 0 <0> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 25% <0%> (-56.25%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-40.01%) | 0% <0%> (\u00f8) | |\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d9bbd68...6f95fd9. Read the comment docs.\n. # Codecov Report\nMerging #3914 into master will increase coverage by 21.25%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3914       +/-\n=============================================\n+ Coverage     46.02%   67.28%   +21.25%   \n- Complexity        0        4        +4   \n=============================================\n  Files          1032     1032             \n  Lines         50884    50884             \n  Branches       7108     7108             \n=============================================\n+ Hits          23421    34236    +10815   \n+ Misses        25488    14310    -11178   \n- Partials       1975     2338      +363\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/validation/BrokerResourceValidationManager.java | 25% <0%> (-56.25%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...ation/function/MinMaxRangeAggregationFunction.java | 73.25% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| ...ava/org/apache/pinot/common/request/Selection.java | 35.8% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 67.82% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 94.15% <0%> (+0.58%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 69.87% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 520 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 867edcf...9bda103. Read the comment docs.\n. # Codecov Report\nMerging #3919 into master will increase coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3919      +/-\n============================================\n+ Coverage     67.25%   67.26%   +<.01%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50881    50881            \n  Branches       7108     7108            \n============================================\n+ Hits          34221    34225       +4   \n+ Misses        14323    14319       -4   \n  Partials       2337     2337\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...r/filter/predicate/PredicateEvaluatorProvider.java | 64% <0%> (-4%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 81.66% <0%> (-3.34%) | 0% <0%> (\u00f8) | |\n| .../org/apache/pinot/transport/netty/NettyServer.java | 80.8% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ... and 16 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b3bd35b...8521b71. Read the comment docs.\n. # Codecov Report\nMerging #3922 into master will increase coverage by 21.4%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3922      +/-\n============================================\n+ Coverage     45.91%   67.32%   +21.4%   \n- Complexity        0        4       +4   \n============================================\n  Files          1032     1032            \n  Lines         50881    50881            \n  Branches       7108     7108            \n============================================\n+ Hits          23364    34255   +10891   \n+ Misses        25547    14289   -11258   \n- Partials       1970     2337     +367\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 66.66% <0%> (-2.57%) | 0% <0%> (\u00f8) | |\n| ...pinot/server/starter/helix/HelixServerStarter.java | 52.76% <0%> (-2.22%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (\u00f8) | 0% <0%> (\u00f8) | :arrow_down: |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.06% <0%> (+0.32%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ava/org/apache/pinot/common/request/Selection.java | 35.8% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 67.82% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 69.87% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 524 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5feb3a9...e842c66. Read the comment docs.\n. # Codecov Report\nMerging #3923 into master will increase coverage by 21.25%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3923       +/-\n=============================================\n+ Coverage     45.91%   67.17%   +21.25%   \n- Complexity        0        4        +4   \n=============================================\n  Files          1032     1032             \n  Lines         50881    50881             \n  Branches       7108     7108             \n=============================================\n+ Hits          23364    34177    +10813   \n+ Misses        25547    14382    -11165   \n- Partials       1970     2322      +352\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 48.48% <0%> (-15.16%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-3.78%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 66.66% <0%> (-2.57%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...ava/org/apache/pinot/common/request/Selection.java | 35.8% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 67.82% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 94.15% <0%> (+0.58%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 69.87% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/request/AggregationInfo.java | 32.91% <0%> (+0.62%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/metrics/AbstractMetrics.java | 75.33% <0%> (+0.66%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 519 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5feb3a9...068fc52. Read the comment docs.\n. # Codecov Report\nMerging #3925 into master will increase coverage by 21.47%.\nThe diff coverage is n/a.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3925       +/-\n=============================================\n+ Coverage     45.91%   67.39%   +21.47%   \n- Complexity        0        4        +4   \n=============================================\n  Files          1032     1032             \n  Lines         50881    50881             \n  Branches       7108     7108             \n=============================================\n+ Hits          23364    34289    +10925   \n+ Misses        25547    14249    -11298   \n- Partials       1970     2343      +373\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-2.78%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 66.66% <0%> (-2.57%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 72.72% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| .../broker/routing/HelixExternalViewBasedRouting.java | 89.06% <0%> (+0.32%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ava/org/apache/pinot/common/request/Selection.java | 35.8% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...i/resources/PinotSegmentUploadRestletResource.java | 67.82% <0%> (+0.49%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...re/realtime/impl/kafka/KafkaConnectionHandler.java | 69.87% <0%> (+0.6%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/request/AggregationInfo.java | 32.91% <0%> (+0.62%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 520 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5feb3a9...9139e0b. Read the comment docs.\n. # Codecov Report\nMerging #3927 into master will increase coverage by 0.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3927      +/-\n============================================\n+ Coverage     67.29%   67.41%   +0.11%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50881    50881            \n  Branches       7108     7108            \n============================================\n+ Hits          34240    34300      +60   \n+ Misses        14306    14244      -62   \n- Partials       2335     2337       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-50%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 51.51% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 74.72% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...not/broker/broker/helix/ClusterChangeMediator.java | 66.66% <0%> (-2.57%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d9bbd68...5c0eda0. Read the comment docs.\n. # Codecov Report\nMerging #3928 into master will decrease coverage by 0.31%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3928      +/-\n============================================\n- Coverage     67.26%   66.94%   -0.32%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50881    51318     +437   \n  Branches       7108     7193      +85   \n============================================\n+ Hits          34223    34357     +134   \n- Misses        14322    14621     +299   \n- Partials       2336     2340       +4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.8% <\u00f8> (-0.1%) | 0 <0> (\u00f8) | |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 46.7% <\u00f8> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/core/data/readers/GenericRowRecordReader.java | 61.53% <0%> (-38.47%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/minion/segment/ReducerRecordReader.java | 58.97% <0%> (-33.03%) | 0% <0%> (\u00f8) | |\n| ...ache/pinot/core/data/readers/JSONRecordReader.java | 57.44% <0%> (-32.56%) | 0% <0%> (\u00f8) | |\n| ...ot/core/data/readers/PinotSegmentRecordReader.java | 60.24% <0%> (-32.36%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/minion/segment/MapperRecordReader.java | 54.54% <0%> (-28.79%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 58.33% <0%> (-26.67%) | 0% <0%> (\u00f8) | |\n| ...he/pinot/core/data/readers/ThriftRecordReader.java | 58.57% <0%> (-25.11%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/data/readers/CSVRecordReader.java | 47.43% <0%> (-23.72%) | 0% <0%> (\u00f8) | |\n| ... and 37 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 63f0d3d...bb42ef1. Read the comment docs.\n. # Codecov Report\nMerging #3930 into master will increase coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3930      +/-\n============================================\n+ Coverage     67.16%   67.22%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50907    50907            \n  Branches       7110     7110            \n============================================\n+ Hits          34194    34223      +29   \n+ Misses        14378    14349      -29   \n  Partials       2335     2335\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/core/transport/DataTableHandler.java | 88% <0%> (-12%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-11.12%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 85.71% <0%> (-10.72%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-5.48%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...g/apache/pinot/common/metrics/AbstractMetrics.java | 74% <0%> (-2.67%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ... and 15 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9912b47...729f15a. Read the comment docs.\n. # Codecov Report\nMerging #3932 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3932      +/-\n============================================\n- Coverage     67.16%   67.11%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50907    50907            \n  Branches       7110     7110            \n============================================\n- Hits          34194    34164      -30   \n- Misses        14378    14399      +21   \n- Partials       2335     2344       +9\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-15%) | 0% <0%> (\u00f8) | |\n| .../BrokerResourceOnlineOfflineStateModelFactory.java | 49.15% <0%> (-10.17%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-4.45%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...nsport/netty/PooledNettyClientResourceManager.java | 85.41% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ... and 13 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 581a04a...95ccd28. Read the comment docs.\n. # Codecov Report\nMerging #3937 into master will increase coverage by 0.02%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3937      +/-\n============================================\n+ Coverage     67.27%   67.29%   +0.02%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50946    50946            \n  Branches       7119     7119            \n============================================\n+ Hits          34272    34285      +13   \n+ Misses        14329    14306      -23   \n- Partials       2345     2355      +10\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 55.55% <0%> (-8.34%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.32% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/common/data/TimeFieldSpec.java | 92.59% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-1.1%) | 0% <0%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9786d50...9e85d6a. Read the comment docs.\n. # Codecov Report\nMerging #3939 into master will decrease coverage by 0.13%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3939      +/-\n============================================\n- Coverage     67.27%   67.13%   -0.14%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50946    50946            \n  Branches       7119     7119            \n============================================\n- Hits          34275    34205      -70   \n- Misses        14331    14401      +70   \n  Partials       2340     2340\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-38.38%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 69.09% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 57368dd...593f734. Read the comment docs.\n. # Codecov Report\nMerging #3941 into master will increase coverage by 9.93%.\nThe diff coverage is 73.21%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3941      +/-\n============================================\n+ Coverage     57.01%   66.95%   +9.93%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51051    51106      +55   \n  Branches       7126     7132       +6   \n============================================\n+ Hits          29106    34217    +5111   \n+ Misses        19790    14537    -5253   \n- Partials       2155     2352     +197\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...org/apache/pinot/common/utils/CommonConstants.java | 35.55% <\u00f8> (+15.55%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 92.48% <100%> (+30.49%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../starter/helix/HelixInstanceDataManagerConfig.java | 70% <100%> (+70%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/pinot/common/utils/FileUploadDownloadClient.java | 81.5% <100%> (+51.87%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../core/segment/index/loader/IndexLoadingConfig.java | 81.81% <100%> (+10.88%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...altime/ServerSegmentCompletionProtocolHandler.java | 47.65% <55.55%> (+43.11%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...manager/realtime/LLRealtimeSegmentDataManager.java | 70.72% <68.18%> (+25.85%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../apache/pinot/core/transport/DataTableHandler.java | 88% <0%> (-12%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 334 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b2c5a88...7abab6b. Read the comment docs.\n. # Codecov Report\nMerging #3942 into master will decrease coverage by 0.21%.\nThe diff coverage is 92%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3942      +/-\n============================================\n- Coverage     67.27%   67.05%   -0.22%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50946    51070     +124   \n  Branches       7119     7131      +12   \n============================================\n- Hits          34272    34244      -28   \n- Misses        14329    14484     +155   \n+ Partials       2345     2342       -3\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../apache/pinot/common/exception/QueryException.java | 94.28% <100%> (+5.87%) | 0 <0> (\u00f8) | :arrow_down: |\n| .../pinot/core/data/manager/BaseTableDataManager.java | 93.75% <100%> (-0.08%) | 0 <0> (\u00f8) | |\n| ...r/helix/SegmentOnlineOfflineStateModelFactory.java | 67.64% <100%> (+0.32%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...server/starter/helix/HelixInstanceDataManager.java | 85.93% <75%> (-0.36%) | 0 <0> (\u00f8) | |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 80.48% <93.33%> (+1.58%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-37.21%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-15%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 78.18% <0%> (-14.55%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ... and 31 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9786d50...431d0e5. Read the comment docs.\n. # Codecov Report\nMerging #3943 into master will decrease coverage by <.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3943      +/-\n============================================\n- Coverage     67.27%   67.26%   -0.01%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50946    50946            \n  Branches       7119     7119            \n============================================\n- Hits          34272    34268       -4   \n- Misses        14329    14333       +4   \n  Partials       2345     2345\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 85.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 88.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 55% <0%> (-3.34%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-2.82%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 70.9% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...not/broker/requesthandler/RangeMergeOptimizer.java | 89.7% <0%> (-1.48%) | 0% <0%> (\u00f8) | |\n| ...va/org/apache/pinot/common/data/TimeFieldSpec.java | 92.59% <0%> (-1.24%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/common/datatable/DataTableBuilder.java | 78.94% <0%> (-1.17%) | 0% <0%> (\u00f8) | |\n| ... and 12 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9786d50...21619e8. Read the comment docs.\n. # Codecov Report\nMerging #3944 into master will decrease coverage by 0.18%.\nThe diff coverage is 80%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3944      +/-\n============================================\n- Coverage     67.27%   67.08%   -0.19%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50946    50948       +2   \n  Branches       7119     7119            \n============================================\n- Hits          34272    34181      -91   \n- Misses        14329    14426      +97   \n+ Partials       2345     2341       -4\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/org/apache/pinot/common/utils/ServiceStatus.java | 71.2% <80%> (-0.35%) | 0 <0> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 29.06% <0%> (-34.89%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 43.33% <0%> (-15%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9786d50...847cb9d. Read the comment docs.\n. # Codecov Report\nMerging #3946 into master will increase coverage by 10.1%.\nThe diff coverage is 100%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3946      +/-\n============================================\n+ Coverage     57.16%   67.26%   +10.1%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50948    50952       +4   \n  Branches       7119     7119            \n============================================\n+ Hits          29124    34273    +5149   \n+ Misses        19668    14327    -5341   \n- Partials       2156     2352     +196\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 75.58% <100%> (+48.83%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...va/org/apache/pinot/controller/ControllerConf.java | 47.84% <100%> (+6.64%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...inot/transport/netty/NettyTCPClientConnection.java | 81.45% <0%> (-3.32%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 57.74% <0%> (-0.45%) | 0% <0%> (\u00f8) | |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 56.25% <0%> (+0.56%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...ment/creator/impl/SegmentColumnarIndexCreator.java | 87.45% <0%> (+0.76%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...a/org/apache/pinot/common/utils/ServiceStatus.java | 71.2% <0%> (+0.79%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...r/transform/function/ValueInTransformFunction.java | 39.2% <0%> (+0.8%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 333 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d3e031a...a1024ce. Read the comment docs.\n. # Codecov Report\nMerging #3962 into master will decrease coverage by 0.22%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff             @@\nmaster   #3962      +/-\n===========================================\n- Coverage     67.33%   67.1%   -0.23%   \n  Complexity        4       4            \n===========================================\n  Files          1032    1032            \n  Lines         50948   50948            \n  Branches       7119    7119            \n===========================================\n- Hits          34305   34191     -114   \n- Misses        14308   14416     +108   \n- Partials       2335    2341       +6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-37.21%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 85.71% <0%> (-10.72%) | 0% <0%> (\u00f8) | |\n| ...e/impl/dictionary/LongOnHeapMutableDictionary.java | 82.22% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/SortedDocIdIterator.java | 58.33% <0%> (-5.56%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-5.48%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ... and 20 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 70b3b06...f36cd9a. Read the comment docs.\n. # Codecov Report\nMerging #3964 into master will decrease coverage by 0.26%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3964      +/-\n============================================\n- Coverage     67.33%   67.07%   -0.27%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         50948    50948            \n  Branches       7119     7119            \n============================================\n- Hits          34305    34171     -134   \n- Misses        14308    14436     +128   \n- Partials       2335     2341       +6\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-59.43%) | 0% <0%> (\u00f8) | |\n| ...ller/validation/OfflineSegmentIntervalChecker.java | 26.74% <0%> (-37.21%) | 0% <0%> (\u00f8) | |\n| ...core/operator/dociditerators/AndDocIdIterator.java | 51.72% <0%> (-31.04%) | 0% <0%> (\u00f8) | |\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...er/validation/BrokerResourceValidationManager.java | 25% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...pinot/core/operator/docidsets/OrBlockDocIdSet.java | 84.9% <0%> (-13.21%) | 0% <0%> (\u00f8) | |\n| ...ore/query/scheduler/resources/ResourceManager.java | 85.71% <0%> (-10.72%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 86.66% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| .../pinot/core/query/scheduler/PriorityScheduler.java | 78.08% <0%> (-5.48%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 70b3b06...3a26d96. Read the comment docs.\n. # Codecov Report\nMerging #3969 into master will increase coverage by 0.11%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3969      +/-\n============================================\n+ Coverage        67%   67.11%   +0.11%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51047    51047            \n  Branches       7126     7126            \n============================================\n+ Hits          34202    34261      +59   \n+ Misses        14506    14434      -72   \n- Partials       2339     2352      +13\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 50% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 80% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 65.45% <0%> (-7.28%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ...g/apache/pinot/common/metrics/AbstractMetrics.java | 75.33% <0%> (-1.34%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-1.1%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9ec6b5b...04073b7. Read the comment docs.\n. # Codecov Report\nMerging #3970 into master will increase coverage by 0.05%.\nThe diff coverage is 75%.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3970      +/-\n============================================\n+ Coverage        67%   67.05%   +0.05%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51047    51050       +3   \n  Branches       7126     7127       +1   \n============================================\n+ Hits          34202    34231      +29   \n+ Misses        14506    14478      -28   \n- Partials       2339     2341       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...e/pinot/core/data/readers/RecordReaderFactory.java | 34.78% <100%> (\u00f8) | 0 <0> (\u00f8) | :arrow_down: |\n| ...indexsegment/generator/SegmentGeneratorConfig.java | 62.45% <66.66%> (-0.3%) | 0 <0> (\u00f8) | |\n| .../impl/dictionary/FloatOnHeapMutableDictionary.java | 80% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/BitmapDocIdIterator.java | 60.71% <0%> (-3.58%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 63.63% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-1.82%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 85.91% <0%> (-1.41%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 57.74% <0%> (-0.45%) | 0% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.9% <0%> (+0.09%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 17 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9ec6b5b...ef6b912. Read the comment docs.\n. # Codecov Report\nMerging #3971 into master will decrease coverage by 0.01%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3971      +/-\n============================================\n- Coverage        67%   66.98%   -0.02%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51047    51047            \n  Branches       7126     7126            \n============================================\n- Hits          34202    34194       -8   \n- Misses        14506    14512       +6   \n- Partials       2339     2341       +2\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...er/validation/BrokerResourceValidationManager.java | 25% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 75.55% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...e/operator/dociditerators/MVScanDocIdIterator.java | 60.6% <0%> (-6.07%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-1.1%) | 0% <0%> (\u00f8) | |\n| ...lix/core/realtime/PinotRealtimeSegmentManager.java | 71.85% <0%> (-1.01%) | 0% <0%> (\u00f8) | |\n| ...pby/NoDictionarySingleColumnGroupKeyGenerator.java | 87.5% <0%> (-0.97%) | 0% <0%> (\u00f8) | |\n| ...ot/common/protocols/SegmentCompletionProtocol.java | 93.56% <0%> (-0.59%) | 0% <0%> (\u00f8) | |\n| ...regation/function/customobject/QuantileDigest.java | 57.74% <0%> (-0.45%) | 0% <0%> (\u00f8) | |\n| ...ntroller/helix/core/PinotHelixResourceManager.java | 60.41% <0%> (-0.4%) | 0% <0%> (\u00f8) | |\n| ... and 8 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 9ec6b5b...dddf153. Read the comment docs.\n. # Codecov Report\nMerging #3972 into master will increase coverage by 0.16%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3972      +/-\n============================================\n+ Coverage     67.04%   67.21%   +0.16%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51047    51047            \n  Branches       7126     7126            \n============================================\n+ Hits          34227    34313      +86   \n+ Misses        14480    14375     -105   \n- Partials       2340     2359      +19\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...he/pinot/core/query/pruner/ValidSegmentPruner.java | 57.14% <0%> (-28.58%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...lix/EmptyBrokerOnlineOfflineStateModelFactory.java | 86.66% <0%> (-13.34%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-8.8%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...mpl/dictionary/DoubleOffHeapMutableDictionary.java | 74.54% <0%> (-3.64%) | 0% <0%> (\u00f8) | |\n| .../org/apache/pinot/transport/netty/NettyServer.java | 80.8% <0%> (-3.04%) | 0% <0%> (\u00f8) | |\n| ... and 22 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 6e541bb...7d0da08. Read the comment docs.\n. # Codecov Report\nMerging #3975 into master will increase coverage by 0.04%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3975      +/-\n============================================\n+ Coverage     66.99%   67.03%   +0.04%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51047    51070      +23   \n  Branches       7126     7128       +2   \n============================================\n+ Hits          34200    34236      +36   \n+ Misses        14502    14490      -12   \n+ Partials       2345     2344       -1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/FloatOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...thandler/SingleConnectionBrokerRequestHandler.java | 79.54% <0%> (-9.1%) | 0% <0%> (\u00f8) | |\n| ...elix/core/relocation/RealtimeSegmentRelocator.java | 73.62% <0%> (-7.7%) | 0% <0%> (\u00f8) | |\n| ...n/java/org/apache/pinot/core/transport/Server.java | 59.25% <0%> (-7.41%) | 0% <0%> (\u00f8) | |\n| .../apache/pinot/common/config/RealtimeTagConfig.java | 93.33% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...impl/dictionary/DoubleOnHeapMutableDictionary.java | 68.88% <0%> (-6.67%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...g/apache/pinot/common/metrics/AbstractMetrics.java | 75.33% <0%> (-1.34%) | 0% <0%> (\u00f8) | |\n| ... and 24 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 5867b16...9009248. Read the comment docs.\n. # Codecov Report\nMerging #3979 into master will increase coverage by 10.04%.\nThe diff coverage is 88.23%.\n\n\n```diff\n@@              Coverage Diff              @@\nmaster    #3979       +/-\n=============================================\n+ Coverage     57.01%   67.05%   +10.04%   \n  Complexity        4        4             \n=============================================\n  Files          1032     1033        +1   \n  Lines         51051    51098       +47   \n  Branches       7126     7136       +10   \n=============================================\n+ Hits          29106    34264     +5158   \n+ Misses        19790    14489     -5301   \n- Partials       2155     2345      +190\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| .../core/indexsegment/mutable/MutableSegmentImpl.java | 67.19% <100%> (+20.27%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/core/indexsegment/IndexSegment.java | 100% <100%> (\u00f8) | 0 <0> (?) | |\n| ...e/indexsegment/immutable/ImmutableSegmentImpl.java | 69.35% <100%> (+0.5%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...t/common/response/broker/BrokerResponseNative.java | 91.3% <100%> (+5.59%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...e/pinot/core/query/reduce/BrokerReduceService.java | 79.38% <78.57%> (+23.74%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...core/query/executor/ServerQueryExecutorV1Impl.java | 79.36% <82.35%> (+21.56%) | 0 <0> (\u00f8) | :arrow_down: |\n| ...n/java/org/apache/pinot/common/data/FieldSpec.java | 73.88% <0%> (-0.64%) | 0% <0%> (\u00f8) | |\n| ...ator/transform/function/BaseTransformFunction.java | 29.95% <0%> (+0.42%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ...g/apache/pinot/common/utils/helix/HelixHelper.java | 56.25% <0%> (+0.56%) | 0% <0%> (\u00f8) | :arrow_down: |\n| ... and 335 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update b2c5a88...08b4007. Read the comment docs.\n. # Codecov Report\nMerging #3986 into master will decrease coverage by 0.05%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3986      +/-\n============================================\n- Coverage      67.1%   67.04%   -0.06%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51070    51070            \n  Branches       7128     7128            \n============================================\n- Hits          34269    34242      -27   \n- Misses        14461    14487      +26   \n- Partials       2340     2341       +1\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 58.33% <0%> (-23.34%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 87.27% <0%> (-5.46%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.32% <0%> (-2.82%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| .../controller/helix/core/SegmentDeletionManager.java | 77.59% <0%> (-2.41%) | 0% <0%> (\u00f8) | |\n| ... and 21 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update 2c5d42a...9b50d89. Read the comment docs.\n. # Codecov Report\nMerging #3989 into master will decrease coverage by 0.12%.\nThe diff coverage is n/a.\n\n\n```diff\n@@             Coverage Diff              @@\nmaster    #3989      +/-\n============================================\n- Coverage      67.1%   66.97%   -0.13%   \n  Complexity        4        4            \n============================================\n  Files          1032     1032            \n  Lines         51070    51124      +54   \n  Branches       7128     7135       +7   \n============================================\n- Hits          34269    34240      -29   \n- Misses        14461    14530      +69   \n- Partials       2340     2354      +14\n```\n| Impacted Files | Coverage \u0394 | Complexity \u0394 | |\n|---|---|---|---|\n| ...a/manager/realtime/RealtimeSegmentDataManager.java | 75% <0%> (-25%) | 0% <0%> (\u00f8) | |\n| ...egation/function/customobject/MinMaxRangePair.java | 75.86% <0%> (-24.14%) | 0% <0%> (\u00f8) | |\n| ...r/validation/RealtimeSegmentValidationManager.java | 58.33% <0%> (-23.34%) | 0% <0%> (\u00f8) | |\n| ...apache/pinot/common/metrics/ValidationMetrics.java | 20.28% <0%> (-23.19%) | 0% <0%> (\u00f8) | |\n| .../impl/dictionary/LongOffHeapMutableDictionary.java | 81.81% <0%> (-10.91%) | 0% <0%> (\u00f8) | |\n| ...pache/pinot/core/util/SortedRangeIntersection.java | 83.82% <0%> (-7.36%) | 0% <0%> (\u00f8) | |\n| ...a/org/apache/pinot/common/config/TagNameUtils.java | 64.1% <0%> (-5.13%) | 0% <0%> (\u00f8) | |\n| ...troller/helix/core/retention/RetentionManager.java | 75% <0%> (-4.17%) | 0% <0%> (\u00f8) | |\n| ...ot/core/query/pruner/ColumnValueSegmentPruner.java | 87.32% <0%> (-2.82%) | 0% <0%> (\u00f8) | |\n| ...org/apache/pinot/common/metrics/MetricsHelper.java | 72.5% <0%> (-2.5%) | 0% <0%> (\u00f8) | |\n| ... and 23 more | |\n\nContinue to review full report at Codecov.\n\nLegend - Click here to learn more\n\u0394 = absolute <relative> (impact), \u00f8 = not affected, ? = missing data\nPowered by Codecov. Last update d2a3d84...3d0a897. Read the comment docs.\n. \n",
    "antumbde": "This needs API documentation and unit tests\n. I will leave it case-insensitive for now. 1t is odd but lesser rules are better otherwise the config to apply to feedback cycle is slow. \n. Request-response example:\n[atumbde@atumbde-ld1 pinot-controller]$ curl -v localhost:8100/tables/bidSuggest/size | python -mjson.tool\n- About to connect() to localhost port 8100 (#0)\n-   Trying ::1... connected\n- Connected to localhost (::1) port 8100 (#0)\n\nGET /tables/bidSuggest/size HTTP/1.1\nUser-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.16.1 Basic ECC zlib/1.2.3 libidn/1.18 libssh2/1.4.2\nHost: localhost:8100\nAccept: /\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                               Dload  Upload   Total   Spent    Left  Speed\n0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0< HTTP/1.1 200 OK\n< Content-Length: 2279\n< Content-Type: application/json; charset=UTF-8\n< Date: Wed, 08 Jun 2016 00:01:16 GMT\n< Accept-Ranges: bytes\n< Server: Restlet-Framework/2.2.1\n< Vary: Accept-Charset, Accept-Encoding, Accept-Language, Accept\n< Pinot-Controller-Host: atumbde-ld1.linkedin.biz\n< Pinot-Controller-Version: Unknown\n< \n{ [data not shown]\n103  2279  103  2279    0     0   9961      0 --:--:-- --:--:-- --:--:--  9995* Connection #0 to host localhost left intact\n- Closing connection #0\n  {\n  \"estimatedSizeInBytes\": -1, \n  \"offlineSegments\": {\n      \"estimatedSizeInBytes\": -1, \n      \"reportedSizeInBytes\": -1, \n      \"segments\": {\n          \"bidSuggest_bidSuggest_correlation_3_0\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_0\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_1\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_1\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_10\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_10\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_11\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_11\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_3\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_3\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_4\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_4\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_5\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_5\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_7\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_7\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_8\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_8\"\n                  }\n              }\n          }, \n          \"bidSuggest_bidSuggest_correlation_3_9\": {\n              \"estimatedSizeInBytes\": -1, \n              \"reportedSizeInBytes\": -1, \n              \"serverInfo\": {\n                  \"Server_localhost_8098\": {\n                      \"diskSizeInBytes\": -1, \n                      \"segmentName\": \"bidSuggest_bidSuggest_correlation_3_9\"\n                  }\n              }\n          }\n      }\n  }, \n  \"realtimeSegments\": null, \n  \"reportedSizeInBytes\": -1, \n  \"tableName\": \"bidSuggest\"\n  }\n. > \" We will have only one value in this column...\"\nWhat is your thinking on multi-value columns ? I guess, you mean single\narray as one value for multi-valued columns\n1. We should persist these columns for server scalability as we can easily\n   mmap those indexes. Otherwise, on shared multi-tenant clusters with, say,\n   2k segments and 3 additional columns, we need 6k indexes all required in\n   memory. That can quickly offset some of the gains of new file format.\n2. We should avoid server restarts for segment level changes. We already\n   require for inverted indexes but this can again be an issue in the shared\n   cluster. Instead, we can have servers 'force refresh' a segment using the\n   http admin endpoint (guaranteed action is an issue with http call)\n3. Remove is possible but very costly with the new segment format. We can\n   support, if really needed. If default value changes are rare, we can model\n   that as addition of yet-another-new-column. Older one sticks around as\n   default. Downside is that applications need to change for the changed\n   column name. One option is to logically delete it by marking the range\n   invalid. No major performance impact but there is some storage and memory\n   scale impact.\n4. Regarding users relying on pinot skipping segments - what will select\n   count(*) from myTable where new_column = new_column_default_value return ?\n   0 if we skip segments. That won't be correct and confusing for many new\n   users. We should avoid this and rely on simple behavior. Existing segments\n   are handled as if the column has default value.\n\n@jfim: It should be possible to change persistent default value column.\nWhat am I missing ?\nOn Thu, Jun 9, 2016 at 4:21 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nThe biggest issue is if the default value changes, if we wrote a new\ncolumn to disk, then we can't really fix it with a new default value.\nWhat we could do instead is have the column load generate a new column on\nthe fly if it doesn't exist based on the schema values, with nothing\nwritten to disk. Since the column has only one value, it's pretty trivial\nto generate and shouldn't have any significant impact on performance. We'd\nalso need to intercept calls to metadata/dictionaries for columns that\ndon't exist and synthesize metadata/dictionaries for them.\nOf course, when we support nulls properly, the synthetic column should\njust contain nulls.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/161#issuecomment-225055224, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/ABAmRquUgwqc7XrWHhWZluXq8UeTF-Sbks5qKJ_ggaJpZM4Ivpt6\n.\n. @kishoreg Regarding point 4 - your original things to consider mentioned - \n\"Some of the existing usecases might rely on existing behavior where we skip segments that dont contain columns in query.\"\nSay, segments s1 and s2 don't have column 'foo'. User adds new column 'foo'.  s1 and s2 will have column foo with the default value.  Now, when you say users rely on pinot skipping the segments, do you mean that segments, s1 and s2 which did not have 'foo' initially, are completely ignored in query processing ? How will we process queries\n- select count(*) from myTable where foo='default_value'\n- select avg(foo) from myTable; (// say, foo were metric)\n  Results will be different whether we skip s1, s2 vs process s1, s2 as if 'foo' as default value. I will vote for processing s1, s2. \n. Thanks\n. Regarding http vs helix discussion : my main point is for operator to know\n1. success vs failure\n2. Reason for failure\nArchitecturally, we should also plan for self-serviceability and proper tooling. So, we should avoid need for server restarts. (If you've planned for these then ignore my comment.)\n\nFor this specific operation, failed node handling is trivial. Restarting servers will see changed schema and apply that. I agree that helix is better mechanism in general.\nWe can do it over helix or hybrid of controller http request + helix. I'm not sure if we can get error reasons over helix, but, without that, having to go through logs impacts manageability.\n. Removed from pom\n. lgtm\n. Squash these commits into one\n. lgtm\n. We should support cursor for this use case. We can still compress responses\nbut cursors will keep brokers simple and we don't pay all the processing\ncost upfront.\nOn Thu, Aug 25, 2016 at 5:37 PM, Xiang Fu notifications@github.com wrote:\n\nYes, broker will merge data from all the servers then send back, but this\nmay eat too much memory for a single query.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/399#issuecomment-242588342, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRnLtBkXn10IWreGuL59VeXQzymtAks5qjjUwgaJpZM4JlC3A\n.\n. For simple select + filter, we don't need scatter-gather. We can let only\none server process at a time and return compressed response that are passed\nthrough broker. This works for simple select, filter, project queries.\n\nThat doesn't work for group-by. But, reading large datasets with group-by\nis lower probability use case.\n@ Xiang Fu : Is this for presto plugin ? Is the limitation mentioned above\na problem for your use case ?\n-Adwait\nOn Thu, Aug 25, 2016 at 5:44 PM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\n@antumbde https://github.com/antumbde can you elaborate on the\nsolution. I get the cursor part from client but how would it work between\nbroker and server.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/399#issuecomment-242589313, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRk4LXl8W95Kp-Ru5TLQTuwqoriJgks5qjjb1gaJpZM4JlC3A\n.\n. Nicely done\nlgtm\n. @victor2100 This is almost 1500 lines of change. Break this PR into smaller more manageable classes. You can submit generation, metadata and aggregation related independent units separately.\n\nAdd unit tests for newer functionality. Let's discuss if something will require lot of infrastructure for unit testing.\n. lgtm\nwill after travis gives green signal\n. one comment to double check code\nlgtm\n. Adding this to QueryExecutor is the plan. Taking one step at a time.\nUpdated review to address Mayank's comments\n. Nice\n. jcabi is used in log4j configuration\n. couple of minor comments\nlgtm\n. mostly minor optional suggestions. Kishore's comment on handling NPE is important. lgtm after addressing that\n. lgtm\n. @kishoreg I understand your point. This commit is only bumping up version and adding an explicit maven dependency since guava is no longer pulling that automatically. We are not changing/adding any new annotations.\n@Nonnull annotation is only for API documentation.\n. Discussed this with @mcvsubbu. Building internal MP is hard without publishing new pinot artifacts. I'll publish this and then test MP\n. Tested multi-products. \nNo issues.\n. one comment; lgtm otherwise\n. This PR maintains existing behavior by:\n1. Continuing to use SimpleRequeststHandler returned by SimpleRequestHandlerFactory. We do not use newly added ScheduledRequestHandler yet\n2. Only impacting change her is to return Future from SimpleRequestHandler but if you see code, we execute the code as earlier and call Future.immediate() to set the future value. (IOW, we return Future only after its value is available so it's not really \"future\"). The future listener will execute in the same thread so nothing changes here.\nI've done tests locally and on perf cluster, including perf test, for this code change\nRegarding FCFSScheduler:\n1. First and foremost, it's unused for now\n2. I've tested it on our perf cluster for firing our existing performance workload (single query at a time) and also at higher throughputs. There is not change in performance.\nGoing forward:\n1. We will be able to use ScheduledRequestHandler or SimpleRequestHandler based on configuration (rollback capability)\n2. We may replace the cached thread pool in table data manager if peformance results indicate that. \n. @kishoreg FCFS is scheduling the query immediately. Why do you think logic is different ?\nThe new implementations are unused but the QueryScheduler is required for interface changes.\n. I think clients should pretty-print; not servers. If we build manageability interface around this then it adds to communication/parsing overhead depending on response sizes\n. It should rather support reading batch of values for MultiColumns. Reading\none at a time will be slow.\nWe should clearly establish the semantics for multi-valued columns here.\nCurrently, these are treated like collapsed set of rows, which matches most\nof the use-cases, but different from traditional dmbs. We should maintain\nconsistency for all operators going forward.\nAre there any use-cases where we need proper array types ?\nOn Fri, Sep 23, 2016 at 11:24 AM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\n@atumbde https://github.com/atumbde can we fall back to reading one row\nat a time for multi-valued column?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/582#issuecomment-249266827, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRoTnMZJX0GJuJYTb_0bBZgh3PNZwks5qtBlNgaJpZM4KDcpB\n.\n. One way is, for readers to length encode two dimensional arrays into a\nsingle dimensional array. Callers can then pass in the pre-sized array to\nread. A single call may not read all the values so there has to be a loop\nas you mentioned. This approach is more memory efficient (length encoding\noverhead will likely to be less) and it also limits the size of the memory\nbuffers we use.\n\n(Suggested encoding is just something from top of my head. There may be\nmore efficient approaches)\nUsing ByteBuffers, we can encapsulate this in a class to make it more\ntransparent but arrays are more efficient than ByteBuffers.\nOn Mon, Sep 26, 2016 at 11:37 AM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\n+1 on the batch api for multivalue as well. But I don't see an easy way to\nknow the total number of multi-values to read upfront given a set of doc\nids. For example - if we are reading 5k rows at a time and a maximum number\nof multi-values per row is 2k then, we will have to create the data\nstructure to hold 5k * 2k entries upfront. Optimal way would be to for the\nmulti-value reader to return as many entries as possible at a time and we\ncall this in a loop until we read all values corresponding to the 5k rows.\nThis will require changes to mv reader interface.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/582#issuecomment-249657953, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRvsOgjMxuzPaaGozsImIWTY8wraqks5quBDugaJpZM4KDcpB\n.\n. We are using connection manager so connections are re-used. Connection manager has a pool of 100 connections and it will recycle that for requests closing as required (or if stale). The getMethod.releaseConnection you see here is effectively releasing the connection back to the pool. It does not necessarily close the connection to the server. ConnectionManager is handling all that.\n\nNormally, getMethod.releaseConnection is not required. Connection is automatically released after we read response from the server. However, in case of non-2xx code and some exception cases, we may not read complete response making getMethod to hold on to those connections and not release those to the pool. After some time, the pool starts to run out of connections slowing queries. This will eventually cause timeouts for getting a connection.\n. Updated existing UploadRefreshDelete integration test to test for v3 segment. This test did not fail with the older code - although we throw exception, server downloads the segment again. This caused scalability issue on restart if the server had thousands of segments.\nThis test needs more work to verify that server does not trigger segment download during refresh. I'll submit that in separate PR\n. duplicate of #691 \n. Yes. Zookeeper SREs also suggested upgrading to this version.\n-Adwait\nOn Tue, Oct 18, 2016 at 7:33 PM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\n@kishoreg commented on this pull request.\nCan you please confirm the zookeeper server version and make sure this\nclient version is compatible with server version.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/695#pullrequestreview-4795298,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRoN50Kap8cYeC6lfemTSGO47OjJeks5q1YFzgaJpZM4KaXOb\n.\n. Confirmed with zk team that this is safe version to use.\n\nChecking this in to test mp change.\n. Updated to keep flapping connection check enabled on controllers\n. Fixed package name.\nOn Tue, Oct 25, 2016 at 1:00 PM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\n@kishoreg approved this pull request.\npls fix the import and push it\nIn pinot-api/src/main/java/com/linkedin/pinot/client/\nDynamicBrokerSelector.java\nhttps://github.com/linkedin/pinot/pull/717#pullrequestreview-5730771:\n\n@@ -15,6 +15,7 @@\n  */\n package com.linkedin.pinot.client;\n\n+import com.sun.istack.internal.Nullable;\nwrong package. Should it come from javax?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/717#pullrequestreview-5730771,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRj1pq6pg3tkGtJ0SGtOzzV-MGmmLks5q3l_IgaJpZM4KgU_b\n.\n. Looks like tabs got in. Fixed it\n. added tests for more tables and segments\n. Interface consistency and control.\n\nWith helix weadmin, the paths and responses will look inconsistent from say\nreading table config (we can read that also from helix webadmin). This way,\nwe hide exact cluster path names and how the resources are named\n(_realtime/_offline part).\nWe can control the response layout and provide more information if needed.\nOn Fri, Nov 11, 2016 at 8:50 AM, Subbu Subramaniam <notifications@github.com\n\nwrote:\n@mcvsubbu commented on this pull request.\nwhy not just start helix web admin?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/797#pullrequestreview-8228273,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRulWh_e9NoFluC9B3DYOJ1OoCPoaks5q9JzjgaJpZM4Ku_x2\n.\n. I tried adding one more test with an offline segment for hybrid table. That doesn't work since these methods are called multiple times and that addSegment call messes up verification. I'm skipping that.\n. @jfim Please take a look at this. Your previous commit changed log level to warn which misses many messages. The commit didn't provide reasons.  Was that change intentional ?\n. Strange. Clients generally shouldn't be performance bottlenecks. Did you\nconsider fixing the logging in the client instead of blanket change of log\nlevel ?\n\nWe use this for local perf benchmark drivers and that misses info about\nservices startup. Those don't show logs on queries so this may be an issue\nin the performance driver you are using.\n-Adwait\nOn Tue, Nov 15, 2016 at 4:56 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nYes, there's a fair bit of logging on a per-query basis (IIRC last time I\nran it it was 3-4 log lines per query, which unfortunately makes the JMH\noutput unreadable) which interferes with performance measurements. For\nperformance measurements, we should whitelist logging as opposed to having\neverything logging to the console imho.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/816#issuecomment-260820211, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRg2XD1cWYvc1lHvW-OjLljerIlO6ks5q-lTSgaJpZM4Kx-ji\n.\n. submitting this without waiting for travis to cut down build and testing time.\n. Realtimesegments also use the same SegmentMetadataImpl class right ?  So, there shouldn't be a difference\n. Suggested in person to modify the global copy of BrokerRequest just for this case. The global change will apply to all the segments but we don't want to support different combination of hll suffixes across segments.. @kishoreg : I considered that. The information has to flow down to AggregationFunctionFactory through multiple layers. Adding specific parameters will bloat up the interface with different parameters at all levels. This will also add switch statements in all these methods for aggregation function to decide which parameters to pass since parameters are aggregation function dependent.\nThe right approach is for planner to set up these operators instead of executors but that's a bigger surgery.\n\nLet's discuss this tomorrow.. Updated PR to add AggregationOperatorConfig that can be instantiated with specific fields. This isolates bottom layers from segmentmetadata . (SegmentMetadata is NOT retained inside AggregationOperatorConfig).\nBAsically, another layer of indirection. check https://github.com/linkedin/pinot/pull/871. That addresses this\nconcern\nOn Thu, Dec 1, 2016 at 7:05 PM, Jackie-Jiang notifications@github.com\nwrote:\n\nIMO, passing segment metadata is fine since we might need segment\ninformation to perform aggregations in different ways. If we really want a\nlayer of abstraction, maybe AggregationMetadata is a better name?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/865#issuecomment-264361924, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRtMpIsyHZZqslPSiVLiQ1ve_nafXks5rD4sJgaJpZM4K_lwQ\n.\n. Discarding this PR in favor of #871 . @kishoreg @mayankshriv @Jackie-Jiang : Take a look at this. We configure specific aggregation functions in type-safe manner without creating large context objects or passing high level objects like segmentMEtadata to lower layers.\n\nThis is WIP only to validate concept. I will clean up the code and move inline anonymous visitor to proper place.. Submitted complete set of changes for this PR. For history/context, see PR #865 . There is no change to existing behavior here. \nServer will remove only after in-flight queries have completed. It will handle the state transition in the meanwhile and brokers will pick up that change. Earlier, controller marked it offline and then dropped it but helix does the same by itself when a segment is deleted from idealstate\n. This is for prod and servers will convert the segments as they do in corp\nright now. Segments will be available during conversion.\nI've mentioned in the commit message that this is a first step for making\nv3 as default format and segment generation will be next step. This is\nrequired because table configuration default is v1, so servers will fail if\nwe directly generate v3. There are also parts of code and tests that assume\nv1 paths that needs to be fixed.\nOn Fri, Jan 6, 2017 at 5:15 PM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\nwill this happen in prod as well? What happens in the case of refresh and\nreal-time scenarios, will the segment not be available during conversion?.\nShould we not start generating segments in V3 format during creation\nbefore pushing this change. I understand we still need to generate indices\non the fly when needed but we can at least avoid conversion every time.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/938#issuecomment-271051063, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRltlGaH6cxduTw9sMhp9XLrk_Fl4ks5rPudLgaJpZM4LdRPs\n.\n. That's because of build failure. Coverage numbers are usually messed up if\nthe build fails.\n\nOn Mon, Jan 9, 2017 at 5:10 PM, Mayank Shrivastava <notifications@github.com\n\nwrote:\nIs the test coverage dropping down from ~64% to ~58% because of changes in\nthis PR or something unrelated? If former, may be we should address it\nbefore merging this PR. If latter, would be great to understand what is\ngoing on.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/938#issuecomment-271457802, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRtTPCGxHxLdQcm7rP4Yn38puMc1Zks5rQtqTgaJpZM4LdRPs\n.\n. Addressed all comments. If the class is caching all properties, remove PropertiesConfiguration object reference from class. That will help memory footprint on large datasize servers. Original code was iterating over wrong data structures. It iterated over brokerRoutingTable which is keyed by tableName to find an entry in tableForInstance which is keyed by instance name. And then, it accessed the returned value without null check. That throws NPE.\n\nThere are no existing tests. I won't have time to start a new one for this complex piece. It should've been added when this code was redone.. @jfim You should address the issue with onBecomeOfflineFromOnline in separate PR. @mayankshriv \n1. All our servers are online before it has any of the segments. Server makes segment \"online\" after prefetching, if any.\n2. Priority question matters only if data size is much larger than memory. We really need ability to pin pages in memory with that. Once data is larger than memory we are completely at the mercy of OS.\n3. We don't have numbers. I plan to check load times for plato server. But think this way - today, for heap mode we load 45G on HDD servers and copy it to another buffer. With this, we load 100G in worst case that too on SSDs which isn't much more workload.\n. Note on startup time: This adds practically zero latency in server startup. I measured time for server to load all the segments. There were 180+ segments with around 260GB data. The time to load with and without this change was 7 seconds. This is just for loading segments. In the overall server startup time, other factors dominate.. I ran workload after server restart and uploaded segments in between. 95th latency was similar to earlier test runs that warmed up buffer cache.. Thanks for fixing this!. Addressed all comments. Please test this on one server before cluster rollout. Make sure CI passes before pushing. Tested for backward compatibility with realtime cluster - add llc, remove hlc, add back hlc. @mayankshriv Can you address my comments above ? Why introduce a change that does not impact GC ?. Thanks! Your original comment did not have some numbers and if this PR actually solves that.\nThese numbers indicate about 1.5k garbage per query per second for the changes in PR. Seems too high.... This is a work in progress. \nTODO:\n1. Update other REST APIs to jersey framework\n2. Add controller home page and other static resources for serving through jersey based framework\n3. Unit tests\n4. Deprecate old code. Modified to invoke StringBuilder only if debug is enabled. If derived fields are computed dynamically then this is same as supporting UDFs. There shouldn't be a need to update schema or table config.\n. @kishoreg @mayankshriv : I was confused by the objective then -\n\nThe workaround has been for the users to pre-compute this as part of the input data. This adds additional processing - hadoop job in case of offline and a stream processing job in case of realtime.\n\nIf derived columns are materialized columns there is still extra processing on hadoop and streams but it moves the burden from users to Pinot. Is that right ?  (I thought outgoing timefield is computed dynamically based on the spec)\n. Do we see higher major page faults around the same time? If not, this will not solve the problem. Server unzips the segment during load which will cause pages to be in buffer. Prefetching should not be required.. Broker will continue to server requests for 10seconds in this case ? Will this addressing the issue in that case ?\nIt also seems unrelated to the main PR. Move to a separate PR\n. don't use '_' prefixed variables. We are following google coding convention\n. exception should be last param\n. better to backoff instead of retrying in a tight loop\n. make this and one above static constant\n. all caps\n. +1 to jfim's comment. \nSend a json object that allows switching between json and URI versions.\nSending data as headers is very odd\n. handle 3xx here and below\n. log filename\n. log filename that had error\n. fix indentation\n. send json error message\nmakes it easier to add structure to error body\n. this is bad request and not server error\n. Document API and add UTs\n. done\n. i don't follow what you are asking for here.\n. yes, that is expected. I updated doc to indicate that.\n. updated\n. There is no real difference in pulling the script vs storing it on github. Both can be compromised.\n. Fixed\n. Beyond a point, this will degenerate to academic discussion with no\nactionable value....\nSecurity-wise, the biggest thing we should worry about, violation of github\nsecurity to push commits to our code. This has happened on github in the\npast.\nBy github compromise, I was talking of our scripts being compromised. Even\ngit database can be compromised if we don't use signed verifications.\nJackie can do an year long project on this ;)\nTheir servers doing DDoS because the script on their server is\ncompromised...I would say acceptable risk for the benefit of staying up to\ndate.\nOn Thu, Jun 2, 2016 at 1:08 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nIn .travis.yml\nhttps://github.com/linkedin/pinot/pull/140#discussion_r65609372:\n\nscript:\n-  - cd $PINOT_MODULE\n-  - cp ../.travis_cmd.sh .\n-  - bash .travis_cmd.sh\n- - bash .travis_test.sh\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n\nThere is a difference. If you git clone 1234567 by definition either hash\n1234567 exists and has the content that you expect, unless someone has\ncreated malicious content that happens to have the exact same SHA-1 hash.\nThis is unlikely, but not impossible (see\nhttps://www.schneier.com/blog/archives/2012/10/when_will_we_se.html).\nPulling it from an external server adds the risk that the server is\ncompromised somehow and serves a completely different version; checking out\na known revision eliminates that risk as we can vet the contents of the\nscript ahead of time and, barring a hash collision attack, that someone\ninserts code in that script.\nI'd replace the bash/curl call by:\ngit clone https://github.com/codecov/codecov-bash.git\ngit checkout d3157145db519e2603b870e9596b9086a7983ac1 && so codecov/codecov\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/140/files/0b806a490eba7a6250c08dab0ce795029c2f111e#r65609372,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ABAmRoEnsA1JhbPbBG_maBnpi2UHJMzwks5qHzhPgaJpZM4IsJ6Y\n.\n. Yes, GetMethod provides that\n. Goal here is easy configuration of storage quota values that includes commonly used values that can differ from standard. (Same as we've different time format or use lb instead of kg....). I don't plan to implement this standard\n. hardly the point of confusion when using large scale quota\n. not doing this for now\n. http://www.seagate.com/products/network-attached-storage/business-storage/\n\nIt say 2TB not TiB. Look, TB/MB/GB are well understood and the quota design documents this explicitly including if it's power of 2 or power of 10. \n. I'm unix compliant here\n. FYI: This moved from existing server REST handler to common to share with pinot-controller\n. FYI : This moved from server handler to common/\n. FYI: timeout value to use in requests to pinot server\n. PR view is messing this format\n. FYI: advertise the admin port through helix instance config for others to use\n. done\n. done\n. done\n. done\n. done\n. Modify segment creator metadata builder to add version to metadata. \nthis change won't persist and won't be available for reading on servers\n. Use @Nullable annotation on return - it documents to users that this may be missing\n. Consider more generic naming like getGeneratorName... it could be 'realtime' logic or, say, pinot-admin tool\n. Error out here. It will be difficult to track warnings afterwards.\n. use try-with to correctly close segmentWriter on exceptions\n. remove or make file path args based\n. The dictionary file will exist if there was previous failure. Make sure that is correctly handled. segmentWriter.newIndexFor() will fail if the index already exists\n. check for existence same as above\n. use try-with block for safety\n. try-with block for safe close()\n.  overwriting existing backup to handle further schema changes from last failure\n. shouldn't this be total # of records ?\n. not needed. stale change ?\n. Sorry for typo - I was suggesting overwrite* a backup file if it exists.\nCurrent code is not deleting backup. So,\n1. additional schema changes, or\n2. schema change after previous failure will not create a new backup\n. delete backup metadata\n. Existence of dictionary/forward index indicates\n1. previously failure before updating metadata\n2. bad schema (mismatching datatype ? )\n3. bad segment metadata\n4. bad code\nSo, relevant case to handle is only 1. We can skip the creation and move forward.\n. It's hard to have a definition of reasonable across all types of environments. I will avoid checking for that because correcting bad config is easy and no harm is done.\n. Added info log with table and segment name and reason that looks like \"Estimated size: 79807673 bytes exceeds the configured quota of 62914560 (bytes). Incoming segment size: 79807674 (bytes)\"\n. There is AfterClass method that is invoked even for errors. deleteOnExit() does not work if the directory is non-empty (which can happen for errors)\n. Good job cleaning this (but general comment, why do we even have these for primitive types )\n. Avoid this. \nThe method allows right to be null but not left. The semantics are odd and not clear. \nPreconditions throws exception which is not ideal for the library. If you expect left !=null use 'NotNull' annotation\n. use nullable annotation on the object. Please add javadoc describing what happens if o == null  (intellij will show doc not requiring me to jump to code to understand behavior)\n(I know you haven't added this code but since you are cleaning this....)\n. why are you changing this. Original seems more appropriate\n. what is this value ? provide a short comment and also javadoc for corresponding getter\n. This should be List to support distinct count on multiple columns\n. the method call might get optimized but having function for built-in operator is odd\n. http://stackoverflow.com/questions/113511/best-implementation-for-hashcode-method\n. hll column type will almost always be a metric\n. instead of if-else look at adding hll as a DerivedColumn that takes in raw column as input and generates a derived column\n. We don't for checking quota. You can see that checkStorageQuota method signature is changed to take table config as a parameter.\nThat said, after checking, we will hit zk again during pinotHelixResourceManager.addSegment call below if the segment exists for refresh use case. Changing that is a bigger surgery since this is widely used api method\n. done\nOn Thu, Aug 11, 2016 at 3:39 PM, Subbu Subramaniam <notifications@github.com\n\nwrote:\nIn pinot-controller/src/main/java/com/linkedin/pinot/\ncontroller/api/restlet/resources/PinotSegmentUploadRestletResource.java\nhttps://github.com/linkedin/pinot/pull/382#discussion_r74516872:\n\nFile segmentFile = new File(tableDir, dataFile.getName());\n-    StorageQuotaChecker.QuotaCheckerResponse quotaResponse = checkStorageQuota(indexDir, metadata);\n-    OfflineTableConfig offlineTableConfig = (OfflineTableConfig) ZKMetadataProvider\n\nCan u please add a TODO there? thanks\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/382/files/003b3c0b8cf909de798307844aab085697aa11c3#r74516872,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRq1psirUSSQNfX6DwfJzp-xfnJV7ks5qe6S1gaJpZM4JimHO\n.\n. Do we really want to ?\nIt doesn't add value to outside users but not leaking any data.\n\n-Adwait\nOn Fri, Aug 12, 2016 at 4:32 PM, Ravi Aringunram notifications@github.com\nwrote:\n\nIn pinot-core/src/main/java/com/linkedin/pinot/core/segment/\nstore/SegmentLocalFSDirectory.java\nhttps://github.com/linkedin/pinot/pull/387#discussion_r74674253:\n\n@@ -75,7 +75,34 @@ public Path getPath() {\n@Override\n   public long getDiskSizeBytes() {\n-    return FileUtils.sizeOfDirectory(segmentDirectory.toPath().toFile());\n-    // [PINOT-3479] For newly added refresh segments, the new segment will\n\nRemove the JIRA tag here.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/387/files/cee758b5dfdde4c02e478f321de62de078990ccb#r74674253,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRsG-FtG6Je_U1RDUP2NPwMEcIlg1ks5qfQKpgaJpZM4Jjibk\n.\n. rename - DerivedMetricFieldSpec\n\nWhy is this derived from MetricFieldSpec instead of being an independent class ? Add the reason to the comment\n. still going through the review...will the key for HLL column indicate this is distinct count ?\n. nice!\n. For non-star tree based segment generation, log a warn message (only once) if the hll configuration is specified. Something along the lines - \"HLL configuration is works only with star tree. Star Tree generation is not specified. This will not add derived hll column\"\n. LOG instead of stdout print\n. Nicely done.\nI'll suggest naming the method itself as bigEndianBytesToInts(). That will alert the caller about the endian-ness issue and is very clear as to what order is used.\nWith static final ENDIAN_ORDER he can not change that right now.\n. v good!\n. Good job with Preconditions!\nUse Nonnull annotation on the paraemters for this and the constructor above\n. Please add brief javadocs for class and public methods.\nWhat is hllLog2m ?\n. Nonnull name\nuse annotation and precondition\nAdd brief javadocs\n. remove strange character at the end\n. thumbs up for ImmutableMap!\n. Add brief javadocs for class and public methods\n. strange character (missing newline at the end ?)\n. replace stdout writes with logger.debug\n. add assertions here for automated testing. stdout writes are not good for verification\n. same comment as above. use logger debug and assertions\n. remove if no-op\n. no-op method remove\nprefer @BeforeClass if you need to\n. small-case rows.\ncan this be final\n. use assertions\n. Talked to @raviarin  in-person. He is fine with this. In future, we need to consider making our tickets public.\n. is there any performance impact of original method ? \nIf not, it's better to leave original method as is even if short is stored as int. \n. Do we have valid use case to ignore properties ? I feel schema should not ignore properties.\n. update comment.  use nullable annotations on parameter and return type\nI think it should return null if schema is null because null != \"{}\"\n. rename methods to addAllDimensionFieldSpecs.\nThere is difference in set vs add. This method is doing add\n. call schema.getJsonSchema()\n. Let IDE generate this method. Right now, it is not null safe\n. Test for missing timefield spec\nbad timefieldspec\n. make sure you move the comment one line above.\ncan schemaString be null if schema is not null ?\n. Cool. Did not know that\n1. But can schemaName and fieldSpecMap be null ? \n2. Is schemaName case-sensitive ? (equals vs equalsIgnoreCase)\n. lgtm\n. thanks for nicely documenting these!\n. Please add table, segment name to the log info here and below. (not sure if segmentLogger has context)\n. table and segment name\n. table, segment name\n. I thought we give up and download at this point ? why hold ?\n. delete tempSegmentFolder\n. can two threads do this at the same time ? I think no for realtime segment but possible if this is a shared routine to download older segments \n. delete temp resources.\nAnother option is to wrap temp file generator - in a class that implements AutoCloseable and then use try-with block\n. {} around continue\n. always call populateDefaultDerivedColumnValues(). move the if condition inside method\n. It's better to wrap this as CharBuffer and then get a byte array out of it. UTF-8 can be > 1 byte.\n. what if c is greater than 1 byte ?\n. need precondition check on httlLog2m value ?\n. no system.out\nuse logger\n. use assertions. \nLogging is no good for testing\n. no system.out\n. if this is cleanup move this to @AfterMethod or finally {} \n. add comment for why you are changing this\n. can you address this ?\n. This can go to HllUtil ?\n. debug log \n. What are these tests verifying ?\n. debug\n. what is the purpose of this test ? It seems to test v1 -> v3 format conversion. Is that relevant to your patch ?\n. nice!\n. I didn't follow the  -1 part. If firstRange = (3,5) and secondRange = (6,8), are you saying these are not disjoint ? Do you mean to say isMergeableRanges() ?\n. We are calling dictionary.getNonMatchingIds() above for subtractive ranges. So, the list pairs should indicate the actual ids we want and not the holes.  What am I missing here ? Do we have a UT for this ?\n. can aggregationResultList have null values ?\n. This part can be moved to common method and shared with combine() method\n. comment will be more useful if you indicate what metadata property it's reading to check for derived type\n. add a method for isDerivedMetricType()\n. If this is new code, check that moveDirectory can overwrite existing directory \n. Added\n. Renamed to QueryRequest\n. This is probably not needed\n. not needed ? \n. [minor]remove '.' for consistency\n. [minor] I suggest removing ellipsis. It looks more professional that way. Ellipsis makes better sense on interactive console \n. suggest re-wording \"Most humans tend to find the\"\n. suggestion: add a link to the product page on github.\nProject page : Github link\nFor any issues/comments: contact\n. remove\n. remove\n. This just moved to BrokerRequestHandler.java\nThis class was reading from config and passing it to BrokerRequestHandler. The constructor had too many such parameters. I replaced this with config object and changed BrokerRequestHandler to read required info from config.\n. Removed\n. Good catch\nUpdated to read this once in the static block\n. The value can be very large. We shouldn't output full value in toString()\n. One of the review comments from Friday was to do this without startTree Metadata if the hLL columns are provided to us. You can change that as another commit but evaluate if fastHLL without starTree provides any benefit over distinctCountHLL\n. handle NPE from getStarTreeMetadata\n. Is this todo ? \nHow do you combine results from multiple segments ?\n. Is this shared with fastHLL ? Add a comment to FastHLL class reduce method that reduce is implemented here\n. log column name\n. handle missing value for key V1Constants.MetadataKeys.StarTree.STAR_TREE_HLL_LOG2M\n. add column name and segment/table information if available\n. Any reason to change log level here? If this is for local testing, please revert it back\n. logger.debug\n. debug log all\n. debug log all\n. Add unit tests\n. unit tests\n. Unit tests\n. unit tests\n. Add a test that executes query for multiple segments. You can do that as a separate PR\n. better to check for null in the caller and throw exception. Calling code is already providing this logic.\n_instanceResponseDataTable = new DataTable() // dont' need to pass schema\n_instanceResponseDataTable.addException(....) \nshould work \n. provide a message here\n. i thought you removed dependency on star tree metadata\n. we should also support case where hll column is provided by customer and not generated by us. Let's discuss this part. You can support that in next PR. (Is that handled by isFitForStarTree... ?)\n. Like!\n. I don't follow this change in the context of commit. Are you removing this because it's unused ?\n. done\n. why add sorted column to the inverted index list ?\n. remove map. not required. You can use Version.values() to check for contains()\n. close streams\n. close streams\n. close\n. add version compatibility test\n. make sure bytes.length >=4 before calling getInt (or make sure there is top level protection like expected handling of exceptions)\napplies here and below\n. Why not use thrift for this ?\n. You are assigning the values in the constructor\n. Let's talk about this. The explanation in DataTableBuilder does not seem\ncorrect. We are using non-primitive types here that DataTableBuilder claims\nto avoid.\nIf we are optimizing for speed(or size) we should have a performance\ncomparison to establish the fact.\n-Adwait\nOn Mon, Sep 12, 2016 at 11:02 PM, Mayank Shrivastava \nnotifications@github.com wrote:\n\nIn pinot-core/src/main/java/com/linkedin/pinot/core/util/\nDataTableCustomSerDe.java\nhttps://github.com/linkedin/pinot/pull/532#discussion_r78500622:\n\n+import it.unimi.dsi.fastutil.ints.IntOpenHashSet;\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.DataInputStream;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.io.Serializable;\n+import java.io.UnsupportedEncodingException;\n+import java.nio.ByteBuffer;\n+import java.util.HashMap;\n+import java.util.Map;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+\n+public class DataTableCustomSerDe extends DataTableJavaSerDe {\n\nFor performance reasons. Refer to the [pre-existing] explanation in the\nDataTableBuilder class.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/532/files/8c4d4200a74883aad3820b2bfe05b44f5318d12a#r78500622,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABAmRoHUAR7HyH7gOaCYhXuqHUtzz_Iuks5qpjyAgaJpZM4J7Nu8\n.\n. check (or clarify) on the nullness of object (@Nonnull or check != null)\n. need to close those in finally {} or use try-with blocks\n. close in finally { }\n. Where is the check/guarantee provided ? The deserialize method that calls into this does not check that. \n\nPreconditions or if checks are problem if those are executed in tight loop for many rows (almost any operation is a perf hit there). One extra operation here will have negligible impact. I will strongly suggest safe coding here\n. close in finally\n. Question: how does the deserializer know the data type ?\n. log topic name\n. topic name\n. add info about topic or table name in timeoutexception\n. seems repeated pattern that can be moved to a method taking Function returning bool as param\n. are we guaranteed to have non-null mergedBlock ? Even for the first segment returning result ?\n. Fixed this one but these are existing statements in test code. Not doing full cleanup in this PR\n. done\n. done\n. done\n. How and how many threads we use is a TODO (See comment). We are I/O bound on some clusters.  And it's number of running threads that will determine the cost. Using less threads can also add to the wait time. In short...these are arbitrary to give us a start. \nBTW, this is reducing the number of threads for multitenant environments compared to existing policy of 20 threads per table.\nAdded code comment to explain the purpose of two pools\n. done\n. Like! for commenting\n. still reviewing, but does this add version to each row. Can that be derived from schema or set once at the top\n. Does array() create separate object or shares internal representation ? \nGuava's Longs.toByteArray is another option to convert directly to array (one-liner). \nNot recommending change if we are not creating extra objects.\nIf you change, make sure to use same mechanism in deserializer\n. pass e (exception object)\n. Do these need to be long  ? making startOffset long below is understandable\n. It will be immediately executed on the same thread. Executing on the same thread can be dangerous, say, for UI threads or \"main\" server thread which can make the system non-responsive. In our case, it will be executed on the queryRunner which is what we want\n. Not used yet. This is intended to be replacement for per table executor pool going forward\n. This PR maintains existing code by keeping all this code unused :)\nThe PR commit comment explains this above - I added ScheduledRequestHandler but we continue to use existing SimpleRequestHandler. (See SimpleRequestHandlerFactory) So, the only change impacting change here is to use Futures to return from SimpleRequestHandler.  QueryExecution will continue to used the existing cached thread pool from TableDataManager.\n. Regarding number of QueryRunner threads, we can configure it. Today, we used fixed size of 20 threads.  But all this is not configured for usage yet.\n. @kishoreg  For the time-column related examples you brought up, do those columns need to be \"derived\" ? They can be regular columns in the metadata if we are not storing any association.\n. yes, but do they need \"derived\" annotation in metadata. Are they any different from regular columns ?\n. we don't have query id in this context.\nAlso, exception here will almost certainly not about query. It will be more because executor threw an exception.\n. We don't seem to set this. \n. this should check \n! otherRange.isInvalid()\nInvalid otherRange can make this comparison incorrect since it's || condition\n. AscendingDocIdStartRangeComparator\nsince it's ordering by start ranges\n. Fixed. Sorry, this was local change that made to PR\n. yes. updated. That was the goal of making common method\n. that will continue to be logged by query executor (not changed by this PR)\n. IndexLoadingConfig has only 3 things - \n1. list of inverted indexes to create/load\n2. segment version\n3. star tree version\n(3) should not matter because there is no star tree (2) is what we want to add. For (1), we need to ensure that is correctly set. From reading of code, it should be. \n. we shouldn't. -1 explicitly indicates error reading size. Segment missing in response will be ambiguous.\nController explicitly handles -1.\n. nice! v useful to have offsets available in logs\n. that's existing code not new statement. \nThat said, the log statement and incorrect so I'll fix it\n. changed to getBrokerId()\nInitial thinking was to keep it more generic (for non-broker clients sending requests) but that can be confusing\n. yes, added unit in the string format for clarity\n. this is always true. you are iterating over tableNamesFromZK\n. (i don't know helix api well) can this be null if the ideal state for the table does not exist or on race condition with table delete\n. handle null segmentFiles\n. space around  ':'\n. replace sysout with logger.info (all commands do that)\n. Put table name on each line or drop it so that output can be easily cut-paste for commandline deletion (since segment names may not have tar.gz)\n. the code needs to be elsewhere in that case. Pinot-controller can't share tools, IIRC.\nFile name has no bearing on the actual segment name in Pinot. I know it doesn't happen but it's possible to upload tar file with name different from segment name. \n. 1. Do nothing; just log a warning saying \"large group by\". It's not that common yet. We can live with it till we've better solution.\n2. Throw graceful exception to the client  instead of returning partial result if we want time-bound resolution. We already have a task to indicate partial results. Let's not introduce more uncertainty.\n3. Prefer off-heap solution\n. 1. lengthOfMaxEntry is class member, string bytes array is static. Different dictionaries can have different max\n2. both if and else blocks are same\n3. need synchronization (it's static member). With synchronization it might work but it's ugly.\n. I did not know doing just \"-\"  worked! :)\n. added comment\n. this should be in finally ?\n. I'm retaining parity with existing code. That is same as above where we are silent about not finding metadata.properties. \nIn the first version, I had introduced a change to throw exception but that gives misleading indication so I had to back it out.\n. Last line is a positive check comparing metadata before and after conversion and making sure it's not same as default.\n. this won't work with ipv6. I'll file separate ticket to make this interface configurable.\n. Retaining compatibility with existing response format.\n. Thank you!\n. remove res.message or make it += below\n. what's the inconsistency here ?\n. This is independent method. I want to keep this protected\n. Test adds segments for realtime table by default. I do check for map size > 0. it does not give control on the segment name or placement. So, validation code will do exactly what the tested code is doing\n. what's the inconsistency ?\n. I will not test for state changes as part of this PR. This code checks for representation of idealstate and externalview with nearly full coverage. Testing for state transitions is outside the scope unit testing for this code\n. This shouldn't happen. Constructor should throw an error if localDiskDir is not configured.\n. We don't. There is not use for that right now and the classes are used only by jackson converter\n. not right now\n. Because jackson handles these booleans differently and does not output by default\n. You are right. That's the route I tried first but this class is not constructed for that. We end up polluting with annotations and custom setters (and getters may not work). \n. One passes detailed query flag. Other does not.\n. what does the || condition here signify ? I thought externalViewRecordVersion shouldn't equals INVALID version\n. you mean external view ?\n. isInstanceChanged possible when znode versions haven't changed ?\n. why do we update if it hasn't changed ? Add code comments to explain\n. remove sout\n. remove all these sout\nAdd these metrics to ingraph\n. question: does this handle newly added tables ?\nDo we remove entries from _lastKnown for deleted tables ?\n. what does null indicate  ? remove table ?\n. i know. my point is, given we check for znode versions and then come here, is it possible for isInstanceChanged to be true ? If any of the values impacting isInstanceChanged were changed then znode versions would also change, right ?\n. connection_timeouts\n. connection_waits.\nSomething indicating what this wait is for\n. This will deepCopy the original request for all segments. That can be costly as we scale for segments.\nAggregation[GroupBy]Plan node can rewrite instead of blindly adding the suffix as it does right now. Avoids the cost of copying full request (which can be large for large queries with big IN clause). Use getHllDerivedColumnFor(String) -> String instead of letting the full map out.\nReason is, we are planning more derived columns going forward  which will change internal organization. Right interface for that is\ngetDerivedColumn(columnName, derivedFieldType). You can do this or if, it's bigger change, then just provide getHllDerivedColumnFor(columnName), which is more manageable if class internals change.. Nice work cleaning up interface, adding docs and @nullable annotation. Thanks!. why Objects.equals instead of hllDerivedColumn.equals(hllDerivedColumnToCheck). Make this configurable at the server level. I feel 10 might be too less for exception stack.. yes, but does not matter and out of scope of this PR.. out of scope for this PR change.. is there a way to say exclude test scope jars in general ?. excluding log4j because it doesn't matter ? Then we should also exclude slf4j. does this include a shaded pinot common inside pinot-server ?. The AggregationFunctionVisitorBase is a no-op base class that allows creation of specialized classes overriding only relevant methods. Interface will require every derived class to implement all the methods.. I can move it. Document usage example. don't do this. Short term queue increases for long-term workload is okay. It also makes scripting around this harder.\nAdd effective_qps in the report output to indicate actual achieve qps. randomize this within +/- certain time range to not issue queries at exact same interval. what's the stopping condition if QueryRunner continues to achieve it's targetQPS. What is the reason to keep this ? Tool shouldn't determine what's right behavior. Pls add one, maybe numQueries param. Don't want to kill the tool. \nI'm running this tool many many times with different setup each time to evaluate scale limits. Killing  is not a good option.. pls document what these metrics mean. From name, I can not figure what is exactly tracked by processing_exception_caught.\nWhy \"caught\" part in the name ?. one note based on our discussion. This change is neither guaranteed to be efficient. It will also trailing padding characters as part of strings. So, we have to guide customers to avoid having padding characters as part of string. done\n. This moves operator wiring logic to the planner. Given that we have interface-impl pattern for AggregationExecutor, decision to instantiate executors will be based on segment metadata or brokerRequest. That decision should be made by planner. Operators then have single responsibility to to perform specific operation using the inputs.. This goes as part of response to clients. It is not logged. From helix code, getPartitionSet() can not be null. . suggest name change: decompressor. decompress. Document storage layout here (see existing readers). I see you've one in writer. Put a 'Refer' note here and add size information to the doc there\nAs discussed in-person, aligning chunks to page boundaries will give better performance at all levels of memory . Something to keep in mind as future enhancement.. if you store start and end row id in context, you can avoid division for context hit and the modulo operation above in the calling code replacing it with subtraction (/, % are relatively costlier operations).\nYou'll need / only on mismatch with context. see my comment below about storing row start/end in chunkBuffer which can replace modulo with subtraction (cheaper operation). If queries read millions of entries due to larger data size or query selectivity (general use case), this time can matter. (int) required ?\nnit suggestion...\nchunkSize = (chunkId + 1 >= _numChunks) ? _dataBuffer.size() : getChunkPosition(chunkId+1). Provide sizes. not thread-safe. not thread-safe but I guess that doesn't matter for writer. what is the thread safety issue here ? Are you suggesting getting a duplicate buffer from reader and then reading single values here\nMy suggestion is to push the bulk get method down to the reader for performance under different threads. You can also optimize it knowing the chunk boundaries\n. Nice! taking this as param. Yeh, ignore the ?: part of suggestion. That's why I marked it as nit.\nCheck the casting to int. Both are numbers so (int) is not required. added it but I think that is not required.\nIf jvm is killed then deleteOnExit will not have chance to run. If there is any exception then finally will execute. I had used deleteOnExit only in the past but that fails if the directory is not empty.\n. done. Added explanation. I wanted to tool to just work so validateParams does the checking right now. \nIt does not support realtime because I haven't thought through all cases yet but we can extend to support it. added. Good point. There is no full proof way unless helix is doing if-not-modified-since for update.  If it does, we are good.. Fixed. that's right. This indicates bad condition somewhere. Best to stop since this is command line tool. both words mean exactly same  http://www.englishgrammar.org/until-and-till/. incorrect for final string. It shouldn't. Use controller APIs to update table configuration. This command needs whole bunch of parameters for usability. provide unit on the size. use controller APIs. FYI, servers also have API to provide full metadata through REST apis. Take tableName as param as Subbu suggested. \nAlso if (! match) { continue} to reduce deep nesting levels. suggestion: invert condition to reduce nesting level. why is this required ? I thought offline tables don't need schema. distinctcount on dimension name can be significant hit (date predict may soften it but not sure...)\nUse segment metadata api to get cardinality directly. This is only a variation of approach 2 - use mmap instead of holding data in memory. Updated comments to reflect that.. check if segmentsToToggle is empty before get(0). also, parentheses to separate ((&&) || ) && ) . I feel this method is doing a lot of work to handle tableName with or without type, type parameter and empty or non-empty segment list. This can also lead to confusing responses - if this is called with \nmyTable_OFFLINE, realtime_segment_name, type==null then it will turn tableName to myTable_OFFLINE_REALTIME and throw error downstream.\nBest to limit the contract and fix callers. Don't infer types from table names given customers can download segments and control uploading it with specific names. Keep the logic in this method simple. You can also consider providing wrapper methods to simplify logic to always provide tableType based on tableName...just to throw some options.\nAlso, please fix the controller api swagger doc to indicate if table name requires type and semantics. nice!\n. As we discussed, we need to throw here because the table config is bad.\nAdded a test and verified usages. Please fill this. what is metric here ?. Remove this since you've a name and method on each class. commented in code that it's arbitrary. hardcoded. it can be but it's better to derive it rather than multiple interdependent globals. This allows us to change the logic more easily in localized manner.. Discussed. I incorrectly reported that this is server level. We want to it per table table for multitenant clusters. done. delete from local disk before deleting from zk. This is because of possible race when user uploads the same segment. Local disk delete after propertystore delete can potentially delete a new segments. remove from segmentsToDelete since the semantics of list change otherwise.\nYou check for 'not in segmentsToRetry' in the code below but future cahnges can introduce bugs. will be good to log segment names also maybe if # segments < 'x'. segmentToRetryLater.size() instead o f nSegmentsDeleted. Speaking aloud, we should have internal queue and let single thread manage updates to ideal state. We can batch updates, if helix supports batching, reducing failure window.. Use StripedLocks from Guava (https://github.com/google/guava/wiki/StripedExplained) if we extend number of locks. It supports exactly this use case and handles hashing names to locks. else . repeated code blocks. Move those to internal method. We are also inconsistent with o.toString() vs (String) o for string instances. Will be good to just (String) o. remove . else\nThis avoids extra condition execution in some cases. remove. can we tolerate this going negative ?. functions. functions. else. remove. remove. is this needed for strings ? Remove if possible. test for non-existing values,\ninRange method for float\nand get on empty dictionary. Make it private or package-private. It's not \"proper\" map the way it's implemented.. it's called by a method that is unused. Better to cleanup small pieces than retouching this again. thanks. done. done. We won't emit a value for nReplicasIdealMax = 0. Seems there should be one. What happens if we've alerts on this and no value is emitted for a while ? . that happens only on startup (or for non-leaders). what about on a continuous basis for leader ?. log exception. what is replicasPerPartition ? How does it differ from 'replication' ? It's also optional in table config right now.. incomplete doc. It's more efficient to traverse filterQueryTree once to determine the query TimeInterval  range and then compare each segment with that range instead of traversing the tree for each segment. we can getTimeInterval().getStartTime(). Better than creating extra internal state. In fact, the Interval class should be directly usable. It supports overlaps() method. Add tests for disjoint range  < 10 or > 20 and not time column predicate\nalso for time < 0 or time > Long.Max. But this is user input (query) that we are parsing. So, we need to protect ?. protect from upperString == 0 or logic may break. How many segments and what depth of query tree ? Why use slower algorithm that susceptible to query predicate sizes ?. ok,  <1micros is very small. \nExtracting time range does not have to assume single predicate. Instead of recursively calling pruneSegment, it can call \"CombineRange\" to get the larger time range. I generally feel we should avoid algorithms that are susceptible to user inputs. . I meant query without time predicate in it.. Let me flip it and ask, if it can be done with similar code in O(Tree size + # segments), what is a good reason to do it in O(# segments * Tree size) cost ?\nI believe <1 microsecond is for 1 segment. For 500 segments of a table (we are in that ballpark with some use-cases) it's about 400-500 microseconds. If clients happen to construct bad query programmatically with nested OR/ANDs with multiple of those having time columns, Tree_size in above formula increases. Numbers are very small. Latency impact is ~5-10% for low latency use cases. . this may be very noisy printing for every non-numeric-timestamp segment of every query . does helix return null or empty set if idealstate is empty ? Null idealstate seems to be error condition.\nFor empty idealstate, # of up replicas is # of replicas for the table. Need test case for 0 segments in the table. Ideal state exists but number of partitions of the resource are 0.. Avoid this if not intentional. Some annotations may break unless you explicitly intend to use this library.. log file name. why not rename instead ? That will be more efficient.. remove. Use ZKMetadataProvider. info statements here are very verbose if we are doing for all tables. Use ZKMetadataProvider here and for method below to read segment metadata. If the validator relies on logging, it's better to move this to tools instead of controller. For this and some errors below that validate retention time/unit, it's better to proceed further to get error information on segment metadata. Otherwise we'll have to run this multiple times after fixing each problem. ok, makes sense for push type. But if retention time/unit validation fails below, it's better to validate segment metadata also to have complete data in one run.. nice!. Some clusters have time in format yyyymmdd which is 20160401 for example. That's a \"valid\" time as per this check but not valid practically. For our usecase, this is important. Maybe we can parse timestamp as yyymmdd format and see if those values look valid and within timerange ? Another option is to check that the time is within last, say, 5 years. partitioning function should be segment metadata property with partition column as key. Partitioning is a segment property with mathematical constraint applied on a set of columns. Putting this on column metadata structurally impacts composite partitioning keys.\nThe property should be segment.partitioning.columns=a,b,c. There are plenty of examples for that.. Duplicated. Retain only one of _args or divisor. has test ?. regex match will be simpler I guess (minor and optional)\nUT ?. means values can not have spaces ? We should handle that to either prevent, ignore or allow. validate nonnull input since other code doesn't tolerate that. \nPartitionValues should also be nonnull. final. Thumbs up for adding nullable annotations here. Thanks!\n. Should it be silent instead of throwing ? (not sure of all possible operators we can get here. final\n. check inputs not null. should it throw because warnings will be lost and it will result in problems downstream. Add UT. UT. Add positive and negative test. \nAlso cover AND and OR clauses. It can be if use following C'tor signature. That way you need only one. \n(good to have; not absolutely mandatory)\npublic ColumnPartitionConfig(@Nonnull @JsonProperty(\"functionName\") String functionName, @JsonProperty(\"partitionValues\") String partitionValues) . shouldn't we set start/end time for epoch also if the user didn't provide ?. @Nullable for return annotation. timeColumn can be null or empty. Code needs to handle that\nWe check for != null in this file but reading code it timeColumn will not be null but empty if not specified. protect here. format can be null (bad coding) and colValue can be empty if there is no time column which will trigger exception. Added. But this is response so user has the information. I am validating for error in the catch block. I'll add that. Submitting this one to make it part of release. Just checked. AbstractTableConfig.init() handles this. seems error. Are you taking approach of logging only non-recoverable issues as errors ?. this one has incorrect number of params. e1.getMessage() seems to be missed from log string. log server name. done. Existing metric is wrong here. Replaced with table_update_error. done. done\n. URIs are not useful. They just say /schema which we know already. as above. URIs are not useful. as above but this one has schema name which is logged (we don't have schema name above). Making separate method will require different exception to allow early return. It also needs if-else to handle optional schemaName in logs. So, there is no real benefit.\nWe can make a common method that handles schema update that is called by both PUT and POST apis. But there are subtle differences and no UTs. So, I want to limit the scope of this change.. Use formattted string with args for error message. Avoids unnecessary string concat for every call. rename segmentVersion to segmentVersionToLoad and metadataVersion to diskVersion or something similar.\nPrevious PR also removed shouldConvertSegment() method call that wrapped logic  for code readability. MEthod for single condition may seem overkill but those encapsulate logic making calling code more robust and readable. And those methods don't add cost. Please avoid making such changes. Prefer readability. Add java docs highlighting how this differs from above. share code with above constructor by having common internal method taking metadataFile as param. (if java constructor calling rules allow that).\nI would recommend static named methods to construct metadata but that would be bigger change touching lots of files.. All @Nonnull annotations should have corresponding Preconditions check . This has different behavior rom findFormatFile\n1. Missing Preconditions.checkArgument \n2. if indexDir is not directory this differes from previous. There is UT for that. how did that not fail ? I think that was for how segmentMetadata constructor worked\nPrevious code checked for existence of files. hence, these methods are named 'find.....'. If you want to change logic, better rename to 'construct...'. Older code allowed non-existing (empty?) segment metadata file. Not sure if that will be regression - check SegmentFetcherAndLoader and segment generator code for any dependency.. why remove preconditions ? . regression: add segment directory name to message. Add UTs to existing ones. add UT. UT. Update UT to verify correct versions is loaded.. _executor.shutdown() (and _resourceManager.destroy() ?). RejectedExecutionException is posisble if the executor is being shutdown. If you call _executor.shutdown() in shutdown method maybe you can move  if (_isShuttingDown) check at the top of the method.. just checked that executor service is passed in. So, this can't destroy that. indexDir.isDirectory && indexDir.exists() ??  Looking for files in non-existing directory should be error\nNon-existing indexDir is an error as against non-existing formatFile for which it returns error. . same comment as above for indexDir.exists(). They don't. Performance impact is only for query processing which are churning large number of rows. This is called for segment loaders - cost of check <<<< cost of loading indexes. not required if you have other constructors. Don't mix constructors with static factory method. . why not untar and load segment metadata. This is a test so we can. This method and one above have fairly duplicated code. Share if possible. all these methods seem to differ only in msgType param. Share. Use @Nullable annotation on return type.\ncaller needs to handle null return. commitSegment() above will throw NPEs otherwise\n. These function params have @Nonnull annotations meaning they don't expect null values to be passed in. So, if a caller passes nulls that is an error. Add error messages to Preconditions if you want but for NPE there is little additional info to report.  These should definitely not be inside try-catch.\nCaller should correctly handle these bad values returning appropriate error responses before calling this method.. Log info for user errors but this method is not right place to check that. Caller should handle bad input values before calling this method.\nPreconditions explicitly say throw exception if that pre-requisite is not met. So, there should not be try-catch block around it. If you want to change semantics, chage those to if-statements. fixed. fixed. Use comma instead of +. That gives full exception stack. That said, this IOException seems to be error condition. We shouldn't turn this to info\nI believe there are other exception types thrown here like InvalidContentTypeException that should return 415.. this will return 200 with error message. Make sure you return correct error code.\nUse  errorRepresentation method from base class for convenience. parseRequest doc says it throws FileUploadException which can indicate bad request format, early connection termination or local disk issue.\nFor bad request format  it throws FileUploadBase.InvalidContentType exception that should be info logged with correct return status and message.\nIOFileUploadException indicates issue reading network request or writing to local disk. That should be error. Even for connection termination it's hard to say if that's client issue.. I think this should be generic  given the name KeyedFuture. It can have wider use.\nBetter option is to have a thin derived impl ServerResponseFuture (or something similar) that use serverInstance  as key. I guess ide rearranging imports (sorting those it seems). done. Increment a counter so that we can alert on this. Otherwise, this will translate to harder to debug performance problem. It's not easy to see what inverted indexes are actually created. These warning logs will also be gone after 5 days. Duplicated code logic. Move this to OffheapBitmapInvertedIndexCreator.isConstructionPossible(cardinality, totalDocs)  static method. That will keep all the logic in one place. This is not accounting the size correctly. Each entry takes Integer.size + bitmap serialization size. Bitmap serialization size is unpredictable but it's atleast 1 byte but most likely more. So, say, atleast 5 bytes per entry.\nSo, max entries can not exceed (Integer.max_value / (int_size + 1) - 1). For -1 see class comment. Check return code from forceDelete. Throw on failure. warn on failure to delete. corrections:\n1. recover from restart during reload that can leave corrupted segments on disk. (We don't recover from other type of reload failures)\n2. instead of \", no effect....\" - \"This has no effect...\". Subbu is right. Test/Assertion failures will leave these directories around. \nBreak the test in multiple test methods. Add setup/teardown for each to make sure it is cleaned up correctly. Otherwise you need to add a shutdown hook to safely delete. no, really needs cleanup. comment - this case is failure before first renaming. Fix comment - this is failure before second rename. . 'pickWinner' (action) reads better than pickedWinner. suggest winnerSoFar..to avoid confusion with _winner (v similar). add comment on why rename to temp before deleting it. we don't handle HLC replication < configReplication with this change. It may be good to have a method returning replicationFactorToUse and then the check/error message can be a common logic. delete segmentBackupDir and segmentTempDir to properly cleanup even if test fails in between. Consider moving this repeated code to a method (if possible). See ImmutableDictionaryReader for one way to do it. minor - space before /. Replace assert with Precondition if you need a safety check.\n[nit] mvCount to numValues. I kept reading mv as\"move\" and got confused. if you size rowCountPerChunk in powers of 2, you can use shift operators which will be faster than / & % - can impact performance. bufferIndex is at 0. Needs fix here and below (needs UT for these datatypes? ). I guess we need only current writer. Are we tracking to close correctly ?. foreach header{Reader, Writer} call close()  (which may be no-op given we close buffers but to stick to abstractions). rowNumbers start from 0 and increment..... bufferId startIndex length. tests should cover for all types if we have copy-pasted code. Preconditions to assert these inputs are > 0. Definitely needed for rowCOuntPerChunk to ensure headerSize > 3 * sizeof(int). remove. rows  = random(1, multiValuesPerRow) to test chunking. I think the caller goes up to multiValuesPerRow of 1000 whcih may not test chunking. [saying aloud; no action needed] using FixedByteSingleValueMultiColWriter and writing one value at a time seems suboptimal for writing array of values. For nativeByte order, we should be able to use PinotDataBuffer and readFrom method for bulk write but layered interfaces are hurting us..... [again speaking aloud] we should be able to bulk copy....\nAnother point is, for our existing data, most of the time we write one value (inputArray.length == 1). We should special case that with if-else because setting loops is costlier. Not sure how jvm optimizes that at runtime. Needs benchmarking. question is do we even need to lower it if the server is going to serve similar data and queries ? \nFrequency of expand/shrink is important otherwise whole change is not useful.\nTwo options:\n1. If the expanded buffer will be one-off case then use that temporarily\n2. Keep accounting information in get() call. Adjust based on values seen in last n accesses. But most of this will be counter-productive for GC goal. Calling close on closed PinotByteBuffer is safe. We should call close() to ensure all writer resources are correctly released . return here. \nThis avoids some div and modulo costs but not sure if it's more optimal (so optional suggestion)\nprevBufferIndex = getBufferId(rows[0]);\nstartRowIndex = (prevBufferIndex) * numRowsInChunk\nendIndex = startRowIndex + numRowsInChunk\nfor() {\n   if rows[rowIter] >= startRowIndex && rows[rowIter] < endRowIndex {\n       values[valueIter] = readers.get(prevBufferIndex).getInt(endRowIndex - rows[rowsIter]);\n    } else {\n      prevBufferIndex = getBufferId(rows[0]);\n      startRowIndex = (prevBufferIndex) * numRowsInChunk\n      endIndex = startRowIndex + numRowsInChunk\n      values[valueIter] =  readers.get(prevBufferIndex).getInt(endRowIndex - rows[rowsIter]);\n    }\n}\n}. if you use our new IDE then /cols=/ is not required :). remote @throws comment. Small on-heap overflow will not impact memory or performance. It is possible to handle overflow in a single memory block but that can be iterative optimizing if needed.. should be prime or non-power of 2. I'm confused here - we'ver expanded the size of hashmap. Shouldn't we remap all the old entries from ibuf as well ?. suggest renaming -\n1. newSize -> numEntries \n2. mask -> numRows (mask fits role in binary operation but takes some time to understand what is happening here...). final ?. mask  == numRows can be a variable in ValueToDict instead of calculation. make a function for this. couple of performance notes (for record; not for making changes right now)\nSetting up loops is usually costly. Loop unrolling can make perf difference here (https://en.wikipedia.org/wiki/Loop_unrolling). If you find that num_columns will likely be small like 3 or 5, it may be better to hand-code those as different steps than loops.  Or, handle common case of looking up first/second value and then hit the loop. Suggesting these if you need to squeeze more performance here. method - getNumRows or similar name. else ?. Prefer final for all local references. Since we are inside expand() method that's changing references that will help. newSize -> numEntries. suggest moving validation inside expand(int) method...just incase we reuse that through another code path. remove ?. [optional] I suggest fixed expansion multiple to keep it simple. That allows us to maintain numRows instead of calculation (saves some operations). With the educated sizing you plan to do this, expanding in fixed multiples should be sufficient. wrap these repeated lines in function calls (JIT will inline). fix comment - n (a prime number). if newSize > Integer.max then newSize = lastSize. that's why I suggested numEntries or targetNumEntries (you are also using _numEntries to track uniques). makes sense. fold this and block below in the if _maxItemsInOverflowHash > 0 block. Add units on these - bytes/bits. I thought more about this - I feel copying byte[] is better than looping over characters even considering the price for existence. Storing byte[] will save memory which is more premium resource adding only a few nanoseconds to the write path.\nMemory utilization and memory bandwidth should be main deciding factors. . why allocate a new list and copy ? If this is for thread-safety it needs to be atomic reference\nSeems linked list will be better for this than arraylist. check index >=0 && index < _numEntries. \nWe need to establish safety check criteria here - from code, index can be too low to throw runtime exception. Then it can also be too high. Buffer.get(tooHighIndex) has no safety net for that. So, this layer or Buffer should establish safety contraints. should be if instead of while- we don't handle strings spreading across multiple boundaries. So, if it fails after one expansion it will continue to fail. incomplete comment . This for loop can be a method private Buffer locateBuffer(int index) to share with get call. return values.equals(get(dictId)). add a private String getInternal(dictId) method to avoid runtime casting cost. get() method can call that. . return _stringStore.equalsStringAt(....). private here and below. we don't need while here. it should be if statement. I still don't get copying of list. We will need atomicreference for concurrency issue. Also, it's assigned LinkedList here and default initialized as ArrayList. . fix comment. what if index > largest index in buffer. Buffer class will throw error. As discussed, pass min size to expand().. you need to add this buffer to _buffers list to correctly release memory. See comment on DirectBuffers not adding buffer to _buffers which can cause leak.\nIt may be better to provide abstract protected allocateInternal method (similar to doClose) that derived classes can implement to provide buffer. This method can add that to _buffers (since _buffers is a member of this class). private. Consider logging and swallowing IOException here. Higher layers can hardly take action on that. I prefer IndexOffHeapMemoryManager given limited scope of memory management of this class . (If I correctly understand that this is Index level memory management) constructor argument should be 'context' or segmentName + indexName. Our Current allocationContext uses more dscriptive strings that can sometimes aid debugging. Still reading through code...trying to understand how length is passed in.\nWe need upper bound on fileLen to 2G. PinotDataBuffer won't handle sizes larger than that.\nWhy is fileLen capped at 0.5G vs say 2G limit. It's better to have a large file than multiple small ones (truncate() on close() to limit size)\nALso, if it's 0.5G why not extend the file instead of mapping new file ? . I think this _availableOffset calculation if off\nFirst allocation: 512M, _availableOffset = 512M\nSecond allocation: 250M, _availableOffset = 500 + 250 = 750M (but we've allocated 512M buffer, _curFileLen = 512M), \nThird alloc: 100M,  then in addFileIfNecessary: len (100M) + _availableOffset(750M)  < _curFileLen is false  and we will allocate extra buffer\nYou probably should just = here instead of +=. Who has the responsibility to close() memoryManager  ? Please add to javadoc. close memory manager here and in tests below. public or package-private ? @VisibleForTesting. you don't need to toDirectByteBUffer(). Actually, _availableOffset is = to latest allocated size because addFileIfNecessary sets it to zero. So, += is effectively = size. That's different from your comment. Is this expected ?. I would have preferred allocate to be a wrapper for abstract method, say, allocateInternal instead of having all subclasses do right thing by calling onBufferAdded. Any extension can easily miss calling onBufferAdded and tests will rarely catch that. This test needs to exist to test segment generation for pregenerated hll column. It's okay to use different (non-default) value to limit segment size. This part of the code also verifies that combining hll results across segments works correctly. We need to preserve that test functionality (wherever we think is appropriate location). This comment is misleading. We are testing queries on a single segment only. See comment below for PregeneratedHllTest about preserving test functionality for combining results across segments.. [Suggestion] It's better to use TestNG's DataProvider to provide the segment(s), query and result validator for the test. That way, we can define additional entry in data provider if our segment format or set of queries changes. All the tests can be run for those new formats by defining data provider. We won't have to change actual tests.\nThis was a major handicap when we added v3 format - there was no easy way to verify that all tests work with v3 format.. From my test, removing @Api will make this disappear from swagger docs. There is also hidden property for the annotation that you can use.. QueryParam will be null if not passed. This API should ensure we handle that correctly and return 400 for invalid inputs (helps with upgrade or server-side changes on internal APIs also). same comment as above for QueryParam. close() has to be in finally. suggest: Remove this method and prefer IOUtils.copy(is, os)  (or IOUtils.copyLarge(is, os) - this may be more appropriate)\nIf you keep this, briefly javadoc behavior about closing of streams since the input parameter stream is closed inside this method\n. constructor can throw RuntimeException which may not get logged by the handler. Not sure what response it will send to user. Better to be explicit with exception handling. See comment on uploadSegment method. RuntimeException may not get logged correctly (and unsure how framework will respond for those) Better to throw non-RuntimeException that forces explicit handling in requestHandlers. It seems we want exclusive access to file here. In that case, FileChannel.lock() method will be more appropriate. Synchronizing on _helixResourceManager is v coarse if we use that for different set of exclusive tasks. PriorityScheduler works with priority queue. It does not have to be multi-level. MultiLevelPriorityQueue is an implementation of this. always protected with locks\n. done. Check BoundedAccountingExecutor. We pass SchedulerGroupAccountant that limits the possible operations(safety) and if required we can have simpler implementations - see comment above that schedulerQ need not be SchedulerGroupBased (our existing algorithm does not have scheduler groups). deleted. added comment\n. done. done. Reworded to remove references to tokens. Comments belongs here. removed. That's a rant. Ofcourse finer the better but I don't want to add more error codes (feature-ish parts) now. done. done. log source (ip). This will conflict with LandingPageHandler.\nWhy change this ? It seems compatible with existing. I thought only final variables should be all caps. Please check once\nOr is there a way to keep this final for safety ?. Both streams need to be closed. Prefer try-with-resource or close in finally. close both and close in finally or try-with-resource. (typo) metadata. double checking: this will return json array as top level json and not json object. I hope that's desired goal here. this pom has a restlet repository. We can remove that now. we can drop the todo now that you have addressed it. (optional) The executorservice  threads are named as 'restlet....'. We can change that to avoid possible confusion. There have been cases in the past when NFS had temporary blip that would trigger 404. Retrying is important in that cases. It may be better to put it on a retry queue without holding back server startup.. Need a metric to alert on missing segments ? . can be removed?. For gauge, we should report total value at this instance which is totalMemBytes. size variable only represents incremental change. . we should report full value (totalMemBytes - buffer.size() ? ). pls make sure to remove from parent pom also. This will not produce json for exceptions. See controller or server on returning ErrorInfo that is translated to json\nOkay to push if there is time constraint since there are no automated clients but pls fix in subsequent PR. FYI, this method can be part of the same class above since it shares some annotations\n(not a required change). same comment as above for json responses. \n. set @DefaultValue to be sure.\nIs query  url-decoded  before calling this method? (I think it is but I forget). is it ok for BrokerRequestHandler to have traceEnabled empty string. ( I believe it won't be null). Nice! better than providing in API. he has configured swagger tags. I think it's really helpful to have swagger on brokers as well. is this required for us ? . double check if you need jackson dependencies. Changes here don't seem to introduce jackson requirements. yeh, probably not needed. i like having swagger. To move this to table config, this class should play nicely with Jackson. Add tests to verify conversion to json and back works correctly. \nFields like hllFieldSize are derived fields. Those will not come from json but should be set correctly. Missing fields can throw errors.. is LOG2M_TO_SIZE_IN_BYTES duplicated ? Why not continue to use HllUtil ?. update javadoc . I've limited context for this tool and concept of stability. This check is not atomic (a checked table may turn unstable by the time this processes last table). Given that, in case of some unstable tables, does it make sense to check all tables and truncate already validated tables before sleeping ?  That will depend on the total time taken to check for stability.\n. How important is it to account for the time to check stability ? I guess not much...but a simpler modification to the condition can be (current_time + sleepTime)  >= maxEndTime . ",
    "laloyd": "I have a similar issue too using the flights schema from june 9th 2016 build\nstacktrace : \n16/06/10 11:59:03 INFO mapred.LocalJobRunner: map task executor complete.\n16/06/10 11:59:03 WARN mapred.LocalJobRunner: job_local969390209_0001\njava.lang.Exception: org.codehaus.jackson.map.JsonMappingException: N/A (through reference chain: com.linkedin.pinot.common.data.Schema[\"timeFieldSpec\"]->com.linkedin.pinot.common.data.TimeFieldSpec[\"defaultNullValue\"])\n    at org.apache.hadoop.mapred.LocalJobRunner$Job.runTasks(LocalJobRunner.java:462)\n    at org.apache.hadoop.mapred.LocalJobRunner$Job.run(LocalJobRunner.java:522)\nCaused by: org.codehaus.jackson.map.JsonMappingException: N/A (through reference chain: com.linkedin.pinot.common.data.Schema[\"timeFieldSpec\"]->com.linkedin.pinot.common.data.TimeFieldSpec[\"defaultNullValue\"])\n    at org.codehaus.jackson.map.deser.SettableBeanProperty._throwAsIOE(SettableBeanProperty.java:345)\n    at org.codehaus.jackson.map.deser.SettableBeanProperty._throwAsIOE(SettableBeanProperty.java:328)\n    at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.set(SettableBeanProperty.java:424)\n    at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.deserializeAndSet(SettableBeanProperty.java:414)\n    at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:697)\n    at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)\n    at org.codehaus.jackson.map.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:299)\n    at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.deserializeAndSet(SettableBeanProperty.java:414)\n    at org.codehaus.jackson.map.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:697)\n    at org.codehaus.jackson.map.deser.BeanDeserializer.deserialize(BeanDeserializer.java:580)\n    at org.codehaus.jackson.map.ObjectMapper._readMapAndClose(ObjectMapper.java:2732)\n    at org.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1863)\n    at com.linkedin.pinot.hadoop.job.mapper.HadoopSegmentCreationMapReduceJob$HadoopSegmentCreationMapper.map(HadoopSegmentCreationMapReduceJob.java:123)\n    at com.linkedin.pinot.hadoop.job.mapper.HadoopSegmentCreationMapReduceJob$HadoopSegmentCreationMapper.map(HadoopSegmentCreationMapReduceJob.java:44)\n    at org.apache.hadoop.mapreduce.Mapper.run(Mapper.java:146)\n    at org.apache.hadoop.mapred.MapTask.runNewMapper(MapTask.java:787)\n    at org.apache.hadoop.mapred.MapTask.run(MapTask.java:341)\n    at org.apache.hadoop.mapred.LocalJobRunner$Job$MapTaskRunnable.run(LocalJobRunner.java:243)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: java.lang.NullPointerException\n    at com.linkedin.pinot.common.data.TimeFieldSpec.getDataType(TimeFieldSpec.java:85)\n    at com.linkedin.pinot.common.data.PinotDataType.getPinotDataType(PinotDataType.java:1877)\n    at com.linkedin.pinot.common.data.FieldSpec.defaultNullValueFromString(FieldSpec.java:137)\n    at com.linkedin.pinot.common.data.FieldSpec.setDefaultNullValue(FieldSpec.java:123)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty.set(SettableBeanProperty.java:422)\n    ... 20 more\nAnd schema file:\npinot-0.016-pkg laloyd$ cat sample_data/flights/flights-schema.json\n{\n  \"dimensionFieldSpecs\" : [\n    {\n      \"name\": \"Year\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Month\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Carrier\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Origin\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Dest\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"DivAirports\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : false\n    }\n  ],\n  \"timeFieldSpec\" : {\n    \"incomingGranularitySpec\" : {\n      \"timeType\" : \"DAYS\",\n      \"dataType\" : \"INT\",\n      \"name\" : \"DaysSinceEpoch\"\n    }\n  },\n  \"metricFieldSpecs\" : [\n    {\n      \"name\" : \"Delayed\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\" : \"Cancelled\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\" : \"Diverted\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    }\n   ],\n  \"schemaName\" : \"flights\"\n}\nSFO-M-PLLOYD02:pinot-0.016-pkg laloyd$\n. during mvn package I saw this too:\nes/jdk1.8.0_51.jdk/Contents/Home/jre/lib/libinstrument.dylib. One of the two will be used. Which one is undefined.\nRunning com.linkedin.pinot.common.TestSchema\nfile:/Users/laloyd/src/3rdparty/pinot/pinot-common/target/test-classes/data1.schema\nNot extracting plain file file:/Users/laloyd/src/3rdparty/pinot/pinot-common/target/test-\nTests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.772 sec <<< FAILURE! - in com.linkedin.pinot.common.TestSchema\ntest2(com.linkedin.pinot.common.TestSchema)  Time elapsed: 0.087 sec  <<< FAILURE!\norg.codehaus.jackson.map.JsonMappingException: N/A (through reference chain: com.linkedin.pinot.common.data.Schema[\"metricFieldSpecs\"]->com.linkedin.pinot.common.data.MetricFieldSpec[\"defaultNullValue\"])\n    at com.linkedin.pinot.common.TestSchema.test2(TestSchema.java:59)\nCaused by: java.lang.NullPointerException\n    at com.linkedin.pinot.common.TestSchema.test2(TestSchema.java:59)\n. Thanks\n. Aloha, I'm having the same issue. (I'm running hadoop locally on mac laptop). This is from june 9th 2016 repo build.  Here is my schema file:\npinot-0.016-pkg laloyd$ cat sample_data/flights/flights-schema.json\n{\n  \"dimensionFieldSpecs\" : [\n    {\n      \"name\": \"Year\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Month\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Carrier\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Origin\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"Dest\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\": \"DivAirports\",\n      \"dataType\" : \"STRING\",\n      \"delimiter\" : null,\n      \"singleValueField\" : false\n    }\n  ],\n  \"timeFieldSpec\" : {\n    \"incomingGranularitySpec\" : {\n      \"timeType\" : \"DAYS\",\n      \"dataType\" : \"INT\",\n      \"name\" : \"DaysSinceEpoch\"\n    }\n  },\n  \"metricFieldSpecs\" : [\n    {\n      \"name\" : \"Delayed\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\" : \"Cancelled\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    },\n    {\n      \"name\" : \"Diverted\",\n      \"dataType\" : \"INT\",\n      \"delimiter\" : null,\n      \"singleValueField\" : true\n    }\n   ],\n  \"schemaName\" : \"flights\"\n}\n. ",
    "caozhenhuamail": "/pinot/pinot-common/src/main/java/com/linkedin/pinot/common/data/TimeFieldSpec.java\nI  update code as below:\n//  @Override\n//  public DataType getDataType() {\n//    return getOutgoingGranularitySpec().getDataType();\n//  }\nthen it can be work.\n. if the bug be fixed  . I just pull the new code and find the problem still exist.\n. ",
    "guyrasis": "Thanks Jean-Fran\u00e7ois for your detailed answers!\nIt's good info to start with...\nOn Thu, Jun 2, 2016 at 8:38 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nFrom user/concurrency point of view:\n\u2022 Is there a limitation for concurrent users running queries?\nNo, other than hardware limits. Some Pinot clusters at Linkedin process\nseveral thousands of queries per second.\n\u2022 In case I need to add more users, what is the cost? (More\nhardware/servers/memory?)\nAdd more hardware, it scales near-linearly.\nFrom data point of view:\n\u2022 Is there a limitation on how many dimensions/lookup tables I can design?\nIs there any kind of performance implications?\nTables are independent, there's no real performance implication to adding\ntables (as long as you're not planning on having thousands of tables, at\nleast, zk may be a contention point with that many tables). Judging from\nyour question though, it seems as if you're doing a star schema-style\ndesign. Pinot doesn't support joins, so you should flatten your dimensions\ninto the table itself.\n\u2022 What will be the cost of adding another dimension/lookup table? (More\nhardware/servers/memory or redesign of the solution?)\nSee above, no joins.\n\u2022 What about the history, as I mention before we are talking about one\nyear retention, but if I need to add more retention time, example 3 years,\nwhat will be the implication?\nIt'll increase query latency if those rows need to be scanned as part of\nquery execution. If they don't need to be, then they're nearly free (they\nget rejected quickly at query processing time).\nFrom Programming point of view:\n\u2022 Are the windows functions supported?\nNot at the moment. Windowing functions require a second pass during query\nexecution and can be implemented on the client side.\n\u2022 If not, is there a workaround for it?\nCompute them on the client side.\n\u2022 If partially, which one is supported or not supported.\n\u2022 Are Joins between tables supported? (Is there a limitation for table\nsize?)\nNo, and we don't foresee adding support for them this year.\n\u2022 Are nested queries supported?\nNo, and we don't foresee adding support for them this year.\n\u2022 Are functions like Count, sum, avg., max, min, etc. supported? How is it\nworking with uniqueness? (Count (distinct X), Sum (distinct X), etc.)\nAggregate functions (count, sum, min, max, avg) are supported. You can do select\ndistinctCount(X) for distinct count, select distinctCountHLL(X) for\nHyperLogLog approximation.\n\u2022 Are ranking functions, like in MSSQL, supported? (row_number, rank,\ndense_tank, ntile)\nNo, and we don't foresee adding support for them this year.\n\u2022 How Pinot is supporting the comparison between populations? Example, I\nneed to get the population of users which didn\u2019t purchase in the last 3\ndays but they click on my site at least 1 times. (when purchase and click\nare different events types in the system)\nPut both events in the same table as part of your ETL process, roll up the\nrows on Hadoop, select sum(clickCount), sum(purchaseCount) where date >=\n20160325\n\u2022 Flexibility from integration point of view (could it work with\nJava/python/etc.)\nWe have a Java API and a REST API for other languages.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/126#issuecomment-223365537, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/ASrsEz5zJWMU2xrcGXGaN9PpTqdtZIBRks5qHxUkgaJpZM4IneHn\n.\n\n\nhttp://www.mythings.com?utm_source=WiseStamp&utm_medium=email&utm_term=&utm_content=&utm_campaign=signature\nhttps://www.facebook.com/mythingscom/?utm_source=WiseStamp&utm_medium=email&utm_term=&utm_content=&utm_campaign=signature\nhttps://twitter.com/mythingsmedia?utm_source=WiseStamp&utm_medium=email&utm_term=&utm_content=&utm_campaign=signature\nhttps://www.linkedin.com/company/mythings?utm_source=WiseStamp&utm_medium=email&utm_term=&utm_content=&utm_campaign=signature\nWe're hiring!\nhttps://www.comeet.co/jobs/mythings/50.00A?utm_source=WiseStamp&utm_medium=email&utm_term=&utm_content=&utm_campaign=signature\nGuy Rasis\nDBA & BI Team Leader, myThings\n+972 545789867\nguy.rasis\n. ",
    "mcvsubbu": "LGTM\nI will merge once travis passes\n. LGTM\nI will merge once travis clears it\n. LGTM\n. May want to use case-sensitive (1T is more intuitive than 1t). I will leave it to you to decide.\n. LGTM\n. LGTM other than the comments. Please fix as indicated before merge. thanks\n. LGTM thanks\n. We could also do messages over helix?\n. LGTM otherwise\n. lgtm\n. @fx19880617 do you mean increase in number of partitions in kafka?\nThis will not be handled automatically, and will require a downtime, and update of a record in PROPERTYSTORE and then restart.\nIn any case, changing the number of partitions in kafka dynamically requires a downtime afaik, and the pinot cluster downtime should coincide with the kafka downtime.\n. Design outline:\nWe will be adding a new helix state, CONSUMING. For realtime segments, the controller will place them in CONSUMING state first. This state indicates that the segment is not completed on the server side.\nWith multiple replicas in CONSUMING state (set to consume either by time or number of records), the controller co-ordinates amongst the consumers so that one of them commits the segment (by uploading it), and the others either keep what they have (if they are at the same offset), or catch up to the correct offset, or discard and download the segment from the controller.\nThe replica instances for each segment is stored in PROPERTYSTORE as a map, when the table is provisioned, and updated when the cluster is expanded (the update requires no downtime).\nWhen a segment is committed, the controller marks the segment state in IDEALSTATE as ONLINE and starts another segment in the CONSUMING state.\nThe protocol has been validated by prototype as in the branch https://github.com/linkedin/pinot/tree/LLConsumerPrototype\nThe Broker will be modified to introduce a routing table that routes to the new low-level consumer segments (differentiated by segment naming convention).\nTransitioning a cluster from high-level consumer to low-level consumer will not require a downtime. Extra hardware may be required during transition phase.\n. As we move forward,\nI discovered that the table config information for realtime tables has \"replication\" field. For high-level consumers, this value must match the number of instances. For low-level consumers, this value is independent of the number of instances. \nI am considering introducing another config variable called replicasPerPartition.\nOnly realtime table code will pay attention to this value, when low-level consumers are enabled.\nDoesn't look pretty, but I don't see an alternative (other than introducing a new config variable). The old one is already called \"replication\" ...\n. I like the idea of changing the existing code to use number of instances, but the exception thrown right now, says \"Number of instance in current tenant should be an integer multiples of the number of replications\", and there is code (@fx19880617) that balances the same kafka consumer group across multiple instances.  Can this even work? I thought Kafka cannot guarantee exactly once delivery when high-level consumers are split across hosts?\nOtherwise, numConsumerGroups (essentially same as my proposal of 'replicasPerPartition') works.\n@fx19880617, can you comment?\n. The plan to migrate deployments from high-level consumers to simple consumers is to start servers (either existing or new) with simple consumers consuming and completing realtime segments. We will change the broker to route a percentage of requests to the simple consumer segments, and the rest to the highlevel consumer segments. Over time, we will increase this percentage to 100, and then stop the old high-level consumers.\nIn order for us to do this, the code in HelixExternalViewBasedRouting needs to be modified to be aware of LLC segments.\nModifying this class with the existing logic (of using routing table builder classes provided via configuration) is proving to result in a very messy piece of code.\nWe are getting rid of the configurations that allow Pinot deployers to specify their own routing table builders.\n@fx19880617  has already confirmed that customized routing is not used in their environment.\n. @fx19880617 we now support automatic handling of change in number of kafka partitions, change in capacity or number of replicas. See https://github.com/linkedin/pinot/pull/903. @fx19880617 we don't have a feature to set offsets individually on a per partition basis. We can open that as a separate issue.. thanks @jfim . Please also add a check on the table name creation path to make sure that it does not have doubl inderscores in the tablle name.\nOtherwise LGTM\n. Please remove other calls to e.printStackTrace(). It is enough to have a log message with the exception as the last argument.\nOthewrise lgtm\n. LGTM\n. LGTM\n. LGTM thanks\n. Otherwise, LGTM\n. Please use the new classes checked in for low level consumer segment names, thanks.\n. LGTM otherwise\n. Can we not have partition ranges in the segment name please?\n. lgtm\n. @kishoreg All in good time. I need to get this out now so that it unblocks us for continuing the low-level consumer work. Further re-factors will come soon to a PR near you :-)\n. lgtm\n. lgtm\n. LGTM thanks\n. @kishoreg  yes, it should be backward compatible since I it is just splitting the string over commas. Current znodes will have only one element. When we want to enable LLC, we can add a \",simple\" to the config.\n. I will also take a manual test and a PR for unit test later :-)\n-Subbu\nOn Mon, Jul 18, 2016 at 4:40 PM, Mayank Shrivastava \nnotifications@github.com wrote:\n\nLGTM. Please add unit tests to catch that any kind of exception in server\nside does not result in a time-out in the broker side.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/283#issuecomment-233491253, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ACLGfVcsveHQr7loMmNsAfRmuYIfvPniks5qXA7VgaJpZM4JN3pD\n.\n. LGTM\n. LGTM \n. Otherwise, LGTM\n. LGTM\n. Fixed the comment typo. Thanks\n. please add this to the design doc in the open source, as well as to the doc\nwe shared and marked as FINAL Realtime design. thanks\n\n-subbu\nOn Tue, Aug 2, 2016 at 4:44 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nThis is what the consumer state machine will look when fully implemented.\n[image: Kafka consumer state machine]\nhttps://cloud.githubusercontent.com/assets/246807/17349136/4931381e-58d0-11e6-8d4c-f56f185c8f60.png\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/338#issuecomment-237084698, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ACLGfRAUNdkDk9_xVSnuvPHaXZGP4mF5ks5qb9ZdgaJpZM4JbKOw\n.\n. Overall, I think the approach is workable. Here is what I would prefer:\n\nA state actually does what it is named after (i.e. if it says it is trying to find a bootstrap server, it should be doing that without the need to call 'think'). Alternatively, the state can be named after its pre-condition, and an input can decide what that state does, and which state it goes to next. That would make the state machine more intuitive to understand, IMO. If you can make common methods out of error handlers, that will be great.\nPlease add unit tests in your final version, mocking kafka as needed (or, overriding it with a fake kafka). Best if unit tests can cover error conditions as well.\nIn order to support the segment completion protocols, the consumer should have methods like 'start consuming', 'stop consuming and give me the offset', 'catchup to consume upto this offset (exclusive)'. I think you are in the right direction to be able to add these methods, but just wanted to remind you. We can then build segment completion on top of the kafka consumer (and test the segment completion part with a fake kafka consumer wrapper!). The consumer code and the helix state machine code that has been validated is in https://github.com/linkedin/pinot/blob/LLConsumerPrototype/pinot-integration-tests/src/test/java/com/linkedin/pinot/validation/PartitionConsumer.java\n. pls add unit tests at some point.\n. lgtm otherwise\n. LGTM.\nThanks for adding the unit test\n. lgtm\n. lgtm\n. lgtm\n. Answering @mayankshriv questions.\n1. If no new data has been ingested and the system is stable (i.e. no zk notifications pending for segments, etc.), the HLC and LLC segments should come up with the same answer for a user query. There are edge conditions where these may not be the same, yes.\n2. By 'latency' you mean time taken in the external view change handler? Sure, there will be an impact since we have to build two routing tables. As long as extrenal view does not flap too quickly, the impact would not even be noticeable. Or, did you mean query latencies? There should be 0 impact to query latencies (all we do is one more hash table look up during transition phase).\n3. Do you mean memory stress in the broker or server? In the broker, the memory usage will be doubled (approximately) given that we are keeping both tables (in the transition phase). So, we should adjust heap size accordingly, especially on shared brokers. Or, not have multiple tables in transition on the same broker. On the server, again, memory will be doubled if we co-host the two segments, but not otherwise. Does this answer your question?\n. LGTM as long as the servers are deployed with the earlier code of being able to handle nul character as pad character.\n. lgtm\ncan u pls update the unit tests to reflect this? thanks\n. Also, if you can please take out the commented lines. I meant to take them out, but missed them somehow. thanks.\n. Pleas disregard my comment about unit tests. There is a TODO to re-factor this class anyway, and we will get the unit test coverage at that time.\n. @mayankshriv I have explained the TODOs\n. lgtm after changes suggested, unit tests can be separate.\n. lgtm otherwise\n. .lgtm otherwise.\n. add a unit test at some point\notherwise, lgtm\n. lgtm, pls modify the unit test to cover this case.\n. I will merge this in my next PR\n. Lgtm\n. lgtm\n. lgtm\n. lgtm.\nplease push right away, since travis will fail anyways.\nthanks\n-subbu\n. This code path is not taken if the directory exists.\nThat said, it is good to add a deleteQuietly on the dest dir, since we may be moving this code block around (there is a TODO above this code block). I will add that.\n. lgtm\n. lgtm thanks\n. I think we are ok with the more recent version as well. I will merge this in if need be. Thanks for the fast turn-around.\n. lgtm (g = great) thanks :-)\nwe just need to add more test cases now and some error conditions. You can cover the major ones for now, and leave others as  TODO. we will catch them when it comes to code coverage.\n. yes, afaik., @jfim researched this, and had the original code that had\nget(0).\nOn Tue, Sep 6, 2016 at 4:10 PM, Mayank Shrivastava <notifications@github.com\n\nwrote:\nLGTM, other than the minor question/comment.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/502#issuecomment-245124452, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ACLGfbVno79HnNbTb7_x7Mqp1_bmsQq0ks5qnfLmgaJpZM4J2X_Z\n.\n. If you see the previous two lines the start and end time are set in millis\n. Please do additional tests as discussed\n. LGTM after tests.\n. LGTM otherwise\n. lgtm\n. It is good to have the request Id and Broker id on all logs after the request is decoded.\n. Don't you need the timeout settings in ConnectingToBootstrapNode.process() and FetchingLeaderInformation.process(), and ConnectingToPartitionLeader.process() method as well?\n. lgtm. Looks like I cannot approve this because it was submitted before we had the approval stuff?\n. I am working on a fix for this. Will submit a PR soon. Thanks.\n. As an aside, the LLRealtimeSegmentDataManager seems to use a different code path for building segments. We can look into this later.\n. I used to have a timeout there before, but removed the timeout since helix allows unlimited time to transition from CONSUMING to ONLINE.\n\nThis transition can take as much time as it takes to build and replace the segment (or, as much time as it takes to download and replace the segment).\nI guess 10 minutes is high enough (I used to have 30s before I think), but it is something to keep in mind.\nAlso, I realized (overnight :-) that this call can happen in the query thread, when releasing segments. When we replace a segment, we call destroy() on the realtime segment only if there are no queries currently using that segment. If there are queries, then the last query to release the realtime segment will call destroy() on it. We should modify the comments to include this note.\nPerhaps it is better to check if the thread is alive and then call join.\n. Now we have the table metadata being read by all 3 entities, we need to be\ncareful when we make changes, and ensure that it all works with the upgrade\norder.\n-Subbu\nOn Wed, Oct 26, 2016 at 3:08 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\nWith regards to Subbu's comment about the zk watches, I ran it by Kishore\nand he said it's okay.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/702#issuecomment-256491879, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ACLGfYA7tgzTgAJn-0EMiC8GcYaAztK7ks5q389ygaJpZM4Kco3L\n.\n. Fixed as of https://github.com/linkedin/pinot/pull/898\n\nThe validation manager will auto-create segments. Since the API is on a per field basis, ideally I would like to error out when the field added is not correct. But then I agree that it makes sense to call validate() and add anything we want in there. I will make the change\n. Done\n. Yup, right you are.\n-Subbu\nOn Sat, Nov 12, 2016 at 12:26 AM, Jean-Fran\u00e7ois Im <notifications@github.com\n\nwrote:\n@jfim commented on this pull request.\nIn pinot-controller/src/main/java/com/linkedin/pinot/\ncontroller/api/restlet/resources/PinotTableSchema.java\nhttps://github.com/linkedin/pinot/pull/806#pullrequestreview-8295092:\n\n@@ -75,7 +73,10 @@ private Representation getTableSchema(\n       try {\n         config = _pinotHelixResourceManager.getTableConfig(tableName, TableType.OFFLINE);\n         String schemaName = config.getValidationConfig().getSchemaName();\n-        Schema schema = _pinotHelixResourceManager.getSchema(schemaName);\n-        Schema schema = null;\n-        if (schemaName != null && schemaName.isEmpty()) {\n\nI assume that should be !schemaName.isEmpty() :)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/806#pullrequestreview-8295092,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACLGfdpvq5UDX2ikN87DBCW8zWhbvKxYks5q9Xg_gaJpZM4KwMP4\n.\n. realtime segments subclass SegmentMetadataImpl, and some methods are overridden to throw exception. So, adding a test will future-proof this.\n. I stand corrected, this is not an inherited class. Go for it.\n. It is there, as a part of the new test I added. We only seem to have metrics on state machine aborts, not on individual message types.. Good catch, adding it to the routing table now. Manually verified that segment turns to OFFLINE state when a curl command is issued to the controller with the appropriate URL. I will add an automated integration test later. @mayankshriv  The server makes sure that the queries in flight are done (mod time-outs) before the segment is dropped. New queries do not get the segment once it gets the offline transition, so the broker will eventually see the offline transition via externalview and the segment will cease to exist in helix. I would prefer to address that independently instead of retaining cruft if we throw an exception, for example. \n\nIt would be best to include it in the state that we are retaining an old segment in disk and remove it when we are handed a new segment or a new offset.\n. Isn't there an issue in BrokerResourceOnlineOfflineStateModel as well? \nIn the method onBecomeOnlineFromOffline() it seems we are using the broker resource name as table name?. @antumbde If the server restarts in this state, it will get a transition to go to CONSUMING state. It will realize that the segment is already completed, and download it if necessary, and load the (built) segment into memory. It will NOT start re-consuming from earlier offset. Helix state will still indicate this as CONSUMING, which is a TBD fix that I mentioned in the commit comment.. @mayankshriv to answer your questions:\n\nExponential back off policy already introduces a randomness. This code had exponential back-off before (and perhaps that is why we did not see this issue for a long time) and I changed it to linear in a recent check-in. Linear did not have any randomness.\nThe lock will help us complete the segments in minimal amount of time, with each update happening in succession. The back-off is still needed because we will be contending with RetentionManager, or a segment deletion call from the console. If any of those happen when we are trying to update the idealstate, we need to retry.\nI have unit tests for the classes. Obviously, it is not easy to test this condition. Once I have a better handle on how to get out of this situation, I will add unit tests mocking the requisite states to get us into this situation. For now, the only test is to roll it.. \nWhen the server gets to \"KEEP\" a segment, it can decide not to build the segment, but wait until it gets the ONLINE transition from helix. At that point, it can download the segment. This change should reduce the number of segment builds on the server (since building a segment is more expensive than downloading it).\n\nOn the controller (SegmentCompletionManager) we remove the FSM if it times out. Not sure if keeping it around in a new state (TIMED_OUT) may help. It may be same as increasing the commit timeout.. The segment build time for the real-time path can be reduced bu removing the first pass over the data to get min/max values, statsCollector, etc. These should already be there in the realtime in-memory segment.. We could have a thread in the server that updates the controller periodically that the segment build is going on. Then the state machine in the controller side can be retained for a longer time. If we couple that with limiting the number of simultaneous segment builds in the server then we can stagger the segment builds enough. Over time, hopefully they drift apart that they don't have to wait for building a segment.. Will be good not to stop consumption at all. \nOne early idea we considered was to let the controller add a new segment once the winner is picked. Not sure if we want the old segment still in CONSUMING state, or change it to be ONLINE If former, then we double the writes to zk for creating a new segment (because we need to update it to ONLINE later on). If latter, then servers will look to downloading the segment, and we will need to introduce special code to see if they are consuming the segment then just catch up to the target offset and respond OK to helix. After that, it has to keep checking to see if the segment is availalble, and then download and replace it at some point.\na server may go down and come back up, and if the state is ONLINE and the segment is not availble, it has to keep retrying? Or, may be start consuming while still retrying.\nIf the committer goes down, then this logic will not work, so someone needs to commit the segment to the controller.. Another thought is to change the Helix state model to include a BUILDING_SEGMENT state. Not sure how this will work for multiple cases and failures. Need to be ironed out.. We will be working on the following three things in the coming weeks:\n\n\nOptimize realtime segment generation by folding in the stats collector object into the RecordReader. The realtime record reader does not have to do a full pass through the data to get the things needed for segment creation, in that case.\n\n\nWe will keep the old tar file generated and remove it only when when the segment goes to ONLINE state. This is for a back-up that we may not use ultimately, but good to have so that we can prevent infinite loop.\n\n\nWe will enhance the completion protocol to include a lease time in the COMMIT message from the SegmentCompletionManager. This is the max time that is given to the servers to build a segment. If the server does not complete building the segment during this time, it will send a new message to ask for more time. The SegmentCompletionManager maintains info on time taken to build the segment and adjusts the initial lease value accordingly.\n\n\nWe will table the other options for now until we have these and take fresh measurements.. * 8efbe511c - [PINOT-4603] Added server side code for extending lease for build time (#1174) (1 year, 8 months ago) \n* d88c2a4bc - Included more parameters in realtime server http requests to the controller. (#2722) (7 months ago) \n. Discarding this pull request for now, will open a new one. Hello skyb92,\nWelcome to the pinot community.\nDepending on the scale of things, you should have appropriate number of machines for servers, brokers and controllers. I suggest experimenting by generating a pinot segment, estimating how many segments you will need at any given time, what your replication factor is, and set up number of servers depending on the memory requirement. Pinot segments are stored in memory, so this is a start. You may need more servers to improve query throughput (or less, if your query rate is low, you may just MMAP the segments).\nHaving more than one controller and more than one broker is always a good idea in production.\nIt is your choice whether you want to use Hybrid or real-time-only solution. Hybrid may work better (at this time) if your retention is larger than a few days. \n-Subbu. We need the complete exception stack to say better, but this looks like\nsome entries in zookeeper are not correct. I suggest you drop the table\n(wait for external view to clear out) and re-create it afresh.\nAlso,  make sure your helix instances are tagged correctly.\n-Subbu\nOn Tue, Mar 14, 2017 at 10:21 PM, Y.A notifications@github.com wrote:\n\nI got this error message when I restarted pinot, any suggestions?\nCaught exception while processing resource mmcloud_facebook_akun_stat_REALTIME,\nskipping.\njava.lang.NullPointerException\nat com.linkedin.pinot.controller.helix.core.realtime.\nPinotRealtimeSegmentManager.assignRealtimeSegmentsToServerInstancesIfNe\ncessary(PinotRealtimeSegmentManager.java:207)\nat com.linkedin.pinot.controller.helix.core.realtime.\nPinotRealtimeSegmentManager.processPropertyStoreChange(PinotRealtimeSeg\nmentManager.java:291)\nat com.linkedin.pinot.controller.helix.core.realtime.\nPinotRealtimeSegmentManager.access$000(PinotRealtimeSegmentManager.java\n:66)\nat com.linkedin.pinot.controller.helix.core.realtime.\nPinotRealtimeSegmentManager$1.onControllerChange(PinotRealtimeSegmentMa\nnager.java:105)\nat org.apache.helix.manager.zk.CallbackHandler.invoke(\nCallbackHandler.java:209)\nat org.apache.helix.manager.zk.CallbackHandler.init(\nCallbackHandler.java:324)\nat org.apache.helix.manager.zk.CallbackHandler.(CallbackHandler.java:114)\nat org.apache.helix.manager.zk.ZKHelixManager.addListener(\nZKHelixManager.java:317)\nat org.apache.helix.manager.zk.ZKHelixManager.addControllerListener(\nZKHelixManager.java:426)\nat com.linkedin.pinot.controller.helix.core.realtime.\nPinotRealtimeSegmentManager.start(PinotRealtimeSegmentManager.java:102)\nat com.linkedin.pinot.controller.ControllerStarter.start(\nControllerStarter.java:133)\nat com.linkedin.pinot.tools.admin.command.StartControllerCommand.execute(\nStartControllerCommand.java:155)\nat com.linkedin.pinot.tools.admin.PinotAdministrator.\nexecute(PinotAdministrator.java:113)\nat com.linkedin.pinot.tools.admin.PinotAdministrator.main(\nPinotAdministrator.java:125)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/1138#issuecomment-286643870,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACLGfVbJ1ed5_Js_zP1-74YkEMdEHKNFks5rl3VCgaJpZM4MbEuK\n.\n. @jfim adding a unit test. Regarding getting the number of partitions in the server, I had already discussed this with @rven1 We do not need a retry there, since on any exception, we choose not to have the partition information in the segment metadata. It does not affect consumption in any way.. @kishoreg the hashcode/equals methods and their contents are as they are before. They just surfaced because I changed KeyedFuture to KeyedFuture (and hard-coded K to ServerInstance, since we never use it any other way).\n\nSee https://github.com/linkedin/pinot/pull/1307\nI will fix the hashcode and equals methods. @kishoreg like we discussed it seems the equals and hashcode methods are both present in ServerInstance. Also, they take into account the port. . second -- two in one day.\n-Subbu\nOn Mon, Apr 24, 2017 at 4:26 PM, Jean-Fran\u00e7ois Im notifications@github.com\nwrote:\n\n@jfim approved this pull request.\nLGTM. Congrats on your first commit to Pinot! :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/1344#pullrequestreview-34441188,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ACLGfWaelcWoJp81CZgRf7hwxoXQ1thLks5rzS-dgaJpZM4NGx2F\n.\n. @Jackie-Jiang yes, we don't delete segments when we drop a table.. I will review it, but I have a question. What happens if the segment is refreshed between the time it is downloaded and re-uploaded (after conversion)?\nPerhaps you should introduce a refresh-if-crc-equals API in the controller?. @jamesyfshao Your commit seems to be explicitly blocking overriding of a fetcher class via configuration (both in tests and code). This feature was present before the commit. We now have a requirement to be able to override the classes defined for specific protocol.\n\nDid you have a requirement to NOT be able to override the pre-defined classes, or was that an oversight? I wanted to check before making the change to fix the issue.. I take that back. I think the test is fine with it, but it is disabled in code in 2 places, I will fix it.. @letsflykite you should be able to configure your kafka topic broker name in the streamConfigs section of the table configuration. You can follow the example as in  LLRealtimeClusterIntegrationTest (most of the configuration is in the super-class).. Merging without travis clearance. Travis is hung. We need this for a hotfix. @mayankshriv no pom changes that added hadoop dependency. This commit changes the way controller is configured with fetchers. Earlier configurations looked like: \"pinot.server.fetcher.foo.bar\". These will no longer be honored. Instead, the configuration should be changed to \"pinot.controller.fetcher.foo.bar\".\nServer's configurations can remain unchanged.. You should move this to all metadata, not just offline zk metadata. Nice re-factor in preparation for the next commit. I believe we should go with option 1 proposed by Kishore. The (extra) json field elements in the derivedFieldSpec are not there in any other field spec, so it is best not to pollute every fieldspec with the new json elements.. In favor of another one. @kishoreg , actually we don't need to make sure that the segment name is the same. Instead, @jfim had a proposal that we discussed this morning. The synopsis is as follows:\nThe update happens as two steps, write to propstore and write to idealstate. We can handle it find if the first one passes and second one fails.\nThe write to propstore is two znodes - the current completing segment and the new segment. We can write the current completing segment only if the version matches (after modifying the state). THis way, we can avoid creation of two different segments with potentially different offsets (which the naming solution will not solve). We can then add the new segment. I noticed that in helix these are done as two writes anyway, so we will not be adding extra zk writes if we go with this approach.\nAlso, when writing idealstate, it is already a read-modify-writeIfVersionMatch, so we can check for another segment of the same seq number aleady present, and prevent writes.\nThese are more extensive changes, I will add them in the near future.. @alex-hofsteede you do not need the zk connection configuration for the newer Low-level consumer configuration. . As for testing, we have integration tests that cover llc and llc with split commit. They run fine, and use the modified methods.. I guess it makes sense to provide some context. In this case, the tool was used to run a 24-hour test with new helix package, taking turns to kill a random server/broker/controller and wait for tables to get stable. Realtime tables were also adding segments in the meantime on a couple of tables.. Excellent comments in code, and thanks for adding the unit tests as well. The things we assume in the code are:\nThe stream is partitioned (if you want to use a partition-based consumer)\nThe stream provides APIs to consume all partitions at a time, or a single partition at a time\nThe stream has a topic name, some timeout settings, etc.\nThe stream has a (comparable) offset that is a long\nMost of the code changes required are moving classes and renaming methods/members to not contain the word 'kafka'. We can do this in a few steps to get to the point where all Kafka related code is in one package, and then look to making that an class(or classes) that can be injected.\nThe segment completion protocol deals with offsets as being long, so some work may be needed if we wanted a generic Comparable as an offset. We can get there later.. @EronWright what we are trying to do is to unweave Kafka and Pinot.  The idea is that you should be able to inject classes that can parse the configuration that they need and provide functionality to read from an incoming stream. This is ongoing iterative work, but we are getting started.. @EronWright , @fx19880617  we believe we have  completed work on this issue, and will be able to support streams that look and feel like Kafka :-), but are not Kafka. We will be adding documentation on what we expect the stream should support/provide, and how you should implement a new plug-in. Meanwhile, if you can take a look at StreamConsumerFactoryProvider, that should give you a pretty good idea of what needs to be implemented to support another stream. Please let us know if some abstractions need to move around or do not work for you. Better yet, submit a PR with how you want the abstraction, and we can get to something that works for all of us.\nThanks. @EronWright  somehow we completely missed this comment. We apologize for the late response.\nThe re-factoring for offset not being a 'long' is hard and touches multiple places. The code on the server side (or that on the controller side) alone is probably easier than the idea of keeping it compatible between the two. We need to make sure that the segment completion works right with other types of offset. \nIf the offset is a Comparable, then I think it could be a little easier. We just have to try out the re-factor. \nAlternatively, as you say, the high-level interface can be targeted. Two major issues we found with High level streams: \n1. We are limited to consumption rate of one host.  This was a non-starter for some of our high ingestion use cases.\n2. Operationally it was a nightmare. One had to be careful about setting the Kafka instance config manually while expanding the cluster or replacing a node if it is down . We had gotten into situation where the Kafka traffic was split between a couple of hosts, leading to wrong results for the application. Addition of a new host to the cluster meant (sometimes) waiting for several days for that host to catch up, meanwhile making sure that new software is not deployed to that host. Some of these can be overcome with additional software, but we decided to go with LLC\nHope this helps. . Right now, the only way to test this is by adding integration test. I would prefer that we make pinotHelixResourceManager unit-testable instead of adding an integration for each of these cases, since it increases travis time.. @kishoreg the formula for computing the segment size will favor history more than the most recent value. Currently, history is favored at 75% and most recent value at 25%. So, while there is a variation of number of rows for each segment, it should be small. @npawar will also be adding a unit test that iterates through the algorithm 100s of times for some random variation of segment sizes.. We do support regexp_like(). See https://pinot.readthedocs.io/en/latest/pql_examples.html. \"smallest\" is the value that SimpleConsumer accepts, so the Kafka terminology is actually \"smallest\" and \"largest\". (Unfortunately?) we use the same as what Kafka uses and pass it right on to the Kafka SimpleConsumer without translating.. The following sequence of events can cause the bug:\n\nserver A sent a request to complete Segment S1 (realtime) to Controller.\nController marked metadata for S1 as Done\nController created new metadata for S2 and marked IN-PROGRESS\nRetntion manager came along and looked at IS and decided S2 needs to be deleted since it has metadata but not in idealstate.\nController changed Idealstate to mark S1 ONLINE and S2 CONSUMING (single change)\nRetention manager deleted S2.\n\nsteps 1 thorugh 5 has to have happened in the same ms in that order\nor probably a few ms\nThe correction logic in the controller worked for this case until PR #2721 , when the bug was introduced to NOT handle the case when there are no consuming segments. \nUntil then the race condition probably existed, but things auto-corrected, so we did not see it.. @kishoreg I think what you are saying is that a single broker must have some upper limit of qps on a table. That is fine, except that we should ensure that when the client exceeds qps we return 429, but when the broker is overloaded, we return 503. Also, to implement means that we need one more config for each table. Maybe this can be a broker config as a percentage? (so, it will translate to some percentage of overall qps as the max handled by a single broker). @jfim I have seen it break a few times before.. @kishoreg  ideally we need as many locks as number of realtime tables. Curently, we hash a table name to a lock and acquire the lock before updating idealstate. The locks are so that we don't have conflicts on updating idealstate. We had seen the conflicts before, and introduced lock (which did much better than conflict and backoff-retry).\nThe symptom that need us to increase the number of locks (from hard-coded 4 to a default 64) was that several new use cases have been added that have 40+ partitions (often times lazy, with hardly any events). These resulted in lot more collisions across tables. So, many realtime hosts started experiencing issues sending segmentConsumed() message to the lead controller (timeout). We root-caused the wait to a wait on this lock, and want to increase it from its current value of 4.. @sunithabeeram  correct, it is always called in the helix state transition thread : either CONSUMING to ONLINE or OFFLINE to ONLINE. These cannot happen simultaneously. Further, helix also serializes calls to the same resource-partition.. @kishoreg pinot low level consumer already has a reported metric for the lag. SimpleConsumer provides the highest offset availble, and the difference between the highest consumed offset and the highest offset is reported as the consumer lag on a per topic-partiton basis.. @jamesyfshao the 'offset' you talk about is a vector in the HighLevel stream consumer -- offset in each partition. In theory, it is possible that a Pinot HL consumer is starved trying to consume data from a particular consumer. It is certainly possible that some partitions lag a lot more than others, so I am not sure what a 'lag' metric here will be.  Let us assume it is a function of lag of N partitions.\nYou will need to monitor this on a per pinot consumer basis. You want to know how much a particular consumer is lagging, I suppose\nSo, there should be no need of a separate thread in HLC. If you can get the current available offset (and the committed offset) just after the commit in the High level kafka consumer, you should be able to update the metric.. Correct, and that was my proposal to @jamesyfshao  as well (to evaluate and emit the metric at the time we commit, on the server rather than controller).\nI am just not sure what the evaluated metric would be, though.\nSince we are moving in the direction of a generic stream, I would want this evaluation to be done inside the specific consumer code.\n@jamesyfshao  can you elaborate further on how you are planning to compute the metric?\nAnother idea (like you mentioned) is to monitor using external Kafka monitoring services. That worked well for us, and you may want to look into  it.\nAlso, you should strongly consider moving to LLC.. Pinot controller only has info on the group ID.\nIt does not have info on offset up to which each partition has consumed. Neither does it have info on what the offset is in Kafka. Since we use Kafka's commit code, this info is stored by Kafka in whatever format they seem fit in some location unknown to Pinot. I would not want Pinot to be dependent on this format or location (which may change across Kafka versions, we don't know).\nIt seems to me that any which way you try to get these two pieces of information, it will be a re-write of the tools that Kafka may provide, to compute offset lag. Have you looked at any Kafka tools, and tried to use them?\nLike I mentioned before, LLC already has the problem solved, so have you considered moving to LLC?. I ran \"jstat -gcutil\", starting it before we build the segment, and terminating it after. I did this for building segment for an internal use case that had 10 no-dictionary columns. The code I invoked was to build a segment for one partition of this use case. A recent random segment form production was taken and replayed for this experiment.\nI ran the jvm with \"-Xmx24G -Xms24G -XX:NewSize=16g\" so that we do not have a GC at all during the entire experiment.\nThe output of jstat showed that we decreased heap usage by 2.6% for this use case.\nThat works out to be 425M of heap for this particular use case, per partition.. Looks like the pool at least limits the number of outgoing connections we make per segments. Agree that we should keep the pool for now (even though it is churning all the time) while we look for alternative solutions.. @haibow can we close this issue now?. OK, let me see how we can get this done.. I have added some more to the Low Level Kafka design document. Hopefully this helps.. @kishoreg we did this piece of code at the time we implemented LLC. Since we had issues with zk watches (too many of them caused re-connect problems, etc.), the goal in LLC was ZERO zk watches. Along those lines, the segment completion protocol (which is what runs over this particular channel from server to the lead controller) uses this piece of code to locate the lead controller. The segment completion protocol has been designed to to be resilient to controller leadership changes, and a contoller responds with NOT_LEADER message if the server ever gets to the wrong leader. Since contrloller leadership changes are rare, the server just invalidates any cached controller co-ordinates if it gets a NOT_LEADER response.. @sunithabeeram  no, it is not cached in other parts of the code.. What happens if the controller that is doing the idealstate update in a no-downtime mode gets restarted?. I thought helix takes care of assuring no downtime, so I am not sure why we had to do this\n-Subbu\n\nFrom: Kishore Gopalakrishna notifications@github.com\nSent: Saturday, September 22, 2018 11:50 AM\nTo: linkedin/pinot\nCc: Subbu Subramaniam; Mention\nSubject: Re: [linkedin/pinot] [PINOT-7088]Provide a way to no downtime table rebalancing (#3210)\nThe rebalance strategy in Helix is idempotent. We dont have to worry about\nthe edge cases as long as we compare and set api when we change the ideal\nstate\nOn Sat, Sep 22, 2018 at 7:57 AM Sunitha Beeram notifications@github.com\nwrote:\n\n@mcvsubbu https://github.com/mcvsubbu thats a good point. I hadn't\nexplicitly considered that, but the other thing that I was thinking about\nand the restart point may have same solution: what happens if another\nattempt to rebalance is kicked off either on the same controller or a\ndifferent one? If the final ideal state mapping is different between the\nattempts, are convergence and correctness guaranteed?\nI guess this will involve some sort of state maintenance to ensure things\ndon't step on each other/have silent failures. We could have the leader\nhandle rebalances and maintain local state (but won't have restart\nguarantees) or we have zk state and either a leader or other nodes handle\nrebalancing with heartbeats.\nIts possible that a first cut of this approach still doesn't handle these\ncases and we build this in later. Currently, the operational overhead of\nensuring no downtime rebalances (specifically where host count within a\nreplica group changes) is immense (often requiring another table to be\nsetup), so a solution that can alleviate the \"happy\" path issues may still\ntake us a long way.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/3210#issuecomment-423749767, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AAz7Z2mw0gt8MeSOe-f0b713WluL8nnYks5udk--gaJpZM4W0rj-\n.\n\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHubhttps://github.com/linkedin/pinot/pull/3210#issuecomment-423765201, or mute the threadhttps://github.com/notifications/unsubscribe-auth/ACLGfXdQGN5-gvyYoFj6wCRRqvYFMVrWks5udoZbgaJpZM4W0rj-.\n. > We should have a single top level periodic task scheduler, then plug in multiple periodic tasks. This way, we can easily manage the order of all tasks, and avoid any race condition between tasks (e.g. retention manager and validation manager battling with each other). Also, we can fetch tables only once in the top level task scheduler and pass them to each individual tasks (when we implement the controller resource).\nI am not sure I agree that we should isolate the tasks. We don't do that now. The tasks need to be aware that other tasks may run, and should protect themselves appropriately.. As discussed let us hold off on this change, and do the other change of removing StreamProviderConfig.. I suppose the question is whether data can be pushed to Pinot via HTTP? If so, the answer is yes. \nPinot supports a segment POST via HTTP. The curl usage of the segment upload would be:\ncurl -X POST -F segmentName=@segmentFile controllerHost:controllerPort/segments\nHope this answers your question\n. Interesting, we hit it yesterday as well.\nThe long term fix for this is to have a dictionary that does not pad byes, but in the short term we should limit the number of characters in the string dictionary value and truncate it. The value can be configurable in stream config (not sure if we should make it configurable on a per column basis) but the default can be .... say 1024 chars? Or even 512 chars?. In our case it was not production table, so we got the table running by updating the zk segment metadata to set the start offset to the last consumed offset for the segment (essentially skipping that particular segment) and restarting the servers.. The server that crashed should have logged about the segment that it is constructing, so you should know which table, right? Is it HLC or LLC?\nAlso, maybe schema is a good place to put this instead of table config. Then we can set the max on a per field basis (as an override from default).. If we allow users to set the limit in the schema, (bit have the default at, say 512 chars) we should be ok, right? Yes. existing users who exceed 512 chars (and use the string in the query) may see a problem. They will need to update their schema to a value that they can live with. Of course, the higher this value, the lower the cardinality needs to be so that the dictionary does not explode. This is until we have variable length dictionary implemented.\n@fx19880617  would you be able to code this up? thanks. @kishoreg  we don't support no-dictionary columns for string type (yet) in realtime consuming segments. Confirmed that if a String column is marked as no-dictionary, we will still create a mutable dictionary while consuming the segment. When the segment is being completed, however, it will keep the column to be no-dictionary, and will use the raw index creator. That is the path in which the exception is thrown.. This is an int overflow issue in BaseChunkSingleValueWriter. We expect that the chunkSize will fit into an int. We could get data such that it may not fit in an int. I believe that is what happened here. \nI see that you already tried reducing the number of rows. \nIs this general characteristic of the table, or are there a few long entries that is causing the issue?. @fx19880617 some of the log messages before the segment build may give us hints about the column that is erroring, and its cardinality (since we had a dictionary before), maxlen, etc. \nDid this issue happen all of a sudden, or is this a new table? Also, since you are storing an HLL value in there, all the column values must be of equal length, right?\nAlso, with the string.getBytes(UTF-8) that we do, I would assume (in the worst case) that you have 4 times the number of bytes as the length of the string. Given the size of data of 11k and max 10k rows, this still does not go anywhere near the limits set by an integer.\nBest is to debug with the actual data.. I ran the VarByteChunkSingleValueReaderWriteTest with NUM_ENTRIES as well as  MAX_STRING_LENGTH set to 25k. It takes 5 mins but the test runs successfully.. > Anyway, we can add an integration test case for the quickstart?\nI tried adding one, but it needs a lot of surgery. The way this class is stopped is to kill the pid!!. @fx19880617 the decoder is an configurable class, and trimming it there will need that every decoder implement the trimming. I think trimming it outside the decoder is better.. I would suggest creating a semaphore in the tabledatamanager factory. Alternatively, create it in HelixServerStarter, and set it in the table data manager factory. You may have to add a method in InstanceDataManager interface. Good find!\nWe could even use thread-local DecimalFormat object (if it comes to GC-ing). I assume you are referring to segment loadMode configuration. \"HEAP\" is an unfortunate wrong description, but it refers to directly allocated memory (so, it is off-heap). All the bytes of a segment are copied into bufers allocated via ByteBuffer.allocateDirect(). \nMMAP mode means the segment file is mapped into memory.\nSee the class PinotByteBuffer. @ly923976094  that depends on your hardware profile, OS, qps load, latency tolerance, and amount of data. It is a very hard question to answer, but we plan to have some write-ups on tuning Pinot. It should be available with our documentation in the next few weeks.. Our documentation is still in progress. We expect to finish it by the time we make the first apache release (which should be real soon, once we verify the current candidate in production). Meanwhile, a few comments:\n1. You seem to be running out of direct memory while loading a completed segment. Changing HEAP to MMAP will help there (assuming you Operating system over-commits mmap memory). Your time column unit is in MILLISECONDS. This can cause dictionary to explode unless you are rounding off the time values. Please check if you are doing so.  So, if your millisecond value is 1551113826143 then round it off to (for example) the nearest 5 minute value 1551113710000. You will need to do this before you send your Kafka events, if you have control over it. We are thinking of providing an automatic switch in pinot to do this (i.e. round off milliseonds to nearest 5 mins or 15 mins or hour, whatever)\n2. You may want to try using auto-segment siizing. See https://cwiki.apache.org/confluence/display/PINOT/Consuming+and+Indexing+rows+in+Realtime\n. The time unit is not the cause of memory overflow. It allows you to utilize memory more efficiently while getting good query performance.\nWe will be providing documentation with the next apache release on mmap vs heap, etc. Basic difference (as I have said so before) is that MMAP maps the segment file onto memory. So, it the pages are not resident, it will paged in the operating system. HEAP reads in the segment via Direct memory allocation.  So, we are never dependent on IO during query serving. The performance of these is dependent on your use case, hardware and operating system settings. . To add to what @jackjlli  mentioned, think of REFRESH use case as one in which  data is refreshed by re-loading the entire data (i.e. all segments are replaced). In contrast. APPEND use cases add a segment (or a few) each day (or hour) with new data while old data is retained out.\nHOURLY, DAILY, etc. are values of segment PushFrequency. It is used in the ValidationManager to detect gaps in existing segments and raise alerts. It is also used to name the segments correctly while generating Pinot segments.\nHope this helps.. I assume that the idea behind backing up is to re-apply the table configs in case something goes wrong. The table configs downloaded via API cannot be used for re-creating the same table, so you may want to consider splitting them into OFFLINE and REALTIME parts from the json object returned from the controller. \nOtherwise, lgtm. Nice, thanks. Can you please provide the complete exception stack on the server, error message with exception stack (if any) on the controller, and the git hash of the version of pinot you are using?\nAlso, have you added the instance config  in zk for the new instance added? Unfortunately, this is a manual zk edit. IIRC you need to add a new instance config for each realtime instance you configure, and wait for it to catch up on the topic before turning it on for queries to that server.\nWe encourage moving to LLC (if possible) -- administration is a lot easier. . @icefury71 you had mentioned that you have a preliminary design on this feature. Can we start a discussion?. Hi, I don't seem to be able to assign it to @chenboat  for some reason. Not sure why, so I assigned it to you for now.. @chenboat  I still don't seem to be able to assign it to you. If possible, please assign it to yourself.. Here is a step one proposal to remove the storage dependency in the checksum path\nhttps://cwiki.apache.org/confluence/display/PINOT/Segment+Completion+Protocol+enhancements+for+Deep+Store+support\n@chenboat  is working on coding this up. @icefury71 thanks for clarification. It will be great if you can write up a design doc and post it in our cwiki, so we have something to throw darts on.\n@chenboat please add the design doc to appropriate Issue and submit a PR so that we can review it, thanks. @chenboat please create a user account for yourself and let me know the ID. I can add in that case. The confluence space in apache does not recommend opening up the pages to anonymous users. @chenboat, @icefury71 it is also easier to communicate on apache pinot slack channel for urgent issues. Please create an account for yourselves there as well. https://apache-pinot.slack.com. Addresses issue #3594 . Occurred to me that if we start ValidationManager soon after a leadership gain, we don't need to do this PR?. > Looks like @npawar also attempted to fix this in #3591 :)\n\n\nOccurred to me that if we start ValidationManager soon after a leadership gain, we don't need to do this PR?\n\nI guess if the previous leader is not \"dead\" it could continue running validation-mgr - unless there is a periodic isLeader() check that lets the old controller give up.\n\nYes, @npawar and I talked about it. We need to make sure that we check the leadership before every new table we process. If we are not leader, stop the validationmanager right away.  . Eventually, we do plan to distribute the load across controllers. Right now, each periodic task relies on running on  the controler  when it becomes leader (and stopping when it loses leadership). . PR #3614 fixes this for now. The class can be extended as needed for more statistics. The idea is for a segment to move from its regular path ($dataDir/$tabbleName/$segmentTarFile) to the Deleted_Segements folder ($dataDir/Deleted_Segments/$tableName/$segmentTarFile), remain in this place for some days (default 7d), and then get removed.\nWith a local file system, we copied the file over (while deleting the original), and then checked for Mod time to delete the file 7d later.\nWhat other time do you suggest?. sorry, not access time, it should be mod time.. The validation manager run frequency is configurable. @kishoreg we discussed that as well, but right now, the validation on offline tables is defaulted to a much lower frequency than realtime consumptin validation (but both are still in validation manager).\nYes, it does make sense to split the two managers and run one of them more frequenty. Perhaps we can do that when we distribute the controller load.. Please note that this change will break the build. We are following this method so that we can retain the history of the files.. Pls go ahead and merge it so that we have minimal time that build is broken. thanks. Throwing timeout exception is fine, but the client may have set up a different timeout policy in the broker. Ideally, we should send the timeout in each query and allow the servers the full time as indicated in the query, on a per-query basis. . Not sure what the reason is that you want to stop consumption. If this is a new table and you set it up wrong, you can drop the table and recreate it after correcting parameters (topic name, server settings, or any other that you are trying to correct).\nif this table has been in production for a long time and you want to stop consumption, then you can disable the table in helix. it will stop after the next consuming segment has completed.\nIf you can describe your problem some more, there may be other things we can do. Are you using LLC or HLC?. I realized that one (hacky) way to stop consumption and still answer queries is to set the kafka broker address in the table config to an invalid one, and restart the servers. The segments completed so far will be available for queries (until their expiration time).\nAnother hacky way is to set \npinot.server.segment.uploader.https.enabled to true\npinot.server.segment.uploader.https.controller.port to some invalid port\nthis will consume upto the next segment completion point, and try to commit the segment and fail. In that case, the last consumed (but not completed) segment will also be available for query.\nI am still not clear why you would want to stop consumption and yet query the table. If you can provide a use case for that, maybe we can address that asa feature.\n@ly923976094 . If the upstream is putting bad data and we are not able to create segments, we will (effectively) stop consuming. Why is pushing large volume a problem? We automatically adjust to the volume and make a segment sooner. \nThe only thing I can think of is if in some production instance, capacity enhancement is needed but machines are not available immediately. In that case, the best option is to drop the (realtime) table, and re-create it. This works if offline flows are enabled in the corresponding offline table.\nIf the feature is to skip certain (identified) offsets, or otherwise auto-detect bad data, that may be useful, I suppose. The only way to get out of a bad row ingested is to skip a segment altogether, something done manually.. Let us make sure we have a clearly defined requirement with a use case, and put it in the backlog. @ly923976094  can u please describe your use case?. @ly923976094  I assume you don't have any redundancy on your servers and therefore you cannot restart it. Note that in this case you may not be able to update to newer software since that will involve a restart.\n@kishoreg I assume that if data pushed to Kafka has bad values, then we eventually want to fix and restart consumption. In this use case, I think having a feature to ignore  segments (until some offset or time value, perhaps) is valuable. As soon as we detect there is bad data, we can set Pinot to ignore segments until some criteria (if offsets, it will need to be a vector of offsets for partitions). Such a feature can also work for cases where data is invalid (in that we are not able to make a segment, for example).\nI am just trying to get a use case so as to define the feature we want as best as we  can.\nAssuming we provide a pause/restart feature, the following questions pop up:\n Do we want to pause on a per-partition basis? I assume yes.\n Do we care that we may lose data (due to Kafka retention) and restart from wherever earliest we can?\n* When we pause, do we want to discard the current consuming segment, or keep until consumed (perhaps the latter is beneficial for the use case that @ly923976094  has described, but maybe the former for the use case that you describe).\nThe feature sounds great, I am just trying to determine a use case for it and define it so that it satisfies (at least) that particular use case.. At the minimum, use the HitCounter class (reconfigured to suit the time interval you need) to measure the peak qps.\nAt best, we should be able to re-use the QueryQuota processing classes. \nCurrently, the query quota management classes seem to have 2 entries per table -- one for realtime and one for offine. Effectively, the min of the two query quotas is applied for the table. Instead, we can set the rate limiter config to be the min of the two tables (if they are both configured). It makes config update logic a little more complex, but the mainline processing much simpler, where the map is maintained on a per-table with rawtable name as the key. i am not sure what made us choose the 2-table config management in the initial implementation, so let us dig into that and see if that can be re-used in its entirety by using a single  rate limiter per table.. Instead of 10s wait for the setup, can we wait until the first run is completed? It may (and hopefully it will) complete in less than 10s?. Thanks, @npawar for evaluating this. Here are things I will add:\nstep 2 should be made configurable on the server side (i.e. only if a config is enabled, we should upload metadata)\nstep 1a should be to modify LLCSegmentCompletionHandlers.commit to include checking whether two more parts are included, and if so, use them as metadataPropertiesFile and creationMetaFile)\nIn Step 2 we need to handle both segmentCommit as well as segmentCommitEndWithMetadata under the same config mentioned before\nIn step 3 call method depending on config. In that case, please discard this PR. \nYou can send multiple PRs for the implementation, so that it is easier to review.\nWe believe it should be straight-forward, but please reach out on the apache slack channel if you need any help.. Did u test swagger? Our tests do not cover access via swagger. @Jackie-Jiang could you also please check with @npawar ? I think we had similar questions (should there be a stop/start, etc.) in her PR and had made some choices because of the way things were at the time. Thanks.. you can use helix-admin commands to add the additional tags as needed. Download helix from  https://helix.apache.org/ . @shaunschembri thank you. I think we should insist that the interfaces work only if full paths are specified in both src and dest. We can change the usage to be that way, and the implementations will get simpler across file systems.\nSo, for example it is illegal to move(src, dst)  unless the last part of src and dst match. Same with copy.\n@sunithabeeram  what if we approach it this way? We can still support all combinations of moving from file to dir, dir to dir, etc. just restricting the usage.\n. If you can please add a TODO to move the tmp file logic into one file (perhaps SegmentCompletionUtils) that will be nice.. +1 to moving to later versions of Kafka consumers.. Thanks for reverting the default. If you can please make sure travis passes, we are good.. You are running out of direct memory. You have a few options:\n1. Increase max direct memory for your JVM to suit your needs\n2. Change the load mode to MMAP\n3. Add more servers so that you don't run out of memory. Also, can you modify the existing SegmentCommitEnd to take on an optional 2-part form? https://github.com/apache/incubator-pinot/pull/3748#issuecomment-461229243. @Jackie-Jiang  can you please run a manual test to ensure that the cluster change processor runs after an hour without any problems? thanks. Assigning it to Jack since he is working in this area now.. Assigning it to Jack since he is working in that area now.. > Are we not using compare and set. Why do we need time based checks\n\n\u2026\nOn Thu, Feb 28, 2019 at 8:20 AM Subbu Subramaniam @.> wrote: @.* commented on this pull request. Dont we also need to check time of idealstate update (step 3) ? The entire segment metadata commit should happen within a time t < MAX_SEGMENT_COMPLEZTION_TIME_MILLIS, so it is good to check before idealstate update whether that time is already past. \u2014 You are receiving this because you are subscribed to this thread. Reply to this email directly, view it on GitHub <#3893 (review)>, or mute the thread https://github.com/notifications/unsubscribe-auth/AAz7Z5CiEpIB5H6gmH-UosniFMuC9Xlmks5vSAHRgaJpZM4bVu5M .\n\n@kishoreg we had discussed this sometime back, I think. The segment completion takes 3 steps (as documented in the code). There is also a ReatimeSegmentValidationManager that auto-creates non-consuming segments, if any (detected by the absence of step 2 or step 3 for the latest segment), and recognizes any new kafka partitions and starts consuming segments for them. It is possible that the RealtimeSegmentValidationManager recognizes an in-process segment commit as an incomplete one, and starts an attempt to fix it. It is also possible (in theory) that a segment completion takes so long that the ReatimeSegmentValidationManager has already fixed the segment before step 2 or 3. It is this case that we are protecting in the time check.\nAlso yes, it is possible that after the time check we go into a deep sleep state (thanks, GC) and wake up to update the ideal state. We are just reducing the chances here.\nWe will add this as a section to the realtime design doc.. Have you looked at what the servers log for the segment? . @Jackie-Jiang if you can please have travis clear it\notherwise lgtm. No, Pinot does not have such a feature. Note that Pinot data is immutable except on a per-segment basis. Older segments are deleted by time if you set a retention period, as long as the  most recent row in the segment is still older than the retention time.. Please keep the branch since it is being used for debugging. All segments of a table are divided among the tenant instances that host the table. If a server has a segment to serve, it will be loaded into memory.  You can use rest commands on the controller to see the idealstate of a table, and that will indicate to you the servers that host each segment. \nIt is up to you how you want to reduce cost.\nYou can load the segments in \"HEAP\" mode, you just need to make sure that the maxDirectMemory argument to the jvm is sufficiently large so that the segments are loaded without OOM errors.\nYou can load the segments in MMAP mode, in which case the segments are paged in from disk and Pinot lets the Operating System handle paging of segments in and out.. If we stop indexing (due to a shutdown), then we need to decrement the count by one, right?\n. decrement segment count here?\n. Not here, I would do it after we finish creating the index segment (but before we call notifySegmentCommitted)\n. In incoming time granularity is days, we will get a saw-tooth graph, am I right?\nAlternative would be to compare according to the time granularity, so that we get a flat straight line. Of course, we need to add some fuzziness to account for the events that come in next day, and allow them to come in for some time.\n. Can you please add INFO logs in the positive case? Will be nice to see each config considered, and whether we created a segment fetcher or not. Since these logs only appear in the beginning, the more the better, thanks.\n. Reading keySet() API, says that iterating over the set entries can result in undefined behavior if the hash underneath is changed.\nWe modify the _segmentsMap under a read-write lock, so that we can atomically add/remove segments while keeping ref cnt.\nIf this is only used for debug, perhaps it is best to get a readlock, create a new set with the entries, and release the original map? Most of the time we are getting readlock (for queries), so it should be ok to get a readlock once in a while for debug commands.\nSegment add/remove takes write lock\n. tableName here should have the REALTIME or OFFLINE prefix. I suppose that is how you expect it?\n. I would use the acquireSegment(List) call instead. Or, introduce a call to acquire all segments in the tabledata manager, that we can use here. that will make sure that the segments are always returned under readlock, with appropriate refcnt updated.\n. Please also add new calls into tabledata manager in the OfflineTableDataManagerTest.  I suggest adding a thread that gets acquires the segments for debug purposes, and does so less often than segment replacements.\n. There is a test called OfflineTableDataManagerTest that simulates segment acquires and releases for add/drop and queries, essentially testing the locking to make sure that we don't \"leak\" a segment. I am suggesting that you add this new case in that test.\n. Is it possible to know the response corresponding to a URL? Do we care for our use case?\n. Can you make these strings and timeout values final String/int? will be useful in case we need to fix the test due to timing.\n. You mean the timeout value should be less than 5s?\n. When we get a segment refresh message from the controller, we do not want to retry multiple times. That will hold up other segment refresh messages. See comment in SegmentMessageHandlerFactory\n. The segment refresh message IS asynchronous. If we handle multiple refresh messages at the same time, we can run out of memory on the servers, since a refreshed segment is not unloaded until all the queries are completed for that segment.\nFurther, the entire helix pipeline is not blocked on a refresh. Only other segment refreshes are blocked. The rest of the helix transition, etc. will happen as usual.\nIdeally, we need to differentiate between a download failure vs load failure (exception on load). The former is intermittent, and the latter is probably permanent, and there is no reason to retry.\nIn that sense, adding a retry for HttpFetcher (for the server part) seems fine. We need to change the logic that calls this class and handle  things appropriately.\n. please add annovtation  jsonignore extra fields so that we can upgrade controller and server indepdently\n. ditto\n. Can you use either id or the HELIX_HOST field for this?\n. please name the threads so that we can detect in case the number of threads goes large.\n. 'required'\n. safe to ignore unknonw fields in json conversion\n. class needed?\n. Actually, I am assuming in my code that there is an object from which can encode/decode segment names. If you can create a class that will be really useful for merging (and better as well for the long run).\ne.g.\nSegmentNameHolder(string name)\nHighLevelSegmentNameHolder(components...)\nLowLevelSegmentNameHolder(components...)\nisHighLevel()\ngetterForComponent()\nI think you get the idea.\nIf there are limited places where this is called, then please go ahead and change them, otherwise please create a ticket. \nDoes this seem OK?\n. Also, do we want to have REALTIME in the segment name? Can we do without it? Or, do you see a problem if we remove it?\n. Remove this line\n. I would change this to contain a single \"__\"\n. Thanks for doing this, makes it much more readable\nA comment somewhere in the file that describes the Long HighLevel, ShortHighLevel and LowLevel nameing scheme will be wonderful, and make things even easier to understand.\n. Can you please change segment name  to exclude \"REALTIME\" so that it serves as an example for the same naming scheme that we plan to use for the low-level consumer segments? \n. Agreed. Any suggestions? I was hoping not to make it too long.\n. These constants should really be pulled from the state model defintion, but we can leave that for another PR\n. where is this initialized?\n. Also, it helped on the controller side to add a segment holder class that implements Comparable, and sorts segment names by kafka partition and then by offset (we can change offset to time in the final implementation). Perhaps that will be useful here ? (check the validation branch). If so, please introduce a class that holds the lowlevel segment name and extracts components out of it.\n. Isn't it better (and probably more intuitive) to have a LowLevelSegmentNameHolder class?\n. Re-thinking, we should not be changing state models that often (actually, never :-), so if we ever do again (which should not be anytime in the near future), we should be fine re-using this config to do the exact same thing -- update state model in place. Also, upgrade_to_llc_state_model, may not cover an upgrade to a llc state model that includes (say) a PAUSED state. \nIn summary,let us stick with the existing config.\nthanks\n. See SegmentNameBuilderTest.LLCHolderTest().\nDoes that suffice, or did you have more tests in mind?\n. Will do.\n. No, the logic of associating the number of parts with a V1 style name belongs in the HLC class. If you notice, the only caller for this method is the parent class, which uses it to determine the segment name type.\n. I added comments and re-pushed\n. pls  change the name of the variable from helixPartition to 'segmentName', makes it easier to understand, thkx\n. Can we change the logic to make it explicit check for CONSUMING state? If they are in ERROR or OFFLINE you don't want it anyways, right?\n. Also, the last segment will always be all in CONSUMING state, but the second-last is the one that may also have consuming state. So, dont you need to check the second-last one?\n. will be really nice if you add a comment near each Map/Set declaration as to what the keys and values are (since everything is a String, it gets a bit confusing).\n. s/at most one partition/at most one segment/\n. should be outside the parenthesis?\n. ah no, my bad\n. wont you get an NPE here initially? since instanceToSegmentSetMap.get(replica) is null to start with?\n. Please change it to use the new API. \nOtherwise, lgtm\n. Since this is an enum, I cannot make it take a random string. In the code, I use Segment.fromStringOrDefault() method. Would u be fine if I just add a test for this method?\n. If you see a few lines below, I call the method SegmentVersion.fromStringOrDefault() method, which takes care to handle null or unknown segment version, and returns a (typed) segmentVersion\n. Currently the property is not there, so it is loading correctly for Realtime segments\n. This logic is already in HLCSegmentName.  Constructing an HLCSegmentName (and catching an exception should be sufficient to decide whether it is HLC segment name or not, right? Let us not duplicate the parsing logic in multiple places.\n. DEFAULT_METRIC_NULL_VALUE_OF_SHORT?\n. Maybe better to generate a tmp dir name rather than use the \"tmp\" dir under the index directory\n. I saw some PR go past and a discussion that boolean.getDefaultNullValue() can throw exceptions. Are we ok with that here?\n. Can u give me a specific stack trace? I did fix the null pointer exception when block[index] is null. Happens when one of the threads time out (or throw an exception). Did you mean that? If so, I can just add a comment there.\n. The word partition is overloaded in this comment and a bit confusing. I suggest:\n\"Ensure that for each kafka partition, we have at most one helix partition in consuming state\"\nAlternatively, you can use 'segment' insetad of 'helix partition' as suggested in an earlier comment\n. Do you also want to check for some reasonable min size here? what would happen if quota size were to be set to 1 byte (extreme case, but just checking)\n. should the type for paddingCharacter  be 'char' or 'byte' ?\n. I think you should also add tests for getting a value from the dictionary from the old segment metadata\n. there is a setting you can have to delete file on exit. Please add that, so that even if the test throws exceptions, the file is deleted. thanks\n. deleteOnExit()\n. Please add a README file in the data directory that mentions what these files are (preferably the githash with which these files were generated, etc). Regenerating these files once the code is chcked in will produce different results (am I right?) so it will be useful to have a doc with the files.\n. should be legacy character as yet? We can change this to be '\\0'' after all the servers are deployed?\n. Ah, no. You should initialize that to null. It is being fixed in the lines below anyway\n. this should be set to LEGACY padding character until the server code is pushed, so that in case a segment is generated it will always be the same as the old ones (except it will have the extra metadata), and the old servers will be able to read them.\nOf course, you should test that the old servers can still read the column metadata that has this extra property.\n. I thought blocks[index] can be null if one of the threads generate an exception?\n. Please log an INFO here, with the quota, current size, expected increased size due to this segment, and of course table name. \n. Looks like you have this info in quota checker response, so maybe just log that as in INFO?\nBasically, log all info that we need to explain why quota exceeded.thanks\n. deleteOnExit()?\n. Can you also add in the exception log if compression was enabled for this record? It will be useful if we see exceptions.\n. Other than that, LGTM\n. The idea was to add it to the log message if we had an exception. The log message should include whether we tried compression or not.\n. It refers to one of MSG_TYPE_CONSUMED or MSG_TYPE_COMMIT\nI will change it to msgType (or pathComponent)\n. Makes sense. Changed it to SegmentCompletionProtocol, and changed the other class names as well.\n. Done\n. Done\n. Yes, I added a comment.\n. Fixed\n. Makes sense. I will add these comments.\n. It seems complex, perhaps due to lack of comments. \nI am adding the comments as we speak.\nThat aside, I did have the code that you mention outside the state machine at one point, but then it made sense to just run it through the FSM even in that case just because of the number of checks needed outside the FSM for this case.\nThe FSM does not stay for long time in memory. You can see the unit tests that confirm that the FSM gets out of memory.\nLet me add some more comments, and let us see how it looks like.\n. what does this do?\n. Should we just call it SimpleConsumer? We do have the package name to protect, right?\n. should these be synchronized on SImpleConsumerWrapper? A single wrapper can be only in one state, right?\n. i am tempted to split the metadata only consumer as a separate class with 2 states\n. do we want to assert here ?\n. Is this not used?\nAlso, please add a unit test while you are touching this class.\n. ok, i will change the test cases\n. I have removed the 2 other calls to create percentbased routing.\n. will do\n. nope. removed.\n. Reflection is used only for testing, so that we can get more code coverage. Adding a getter just for this purpose seems useless. If we need to re-factor the class, then we need to change the unit tests as well -- whether we do it via getter or reflection\n. agreed.I will add this as a TODO. Hopefully we only need to touch this class (or split it) in order to achieve what you are mentioning. Now that we have the other unused stuff out of the way, that will be easier. We also have tests to make sure we have not broken something.\n. Yes, there can be other responses, and they are being handled correctly (i.e. just return it to the caller).\nI could move up the return comparing against not-equals-continue, but i wanted the same log, so decided to code it up like it is. Let me know if I can make this more obvious.\n. why hard-code? dont we have it in table config?\n. please declare the 1000 and maxvalue as final with some var names and use them, so it is clear what they stand for.\n. replace with a log\n. ditto\n. not sure where notFull is reset\n. update the comments here to reflect our discussion. You cannot always download and replace the segment. The code in validation branch does it right.\n. check segment name here, and retain the unexpected transition for high-level consumer segments\n. acquireSegment takes a read-lock on the segment. we don't want to hold a readlock for a long time (go online from consuming can take a while). Also, if at the end of it, we want to replace the segment, we need to take the write lock, so this won't work.\n. this TODO is a question for reviewers. This aspect has not been considered in the desgin. We can leave the TODO as it is, and remove it at some point, or implement quota in some way for reatime segments. It is not clear what the action should be if the quota is exhausted.\n. This is a TODO because I realized that we are not setting the download URI for the new realtime data segments. I will add a ticket.\n. This is a TODO that may or may not be needed. For now, what we have will work. If there are ideas that reviewers can provide, we can implement those -- either now or later.\n. We will handle the quotas as we do with realtime now. Quotas not enforced when the segments get created. Instead, they are counted towards the quota and enforced when an offline segment is posted.\n. just make it a TODO please so that we can find/remove  or do whatever\n. not lock, but refcnt.\nand it makes sense perhaps to hold the refcnt. Like you mention, we don't need to handle a destroy in the midst of consuming to online \n. pls document the changes you propose fo appropriate interfaces between instance, table, segment data managers and the helix state model.\n. I will look into it and remove any annotations to make it disappear from swagger\n. jfim: rename it as forceRefresh\n. Since these methods don't have a tag, swagger excludes these\n. I copy-pasted the existing code, moving it from one class to another.\n. Can you please verify that we don't hit the zk again to get the same metadata for this call once more? thanks\n. Can u please add a TODO there? thanks\n. We shouldn't need this, right? The server does not load the inverted index if a column is sorted, afaik\n. Can you hold off merging to this file? This is still under development. I will add in your changes once they are finalized.\n. Good catch. Wonderful if you can add a unit test for this. Thanks, much appreciated.\n. Ah, you need to change the constructor signature.\nThat is ok, i will make the same changes and mark it merged.\n. Warning before re-naming methods. Check the hadoop library.\n. got it, thanks\n. Added number of rows in the logs when we stop due to time limit.\n@antumbde  we log into segmentlogger that has the segment name (which has table name as well). \n. I added a TODO there to handle this condition and do what is needed, while we are catching up. In general, it is ok to index a smaller number of rows than what the outer layer thinks, but yes, 0 rows is a problem. We will address this in a separate TODO\n. We cannot download yet, because we don't know whether the segment is committed or not. The best we can do is hold() and go back to the controller who will hopefully get smarter and not ask us to go back in kafka offset. I will be glad to discuss this with you in person if needed.\n. Good catch. \nI wanted to get exceptions from each step, so i didnt add a finally. \n. the return false was a left-over. I have now fixed it to return true. Your assumption is correct on return values.\n. th only reason this thread should be interrupted is when shutting down? (or, will thre be spurious interrupts)?\nLet us discuss this some more\n. well, i need the time left over for doing the state transition. Unfortunnately, thread,join() does not indicate whether a timeout happened or the join succeeded. It has a void signature, so the only way we know (or can guess) whether the stop worked is by looking at the clock.\nUnless you can point me to a better way ...\n. this is an instance-specific method, and there is one instance of this object created for each consuming segment.\n. Added a finally here, but this idea can be used in the other buildSegment(). Will add a TODO\n. will get there when we add unit tests. things will move around, and change signatures at that time. Coming soon once I merge this\n. can we just pass kafkaMetadata as the additional arg here? \n. can we pass kafka metadata here as arg?\n. maybe simpleconsumerwrapper should take kafkametadata as arg, and not let others worry about extgracting stuff from it. that way, if we have any changes we can modify in metadata and in simpleconsumer without plumbing all code. what do you think?\n. why not leave it at zero?\n. we should add a timeout here as an argument to fetchPartitionOffset. \n. info. Also, use segmentLogger\n. please add a timeout argument. If needed, add a TODO here to add code to honor timeout (liek we have in other cases) \n. Looking at the dependencies of KafkaStreamMetadata, I agree with what you have. Go for it. At some point, we can think of having a KafkaConfig class for SimpleConsumerWrapper, and use it, but that can come much later (and if we feel the need for it). For now, what you have is sufficient.\n. ok, agreed.\n. Done\n. Changed to use ZKMetadataProvider all through the file, and removed the getSegmentsPath() method added specifically to get the segments path. We need to do the same in PinotRealtimeSegmentManager as well, at some point.\n. you could even use Assert instead of Preconditions.check() ? anyone using these mock objects should conform to what it implements ...\n. The method was being used in one place, called with 'false'. I removed it in favor of the other method that is always defaulting to false. We should not be setting a watch on all of propertystore anytime, so we should not even need that method.\n. the var names in this method are a little confusing (queryRequest vs instanceRequest). Could you fix that? thanks\n. While in memory we want inverted index for the column in which queries are made. We don't keep the data sorted in memory, but sort it before creating the segment.\n. Not sure why we need names for version.\n. Better yet,  log segment name. it has the partition ID and table name (if we have it). Otherwise, topic and partition number\n. same\n. actually, you can use segmentlogger here.\n. and partition number. Perhaps it is best to instantiate a separate logger like we have done in LLSegmentDataManager that has topic + partition in it?\n. why would dataTableSerDe be null after you deploy this version?\n. pls remove this precondition\n. Is this the same as the method in DataTable? If so, can we have a common one?\n. Add a metric here that we can track to see if there are any types left\n. Add a metric here to see if there are any types left over\n. Can you remove this comment (after verifying it is thread-safe, of course :-)\n. add request ID here?\n. add request ID\n. and broker ID\n. and brokeriD\n. good to add broker id in the log\n. Now is a good time to change \"Trace Info\" to \"Slow query\" or something like that.\n. Agreed, for this particular variable. But I thought it is better in case we want to add the num rows into a log (in cases where we consumed thousands of rows and still could not get to the final offset in the last sprint).\nNo, the last catchup and main thread do not run concurrently. The last catchup stops the main thread, ensures it is stopped, and then attempts to consume for a short period if needed.\n. Done\n. The current format is easier if we are using grep/sed/awk etc., so I will prefer to keep this as is.\n. Good to see a warning if the close failed, right?\n. Done\n. Can you please add the query ID (and query) here? I assume that we will not get the other log what has the latency, etc.\n. +1 to more comments as to why we are doing this, thanks,\n. Please rename to _kafkaBroker, thanks.\n. No, for 2 reasons:\n1. I want to minimize zk watches (as yet, it is 0 for LL segments)\n2. We still have to handle NOT_LEADER and back off and retry because of the race condition.\n. Not info. One line per query logged is what we are looking for, so if the query succeeds, we can log that one line like we do today. If not, we can log exceptions and stuff (possibly more lines).\nAlso, does it log the contents of the ByteBuf or just an object reference (neither may help much)\n. Want one log here similar to what we have now (unless this is there some place else)\nProcessed requestId 393327,reqSegments=4,prunedSegments=2,planTime=0,timeUsed=1,executeTime=0,broker=Broker_broker001.domain.com_7001\n. Is it possible to call the serializeDataTable method here?\n. +1 on adding it with the pinot-admin tool, but I am wondering if it will indeed point out issues with a controller release, but we need some mechanism to qualify a release. \n. This is not the default, it gets overwritten in the create() call.\nI will make changes that will clarify this and put the default in one class.\n. This has to be tested thoroughly. Not sure if there something else in the indexloading config that we wanted to avoid. I don't think there is, but I am not sure.\n. should we move these lines below, like after we have indexed the row?\n. rename to SEGMENT_CREATION_DURATION. Flush includes Hold time.\n. These metrics are also updated when segment is created. Do we want to them updated everytime we call consumeLoop()? (Can be for catching up as well).\nAlso, will there be double-counting? (See logStatisics() method)\n. Done\n. delete quietly? we can avoid some unnecessary  & unexpected exceptions here\n. include segment name in this log\n. why call this getClientId() ?  Why not getBrokerId() ?\n. setStartTimeNs( long startTimeNs)\nmakes it more readable to have the unit in the method, thanks\n. please add units in the method name\n. pls add units in method name and arg name\n. so these get printed in nanos, right?\n. are we changing units from ms to ns here? Not sure\n. one info log per query please\n. Hmm.. the existing one is a debug (in the source tree). Not sure what is going on here.\n. Ah wait. My bad. \nThere are two statements, this one is in the exception path. If so, please leave it as info, thanks,\n. We can remove this TODO and not support adding HLC to an existing table with LLC. The option is to drop and re-create the table with HLC only (or both). Since this is a rare occurrence I thnk we are ok doing drop/add here.\n. Did you intend to say if (! conversionSupported)?\n. can we just compare incoming and outgoing format, and get along as long as they are same?\n. Please add a block of comments with these two enums with examples of what values may be contained in the time field. Also, be sure to mention that the time field is a 'long', no matter what the time format is. \n. Should we not do some validation on the time format here? (should start with SImpleDateFormat, and should have a valid string that is parsable by DateFormat?\n. Can you please add a javadoc and provide examples on what 'timeFormat' String values can be? thanks\n. Assumption of long time field is made in the controller as well, for retention calculation, segment metadata, etc.\n. LGTM\n. we need to pass the routing options here instead of null, right?\n. Why not make it non-null, and pull the routing table option everywhere?\n. Please add a test case here in testCombinedKafkaRouting(), to make sure that foreHlc and foceLlc are obyed. thanks.\n. I thought of thread.yield() but was not sure that I will get this thread to go after two zk operations (which may block the committing thread). So, I came up with 1s. This should be sufficient if there is no GC, but yes, if there is GC, then it will not be.\nInstead of increasing this timeout I suggest we make it an operational check and re-apply the same change in case new LLC segments have come up.\nI am open to other ideas as well (I also thought of 1s sleep followed by thread.yield())\n. Maybe we don't want to consider the catchup time at all? Not sure what we are gaining by it, since we have the segment completion time minus initial consumption end time as well. That metric should give us the time taken to complete a segment\nAlternatively, we should add up times for all the catch up we do, and post it when exiting the FSM\n. Many common methods.\nAlso, for increasing the number of replicas, we just need to call the rebalancer, I believe. Untested, so I did not check that in.\n. Re-factored both classes to inherit from a common base class.\n. Isnt it easier/better to do this with a shell one-liiner?\n. Can you please rename this var to waitForPushTimeMs (if it is milliseconds, which I think it is)? thanks\n. Isnt one hour a bit too much for push time for a segment? That can happen only if servers are down, in which case we want the alert, right? I would set it to 5 minutes, maybe.\nUnless I am missing something\n. will do\n. ok\n. I thought we may not want to read all of zk everytime we run the validation manager. An estimate of the idealstate size should be enough. As it is, we read the table configs and al the segment configs.\nI can add the idealstate metric to the segment checker (the one that verifies idealstate vs.external view to locate the least number of replicas). That class reads al IS and EV anyway. I think I just need to plumb the metrics in. Let me re-do the PR today,\n. the partition will not be in CONSUMING state because we consider only HLC segments in this code path\n. According to the if statements in line 106 and 107, it seems that we route to llc ONLY if the table is a REALTIME table AND it does not have any entries in the HLC part. So, i am not clear on your comment that we bump the llc routing metric even if the table is offline only. Is there something else going on that we are missing?\n. Isn't it easier to just loop around N times in the sendSegmentFile() method? I would go to the extent of removing (or at least deprecating) the sendFile() method, and introducing another public method of sendSchemaFile() or somethign like that.\nWe need retries only for segments and not for schemas.\n. If it is null do you want to throw an exception? creation meta should always be present, otherwise you don't want to load a segment, right?\nSame with not finding metadata.\n. Is it possible to do positive checking here? Set a particular crc abd creation time and make sure that we get it after conversion\n. I suppose this shows up as 'size' in the output? Would it be better to use sizeInBytes (or as appropriate)?\n. Does this work with ipv6?\n. Should this be !containsKey()?\n. Is this only meant to be a quick check? It is possible that the number is the same but the instance config keys are different, right?\n. Worth having a metric on number of rebuilds per table?\n. Am I right in that most of the time this will be 'false', because instanceConfig will change even if a segment is added to a server? If so, is there any way we can avoid notification for those changes? Not sure if there is a helix api for that.\n. worth adding a metric?\n. will be good to add a log message of how many tables we think need update (\"N out of M\")\n. And a log message here with how many tables we ended up updating (N out of M). Maybe good to have metrics also?\n. also good to have an N out of M routing table updates log here\n. we could update the instance config versions of these instances so that we know we have processed them?\n. don't know if using nanos is better for time intervals\n. Can you please get the \".llc\" string from the stream config class? thanks\n. Existing code checks for _localDiskDir being null, so I am keeping that. \n. Yes, we will, as we are doing now (Not deleting anything, while intending to do so :-)\nI will add a thread in the controller (soon) that will delete old files from the deleted dir.\n. In that case, if a new instanceconfig gets added, we are not doing anything about it?\n. Ah ok, thanks for the explanation\n. please add a warning here\n. please add a warning here\n. prefer rename to connectEndTime\n. Fixed. partitionMap renamed to  partitionToServersMap\nList changed to List\nNo, the instances are always populated when the partition assignment is done. If no instances are present, table creation will throw exception (in the partition assignment code). When the table is removed, the entire partition assignment znode is removed as well.. Table creation will fail.. agreed, changed.. Added coments around the algorithm. I added comments now, so let me know if that is any better.. A misconfigured table during table creation is not a problem.\nA table that has been misconfigured later, could end up trying to create a consuming segment every hour, but that is a smaller problem. There will be other alerts that will make sure that we correct the configuration.\nIn any case, I added a try/catch around the kafka/zk code, so that we can skip that partition after adding a warning and move on to other partitions that may warrant attention.\nLastly, I think we should implement the code to auto-create partitions when they stop consuming as well.\nThe servers should retry on timeout exception, and post a message to the controller on the kafkaoffset exception. If all replicas report kafka offset exception, then the controller can auto-create a new segment with a new offset.\nI will add code for this soon.. Should we not call destinationRow.clear() before starting? \nIt is best that we do a clear() here, just in case a different PR to change other interfaces takes longer.\nAt a minimum, please add a javadoc that states the expectation. same question about calling clear() here. same regarding clear(). pls add java doc here. good catch!. Please rethrow the exception here, so that the state machine goes into an ERROR state (for now). We will handle the specific exceptions later.. ditto..  worth it to add a method during initialization to make sure that we are handling all the kafka errors in the enum. We can catch it in testing if they introduce new errors/exceptions that we don't know about.. ok. I would add this in RealtimeSegmentZKMetadata rather than SegmentZKMetadata. We can use MutableInt and do segmentCountForInstance.get(instance).add(1)?. Please rename tableName as rawTableName, thanks.\nAlso, make this method protected, so we can use it in test to return the value we want to return.. I think it is useful to have and because it is in a path that is rarely executed, we will benefit to know that there were retries in updating helix. I will leave it in  there.. You mean add it as comments, right? I can do that. There is already a log message that logs the instance and the reason why it stopped consuming. This is logged when the message is received form the server. All logs for a given segment have the segment name in it. . Agreed, will fix. remove this line. As we discussed, let us introduce a new table config for this item. If the actual flush size is set it should override the new setting (suggestions: \"maxInMemoryRowCountPerServer\" or some such. \"flush threshold size across all segments of one table in one server\". I suggest you add some note on how to set this value (so we don't have to read the code to figure out how it is used). e.g. something like:\n\"Data is stored in heap memory while rows are being consumed from kafka in realtime tables. If your servers are handling multiple tables you need to split the heap memory among the tables. Assuming you have arrived at a value of X GB for the table, and the row size is Y, you can set this value to X/Y for that table.\"\nA note about what should be done if both HLC and LLC are in place would also be helpful here.\nAlso, maybe change \"global\" to \"perServer\" or some such? Not sure. add null check for getPartitionSet. I have seen that being returned as null sometimes.. Remove this log statement. SegmentDeletionManager already logs. \nA useful log here may be how many segments are deleted. \nIn any case, let us not have all the segment names appeneded, since the string can get arbitrarily long. Agreed. Do you want to add or keep track of time taken to process here, or is that done some place else?. please add a metric on the delay to pull an entry from the queue. will do. I have 3 independent log messages, so we will see one for each reason (even if multiple things changed).\nI have a final log message if we decide not to update partition assignment for any reason.\nI will add a log message after the partiion count is updated successfully.. Done. please update the javadoc. Would be useful to add a test case that reverses the order of online states . I suggest to create a jira ticket that has the version number of the server that must be deployed everywhere before we can remove this code.. can u fold this loop with the previous one?. Can you extract a method out of these two and call the method twice?. ditto. I know this was already there in the code before, but can you add some comments on the cases when the same server instance may respond with mulltiple responses? afaik we don't do this. The comment in line 571 somehow implies that this can happen for hybrid tables, so I assume it means it can happen for realtime? Or, is this for locally run integration tests that run both realtime and offline in the same machine? In which case port should be sufficient to differentiate the machiens and you don't need sequence number.. please use one of the declared strings for \"OFFLINE\" and \"REALTIME\". Or, declare new shortened versions as static string (e.g. \"_R\" and \"_O\") and use them. static strings please. maybe better to return an empty map and check for empty map outside, but your call.. agreed. It is better to add the new entry in one place (i.e. the caller of this method). Less confusing, and we can also state that at the top that the method does NOT modify the instance assingment, it is up to the caller to do so.\nSo, maybe we can do:\nif (containsKey()) {\n   segmentCount = size()\n} else {\n  segmentCount = 0\n}. by replica, you mean server, right? . Suggest using the string declared int he statemodel class. suggest rename partition to segmentId\nand maybe rename the set variables as well. I suggest adding helper methods like makeExternalView(nServers, nReplicas, nSegments), and testing this algorithm with various values of these. For now, we can assume that the number of segments are reasonably balanced across servers (our current segment assignment strategy). This way, we can invoke the algorithm with different parametesrs and assess both computation time, and the \"niceness\" of the result.\nYou can add the methods to generate external view in test section, and we can just run the tests to get the results. See test code I added. Done. Done. realtime does not have time boundary service (as of now). If we have something like that we can add code later.. Already does.. Added comments in the class declaration. we don't seem to be returning 404 when a debug endpoint for a non-existent table is requested.. for a routing entry. These were lifted from the older class that is no longer used, but I will add the comments. These are used by thirdeye only, so we need to know what purpose they are being used, and I can add comments accordingly. Or, we should just move it to thirdeye code base, perhaps.. We really want to move the file so that we can preserve the date of the file. I would field the exception and do the copy if move fails with that specific exception.\n. Thanks for pointing out that the copyFile api has the argument to preserve time stamp.. suggest rename TARGET_NUM_SERVERS_PER_QUERY\nAlso, should we pick this to be a percent of the total number of servers? Just a thought.. Please clarify in the comments that this is for offline table only. I would extend the comment to include \"and add all segments served by that instance\" to the instances in routing table. please log an error if instance is null, since that should never happen. It may be useful to check for a time limit here as well. suggest having a separate method to compute metric given a routing table. We can then test the metric method independently.. Can you please set the random seed so that we can replay a test if it fails?. You also need to print the random seed, so that we can set it to the specific value and rerun the tests if it fails :). Should use the random that has been used in the calling object. final. Please print the random seed once in set up of the test, so that we do not need to remember to print the random seed everytime we add some new assert or test to this suite. thanks. i think returning a high value of this metric may be better in this case (and in the case when datadir does not exist). Please add nOffline in the log in line 243 as the total number of segments that were found to have lower number of replicas.. Do you want to make this as deleteOnExit() as well? I know the file is deleted in the finally block, but just in case the process dies..... nice, thanks. Yes, let us discuss on how we can make the core more readable. \nMeanwhile, the loop does not fix any missing (kafka) partitions. It only adds segments to a partition if needed.\nIf the partition is consuming fine, then (no segments need to be created), it is handled between lines 711 and 715.\nIf the partition has no segments at all to begin with, then (we need to create the first segment with earliest offset) that is handled in lines 717 - 725.\nIf  a partition already has segments, and the highest segment in that partition is not consuming, then (we need to create a new segment with appropriate offset) that is handled in lines 729 to 777.. would be nice if you can add a javadoc on what this method does. I think it waits for EV==IS. Does it wait indefinitely? If so, is there a way to get progress? Or, does it matter?. is this table name with the type (cooked) or without (raw)? Maybe nice to have something like:\n    usage = \"Table name (e.g. foo_REALTIME)\". exactly!. If -exec is not specified, then what happens? Is it a dry-run? You may want to add that somewhere so that when we type --help, we get that info.. ah.\nmaybe throw an error if we already have _OFFLINE or _REALTIME ?\nBetter yet, ask the user to specify. I can imaging needing to move LLC segments. Does this API set individual keys from the map, or sets the entire map? If a new segment gets added between the time we read the ideal state first and apply this new ideal state, will that segment go away from ideal state?. the fool proof way is to iterate over the map and set the individual entries (leaving the ones you don't care about).\nEach time apply() is called, you will get the current idealstate, and you can update it to your heart's content. If it is not able to update (because of another change that happened), then apply() will get called with a newer version of idealstate. port 0 is ok? Not sure if this server instance makes it to the idealstate.. Oh, I got confused with the existing ServerInstance class. Looks like you have a new one in this file.. reversed comparison? Not sure. nit: s/till/until. Instead of throwing an exception, do you want to continue and process other segemnts?. This will throw an exception if the idealstate update was not successful despite the retries. In that case, I suppose the program will abort. Just confirming.. take a regex as an argument and match it. Invoke it through pinot-admin so that you get args parsing for free? You need to take zk path and cluster name as argument, I suppose.. The inverted index will not be created immediately, right? We need to \"reload\" the table. Currently, the servers do not pay attention to a changed table config.. 4 options? (generate v1 first and then convert). the call getAllSegmentsForRersource() needs a table type appended correctly to the resource name. So, this call will not work. Should we re-throw exception here, or should we just ignore the quota settings?. If table type is null, then do you want to toggle all segments? Are we  toggling only offline segments in that case?. can re-use realtimeTableName or offlineTableName here.. maybe it is best to introduce a constraint here that tabletype cannot be null if both types are present. This way, we can limit damages of accidentally toggling states of all segments,  when this api is used for 'drop'.. The controller APIs take table name right now (the raw table name) and a table type independently. That said, it is good to add a check that user does not specify mytable_OFFLINE as table name (although, if they do, we will only come back with segment not found -- no harm done :). can u add in the log that this is for realtime nservers? A more descriptive log may also help.. same. pls add that this is for offline target servers.. canu modify this log as well to include the info that this is for realtime routing tables?. and this one to include that it is for offline tables. 'false' would mean this metric is on a per table basis. Is that what you want?. while you are here, maybe you can remove '!' :-). I guess the other log is not turned on yet?. If you don't want this on a per table basis, you should set setValue() here.. Can you please keep it private and add a method? thanks. As discussed, please call the appropriate annotated method to handle the URIs from get(). You can then call a common method below that handles special cases.. If you can move these lines above line 263 and return from there after comparing table-type to null, that will be better. thanks. please verify manually that this works. please annotate parameters here that cannnot be null: as i understand, all arguments except segmentName must be non-null.. StateType.DROP. get TABLE_NAME and TENANT_NAME from super class instead of re-defining. add a comment that  we are leaving this out because it is being done in the super class. same. Remove thread.sleep. Instead, try:\nwhile (it is not too late) {\n   get all segemnts\n   if size == 0 break\n   thread.sleep (200ms)\n}\nif (too late)  test failed. remove sleep and add a loop like above. Save the name of the segment you are deleting, and search to make sure that name is not there. Do not assume that segments will be returned in the same order all the time. remove sleep, add a loop. do not assume the order will be same. Instead, make sure that the name of the segment does not exist in the new output. add a TODO to add the test case back when we convert things to use LLC only. remove sleep and add a loop. remove sleep add a loop, and also remember segment name and look for it in the segment list. limit the total time of wait.. you need to select from tableName__OFFLINE, otherwise things will not work when you remove one realtime segment.\nAlso, derive the table from super class, do not hardcode table name here. I think we should just ignore the active flag here, and get the segments from idealstate no matter what.\nWe need to add this under \"REALTIME\" and \"OFFLINE\" names just like we do in the table API.. Does making this private show up correctly in UI?. You need only table type here. Not tableNameWithType. For an example see PinotTableRestletResource.getTable(). We are looking for something like this:\n{ \"REALTIME\": [\"rtseg1\", \"rtseg2\"], \"OFFLINE\":[\"ofseg1\", \"ofseg2\", \"ofseg3\"]}. Please use TableType.valueOf(tableType) to derive the table type enum. Better yet, pass the enum to this method instead of string, so you can validate it in the calling method.. please remove the word 'raw'. In all external APIs, we only have raw table names.. Do you want to add a message to the Validate method like the one in the next line? Maybe something like \"invalid table name\". please remove the word 'raw'. need to assert that all rows are deleted here, right?. you shoiuld check for nrows being one less than what you had? Or, do you want to rename the method like checkNumRowsReduced()?. You should use TableType enum instead of string. add a note here saying you expect at least 3 realtime segments and N ofline segments. hardcoding ip address? will not work on other machines right?. Yes, this can be an issue when a large table is deleted, refactoring.. done. I was trying to retain the current deletion sequence, but I think I see what you are saying. Let us discuss some  more and change it as needed.. ok. ok. We discussed, and concluded that we will have a race condition no matter what, since we do not use a (zk-based) lock to exclude addition of a segment and its deletion (and fetch, of course). However, this is not likely to happen because our operational guide to replace a segment is to simply push the new segment (and not drop the old one and then push the new one).\nThat said, a corner case does exist if someone chooses to drop old segment and then push the new one by same name. For example, it may happen that the delete is postponed several minutes due to the segment not disappearing form externalview (known to have happened in large clusters), EV gets corrected, and the user believes the segment is gone, and then uploads the new segement.. done. done. Why can't we re-use waitForNumRows here?. Assuming tests start with all segments loaded, we don't need to wait when we get the current realtime rows.. I suggest you remove the body of these methods. we can re-implement them when we set the test to run with llc. Add a comment here that we are testing the delete ALL API here.. do not use alibaba.. why are we looping here?. remove this method.. Correct, we can do that eventually. At this time, a lock should suffice.. makes sense. Do you want this class public?. It is updating the ideal state. We prefer to do that in one zk write operation, so we set up whatever needs to be done beforehand, and update the idealstate (with back-off) in this method.. Not sure why you bring this up, I think we use (and the standard libraries do as well) this pattern all over the place.. Removed.. Changed the private method to be completeCommitingSegmentsInternal() as per our conversation . changed it to updateIdealState() as per discussion and added comments as per discussion. we don't need this variable anymore, right?. Please rename to DefaultSegmentNameGenerator, thanks. remame var from statsCollector to timeColStatsCollector. Also, add javadocs.. final. also rename to timeColumnName. Ideally we should not have SegmentNamBuilder class at all, but I think it is being used in the third-eye code, so we cannot remove it now.. remove. rename this as the interface SegmentNameConfig. change signature to \npublic String getSegmentName(AbstractColumnStatisticsColelctor timeColStatsCollector, SegmentNameConfig segmentNameConfig); \nDo we really want to throw \"Exception\"? If there are specific exceptions, then list them there. Do not throw high level Exception as far as possible. change to \"public class DefaultSegmentNameConfig implements SegmentNameConfig\". do we need this ctor? Minimize number of ctors unless absolutely needed.. do not include segmentName in the constructor. Make it more difficult to use this by having a deprecated setter.. annotate with @deprecated, @discouraged (if there is anything like that). Definitely document that this optioin will be removed soon, and must NOT be used.. not needed. not needed. Needed? Not sure.. change interface name to SegmentNameGenerator. change class name to DefaultSegmentNameGenerator. do not add throws exception in signature. final. also add a test that does not call setSegmentNameConfig() we should be able to use the DefaultSegmentNameConfig in these cases. pls add some javadocs with what these do and how the args are used. pls use static final int and explain what 7 means and why 7 ?. static string for fcfs will be good. pls turn \"algorithm\" into static as well. adda a warning if scheduler name is not recognized. it may be useful to check if a class can be loaded here (a class with name of algoritthm). why do we have this line here?. change to:  _segmentNameConfig = new DefaultSegmentNameConfig(segmentName);\nIf someone is calling setSegmentName, then they need a new config, and they don't want us to pay attention  to the other aspects of naming a segment, right?. change to use new DefaultSegmentNameConfig() with existing timecolname, tablename and postfix. change to replace _segmentNameConfig with a new instance, like mentioned before.. Wouldn't it be better to remove the private members _segmentNamePostfix, _segmentName, _tableName, and _segmentTimeColName from the config altogether? Just move these into the _segmentNameConfig object.\nYou will need to touch (and test) CreateSegmentCommand.java because we try to read SegmentGeneratorConfig as a json object there\nBetter to fix this API now.. Deprecate this method in favor of setSegmentNameConfig(). Remove all calls to this method from our code.. Change this method name to getGeneratedSegmentName, add a variable _generatedSegmentName that has no setter.. private final for all vars please. nit: indent. Can you move this method to DefaultSegmentNameGeneratorTest? the avro file should be accessable from there as well.  . please add a javadoc here saying that this method should be used instead of setPostFix if it is the sequece number that is to be added. thanks. also add a javadoc in setPostFix to use setSequenceNumber() instead, if sequence number is needed at the end of segment name. remove this comment body entirely.. Please fold in the methods of this class as (protected) methods in DefaultSegmentNameGenerator and remove this class altogether. There are no users of these methiods. Add a javadoc here giving examples of what the segment name would look like with various combinations.. also add example when postfix is not specified, or seq id is not specified. also, you should set postfix to \"\" if it is null? Otherwise you may end up getting \"null\" in the name? Just verify please.\nadd a test in any case. thanks. should be 100 if there are no segments in idealstate. won't this always result in 100?\nI think you need \n(nSegments > 0) ? (100 - (nOffline * 100 /nSegments)) : 100)\n. Please add some comments here on what these metrics mean. is this percent of segmens that are Avaialble, or those that are Unavailable? In fact, the PERCENT_OF_REPLICAS should also have been named correctly. PERCENT_REPLICAS_UNAVAILABLE. In this case, it is percent of segments that are unavailable, right?. There are too many counters here, and it is not easy to understand the logic anymore. Can you please write a one-liner on what each of these counters represent? thanks. Please rename to PERCENT_SEGMENTS_AVAILABLE. Can you please add the same check with 'replicasPerPartition' when creating llc tables? . please add a log info here . thanks. return default value if you are not able to parse or encounter erors when getting the time out value from tabeconfig. return default value. used?. remove this code from here.. Note that the call to get table config happens multiple times during the commit of a segment. For each table, for each partition, for each segment commit we will get the tableconfig. \nFor now, it may be ok, but it may make sense to cache these values and update during a validation manager run (for values that are OK to be updated every hour).  The following things come to mind;\nKafka partition assignment, table-config (commit time), take config (segment flush size). \nMay be more.. why is this empty? Why not pull in from table config?. are we not adding a test case for no dict columns? Why not?. Change this condition to cover all cases.\nidealState == null || idealState.getPartitionSet().isEmpty(). From what i read on commons io and fileupload packages, and from what we have seen, the temporary file should be cleaned up. The documentation reads that the file is cleaned up when the object is garbage collected. I am not sure if deleting the file actively will cause something else to break. \nI saw some code in newer version of fileupload utils that deletes the file in their code.. Also, it will be a good idea to field any exceptions and log a warning so that the upload does not fail if exceptions are thrown for any reason. ok. ok. ok. changed to PARAM_EXTRA_TIME_SEC = \"extraTimeSec\". Changed to rowCount. changed to rowLimit and timeLimit. done. done. done. yes, done. i will add code to sanity check, good point.\nI disagree with the other comment about sending every 2 minutes even if the controller lease time is high. Unless needed, we don't want to send lease req messages. We will evolve this code to learn the build time so that no config will be needed.. will fix. will do. private? if possible, private final (do we ever construct it empty?). why not add getColumnMetadatamap to SegmentMetadata interface?. please put back the newline here. same. Do you want to add a counter for number of items not in range?\nOr, do you want to log the situation differently if the value was out of range?. will be useful to factor this logic into a method.. should this not be set to the length of the first element by default?. we should already have this information as we input the rows, right?. That is automatically handled in the code. Time column name is returned as \"\" if time column is null. See RawIndexCreatorTest. Epoch start/end time is set by default. We are overwriting things if the time format is simpledate. I will add the protection in setTimeFormat() method of SegmentGeneratorConfig. if all methods are static, please make this a singleton class and have one static method to get the instance.. please add the name of the table in the config in the message.. remove println. we should compare this with some error msg? Or, at least validate that this is an error (as opposed to success)?. Don't you need to ignore if the '.' is already escaped? Same with other chars.. Not sure if this comment is still needed, since we have Patern.CASE_INSENSITIVE. s/BETWEEN/REGEX ?. the variable name lastSegment is very confusing, with pinot segments. lastPart?. suggest rename reloadAllSegments(). If there are no segments, then return an explicit message here. Othewise, we will only see sent '0' messages, and we will not know why.. include segment name and table name in this log. include segment name and table name in this log. Note to me. Not sure how this is related to reloading segments. note to myself. why is this method empty?. throw unsupported exception?. rename indexDir as \"indexDirToLoad\", otherwise someone else doing a \"cleanup\"  might change line 121 to be _indexdir, which will work most of the time I suppose. why remove the null check? Not sure how that is related to reload functionality. s/Extract/Override. Not sure if we are preserving the existing logic of overriding the table config with server config if and only of the table config version is lower.. see other PR. move this method to a test class.,. Not clear what happens if there is a timeout. \nAlso, the use cases that do not care to get the number of partitions will experience the delay as well. We have a  budget for segment building now. I would like to see if we can restrict this call to Kafka for use cases that absolutely need it.. Nullable. Nullable. Nullable. Why are we getting tis in 2 places?. if one value falls out of partition, will we be printing this message for every row thereafter? \nAlso, wil we be printing this message for use cases that do not have a partition funciton?\nIsnt it better to add a null chekc up front and return right away? This code is in the consumption path, right?. With this change, we are always testing with partition key?\nCan we please add a separate test for testing partition key so that we still have other tests that do not use partition key but still use llc?. rename it as _column2PartitionerMap ?. Try to see if you can get the segment name in the log message. Otherwise, with multiple segments being consumed simultaneously, you will have no way of knowing which segment did not fall into the partition correctly.\nAlternatively, add a log when the segment is being built as to whether the partition column fitted right or not.. This log may appear for every query to every realtime consuming segment, is that right? Can we change this to debug? Do we want to add a metric if this is important?. hopefully no perf impact here?. May be better to add a new RuntimException called (say) BadQueryException.\nIf we explicitly raise this exception, then we can use it for multiple different errors. Hmm.. this statement (reqParams.with()...) should never throw an NPE. . Please add table name to this log. add table name to the log. add table name to the log. include table name in log. e.getMessage(). How do we make sure that the variable _nPartitions does not get used for some other purpose if there is an exception here? Do you need it as a member variable? Why not leave it local to this method?. +1 to that.. Do you need _segmentPartitionConfig as a member variable ? If it is not used anywhere else then make it local. Good catch, I will change that back to warn (if conn is not null). . Please call makeConsumerWrapper() again when the exception is fielded. The consumer wrapper is a stateful object, and we have found it better to create a new one when experiencing transient Kafka failures. In this case, whether the exception is transient or permanent, it is better to create a new consumer wrapper. See other uses of this method and the conditions in which they are called.. should we not have 2 values here?. isn't it safer to call the rangesToString() method that is defined in this class?. will be useful to add a compatibility test as well. Have a json that has some new fields in it, and make sure it is deserialzed correctly.. should be warn, but we don't need to log the exception stack.\nideally, we should log an INFO when we get back from the transient error, and the complete stack and error if we cannot.. can u please add e.getMessage() to this warning? thanks. segmentLogger automatically adds segmentName (that has table name and partition ID). Since this class is used only for testing, I would suggest moving it to some test utils. I thought I had already asked @rven1 to do this, but then maybe I missed.. I would also add an ALERT to the comment block above.. Ah,I take that back. You need this in the factory, I guess.. no other changes to this file other than re-ordering imports?. Not sure if this is always number of Kafka partitions. If so, then can we just be explicit with numKafkaPartitions? if not, then maybe we can think of another name?. Is it possible for each column to have a different number of partitions? If not, can we remove this method (seems like not used as far as I could see, but I may have missed something). \nIf yes, then does json package handle the two set methods correctly? Does it make sense to rename it as setNumPartitionsForColumn()?. log any additional info here. URI?. Log URI if possible. ditto. ditto, and can this code be merged to be in one place?. nit: add extra space before 'catch'. don't we want to bump CONTROLLER_TABLE_UPDATE_ERROR here as well?. increment CONTROLLER_TABLE_UPDATE_ERROR here?. Do we want to add a catch all exception here?. increment CONTROLLER_TABLE_UPDATE_ERROR?. please add a comment here as to why the sleep is needed (i.e. what event are you waiting for). please add a comment as to what even the sleep is waiting for.. No, we actually want to create a new SimpleConsumerWrapper if it throws transient exception. (Currently) it does not reset its state correctly.. Correct.. If the crc is not set right, then will the servers reload all segments all the time? This function worked right before. What happened? Why can't we fix it (even sub-optimally) while getting the crc correctly?. Modified as per discussion, throwing a new runtime exception now. So, @nullable not needed here.. they are calling different methods into the fsm, so i could not find a way to share it. . reuse tempMetadataDir. Take the time here as an argument.\nSuggest rename method as waitForShutdown(long msecsToWait), or shutdownSynchronously(long msecsToWait);. pls remove system.out.println. you can print the actual message here if assert failed.. I believe you are catching the wrong FileUploadExcepiton here. Should be org.apache.commons.fileupload.FileUploadException. Can you please verify?. may make sense to log the full exception here, as an INFO though.. This exception will be caused if the incoming request was bad, right? (say, the post did not conform to http protcool, or the connection was dropped and EOF received early). So, an INFO is fine, it seems. Why do you think it should be an ERROR?. Discussed this offline, and it looks like the way API handles it, it could be a local error or a remote error, we cannot say. So, this should remain as an error with the stack, I suppose.. i think it is better to use isEmpty() in dictionaries. Can you pls implement it in BaseMutable? thanks. Better to take these two as parameters in the constructor. In realtime, we have an idea of row limit that can be used to compute (or guess) a value for initial size.. can u please do a memory profile for this vs the existing classes? with small medium and high cardinality. Also, can we use fastutils here? It appears that it works with one writer and multiple readers, but please verify. choosing these as powers of 2 allows you to avoid % operation. my bad. cannot use fastutils. pls make it private thanks. if there are 100s of tables hosting partitions on a server, will this log all the table names? Would it be better to log this as debug, or just log the number of reosurces that need to be monitored?. no changes in this file? or, did i miss something?. suggest final. should this be info?. info?. why not log info and return error response here?. please remove duplicate error log here. is it possible to log the segment or schema name?. pls log the segment or schema name. pls log the segment or schema name. pls log the segment or schema name. I suppose this logic applies to whether we are throwing an exception during segment refresh vs. segment load. In the latter case, we want to retry multiple times (preferably retry only if download fails, not if load fails). \nSo, can we try to name the variables accordingly? Is this a download or a refresh? Is this a network failure or a load failure? It seems that if segments fail to load, it does not make sense to retry.. can helixState be null?. the methods to set and get start tree index spec in this class don't seem to be used. Or, did I read it wrong?. you don't need this, right? the default is already 7.. please add a comment on why you are marking this synchronized. . you don't need PinotResourcManagerResponse. A void would do? we are not invoking this via the rest api.. no need to do this with delay. I may go the other direction, since this is very specific to deletion subdir which is 2 levels exactly.\nfor each dir {\n  get files that are aged\n  delete files\n  if (dir is empty) {\n   delete dir\n  }\n}\nthis way, we avoid getting dir twice. \nthis could turn out to be important if we are on a remote FS (or even in NFS to minimize cross-network ops).. i may rename this to removeAgedDeletedSegments(). I may rename it to removeAgedDeletedSegments(). @mayankshriv we can re-factor as needed if we want to re-use this? Would you be ok with that?. This is not an error. If localdiskdir is not configured, then sgement files are never moved into Deleted_Segments directory, so logging an info is fine here.. Actually, remove this API from PinotHelixResourceManager, and add a getSegmentDeletionManager() api instead, Use that from RetentionManager.. Please use segmentNameGenerator instead of setSegmentName. that is the direction in whcih we are evloving. please rename parameter as retentionInDays. add the units in comment. log a message that directory may not be empty instead of \"empty directory\". Are we adding any value here over Helix TaskConfig object? Or, do you plan to add other members later?. need public for these strings?. move one line up, or add jobqueue name to the log. I don't quite understand this comment and the lone below. Add a comment here as to why we are doing this.. should be called before trying to load the segment OR trying to load the metadata right?. expand this comment outlining the scenarios that can happen, and describe why we are recovering this way. Give a pointer to the reload() method and explain what the failure (i.e. server restart) points can be, and what cruft is left behind at each stage.. add a log here that you are deleting indexdir. add a comment here that this step should be atomic, so it is ok if a failure happens during failure recovery. We will be left with the BACKUP directory, and can recover from that.. add a method to cleanup after every test case, otherwise directories can remain from previous incarnation.. Check that the directory that exists is the same one you created up front. Make sure the method has not overwritten or changed it in any way. need cleanup. need cleanup . s/Reload failure/Rerstart during a segment reload/. +1. s/Failure/Restart. s/Failure/Restart. s/Failure/Restart. Yes, the unit test sets them in seconds. This is mock time, btw. You can read the other tests to get an idea.. Good idea. I iwll add that to this test.. The reason I changed it to pickedWinner was that the return of this method is a yes/no answer depending on whether  a winner was picked or not. I can change it to didPickWinner() or winnerPicked() or isWinnerPicked(). ok. yes, will fix.. Instead of sleep, can we wait on a condvar? Or a volatile variable?. 1 second is too small, make it 1 minute.\n. Sleep 100ms between iterations to give a chance for the server to start :-). ideally, take the timeout as a parameter.. change the exception message. add a sleep. Please use TableNameBuilder.getTableTypeFromTableName(). !!!!!. For HLC, no because we have only one replica per segment.\nFor LLC, I tried to make a change but then backed it out as per comments, because a much bigger change is needed to increase number of replicas.. Please compare with indexingSchema.getTimeFieldSpec.getOutgoingTimeColumnName. please rename as incoming time col name. You dont need to change the constructor. if (column.equals(indexingSchema,getOutgoingTimeColname()) {\n   fieldSpec  =indexingSchema.getIncomingTimeFieldSpec();\n  column = fieldSpec.getName();\n}. good catch, fixed.. Is there an assumption here that the pinothelixresourcemanager is already started? Does clusterInfoProvider need a start method?. include task type name in the log in all log statements. rename to taskQueue. provide a method to register an object that implements PinotTaskGenerator.. move this to test. move to test. do this via a register method. refactor this into a method that you can override in test classes, and then you should be able to call execute() directly. done. done. done. yes. we don't want to call close on the buffer reader/writer since they use the same buffer that we use. Otherwise, we will get double-close.. fixed. Yes, that is why i have it in a separate method. I will add a TODO. Right now, it is not clear yet how the rowsCountPerChunk will be decided. Most likely it will be outside this class, since other classes are also getting re-factored to support multi-tenant realtime. fixed for all the getters. \nThis class is not used for anything other than int. Removing the other methods makes the logic crisp and clear, but because of the way inheritance is organized, I could not do it without significant changes (otherwise, that was my first choice).\nI also considered adding a 'throws unsupported' on each of the others, but refrained at this time.\nI will add a unit test for the other use cases for now, but probably not as extensive as the int[] use case.. See above.. done. I intentionally wanted to check without chunking in this method, but I added a random chunk size in the next test.. Will add close of all readers and writers when reader/writer is closed.. can you remove the word \"Error\" from the message?. As yet, the number of buffers is 1, because we still limit by the number of rows.\nWhen we start limiting by memory (once we have the other pieces of the puzzle fixed to use off-heap) we can work on tuning this to coalesce if necessary. The idea is to try to keep this to 1 or a few at best, by taking hints from the previous completed segment. Why? This one is independent of MAX_MULTI_VALUES_PER_ROW. . Good catch, thanks. Added.. makes sense. optimizes if the rows array is ordered.. I suggest we make this configurable. In case it has some issues we can at least turn it off.. configurable. please define as  a static final string. it is used in multiple places. Should this one be post, and the other one be put?. Not sure what we are protecting by using synchronized in all these methods. I suggest that you consider introducing a class that holds different task name component. It was hard to change the segment name for different segment types while adding LLC to make sure that each one followed a different naming scheme. Counting underscores via static methods got uglier and uglier.. Sub class of what?\nFor now, I would like to leave this as inner class because it is not used anywhere else. As the implementation proceeds, we can evaluate how it turns out and pull it out if necessary. Agreed?. fixed. UnSortedSingleValueSet does it.. SegmentIndexCreationDriverImpl.buildIndexCreationInfo(). I believe this is only for metadata purpose, but that is to be verified and the segment creation driver re-factored appropriately to reflect the correct metadata.\nAfter I added this, I realized that there is more to do to get the realtime segment built with artificial metadata, and I did not want this PR to grow too big. So I submitted it disabling the feature.. will do.. Not sure, but I am removing it for now, since I didn't add support for SHORT elsewhere. I think I saw SHORT in some plasces when I starrtarted off, and then not in the query path, so I will just include the 4 types here.. Only integration test. I added one of the metrics (\"NASDelay\") as a no-dictionary column, but it breaks right now, so I have commented it out. This metric is used in all types of queries in the hard-coded query set.. missing the counter increment in nextLong(), nextFloat(), nextDouble(). Will fix, and try to add a unit test as well. Each buffer has a startRowNumber. The offset is how far away from row 0 the start of the buffer is.. Yes, that is right. I will remove these methods in favor of getting the reader and invoking it directly on the reader. Otherwise, we will need to adjust each row id into its offset.. discussed offline. I will remove the comment. wait on this for the next PR.. this one is setting the segment name to null, but the server is checking for segment name to be \"\"?. I will create an issue. This will have to be in the ColumnMetadata class where we should throw exception if the metadata we have is not correct.. By itself, this cannot break anything because this code path is executed only during segment creation. Nobody relies on actual values that is returned from this method.\nHowever, like I mentioned before, ColumnMetadata class will need to be tweaked. Even there, I have verified that for no-dictionary columns, this method is not accessed. However, yes, it is good to make that explicit if the metadata is not valid.. Not clear what you are asking for here, but I could not name the method any longer :-)\nthe method call determines if this column can be a no dictionary column for consuming segment. If yes, then we add it to the list, otherwise we end up creating dictionary for the column in the consuming segment. In the completed segment, this column will continue to have be a no-dictionary column. I will add comments saying so.. should be a warn, since we correct the situation by retrying eventually.\nAlso, instead of +e, please do \", e). s/simpleDate/dateFormat. s/simpleDateFormat/dateFormat. Prior to this change, the callers to construct ColumnIndexCreationInfo() had to provide an array of unique values as one of the constructor arguments. Internally, ColumnIndexCreationInfo computed the cardinality as array.length.\nWith this change, I have introduced an additional argument to the ctor of ColumnIndexCreationInfo -- cardinality.\nIf you see the lines below, the array of unique values is computed as a one-element array consisting of the default value of the column being added. Since the size of this array is 1, I am hard-setting the cardinality to 1 and passing that value in the constructor. I did not want to hard-code the value in the call to constructor.. The idea behind this test was to make sure that we do not get any json exceptions whether or not quota is set. You have modified this test to include dateformat, which is ok (Ideally a different independent test is better), but you should also test that the dateformat is null when the table config does not have it, as in lines below where the quota is tested to be null.\nas a nit, please change the comments to include \"with quota & dateformat\" and \"no quota and dateformat\". will change it. will change. It doesn't matter either way.. Yes, lookup method hierarchy in your favorite IDE. Hmm... let me think about this and incorporate it. It does sound simpler.. split enbaled is not a request param. u need a new message type MSG_TYPE_UPLOAD_SEGMENT. you also need to set the value in toJsonString() method.. add while split-commit. some note about split commit . base class the two of them. note for split commit. need another message type. return UPLOAD_SUCCESS. implement a method to create the file name. For now, put it in the SegmentCompletionProtocol file. with a TODO to find a place for it. spell. s/splitEnabled/isSplitCommit. Before this line, add code to verify that the file exists. . Log the table name, or segment zk path name where the error happened. \nConsider setting partition data to null? I am sure we have code that brings all segment metadata in a loop (e.g. retention manager). Consider whether we want this one exception to stop processing other segments for this table (or worse, for all tables, giving up altogether, depending on how the caller is coded).. If close fails, I would like to log an error with the column name. So, it is better to get the entries rather than just values. entry.key() is the column name.. Current thought is NOT to have these come via config, but make this a learning system where one segment \"learns\" from the previously built segment. I don't have actual mechanisms to do that yet, so I will leave this code as is. If a config is eventually needed, we can plumb it in. \nAs for benchmarking, as my check-in remark says, the current benchmark tool is not quite valid, but I have preliminary results based on that. We need to write a benchmark using JMH. I will do that in a different check-in.. The map (as the name indicates), is for overflow elements. It is sized to be 1% of the cardinality at this time.\nI was hoping that the comments in the beginning of the file will help understand this, but let me know how I can improve the comments so that it is evident that the size of this overflow map is bounded.. Like I mentioned before, the current plan is to start with a guess and then learn from the previous segment. Mechanisms TBD.. In line 249. Not sure what ~= means, but yes, this is a linear search. In practice, we will expect to have a few iBufs in the first segment, and 1 (max 2) in subsequent segments.. The idea is to keep the implementation flexible at this point, because we don't have enough data right now. Having the expansion multiple be configurable helps us evaluate different expansion techniques in our benchmark.. The map is small compared to the cardinality. We can also bound the size to some small number (say, 1k elements). Keeping the overflow in the map provides a way to absorb small spikes.. The rate does not matter, right? It is the number of spikes that we are guarding against.  When we reach a threshold, we create a new off-heap buffer.\nAs coded, the threshold is set at 1%. I am inclined towards setting the threshold to some hard value (say, 5k), so that we can hard-bound the number of values stored in heap.. add a javadoc  coment that tableName arg can be with OR wthout table type.. please also add an info log when reload is successful with segment name and table name in the log.. I have now changed the threshold to be passed in for overflow. A threshold of 0 will disable overflow.\nPerformance benchmarks show that the number of ops with overflow is slightly lower than the number of ops without. so there is a marginal perf degradation during insertion. (5811 vs 5812, 7018 vs 7174,  7042 vs 7103 for various initial cardinality settings)\nMemory benchmark shows that having a small overflow (I benchmarked with 1000) is definitely advantageous in terms of reducing the number of buffers (and total memory) allocated. I have detailed benchmark results for anyone to see, or you can run the perf and mem benchmarks checked in.. Perhaps so. I don't recollect why I set it to atomic ref. let me check on that.. I have now added jmh based performance suite now.. Done. So that if we see a throwable, we can reproduce the test case with the right random seed.. ditto. need to get the boolean value of the definition. we dont need the ctor. Add a TODO to include the generated file name in the response to server. Add a TODO to extract and possibly verify the file name in the request. Log info with generated file name. pull out the code to genearte file name as:\ngeneratedFileName  = SCU.generateFileName(..). good catch. Before you decide that a sleep is unnecessary, please validate why the sleep was there in the first place. Ideally, the code should be to busy loop waiting for that event. Hopefully the author who put in the sleep wrote a comment on what event we are waiting for there.. Benchmark measurements show that it degrades performance marginally, but helps in memory allocation (because of the multiple factor to allocate off-heap memory). One new buffer would be allocated instead of storing a few values in heap.. Actually, it is not the number of rows. It is numRows * NUM_COLUMNS.. else we won't have anything in the overflow hash, so nothing to do, right?. Used by sub-classes. working on that. let us see how it turns out. . working on this. we need to set the raw value before we update the reverse index, and hence it is here.. need to add the segment location to the getUrl method above.. nit: space above this line. nit: space above line. nit: space below line. set it to null. why add a new parameter? we already have reqParams as one of the parameters to segmentCommitEnd() call.. log should include segment name. don't need extra parameters if it failed.. should incldue segment name in this log. checking is ok, but if uuid is correct, we should never have the segment file here. add a comment to that effect. LOGGER.info(\"Moved segment file to {} successfully\", _generatedSegmentName). Please don't use the \"+\" in log statements. . static final on \"tmp\" please. you need to incldue \"tmp\" in the generated file\n + \".tmp\" + . you don't need to say \"SegmentCOmpletionUtils.generateUUID())\". Just generateUUID() shold be enough. Not \"*\" !!!!\nAlso, move this to PinotLLCRealtimeSegmentManager. Deleting everything from root?. Dont need extra param. change the method name from updateZk to commitSegment. change method name to commitSegmentMetadata() (instead of commitZkSegment). dont need extra param. need to add quotes around _segmentLocation. remove splitCommit in the response from this message. you don't need it here because the other end is already doing split commit.. remmove splitCommit parameter. no need to log here. Make sure that all the log messages in uploadSegment() have segment name in them.. rename as moveFileWithReplace() OR replaceFile() OR moveFileWIthOverwrite(). Write javadoc for the method.. not _generatedSegmentName, but generatedSegementFileName.  You need to concat things to make _segmentLocation out of these elements,. \"Takes in a segment name, and returns a file name prefix that is used to store all attempted uploads of this segment when a segment is uploaded using split commit. Each attempt has a unique file name suffix\".. remove 'raw'. Why do we need this check?. s/temporarySegmentName/segmentLocation/\nThe segment name remains the same throughout, and is never changed. Only the file name is changed.\nYou should change the logic of this method to handle a URI.. Use a URI here.\nfile://. not temporarlySegmentName. Call it segmentLocation. segmentLocation. s/_generatedSegmentName/_segmentLocation\nAlso, include a comment that the format of the location is \"file://\". getSegmentFileNamePrefix(). A simple loop using getName().startsWith(prefix) does not work?. not temporarySegmentName, segmentLocation. Add a comment here that in case of splitCommit, the segment is uploaded to a unique file name indicated by segmentLocation, so we need to move the segment file to its permanent location first before committing the metadata.. you should add code to decode this URL, get the parts and make sure that each part is parsed correctly into request params using the method to decode params.. Good job adding this test. You also need to add a test on response serialization and deserialization,.. use the getprefix method here. Not hard-code the file ame, but call yoiur new method to get the file name with uuid.\nalso, not temporarySegmentName. don't catch exception here. add a throws clause to the method. s/FILE/URI_PROTOCOL/. Use SegmentCompletionProtocol.RESP_FAILED. remove lines 126 through 128, since UUID by definition is unique and the file will not exist. . Use the private static string PROTOCOL here instead of \"file\". remove this log.. remove the log. remove this method and fold it in to the caller. get a File object after parsing URI. don't need this since you will already get a file object.. remove this check. Parse the URI and return a File object. define all the things you are going to compare. add the most common cases as a test here. look at the server code in LLRealtimeSegmentDataManager. startsWith good enough?. use the java tmp dir.. get it from the source code. mark the file as deleteOnExit. great job adding this test.. fixed. Good catch, it does.. fixed. no, checking one of them should be enough.. I always have a min of 32k. I have now made this a private static.. During an insert to a dictionary, we hash the object, and compare strings against each collided dictionary Id we come across.  I looked over the code, and if I change OffHeapStringStore to be an OffHeapBytesStore, and i also add some not-so-clean interfaces, we can boil down an 'add' operation to a single invocation of String.toBytes(\"UTF-8\"). However, we as saw yesterday, the toBytes() call invokes an encoder, and two copies by itself.\nA get() operation will be exactly as in the current one, except we will be allocating a byte array instead of char array.\nA compare will be like add, a single invocation of toBytes().\nI can try to benchmark these approaches.... To make it thread-safe for a single writer multiple reader. I am fine with a linkedlist. it is all very small anyway.. agreed.. done. done. I did a second implementation with byte (i.e. this class became a OffHeapByteStore instead of a string store). I re-factored the base class so that I convert incoming string into UTF-8 before doing any operation. Initial results were not nice, since running the unit tests took forever. I suspected gc, but could not follow up on things yesterday. I decided to run a benchmark, kicked one off last night, but it did not complete for some reason. Perhaps because the buffers were not being doubled each invocation. I iwll try to run the benchmark today to get some answer on this.. Yes, that was the intention, and was implemented so before. Somehow, this was missed. I will add it back in.. warning, not error. The earlier implementation logged a warning.. best not to use defaults here. Let the defaults be defined in the protocol. So, don't call  .withWaitTimeMillis() unless it is specified in the param.\nSame with all others.\nThe only mandatory ones are offset, segmentName and instance.. nice. you may need to change these as per the defaults in the protocol definition.. add an assert for response offset. warn. warn. add a TODO here to verify that the controller asked to do a split commit. u can remove these since they are testied in the happy path case. nice. seems to do the same thing as the split commit happy path?. seems same as existing test?. use the other test to do split commit or not. parameterize it. assert that fsm went away. assert ehre that fsm came back. pass the response parameter instead.. look for COMMIT_CONTINUE. Look for UPLOAD_SUCCESS. build a response obj here. remove this, and add an integ test that enables split commit and make it work. if (isSplitCommit && serverConf.splitCommitEnabled())\n. where did the response log go?. pls dont remove response log. need respomnse log. check against ! = COMMIT_SUCCESS. remove this . remove this. remove this. \"all servers go silent after controller asks one of them commit\". I ran an insertion benchmark overnight between these two implementations (insertion includes lookup, so it is a reasonable representative). The benchmark was to insert 2.5M string values (1M cardinality). String lengths were under 32 bytes (randomized)\ncharstore:\n  1234 times, 1967 ms/op (an op is doing the work defined as above)\n  gc alloc rate was 10.5MB/s\n  gc count was 943\n  gc time was 5k ms (0.2%)\nByteStore:\n  1125 times 2152 ms/op\n  gc alloc rate: 10 MB/s\n  gc count: 10175\n  gc time: 18k ms (0.7%)\nSo, about 3 times as much time was spent in GC, but the relative time spent in GC seems to be small. Given that we are generally memory bound, a 50% savings in memory seems to be useful (similar trade-off that we made in the offline segments)\nI will go with the byte store for now. I will also check-in the (unused) stringstore. If we have GC issues, we can move things around a bit.. Not sure I understand why you need a SortedSet and not just a Set here. We should limit the calls to get table metadata multiple times during a segment commit. Can we cache this?. u r right. I thought that is handled at a higher level. Or, perhaps each of these calls are idempotent and run fine. i am not sure. But then we can do that as a separate PR. Not deleting segments is biting us now, so I will check this in. It is a volatile instead of atomic reference. The idea is that a reader can iterate through one list while the writer is in the process of adding an element to the list. Lists cannot be concurrent, otherwise a concurrent list would do.. We double the size everytime. If an odd-ball case comes up that we have to double multiple times, then we need a while.. Not sure how it came back. @jenniferdai also pointed this out., and I thought i had fixed it. Sorry.. We assume that this never happens. The general approach has been (in Pinot) to not add defensive programming in lower layers for performance reasons. You can see that pattern in many places in pinot.. this code should be inside makeZnRecordForNewSegment. please write a more generic cache class like we discussed, and let us have only this class use the cache for now. We can expand that to be a static cache class later.\n. done, changed to RealtimeIndexOffHeapMemoryManager.\nKept the derived classes the same, though.. In the realtime indexing, this memory manager is created each time a segment is created. And then for each column, we may allocate memory multiple times. I will add these as comments in the base class.. agreed. done.. private does not work, so made it protected. the only higher layer here is realtime segment impl, and that logs (and swallows) the exception. IF we log there, we get the segment name  in the log, as it does for other things in the destroy() method.. The creator of memory manager is expected to close it (in our case there is only one creator, RealtimeSegmentImpl). yes, added.. length is decided by the caller who wants the buffer. All callers make sure that  length is less than 2g. they have their own algorithms for deciding the length (e.g. use prev len, or double prev len, etc.). I want to pick a number that is high enough so that we can get multiple buffers, but low enoug that we don't run out of disk trying to ingest 100 partitions in a host. 2g will be an overkill, so I picked 0.5g. I think I should reduce it a bit, maybe.. It cannot be = because we need to add the current buf size to get the next available offset. \nI ran a unit test with your test case, and am seeing the right results. . This condition should be <=, so that we can accommodate a chunk 1 byte longer in the same buffer. \ne.g, if a bufer is 4 bytes long, the first alloc asks for 1 byte. avail offset will become 1. At that point, we should be able to afford an allocation of 3 bytes in the same buffer. In fact, we are a little conservative in the super-class, so I changed that, added a unit test for corner cases.. yes, agreed, will do. what if addIfNecessary does not create a new file?. yes, agreed.. nit: s/keyNumBytes/numBytes. This class is not used by oflfine segments. remove this one. the first argument is expected to be an instance iD. Dont add argument to every call. Instead, add a getter in SegmentCompletionManager boolean  shouldAcceptSplitCommit(). no new argument. . not needed in hold. please change this to just use NUM_ENTRIES/3 or NUM_ENTRIES/3 plus/minus 10%. This comment is misleading. Realtime segments are not concerned with a push type at all.. not sure why you are comparing push type for realtime tables.. may be more readable if you had individual booleans declared:\nboolean isSegmentAssignmentStrategyCorect = ...\nboolean hasReplicaGroupStrategyConfg = ...\nboolean isRefreshPush = ....\nAnd then use these to do the if statement below.. Yup. Add a TODO in this PR.. add the replica id in the log message. Why should this be a WARN? We find a different replica right? (at least, that is what the comment says). No assumption should be made about how the partitions will be assigned across servers. The only assumption that can be made is that the number of replicas will be honored. In fact, this serial assignment that has been pointed out in the comments is actually because helix code had a bug https://issues.apache.org/jira/browse/HELIX-631 Once this is resolved and we start using this call, the Kafka partition assignment will be totally opaque to us.. should really schedule a thread to do this, right? Otherwise, tests may behave incorrectly.. add the exception to the log. Also, log tableNameWitType instead of tableName. Confusing variable naming here. What is partitionNum? If it is number of partitions (I think that is it), then please rename it as numPartitions. Otherwise, it is unclear what the difference is between partitionNum and partitionId. better to assign an integer as\nfinal int numPartitions = partitionAssignment.getListFields.size();\nand then use it. partitionSize? numPartitions? Not sure what it means here.. Not sure what you mean. I re-factored this class to expose a method to get offline segment metadata and realtime segment metadata.. getTableTypeFromTableName() returns null, and that will end up throwing a null pointer exception.. yes, fixed.. Not sure what you mean. IDEA leaves things as is when I re-inedent things.. ok, in that case a WARN is warranted. But, are we also returning partial results?  IIRC that is handled elsewhere in the code, but just making sure.. should make these two configurable.. make sure that this is not used outside (e.g. hadoop jobs). you should add _segmentLocation and _controllerVipUrl only if they are non-null.. maybe better to call both of them as enable.split.commit (so, change the one in the controller to be similar to the config in the server). thanks. u don't need to store the controller conf, if you are calling into PinotLLCRealtimeSegmentManager to deide whether splitcommit is configured.. dont need controller conf. remove empty line. rename as _isSplitCommitEnabled. isSplitCommitEnabled(). final. final. add vip url only if split commit is enabled.. chang this var name to isSplitCommit. add a test without split commit enabled also. you should change the config and not use a different arg. startsWith() not contains(). better to parse and get the protocol.. better to change server config and invoke the same start code.. s/isSplitCommitEnabled/isSplitCommit. s/isSplitCommitEnabled/isSplitCommit. you shoiuld pull out the common parts outside. suggest:\nSegmetCompletinProtocol.Response.Params params = new Params().with(offset).withBuildTimeSeconds().withStatus().withSPlitCommit();\nif (_isSplitCommitEnabled) {\nparams.withControlerVipUrl();\n}\nreturn new SegmentCompletionProtocol.Response(params). throw a runtime exception if parsing fails. remove this. Fixed to ensure that the mandatory parameters are non-null.. fixed. fixed. I have added comments on the scenarios in which this can happen. I have changed the synchronization to be on SegmentCompletionManager.. Handled.. ok, will throw non-runtime exception. good idea.. Done, removed the method.. this should be a warning, no?\nWARN when an problem happens, INFO when that problem is corrected, and ERROR if it is never corrected.  . Yes, ideally a boolean. Will add this once I commit.. Perhaps so, but to minimize changes in behavior, I pulled out the code from the existing PinotSegmentUploadRestletResource, which does a mkdir for the \"untarred\".\nNow that we have moved all these together, we can add this as a cleanup item.. The current one seems to return null. Not sure why we have \"\", but I guess it will fail quickly if the health check does not pass.. In the jersey API the trailing slash does not make a difference. The API will work for both.. @antumbde, can you please expand on this comment (since you added it)? IIRC if I changed it to json it did not work. we can leave the TODO and experiment later.. No, that will be an API change. I don't want to do it at this time.. Done. Done. This is the code you wrote :-)\nWe generate the target segment file name, and move the contents of the tmp file into that destination.. I want to minimize changes from the original code. If you compare with the existing PqlQueryResource.java, you will find that the logic here is the exact same thing. Once we move to the new API, we can refine things the change it in some compatible way over time.. no, tabletype is never in the path. It is always a queryparam. type is never in the path. It is a query param. Yes, I wanted the segment name in the error string. I don't believe we have APIs that scan for this specific error string return.. Injection works via the code in ControllerStarter.java, that calls adminApp.registerbinder(). There is a comment before that line that says we need to register any classes we need injected in jersey handlers.. Yes, I had to get the functionality in place, so I omitted the flowers around it. Once we have the functionality in, my plan is to go and fix all the @Api annotations with examples, etc.. will fix. No, a bad user input does not warrant an error log. A log is needed, in case the user complains of a problem. The idea is to flag an INFO and throw the exception to the user, which is what we are doing. An ERROR will mean there was something wrong with the product.. no. Yes, left it out as a TODO on purpose. Will fix it once the new API is turned on, otherwise I have no way of getting tests to pass with with APIs.. yes. same response as above. Will be good to add some comments and examples on what a schedulerGroup is. Like what you explained to me during review sessons. \n\"(IIRC), A table can belong to ONE scheduler group. For now, each table is treated as its own scheduler group. (I believe) we don't mix & match scheduler groups. If the server is configured to use TokenPrioriityScheduler, then all tables in the server belong to some instance of TokenBasedSchedulerGroup. Similary with FCFSShedulerGroup.\"\nthanks.. Suggest rename class to TokenBasedSchedulerGroup. Suggest rename class to FCFSSchedulerGroup. Can u add some comments on why this needs to be an interface? In general, we expect to have multiple scheduler groups in a server, and we need a multi-level priority queue of some sort to figure out which query to scheduler next. Do you expect other implementations using this same interface? Or perhaps other algorithms within the multi-level scheduler?. concurrent? or, maybe not since it is only added with a queue lock?. please include static final strings for tokenbucket and bounded_fcfs as well.. Do we need this as a separate interface? SchedulerGroup interface extends this, and I thnk there are no classses that implement this interface directly?. Do we need this?. Can you please add a TODO to handle these errors in broker appropriately? Or, do you plan to make that checkin soon?. TimeUnit.MILLISECONDS.convert(System.currentTimeMillis(), TimeUnit.NANOSECONDS);. i thought we agreed to remove this in favor of testing for the exception at the specific line we expect to get it?. Since this class may deal with token-based or fcfs scheduler, shouldn't these comments go to another file? (or, be more generic here?). not sure what this comment means. Is there a bug here? Or, is this a TODO?. Also, don't you think it is better to distinguish between server not started, and server shutting down?. the null pointer was logged as a warn before, will now be an error. Do we want that? I would add the null check back.. log info before throwing exception. log info. please add this info log back, but with the table name now. thanks.. I went through this method first, and then decided we need a helper method.. yes, the two APIs now function same, except one returns a json array of strings, and the other returns a json array of objects.. wil fix.. I had set it to be final, but wanted to change it for testing reasons. I will add a comment saying that the static should really be final. Not sure if there are other ways of testing this.. ok. ok. moved to realtime. Please keep the log when exception happens.. please add the indexDir path as a last component of this log.. Do u want to continue to the next table if the table config or schema is invalid?. if u dig down in the code, we get back a null whemn tableconfig is invalid. yes, that is the syntax. Done\n. good catch. It is using java serialization. Worst case here is that we don't read history and start afresh, and nothing else breaks.. add a TODO here saying that the factory should be loaded from config.. s/consumerWrapper/kafkaConsumer or pinotKafkaConsumer. s/buildConsumerWrapper/buildConsumer. s/Simple/ConsumerFactoryImpl/SimpleConsumerFactory. ah now i see why you chose to use SimpleConsumerWrapper as the class name (instead of SimpleConsumer) -- so you can minimize changes. \nOK, go for it,. Please add a block of comments against each one of these, defining what they are, who the users may be, and giving examples. . Add a comment here as to what 'size' means.. do we really need all these constructors to start with? Can we add them as we need? Once we have these constructors it is very hard to remove them.\nDoes default null value make sense for a primary datetime field? If not, then we should consider having primary as a different type.  Or, at the minimum, add a check for that in this constructor ? (not preferred). private static string ERROR_STR = \"format must be ....\". is 0 allowed? what does 0 mean?. check which of these setters we actually need. If we can avoid individual setters that is preferred, but I suspect the json parsers need the setters? At the minimum add an annottion & javadoc so that nobody uses the setters. Perhaps @VisibleForTesting will work?. re-checking whether this setter is needed. Same comment as before in terms of annotation and javadoc comments.. Do you need to add it to the set as well as to the list?. can fieldType be a string/float/double?. Not sure if we need so many different versions of addDateTime. Start with one, and add more as needed. . If u did not change this file at all (and it seems like that), then please restore the master version of the file. I would add negative test cases as well, with 0, -1, etc for numbers. If you get IllegalArgumentException in line 233, the other lines will not be executed, right? Isnt it better to actually test for the exception in the line in which you expect it to happen?. I was referring to the switch below, that checks for different dataTypes.. On the rare occasion that nfs breaks, the metrics for bad partitions should shoot up (via segment status checker). Also, uploads to controller should fail as well.. we have the segment status checker bumping metrics for error segments, so we should be ok. I think it is useful for debugging. We can copy a history file from a server and look at it.. will do.. will add comments. good catch. i will fix it so that we return -1 only if we can't find any config.. No, we want to prioritize llc first, and if it is not there, then HLC config.. we just throw the exceptions if there are any, i guess. I did not want this PR to mushroom. A toss-up. I could special-case it inside the code for tests, like I did for segment name.  agreed i could have been consistent with segment name and metrics (the metrics case came in automagically with IDE :-). I can undo the test changes and special-case it if metrics object is null.. we will get a per-table value at the current level. We are adding value to the table guage on each alloc. Alternatively, we can set total MBytes, yes. The result is the same.. We are subtracting he buffer size here, but yes, alternatively we can subtract totalMemBytes from the guage.. I would change this to a 'for' loop to protect against adding a 'continue' statement somewhere in the body of the loop.. Is this class being used? . can u please annotate @Nonnull for bootstrapnodes,clientid, topic, etc.. please add javadoc on what values of 'requestedOffset' is accepted. Can it be null?. what does 'getNextKafkaMessageOffsetAtIndex()' do? I am guessing it gets the offset of the next message? What if this is the last message in the batch?. Please add javadocs, specifying the behavior when index is incorrect, etc.. I don't understand this. If topic is null and partition is MIN_VALUE, then what can the code above do with the consumer? Both controller and server need to (and will) specify a partition and topic, right?. The class does not need DataManager. However, I prefer passing DataManager in, so other configs can be retrieved if we need to do so. Otherwise, the number of arguments keep increasing over time, a la RealtimeSegmentImpl (that I re-factored a few weeks back to reduce the number of args). need to be public?. Because we want to attempt to build inverted index for other columns if possible. See line 169, it is a loop.. Correct. If there is no exception, this object is created fine, and the resources are released in the seal() method.. all the fields are null to begin with, and unload handles the call with null buffer.. Yes, so that we can try to build inverted index for the next field. Not building inverted index is not an error, so no need to abort here.. dont use servlets. see controller example.. ok. please don't print 'e' as an argument (i.e. with {}). Just add 'e' at the end of the log statement.. It is possible to send a curl command to the controller, in which case it does not go through UI. The default is for the UI.\nIf you are particular, I can change it to be optional, and default to true, and also handle a null value inside the method.. Correct, not the scope of this PR. You need to read the design doc for LLC for why 'replication' could not be re-used. In short, 'replication' is the number of realtime nodes that are present in HLC. 'replicasPerPartition' s the number of replicas that consume the same Kafka partition in LLC.. If there is a pure HLC table, we will not have replicasPerPartition configuration.. Better than  replaceAll + replace that is there in PinotSegmentRebalancer (which is the logic that moved here, btw). moved.. done. It is possible for this to happen in some sequence of operations. In fact, we have seen it before.. Hmm. U mean segments that are set to OFFLINE state intentionally? Let us talk about this.. I didnt understand the comment, Let us meet and discuss. The logic has been moved from PinotSegmentRebalancer. And yes, it is for logging.. I don't see a readily usable API in ControllerTenantNameBuilder. Not sure if I should get into the business of translating TableType into ServerType. I will leave it as is for now.. done. done. In the idealstate, they should never be mixed, because they all transition to ONLINE in one atomic set of the idealstate.\nEven if they are mixed, the fact that one of the replicas is ONLINE means that the others can  transition to ONLINE since the segment is available for download.. warn?. warn, or maybe even error?. Don't need 'e' as an argument. Just move it to the end.. s/consumerFactory/consumerFactoryName\nOtherwise the var name is confusing with the reference to the consumer factory.. may be useful log as \"Setting consumer factory to '{}'\". Remove exception as a parameter.. i don't understand. there is a string defined, just use it. r u sure you need this? If you can try without this that may be better.. Do we want to do this via web API? If not, you can omit this, and it won't show up in swagger. I don't think we have swagger for brokers now, do we ?. do we need this?. not sure if we need swagger. consumerFactoryName. info. you should not need lastOffsetposition as an arg. just construct the messagebatch with this position. construct KafkaStreamMetadata and then call a getter.. Not sure if you need this log, but let us keep it for now. Watch for the log appearing too frequently, and we will try to make it once per startup.. Nice.. Good job reducing the number of args. Dont u have to re-add the existing DateTimeFieldSpec (that do not match the name of the new datetime field), if any?. It creates a new segment with the new column? . you should get outgoing granularity spec. For a realtime table, the time col name units, etc. can be different in outgoing than incoming.. throw exception if the original and backflled dirs are same?. ah, in this case because the schema is generated from the avro data, there is no outgoing time spec. Still IMO it is better to get outgpoing time spec, in case this clas is modified to take a schema.... Do you want to add a test with multiple datetimefields?. Not sure where TMP_DIR is coming from, but if backupDir is not defined, maybe you should just not back things up? TMP_DIR may fill up /tmp (if that is the backup dir) and cause a system to become unusable.\nOr, maybe set it to /var/tmp which tends to hold some more data. It may be useful to set up SegmentIndexCreationDriverImpl (via config) so that it can log a message every (say N) rows. I understand this is not something you did, but maybe it is useful to add that information. You decide.. getOutgoingGranularitySpec already does this null check and returns incoming granularity spec. Would be better to take the timeColumnFormat in the constructor along with timeColumnName.. suggest \"pinot.server.instance.realtime.consumerDir\" similar to CONFIG_OF_REALTIME_OFFHEAP_ALLOCATION. throw exception here? . Nice. \nPlease, also change the existing calls to getTimeFormat() to use the other calls u have introduced. Also, add a javadoc to getTimeFormat() pointing to the other methods to use.. Need @JsonIgnore here?. json ignore?. json ignore?. typo\n. not really a buffer, right? I prefer dicrionaryIds. add check for MV here and throw exception?. we have this defined in Constants already. Suggest an info log here will allow us to know which index creator is being used for what column. We should be using Mmap for temporary buffers, so that we can load/create multiple segments in parallel without worrying about MaxDirectMemory. Does not have to be in this PR, but please add a TODO.. Are these conditions possible for segments created in hadoop prior to this change?. Since FileBasedDataManager is now removed, can we just pass in serverConf to the init method? We will need to get rid of DataManager, InstanceDataManager interfaces, but that should be OK since there are no other DataManagers (and none in sight). But those jobs have already run for past segments, right? Unless I am missing something.. ok, agreed.. I believe _activeSegments and _loadingSegments are not used at all. Can be removed.. You should set it to the default logger, to avoid NPE just in case someone adds code to log before calling doInit(). This is useful code to keep around, while needing to debug in production.. I would prefer to leave them as separate if statements instead of relying on order of execution of the two conditions separated by &&. pls rename to 'isAllowed'. You should pick up the accesscontrolfactory class name from configuration. It can be a singleton class, so you can instantiate in HelixServerStarter and inject here?. no need of a setter. use INJECT. Use ControllerAccessException. It also logs correctly. You can add a custom log for 403 there if you want.. nice. fix the message here.. you don't need the try/catch. If it throws exception, a 5xx code will be sent out automatically. I suggest changing the message to: \"Invalid schema. Check controller logs\"\nThe logs will identify which field had an error, if it is possible to do so.. Ah yes. . Doesnt need to be abstract. You can implement a method here that returns the configured decoder class.. right. fixed.. i will add a comment here. The variables are derived from the configs. If offheap is not enabled, then we still need a mem manager for fwd index, but dictionaries are on-heap.. bytes == null || bytes.length == 0. not sure if you want entry.getValue() == null test as well here?. All logic and pre-conditions should be inside the try/catch block, so that we return a correct dataTable to the broker and not an exception trace.. Need to quote it to get the right json, otherwise we cannot parse it using standard json parsers.\n. remove the get & set here. Not needed.. you don't need this logic here. You already do all this in the loadFactory() method of MetadataChangeNotifierFactory. you dont need this. you already have the logic in MetadataChangeNotifierFactory. remove. you need to invoke a static method here.. I would do: oldSchema = _pinotHelixResourceManager.getSchema(schemaName);. add a comment saying the notification is best effort. If controller fails at this point, no notification will be given.. remove thisee lines. The  config for segment fetcher in controller   should be prefixed by pinot.controller.\nthe config for segment fetcher in server should be prefixed by pinot.server.\nAll configs inside have to be duplicated for controller and server as needed depending on the fetchers that they are using. \nI don't see a problem with this. Maybe I don't understand your question. \nChanging things to pinot.common will certainly break anyone who has been using pinot.server. for a long time (and it has been there for years now).. Yes, there is a chance that other users may be using pinot.server config in the controller between Sep and now. We will take that chance since this is a relatively new feature and small time window. The worst that will happen is that the hdfs fetcher (or any other custom fetchers that they may have added) will fail to initialize, and they will need to re-configure. Keeping pinot.server config inside controller is bad for the long run. Unfortunate that it slipped through the code.. suggest rename 'crc' to ifMatchSegmentCrc to clarify what it signifies.\nAlso, please add some comments that this is useful only for segment push to controller. This class seems to be a generic FileUpload from anywhere to anywhere...\nLastly, the type of ifMatchSegmentCrc should be long, not string. Can u get the string \"If-Match\" from some apache class?. Please rename 'crc' to 'ifMatchSegmentCrc'\nAlso, crc should be a long?. rename 'crc' to originalSegmentCrc?. please add some comments on CRC_KEY. Also, suggest renaming it to ORIGINAL_SEGMENT_CRC_KEY. suggest adding a Header[] argument instead of crc.  please add some comments here as to what this is, and how it is used. not used? you can remove this line. why do you need push status in segment metadata impl?. Pragma is an old http 1.0 compat header, and seems to be not he right one to use here. \nI think you can use \"User-Agent\", and set the value to \"pinot-minion-\". Otherwise, you can use a header like \"X-Sender-Identity\" (or, anything prefixed with an X). Let us chat about this and reach a conclusion.. your comments say it will be populated only when segment is committing. Are you populating it with the string \"NONE\" even otherwise?. will be nice to have an example here. Maybe \"COMMITTING-1513013204080\" where time is in msecs since epoch? Better yet, something like:  \"COMMITTING-20171210T09:31:55.765\" ?. Do we need the copy here? can we return a slice of the dataBuffer here?. will be super useful if you can add a picture here, with different fiends in version 1 and beyond.. suggest rename VERSION to CURRENT_VERSION. CURRENT_VERSION?. s/previous version/version 1/. Nice. thanks for doing this.. s/previous version/version 1/. You should return Response.Status.NOT_ACCEPTABLE. you can remove this comment :). please use a static final string  for \"http.useragent\", better yet, try to find the definition for this string in the HttpParams (or another) object.\n. please use static final strings for \"Pinot-Minion\" and the version.\nWe will fill in the version later.. I have added some links. Most SSL APIs don't even have visible names for the method arguments, so there is little that can be done to name the strings used. I have tried my best after reading some of the links that I have added in the class.. Yes, good point, I will add retries.. :). Not sure, but that is existing code. I have not looked into modifying that. My guess would be that first 1k bytes of a server should be good enough to indicate an error. There is no point in reading a ton of data, given that it is a 400 anyway.. Hmm, so u are suggesting adding another config variable. Let me think some more, and maybe we can add one. . why are we versioning segment zk metadata?. Are you intending to use znode version here?. suggest name getSegmentMetadataZnRecord. why not pass 'dt' as the parameter instead of human readable time and the format and then extracgting the time inside tooLate()?. Bump a metric here. We can raise an alert if this condition hits. You should log it as an ERROR. Don't you need to return if you cannot parse CRC? Minion is always expected to send the IF_MATCH header, right?. You should put the entire rest of the logic in a try/catch and unset segmentPushStatus() in the finally block.. we don't know that it is identical. The method ifRefreshAnExistedSegment() also refuses segments that are older, right? (And rename that method to 'shouldRefreshSegment()' please, and move the log to that method, so that it logs the right reason why a segment was not refreshed.). will be good to add a comment here on what this config means. Also, suggest rename to \"segment.commit.timeout.millis\". You should bump a different (new) metric. ControllerMeter.NUMBER_SEGMENT_COMMIT_TIMEOUT_EXCEEDED. We will have alerts on this one.. Will hadoop job also send this header? If not, should you not check for miniontHeaderPresent?. You need to check against whether or not the metadata was updated. Not if (minionConfigured). Add a comment here\n\"we are skipping this check for minion because....\". Utils.retrhowEXception. add a boolean here saying that metadata has been set.. move this line below 435. This is a very long time to store a segment, but I guess we are being conservative here. That is fine. In that case, perhaps the sender (hadoop job) should set the socket read timeout to this number, maybe. Not sure if we can find a way to send 100 continue response as we get the segment... something to think about.. can we move this line to below 454?. Can we move this line to below 454?. we can do this check before we update metadata right?. Do we need a catch here at all?. Use long instead of 'Long'. Use long instead of Long. OK. This is the class config for the protocol. If we don't have this, we instantiate the class multiple times, and see any instantiation logs multiple times.\nThe first look instantiates any classes configured\nthe second one instantiates any remaining ones in the default list\nand last loop calls init on all classes instantiated.. We discussed this alternative, and arrived at the conclusion that we don't want to add extra zk writes for use  cases that do not need it. We can talk about this.. You may want to add in the default user agent parameter as well? I am fine adding things later as long as the parser at the other end accommodates for it.. Any metrics to be updated regarding time taken to process a segment?. why throw exception when the task is cancelled?. Utils.rethrow. Are there any specific exceptions that we can throw to retry (or not retry) the task? Do we see any returns from the sub-classes that indicate whether or not to retry the task?. we will use table config. . The iterator logic seems too complex. Will the following work?\nhasNext() {\n     if (_recordPurger == null) {\n        if (_recordReader.hasNext()) {\n          _nextRow = _recordReader.next(_nextRow);\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        while (_recordReader.hasNext()) {\n          _nextRow = _recordReader.next(_nextRow);\n          if (_recordPurger.shouldPurge(_nextRow)) {\n            _numRecordsPurged++;\n            continue;\n          }\n          return true;\n        }\n        return false;\n      }\n}\nnext() {\n    if (_recordModifier != null) {\n        if (_recordModifier.modifyRecord(_nextRow)) {\n          _numRecordsModified++;\n        }\n      }\n      return _nextRow;\n}. minion history will be a hashmap of minion-task-name to timestamp. the timestamp will be the last time that particular task touched the segment.\nThis will mean a change to the existing sgement metadata (not named appropriately) that has been out for about a week, or add a new segment metadatra and render the old one unused.. ok, without the finished flag, i am fine with this.. please add this as a method in PinotUserAgentHeader class. Suggest\nString constructUserAgentHeader(String taskType) {\n}\nand you can replace lines 116 through 118 with this method call.. Suggest rename to PinotMinionUserAgentHeader. Don't catch NPE. Just handle the case when UserAgentHeader is null. \n  . This should be a gauge, not a meter. Please fix it. You should add an else clause in which you set the gauge back to 0. Otherwise the alert will trigger forever\n  . haha. ideally, on the last try we output \"won't retry\", but that maybe  hard witht he existing retry interface, I suppose.. May want to add a comment here that older controllers did not send content length. Not sure what HttpEntity.getContentLength() does if content length header is missing.. the earlier code included 1k bytes from the response body into the error message.. Need to check if third-eye is using some of these APIs. com.sun?. please check for presense of contentLength. If it is absent, then allow any length. Now that this is a generic download (not necessarily from controller), we should check.. Can provide a separate method to initialize httpClient, and override it in HttpsSegmentFetcher? You can pass in sslcontext as a null from here, and the real one in https? then you would not have to duplicate the lines to get retrycount and retry wait time in both classes. Will do. Correct me if I am wrong, but the earlier piece of code logs the actual exception encountered during attempts, whereas this one will only throw AttemptsExceededException ?. Use the final int that you have defined.. can u please change the comparison to be NOT IN_PROGRESS?  I feel more comfortable checking for the exact state we should be in, before we continue.. Used to format the result in hex.. No, we can remove the NU. The NU was meant for not used. Let me take a look. Nit.\nIf expectedCrc is sent as a space character or somehow 0 length string, then we won't be able to see it in the log. Given that it has not parsed, it may be best to include the value of expectedCrcStr within single quotes. Should this not be a 400 table not found? Will precondition here end up sending back a 500?. I don't remember what this param is set to if the QueryParam is not present in the request. Have you verified that it does not throw exception? or set to some weird value?. pls add comments here as to what the value will be if the client did not set it at all.. +1, very good point.\n. I had it like that before, but changed it to string, so that the string-to-uri conversion is in one place.  i would like to keep it that way. . fixed. Currently the request object returns a url string with all the parameters.. Let us not have this class depend on rebalancer. In fact, rebalance is now a controller command so you can remove the PinotSegmentRebalancer class altogether.. We get the number of partitions for this topic from Kafka and pass it down to setupHelixEntries. Otherwise, we will need to get kafka partitions for all tables from kafka if any of them changes number of partitions. Better to do it for the table added (or the one that re-partitioned).. What happens when one kafka partition change is detected in the master controller, and vlauidation manager is updating a bunch of znodes, and a table gets added in another controller, and it tries to update the same set of znodes? What happens if a controller fails after updating some znodes and not others?. This needs to be outside the loop, set to 0 if there are no missing segments, right? Otherwise, the gauge for the table, once set, can never be reset to 0. volatilie? Why transient? . You can return a boolean from here. The idea was to exit the command with an exit status of 1 (non-zero) if the cluster is not stable, and 0 if the cluster is. Not sure if our Command hiearchy allows return codes, or do we have to thrown an exception in order to exit with a non-zero code (in Linux). I would name maps by the items they represent (in this case _tableToNumPartitions, or something like that). @kishoreg , PartitionAwareRealtimeRoutingTableBuilder attempts to optimize the number of servers to which the request is sent in the case that the number of consuming  hosts is a multiple of number of replicas, AND we do a uniform (kafka/stream) partition allocation strategy (what is referred to as 'spraying' in this PR). The routing table builder will still work if these conditions don't match, except that the request fan-out will be sub-optimal for the high performance use cases where we want to minimize the number of servers participating in a query.\nWhat we are attempting to do here is to continue to preserve that optimized behavior as much as possible. Using helix auto-rebalancer will  throw off partition-aware routing completely. \nWe can discuss more offline.. shouldnt need to start a controller. Can you inherit from PinotZkChanger?. initialized to 0, because the cluster is stable if there are no tables in it.\nAlso, rename isStable as unstablePartitionCount. also log the number of partitions that are not stable. good to log the number of tables scanned.. these suffixes help us look over the logs and see which part allocates memory. so please add these back.. we don't generate stream partition assignment based on partition aware routing anymore, right? Is this a left-over comment?. Also, you can move the example comments to the respective strategy implementations. These are defined in CommonConstants.StateModel. you can rename RealtimeIndexOffHeapMemoryManager to MemoryManager (or whatever generic name you like) and rename getSegmentName() method to getAllocationContext(), and you should be good to go.\nThe class is not correctly named, but that was intentionally so, since we were using it in the realtime context only.. thanks for verification with jmh. not sure if it guaranteed to be 0, maybe dependent on the mem manager. may want to make that clear that it is user's responsibility to use it appropriately.. Since this class is expected to be for some generic use, perhaps you can just remove the \"segment:column\" from the log message.. will do. will do. will do. I think the name is self-describing, and the argument description mentions what we are setting, no?. Changed to \"Inconsistent keystore file and keystore password specification\". No, I insist it be there :-)\n. good point.. not used, removed. it was left over from the renaming of the old var. No, this is the default, which is \"accept all server certs\" and \"do not present any client certs\". Done. ok. i will leave it as it is. the config names can be confusing. ah, of course. let us discuss in person to finalize this. Arraylist is not threadsafe, so I think you need to construct a new list and set the _dataBuffers to the new value when you add new buffers. Also, _dataBuffers should be volatile. I guess he can set a row if far into the future here. can u also fix the comment if it is not applicable? We are only testing for presence of task type, maybe 1, maybe many, right?. In this PR it is always a power of 2. Perhaps we can assert power of 2 and use bit operations?. ok, i will remove the comment. Correct, this may happen.The intention here is that all tables reach stability, so we are OK. Worst case, we time out, and there is a message that says which tables are not stable, so it is ok.. It is ok in this case. The time taken to check should be very small for a reasonable number of tables in the cluster.. The way it was done was that the protocol handler uses the leader locator to get the leader, and send the request. So, the protocol handler is the one that can recognize if the response is \"not leader\", so it informs the leader locator that its response was wrong, and it needs to refresh.\nIn the previous check-in, these lines got removed accidentally, so I had to put them back in as a hotfix.\nWe can discuss other implementations as applicable in this case.. makes sense.. Only the factory is created, right? We should be able to create new RebalanceStrategy objects from the same factory. The rebalance API gets it from tableconfig each time.. Dont you need another param to rebalance consuming segments? Or, is that a different PR?. rename to writeStreamPartitionAssignment() or saveStreamPartitionAssignment().\nOr, we can have another PR to rename Kafka into stream and pull out the kafka dependent code into a separate class.. Rename to RebalanceUserParams?. I would separate these into realtime and offline tag config.. includeConsumingSegments instead of rebalanceConsuming?. may adding replica in the key is a good idea? Let us touch base with @snleee and decide. Alternatively we can construct one of these for each replica.. is tableconfig needed as an argument? Use it in the constructor of the Strategy if it is needed for a particular strategy.. for offline tables or tables that do not have partitioned data, it is better to return an empty partition assignment object rather than null.. better to move the handling of zn record to be inside stream partition generator (and maybe we can choose a new name for it). add a comment regarding the race codnition discussion we had.. updateIdealState() ?. No, the number of partitions we consider for rebalancing is the last one that we know about the stream. we will leave it the periodic thread in controller to find out if new partitions have come up in the stream, and re-write the partition assignment znode,. It is best to sort the segments and get the highest number for each partition, and treat them as Consuming segments. If you find partitions that you don't know about leave them as they are.. Once you get the names of the latest segments for each partition, you can mark them as CONSUMING state even if they are OFFLINE in the current IDEALSTATE record. The worst that will happen is that they go back to OFFLINE state because of some issues with consumption. the log may be misleading if we have already rebalanced consuming segments.. s/partitions/segments/ to avoid confusion with stream partitions.. not clear what the todo is?. removeConsumingAndHistoricalSegments()?. Remove. Can we use PropertiesConfiguration instead? Then we reduce one new class.. Not sure. For now, we are backing out emitting the metric for realtime tables.. aggregateMetrics?. can u pls move this up to line 989, so we have the builder in one place?. So, lastUpdatedRawDocuments now has the number of rows indexed (instead of raw docs). You may want to rename it as such.  Perhaps this var can be a volatile int instead of AtomicLong ... not sure why it is that way.. s/rowsIndexed/_numRowsIndexed/ ? As I understand it, rowsIndexed is the number of rows indexed since the last update, but _numRowsIndexed is the number of rows indexed since start of segment.. supported?. suggest rename to isRelocateCompletedSegments, but your choice. pls add a comment that the key in the map should be raw table name, not tablename with type.. user params? user configs? your choice. I prefer params. we should find a way to include new partition assignment in the output of dryrun. you can add a comment here that it is possible that we turn an OFFLINE state into CONSUMING state in the process, but that should be OK since the only way a CONSUMING segment can become OFFLINE is when there are temporary or permanent issues consuming from the incoming event stream. If it turns back into CONSUMING, we will attempt to consume again (and may fail again if the fault is permanent). No, we don't need to do this for retention manager, segment status checker, we only need it when we return NOT_LEADER as a part of LLC consumption. thanks,. pls add the znode path in the log so we know what the segment is about, thanks. suspect this is for testing so that we can indepdently override each method. will leave it to neha. pls include znode path as well in the log, thanks. the servers handle receiving false just fine. they retry to the appropriate lead controller again.. can u push step 1 after determining if the partition assignment is present? basically, check all pre-conditions before atempting to execute the transaction. thanks. there is a comment \"when multiple segments of the same table...\" . to justify the lock. It was added more than a year ago. without the lock, we were seeing each thread contending to update the idealstate, and backing off exponentially. Never saw the problem after the lock.\nWe can potentially batch the updates, but that is an optimization.... No, for calls from validation manager. can u move these coments to be after line 970?. else?. pls move these comments to below line 989. Nice. Yes, it is possible that we clear first step but fail in the second. In that case, the servers will get false, and will retry.\nNow, if the failure happens due to controller leadership switch, then the new leader will finish the transaction and start a new segment.\nIf the failure happens due to a zk disconnect, but the current controller still retains leadership, then it will wait for the next ValidationManager run to get fixed. Hopefully this case is rare.. TODO \ndocument the APIs\nchange references to high and low level like you pointed out.. please add TODO make this configurable by injecting a class that implements the interface.. Note to myself. Should this verifier be added back for other classes?. The getPartitionOffset() should be a method in a class KafkaStreamInfoProvider (name?) implementing StreamInfoProvider. Can be a TODO in StreamMetadata to remove the method in that interface and move it to another class.. This is a kafka specific class, right? Why call it a generic name?. Can we have the config similar to that in KafkaHighLevelStreamProviderConfig (using PeriodFormatter)? thanks. we should base-class the logic for this one, ValidationManager, RetentionManager, and SegmentStatusChecker. You can add it as TODO or do it in this PR, either way is fine.. getAllRealtimeTables(). Do the whole thing under a try/catch, moving on (after logging the table name that had a problem) if there is an issue with one table. Otherwise, we may never move past a table that had any exception for whatever reason.. Maybe the return type can be IdealState? (but the caller can use the map fields for replacing segments). We may need to document that it is a partial idealstate (containing only the segments that have been moved). Please add a TODO here to use the SegmentAssigmentStrategy to place newly completed segments. (2) is good, but then we will need to sort the segments anyway. If we have a table that has a long retention for realtime, there may be a lot of segments in there..... Nice job on the test, thanks.. +1, good catch. RealtimeSegmentRelocator? . You can change this to controller.segment.relocation.frequency and accept strings using PeriodFormatter. Also, you may want to consider controller.realtime.segment.relocation.frequency. yes, good point.. remove idealstate argument here. It will be read again by helix utils. fold these lines into rebalanceIdelState if it is not there already. +1, just log the headers that we need to log.. Can't we do all the updates to 'idealState' in the method rebalanceIdealState(...) and just return the updated idealState object?. RESPONSE_SIZE_UPPER_BOUND?. Use MutableLong instead, and rename to totalRespSize. while at it, can we also change 8097 to DEFAULT_ADMIN_API_PORT defined in CommonConstants? thx. Do you want to check for realtime tables here again and throw an exception?. Why not eliminate the bootstrap argument altogether? If a table has replica group configured, we will rebalance per replica group (or create one). Otherwise we will not even use this object.. removedServers = new ArrayList<>(oldServerInstanes);\nremovedServers.removeAll(serverInstances);\naddedServers = new ArrayList<>(serverInstances);\naddedServers.removeAll(oldServerInstances);. You should at least log an INFO with the value of variables computed, and why the code has reached this conclusion.  It will help us debug when an operator claims that replica group rebalance does not work. Ideally, provide that error back to the admin as well, so that they know what they are doing wrong (e.g. trying to do multiple operations in one go). We can avoid one call that way :). I suppose increasing/decreasing number of partitions is not allowed, or currently unsupported? Good to add a comment here . removeAll(). use removeAll() like in other method reviewed. \"Modifies in-momory ideal state to Rebalance segments for table with replica-group based segment assignment.\". I don't understand why segments are lost. We should rebalance segments into other servers, right?. clarification question so I can wrap my head around this. Unless we are \"bootstrapping\", I suppose all segments will be covered exactly once amongst the servers? . So, this returns empty lists for each server unless it is a bootstrap mode?. It is not really max consuming servers we want, but we want to start with a certain number of consuming servers, and maybe increase it over time as other parameters may change. So, the config should be whether to auto-adjust consuming servers or not. \nBut we can wait until we introduce the config, we may want to do it another way (say, give it a different assignment strategy). For now, let us not do the auto-adjustment at all, and always use all servers.. You can note that for now, this is for Realtime (LLC) only, to be renamed as StreamPartitionGenerator once we get rid of the other class with the same name. We need to check for specific exception when the number of stream partitions change underneath us. The only way to flag this is to raise a metric, so the caller needs to check whether partition assignment succeeded without exception. It will be useful to throw a compile time exception here to force a check by the caller.. Let us not have this logic here. Instead, you can call a protected method to get numInstances to use, and return the number of consuming tagged instances in the base class. We will sub-class later. Or, just use the consuming Tagged isntances for now, and we will add a new partition assignemtn strategy later.. for now, leave out this logic. let us see how we can fit it in later. next steps should be to create a factory and instantiate this depending on strategy. index  = (index+1) % numInstancesToUse  : makes it explicit assignment in one place. maybe randomize it so we get different starting points, and invoke the test a few different times?\nif you are doing this, always a good idea to System.println() the seed value, so that we can reproduce a failing test case if we want to.\nyou can add this later if you choose to.. idealstate will never have ERROR in it. makes sense to add a method getLatestSegmentsAndPartitions() in the code, and then use that in the test as well?. IdealStateBuilderUtil?. better to throw a compile exception so the caller is forced to check. If it is new table access or rebalance, we can throw back the exception, but if it is on a dynamic change, we need to update a metric.. pls annotate @VisibleForTesting. pls throw specific compile time exception  instead of a generic one.. you still want to start from a random point to accommodate multi-tenant tables now, right?. See other comment, You still need to start from a random start point, in case number of servers exceed number of partitions times number of replicas. You should set up a seed and print the seed ahead of time so that the test can be reproduced  in case of failure. . rename variable as expectException? or willThrowException?. catch InvalidConfigException?. 12 consuming instances?. 6 consuming instances?. If this is InvalidConfigException, then it is not a 5xx return code right?. you can add throw Exception here to the test, and that way you don't have to catch all exceptions that you don't expect. Test will fail if exceptions are thrown.. i still dont see a need for this flag. please remove this and provide simpler atomic primitives. We can always add the more complex funcitonality later, but once we provide an API we are stuck with it forever,. Perhaps setting the value to a higher number than Long.MIN_VALUE may help? Otherwise it may be hard to eye-ball a graph showing the values and decipher whether the value was 0, 1, or 2 before the curve takes a plunge. May be -1 will be ok here. Your call.. Same as above.. setSegmentState() instead of transitionToState() ?. Can u pls add some comments here as to what this means (max time elapsed between the time when step 1 is done, and step 3 is not done while committing segments, including any back-offs for step 2). pls modify the comment above. we are not fixing anything during controller leadership transfer now. Only on validation manager. Also, maybe the other part of the comment can be moved to the beginning of validateLLC() method?. you can add an assert here that the segment that is completing is in CONSUMING state. . pls add a comment that this is also used for new table creations.\nWe need to check the logs and see if they are misleading in case of new table creation.. for new tables, we should actually throw an error here (and not bump any metric).  Perhaps we should pull out the code to create new partition segments.... incomplete comment. \n3. All instances of a segment are in OFFLINE state. Create a new segment (with the next seq number) and restart consumption from the same offset (if possible) or a newer offset (if realtime stream does not have the same offset). In latter case, report data loss.. can u move these lines below the comment please? thanks. can u add more comments here?the class really keeps a mapping of  segment names that need to move from CONSUMING to ONLINE,   to new segment names (to be created in CONSUMING state). In some cases, we will not have old segment names (e.g. when a new partition is detected, or the old segment is OFFLINE).\nMaybe we can keep two different sets instead? One that keeps the old segment that need to move to ONLINE and another that keeps new segments that need to be created in CONSUMING mode. Then the logic is more readable..  this method should not be deprecated :-). cant deprecate this method. we are missing the logic to update the nonconsumingPartitionCouintMetric (in validationmanager), but i think that metric was not updated correctly anyway. We need to create a new controller guage that reflects this. We can do that independently.. exceptionExpected should be true. Maybe you can pass in the type of exception (if null, then no exception is expected) to the verify method.. this value should be false for new table all the time, right?. easier to split into 3 independent test cases?. cant we call the partition assignment generator directly?. always false? can we remove the argument and the assert?. is this a deep copy? you can create a copy of the idealstate. i think there is a method to do that.. we want a deep copy right? you may have to iterate and copy each metadata. final. Move the seed to the top at the test level and add a comment why we are printing to system.out. deep copy. the comments are not clear. Would it help if you create a few final boolean variables for each case?\n1. allSegmentsOffline\n2. step3NotDone\n3. tooSoon\n4. step2NotDone\n5. instancesChanged\n6. nPartitionsIncreased\nand then run the individual tests (perhaps in different methods if necessary). fixed. It should be \"do not have\". OK, combined.. Done. Let us change this to invert the logic. if (SegmentName.isLowLevelConsumerSegmentName()...) seems better.. may be worth adding a comment here that technically this can happen in the code path only if there is already an idealstate with HLC segments in it, and t has been disabled.. Remove the try/catch at higher level, and restrict it to this call. If there is an exception that happens elsewhere in the test, we want the test to fail. Something like this:\ntry {\n  segmentManager.setUpNewTable(...)\n} catch (Exception e) {\n  Assert.assertTrue(exceptionExpected);\n}\nIn fact, better to catch exact exception if possible. (e.g. InvalidConfigException). Anything else will be unacceptable. Can we remove the exception expected variable altogether, since none of the tests in this method expect exceptions anymore.. we never expect exception here, so remove the try/catch and the argument to the method.. move the logic of the seed to the top of the test case (in setup), and make new Random(seed) an instance variable. That way, any method that wants to randomize can use this instance var.. s/not present/new segment not present/. would it be better to always set tooSoon to false in the beginning of the loop? . If all replicas are offline, the real code should not worry about whether it is too soon to correct or no. So, either we have a code bug or a test bug? :-). u mean the latest segemnt in idealstate. please clarify. I think this assert statement is not doing the comparison as we expect. It just asserts that oldMapFields is a subset of idealState.getRecord().getMapFields(). can we make this an enum for readability?. so, if the random is not 1, 2, or 3,  you want none of these changes applied, right? i.e. we want that 80% of the time there should be no changes, otherwise have one of these 3 changes. Can you code it up that way? and have enums as well like requested above? thanks,. +1\nthrow a controllerApplicationException with the right message and status code. . The exception message is that we cannot fetch table config. The error message should be \"Invalid table configuration for table \" + tableName.  It is not an InternalServerException, rather InvalidConfigException.\nSame if tableconfig is null, so you can fold it here.. this is not a bad request. It is an idempotent operation, so why throw exception ? why not return success? . You should catch the exceptions that are being thrown in PinotHelixResourceManager for this call sequence. In this case, it should be InvalidConfig, in which case you return 4xx, and any other in which case you return 5xx. can we make it a string of \"segment.flush.threshold.time\", and format it exactly like the flush threshold time in config? (i.e. be able to accept something like \"6h\"). +1. we don't need this, do we? we can call the setter whether or not _timeColumnName is null?. nit: why move these methods?. Instead of a new class, maybe move it to TimeUtils?. nice.. since u have 'd' as well, you may want to add a test for days. Can we rename this class to PinotLLCRealtimeSegmentManagerTest now that the old class is gone?. Utils.rethrow(e). remove this class please.. +1, please avoid mixing format related changes with logic changes. Make a separate PR for format related changes if they bother you.. what's wrong with the javadoc convention? I prefer to have javadocs in interface classes. Done. segment name and offset are already in the segmentReqest params, so we can remove them from additional parameters.. committingSegmentSizeBytes may be -1 if the servers are not upgraded yet? We need a backup strategy if that happens.... These are not really min & max allowed, right? They are limits below and above which we ascend or descend rapidly? Also, you should derive these numbers from IDEAL_SSEGMENT_SIZE_BYTES. same line?. visible for test?. let us honor the max time from table config instead of hard-coding to 24h in case some kafka topics have lower rention. add segment name to log. use a visible for testing getter to get the constants from FlushThrsholdUpdateManager, and avoid the tests knowing what those values actally are.. The prevRatio should be the last calculated/applied ratio. You need to save it in the hash for that table so that you can use that next time a segment completes.. we should look to computing _latestSegmentRowsToSizeRatio on a per partition basis so that we don't influence the new segment characterisitcs too soon. But that has a con side in terms of maintaining more data in heap... something to evaluate. Or, maybe keep the stats only for partition 0..... gj on testing. final?. we do we pass 3 table names in the argument? why not just pass the raw table name and construct the other two s needed?. I am assuming this will be logged for each request? If so, please remove the log or make it debug. same comment for logging, will not repeat. this is not an ERROR log. should be info.\nAlso, bump a metric when quota is exceeded. no need to log here. Shouldn't you get it from KafkaLowLevelStreamProvviderConfig? I think it goes to high level config if low level isnot configured.. A better way to split this may be to introduce a class CommitingSegmentDescriptor, which has most of the fields in RequestParams. PartitionAssingment need not be in this class, but can be a separate argument to the flush threshold updater. Use CommittingSegmentDescriptor when calling this API. Keep the usage of ReqParams local to this file. Use CommittingSegmentDescriptor here. sorry, my bad. good to add a comment here that we have an option to use numRowsConsumed here, but we may be bouncing back & forth between that value and twice that value (if it is much lower). \nPerhaps we can set it to numRowsConsumed * 1.1?. Please make a static int for 1.1 and use it for the arithmetic as well as the log message. Or, you can have a constructor that takes RequestParams in the argument and copies over. That may be the only constructor we will need?. if we dont need these constructrs we can delete them. Instead of \"Host endpoint\", can you please change it to \"Server\"? thanks.. You should not be importing Server constants into controller. Please remove the code to pick up default admin port, because the server updates its own instance config with the admin port information. If somehow that update is wrong, then we should not try connecting to that server at all. Please be sure to print helixInstanceConfig.getHostName() whenever the admin port is not present or not parsable.. y, same q. Perhaps we should doc it as \"broker tag prefix\"?. this is fine, alternatively you can do idealStateBuilder.clear() as well I suppose.. you can change it to just throw Exception. If you are checking for exact msg in the exception, then please define a public static string in the code and re-use it here.. PROPERTYSTORE/CONFIGS/CLUSTER/tenantIsolationEnabled is a boolean in the cluster config. This is a helper method to get the value of that boolean. As are other methods in the same class to get stuff from propertystore.. The tag override config is the config holder. This class is the one that converts it to how we want it to behave if the config is not present. I would prefer that config classes return what exactly is in the config.. Agreed, Builder is not quite the right name, given there is a pattern around that name.\nTagNameUtils? . Sure. The comment in the commit indicates why. It is not really a Tenant name builder, it is a Tag name builder. So the class was changed. @npawar forgot to delete the old class, I will delete it in the next commit to this branch.. I suppose this is coming from OffheapBitmapInvertedIndexCreator, and we are protecting against the server getting killed while the temp files are in place?\nWould it make sense to make a call to OffheapBitmapInvertedIndexCreator to clear its tmp files?  Or, would it make sense to simply delete *.tmp (assuming every other class names its droppings with that extension)?. principal?. If src must be a file, then\n(a) check for that in the implementation and\n(b) throw exception if it is a directory. Same comment as 'move'. throws illegal arg if segmentUri is a directory?\nAlso, why call it segment URI? Does the fs care if it is a segment or not? Do we insist that it be a segment?. s/principle/principal/. We pick partition 0 for the reason that it always exists in every topic of the stream. If partition 0 has an issue consuming, we will have alerts that should lead to fixing the issue. The worst that will happen when partition 0 is not consuming is that the learning part will stop at what was learned before, so the ratio will not change. Not a catastrophe (compared to partition 0 not consuming at all). No, but why complicate the logic taking averages of all partitions? . This is not a part of this PR, but I agree we can choose a smaller number. Not sure how to pick a number, though. I will add a TODO for now.. newly added method is called once when the object is first created during system startup, so synchronization is not required for this call.\nNot sure what you had in mind about comments, but yes, let us chat and what comments you think will be useful.. add the path name in the assert print. will be good to print the completed tag here as well,. nice. Can you please add a comment that all implementations of this interface must be  stateful, and you can only add items in sequence of docId? thanks. Can you try using larray? It supports mmapping the files. With mmap, we don't have to limit the number of inv index created, or somehow make sure that the jvm is started with the max amount of memory for all inv indices to be created in parallel.\nAlternativey (safer, tested) can you create a list of PinotDataBuffer objects? It may be a bit more complex in implementation, but will save a lot in operational cost. Speed is not a concern here, so we should be good.. Just so we are all on the same page:\nA segment can have all its replicas in OFFLINE state and metadata as IN_PROGRESS if there is some problem with the stream consumption (say, a hitch in the stream source). In this case, after several retries, the server stops consumption and marks itself OFFLINE. If all replicas have trouble consuming that partition, they will all mark themselves as OFFLINE. If this happens, then the validation manager will triggger a method in PinotLLCRealtimeSegmentManager to fix the partition by creating new segments for the partition that stopped consumption (using the same start offset as in the segment that stopped consumption). Note that it will leave the previous segment in place, for debugging purpose. This logic in retention manager assumes that debugging is not needed for these segments after OLD_LLC_SEGMENT_RETENTION_IN_MILLIS, and removes those idealstate entries (and segment metadata). It uses the same segment delete logic that already handles removal in proper sequence, waiting for external state to be removed, etc. Didn't want to invent new logic to remove segment metadata and idealstate entries here.. Since the sequence of segment deletion is to remove segment from Idealstate first, wait for it to go away from externalview, and then remove metadata (and any copies in storage), we initiate the first step in retention manager and move on. The second step may happen much later, depending on Helix performance. A controller could get restarted before the second step happens. In that case, the new controller does not retain any memory of segments to be deleted. So, we also handle the case where the segment metadata is present and idealstate does not have the segment. The metadata, in this case, should be at least several days old (debugging days, as I mention before)\nIt happens that this condition (of segment metadata being present and idealsgtate not being there) can also exist during a brand new segment creation. It is that window that we avoid by checking time here.. @npawar  can we have one  time check up front and all the other checks inside that?. nit: call add() in sequece starting with docid 0. I think indexDir is unique, just confiirming that if multiple segments of the same table are being loaded we won't collide on mmap files. this is nice, the only problem is that our metrics on memory allocated will now be off. I am not sure how to fix the problem other than using list of pinot data buffers. makeNextSegmentName()?. checking for all states ONLINE will not work all the time (what if one of the realtime hosts is OFFLINE)?\nWe should be checking for absence of CONSUMING segments. i would feel more comfortable if you add a TODO here as well, since these APIs will also change when we make large bufferes trackable? thanks. We need to get that in fairly quickly, since we don't want to be allocating buffers without tracking them via metrics.. this should be made configurable, since we allocate all the locks all the time. Or, maybe allocate locks on demand?. We should keep this code. This is the one that allows us to specify a time out on a per query basis from the broker.. thanks for adding this string check.  As there are so many exceptions possible, it is best to check that we are getting the exception that we expect, from the place we expect it.\nAn alternative is to use a specific exception (in this case, a new pinot exception perhaps), but I am fine with this.. this cannot happen anymore, so the comment is not consistent with the earlier fix that was in there. So, we should just reference the earlier PR, and say that it has been fixed, but handling the case here does not cost any more complexity and provides the protection just in case.. Is it better to do a check like this before applying the correction?\nif (isallInstancesOffline() || !isTooSoonToCorrect(latestMetadata)) {\n  // apply correction\n}\nthis will protect us against other possible races that we don't know about yet. I can't think of any right now, but that is not to say that it does not exist.. We should be failing table add if schema is null. I think there was a PR that was merged which fixes the table add API. In that case, this null condition should arise only if someone deletes a schema, right? Precondition check seems fine for that? Maybe I am missing something?. I think it is OK to not do a Preconditions check here. We should not fail a query because of some bug in our code that calls stop() twice. I would suggest to replace this with a warning and return. should you account for the fact that this may be negative (if stop is invoked from a different thread)?. I think we are looking to get absolute time in this log, ns time is not going to help us. I am not sure how to get that unless we record both System.currentMillis and System.nanos on query arrival. On the other hand, this is a debug log, so maybe we are ok .... can we remove these comments about condition 2, and just reference the PR?. can we use the new method on makeNextSegmentName here?. Can you please add a log in isTooSoonToCorrect method (log only if it returns true). It should log the segment name and the times it is comparing. Thanks.. minor. you can just log the segment name. That should include the seq number, so we are fine.. yes, will fix.. realtime.segment.flush.desired.size?\nI realize I have one too many 'segment' in there. I like to keep the realtime.segment.flush in place with the other related configs that start with the same prefix.. Yup, removed.. Is this used? Are you planning to remove it later? If so, please add an @ deprecated. Prefer to remove all usages of this method, since we concluded that nanos and millis don't mix.. timercontext has time that has been obtained from getCurrentMillis (after your recent PR), right? If so, we should not be doing math between Nanotime and millis, right?. We should add logic here to get the timeout from BrokerRequest (and yes, we should add time out field to the broker request as well, but that can come in later). Not really. We use the TimeBoundary service to compute how to route queries. For example, if the max(timeColumn) in offline segments is day N, and the time unit is DAYS, then we query offline segments until day N-1 and realtime for the rest of the days.. Typically a little more than 2 days, because day N's  data is likely to be available in offline sometime during day N+1. and would have a max(timeColumn) value of N. So, queries that came in on day N+1 just before the push would have seen N-1 as the max(timeColumn), and therefore using segments for day N-2 and before while querying the offline table. This means that we need a little more than 2 days (all of N-1, all of N and some of N+1). So, maybe we can default to 2.5 days (or, 60 hours). RealtimeProvisioningHelper ?. Since we have a stats history file, it will pick up from all the segments and average it out.. There will be no stats file to start with, so we don't need to deserialize anything here, right?. will be good to add a comment here saying why you are creating a copy before using the stats file. so, this is just to make sure that the stats file is readable? I assume that the copy call above will fail if the origin file does not exist, or if the copy is not successful.. A block comment here describing your algorithm will be nice.. Do you want to do this math in seconds instead of minutes? For high ingestion topics, it may make significant difference?. may be better to include the increment of j in the for() statement, so that statements like 'continue' are handled correctly. Something like this:\nfor (int j = 0; j < numHosts.length; j++) {\n  numHostsToProvision = numHosts[j]\nSame for the outer for loop. Not sure if it is good to put out a warning here every 5 minutes.. would it make sense to name this variable as 'noisy' and use it for other logs/warnings as well? Not sure what else is there in this class. . What happens if we segmentLevelMax is -1 (because we got errors from all replicas hosting a specific segment)? I know you mentioned there is an error in the math, if you are planning to fix it later, can u pls add a TODO?. Suggest controller.realtime.segment.metadata.commit.numLocks. controller.storage.factory.class.file reads like this is a file name.\nHow about \"controller.storage.factory.class.localFS\"?\nAlso, this is default, and does not need any additional config (or, are we planning to migrate the configs for segmentDir etc underneath this setting)?. Why do we need two FormDataMultippart arguments?\nWe should know from 'request' whether this is a metadata update or segment update.  If we don't, then we can add a boolean saying that the multiPart has metadata instgead of segment data.. Please fix \"value\" and \"notes\".. Are we protecting against parallel push of metadata?. Please add a block comment here indicating the circumstances when a client would resort to this method (of pushing only segment metadata). You need the segmentFetcher only if metadata is null, right? Can you push that code inside the if?. How do we guard against a client bug (or worse, malicious client) that may send wrong metadata? (a design question, I suppose). we should check here that the uploadType is URI. If not. return 4xx. \nAlso, if it is the supported uploadType, then we can call a different method that does only metadata upload?. multiPart.cleanup. Are we doing this twice in some cases?. so then maybe the fs can have a getLength API as optional implementation? . Create the factory with the config. method should be create(uri) not init(config, uri). 2014-2018\n. 2014-2018. Ah yes, the other ctor is hidden. Sorry, my bad.. you can add a comment here saying this is equivalent to consuming the rows of the segment, albeit in a different order than that consumed by the host. But the stats should be the same. \"For estimating the memory occupied by completed segments\". \"For estimating the memory occupied by consuming segments\". doesnt hurt to add a comment here that estimatedFinalSizeBytes is for all replicas of all segments put together.. I would translate these from bytes to KB or MB or GB as appropriate for an easier to read message. See DataSize class. PR #2938 adds a method to convert from bytes to readable size, so use that. . Maybe we should output different messages depending on append or refresh? In any case, please incluide clearly wheher the segment is in quota or not, and also the table name and segment name. might want to change the statement to say that new segment crc is same as existing segment crc. same as above. may want to add a comment here (after verification) that the time difference between this log and the one that logs the headers gives us the time taken to untar the segment. Useful for debugging if storage is slow.. Use the same final Strings that the controller uses. same here. pls add a comment here that even if table is not created succesfully it will be fixed in the next run by validation manager. \"Lost zk connection\". I would prefer to rename this as isNewTableSetup. The init() method seems to be private and called only from one of the constructors. Maybe we can make _tableName as final and initalize it in the constructor? Even move the logic from init to the constructor and make more vars final, but that will be a cleanup operation, so your choice.. Suggest: s/protocol/subsystem/ . same. Can we get rid of this class altogether and just use StreamConsumerExceptions.PermanentConsumerException?. I suggest moving the exception classes to be on their own instead of inside a super-class. Maybe KafkaConnector? KafkaConnectionFSM? KafkaConnectionHandler? These are suggestions, and naming is not very important here. Can be modified easily without any externally visible changes.. Should we make this configurable (if we expect to tune this in future, or reset it to a different value depending on use case). typo. do we still need this partition value to be Integer.MIN_VALUE ?. isPartitionMetadataProvider ?. We have generally followed the convention of specifying a 'type', keeping the suffix _REALTIME and _OFFLINE internal to pinot. Granted there are a couple of APIs that use the suffix, but let us not propagate it (unless there is a specific issue).. Mark these deprecated?. Would the logic be easier if we had just one variable: \nTableConfig configToCompare = null;\nAnd then set it to the appropriate one within the if statement?. The log message is misleading. We are not skipping validation of table configs. We don't have anything to check for consistency. I suggest making the log message as \"Skipping consistency check across realtime and offline parts of the table\" or you can just remove the log message altogether.. Column names are case sensitive, so it should be .equals, not .equalsIgnoreCase. this can be equalsIgnoreCase, unless you are using to get the TimeUtils and turn it into an enum before comparison.. Even in segment creation, this call never happens (with my change). Prior to my change, the call used to happen but the returned value never used.. suggest rename variable from tempFile to destFile.\nIt is the application logic that decides whether the file is temp or permanent.\nAlso, why has IOException changed to Exception?. _tableSizeReader is unused in this class. Please remove. . You need to reset both metrics to 0 if there are no missing segments.\nWould it make sense to have one metric ControllerGauge.TABLE_STORAGE_EST_FAILED_SEGMENTS, and report the number of segments failed? If it is 0 failed, then the metric automatically becomes 0.. shouldn't this metric be set to segments.size()? we failed to get size for all segments, right? And then maybe we don't need the other metric at all? . meant to do that. . really? i was just deleting stuff that is not used....\noh well... woops, missed this last comment of yours. Will fix in the next code checkin. Sorry.. No, the controller will fail to start.\nNew zk client in helix 0.8.2 does not support the old API.\nThis is called for the HLC segment manager in Pinot controller during controller start.. DEFAULT_RETENTION_FOR_HOURLY_PUSH?. equalsIgnoreCase?. No, this is not an error in Pinot. It is a user error. So we should log it as INFO and return 4xx to user.. Combine these into a single log message?. same. Why did these go a away?. You can avoid getting time twice. we should avoid this sleep, and any time-dependent test, since that can cause flaky tests. . Logging of complete resource list was omitted from this log message to save the length of the log line. You may want to log a truncated version of the list/set or not log it at all (i.e. leave the log line as is). same as above comment. do not log the list/set of resources. If you log the status as a comma-separate \"key=value\" format, then we can write scripts to parse the logs.. This log message will be printed every time we call service status. Not fully convinced that we want that. Hopefully there are enough logs when the partition actually goes to ERROR state.. ah, my bad. sorry.. why do we have starting \"(\" and ending \")\"? It will really be useful if we see a log message like:\n:a=x, b=y, c=z, d=uu, ...\nthen it is easy for us to script looking for certain values or segments that do not load correctly.. Maybe introduce a \":\" after \"exist\". The name of this class makes us think it is a Future, but it is not. Would it make sense to rename it as AsyncQueryResponse? Or AsyncQueryResponseResult?. _maxEndTimeMs?. We are deviating away from having a specific server type. We are starting to consider moving completed realtime segments to (say) offline servers. \nLooks like this is more table type than server type?. receivedDataTable? Is this an indication of receipt?. Do you want to run the last handler in a different thread group? For unbalanced queries? I think it is only deserialization time, but it may help push short queries out quicker? On the other hand, for short queries, it may make sense to handle it in the  nio thread itself .... a better test will be to take the millis before calling invaidate, and assert that the invalidation time is >= that time stamp,. In that case, please add some comments there, thanks.. thank you for putting this back. Searching for \"Request\" in the broker logs yielded everything and it was hard to filter (or filter out) just requestId lines.. Perfect, thanks.. Watch out for https://github.com/eclipse-ee4j/jersey/issues/3838 and any dependency issues arising out of it. . If you are mandating that the segment name is the key of the multipart then that is a change to the current protocol. Right now, we accept any key name. Are you also adding code to validate that the segment name specified in the multi-part key is the same as the segment name in the untarred/unencrypted segment?. Segment name missing in the second argument? The logs will be \"null\" for segment name.. Decrypts?. Please document the behavior expected of all implementations.\nIf encryption fails, I suppose any remnant file object is expected to be cleaned up by the implementation? All failures will result in an exception? Boolean return is an alternative to consider instead of throwing generic exception, and you can remove the exception from the signature.  We can avoid throwing generic exception as much as possible. Making this a generic object makes me uncomfortable. How many different kinds of objects do you think will be here? Do you expect Pinot admins to inject their own encrypt/decrypt classes? Does the File have to be in local file system? If so, can you consider returning the file object?. You may want to also consider an init() method into the crypter class, perhaps with a config class. In that case, an init() method may have to be added to the interface. Alternatively, consider implementing an abstract base class that you can add default methods in the future, and inheriting from that one. . Log the exception here. Can you please add some javadocs to the interface methods? If I understand right, we will have more implementations of this interface across file systems, right? It will be really useful to implementors if the expected behavior is documented clearly. Thanks.. not sure I understand the difference between \"http\" and \"multipart\". Should we call it multipart-http? Is the idea of introducing a multi-part fetcher to enable fetchign multiple segments in one go?. Do we want to add thread-ID as well here for uniqueness? We do need to be careful about file name length, though. Not sure if this header can be changed, but if we are re-architecting things consider making  it SEGMENT_LOCATION instead of DOWNLOAD_URI. ??. Do we still print all the headers on the upload, or is that  happening some place else?. I suppose we intend to have (eventually) the realtime segment do the \"upload\" step via this method. Let us think through if there are any architectural changes needed for that. We can implement that eventually.. Utils.rethrow?. pls remove. add exception to the log. Don't we need to set the download URI irrespective of whether the scheme is \"file\"?. May make it more readable if you break out the 'if' part into a method, and return ?. Can we have a static final String \"file\" some place?. Breaking this logic into a separate class seems to be the right direction. Good job!\nPerhaps we can consider sub-classing this to handle different variations, not sure.. Will be really nice if we can break parts of the code below into different methods to make this method shorter. Or, sub-class of ZkOperator class.. Do we expect more classes for this interface? What else may they be doing? Looks to me that this method is pretty specific and does not warrant an interface unless I am missing something. Is the unzippedSegmentDir expected to be used as a tempDir? Or, is it that the method uses ONE of tarred file or unzippedsegmentdir to extract metadata? Some javadocs are needed, esp. if this is to be an interface.. I don't understand the comment, but if you are planning to add back either later in this commit or a commit following pretty soon, I am ok with this. Please do open an issue. Otherwise, I suggest adding support in this commit.. just log it as part name instead. check if you can use File.createTempFile() if possible.. In that case, perhaps rename 'tarredSegmentFile' to 'tarFile' and 'unzippedSegmentDir' to 'workingDir'?. Suggest not getting class by name, but constructing the exact MetadataExtractor class based on the upload type. Suggest rename MetadataProvider to MeadataExftractor.. As discussed offline, removing support for special chars will break some use cases. So we need to find a way to add that back.. this class should be moved to a kafka specific package. pls add a TODO. the package name qualifies simpleConsumer, and this is in a Kafka specific class, so renaming is not necessary. Will be good if we can add some unit tests to cover the various conditions that this class handles. Not all of it can be covered in integration tests, I believe.. Is this an underscore as opposed to a dash in the PinotIdealStateBuilder as the separator?. can we emit these on a per table basis?That can be useful in multi-tenant clusters to check how much load a particular table is causing. always useful to log the name of the folder that is being deleted. I suppose you are going to change the methods in streamconfig to not say getKafkaFetchTimeout? Does that change make sense in this PR or in a later one? Since LLRealtimeSegmentDataManager is stream independent, we should not make kafka-specific calls from this class.. Note to change getKafkaTopicName() to a more generic name. Perfect, thanks.. Good to know if the initialDelay is also in seconds. Better to keep them in the same unit. So, initialDelaySecs will be a nice name for the var.  But then I think you have it millis, so at least rename it to initialDelayMillis. why do we have a setter when intervalSeconds is also in the constructor?. Are we counting total execution time? Perhaps for a metric? Why are we adding intervalSeconds to the executuion time? Shouldn't we add the actual time spent in execution? Better yet, emit the current execution time as a gauge so that we get min/max/avg/95th etc.. Ah, now I get it. It is really nextExecutionTime, or taskStartRTime, right? Wonder what we use it for (comment for myself) What if we schedule a task to run every minute, but it takes 1.5 minutes to run. Does this even provide the right value?. I think it my be useful to have a limited number of threads (configurable) in a thread-pool. Default can be 1. We just have to make sure that we don't execute the same task again in a different thread if one i already running. We should allow retention manager and segment status checker to run at the same time, don't you think? (we don't prevent it now).\nOr, we create a new single threaded executor per task type as you had before.. Always good to set the thread name to the actual task that is executing, Will help in analyzing the logs.. +1\nLet us at least add a TODO here if we are in a hurry to ship the fix. I am wondering what the utlity of this log message is, given that we already set a metric with the number of missing intervals. it could also end up being a very large log message.\nIf the metric is non-zero, we can list the segments of the table and detect the missing segments (if the owner of the table so desires).\nIn any case, I am not sure this is a WARN. It should be INFO? (we will log WARN and ERROR messages if a segment push failed on the pinot controller, I suppose).. A WARN indicates something is wrong with pinot (controller). That is not necessarily the case here (I know that it can be the case and hence the question mark on should it be an info). This can be due to a failure while pushing segment on the offline side (e.g. hadoop) and pinot never got the segment. It seems to me that info is enough. \nAlso, we can probably remove the log altogether, since we already have a metric and can monitor it. If we list the segments we can find the missing intervals.. Can we make it so that we can call decodeRow with a single message?. I am guessing that the StreamProviderConfig will go away from the init method arg?. decodeRow should take a single encoded row as an argument instead of a message batch. . Has the old path been removed? The idea is to have both in place, right? Maybe I am missing something here. The idea is not to introduce a new header, but a new protocol endpoint.. thanks,. may be useful to add a log here in an else that we are skipping move to final location. same comment as before, may be useful to add an else log. unused method?. final. final. \"before we complete the segment\". final. We should call this only once in the lifetime until the controller assumes leadership again. So, the base class needs to remember if it has already invoked the method. \nI would also advocate having a similar method onBecomeLeader() so that a task can implement one call that needs to happen when it gains leadership.. Please avoid re-formatting . s/if only cares about/if you need only/. why not invert the comparator, and just do q.offer (instead of checking size etc.)?\nYou will have to shuffle the order at the end, but you are putting it into a list anyway, so no extra logic.. you need to add the line\nsuggestion\n    recipientCriteria.setSessionSpecific(true);\n    recipientCriteria.setResource(CommonConstants.Helix.BROKER_RESOURCE_INSTANCE);. we should send the time boundary refresh message only if  the table type is \"APPEND\".. We should stop the new thread when the broker is shutting down.. We should put Boolean.TRUE in the map.. Would prefer 'endTime = currentTimeBounday + 10' instead. Better get the sleeptimemillisecconds from the config use that here instead of hard-coding 30s and leading to unpredictability if someone changes the sleep interval.. Suggest testTimeBoundaryUpdate() . why invoke super? Is every sub-class required to call super? why?\nIn the base class, do whatever is needed on gaining leadership, and then call the subclass method.. shouldn't this be printed in onBecomeLeader() method ?. remove. As long as we have the task name, we can make printSkipMessage() a private method, with the task name being printed.. nit: It is not always 'allTableNames', right? As we move to a distributed controller model? Maybe change the var name?. You should not need this method to be abstract. The base class can log this message, right?. rename allTableNames. rename allTableNames. I would suggest adding the iterator to the base class, and handling any exception here after calling a method in the sub-class to process a single table. We have had bugs before where exceptions were not handled, so the periodic tasks stopped at the table that encountered the exception.  Ideally the state should be maintained in the base class and the sub-class methods invoked when the state changes. It also gets easy to unit test sub-classes with this framework.. Instead of adding shutdownHook, can you please add a call from HelixBrokerStarter.shutdown()? That is the standard method of stopping sub-components of the broker.. you probably need something like while (!shuttingDown). See previous comment of adding a call from HelixBrokerStarter. nit: final. return false?. My apologies, I should have caught this earlier. \nYou should also check if this is an offline table and a realtime table also exists for this one.\nThe reason to limit the messages sent is because we have large number of tables (with large number of partitions) that potentially refresh some (older) segments in an APPEND table. We don't want to add too many helix messages for the cluster. \nIdeally, we should also check if the segment in question is the latest one (otherwise it should be affect the time-boundary) but I don't see an easy way to do that right now. For now, let us add as restrictive a check as possible, and we can refine that later (or make it configurable if it starts to flood zk with messages).. Please modify the log message so that it is different from the log message in sendSegmentRefreshMessage().. Please modify the log message so that it is different from the log message in sendSegmentRefreshMessage(). I am concerned about any new task we add failing to handle exceptions, and in genral, about unifying the task handling as much as possible. I am fine doing this in another PR.. We should not need run-frequency here, right? It can be logged in the base class for all the periodic tasks.. I think you should be able to remove LOGGER altogether and use segmentLogger everywhere? Just initialize segmentLogger way up in the constructor. thanks.. Maybe as a followup (or in this PR), we can change these methods to hasStreamLevelConsumerType() and hasPartitionLevelConsumerType() ? . construct this in the ctor and make it final?. since you are calling pinotfs.move, you should not be deleting the old file here. you will always get an error. just make sure that the pinotfs.move does not throw an error if there is already a destination file. This should also be a pinotFs call, right? . Don't we need to construct a file URI to move to?  So, we need to include the segmentId in line 183?. Can you please log the table name for which the message was received?. maybe useful to log a message that the thread has been shutdown.. If there is no tableConfig and we are getting a segment, then the behavior should be that we throw an exception. In the \"APPEND\" case, we seem to have a Preconditions.checkNotNull(tableConfig).  I am fine adding that here (one step better than what used to happen before, which is NPE).\nSince it is a 'segments' operation, perhaps 404 is not the best, so I am fine with Preconditions check. Please add that in the caller to this method.\nIf there is no helix resource, we will get an exception anyway.\nIf there is a helix resource (but no table config), maybe we got into an inconsistent state or are in the process of dropping a table. Either way, exception is fine (and better than trying to send messages).. If you flip this line and the next one then you can allocate the exact number of entries for shallowDirPaths. Not sure if you want to swallow exception here. I can imagine a logic that is something like:\nif (isDirecory()) {\n  processDir\n} else {\n  processFile()\n}\nIsnt it better to throw exception earlier? Maybe wrap it into runtime exception? Or, Utils.rethrow will also work.\n. same here.. In the earlier implementation we used AgeFilter, so we had to call listFiles with the filter and then delete them and check if the dir is empty.\nIn your new implementation, you have the filter in your loop, so you should be able to:\n(a) delete the files as you detect that they can be deleted.\n(b) detect that the dir is empty and delete it afterwards (without doing another listFiles call).. Since you are changing the interface, consider adding a filter as an argument. (e.g. to return only files or only directories or both). checking whether a returned object is a file or dir after the fact could prove to be expensive if remote file system.. Since this is on a per-field basis, let us call it maxLength. We can choose not to implement it for BYTE_ARRAY since that can break encoding. And yes, agree on limiting the number of characters in string rather than number of encoded bytes.. Do u want to keep this stat on a per column basis?. @fx19880617 disagree re maxBytes.  If we call it maxBytes it will somehow imply that we trim to that many bytes even if is a String. As pointed out by @Jackie-Jiang it does not make sense to trim bytes such that a String cannot be decoded. Let us call it maxLength and the semantics can be based on the data type. For ByteArray, it will translate to max length of the array.. Please clarify what happens when move is called with different combinations. What is src is a file and dst a directory, or the other way around? If they are both directories, then is the source moved under the dest directory or is it moved as destination directory?. final. What is the expected behavior of pinotFS if directory is not empty? For example, it is possible that a user deletes a segment and a file is moved into the directory after we initialize targetFiles. In that case, although we think the directory should be empty, it will not be.\nCan you document expected behavior in pinotFS? If it is a force remove, then we have a problem where a file is purged long before it is due to be.. Minor: Do you want to make SMALLEST_OFFSET_CRITERIA a public static in OffsetCriteria class?. Maybe call the command name as \"MergeSegments\"? You can leave the class name as is. Is it possible to use the class DefaultSegmentNameGenerator? Or subclass it if need be?. may be you name this variable sortedSegmentsByStreamPartition. Since there is also the concept of partition based routing, this may be less confusing.. Maybe rename to partitionId. definitely rename it to sortedSegmentsByKafkaPartition :). Where is the value being set to default null (if incoming is null)?. I am not sure all the removed tests from PlainFieldExtractorTest are covered here. I see some tests there for a random class that has a toString method, and also multiple time-spec transformation tests. Can you add a comment (preferably a story) here about how certain transformers have to be before others? The CompoundTransformer class somehow implies that the order does not matter, but it does, doesn't it?. should you continue if it is a time field-spec?\nSomehow i feel it is better to fold in time transformation into record transformation (like before).. Realtime rows should already be transformed, right? This additional transform is not introduced by your code, so if you can just add a comment here that will be nice. thanks. Will be useful when we try to optimize realtime segment creation for performance/garbage generation.. Can you please add a test case where an incoming null value for single/multi-valued field is replaced with the right default null type? . initializing this with the size of directoryEntries may help. RemoteIterator<LocatedFileStatus> fileListItr = _hadoopFS.listFiles(path, recursive);\nwhile (fileListItr != null && fileListItr.hasNext()) {\n  LocatedFileStatus file = fileListItr.next();\n   filePathStrings.add(file.getPath().toUri().toString());\n }. should be 'true'. Force delete the file.. should be 'false', in case a segment was deleted, and was moved into the deleted dir for that table after we got the segment list already in the deleted dir.. s/it will move the directoy to/it will rename the directory as/. Not clear if source dir is a/b/c, and destdir is x/y/z, then will the copied dir be x/y/z/c or x/y/z (overwriting 'z' if it exists).. Please remove this method from the interface. Remove. Remove. Remove. Please add a comment here that the next call to consume should exclude all events consumed until the commit() method is called, and start from newer events not yet consumed. may be useful to add a comment here that for now we sanitize only string types. good to check that the path is not a directory here and throw appropriate error. Or, support specifying comma-separated directory and/or paths. Would it be better to use  a builder pattern here?. nit: I would rename it as _isLeader. Would be good to add a log whether or not you are adding a periodic task here (and remove other logs of \"Adding XXX task\"). Do you need to await termination of tasks?. ocd?\ncan use 'start' instead of 'index * opsPerThread' ? \nalso, count++, maybe? . may also be useful to pick multiple numPlans values and run the test in a loop for a few different ones.. Would it be better to set this only if we are not throwing an exception?. version not used?. Can you write some comments on what these keys mean, preferably with some examples? I like the documentation next to the key definition, but if there are other places in which this is documented,a pointer will help, thanks. Do we want to restrict the length of this element, or limit the number of groups?. Should the last one be List of SegmentGroup objects? ?. Useful to add a comment here saying that this is serialized into a znode. can we name the variables localTmpFile, and remoteTmpFile so as to make it less confusing? Or, a better naming scheme if you have.. The existing logic is:\nPull the bytes off off http post stream and store it to tmpFile\nif (splitcommit) {\n  target = uniqueFileName\n} else {\n  target = finalSegmentDestination\n}\nmove tmpFile to target\nCan we do the same in the new logic?\nAlso, since we are using 'copy' operation now, we need to delete tmpFile.\n. Yes, we have enabled adding of new stream types. . For now, it is a copy of the wiki. If/when we split the documentation into user vs contributors we can move these out.. perhaps so, we will get to it. yup, will fix.. Not sure. I got it from the wiki as is.. will add descending. Are you suggesting we go back to the 'demo' title?. done. s/Logs/Adds/. please log the exception. move the try catch one level inside so we can log which file we were attempting to delete. or, log the tableDir URI in the error message. So, this is a map of Level -> {map of (groupId in that level) -> (comma-separated segment names in the group ID). \nCorrect? Also, the list of segments must be in the previous level, right?\nIf you can clarify that in the comment that will be immensely useful.\nPlease add one example in the comments. The problem with expected exceptions is that it will pass the test if the exception happens anywhere in the test. I prefer checking for specific exception with a try/catch where we expect the exception.. pls include table name in the log and all exceptions thrown. There is a constraint here that the list of childrengroups be at the same level. Correct? if so, can you please add that as a comment in javadoc?. Can we call getSegmentMergeLineageZNRecord() here?. pls add some test cases where the group merge is uneven.\nAlso, if you add comments in the test indicating which segments are merged into what, that will be helpful in following the test, thanks,. rename as LeadershipChangeSubscriber. You should add the duplication notification check here as well, just in case helix provides double notification. Should there be a stop method here that calls onBecomingNonLeader() once and shuts this service down?. I think this should be created (and started) even before this point, maybe before pinotHelixResourceManager.start()?. I thought about that as well. I think the option is between create() and init(HelixManager). Perhaps the latter is a bit less confusing.. I think init() and getInstance() is less confusing and less prone to errors than create() and getInstance().. Good point. All registrations should happen before we listen to becoming leader. nit: typo. The limits are not defined here, so we can always add more stuff to this object. Limitations will be (if any) on the streams channel in which events are published. The events will contain data out of this object.  The limitation will be defined by the schema chosen for publishing. The schema may or many not include all members of RequestStatistics.. yes. Changed.. The one in line 131 is set using brokerRequest (and this one is from brokerResponse).. Will iterating over schema.getPhysicalColumns() work here? (since you added that method). Done. yes, done. suggest rename to processTable. Not related to this, but should we add some metrics on number of segments relocated? . pls add a log here.. This assumes that all ControllerPeriodicTasks are run only on leadership and stopped on non-leadership. Good to document that.. Seems like if there is a stop() method here, there should be a start() method as well? So, maybe this should be moved to ControllerPeriodicTask?. All logs should include task name. Also, we should log the amount of wait time here.. Perhaps we should differentiate between init/start/stop/shutdown.\ninit: called on all controllers\nstart: called when leadership is gained\nstop: called when leadership is lost\nshutdown: called when controller is shutting down.\n. maybe better to use getTaskName(), or simply 'this'. A toString() method is there in BasePeriodicTask. Need to set _stopPeriodicTask to be false? Otherwise, a controller that gains leadership, and then loses it, and then gains again, will end up processing only the first table, right?\nInstead of two booleans, does it make sense to use a task state enum? (INITED, RUNNING, STOPPING, STOPPED).  Maybe even add the task state in the base class\nMaybe useful to add a comment that we don't need to synchronize here since the synchronization between run and stop is in the base class?. we shouldn't need to log the value of _stopPeriodicTask here, right? seems redundant.. OK, I think the way ControllerPeriodicTask is right now, it has no clue whether it has been scheduled or not (until the first time it's run method is called). So, I think the states may not work right. Let us leave it at two booleans for now.. This is not really the bytes read. It is the string length. The number of bytes read depends on the encoding.\nI am not sure if it is worth (performance and garbage-wise) to convert string to bytes just to get the length here.. Same comment as before. same comment as before. Change this to debug log, or remove it altogether please. why do we need this method?. Call this method in your test. You should invoke the other method in the test, and compare the result against getting the instanceconfig directly from helix.. Isnt this test a duplicate of lines 86 through 97?\nAlso, can u add a test (or tests) where a new instance is added and an old one removed, and the cached data accessor shows the modifiction correctly? I think it is worth the effort.\n. change name of test. also add/delete instances and wait for the change to show up. pls change the other methods to get instanceconfigs to use the cached handle. thanks,. please use static final to define 10_000 etc. so it is easy to understand what they mean,. Turn this into a time-based loop instead of count-based. you can sleep 100ms between any two iterations.. remove this . time-based loop. 100ms sleep. remove this. The new offline segment frequency and broker resource validation frequency should be picked up from the ValidationManager frequency configured (if they are not individually configured).\nI would like to say that for realtime segment validation as well, but since we are increasing the frequency there, maybe it is ok to move to the new derfault.\nSpecifically, we cannot remove the controller.validation.frequency. We can mark it as deprecated and remove after some time.. +1. remove the comment, since the caching is done inside pinot-helix resource manager. we should not need PinotLLCRealtimeSegmentManager here? Am I missing something?. we can make the getter private. Nobody outside of controller should be using this getter, right?. What if there was an existing configuration controller.segment.level.validation.intervalInSeconds=1hr?. Maybe we should keep \"controller.segment.level.validation.intervalInSeconds\"  and use this for offline segment checker as well as realtime completed segment checker (to update numdocs).. if controller.validation.frequencyInSeconds is configured, return it here.. rename to DEPRECATED_VALIDATION_MANAGER_FREQUENCY_IN_SECONDS. if controller.validation.frequencyInSeconds is configured, return it here.. maybe rename the method in llcRealtimeSegmentManager to be ensureConsumingSegments() or some such?. Why are we returning 'int' for number of bytes here, and 'long' in other places? Can we just make it long everywhere for consistency?. Calling getBytes here ends up allocating a new byte array VarByteChunkSingleValueReader, right? Whereas caliing getString() reuses from the thread-local buffer. Presumably this optimization was made to avoid too much garbage during queries. Should we introduce a different interface that returns both the string as well as the number of bytes?. If VALIDATION_CONTROLLER_FREQUENCY is not set, you want to return REALTIME_SEGMENT_VALIDATION_FREQUENCY here, right? So, calling getValidationControllerFrequency method will return the wrong value, right?. same as above. Controller should not pull in test jars. . Ah no, my bad, sorry. I believe this is fine.. not sure why we need this change?. Please add a TODO here explainining the reason why we are disabling the test, and that it should be fixed and re-enabled. Well, we are really not changing the version of the file (in the sense that the formatting, the fields, etc, are the same), So , I would call it something else altogether. \"segment-stats.ser\" seems ok.\nAlso, please add a comment here that says that the old name used to stats.ser and we had to change it when we move the package to be org.apache. I would retain the old name, because the contents of this file is the actual V1 contents, . Please add a comment here that the 'touch' is needed so that removeAgedDeletedSegments() works correctly. . Good catch. Please change to:\n\"Updates the last modified time of an existing file or directory to be current time.  If the file system object does not exist, creates an empty file.\". What is the behavior if the parent directory of the path does not exist? Does it throw an exception or create sub-dirs as needed?. Please update the comment in the interface saying that the parent directory of the object must be present, otherwise touch will throw an exception (IOException?). you already have it, thanks. I am not sure how/where the serialization (and deserialization) contract is defined between Pinot and the entity that ingests data into Pinot (and the one that reads it, and specifies queries against it).\nI agree with using enums, so that we can start with some small number of supported object types, I suppose. I guess property names and values are specific to the object type? Some objects may have properties specific to the instance (e.g. for json objects it will be \"keys\", I suppose) whereas others may have properties specific to the object definition?. May be useful to rename this class as PinotJSONObject. Every JSON library (and there are several) probably has its own JSONObject :). PinotMapObject?. Not sure how this is used, but I am noting that we may not want to swallow exceptions all the time. If (say) hadoop job is trying to ingest objects. we may want to return an exception right away instead of replacing the value with our own choice. On the other hand, while processing a query, perhaps returning an empty string is ok (but ideally we should just discard the docid?)\nI assume that the answer to my question about serialization contract is that the ingesting entity has to use Pinot library (which we shall preserve backward compatibility, with appropriate versioning etc.). In that case should these definitions move to pinot-api package?. I guess we choose utf-8 as the encoding scheme, or do we define the encoding scheme as a property?. Let us say the object was a map (as per your example). Presumably, the entity that ingests data into Pinot has serialized a map into bytes using some serde. That serde method better be the same that Pinot uses to deserialize while fielding a query, or while returning result of a query (may have to deserialize, and serialize back to deserialize again). Did I understand it right?. I suggest: \"To simplify configuration management, Pinot provides a way to set up configuration profiles.\". will be good to add an explicit note that all profiles in a table configuration must be included in the Pinot deployment command in order for a table configuration to be deployed.. Can you please clarify that \"backing up\" here means downloading configurations from the Pinot controller (to the current directory?). It will be useful to expand this a bit. I suppose the merge step is really not needed, but is useful (as you have pointed out, to minimize the number of files).\nI would add a step between 1 and 2 that says something like \"Create a folder structure depending on your deployments. For example, you can have folders configBackup/prod/prod-us-west-4, configBackup/prod/prod-us-east-3\"\nExpanding step 2 a bit is also useful. As in \"Now change directory to each of the folders for specific deployment and enter the BackupTableConfigs command\"\nSome clarifications:\nIs there a requirement that the 'profiles' directory be under configBackup/ some place? Can you document it either way?. So, the result will be that the ApplyTableConfig command will throw an error? If so, please mention that. \nAlso, I suppose there is no implicit assumption that 'prod-us-west-4' is an extension of 'prod' profile, right? In the previous example, if somehow 'prod' and 'testing' profiles are enabled simultaneously it would result in the same error? . Our best bet is with 2.28 now. Hopefully we will get a release soon that we can incorporate.. You should be able to do this in the base class using a variant of _controllerMetrics.setValueOfTableGauge(). All that we need is to add a prefix (or suffix) to a known metric name, as in this method, and we can do this with the daemon name that we already have in the base class.. Instead of relying on every task calling super methods for preprocess and postprocess, will it not be better to introduce a different abstract method (say, preProcessInternal, postProcessInternal) and have the tasks implement those? . s/Dropped table/Removed helix table resource/. Removed segment metadata. Removed helix resource for table. Removed segment metadata. ah, ok. Then call it as \"Removed segment metadata and stored segments\" Maybe we need indepdent steps to determine which part is taking time?. final will be nice . Can you remove the pre-conditions check here, and add an explicit error message with as much details as possible (input file name, full path, whatever). And then throw the exception with the same message?. Alternatively, check in hadoop job before we call this method, and error-log + exception like i described before. Then the pre-condition check here is totally valid. Not sure under what conditions v3Temp.renameTo will fail, given that v3TempDir is under the same location.\nWhat exactly is the complaint in windows here?\nAlso, assuming that this failure is somehow possible, should we not cleanup by removing v3TempDirectory and throwing an exception? Otherwise we end up deleting v2 files as well, effectively losing the segment. I have the same question as @sunithabeeram on this one. Where is this being called?. MultipleTreesBuilder is not a closeable, so I am not sure why we need to call close here.. Clarify behavior if src is dir, dst is file, and overwrite is true. Looks like LocalFS succeeds.. Instead of \"Same as move\" can you mention each case explicitly and describe the behavior? thanks.. can we just invoke _hadoopFS.isDirectory(). Looks like this API was added to this class only for testing? Pinot code does not seem access it. . Lists recursively if \"recursive\" is set to true.\nAlso, if the URI provided is not a directory, are we expected to throw exception no matter what the value of 'recursive' is? i think the localfs will not throw exception if recursive is set to false. thanks for adding these test cases. not sure why mkdir here. shouldn't we just be doing a move and let the file system move either a file or a dir?. Maybe use a base class and move these there? You can add a TODO. One thing that occurs to me as I review something like this, is that for some (slow) FS, the latency of making each call may be so bad, that we are better off calling some native file system method and you get what you get. Going this route is relatively easy, and we just need to make sure that Pinot's requirements are met in all file system (i.e. if Pinot uses the case of copying from a dir to a file and that case works fine across everything, then that is alll we need).\nLet us discuss a bit more before we put in too much work to unify file systems.. Can you post the failure message? What does it complain about?. Can you post the failure message? What does it complain about?. Can we be consistent in the user of 'folder' and 'directory'?. clarify that this example is file to file, and explain that /a/b will exist, but will not contain 'c'. Instead, /x/y/z will contain the contents of 'c'.. maybe remove texxt about ioexception here?. move the comment inside. Am i reading this right that we are essentially creating dstUri as a directory but asking the user to pass the input param a a file?. get the assigned instances here before calling the new API?. mark assigned instances as @ NonNull?. looks like we have a duplicate line here. can u remove one of them please?. we dont need this TODO anymore right?. well, as the code stands it will never break since we disable if we have MV dimensions...but that is my ocd i guess :). You should not be sending segment metadata as a query parameter. . Do we need the cast here? Maybe we can just define the field in commiting segment descriptor as SegmentMetadataImpl. Can you look to moving this out so that segment metadata is extracted in LLCSegmentCompletionHandlers? We can unitfy the segmentCommit path so that if metadata is not present, segmentCommit() downloads the segment and extract it.. suggest logging \"Starting Pinot controller in mode: {}\". Thanks for breaking this up into methods.. Any zk verifications here?. Are there race conditions that could make this test flaky? Should we wait until some condition (no big sleep please) to ensure that the controller is stopped?. Any timing dependency here to make sure that helix controller is started?. I like introducing a protected method (like: boolean isPinotOnlyModeSupported()) and overriding it in tests.. Am I right in reading this as the first update will not be processed until 1 hour after start? Maybe we should set the map to time 0 in line 70?. Do you want to bump different metrics for each change type? That may be useful. We see more EV changes than any other, right?. please make this a static final int 1000L.\nSo, we have changed a conditional wait into busy wait.  I don't see the benefits of this. If I understand right, the pre-fetch is an annotation on this method. Why not add the annotation and set it to be false? Another way of putting this question: What is an admin supposed to do if they see this pre-condition fail?. This can happen during a race condition where the thread takes longer to start up? maybe you should add a condition to wait until thread is alive before adding these listeners. add  code here to wait  until thread is alive. Otherwise it is possible that we hit one of the precondition checks. If I recall correctly, the merge of the callbacks was added later as an optimization. Not sure how much things have moved around, but hopefully you can check some history.. You should use while (!shuttingDown) as the loop condition instead of while (true). Pass the shutting down flag down from BrokerStarter. We should attempt to get metadata from the multi-part in this method as well. That way, we can add the server code to send multi-part form with metadata and everything will work. If metadata is not present in multi-part then we need to extract from local.\nYou can add this as a separate PR before moving on to other parts, or add it now, your choice.. pls rename to extractMetadataFromSegmentFile. The segment file is in deep store, right?. Actually, disregard this comment. If the segment is there, we don't need to push metadata, so you are good here.. segmentLocation should already be a well-formed URI.  See the segmentUpload endpoint.. @jamesyfshao thanks for making these configurable. Can you please leave the defaults as it is and use the configuration to change the behavior in your site? We don't want everyone to experience a change in behavior as a result of a default change. Memory may be a constraint in other installations. This is a URI returned by the controller in the segmentUpload call. The servers cannot send some random URIs to commit. So, to PinotFS, you should be able to pass the URI from new URI(segmentLocation). Please correct me if I am wrong, but it seems that we get the segment to a tmp dir locally, store it in the file system, download it again, and retrieve the metadata. We should be retrieving metadata before we upload,.. Can you please update the rest of the file to use java.net.URI as well? (and therefore import the right class and not qualify it everywhere)? It should be ok since the server only treats this as a string, so no compat issues.. Should we move this to ControllerConf?. should check mode here rather than helixManager being null. You can assert it being null or not so depending on the mode. you can remove this section now. Good to seed it with some value.. maybe have other criteria which will force a log:\n if number of exceptions > 0\n timeMs > 100 (say)\n entries scanned post filter is high\n num groups limit is reached\nI suggest adding a method shouldLog(). Seed it with time. Same as broker. Maybe we should log under certain conditions even if random criteria is not met.. RealtimeSegmentConverter uses SegmentGeneratorConfig and sets time unit and time column name independently after constructing it with schema. Perhaps you can remove those lines form there? And move the TODOs here?. thanks for adding this test. We need more tests here, so if you can add a TODO we can grow it over time. The SegmentGeneratorConfig class has too much logic in it (rather than just holding the config). @npawar  can you confirm that it is ok to remove this and keep backward comaptibility?. return true?. Do you want to log the dropped messages in the server  as well?. Can we have individual imports as needed instead of wild-card? thanks. private is fine, right? We don't use it outside this file. Please use parameters for logging not concatenation. please use {} to log segmentNameStr. Please use {} for logging segmentNamemStr. Missing {}. we can fail the commit if segment metadata is null.. we should not be extracting metadata in this handler, since we are doing that when the commit end happens. . we should fail the commit if we cannot extract metadata. If a server posted to this URI it better include metadata in the request.. Agreed. I am saying we should not be calling extractMetadataFromSegmentFile() at all. Metadata better be in the POST body. should be an error log, since we have detected a mis-behaving server.. Best to add current time as well as tmp_dir_suffix. Although with rare race and timing conditions, it is possible that multiple servers are executing this code path. We don't have lock here, but we do lock inside the state machine to protect ourselves that only one of them can commit.. OK, this method is getting to be too confusing now, with the split-commit argument. Perhaps the way it was made sense when we had local storage only. \nPlease remove this method. Instead, let us do:\nsegmentCommit() {\n  uploadFileToLocalTmpFile()\n  ExtractMetadataFromLocalFile()\n  StoreLocalFileToPinotFS (be sure to copy the comments)\n}\nsegmentUpload() {\n  uploadFileToLocalStore()\n  StoreLocalFileToPinotFS()\n}\nI tried a local re-factor and that can work, and we can get rid of this method and multiple checks for splitCommit inside that.. thanks for removing this :-). Thanks so much for demonstrating this in an automated fashion. Yes, you can remove these tests in your next iteration.. Can we move the section on how to create a fork into the contribution guidelines? We seem to say here that creating a branch is not recommended, yet that is what we write about in contribution guidelines. Maybe we should remove the text on creating branches, and just retain one on creating forks? Not sure what the limitations are in terms of branches created. Does Apache have a limit? Or, are we worried that people may not delete the branch after commit?. In that case, isn't it better to remove the other section on creating branches?. Suggest: In line 23, last part of the sentence, add \" and created your own fork of the pinot source code\".. remove extra newine. wrong comment. we are extracting metadata from a segment located in PinotFS. please use the coding guidelines as in https://pinot.readthedocs.io/en/latest/dev_env.html. Please include segment name in this log. The idea is that we should be able to grep a segment name in the logs and find out what happened to it.. Please include the TODO here regarding moving the tmpfile logic to SegmentCompletionUtils. Include segment name here. You may have to pass it as parameter, but worth it.\nAlso, change 'copy' to 'extract'. Include segment name in the log, change 'copy' to 'extract'. Looks like there are no change to this file. Can we revert this file to the original please?. Wrong comment. Get the segment and put it in a tmp area in the local file system. extra line. s/renamed/moved to pinotFS/. Can you move the synchronized block around the caller of this method, along with all of the comments above? It wil make better sense there than here. thanks.. Better yet, let us just get rid of this method and move the whole code to the caller. That way, the comment and synchronized block reside where they can be most associated with. Can you move the config of commitWithMetadata to LLRealtimeSegmentDataManager? It is being checked in the other class, so makes sense to move it there. You may have a bit more config plumbing to do, but it is worth it. Can you please follow the same indentation level, etc? thanks. Instead of adding a new test (that increases test time),  we can just change the split commit test to just use the new controller endpoint to commit with metadata. We should deprecate the one that commits without metadata, since this one is far superior. The only reason to use the other one is for backward compat for one release.. +1. isRecentlyDeleted()?. It may be worth adding a log message here with the name of the segments missing, Can help us debug. same with this method name. It is not really deleting a segment, is it?. I think we have other logs for dropping a segment, do we need this one as well? If we really do, then it should go inside the 'if' statement. This line should be inserted after line 184, not here. The segment is not available for any new queries sometime after line 184 starts execution. Also, can we not get the table data manager directly from here? Do we need to go through the instanceDataManager? Dependency issues?. Let us make the default true for this one. So, if split commit is enabled, it will always commit with metadata. So, you can just verify manually if the existing split commit test runs with the metadata commit at the end. and add that to your PR as a manually verified note.. You can also mark the other commit-end message as deprecated. We will remove it in a couple of releases.. Can you find a way to avoid extracting from the tar file again? CPU and disk IO are expensive on the server, and we would like to avoid it if we can. \nThe only way I could think of was to store the metadata files in another directory and keep it along with the segment descriptor. Once the commit is completed, we need to take care to remove the directory, as we don't want to have cruft left-over. It has to be done a little carefully. @npawar  do you have other ideas?. Instead of 'Ts' could we suffix it with Millis (or Seconds, whatever the units may be). Log the query ID here so that we can use it to correlate query logs. Also, please ensure that if this condition happens we override the throttle in the broker logs.. If there is a delay in the stream, that will show up as a pinot delay. Another choice is to take the last polled timestamp. That will ensure that as long as Pinot polls the stream, the available data is considered fresh. Not sure why we are not doing that.  A stream might (and probably should) have its own staleness metric being tracked and monitored so that an application does not need to track a staleness metric via pinot and root cause it to the stream if that is indeed the case.\nIf you want to continue with this approach, then I suggest that you extend the interface to retrieve rows from a stream to include the highest available timestamp of a record in the stream. That way, streams that provide the staleness metric can translate (via Pinot) to the staleness monitoring application.. I think we keep the raw files and build the tar.gz in addition. The segment needs to be in raw format for serving anyways. . Issues with indexing the row should be dealt with as a bug and fixed, since that is a loss of data. \nAlso, I was proposing to extend the interface so that a stream that keeps track of timestamps of incoming messages (for its own SLA) can use the mechanism. I was not referring to the time column of the schema\nWe can chat a little to see if any of these ideas can be explored further before discarding. nit I would prefer the condition inverted, given that both if and else portions are one line long.. ",
    "jiateoh": "LGTM\n. Close was unintentional. Commenting to reopen for merge.\n. LGTM\n. Java changes LGTM. @MarthaWB can you review the UI changes?\n. There's no actual requirement for the message template to be configurable right now, so I've gone ahead and removed that option for the time being. It can be added in again later if it becomes useful.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM - just fix up the 2nd commit message. (go ahead and merge afterwards)\n. LGTM\n. LGTM after fixing comments\n. LGTM but follow up on dashboard ignoring the filters param. Feel free to merge once that's resolved.\n. LGTM\n. LGTM\n. LGTM pending changes to the message for merged anomaly results. Good job on test cases.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM. After fixing comments and updating the pull request, go ahead and merge.\n. LGTM - go ahead and push after addressing comments\n. LGTM\n. LGTM\n. LGTM\n. existing rows will break on nullable=\"false\" - see if liquibase supports this in migrations, otherwise do one of following:\n1. Add nullable=\"false\", but also include a non-null default value. Remove default value in a following migration.\n2. Use nullable=\"true\", run an update adding a non-null default value for existing rows, then set nullable=\"false\"\n. Any particular reason for this class over com.google.common.base.Joiner?\n. reuse result of metricExpression.split(\"/\") instead of calling it twice.\nAlso extract \"/\" to a constant?\n. This change is actually reverse compatible, but was made so that users can run a wider variety of commands other than server (eg db migrate). Now the only restriction on the commands that can be run via this main method is that the last argument must be the config directory - I'll add a comment indicating this. \n. Removed contributor/heatmap/tabular comments for TimeSeriesResponseParser. Added precondition check for non-null aggTimeGranularity (ie group by time) earlier in code and removed the if/else on groupByTime.\n. Remove unneeded method\n. delete main method\n. s/functions/reports/\n. unneeded import?\n. delete if this is no longer being used.\n. rename variable, add comment explaining that these are actually strings\n. delete if no longer being used\n. go ahead and delete this whole class\n. repeatEvery should be a TimeUnit.\nvalidation on scheduleMinute and scheduleHour\nAdd unit test(s)\n. move smtp port to configs\n. check if there's a 'required' flag for dataset. If not, add validation.\n. add comment explaining that bucketSize, bucketUnit are defaulted to collection granularity.\nAdd filters param.\n. refactor shared code between create + update\n. no need to do now()-based logic here, just construct url via httpl util and pass in the query params for start/end if they are present.\n. use the non-repackaged import\n. Let's discuss how to format the message for anomalies that end up merged. Simply joining them together can result in a lengthy and complicated message that might be more confusing than helpful for users.\n. Use logger\n. init driver/scheduler only if required.\n. remove\n. s/Anomly/Anomaly/ and elsewhere (eg createAnomlyJob)\n. javadoc explainig purpose and difference from *Task\n. Remove if unused, or change to ThirdEyeClient\n. use LOG\n. LOG\n. LOG\n. extract outside loop\n. remove if duplicate of Task\n. remove if duplicate of JobInfo\n. remove\n. rename appropriately\n. check if it's active first\n. Add brief javadoc explaining what 'change' means in this context\n. add to equals + hashCode\n. !=\n. Removed comment - good catch.\n. Please go ahead and delete this main method if it serves no practical purpose.\n. rename to feedback_type so it's clearer that this is different from comments/description/status.\n. Use fk_anomaly_feedback_fk if the referenced table is feedback \n. use Objects.hash instead\n. Chain Objects.equals calls instead (see AnomalyFunctionSpec.java for an example).\n. Judging from the usage of this method in sendEmailWithHtml, I'm guessing this comment is no longer relevant. Feel free to remove it.\n. While not required, it might be more readable if the JobScheduler declares a generic type so it's clear what is being scheduled.\n. once all components are complete, it may make more sense to use the switch case to define the class being deserialized, rather than defining the deserialization class and reading the value within each case. Alternatively you can do that now and have a null check for merge + default case.\n. Does the exception stack trace need to be printed out?\n. Remove \"Thirdeye\" - redundant and present in package name.\n. clarify that from/to are for the application notifications (eg function failures).\n. redundant pair of start/end variables. Choose one and remove the other.\n. ",
    "npawar": "LGTM\n. Tested inversion of colors for metrics with correct config\nTested the cell size expression \nTested collection alias picked from config\nTested the heatmap displays the new cell size interpretation \n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Fixed comments\n. Testing done: Tested all endpoints using curl calls\nAnomalies: \n1) View - Tested that all anomalies that match filters are returned\nAnomaly functions:\n1) Create - Tested that anomaly function is created successfully in dashboard, and if it is active, it is also started in the scheduler\n2) Update - Tested that the anomaly function is updated successfully, and the scheduler is notified of the changes in function description or active/inactive\n3) View - Tested that all anomaly functions that match filter are displayed\n4) Delete - Tested that the anomaly function is deleted from the database, and the scheduler is notified to remove the schedule\nEmail Configs:\n1) Create - Tested that email config is created successfully in dashboard, and if it is active, it is also started in the scheduler\n2) Update - Tested that the email config is updated successfully, and the scheduler is notified of the changes in function description or active/inactive\n3) View - Tested that all email config that match filter are displayed\n4) Delete - Tested that the email config is deleted from the database, and the scheduler is notified to remove the schedule\nTested using calls described in https://docs.google.com/document/d/1V7Ol0a1WF7jP_SFgruU36xiMBQA7P8BontLaSSlQ9v0/edit\n. LGTM\n. LGTM\n. LGTM\n. Testing done: Started scheduler and multiple workers and checked for state transition of new tasks from WAITING to RUNNING to COMPLETED.\n. LGTM\n. Created tasks of different types and tested that the workers pick them up and execute the corresponding function\n. Fixed issues\n. Checked with @Jackie-Jiang that the build issue can be ignore. It is usually disabled for thirdeye commits, but was manually disabled right now.\n. Testing done:\nTested the endpoints using curl calls\nAdhoc run - curl -i -X POST \"http://localhost:1340/api/detection-job/65/ad-hoc\"\nEnable function - curl -i -X POST \"http://localhost:1340/api/detection-job/65\"\nDisable function - curl -i -X DELETE \"http://localhost:1340/api/detection-job/65\"\n. LGTM\n. Fixed all comments except session handling. \n. Testing done: Started the monitor module in conjunction with the schedulers and workers.\nTested that a monitor job is created at every scheduled run of the monitor. Checked that a monitor task is created for every job in the jobs table with status != COMPLETED. Checked that an additional monitor task of type expire is created. The monitor task checks the status of the job and the corresponding tasks and updates it accordingly. The expire task expires all jobs and tasks which are older than a predefined configurable retention\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Testing done: Started alert module locally to interact with the production setup. \n1) Checked for emails sent in case of existing anomalies. \n2) Checked for 0 anomalies email sent in case of no anomalies and sendZeroAnomaly=true\n3) Checked that no email sent in case of no anomalies and sendZeroAnomaly=false\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Older code will not be handled as part of this PR. I wanted to get the base out first, without disturbing the rest. \n. Tested webappResource endpoints.\nHandled curl calls as described in https://docs.google.com/document/d/1D1duf2F6ZoZiLzhVFqg5i8fkv8x-XVOTYtzhopAYGcQ/edit\n. LGTM\n. Testing done: Onboarded internal datasets where metric name is a single column, and metric value is a single column. Tested that the dashboard can handle all these metrics as separate metrics and process/display them as separate entities. Confirmed that derived metrics is also handled in these cases\n. Started dashboard locally with configs setup in database. Confirmed that all dashboard smoke tests pass.\n. lgtm\n. lgtm\n. we dont read segment metadata anymore. Xiang's change(the pql) is used to fetch the max time in our caches. The problem is that it used to refresh every hour, and that resulted in upto 60 minutes delay in seeing the actual max time.\n. That's because these classes of thirdeye-pinot are used in the ingraph adapter. Once this jar is published, I will be making changes to the adapter. Please update the sample-rca.yml as well. Fixed all suggestions. @mcvsubbu I have added the design doc on the wiki page in the Design Docs section: https://github.com/linkedin/pinot/wiki/Schema-TimeSpec-Refactoring\nAddressed all your comments as well, please review again!. @kishoreg As discussed offline, there are currently multiple constraints to model this as a minion task and run it via a tool that runs adhoc minion tasks. The task executor uses minionContext which is created using cluster configs on startup. We will need to duplicate minion setup steps to make this work. There's also some configs needed by pinotTaskConfigs which we will have to manually construct.\nAs a result, keeping it independent of the minion as a separate tool seems like the best option right now.. Addressed the comments @kishoreg . PLease check. Moved the DateTimeConvertor classes to another package(com.linkedin.pinot.common.datetime.convertor)\nAlso introduced classes DateTimeFormatSpec and DateTimeGranularitySpec to hold the getters, constructors and validators, hence getting rid of DateTimeFieldSpecUtils. Handled default case, and removed duplicate code. Tested on hadoop for flows aggregation, topk, derived_column_transformation, segment_creation and segment_push\nTested cases:\n1. No threshold, topk, whitelist - with all string dimensions, with 1 long dimension\n2. Threshold\n3. Topk - with all string dimensions in topk, with a long dimension in topk\n4. Whitelist - With default other values, with configured other values. @Jackie-Jiang @kishoreg @mayankshriv \n1) Addressed concerns about values in case of star tree:\n-Use metadata for i) count* ii) min,max,minmaxrange if no star tree and present in metadata\n-Use dictionary for i) min,max,minmaxrange if no startree\n2) Merged integration tests\n3) Added factory to select right plan node\n4) Corrected formatting \n5) Comments in tests\n6) Passing only totalRawDocs in DictionaryBasedOperator, and not the whole metadata object. Performance numbers on a table with 11G data :\nBefore the change, \n\nselect max(time) from table\n    \"numDocsScanned\": 677226153,\n    \"numEntriesScannedInFilter\": 677703562,\n    \"numEntriesScannedPostFilter\": 677226153,\n    \"totalDocs\": 677703562,\n    \"timeUsedMs\": 1042,\n\nselect min(time) from table\n    \"numDocsScanned\": 677226153,\n    \"numEntriesScannedInFilter\": 677703562,\n    \"numEntriesScannedPostFilter\": 677226153,\n    \"totalDocs\": 677703562,\n    \"timeUsedMs\": 1099,\n\nselect minmaxrange(time) from table\n    \"numDocsScanned\": 677226153,\n    \"numEntriesScannedInFilter\": 677703562,\n    \"numEntriesScannedPostFilter\": 677226153,\n    \"totalDocs\": 677703562,\n    \"timeUsedMs\": 908,\n\nselect min(time),max(time),minmaxrange(time) from table\n   \"numDocsScanned\": 677226153,\n    \"numEntriesScannedInFilter\": 677703562,\n    \"numEntriesScannedPostFilter\": 677226153,\n    \"totalDocs\": 677703562,\n    \"timeUsedMs\": 1117\nAfter the change,\n\nselect max(time) from table\n\nselect min(time) from table\n\nselect minmaxrange(time) from table\n\nselect min(time),max(time),minmaxrange(time) from table. this has already been done by Alex https://github.com/linkedin/pinot/pull/2159. @mcvsubbu Yes they will. I tested Schema.fromFile() and Schema.fromString() methods on schemas which have dateTimeType. They are read successfully, and the output doesn't have dateTimeType, as jsonIgnoreUnknown is true. . Introduced streamConsumptionConfig in the tableConfig. StreamConsumptionConfig has streamPartitionAssignmentStrategy, which will decide which partition assignment strategy is used for the table. If nothing is specified, we default to UniformStreamPartitionAssignment.\nWill address these things in future PRs:\n1. Race conditions in case of partition assignments which try to read and write all the tables. We could enter into situations where 2 controllers are trying to read and update the partition assignments (simultaneous partition update by validation manager and new table addition). \n2. Abstracting out the stream to be able to support any stream, and not just kafka\n@mcvsubbu @kishoreg . Fixed issues with comments and constants\n@mcvsubbu . Checked all usages of ControllerApplicationException, to ensure there are no null usages. Response builder handles passing of null entity.. Not sure which lines you're referring to, there is no reformatting done as part of this PR. Tasks:\n- In LLRealtimeDataManager, remove the use of Kafka specific errors\n- Introduce abstraction for StreamMetadataProvider, which would answer fetchPartitionCount. \n. Still a WIP, but here's the plan:\nFor any stream, these are the interfaces that need to be implemented:\nStreamConsumerFactory\nStreamConsumer\nStreamMetadataProvider \nIn streamConfigs:\nstreamType: \nall other properties should be\nstream.\\.prop1\nstream.\\.prop2\netc. Here's the wiki for pluggable streams: https://github.com/linkedin/pinot/wiki/Pluggable-Streams-in-Realtime. @mcvsubbu fixed the HLC segments issue we spoke about . No bucketing in case of simple date format was intentional. In simple date format, the bucketing is implicit in the format. Please make sure the original tests pass if you've added it back. Bucketing was left out, as it doesn't work correctly when timezone comes into the picture. \ninputFmt: 1:MILLISECONDS:EPOCH\noutputFmt: 1:MILLISECONDS:SIMPLE_DATE_FORMAT:yyyy-MM-dd HH:mm:ss.SSS tz(America/Los_Angeles)\noutputGranularity: 1:DAYS\nIn this case, convert inputFmt to millis and then millis to outputFmt works\nBut convert inputFmt to millis, bucket to days, convert millis to outputFmt will not work for some hours of the day\nUTC millis April 18th 2018 10am  should convert to 2018-04-18 00:00:00\nUTC millis April 18th 1 am should convert to 2018-04-17 00:00:00\nIf we bucket it first, both will return 2018-04-17, which is not desirable.\nIf you plan to bucket it even in SDF case, you will need to handle bucketing with time zone knowledge. @Jackie-Jiang bucketing on epoch time would be wrong. It will fail for the example I provided. Input in millisSinceEpoch but output in sdf with timezone changed was exactly the usecase why we added timezone support. In such cases it would be right to apply bucketing with timezone knowledge, or, do the bucketing after applying the output format conversion perhaps (inputFormat -> millis -> outputFormat -> bucket). LGTM as well. \nThere were a lot of test cases at one point which we lost sometime back (https://github.com/linkedin/pinot/pull/2659/files#diff-7b9f15468a245a32ab97a2f6bd1f0af9)\nJackie is adding them back. If you could hold on until those are in, and verify that your change passes them all, that would be great. Tests have been added back @subprotocol . Since your change is in millisToSDF, please also add some tests for SDF to SDF conversion, since SDFToSDFTransform is also affected by the change. @subprotocol yes you're right, the time unit is redundant in SDF. That would be a change that will touch multiple place I believe, as we make the assumption of the tokens being in fixed places for both cases. So better to do it as a future step. > How is the initial targetNumRows calculated when current_rows_to_size_ratio and previous_rows_to_size_ratio are not available.\nWe begin with INITIAL_ROWS_THRESHOLD = 100_000\n\nwhats the idea behind this formula\ntargetNumRows = ideal_segment_size * ( a * current_rows_to_size_ratio + b * previous_rows_to_size_ratio)\n\nthis aims to use more than 1 ratio data point, so that we do not sway a lot because of some segment which was too large or too small\n\nis rows_to_size_ratio calculated on per partition basis or averaged across all partitions?\n\nrows_to_size_ratio is calculated from the previous 2 committing segments, not specific to partitions\n\nwill this result in every segment having different number of rows. I think we can retain the same targetNumRows as long as the segment size is within ideal_segment_size +/- x percent. If it goes out of bounds for X consecutive segments, we can apply the formula to compute new targetNumRows.\n\nyes each segment will have different number of rows. Why is that a problem? That was happening anyway in the current design when the segment completed on time threshold (which it mostly did). Each time a segment commits, it computes the new flush threshold for the next segment, and it is recorded in the next segment's metadata. The servers check the segment metadata of the segment that is consuming. Linking to https://github.com/linkedin/pinot/issues/2583. The bug was that I was fetching helixAdmin and helixManager from pinotHelixResourceManager in the constructor of RealtimeSegmentRelocator, which happed before pinotHelixResourceManager was initialized in the ControllerStarted.start method . Yes the bug existed for a long time. No change in particular surfaced the issue. It's just a very rare scenario I think, where the commitSegment steps and retentionManager steps exactly align. Addressed all the comments. Thanks @mcvsubbu . Moved the metric logic to ServerSegmentCompletionProtocol. @mcvsubbu From our discussion this morning, adding logs to the segment upload code to be able to trace refresh cases. Please let me know if you think more is required. Worked on all comments @mcvsubbu . Linking to https://github.com/linkedin/pinot/issues/2583. Linking to https://github.com/linkedin/pinot/issues/2583. Fixed comments. Moved code from both methods to a common private method. Planning to follow this up with an exponential back off (with upper limit on backoff time). Is that what you meant?\n. Linking to https://github.com/linkedin/pinot/issues/2583. - how do we know which consumer(stream level or partition level) we should instantiate\nAs of now there's a property stream.kafka.consumer.type which instantiates LLRealtimeDataManager or HLRealtimeDataManager depending on the value. Future steps of cleanup will define a proper method\n- Is there a pseudo code on how Pinot real-time code would look like with these interfaces.\nThe SimpleConsumerFactory (an implementation of StreamConsumerFactory) is an example of how these interfaces are all used together\n- There are some references to Kafka.\nThe goal of this PR is not to remove all references to Kafka. Will rename some obvious ones, like kafkaStreamLevelConsumer -> streamLevelConsumer.\n. Linking to https://github.com/linkedin/pinot/issues/2583. Linking to https://github.com/linkedin/pinot/issues/2583. Addressed comments from review . Linking to https://github.com/linkedin/pinot/issues/2583. Linking to https://github.com/linkedin/pinot/issues/2583. Linking to https://github.com/linkedin/pinot/issues/2583. Fixed review comments. What kind of flexibility are we achieving by moving from PlainFieldExtractor to RecordTransformer? What was the issue with the PlainFieldExtractor which prompted this change?. Linking to https://github.com/linkedin/pinot/issues/2583. Linking to https://github.com/linkedin/pinot/issues/2583. Removed all unused methods from StreamLevelConsumer. Addressed review comments @mcvsubbu . I was able to reproduce this issue. The root cause for this, is this switch case for DAYS in BaseDateTimeTransformer. This is where the _dateTimeTruncate is created, which is needed for  converting millis to sdf. This only happens in cases where final output is expected in SDF\ncase DAYS:\n        _dateTimeTruncate = (dateTime) -> _outputDateTimeFormatter.print(\n          dateTime.withDayOfMonth(\n            (dateTime.getDayOfMonth()/sz)*sz\n          ).dayOfMonth().roundFloorCopy()\n        );\n        break;\nThe problem is dateTime.getDayOfMonth() will return values in [1-31]. sz is the output granularity. If the granularity happens to be greater than the dayOfMonth, division will give us 0.\nFor example, in your case, outputGranularity=7 DAYS, and hence sz=7. So for days 1-6 this will fail.\nWhich is also why it works when you try 1:DAYS because there is no 0 generated in the division.\nThe fix for this would depend on what the right output for this should be. The current logic will always create output based on the local boundary (for cases where output is in SDF)\nFor example:\nBelow is a list of UTC millis, starting 2018-09-19T00:00:00 to 2018-10-09T00:00:00. The second column is the output of applying \ndateTimeConvert(millis, '1:MILLISECONDS:EPOCH', '1:DAYS:EPOCH', '7:DAYS')\nThe third column is the output of applying\ndateTimeConvert(millis, '1:MILLISECONDS:EPOCH', '1:DAYS:SIMPLE_DATE_FORMAT:yyyyMMdd', '7:DAYS')\nThey are not equivalent.\n1537315200000L, 20180914, 17787\n1537401600000L, 20180914, 17794\n1537488000000L, 20180921, 17794\n1537574400000L, 20180921, 17794\n1537660800000L, 20180921, 17794\n1537747200000L, 20180921, 17794\n1537833600000L, 20180921, 17794\n1537920000000L, 20180921, 17794\n1538006400000L, 20180921, 17801\n1538092800000L, 20180928, 17801\n1538179200000L, 20180928, 17801\n1538265600000L, 20180928, 17801\nIn the first case, bucketing is done starting from epoch start.\nIn the second case, bucketing is done such that the start of the month resets the start of the bucketing (this is because of the use of dayOfMonth to set the day) .\nNot stating that this approach is right or wrong, just explaining how it is working at the moment.\nThis is how it would work for other granularities as well (hours bucketing will reset at the day boundary, etc)\nThe fixes for this could be:\n1) Preserve this behavior. In that case for days 1-7 of the month (2018-09-01 to 2018-09-07), we would get 1 bucket (2018-09-01), for days 8-14 we would get bucket 2 (2018-09-08). \nThis would be the easiest fix, we would only need to make some changes to the division in that code block pasted above.\n2) Make the bucketing for SDF also work starting epoch. This would need some refactoring of how this bucketing is done for SDF cases. Not sure if anyone is using this UDF and depending on the particular behavior. (@subprotocol )\n3) Leave this as is for now. For your specific usecase, you can use (millis, '1:MILLISECONDS:EPOCH', '1:DAYS:EPOCH', '7:DAYS') and convert the millis later to what you need.\n@kishoreg . If we were to support WEEKS in output granularity, where should the bucketing align from? In case of outputFormat in EPOCH, the bucketing can just be done in epoch weeks. But if output is in SDF, we have many options\n\nIf we start bucketing from epoch start, January 1st 1970 was a Thursday, so all buckets would be starting Thursday. \nIf we want a calendar alignment, should we start Monday/Sunday?\nIf we keep current behavior, days 1-7 would align with bucket yyyyMM01, days 8-14 with yyyyMM08 and so on. The number of week buckets in a year will not equal to 52 in this case, as we will have a half bucket created for every month's last few days.\n\nI prefer option 1, seems the most predictable and clean approach. We can also make all bucketing follow this. No resetting buckets at boundaries (DAYS should not reset at month, HOURS should not reset on days). But this would mean, you will not get a calendar alignment, and would have to offset your date if you need it aligned to the calendar.\n@kishoreg @mayankshriv please provide your suggestions if possible.\n. This change is useful even if we get to the model of running ValidationManager soon after leadership change. We have a check for \"tooSoonToCorrect\". Segments left in a non-complete state won't be picked up by the ValidationManager that starts immediately, as we will not pick segments that were updated less than 10 minutes ago. Agree that the subscribers should not really know \"leader\" or \"not leader\", eventually, when we get to a distributed load model. As of now, the periodic tasks do check for leader before executing, and this is one way to get them to start/stop on leadership changes.\nEven in the distributed model, the periodic tasks would have to start/stop and switch between the controller responsible for it.. Step 2 of https://github.com/apache/incubator-pinot/issues/3600. Step 3 of https://github.com/apache/incubator-pinot/issues/3600. Will you also be changing public List<InstanceConfig> getAllHelixInstanceConfigs() method to read from cache? Currently it is still reading from zk right?. Looks okay to reduce frequency once https://github.com/apache/incubator-pinot/pull/3633 is done. @kishoreg found out that there is already a flag in ValidationManager periodic task which makes some tasks run 6 hourly, and only the realtime validation run hourly. Increasing the frequency should be safe in this case.\nBut I agree, those should be split out, instead of having different frequencies within a periodic task. The tasks have been split out. The controller config controller.realtime.segment.validation.frequencyInSeconds can be used to change frequency of realtime validation. Thanks for pointing that out @mcvsubbu \nI went over the reads that happen in all 3 tasks.\n\n\nOfflineSegmentIntervalChecker\n reads ideal state of offline table\nreads all segment metadata for the offline table\n\n\nRealtimeSegmentValidationManager\nreads ideal state of realtime table\nreads only names of all segment metadata for the realtime table\nreads all instance configs inside StreamPartitionAssignmentGenerator for the table\n\n\nBrokerResourceValidationManager\nreads ideal state for the table\nreads instance configs once in preprocess\n\n\nIt doesn't look like any reads will be repeated because of splitting out these tasks. 1 and 2 read different ideal state/segment metadata. 2 and 3 both read instance configs, which they both did even before splitting, so it's not a new addition. The instance configs read will be better anyway after https://github.com/apache/incubator-pinot/pull/3633\nLet me know what you think\n . If resetting stats is not desirable, the old stats will have to be copied over to the new file. \nI wrote a tool to help with this translation. This tool was a java project which had both versions of the file RealtimeSegmentStatsHistory.java in the same project (com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory and  org.apache.pinot.core.realtime.impl.RealtimeSegmentStatsHistory). It also had a main method which created a new stats file and copied the old stats to this file.\nHere's snippets from a tool I wrote.\nMain.java\n```\nimport com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory;\nimport java.io.File;\nimport java.io.IOException;\nimport java.nio.file.Files;\npublic class Main {\npublic static void main(String[] args) throws Exception {\n\n    String oldStatsFilePath = args[0];\n    RealtimeSegmentStatsHistory\n        oldHistory = RealtimeSegmentStatsHistory.deserialzeFrom(new File(oldStatsFilePath));\n\n    String newStatsFilePath = args[1];\n    File newStatsFile = new File(newStatsFilePath);\n    Files.deleteIfExists(newStatsFile.toPath());\n    org.apache.pinot.core.realtime.impl.RealtimeSegmentStatsHistory newHistory = org.apache.pinot.core.realtime.impl.RealtimeSegmentStatsHistory.deserialzeFrom(newStatsFile);\n\n    // copy entries and cursor\n    newHistory.setEntries(oldHistory.getEntries());\n    newHistory.setCursor(oldHistory.getCursor());\n\n    System.out.println(oldHistory.toString());\n    System.out.println(newHistory.toString());\n}\n\n}\n```\nAdded these methods in the org.apache.pinot.core.realtime.impl.RealtimeSegmentStatsHistory file:\nsetEntries\npublic void setEntries(com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory.SegmentStats[] linkedinEntries) {\n    for (com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory.SegmentStats linkedinEntry : linkedinEntries) {\n      if (linkedinEntry == null) {\n        continue;\n      }\n      SegmentStats newSegmentStats = convertFromLinkedinToApache(linkedinEntry);\n      addSegmentStats(newSegmentStats);\n    }\n  }\nconvertFromLinkedinToApache for SegmentStats:\npublic SegmentStats convertFromLinkedinToApache(\n      com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory.SegmentStats linkedinSegmentStats) {\n    SegmentStats apacheSegmentStats = new SegmentStats();\n    apacheSegmentStats.setNumRowsConsumed(linkedinSegmentStats.getNumRowsConsumed());\n    apacheSegmentStats.setNumRowsIndexed(linkedinSegmentStats.getNumRowsIndexed());\n    apacheSegmentStats.setNumSeconds(linkedinSegmentStats.getNumSeconds());\n    apacheSegmentStats.setMemUsedBytes(linkedinSegmentStats.getMemUsedBytes());\n    Map<String, com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory.ColumnStats> colNameToStats =\n        linkedinSegmentStats.getColNameToStats();\n    for (Map.Entry<String, com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory.ColumnStats> entry : colNameToStats.entrySet()) {\n      ColumnStats newColumnStats = convertFromLinkedinToApache(entry.getValue());\n      String column = entry.getKey();\n      apacheSegmentStats.setColumnStats(column, newColumnStats);\n    }\n    return apacheSegmentStats;\n  }\nconvertFromLinkedinToApache for ColumnStats:\npublic ColumnStats convertFromLinkedinToApache(\n      com.linkedin.pinot.core.realtime.impl.RealtimeSegmentStatsHistory.ColumnStats linkedinColumnStats) {\n    ColumnStats apacheColumnStats = new ColumnStats();\n    apacheColumnStats.setAvgColumnSize(linkedinColumnStats.getAvgColumnSize());\n    apacheColumnStats.setCardinality(linkedinColumnStats.getCardinality());\n    return apacheColumnStats;\n  }\nSome getters and setters will need to be added to both classes (cursor, entries, segmentStats map etc.)\nRan this tool to convert all stats.ser files on realtime servers to segment-stats.ser\n. I'm not sure a test case can be added to stop this. Imo it has to be a slight refactoring of when we allow to start passing the _pinotHelixResourceManager as arguments. I've update the PR description with more details. I did some evaluation. You can introduce the new metadata upload\nStep 1\nAdd a new endpoint in LLCSegmentCompletionHandler as\n@POST\n  @Path(SegmentCompletionProtocol.MSG_TYPE_COMMIT_END_METADATA)\n  @Produces(MediaType.APPLICATION_JSON)\n  @Consumes(MediaType.MULTIPART_FORM_DATA)\n  public String segmentCommitEndWithMetadata(@QueryParam(SegmentCompletionProtocol.PARAM_INSTANCE_ID) String instanceId,\n      @QueryParam(SegmentCompletionProtocol.PARAM_SEGMENT_NAME) String segmentName,\n      @QueryParam(SegmentCompletionProtocol.PARAM_SEGMENT_LOCATION) String segmentLocation,\n      @QueryParam(SegmentCompletionProtocol.PARAM_OFFSET) long offset,\n      @QueryParam(SegmentCompletionProtocol.PARAM_MEMORY_USED_BYTES) long memoryUsedBytes,\n      @QueryParam(SegmentCompletionProtocol.PARAM_BUILD_TIME_MILLIS) long buildTimeMillis,\n      @QueryParam(SegmentCompletionProtocol.PARAM_WAIT_TIME_MILLIS) long waitTimeMillis,\n      @QueryParam(SegmentCompletionProtocol.PARAM_ROW_COUNT) int numRows,\n      @QueryParam(SegmentCompletionProtocol.PARAM_SEGMENT_SIZE_BYTES) long segmentSizeBytes,\n      FormDataMultiPart metadataFiles) {\nIn the FormDataMultiPart metadataFiles multipart, we expect metadata.properties and column.meta. Extract those and copy them to a local temp folder. You can use that folder to create a new SegmentMetadataImpl (the way it's done in PinotLLCRealtimeSegmentManager::extractSegmentMetadata\nStep 2\nIn ServerSegmentCompletionProtocolHandler, introduce a method segmentCommitEndWithMetadata(SegmentCompletionProtocol.Request.Params params,\n      File metadataPropertiesFile, File creationMetaFile). The url that gets constructed needs to change to POST. These 2 files need to be added as entities (similar to the way segment tar file is added in getUploadFileRequest)\nStep 3\nIn LLRealtimeSegmentDataManager::doSplitCommit, change call from segmentCommitEnd to segmentCommitEndWithMetadata. The metadata files for this call can be extracted from the segmentTarFile.\nStep 4\nConditions can be added, which check if the metadata was extracted successfully. If not, download the metadata from the segment store. Ensure path coming from non-split commit upload also works\n@chenboat @mcvsubbu . Issue: https://github.com/apache/incubator-pinot/issues/3867. +1 to @mcvsubbu's comment about adding it in the existing call instead of having a new segmentCommitEndWithMetadata. It would much simpler to migrate, and we'll avoid a lot of code duplication. > > Also, can you modify the existing SegmentCommitEnd to take on an optional 2-part form? #3748 (comment)\n\nTo clarify. The current SegmentCommitEnd() is a GET method. Can a GET method take a form? It looks to me abuse of GET. If we change to POST, would that be a back compatibility issue?\n\nAh yes, existing method is GET. In that case I think what you have is the best way. @mcvsubbu we discussed that doing so will increase the time even for partitions which have not been fixed. We might be overall increasing the total time in that case. And if RealtimeValidationManager frequency is low, the lag will become too much. I thought it would become too strict.\n. Based on comments and discussion, this would be better split out into multiple sections under Extensions. Will do that separately.. Fixed\n. Removed all test logs\n. Do we still need to keep this removal listener?\n. Do we need the else block here? Timeseries won't really be without atleast group by time.\nAlso the comments here still say contributor/heatmap/tabular\n. Why is exploreDimension always set to empty?\n. Fixed\n. Is \"thirdeye\" the apt path prefix here? Could we just remove \"metadata\" from the 2 calls below and put it here?\n. can it just start with function or anomaly-function then? will be more consistent with the other resources and also with it's own name\nOther than that, LGTM\n. This was a test class for a completely different thing. Sorry forgot to erase if before adding. Removed.\n. We had added these lines \"currentSession().getTransaction().commit();\" in the createOrUpdate as it was causing failures in AnomalyResource. Do Anomaly Dashboard CRUD operations in particular work with these changes?\n. LGTM\n. Fixed\n. Yes a node can be more than just a scheduler/worker/monitor\n. Yes good suggestion, fixed\n. thanks for the tip!\n. Fixed\n. That doesn't seem to work \"org.hibernate.HibernateException: No session currently bound to execution context\" \nRemove the session handling and add it somewhere else?\n. AnomalyFunction.dimension is not the same as AnomalyResults.dimensions. In anomaly function, dimensions stores the dimensions to use for drill down (eg: countryCode), whereas in anomaly results, this value is the actual dimension key (eg: (,,,norway,)\n. Need to retain dimensions. Rename it if this is being confused between the dimensions in anomaly functions\n. setDimensions is needed here\n. same for setDimensions as above\n. what is this new package? api.dto? \n. Removed\n. Added more information to the log\n. fixed\n. SessionFactory was being used by AnomalyFunctionRelationDAO. I removed the use of relationDAO completely as it's not being used. We can consider adding it back if it comes of use later. So removed sessionFactory\n. Separated fromAddress and toAddress from the smptConfig\n. removing windowStartIso and windowEndIso\n. that's what i wanted to call it, but we already have EmailConfiguration (mapped to our email_configuration table)\n. EmailServerConfiguration?\n. the last time we talked about this i got the impression that this was required for the migrations.xml. That still gets applied without this?\n. I'm guessing this is the new way to apply migrations. Never mind my comment above\n. Looks like DateTime as QueryParam isn't supported: http://jersey.576304.n2.nabble.com/Joda-DateTime-td7581896.html\n. Fixed the names\n. sequentialAllowedGap is the gap which if exceeded, the anomalies don't need to be merged?\nAnd is mergeDuration the max duration for which anomalies can be merged?\nCan we add javadoc/comments to explain these? \n. isn't the merge strategy being taken into account anywhere? it looks like a pure time based merge, or am i missing something\n. What is this function doing? Who will be using this count?\nIs it grouping by only function or strategy (should it be names getAnomalyDataGroupedByStrategy) ?\n. minor nit for readability: can we keep this consistent in terms of what is capitalized? (all keywords like SELECT, GROUP BY etc have been capitalized in all other query definitions)\n. Fixed\n. PinotThirdeyeClient can be obtained from ThirdeyeCacheRegistry instance. \n. This is not being called anywhere right now and only returning unique counts? How/when is this going to be executed? \n. Thanks for adding this\n. fixed\n. This change is breaking the functionality\n. Would it help to have a findSingleResultByParams since this is being used in mulitple places\n. Why change the name to summarizer? This is merging, and we're going to have another functionality which will be called summarizer later on\n. dashboard configs can have same collection and config type, but different ids. This config_id is necessary to ensure that only 1 collectionConfig and CollectionSchema is allowed per collection, but multiple are allowed for dashboardConfig. There could be more configs in future with same requirement. Please read design doc sent with PR for explanation\n. I prefer having it as config_type\n. addressed above\n. This isn't something that would be constant just depending on the config_type. It comes from the object data\n. fixed\n. fixed\n. fixed\n. please move this to a start method in AnomalyMergeExecutor \n. Why was this changed back? This is breaking the deployment again. This was fixed correctly\n. Created THIRDEYE-877 to address this\n. good suggestion, changed\n. Earlier this map used to get baseline and current, which would get separated later on. This was refactored to add a utility which is doing it before hand. So now we get just 1 timeseries in the response. \n. Can we move this to DimensionKey\n. change dimensionNames to dimensionValues\n. Change to dimensionName\n. Can we reuse computeTimeDimensionValues method here? looks like logic is same\n. it is in a retry loop. I left the original retry loop as is. \n. Can the merge algorithm handle a situation \"treat this as an anomaly only if you see 4 consecutive of this type\"? I thought merge algorithm only uses gap. So if we see 3 consecutive anomalies, we are going to generate an anomaly now if I understand this correctly\n. Why do cleanup  based on this condition? What do you think about doing this all the time?\nIf you do decide to keep it condition based, please add a comment here to describe why this is being done\n. why rename to BAO? They're holding the DAOs\n. this was a testing related change, will revert this\n. yes, will remove this\n. added TODO\n. fixed\n. fixed\n. Changed it to check for metricAlias and value\n. fixed\n. moving maxDataTimeCache to the end will result in the dashboard to load very slowly in the beginning. Any strong reason to shift it down?\n. changed to use same map\n. should we create indexes on the columns? for target_entity?. Yeah I agree it's a little confusing to have 2 levels here. Everything is an adhoc function, and we write/delete them as we need them. That's just a class for quick dev tasks. Add these Strings to constants?. Why defaulting to \"Unknown\"? is it for display purposes?. +1\nI think there's a good implementation in the bean objects. these strings would be better off as an enum in a constants file. We already have a Utils class. You could either use that one itself, or name this to AnomalyUtils to be more specific? . There's a method few lines above in this file, called backfill. It is doing exactly what this method is doing. Please make sure we don't duplicate this functionality. Either remove the backfill method, or make this regenerate method call backfill method.. This method looks exactly like the cleanup method in the CleanupAndRegenerateAnomaliesTool. Please have a look at CleanupAndRegenerateAnomaliesTool, and remove the duplicate code frmo there. Make the tool call these methods. This file can be the source of the functionality, and the Tool can be another way of accessing them. . Shouldn't happen in the code, but could happen if invoked as an endpoint with bad inputs. Handled this. Please remove this path from your machine. Make this generic/configurable. use static constants for = and &. typo at anomaly. remove this path. remove this path. remove linkedin specific data. What's the difference between this filename and the variable fname defined below? this filename doesn't seem to be used anywhere. Use Logger instead of sysout everywhere. and then LOG.error(\"msg\", e) or LOG.info(\"message {}\", arg1);. rawResult. Maintain the same convention in field names, feedbackType instead of _feedbackType. Use StringUtils.isNotBlank. Exactly same method is defined in another class. If it needs to be reused, create a Utils/Helper class with static reusable methods. Use org.json, instead of com.alibaba.fastjson. handle this exception in the method instead of handling it in the main everytime it is called. create methods for printing date dimension table, and for printing schema. Use \"collection\" which has been assigned value of args[1]. Assign values of args[3] and[4] to variables, as they are being used in multiple places, and helps in giving clarity as to what is being passed as params. Is alertFilterAutotunePropertiesFile requires? Looks like it is not being used anywhere. Don't we need to do this for all the other tests (TestAnomalyFunctionManager, TestAlertCOnfigManager etc)?. Let's return null here, similar to what you've done in runBackfill. Will help keep consistency in what is returned when detection doesn't run. Also will avoid situations where we might actually have a jobId=0L. Retry should be done  per job, and not for every failed task. Retrying the job in effect retry each task. There's already a DataCompletenessResource in thirdeye/dashboard/resources. i would prefer we combine. And keep it in the dashboard/resources, so that all resources will stay in a single place. We have a DataCompletenessTaskUtils.java. Maybe reuse that so we don't have too many Utils?\n. I believe we follow the convention of naming the Manager instances as dataCompletenessDAO. Would be good to continue that . Use Predicate instead of filters map. Check DetectionStatusIndex for example.. Can we have some java doc explaining this new config and these fields? mainFunctionId isn't too self explanatory.. We're creating too many custom Period objects, and we could mistake positions when reading/editing. There's a method in TimeGranularity called toPeriod. Try to see if you can use that, or create a static method in utils Period toPeriod(int timeSize, TimeUnit timeUnit).\n. This new method and the one below have a lot of repeated code, try and create a reusable snipped from them. As per our discussion, you've introduced 0 offset in training because your function looks back 90 days. BUt this will work only for that specific function, and not for other DAILY functions. We can't make an assumption on automatic fetching of data at this place, and this place should be agnostic of logic specific to functions.\nI would suggest, either keep it like it was before and just make offset 30 days (we will end up fetching 30+90 days), or introduce a new function in the backend for this kind of timeseries fetch.. StringUtils.isNotEmpty() will do this in one go. It would be better to get properties of the detection task such as OFFLINE, BACKFILL from the DetectionTaskInfo. Using the job's name to pass on this information isn't such a good idea. The DetectionJobContext and DetectionTaskInfo were created to exactly this kind of information transfer from the creator to the executor. The tasks should be able to run, no matter what the job is named, purely on the basis of the task info and task context. Having booleans like offline and backfill (with predefined defaults), will act better to keep the platform generic, and not make the job property drive the task execution.. use detectionTaskInfo instead of type casting taskInfo once again. Try to follow convention of importing upto DetectionJobContext and then using DetectionJobType directly, for sake of consistency with rest of the code (same comment for all usages of DetectionJobContext.DetectionJobType). should we have a DEFAULT DetectionJobType too, instead of making null for everything else.  detectionJobType should have a default value.. if you\u2019re sticking to null (or picking a default), initialize it here. Otherwise, if new code tries to run any older tasks, it will fail when converting the json to object. minor nit: typo at maxLveZone in 2 places. Where are these variables being used?. Why is baseline an entity?. Do we want to enforce having a score to the entities at all times? Even if it was created for the search context?. In general throughout the code, can we be more verbose about variable names? When reading new code, it avoids having to go back again and again to check what a \"t\" or a \"k\" could mean.. Comments left by mistake?. Use GrouperType.values() instead of class.getEnumConstants() ?. Minor comment, please try to keep variable names longer. It's quite difficult to follow the code with single character variable names like e. Thanks for pointing that out!. I did not add enum here, because that would mean putting autometrics specific logic in open source. Does no default value mean we always have to give blacklistCollections as well?. Try using Objects.hash and Objects.equals, it will save many lines of code and improve readability and consistency with rest of the code. can we try having meaningful variable names throughout the code instead of e, m n? it gets quite difficult to follow the code. Wanted to not enforce user to have to define whole object in the payload for updating a single field. That will create an additional step for user to retrieve the right payload first, and then edit it. Change is intentional, shabby numbers are not. Fixed this to use constants. Added to javadoc to explain why this is done. Is that baseline mandatory?. Fixed.. Verbose variable names please (e, dto). Why is this empty map? Isn't this where there would be logic to map groups to emails?. Some javadoc explaining what AlertGroupFilters do, and scenarios it would be applicable, would be helpful. Typo in method name \"Anomalies\". Do you need to add the Singleton annotation here like other ManagerImpl?. For save and update, why are both cases being handled in both methods?\nAnd what's the reason for your own implementation here instead of  the super methods?. same comment as above, why not rely on the superclass method?. Could you add some javadoc explaining what this pipeline will do. what does this property mean?. e-->entity. c--> something verbose.  \ud83d\ude06 . No but seriously, it's difficult to follow code with e,t,f,c,df etc.. Please change those. Fixed. Added javadoc, and exception if multiple found. Yes it is implicitly public, removed public. done. Could use MapUtils.isEmpty(), isn't it doing the same thing? . remove references to your machine path. Please remove references to your box here . Don't these need default values? Can dashboard never be started without rca framework?. minor nit: why does this param name starts with a capital letter?. This is not the dataset config cache. This simply contained the list of collections. done both. done. changed to datasetListCache. done. Will take this up as part of the PR to clean up interfaces.\nThis is part of data source. I extracted it into a separate class, because I didn't want to pollute the data source impl with long cache load methods. The instantiation and call of this is still happening in the data source. Yes would be nice to have. Fixed. Is blank metricIds okay?. Why not use path params if they're all mandatory inputs?. javadocs for these two (extractAnomalyTimeRanges  and truncateRanges) would be helpful . Maybe it's just me, but \"decorate filter set\" doesn't really convey that we are putting in pre aggregate value. Since you're touching this part, should we rename it? What do you think?. can we call this maxLookbackLengthMS. is dimensions never null?. can we use just 1 MergeAnomalyEndTimeComparator instance instead of creating a new object in every iteration?. can we call is classifierType everywhere in this file instead of providerType? What is the meaning of providerType?. rename the configDTO in classificationJobContext to make it clear what config this is talking about. Can we fix this method name, fixSacling ?. it won't matter right? it wont cause any NPE, and the UI will just read null in that case. Extract this (\"javascript:void(0);\") out to a constant usable by all the formatters? All the other strings too if possible (\"dimension\", \"metric\" et al). No. I can see it being used a lot in anomaly detection library. Also instead of having null as default, it's better to have a proper value.. I will let the owner of this logic handle this when my change is pushed, as I don't know what this code is trying to do. I changed variable names, however if logic needs to be updated, it is best Yungyu takes it up.. you're right, looks like test db doesn't support on update. Will update it in the code then.. Fixed @kishoreg . Fixed to not allow 0. Done. Done. I tried to make it consistent with the already existing metricFieldSpecs and dimensionFieldSpecs and timeFieldSpec. Those have setters, with no annotations. Should I add the annotations to those as well then?. No need to add to the set here. The set is used only in addField, to avoid adding same field twice (seems like an extra check, considering fieldSpecMap is already being checked, but will let it be for now). No, it's an enum consisting of only these values which are in the cases (DIMENSION, TIME, DATE_TIME, METRIC). Refactored the tests to address the comments related to tests. Fixed. Done. Tried to follow what was done in the rest of the setters of the schema, which is either a comment saying \"// Required by JSON de-serializer. DO NOT REMOVE.\" or no comment/annotation at all. Not sure if  @VisibleForTesting  makes sense here. Will add comments/javadocs. Cleaned up constructors clutter, keeping only a single one which will be used immediately.. @VisibleForTesting does not seem to disallow usage, even from IDE. Added javadoc, stating these should not be used.. Cleaned up addDateTime methods clutter, keeping just 1. I removed an import, the IDE seems to have added all the other line formatting.. Yes, it can be string in case of more advanced simple date formats. And since it is an n units since epoch calculation, better to not restrict to whole numbers. Will add this in another PR. The format can be simple date format, which is a string, or it can be epoch which is a long. No it shouldn't be. We're changing the schema because we have been overloading column format and bucket into one. It is better if they are explicitly expressed separately. Fixed. Fixed, with option 3. done. done. fixed. With all usecases I've encountered, the bucketing (last argument) is more important than the output format (second last), as the second last argument could often be the same as the first. I prefer having all three mandatory, so that users don't try to overload the function of one into the other. Let me know what you think . doen. Done. removed. Yes looks like I made an incorrect assumption that there will be only 1. Fixed this.. Changed. Added a check for this. Changed this to look for outgoing first, and use incoming if outgoing not found. Added, thanks for catching this. Made backup dir mandatory. I prefer having a compulsory backup, and yes better to let user decide where to backup. Ah nice, removed my redundant check. done, added tests for the function too. Simple date format can have colons in it (eg: M/d/yyyy h:mm:ss). In such a case _timeFormat.split(\":\")[1] will extract only part of the format. Consider using split(separator, limit)?. Mayank made a suggestion to introduce a factory to return the right plan node. I wrote this by referencing the MetadataBasedAggregationOperator. Something in particular that's missing?. min max doesn't support non numeric columns right no. Created https://github.com/linkedin/pinot/issues/2208 to track that.. Works fine with older segments yes. Disabled  the path to min max from metadata for now. . TimeZone understands long form timezone notation (like America/Los_Angeles, Asia/Kolkata etc), short form (like CST, IST) as well as GMT offset (GMT+0530, GMT-07:00).\nDateTimeZone understands only long form timezone notation (like America/Los_Angeles, Asia/Kolkata etc). But DateTimeZone can understand TimeZone.\nThe DateTimeFormatter we use, requires a DateTimeZone input. Hence we parse timezone using TimeZone, and give that to DateTimeZone, which enables us to support all formats.\n. Added space handling in regex. Also trimming timezone and sdf strings.\n. It will default to UTC by default. This is the behavior of TimeZone. What is the difference between nReplicasNU parameter and nReplicas on line 1237? They look like they're the same? Do we need both?. It is set to 0. It does not throw an exception. \nAdded a comment to document this for when we start using it. Added units. Also added comments about behaviour when this is not set by client. avoid using in the method or completely not use it ?\nif in this method, yes, we can pass listFields instead of ZNRecord. But why do we need to avoid ZNRecord? . Partition assignments are applicable only to realtime tables. Will put that in the javadoc. Renamed to PartitionAwareAssignmentGenerator. Added a comment to fix this. . Fixed. The factory does take care of it. Unless explicitly specified in the table config to use something else, the factory will return UniformPartitionAssignmentStrategy.  . Fixed renaming and formatting. I had thought of putting it in abstract base class too, but was confused between which approach to take. I like the approach of abstract class better, because that way all responsibility of writing (partition assignment and ideal state)  is with the implementation and not with the caller. If we move updateIdealState to HelixResourceManager, the writing of partition assignment would still happen in the implementation, whereas the writing of ideal state will happen outside. If we go with approach 2, should we also be pulling out writePartitionAssignment to PinotHelixManager? And in the future if another strategy wants to write something else, should that be moved too?. Yes, added it. Another PR with the abstraction will follow. But fixed these few spots for now. Made this change. Will do this in a future PR. Will introduce a PartitionKey class with partitionId and replicaId. TableConfig could be passed and used from the constructor. However, if someone were to create an object once, and then call rebalance multiple times, any change made to the table config in between will be ignored. So I think it is better if the TableConfig comes in with every call to rebalance, so that it will reflect the latest change requested. removed it. Changed.. The api has already been modified to send back partition assignment along with the ideal state. It is actually the other way. Everything here operates assuming tableNameWithType. I haven't introduced the locking part. I have simply split the commitSegmentMetadata method into 3 parts \n1. update old segment metadata \n2. create new segment metadata \n3. update ideal state. \nI did that, so that it is easier to call just some of the parts from the code which tries to correct incomplete commits (completeCommittingSegment) . Should we remove this TODO, since you chose the approach of extending PartitionAssignment instead of creating a PartitionKey class? Or do you think it might still be a good idea to create a PartitionKey?\n. should this be Set replicaGroups instead of partitions?. This might be useful to have in the super class instead of here. Can replicaGroupStrategyConfig be null? I see null checking only for segmentConfig in the place where buildReplicaGroupPartitionAssignment is called. numPartitions and numInstancesPerPartition terminology is a little confusing. \nnumPartitions is referring to the partitions on a column right? so 0_ 1_ means 0, 1 are the partitions i.e.numPartitions=2. \nnumInstancesPerPartition seems to refer to 0_0 0_1 .. 0_n as separate partitions. So it is actually referring to numInstancesPerReplica\nCan we change one of them? I see that numInstancesPerPartition is already in the tableConfig. So maybe we can rename numPartitions to something like numColumnPartitions. Yes, in the tests the write method checks for an increasing version number, and it will break if I send -1. Will try to see if I can easily modify test to handle this.. fixed. gibn -> given. Reverted the renaming. Changed it. I was trying to keep it consistent with all the other frequency values in the config. I can look into this as part of a future PR, will avoid trying to touch so many files in this PR as it is only for RelocatorService . Ah yes, good suggestion. Yes, thanks for catching that. Changed it to put the compute logic in retry along with the update. All that happens inside HelixHelper.updateIdealState. It compares updated ideal state and original ideal state, and updates only if there's a change. I don't plan to keep this logic for long (see TODO). The plan is to be use SegmentAssignmentStrategy for this assignment. Currently the interface and implementations of SegmentAssignmentStrategy aren't directly usable for for this purpose. Will be working on that in another PR.. Hmm, no point in retrying for config error. Will see if i can restructure it a bit. Yes, as per our discussion offline, will model the logic in this service to use RebalanceSegmentsStrategy - https://github.com/linkedin/pinot/issues/2609. Do we want to move this to realtime/stream ? it is currently in realtime/impl/kafka. removed ideal state argument and removed the lines to copy over map. We already have contract for rebalanceIdealState in the interface. I thought it's better to stick to that one, and let the implementation take care of sub methods. An implementation could want to just fit logic in the top method right? . HelixHelper.updateIdealState does not return any indication that it succeeded. That is exactly what is happening. But how do I send it back from rebalanceAndUpdateIdealState? It needs to be sent back to be displayed. bootstrap->replicaGroupBootstrap to make it explicit what it's talking about?. isn't tableConfig.getTableName() always with type suffix?. I've removed this base class, are you planning to bring it back?. Use OfflineTagConfig.getOfflineServerTag(). We will soon be introducing TenantConfig to get tenant names, and the logic will reside in TagConfig. maybe we can move all exception generating checks all the way up in this method, so that we do it before we create tenant name and fetch instances. minot nit. line 151 already calls getAllInstances. can we reuse it? we can avoid going over entire partition assignment and creating new arraylist and set twice. Will you be making the change similar to DefaultRebalanceSegmentsStrategy to move rebalanceSegments inside the retry?. same comment for tableNameWithType construction as on line 62. on line 325 all servers in removedServers were removed from serverToSegments. So removedServers will never contain any of the servers that are remaining in serverToSegments keySet right? . We want to continue gracefully if any of the input is null. Removed all code related to picking specific set of servers and number of servers to be picked. Will add randomization of tests when we add the logic to pick random servers. added. Not sure what you mean by checking for exception when number of stream partitions changes underneath us?. Added random starting point back, added some randomization to tests, to pick randomly generated table names. Added InvalidConfigException. confusing comment \"have do not have\". Moved logic for new table creations outside this method. This addresses all concerns about new table logic and tests related to it. Added a TODO for this. As of now the partitionAssignmentGenerator is a field inside the PinotLLCRealtimeSegmentManager, and hence accessed in this way. When we move to having a factory for partition assignment generators, this will be refactored accordingly. This is to make sure that we indeed catch an exception when we expected it, and did not just slide through the tests. I set it back to false immediately, because I wanted it to try again with not tooSoonToCorrect, before going back up and introducing more error conditions. I did that because I wanted to avoid having to keep track of which partitions already have the error condition. Good catch! Fixed it. Is was undetected due to the ineffective map comparison. I had consciously kept it as final integers and not enum, because I wanted to keep it local. \nRefactored it to use enums, and restructured the random calculation to pick random 20%, instead of numbered 1-20. Fixed. Time column is not a mandatory input anymore. Added some TODOs to check that if this is not provided, use DATETIME field, and if multiple of them are found, throw an exception.. Changed it to use period string. Have kept the getter and setter of the timeThresholdToFlushSegment to operate on millis, and only internally handled it as Period. I did this to avoid having to make every caller of the setter and getter to create their own period string using their own period formatter.. I wanted to have all the getters and setters together. Why are we skipping out String? For simple date format, the time column might be in string right?. I see that the config itself has only EpochToEpochTransformer. Why are we sticking to just epoch input format?. If committingSegmentSizeBytes <=0 we use threshold from previous segment. Is that not enough?. Removed the check for time threshold from segment in LLRealtimeDataManager, and removed setting of time threshold in segment metadata. Done.. the default is defined only in the KafkaHighLevelStreamProviderConfig. The value is extracted using the low level class. done. Are we going to start keeping the whole tag name here (with suffix)? My understanding was that tag=. We will never delete an IN_PROGRESS segment in realtime for 5 days. This doesn't apply to completed segments. \nCurrently the retention manager deletes a segment IN_PROGRESS if it doesn't find it in the ideal state, with no check for creation time. . The time check is only once and we return false if segment is too young to be deleted\nAll other checks happen only after we come forward from the time check. Combined the else condition to handle absence of CONSUMING in general. The steps to repair are same no matter what we are left with in the absence of CONSUMING segments. should this be REALTIME_DESIRED_SEGMENT_SIZE in the formula in the comment?\nnumPartitionsInMachine * (consumingPartitionMemory + numPartitionsRetained * REALTIME_DESIRED_SEGMENT_SIZE). realtime.segment.desired.size? . Looks like this method is not being used anymore, can we remove it?. addressed all the comments @mcvsubbu . renamed. I need to initialize it before I can use it right? I thought that is the way I can map the object to that file. Fixed, defaulting to 3 days. Sure, changed it to seconds. Though this would depend on whether the user of the tool is precise enough in the inputs. Changed. done. The intention is to do it just before we write the metadata to the property store, which happens to be the last step of the method. We can, however I wanted the exception to be thrown as KafkaPermanentConsumerException and not just PermanentConsumerException. Refactored it to have PermanentConsumerException and TransientConsumerException in their own classes. Exceptions thrown from the consumer would be generic, but wrapped around a specific exception defined by the stream if required.. I think I like KafkaConnectionHandler better, renamed. Fixed. Removed time dependency from tests. that is being done for one of the following tests, where we want to test for lastCacheInvalidMillis being updated wrt the older value. For this particular one, I wanted to test that initial value has been updated from 0  . Fixed. Made the clientId generation use only \"-\". Will probably extract this out somewhere so that if we ever need to create consumers from another place, we won't end up creating different style again. Added TODO for this and also for KafkaOffsetFetcher in PinotLLCRealtimeSegmentManager. removed unnecessary renaming. I don't think I understand. That's exactly what this method is doing . Understood what you're referring to from the conversation offline. Will change it accordingly. @kishoreg made the changes to get all instance configs in one shot. They are the same. I have tried not to change any implementation in this iteration. Once interfaces are set in, will make more modifications to this. One of the major modification is to get rid of kafkaStreamProviderConfig entirely, and just use StreamMetadata everywhere. . One of the future steps would be to remove the kafkaStreamProviderConfig, and rely just on StreamMetadata. Hopefully that should help in eliminating the init method. If not, would be creating an Interface for StreamLevelConsumer. \nFor now, can add a TODO. I will make this change in the next couple of PRs, which will introduce stream specific StreamConfigs as wrappers around StreamConfig eg. \nKakfaStreamConfig config = KafkaStreamConfig(streamConfig)\nAs part of that, will go through all methods, and split them up into generic method calls vs specific calls. I was trying to avoid logic changes in this one.. Will take care of this in a following PR, which will \n1. Unify the StreamConfig and StreamProviderConfig, so that we have only a single config object moving around\n2. Split up the methods in StreamConfig, keeping only generic ones in the base class. All specific ones will go into StreamConfig wrappers specific to the stream implementation. Yes, fixed it accordingly. Will do this in a followup PR. Those method name changes will touch too many files, and it better go in separately. yes that would be a better place. Will change it. Not quite sure why it needs to be \"\" and not \"-\". Could you please elaborate?. have we confirmed that open source users are okay with these metrics being removed?. Can we also delete these metric definitions from ServerMeter now that they're not being used at all?. We need 2 calls, else everyone who wants to get an instance will have to provide helix manager. I put it at this place because helixManager is initialized in pinotHelixResourceManager.start(). If we were to move it before the start, we would have to extract out the helixManager setup part. Added stop method that calls onBecomeNonLeader if it was the leader. Fixed this using your suggestion of invoking the callback on subscribing to leader. done. Yes, that is a good idea. Will do so in a future PR. @sunithabeeram yes that's a good point, added the synchronization between start and stop. Added. The run() is implicit because of extends Runnable\nRefactored this a bit:\nPeriodictask has init() and implicit run() and stop()\nWhen PeriodicTaskScheduler is started, init() and run() are invoked\nWhen PeriodicTaskSheduler is stopped, stop() is invoked.\nThe implementation for all of these is in ControllerPeriodicTask. Loss of leadership, and regaining it, will invoke PeriodicTaskScheduler.start() which creates new executor service and calls the PeriodicTask.init() before scheduling. The init() method resets the stopPeriodicTask flag. So we should not need to set it to false again.. Good catch! Moved it inside.\nAlso moved the code to fetch table config inside the if, so that we avoid fetching table config from zk unnecessarily. I think it was put there by original author to say that we are fetching instance configs before processing all tables. \nRemoved it, as it is confusing and probably irrelevant now\n. Yes, left behind by mistake. Removed it.. That can be done for brokerResourceValidation. Changed it accordingly.\nBut for offlineSegment, we need to look at new default. The default for offline should be 6 hours. In the previous design of validation manager, the configured frequency was 1h, and the 6h was being controlled by internal flags and time variables. The OfflineSegmentIntervalChecker thus cannot rely on the older validation frequency.. Changed this.\nOfflineSegmentIntervalChecker  defaults to getSegmentLevelValidationIntervalInSeconds()\nRealtimeSegmentValidationManager defaults to getValidationControllerFrequencyInSeconds()\nBrokerResourceValidationManager defaults to getValidationControllerFrequencyInSeconds()\nThis retains all behaviour, wherein broker and realtime validations happen at validation manager freq and offline checks happen at segment level interval. That was done to totally preserve older behavior. \nChanged this to reflect new defaults after our discussion offline. done. I had started with 40s, but that was not enough time on travis infrastructure to setup the brokers and servers. That was making the tests fail on travis, even though locally they succeeded. Hence bumped it up.\nLocally it takes about 35-40s for setup to be ready. I could try making it 50, but I'm afraid the tests might fail unpredictably. Yes, that's a good idea. We could also maybe have common zk, controllers, brokers as well? The only thing changing across tests is the kind of tables created, the data pushed and the check/queries run. Changed the PR according to this suggestion. Changed it some more to keep _numTablesProcessed all within the scope of the base class. comment says 5 minutes, value says 30s?. Seems like a good place to introduce a metric to count failures in PeriodicTasks, so that we know if a task is erroring out. the LOG in if and else look like they're switched. *can be overridden. Why remove exceptionHandler method? It was consciously added so that we avoid such try catch in each ControllerPeriodicTask.. Can some comments be added, either here or above cleanupTask explaining why non leader cleanup is needed in this task? Since these tasks run on controller leadership gain, it's confusing to see this method here. Nicely done with the Context. why not keep exceptionHandler and call it here?. i don't think so. The line where it's breaking right now is MutableSegmentImpl::672\nfor (String column : _schema.getDimensionNames()) {\n      dictIds[i++] = (Integer) dictIdMap.get(column);\n    }\nIt's checked only for dimensions and time. Unless I'm missing some other place?. i changed TODO to FIXME. Perhaps put the InputStream creation in a try-with-resource block so that it gets closed ?. How about adding it as a parameter to SegmentCompletionManager::segmentCommitEnd? That way we don't have to put SegmentMetadata in the SegmentCompletionProtocol.Request.Params . I see that the way you've used it is for an internal call, and not really a query param. However, putting it here could make someone accidently use it in non internal calls as a query param.. We should have some exception handling in this method as well, so that we know which file is having problems. We could also create CommittingSegmentDescriptor right here, and pass that down. Just discussed this approach with @mcvsubbu  as well and we think it'll be the better way to go ahead. extractMetadataFromInputForm returns true on success and false on failure, is that correct? Then we shouldn't be returning null if true right? Here and also for the call below. Please add some javadoc, specifically to explain what is returned in which scenario. If we encounter this exception, what happens to the server who is waiting for a response? We should return FAILED response to the server.\n. There are 3 scenarios here\n1) Happy case - returned the metadata\n2) error extracting one of the 2 files - returning null\n3) error creating SegmentMetadata - throwing exception\nMaybe throwing exception isn't what we want? We should log the error and proceed with the metadata download, like case 2 would have done. unused import?. Can we also add the exception e to the log?. minor: can we have log statements in both these if blocks? . this looks fine to me. . Fixed. Similar to other exceptions in segment build path, let's catch these exceptions and return null.. shouldn't this be default false?. destDir.listFiles() is being called 4 times. Might be cleaner if we store it in a local variable. I see Subbu's comments about making default true. But the PR description says it will be default false. Please update the description in that case. ",
    "nipra": "LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Some explanation about why is this being done will help.\n. ",
    "rven1": "+1 for the feature. It seems low cost to force the current segment to be\nflushed. This would be an issue only if we upgrade the schema often, which\nis not usual.\nOn Fri, Jun 3, 2016 at 11:51 PM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\n+1 for the feature. Are there any other alternatives other than forcing\ncurrent segment to be flushed?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/151#issuecomment-223740505, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AIUJl97b027zfzPjy0-ppy5L8AljAYilks5qISB6gaJpZM4IuEOs\n.\n. Wouldn't dropping the current segment cause queries to give inconsistent\nresults during the time that the realtime segment catches up? What is the\nbenefit in dropping the segment over just moving to a new segment? Aren't\nprevious segments still with the old schema?\n\nOn Sat, Jun 4, 2016 at 12:06 AM, Xiang Fu notifications@github.com wrote:\n\nThe other alternative I can think of is to drop current in_progress\nsegment then restart it.\nFor this, we need to reinit kafka consumer to make sure we are consuming\nfrom the offsets that previous segment committed.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/151#issuecomment-223740975, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AIUJl1gTfYtjxkZ1rM4EY9HWtkBiyDSwks5qISPugaJpZM4IuEOs\n.\n. lgtm.\n. LGTM.\n. LGTM\n. There is a limit of 2GB per file. This means that the compressed size of a\ncolumn cannot exceed 2GB.\nHowever, you can have more segments if your data size is larger.\n-Venky\n\nOn Fri, Jun 24, 2016 at 4:24 PM, MubeenAfzal notifications@github.com\nwrote:\n\ndo I read it correctly? column size has a 2GB limit.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/issues/232, or mute the thread\nhttps://github.com/notifications/unsubscribe/AIUJl4wzYrBwA25hU6fFonsTjCjQphZ1ks5qPGc7gaJpZM4I-MxQ\n.\n. LGTM. Please wait for tests to finish before merging.\n. LGTM otherwise.\n. Servers with the earlier code able to handle the null character as the padding character have been deployed.\n. LGTM\n. LGTM. What additional information are you planning on adding? InstanceRequest currently does have the requestID, query and search segments. \n. Would be nice to pass QueryContext to parallel-query-executor as a follow-on change\n. made the changes requested by Subbu. Please accept.\n. Added a config variable. Will push after tests finish.\n. Changes look good.\n. Changes look good. Could you add a test?. LGTM. Good catch. . Changes look ok. But routing table test failed.. LGTM. Changes look good. Do you have any data on the memory improvement?. LGTM. Please wait for the tests to finish.. Control the creation of shaded jars using a profile called build-shaded-jar. Only build shaded jars for pinot-server, pinot-broker, pinot-controller and pinot-hadoop. Build time reduced from 2:50 min to 1:04 for building without shaded jars, and 1:20 for building only the specified shaded jars with the profile build-shaded-jar.. Now there is no way to create a fieldspec with a default null value?\n. Can you leave this comment and also add a comment if it is being called from Object mapper\n. Needs try/catch for cases when string convert throws an exception\n. Agreed, but you have to watch out for existing use cases which break with your change.\n. The try/catch is good. It would be a good idea to also investigate null pointer exception here and fix that.\n. The check for blocks[index] being null was already there. (Line 177)  I have seen the NPE on the pinot_server in the case of a timeout.\n. The padding character is used to pad Strings which are strings of char's. So, the padding character is also a char. char is a 16-bit character.\n. I added tests for getting the value from the dictionary for all three segments.\n. Now creating segments in the INDEX_DIR, which gets deleted in the tearDownClass routine.\n. Added deleteOnExit\n. Added README file.\n. Ok.\n. Done\n. This will flood the logs. It is better to have it under debug\n. svDimensionInt is better. Leave those as is.\n. This might be ok to catch corner cases. How about continuing to count with the existing group keys already seen?\n. Changed it to 10 minutes to be on the safe side.\n. Done\n. Now opening the file again instead of mark/reset.\n. Updated.\n. Done\n. Done\n. Done. Added test too.\n. (tableType == null) in both if and else parts.\n. Handling of (tableType == null) inconsistent between external view and ideal state.\n. I think tableTyoe in this case will not be null. You can assert this and remove the check.\n. No op?  Need to beef up this test with segment so that we can check for contents of IS and EV.\n. (tableType == null) means that you do realtime and offline. In case of external view you only get offline but in the case of idealstate you get both.\n. ok\n. Would be desirable to add a segment.\n. Since it is a list, do you want an add/delete interface?\n. Any other interfaces needed?\n. Why only these properties have the annotation?\n. Can we use Jackson 2 to convert the segment to its Json representation, otherwise we might miss newly added fields. Will certainly work if all columns are requested.\nJSONObject segmentToJson = new JSONObject(mapper.writeValueAsString(segmentMetadata));\n. Good change\n. The detailed and the old tests seem to be the same. Consider removing one.\n. Should try a test case with more than one table and more than one segment.\n. Thanks\n. The behavior of these routines is different from the standard retry policies.\n. done\n. Discussed with Jackie. This needs to be in the pinot-hadoop.\n. Removed.\n. Talked to Jackie and found that this structure is not as readable.\n. Done\n. Not as readable.\n. Can exercise preferred retry mode now.\n. It us used in generateAndUploadRandomSegment1\n. Done\n. Done\n. Done\n. Removed the other initialization.\n. Done\n. This is the specification for dataProvider. See http://www.seleniumeasy.com/testng-tutorials/dataprovider-in-testng for details.\nWe need dataProvider as well as the arguments which get substituted in each run.\n. Segment name can be noStarTreeSegment. noStarTreeSegment ?. Why is the minimum replica count for large cluster 4? Most tables in prod have 3 replicas.. Talked to JF. He said that most high qps cases have larger number of replicas to handle the qps.. We need the variable for the initial value of nReplicas. Using the new total for logging though.. We have set it to 0 in setStatusToDefault. It is percentage of available replicas.\n. done. done. Used if streamConfigs is not null but commit timeout is not set.. Removed. noDictionary columns are not yet supported for filter and selection. Done. Added.. need to Sanity check initial build time. This cannot be negative, or larger than a specified value.\nShould be sending lease requests to prevent waiting for a dead server longer than 2 minutes.. Camel Case?\n. Returns a pseudorandom, uniformly distributed int value between 0 (inclusive) and the specified value (exclusive), drawn from this random number generator's sequence.\nNeed to handle divide by 0 or exclude 0. I have added a try catch and also made it conditional on having a partitioner. Done\n. Done\n. We only print the first time we fall out of the partition after which the partionfunction will be set to null and no further checks will be done.. Mayank: The number of partitions can change at any time. The current kafka partitiion is fixed.\n. Done. Moved changes to a new test.. Done. Done. ok. Done.. Done\n. ByteArrayPartitioner is needed to force the local partition. Murmur is for the tracking in  aggregate which uses open source kafka partitioning.. It is better to only extract the metadata which is needed. There could be metadata for other pruners which we don't want to extract. Extracting is work which is done once for limited use.. Done. Done\n. No config written out if there are no partition configs.. Done\n. Done. Removed\n. Done\n. The realistic latency is in the order of 10's of ms. The 5s limit was in keeping with the existing code.. Formally setting it to null on exception.. IDE only gives kafka.producer.ByteArrayPartitioner, but I changed it to org.apache.. This is a reasonable partitioner to use which guarantees consistency between producer and consumer. It could be used by open source.. Talked with Mayank. Need this for mismatch checking.. I agree, Will do it in a separate PR.. I agree. Will do it in a separate PR.. Done. Will do as a follow-up. Will do as a follow-up. I agree. Will make the change separately.. Done. Done. Fixed by setting segment partition config to null in which case number of partitions is not relevant.\nIt makes sense to make npartitions a local variable. Will do it as a separate PR.. Done\n. Done. Done. Done\n. Made the change and pushed new version.. Would also like to test for the case when replicas is not set or is 0. Good catch. The wonders of the IDE. _seconds?\n. Perhaps you can have somebody elese come in with time limit and lower offset, either as a separate test or part of this test.. This test checks that we can send different values for incoming and outgoing specification and are able to create a segment. This is what was failing before this change.. For the duration of the state transition, this metric will be 0, which is not correct.  I think you are repurposing HIGHEST_OFFSET_CONSUMED for other purposes. Perhaps a new metric will be more appropriate.. +1\n. +1. why have final here? Won't this be lost once we leave the switch. do we ever buildSegmentInternal not forCommit?. Just use _segmentFileAndOffset throughout, set it on build, reset on successful commit or consumption. We have already returned if it is not one of  EQUALITY or IN operator earlier. I will add another test just to be clearer.. We are able to do a query with 35 items and 60 features in about 80 ms vs more than 5 seconds earlier. Changed delimiter to use the one from Rangepredicate. Done\n. Done. Done. Done. Done. They test two different features with different characteristics even though the flow is similar.. You should probably have a description in the constructor for DoubleOffHeapMutableDictionary so that you can pass this in to FixedByteSingleColumnSingleValueReaderWriter. Should this class know about a realtime specific memory manager, or should we reference an interface? Wouldn't this class also be called for offline segments.. Added switch. This change increases the qps.. Currently we are calling split for each segment for each in clause in DictionaryBasedInPredicateEvaluator in its call to getInRange. We are just moving all the evaluations to the pruner, so that a single thread does the evaluation freeing up the other threads to do more queries.. Refactored.. Would be good to identify how type is specified in the path.. Error string is different as compared to restlet implentation. . Should tableType be in this Path too?. Could you document how the injection works for controllerConf. Example would be useful for other parameters too, in particular how they are inferred from Path. Should it be in offline?. Good that you have reduced the number of parameters. Good  refactoring. Perhaps move this function ahead to mimimize diffs for future blame. \n",
    "tkao1000": "Oh yeah, sorry about that\nOn Tue, Jun 28, 2016 at 8:50 PM, Kishore Gopalakrishna \nnotifications@github.com wrote:\n\n@tkao1000\nhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_tkao1000&d=CwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=1-ZaDYECRGyU9ZhuKB1FG2UFHfii5hTItKePwwgWsq4&m=lNGkaH53l-FjEetH3LsGZfz4nQXWpQK3jMd5JEZHibU&s=SQRaRU6kIenZSh1C5k-Dq-RwnhrDGNNlzgyDrpuyjWQ&e=\ncan we close this?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_linkedin_pinot_issues_152-23issuecomment-2D229235031&d=CwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=1-ZaDYECRGyU9ZhuKB1FG2UFHfii5hTItKePwwgWsq4&m=lNGkaH53l-FjEetH3LsGZfz4nQXWpQK3jMd5JEZHibU&s=USWiXeVQiAPmyMCnpaGyOM4gihpqRXzT_kIWBmEgbTU&e=,\nor mute the thread\nhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe_AJep9Bo01cqIBvzS-5F0ynOrzsYudmyIDRks5qQc9mgaJpZM4IuNZ4&d=CwMCaQ&c=8hUWFZcy2Z-Za5rBPlktOQ&r=1-ZaDYECRGyU9ZhuKB1FG2UFHfii5hTItKePwwgWsq4&m=lNGkaH53l-FjEetH3LsGZfz4nQXWpQK3jMd5JEZHibU&s=z-zASZ1h6se7qv6iv81IwSckSNeIMSQsoqwh4qQVbJ8&e=\n.\n. \n",
    "jrgp": "LGTM\n. LGTM\n. Looks good to me. Thanks for working on this.\n. :shipit: \n. Awesome, displaying curl call will be nice. LGTM\n. shipi-LGTM\n. LGTM\n. shipit!\n. Yes please \ud83d\udc4d \n. ",
    "atumbde": "We will need to restart servers if the schema changes. This is increasingly difficult for shared clusters with large datasets like UMP cluster.\nWe should have controller send out alter table request to servers over http. That's easier to manage (self-serviceable), no service disruption and more reliable if there are errors (we know those upfront).\nController will not have to handle failed servers which keeps it simple.\nServer already runs an http server now.\n. One difference with messages over helix is status feedback. Over http user will immediately know if there are failures. For helix, IIUC, we may not know. Operation completion is more deterministic over http.\n. FixIt->ShipIt\n. Don't prefix these with _ (Code is currently hodgepodge but we agreed to follow google coding convention)\n. this won't work. try-with calls close(). Different from saveAndClose()\n. add a comment that this will result in segment download and that's what we want\n. For v1 and v3, process second time to see that inverted indexes are not created again\n. ",
    "MarthaWB": "LGTM\n. LGTM\n. LGTM\n. LGTM \n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. Allowing the user  to turn on/of the anomaly function monitoring and alert by clicking a checkbox next to the function. The click will open a modal asking for confirmation. \n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGMT\n. LGTM\n. lgtm\n. lgtm\n. LGTM\n. lgtm\n. proper way to check undefined value is: \ntypeof x !== \"undefined\"\nso here: if (typeof x !== \"undefined\" && invertColorMetrics.indexOf(metric) > -1)\n. same here: typeof x !== \"undefined\"\nif (typeof x !== \"undefined\" && invertColorMetrics.indexOf(metric) > -1)\n. Do you need the console.log-s?\n. this is how to check for undefined: typeof x !== \"undefined\"\n. Space is needed it means: either decimal or exponent notation, removing insignificant trailing \nzeros.\n. Good point. Also changed the condition to '>='\n. ",
    "cyenjung": "LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. @npawar Sure, I will add the same fix to Alert.\n@kishoreg The purpose of creating a new context and current fix are the same: remaining the state of the original detectionJobContext unchanged. However, the former method repeatedly creates a temporary object whenever a job is executed, which could bring unnecessary load to garbage collector in the future.\n. Conflict resolved\n. There is a conflict for merging.. Since most the code are moved from CleanAndRegenerate tool, please remove the method body in that tool and let the tool invokes the methods of Onboard endpoint.. How about deleteRawResults and deleteMergedResults in the CleanupAndRegenerateAnomaliesTool?. 1. Please rename the class to a self-explanatory name.\n2. How is this class used? Is there a main function to invoke the methods?. Thanks for cleaning this up.. You code cannot be built on travis. Please take a look.. @cyy0714 As we discussed this evening: we should hold off this PR and see if we can come up with a more elegant solution that can be applied to multiple use cases.. Amended the pom file to exclude thrift and shade fastjackson's databind.. Currently, the page for grouped anomaly reuses the page for list of anomaly ids. The only difference is the URL. Later on, we could add user feedback for group anomaly page.. Shouldn't this endpoint be added to AnomalyFunctionResource?. Very useful function! Thanks for implementing this.. Yes, it works because it has its own cache. From now on, each connection takes care of its own data cache since they could take different queries. The central cache only caches metadata.. To ensure the method is generic, we grab the entire configs map from Pinot and don't store key names. Only the code, which retrieves the information from the map, needs to know which key name it is going to use.. It should be fine because the default cache loader is not going to work if user didn't set it up. In that case, user will notice that the actual one is not started up properly. The default one is just an extra try.. Could you send me the screenshots of templates in this PR?. Yup. Will come back for it in another day.. I will approve it for now. We still need the merge plan because I don't see the new pipeline plays well with the grouping logic for Sitespeed application.. LGTM. Thanks for the changes.. It's not measure by how much time we could save. It's about whether our workers could still be working after days of execution. \nCurrent issue that we encountered is that every cleanup task of data completeness could take 3-4 hours because it needs to update 10s of thousands of entries. The task is scheduled every 15 mins. Eventually, most threads or all threads will be used to perform the cleanup task.\nThis code could alleviate the problem because if the entries that have been updated (i.e., isTimeOut=true), then it is omitted and hence reduce the overhead to communicate with the database.. They are valid dimensions actually. For instance, Sitespeed use this dimension 'all' as the pre-aggregated value. Since the metric is not additive, the only way we could see the aggregated values for all dimensions is to select the dimension value 'all'. In short, the value is not a dummy value.. Could you give the overview of the method that is used to compress the timeline view?. The schema in this PR is actually correct. The column application in alert_config_index was missing in the create-schema.sql.. Where are the logs stored when a worker is shutdown? It seems the statistic of logs are analyzed only when a worker is started, when there is no log.. LGTM. Please address @cyy0714's concern before pushing the code. Thanks for improving this piece of code.. I will give it a better name in the final version of the algorithm. For now, I am going to keep it in order to sync with the terms in the paper. I have improved the other parts of the code. Thanks for your comments. :-)\n. Do we need to use logger here? Or it's fine to print on screen.\n. Could we rename stop() to shutdown(), because the behavior of shutdown() is already well defined in executor service. On the other hand, stop() is not well defined and could mean anything such as 1. the thread pool is shutdown but threads are still running, 2. pool and threads are both terminated, etc.\n. Because the time granularity from collection schema could be different to the actual time granularity. Specifically, we have a dataset whose timestamp has time granularity in millisecond, i.e., timestamp is MILLISECOND since epoch. Hence, the time granularity in collection schema is set to \"MILLISECOND\" regardless its data is actually pre-aggregated in 5 MINUTES buckets.\nSo what would happen if we set the time granularity in collection schema to 5 MINUTES? The first problem we would encounter is that the MAX time calculation, which is computed by (timestamp x time granularity) in ThirdEye. The calculation is wrong because we are multiplying a millisecond timestamp to the 5-MINUTES granularity.\nSo the current work around is having a collection config to specify the real time granularity. The true solution should be changing the timestamp of the data to 5-MINUTES since epoch.\n. Previous one is for creation of anomaly function; this one is for update of anomaly function.\n. I will work on a better solution that does not need the dimensions to be restricted in a certain order.\n. How about DEFAULT_PREAGGREGATED_DIMENSION_VALUE?\n. I thought about clean up start and end window all the time, but I decide to make this function does not change the state of detectionJobContext in order to prevent future problems, e.g., an adhoc detection job needs the information of the aligned start and end window after the job is executed.\n. I've removed the conditional restoration. Now this method always restore the original state of JobContext at the end regardless the job is scheduled or ad-hoc one.\n. Do we have createIngraphMetricConfig2?\n. Log this exception?\n. The job information in memory and in database serves different purpose. The one in memory is used to prevent the same job is sent multiple time due to human error, e.g., a user left-clicks twice accidentally.\nThe one in database is used for checking if there exists any job that is previously left because the scheduler died before it can backfill all anomalies. This feature is useful when we backfill a long data range.\nCurrently implementation assumes that there is only one scheduler, i.e., data race induced by multiple detection job on the same monitoring window is not handled.\n. It has time keys, but not start and end of the values of current or baselines. The assumption is that the time series have all the time keys that are needed for calculating the weight of the merged anomaly.\nActually, the start and end time can be retrieved from the merged anomaly, but I want to make the signature of this function similar to that of analyze() method.\n. Yes, it is. But changing it to function level allow us give anomaly function and its counter function different filters. Moreover, this feature allows us to try out different function settings on the same metric.\nBasically, this feature is not necessary for now, but it could be handy in the future.\n. Log it?\n. You might want to set an upper or a lower bound on the scaled value. Since the information regarding history anomalies is limited in this function, we can just use the average of weeks for now.\n. Apply the transfer function?\n. You might want to check if our naming convention allows \"_\"\n@kishoreg might be able to answer this question.\n. Done!. It is not making query for each time bucket. It is making queries for finding the override config that overlaps the window of current time range and all baseline time ranges. So, there are only 4 queries if we have 1 current time window and 3 baseline weeks.. Sure, I will add an if-condition.. Good point. I will move them to OverrideConfigHelper.. Yes, it is in this PR: #846 . Sure, I will do both.. Specifically, if an error occurs, no scaling factor will be generated. Moreover, the error is logged.. Moved the duplicate code to this method \"List getTimeSeriesScalingFactors\" of OverrideConfigHelper.. Good point. Done!. Could you elaborate that use case? \nIt a raw anomaly exists in a certain time range, then detection function cannot generate any raw anomalies in that time range. So, it is a good practice to remove raw anomalies whenever its corresponding merged anomaly is removed. \nThe above statement stands only for production. If you want to something experimental, we should come up a good framework to do that instead of create a flag that could be misused.\nLet's document this comment and the previous comment; and come back to them when we have a good design to tackle them.. Removing a TS from metricToModify is basically a hack under the current design of ThirdEye. Since we already have a hack which removes TS, I don't want to create another hack here. \nI would suggest to solve this problem once ThirdEye is able to distinguish value 0 and an empty value. Otherwise, we might lose track of all the hacks we did for experimental use cases.. That's a good use case. We can add that flag when we want to conduct experiment on merge logic. Don't add it now because I don't want that flag to be misused.. You might want to remove lines 93-146 because this part is for internal use.. Remember to come back to this line and decide whether start and end should be exclusive or inclusive, respectively.. It should be: false to resume backfill from the latest left off. HTTP response of this request. Good catch. The raw anomalies that belong to the \"to be deleted\" merged anomalies should also be removed. Otherwise, anomaly function might not generate new raw anomalies whose range is located inside the range of any existing raw anomalies. Please delete the raw anomalies as well.. Can you finish the JavaDoc  or just remove it?. Renamed to AnomalyDetectionUtils.java. Fixed.. Added to TODO list. Added a backward compatible function to parse the baseline property. The function should generic enough without using if-else and switch statement.. Done. Done. Good idea. Changed to TreeMap.. Agree. I have to use these naming for backward compatibility. I will deprecate this part after migrating to new framework.. Renamed to AnomalyDetectionUtils.. Added a backward compatible function to parse the baseline property. The function should generic enough without using if-else and switch statement.. Minor suggestion: Put more information to the log, e.g., \"Exception in getting count * for dataset {}...\". Add more information such as dataset?. Could dividing by zero happen here?. Could this method encounter the issue of daylight saving time?. Typo: The end time.. Remove this empty line.. This is a very good checking! Could you improve it further and check the max date time of the dataset instead of the current time.. Check this one before all other checkings?. What's the purpose of coping these two redundant variables?. Is this class related to onboarding? Could you separate it to another branch?. I am not sure if it is a good idea to directly access anomaly detection library here. We need a property interface to communicate this internal libraries.. Don't delete this utility class. We still need this tool to do adhoc cleaning and regeneration of anomalies. Since you have copied the code to OnboardingResource, you could invoke those methods from this class. Otherwise, we have to start an anomaly application in order to clean or regenerate anomalies, which is really inconvenient.. Move to another branch. Onboarding and enabling Spline Regression on TE should be two separated tasks.. Move this change to another branch.. Please do not remove this utility class.. When we run this tool, the global DAO registry is not initialized. Therefore, onboardResource cannot get the global registry it needs.\nYou could create a constructor that takes a given DAO registry and it uses that instead of the global one. The global on is used only when the default constructor is invoked.. Fixed.\nWe don't need to consider the case of HOURS because the size of a bucket does not change when the time granularity is smaller than  DAYS. In DAYS, the bucket size could be 23, 24, or 25 hours due to DST. In HOURS or anything smaller, the bucket size does not change due to DST, so we can simply compute the bucket index using one fixed \"interval\", i.e., bucket size.\n. Is this line supposed to be removed? I just want to make sure we want the data checker does no-op when the datasets to check are not provided.. Make it final?. Should we return a boolean instead of throwing an exception and interrupting the flow?. It might be a good idea to reach this parameter from main method. It would be nice if it also print out which file it has written to. Exclusive?. If this function does not interrupt the flow, then we can implement a feature like \"Send an alert if the date quality of a certain dataset is bad for x times or for x hours.\" . Is there a specific reason we use a hashmap to store the variables? We could just store them to a variable. Access args[1] through its corresponding variable for readability.. Access args[1] through its corresponding variable for readability.. Access args[1] through its corresponding variable for readability.. Use a logger?. Store them to their corresponding variables directly.. Use a logger?. Use a logger?. Use a logger?. Use a logger?. Could you give an example of targetDimensionMap? It would be helpful to understand how to use this variable.. Use CollectionsUtils. Shouldn't the file path read from a config file?. From config file?. You're welcome :-). Typo: it should be downThreshold. Make it downThreshold. getDownThreshold. I am not sure that I understand how this filter work. Could you explain the reason that we multiply downThreshold with -1?. Add a comment to explain how this alert filter works.. Add these two fields: avgCurrentVal and avgBaselineVal, to hashCode, equals, compareTo, and toString methods.. Add these two fields: currentVal and baselineVal, to hashCode, equals, and compareTo methods.\nYou might want to use the same names on RawAnomalyResultBean and MergedAnomalyResultBean.. Typo: \"upThreshold\" --> \"downThreshold\". Don't check in this library. Please also consult @kishoreg about open source licensing before using it.. Pass in AlertFilterAutotuneFactory and AlertFilterFactory objects instead of their config path, so we could share the factories across different Resources.. Just pass in the factory objects. The alertFilterFactory should also take care of this case, i.e., we can get any type of filter from the factory regardless it comes from TE or anomaly library.. Please reformat this line. Add more information for debugging purpose. For instance, we could log which function's alert filter is just run through the auto tune procedure.. The same: Add more information for debugging purpose.. Add more information for debugging purpose. For example, what is the usage of this file.. Alert Filter Autotune Model instead of functions?. Remove this empty line. The purpose of this file?. Alert filters instead of functions. Remove autotune. Remove unused code. If every alert filter is accessed through alert filter factory, which uses java reflection to read the information of filters, then this class could be removed. This line should get the type of AlertFilterAutoTune instead of function type. This line should get the type of AlertFilter instead of function type. If applyFiltrationRule takes as input an AlertFilterFactory, then AlertFilterHelper doesn't need to keep a factory. You could remove the variable: alertFilterFactory of this class.. This \"else if\" block should also be taken care of in previous if block. The props should contain the mapping from all filter names to their class path regardless the filter is implemented in TE or anomaly library.. @cecilynie Please remove weka from this pom file because it uses GPL.. Please refine this import.. Should this method's signature be similar to AlertFilterAutoTuneFactory's fromSpec()? It takes the spec to the AlertFilter instead of anomaly function spec. You could use a helper class to extract the alertFilter spec from anomaly function spec and then invokes this method using alertFilter spec as the input.\nYou could rename this method to fromSpec() to be consistent with the method from AnomalyFunctionFactory and AlertFilterAutoTuneFactory.. Should we capital the name of \"public static final\" variables?. Typo: Change SeverityThreshold to WeightThreshold, severity to weight. Severity to weight. Make up and down threshold positive infinite by default. upThreshold --> downThreshold. Rename severity to weight. 1. Make these variables static and final.\n2. Capitalize these variable names.. If you are not going to return an object \"AlertFilterEvaluationResult\", then return a List instead of Double[].. Refine the return type. Should we read these variables from the configuration files, e.g., dashboard.yml? When is this tool going to be used?. Capitalized names of static final variables.. Refine this string like the one you used at line 300.. Format this line; put a space before e.getMessage(). Start and end time are not Iso format; you might want to rename the variable.. Rename start and end time variable.. Remove empty lines. Rename start and end time. Rename start and end time. Try to avoid using Map. Do you need to insert objects rather than String?. Rename start and end time. We only need this method for tests that use classes which use DAORegistry.getInstance(). Otherwise, they don't need to copy their local DAO Registry to the global singleton one.\nWe will work on another patch to remove the global singleton DAO Registry from the application, which is a really bad practice.. Update this JavaDoc. This should be scheduleAtFixedRate. Probably handle SECOND here.. Add SECOND case. This class is renamed to TestDBResources. Add SECOND case. 12:53pm on 5 MINUTE level dataset should be treated as 12:50pm?\nAdd something like: \"Any level finer than MINUTE is rounded up to MINUTE level.\". Two suggestions here:\n1. (Minor) Move lines 223-227 inside the condition at line 230 to optimize the number we access DB. Hence, we only access DB for completeTimePeriod only if imcompleteTimePeriods is 0. \n2. Add comment to document the goal of this if-statement. Just in case we forgot what is happening here after some time. An example the show how the if-statement is used should suffice.. \"return true if the criteria is met or the dataset and anomaly function do not request for data quality check\". \"return job execution id\". Where does this JSONObject come from? Could we replace it with a Map?. Is it possible that params.size() == 0?. Same question as line 338: Could we replace it with a Map?. Remove this comment. Break it down to 4 appends.. Break down to 4 appends. The assumption for this model is that the length of raw anomalies are the same, e.g., the anomalies generated by splitline regression, and does a simple average across all raw anomalies.\nIf the length of the raw anomalies are different, this model provides an estimation. In this case, the developer should choose a different merge model.. Merged anomaly are one of the inputs of Update() method. The updated results will be written back. The input AnomalyDetectionContext should provide the necessary time series in order to update the given merged anomaly.. I think the original design of the weight of Min Max function is that if the time series swings below and above the min max thresholds, then the weight should be countered.\nI agree that the weight calculation for this function should be redesigned, which is out of the scope of this migration.. Use \"import com.linkedin.thirdeye.anomaly.utils.ThirdeyeMetricUtil;\" like the other files does?. Shutdown thread pool after the for-loop. The format of this line is off. Could you confirm that the entTime on InFormed is also exclusive?. What if fieldToParams is empty?. Please complete the comment for this variable.. The thread that monitor the backfill job is awaken, not the backfill process. You might want to refine this message.. Done!. (Optional) Combine these two lines.. If the map is not going to be modified, you could return Collections.emptyMap().. Should we combine them or separate them?\nIf we separate them, then each one of them contains only the methods for either dashboard or workers. But it also makes sense to manage all data completeness related methods in one place.. Can be combined as Collections.sort(nodes, Collections.reverse(Summary.NODE_COMPARATOR));. Close the bracket just in case.. Close the bracket just in case.. Can be combined as Collections.sort(timeSeriesList, Collections.reverse(new TimeSeriesStartTimeComparator()));. Close the bracket. The logic is still incorrect. Please fix it.. I just realize existingBackfillJobs is a concurrency hashmap and this method could be triggered by multiple threads, so we need to keep the method putIfAbsent; otherwise, the code won't work as intended. \nFor instance, if multiple threads arrive line 318 at the same time, then all of them passes the check at line 313 together. In the original design, only one of them may pass the check.\nI suggest that we change the declare of existingBackfillJobs to ConcurrentHashMap type and don't change this part of code.\n. Avoid using wildcard in import string.. currentCount = bucketNameToCount.get(bucketName);. Minor advise: Combine these two lines to Collections.sort(removedNodes, Collections.reverseOrder(NODE_COMPARATOR));. I suggest that we add a method (e.g., toPeriod) in TimeGranularity.java that returns the period according to time unit and size of the time granularity. We can also take care of lines 119-127 in toPeriod method.\nWe also need to consider the case of MINUTES.. Good catch!. Ideally, we don't need to deal with DTO and Bean unless we are creating an anomaly result.\nExample:\nAnomalyResult anomaly = new MergedAnomalyResultDTO();\nAfter that, we interact with only AnomalyResult.. Agree. The package \"context\" would include both input and output interfaces for anomaly detection.. Need to be changed to AnomalyFeedback because of the new interface. Minor suggestion: Change to \n    boolean label = (feedback != null && (feedback.getFeedbackType() == AnomalyFeedbackType.ANOMALY || feedback.getFeedbackType() == AnomalyFeedbackType.ANOMALY_NO_ACTION);\nBecause we might add other types of anomalies in the future.. With or without the brackets?. Add JavaDoc to document the usage of dataset variable, which is used for sending count(*) queries.. We might need a document to mention that we only use the first metric to determine whether a dataset is additive.. Rename this method because it is not returning outliers.. typo: traing --> training . Rename to monitoringTimeIso? Because we always name the window for analysis as monitoringWindowSomething; using the same naming convention could prevent some misunderstanding.. Just a minor suggestion: Rename to monitoringTime?. Rename to monitoringTime?. Add \"because it is not activated\" so we could know the status more easily.. Rename ar to a meaningful name.. We should change bucketMillis to TimeGranularity, which provide Period, for preventing DST issues. However, we currently don't have enough information. In our next RP, we should refine AnomalyDetectionContext to provide such information.. What is the purpose of +1?. Need Javadoc for this variable. Please optimize the code here: If the anomaly provides it's own time series, then we don't need to retrieve time series either. You might want to move lines 653-667 into this block.. Set forceBackfill to true would ignore any existing anomalies in the interval to be backfilled; otherwise, the system would abort backfilling to prevent unwanted backfilling.\nI don't think changing this forceBackfilling would achieve what you want. You could make backfill function takes as input a notification flag and set notified variable to that flag. (Currently, the flag is always true.). Are startTime and endTime inclusive or exclusive?. Please pay attention to the format of the code. There should be a space between ) and {. You could setup this kind of warning on your IDE so you don't need to manually adjust them.. I don't think this is a good way to handle special cases because the logs will not be seen by users on the frontend. So, they won't know their inputs are not fully compatible and some of the parameters are changed at the backend.. Remove the dead code or put comment to explain why this section of test is disabled.. Nice fix.. Make autotune_config_id has a consistent naming convention with the others.. We should return \"400 Bad Request\" because the user wouldn't see the message of the exception on the frontend.. Return \"400 Bad Request\" instead of throwing an exception?. Please javadoc this method and use an example to show how this method works.. The same toString method is defined in its parent class: AbstractDTO.. Should we use enum class instead of String for types?. I see. Then leave it String type should be fine.. Fixed! Good catch.. Since you have moved this method to the builder, could you clean it up?. Remove this method if it is moved to the new builder class.. Please use verbose variable names.. Rename ts to timestamp.. What if number of timestamps is zero?. What if avgMetricSum is zero?. Are we no longer using the time series that is stored in anomalies?. Which metric is going to be used for calculating the metric sum? Please make this part generic. Specifically, let users specify which metrics should be retrieved for calculating metric sum.. Add comment to indicate that this method is end time exclusive unless the entTimeInclusive flag is set. Moreover, the start time is inclusive.. Please complete the JavaDoc.. It should be \"endTime exclusive in default.\". What if we have multiple metric sums need to be retrieved?. Should we make the check fails fast? When an anomaly does not pass a filter, we skip to the next anomaly immediately.. It would be helpful to indicate that the value (integer) is the count of appearances of keys.. We could use arraylist here since we are not going to insert or remove elements in/from the middle of the list.. Deadcode :-). Rename r to row. Please use verbosed parameter name. Close the brackets. Check if anomalyFunctionSpec.getTotalMetric() returns null or a blank String; otherwise, the next line would never be true.. The part to use anomalyFunctionSpec.getMetrics(), which returns a list of metrics, as the TotalMetric is not clear. Could you JavaDoc it?\nOr maybe you are trying to call getMetric?. If you are calculating metric sum, doRollUp should always be set to false at line 438. Otherwise, you might get an additional dimension OTHER and trigger the if-statement at line 551. In the worst case, line 554 uses the OTHER dimension for calculating the metric sum.. Just want to confirm that if this line is triggered, it means something goes wrong? Because the metric for calculating metric sum belongs to root node of the data cube, i.e., it does not have any dimension information. So if the returned metric has dimension information, then the setting for retrieving the metric is incorrect.. What if dimensionKeyMetricTimeSeriesMap.size() = 0? Please take care of potential null point exception. In that case, the metric sum should be zero.. Remove empty line. Please rename metricSum because metricSum looks like a sum (e.g., integer or double) instead of a series of data. After getting the series of data, we still need to calculate the sum.. This one does not get anomalies on dimensions; it gets all dimensions that belong to that function. Please fix.. getTotalMetric instead of getMetric?. This JavaDoc is not completed.. The naming convention for boolean variables is that their name starts with \"is\". So I would suggest to rename tag to isActive, which is a self-explanation name.. This is a quite dangerous functionality, which I assume that it is created for the convenient of conducting experiments? In that case, we might want to put it in a utility class instead of an endpoint, which could be invoked by any random people.. Handle NumberFormatException for Long.valueOf.\nIf we want to stop the entire procedure whenever there is an exception, then please add a comment to mention that the behavior (unhandled exception) is expected.. Add space in front of and after colon.. Emails will be taken care of in the next PR. The current goal is to reduce the number of alerts to be sent out. I might remove this method and replace it with an interface named EmailProvider.. The super method could not handle nested DTO objects. Since a grouped anomaly contains multiple merged anomalies, the save and update methods of grouped anomaly manager need to handle the list of merged anomaly dtos. The method convertGroupedAnomalyBean2DTO handles the conversion for the list of merged anomaly dtos.\nIdeally, we should reuse the methods we have in MergedAnomalyManagerDTO, which also has customized save and update methods. However, the design of merged anomaly makes it very difficult to reuse. Later, we should refactor the classes for the results of anomaly detection (e.g., anomaly results, feedback, etc.). The superclass method does not handle the conversion for merged anomaly dto.. In brief, the difference between dimensional grouper and horizontal_dimensional grouper is that given the same string of dimensions \"D1,D2\", the former one groups anomaly in the leaf level (i.e., \"D1,D2\") and the latter one groups anomalies in the level of internal nodes (i.e., \"D1\" and \"D2\", respectively).\nThe details description for each grouper is provided in their JavaDoc.. This is used for time-based merge of grouped anomalies; I have made it configurable from alert configuration.. Good catch!. JavaDoc added.. Yes! Thanks for noticing this bug.. Replace with MapUtils.isEmpty.. Replace with isNotBlank(). Rename to speedUp? Because we use setSpeedUp at line 782.. I would suggest to move activeFunction, deactiveFunction, and toggleFunctions to RunAdhocDatabaseQueriesTool.java because these 3 functions should not belong to regular onboard procedure. There is a similar method, toggleAnomalyFunction(), in that file. You can extend it for your need.\nWe typically put experiment and DB related functions in RunAdhocDatabaseQueriesTool.java. There are two advantages: 1. we don't need to start controller in order to change the value in the database. 2. The modifiers to the database are not exposed.\n. Shouldn't we need two '{}' to print out both class.getName and ex?. I see.. Is it inclusive or exclusive?. Please detail the return data. What's the String in the returned Map?. Should we return an empty Map?. Return an empty map instead?. I don't understand the logic here. Why passing (endTime, endTime) would generate the baseline before end time?. To draw time series?. Dashboard host?. Is the time series output to a file?. Format this line.. Close the pool at the end of this method. You could use AnomalyUtils.safelyShutdownExecutionService to shut down the pool. We might want to move safelyShutdownExecutionService to some other Utils class if it is used everywhere.. Close this pool at the of this method.. Format this line.. Good catch. I will fix it. :-). Reformat these lines.. Rename currMergedAnomaly and mergedAnomaly so that we can distinguish current anomaly result and previous anomaly result. The naming is making this piece of code confusing.. This if-statement is not clear: The purpose of this if-statement is checking if two anomaly results are mergeable. Previously, we check if it is mergeable in terms of time. In your update, you also want to check if it is mergeable in terms of anomaly properties. However, it is difficult to tell from the naming of isMergeable.\nI suggest to consolidate this two checks together to a method, called isMergeable, and the if-statement invokes that method. The method, isMergeable, takes as input two anomalies results and returns a boolean. Inside that method, we check in terms of time, properties, etc.. You don't need to JavaDoc where is this method moved from; however, please JavaDoc what does this method do.. This is a very dangerous black magic: No one would know isMergeable is enabled unless there is a magic keyword in the properties of anomaly result.\nI would create a new method in anomaly function: List getTestIsMergeableProperties(), which returns a list of keys that could be used to retrieve the properties for determining isMergeable. If an anomaly function returns an empty list, then this function's anomalies could be mergeable regardless their properties; otherwise, we compare all values of the test keys.\nPlease refine the design of this method.. Not all values in properties are used for determining isMergeable. The values to be used depends on the anomaly function. Please see my comment for the method, isMergeable, and redesign this part.. Use MapUtils.isEmpty() to prevent null pointer exception.. What if both prop1 and prop2 do not contain \"key\" or return a null value for \"key\"? It should return true because the definition at line 162.\nI believe this is the if-statement you are looking for:\nif (!Objects.equals(prop1.get(key), prop2.get(key))) {\n  return false;\n}. Good suggestion. @cecilynie, could you change this constructor to take variables instead of another config object?. Log this exception.. Use \"return Collections.emptyList();\". This assumption might not always hold. It could be accidentally changed to null at somewhere.. Change it to warning. Reserve error for operational or production issues.. Sure, let me rename it.. It is initialized with an empty dimension map, but it could be null if someone accidentally sets it to null. That is still ok because mainAnomaliesByDimension takes null key; in this case, null key becomes a dimension. The classification works as long as anomalies from different dimensions do not be mixed together.. Fixed.. Fixed.. Fixed.. Fixed.. Done!. Remove the dead code.. This change might break existing classes. This block is trying to get default value for variables when their value is not given by user. The naming convention DEFAULT_VARIABLE_NAME. If you remove the original line, then this block does the same thing at the block at lines 33-39.. Why the block at lines 35-39 and the blocks at lines 46-51 are different? It would be easier to maintain if we apply the same logic to populate the variables.. Format lines 72 and 73.. I am surprised that the default values could be read after you remove the parsing for DEFAULT_VARIABLES in BaseAlertFilter.java. Could you explain how it works after the change?. Should we check if the comment string is null?. Remove the dead code?. 1. This resource file is written for version 1 dashboard. The latest resource file is AnomaliesResource.java. Could you move this method there? There is a block in which the methods are named as getAnomaliesBySomething.\n\nRename to getAnomalyIdsByFunctionId.. Please complete the brackets of if-statement.. Need to specify what is the meaning of the String of the map.. That's a good suggestion. Let me try it out!. The scope of that package is the same as Hadoop, which is \"provided\". So we will get runtime error when thirdeye-hadoop runs the code from httpcomponents if we don't exclude it.. May the force be with you!\nJoda Time Parser? :-) . Are you going to check in this section?. Please add braces to this if-statement and the one at line 128 to prevent this bug in the future: https://blog.codecentric.de/en/2014/02/curly-braces/. Yeah, it is a magic number, which is not a good idea to use it. Replacing it with Java7's Objects.hash().. Yes, it is an ordered map and it is ensured by declaring it as a Navigable Map.. Replacing it with Java7's Objects.hash().. UI is still using this method. I probably will migrate those methods to getOrDefault(window, name, 0) and change get(window, name) to return null if no such number exists.. fillforward?. fillforward?. fillforward?. ObjectMapper is a heavy object but thread-safe. Make it final static and be shared across instances.. credentials.getPrincipal() could be null.. And handle if(credentials.getPrincipal() == null). Are the filters applied with OR logic? Could you put down some comments?. Extract this block and reuse it for checking both input and output filters.. Rename to testDAOProvidor. Please rename this variable on other classes as well.. Throw unsupported exception because this method should not be invoked for the provider in production.. Specify the expected behavior of this method.. Rename to testDAOProvider.. Can we do lazy initialization? For instance, we don't set DAO during init() but only when the corresponding get method is invoked. Because most tests only uses one or two of the DAOs.. We need to fix the problem that init() is invoked multiple times in next PR. The init() initializes database and then DAOs. However, the DAOs will be re-used even they are reset. Therefore, those DAOs will still using the very first DB instead of new DBs. . Are they dead code to be removed?. Nice fix.. Keyed by range --> Keyed by time range.. Add comment: \"Map (keyed by dimension name) of maps (keyed by dimension value) of values\".. Use Collections.emptyList() instead.. Remove the class name. Moreover, give us an example of this method's input and output.. I think there is one more field: version int(10).. 1. Please format the code.\nShould BaseFactory considering package name when creating an instance? What about making base factory creates instances from any full class names. The factory that extends the base factory could override the method to inject package name if necessary.. Need a space before each method.. Add a comment to indicate that these strings are package paths.. Use TestNG's Assert.notNull instead of Java's assert, which might stop the entire program if the thrown exception is not properly handled.. I am not sure if hard-code the path in enum is a good idea. Considering that we might have extension jar (e.g., MP) which may put the additional classes in different packages.\n\nWe should inject this class when the ThirdEye application is initialized. In that way, we could control if we want to add extension packages.. Why this additional space?. No, it won't. The accessibility of tables is set on Pinot. If a Pinot table is not accessable to TE, this endpoint won't make TE have superpower and access the table.. It could be invoked multiple times when a controller has multiple rules, e.g., worker and alerter.\nWe didn't have this check and the second initialization overwrites the previous value. This helper function ensures that a factory instance is reused.. Please provide JavaDoc for this class and its methods and describe the usage and expected behaviors.. Throw an exception or handle null pointer.\nAssuming that alertSnapshot might not be initialized in init in the first place, handling the null pointer is probably a better option.. What if alertSnapshot is null?. Where is alertSnapshot created for the first time?. Two problems:\n1. Applying applyFiltrationRule on an empty mergedAnomalyResults means no-op.\n2. The returned, which is a filtered, anomaly results are not stored anywhere.. Alert filters are now placed in two places:\n1. The end of anomaly function.\n2. The begin of feed constructor.\nTo prevent future confusion, we should\n1. Move alert filter to feed constructor or fetcher.\n2. Rename the alert filter at the end of anomaly function to post filter.\n. Does this mean we have to create alertSnapshot manunally for each AnomalyFeed?. If encryption is top priority, shouldn't we let users enable TrustAllCerts in an explicit flag? I.e., if serverCACertFile is null and useTrustAllCert is true. Otherwise, users might not notice trust manager is accpeting all certificates if s/he is not looking at the log when booting up the machine.. Fixed! Changing Double to Number, which returns the correct type.. We could define this special string: \"AcceptAll\"; When \"AcceptAll\".equals(serverCACertFile) holds, we trust all certificate. If serverCACertFile is null, we throw an exception and hence users know HttpsSegmentFetcher is not working properly. After former two cases, we assume that serverCACertFile is the path to a file.. Please add \"; the anomalies detected during replay or given by users will not be sent\" to make it clearer.. We could explore the possibility.\nIn this PR, the execution pipeline is designed in a generic fashion. If you remove the prefix \"DetectionOnboard\", then the entire pipeline become an usable generic in-memory execution framework.\nIn order to extend this temporary executor to TE's distributed executor, we need to make sure we can persistent execution status of job and tasks, which shouldn't be too difficult.\nIf we are sure that this execution framework is the next version we are looking for, then we could promote this class to a generic job class and start the migration.. I am hoping this class will be extended to an interface for generic job executor.. Added.. This executor service does not use DB and hence the job id is assigned and tracked in its memory. The next step is to use TE's DB for distributing the tasks. At that time, the Job ID will be the one returned from DB. In addition, we assume that there is only one machine runs detection onboarding jobs.. Good observation.. This is max execution time for a task.. Fixed.. Fixed.. Shouldn't this endpoint return a json string? The return of the endpoints in this file could be a json string or a plain string. Could you confirm which format is the one used in frontend?. Make it final.. Make it final.. Fixed.. Nice suggestion.. Fixed.. The constructor of dimension map doesn't take empty strings. Fixing that issue here: https://github.com/linkedin/pinot/pull/2237. Please review it and push this PR with that one.. Please rename dto to mergedAnomaly and idList to anomalyIdList. Improve the naming in other places too.. a string of comma separated anomaly IDs. autotuneId won't be null because it is a long. Besides, it is part of the link.. Make id a long type instead of Long to elimiate the possibility of assigning it with null accidentally.. Remove TODO. Remove this change.. Rename to FUNCTION_FACTORY_CONFIG_PATH, ALERT_FILTER_FACTORY_CONFIG_PATH, ALERT_FILTER_AUTOTUNE_FACTORY_CONFIG_PATH.. THIRDEYE_DASHBOARD_HOST?. DEFAULT_ALERT_SENDER_ADDRESS.. DEFAULT_ALERT_RECEIVER_ADDRESS. ANOMALY_FUNCTION_ID. ABORT_ON_FAILURE and abortOnFailure. Considering add error messages for those null pointer checking.. Reverse the if-statement, i.e., Response.Status.OK.equals(response.getStatusInfo()), to handle null status info.. Fix the indent.. exceptionutils.getstacktrace(e) to log the stack trace; otherwise, we only get the exception name but no clue to find the root cause.. The stringbuilder is not well used. Please construct the string using append instead of + operator.. This is different type of job and it shouldn't take the properties for onboarding job. Please use the original empty map.. I don't think we should throw UnsupportedOperationException, which implies the method, run(), is not supported or implemented. You could throw IllegalStateException or rethrow the exception e.. Change to IllegalStateException. You don't need invoke checkNotNull and catch the exception, which is slower than if-statement in your case. Besides, use if-else for regular workflows and try-catch for unexpected workflows.. I would throw IllegalArgumentException because we are missing some parameters.. Refine the exception in the old code if you have time. . The name is confusing because they should be the path to the configuration of the factory. However, the name look like it is a path of a factory object.. The parameters such as SMTP_HOST and SMTP_PORT will be injected from system configuration, which is performed at line 65-70 in DetectionOnboardResource.java.\nDuring testing, you need to inject those parameters manually.. Are you checking if the returned String is null or an empty string?\nIn that case, we could use Strings.notNullOrEmpty.. Should we just create a method to find the name that matches new function's name?. Maybe we should create a method to search for the alerts with the matched name.. Should we throw an exception and stops the job if the user gives a bad data granularity?\nWe could swallow the error and continue, but the user would never know the custom granularity is not used.. If alert and function name has to be unique, could we set their name field to be unique in the DB. There are two benefits:\n1. No accidental insertion of duplicate names even we forgot the manual check. Moreover, we embedded this knowledge in the DB and we won't forget about it.\n2. We know there is either empty or one function to be returned. Hence, findWhereNameEquals method does not need to process a list of functions.. See the comment for the other findWhereNameEquals().. The log message is incorrect because we doesn't continue with the default granularity.. Yes, the stand-alone CLI is created for our users to conduct quick experiments without bringing up the entire ThirdEye.. Fixed.. Done!. Done!. Done!. Done. There are two reasons that I didn't pass globalBaseline and globalCurrent to this class:\n1. This class is used to store the information to be presented at the frontend, so it shouldn't contain any computational logic. The contribution factor should be calculated and pass to the instance of this class.\n2. The value of  globalBaseline and globalCurrent are globally available in the summary that is pass to the front end. So the global values that are stored in this class will not be used in anyway.. Why we check only the last element? Is this a special use case?. Could you elaborate and JavaDoc the method that you perform in the analysis? I am not sure I am following this comment.. Nice suggestion! Changed!. Fixed!. Good question. It should; however, this is the only place that has the raw PQL, which could be used on Pinot Data Explore for debugging purpose. After logging the PQL, this method rethrows the exception in order to allow higher level methods to handle the exception.. Same reason as the previous one.. I see. Could you put that in the comment?. I see you have added the explanation for DimensionAnalysisPipeline, which is much clearer than before. Could you JavaDoc the difference between this class and DimensionAnalysisPipeline. Thanks.. Declare the version number at the parent level, i.e., thirdeye/pom.xml.. Extract the class of swaggerbundle and reuse it in both anomaly and dashboard applications.. Is it end time exclusive or inclusive? Please refine this description and other descriptions of ApiParam.. anomaly function id. See https://github.com/linkedin/pinot/pull/2591. Sure.. I am not sure too. This annotation was used in the old methods that scatter around different beanClasses of managerImpl. To prevent from breaking anything in the system, let's leave it as is for now.. Since you are modifying this part of code, could you order the flags alphabetically? And remove the deprecated isMerger flag. Thanks.. Initialize this list with Collections.emptyList() to prevent nullPointException in the future.. Use Java 7's Objects instead. In fact, you have imported java.util.Objects.. Throw an exception if HTTP_TRANSPORT is not initialized successfully at line 67.. Append the exception at the end of this message:\n    LOG.error(\"Can't create http transport with google api.\", e);. Leave a message to indicate from which calendar we have failed to retrieve the events.. Dose this list have bounds on start time? Otherwise, we would get a long list of events and most of them are duplicated to the ones that have stored in TE's DB.. This method is going to become very slow after we collect a lot of holiday events. Please use the notion of watermark. There are two advantages: 1. we could fetch new holiday events that happens after the watermark. 2. watermark of each calendar is a timestamp instead of a list of events.. This method is used to initialize a new merged anomaly by copying the information of an existing raw anomaly. So, the removed code wasn't doing anything because the mergedAnomaly is always an empty anomaly.. Take care of the case in which getCountryCode() returns null.. Take care of the duplicated country codes in existingHolidayEventToCountryCodes.get(newHolidayEvent) and newCountryCodes. You could insert all country codes to a set and output the unique code to the list.. Does country name always starts at 12th index?. We should return a string like \"NO_COUNTRY_CODE\" instead of a null string.. Change Long to long because you don't want someone to pass in null longs.. Long --> long. Add the condition of holidays that will be returned by this method: a description like holidays whose end time GE start and start time LT end (assuming you are using end time exclusive).. Store the value 2592000000L in the configuration file; like what you did for the key path and calendar list.. Just use an int is sufficient because you are using it in a synchronized block; JVM will make sure every thread reads the latest update.. Please defined projected performance.. Get simple class name of alertFilter.. Make them private.. Is the method calculating latency in ms?\nIn that case, please rename a to duration and b to numberOfRequest.. Set a size limitation or truncate the log on-the-fly to prevent the queue consumes all memory if the machine is not rebooted for a long time or there are tons of requests in a very short time. Remember that each request also makes data cache bigger.. No, current pipeline doesn't have the ability to return execution status; the only way to get the status is through exceptions, which interrupts the execution of current task.. We could log that for existing merged anomalies. However, new merged anomalies do not have any ID.. Should we truncate the oldest logs?. ",
    "puneetjaiswal": "I will do this as a separate commit. \n. LGTM with minor comments.\n. Going forward we can have An abstract Entity class having id as a common variable. \n. LGTM. go ahead and merge after resolving the build issue.\n. sure.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n- remove Thread.sleep if not needed. \n- dont catch RTEs in data layer, catch exception at the point where you are running the jobs and then log the error.\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM\n. LGTM.. please do the data conversions in the Resource layer itself.\n. LGTM\n. LGTM\n. I will reopen this after rebase.\n. LGTM\n. LGTM. \nPlease add a description. \n. LGTM\n. LGTM.. please merge after considering suggested change.\n. LGTM. please merge after addressing the comment.\n. LGTM\n. LGTM\n. LGTM\n. Please clean up older code which was reading from file configs.\n. LGTM\n. LGTM\n. LGTM\n. Please have a look at the comment.\nLGTM.\n. LGTM\n. LGTM\n. lgtm\n. LGTM\n. LGTM\n. lgtm\n. reverted default startTime to endTime - 7 days\n. lgtm.\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. lgtm\n. renamed the package to 'datalayer' - still had to update the PR.\n. lgtm\n. lgtm\n. LGTM\n. lgtm\n. LGTM\n. lgtm\n. lgtm\n. LGTM\n. lgtm\n. LGTM\n. lgtm\n. Yes, it addresses # 1.\nFor # 2, I had already added NO_TASK_DELAY, each worker when find 0 task to execute, they seep for a random time as per below code.\nint delay = NO_TASK_IDLE_DELAY_MILLIS + RANDOM.nextInt(NO_TASK_IDLE_DELAY_MILLIS);\nWe def. need to add partitioning or a deterministic task assignment to handle this better.\n. Nice catch @cyenjung !\n. Already had added tests for AlertDAO : TestAlertConfigManager.java\nAdded AlertV2 to existing integration test suit : AnomalyApplicationEndToEndTest.java\n. Observed this NPE while a local build.. also having local test failures.\nCould you please check an fix these:\n13:39:23.804 [pool-38-thread-3] ERROR c.l.t.c.c.DataCompletenessTaskRunner - Exception in data completeness checker task\njava.lang.NullPointerException: null\n    at com.linkedin.thirdeye.completeness.checker.DataCompletenessTaskUtils.getBucketNameToCountStarMap(DataCompletenessTaskUtils.java:211) ~[classes/:na]\n    at com.linkedin.thirdeye.completeness.checker.DataCompletenessTaskUtils.getCountsForBucketsOfDataset(DataCompletenessTaskUtils.java:189) ~[classes/:na]\n    at com.linkedin.thirdeye.completeness.checker.Wo4WAvgDataCompletenessAlgorithm.computeBaselineCountsIfNotPresent(Wo4WAvgDataCompletenessAlgorithm.java:68) ~[classes/:na]\n    at com.linkedin.thirdeye.completeness.checker.DataCompletenessTaskRunner.executeCheckerTask(DataCompletenessTaskRunner.java:111) [classes/:na]\n    at com.linkedin.thirdeye.completeness.checker.DataCompletenessTaskRunner.execute(DataCompletenessTaskRunner.java:46) [classes/:na]\n    at com.linkedin.thirdeye.anomaly.task.TaskDriver.lambda$start$0(TaskDriver.java:75) [classes/:na]\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_121]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) ~[na:1.8.0_121]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) ~[na:1.8.0_121]\n    at java.lang.Thread.run(Thread.java:745) ~[na:1.8.0_121]\n. Some tests failed while building locally, may be related to your previous checkin.\ntest.results.txt\n. use the update function end point instead of writing a new end point for partial update.. Yeah, as the description says. Changes are pretty small, are not worth effort splitting at this time.. ANOMALY_RESULT_MESSAGE_JOINER is not used and NumberFormat is not threadsafe.\n. Done.\n. Done\n. done.\n. Will do.\n. renaming it to fk_anomaly_results_feedback_fk.\n. sure.\n. TaskExecutorType ? \n. Nit : No need to add default c'tor. \n. Providing executor object for a task type should not be responsibility of TaskType. There should be a JobExecutorFactory which should proved JobExecutor based on TaskType. \n. Can we call this just 'id' ? \n. task_id ----> id ?\n. these are just values, not the change (current vs baseline). So yes, these should be non negative. \n. I have been thinking about it. Tests will require setting up some boilerplate code (mock data generator etc). I would do it as separate commit. \n. Yes, I am thinking about moving more function specific end points under this Resource, so this resource would not be just limited to metadata.\n. anomaly-function is already a path in AnomalyResource, i.e. \"/dashboard/anomaly-function\" path is already present. I am planning to refactor function specific end points without touching the existing flow. Thats the reason why I chose /thirdeye/function for this end point, we can always rename this to a suitable one.\n. Can you please convert this to a unit test ? \nUse JUnit / TestNG Asserts instead of sysouts.\n. Yes. annotation @UnitOfWork takes care of transaction.\n. Can you enable this using a url param ? \n. Can an executor be more than one of (scheduler / worker / monitor) ? \nif no then extract these 3 booleans to type.\n. Can we have a JobRunner interface or abstract class ?\n. Use @UnitOfWork and avoid creating sessions and transactions manually.\n. Why returning class when you can return the object itself. \nThis is TaskExecutorFactory which should create TaskExecutor instances. \n. No need to open session when you have unitOfWork annotation.\n. Catching an Exception which is RTE and wrapping it again in RTE and throwing it ? \nNo need to catch this in the first place.\n. Please add javadoc.\n. Not needed.\n. catching RTE and wrapping it in RTE and throwing not needed.\n. same as above.\n. same as above.\n. please use LOGGER.\n. Why sleeping here ?\n. OK.\n. done.\n. restored dimensions.\n. restored dimensions.\n. We use ObjectMapper, please use the same.\n. please have self explanatory variable names.\n. FileWriter is a Closeable resource. Please ensure to close it. If not closed, it may create leak.\nUse \"try with resources\"\n. Please use ObjectMapper (Since we are already using it.)\n. Used for keeping request/response objects. DTO stands for Data Transfer Object.\nThere is no entity EmailFunctionDependency anymore, but UI needs an object representation for this, thats where DTOs are used.\n. unitofwork - not needed.\n. start() / stop() are methods for JobSch.\nif start(id) / stop(id) are meant for start/stopping  jobs, please rename these to startJob/stopJob(Long jobId)\n. can you log more details eg:  which taskid/worker id etc. also pass e into the info ?\n. please don't add password.\n. do you really need sessionFactory ? \n. How about calling the EmailConfiguration ? (SMTP is a email protocol to be precise)\n. can you also log the task id ?\n. can we use template instead of generating html in javascript ?\n. does start / end mean time ? if so please rename it start / endTime.\nAlso if this is time, can we make it use date/long datatype consistently for date like params (instead of String and parsing it later) ?\n. same as before. Convert date in Resource layer itself. (Data conversion should be done at Resource layer itself)\n. Please have the date conversion here itself. Also check if DateTime can be used instead of String in the resource method param itself.\n. yes. I will add the javadoc in next commit.\n. Merge strategy will be used outside this Util, a place where List of AnomalyResult fetched.\nHow anomalies are fetched and grouped should be decoupled from how they are merged \n. counts for each category will be used on the ui to summarize anomalies between a time selection.\nFunction is only one of the strategies. Strategy was obvious so I omitted it.\n. I feel WHEN the WORDS jumbled IN both CAPS and LOWERCASE, it MAKES things HARDER to READ.\nUsing all lowercase and only only entities camel case is better to read. There is no difference performance wise. Also IDE highlights the sql keywords.\nThere has been many discussions around this http://stackoverflow.com/questions/608196/why-should-i-capitalize-my-sql-keywords \n. how about super.findById(id) ?\n. can you cleanup sessionFactory from this class ?\n. I have added todos in updateMergedResults method. A job can call this method periodically and this will take care of updating raw results as per specified mergeConfig.mergeStrategy. \nThis is WIP.\n. If this method is called by single thread, there is no reason to create ObjectMapper instance for every load call. \nIf multiple threads are calling this method, keep ObjectMapper instance in threadlocal.\n. For this use case may be it is ok to initialize ObjectMapper as static field. \nThis is how we should initialize non threadsafe objects. \nprivate static final ThreadLocal OBJECT_MAPPER_THREAD_LOCAL = new ThreadLocal() {\n    @Override\n    protected ObjectMapper initialValue() {\n      return new ObjectMapper();\n    }\n  };\n. LGTM\n. todo: mergeConfig will be saved with AnomalyFunction. keeping it temporarily here. \n. underlying queries have order by, can't be supported by current findByParam method.\n. That's the reason this is called TimeBasedSummarizer. There is another merge executor which calls this util.\n. why using config id when this entity already has a primary key 'id' ?\n. can you name these all in CAPS ? enums are constants and constants should be capitalized. \n. may be you can omit 'config' and keep it just type. As this is in webapp_config table, type implicitly means webapp_config_type.\n. can this config_id be present in more than one rows in this table, if not then remove it and use 'id' instead.\n. move this method to ConfigFactory.\n. return config object, not the class instance.\n. put a unique name, there is already an end point with 'dashboard'. This may cause a conflict in end points. \nyou may rename this to 'dashboard/config'\n. what is difference between .0f and .1 ? Is the space needed after 1 ?\n. It was for testing purpose, will remove it.\n. this is actually windowStart/EndTime\n. Exactly my thought.\n. sure.\n. in thirdeye weight = severity. I will add more comments.\n. It does look same except in one we build email from text and in another we build email from html. Both methods internally call sendEmail and being used at two different places. \n. sure.\n. Sure, I will update TODO comment.\n. Added comment.\n. should we omit 'index' from all the table names ?\n. duplicate code from other c'tor.\n. The content of this class is already present in com.linkedin.thirdeye.db.dao.AbstractDbTestBase\nWe can have better abstraction here.\n. This method is already present in the base class\n. this method is present in the base class.\n. We can merge DaoProvider and PersistenceUtil to a DaoFactory and abstract the datalayer initialization logic there.\n. exp is experimental. I will add a comment.\n. added email/function mapping through UI.\n. yes, updated in another PR.\n. Lets limit the magic numbers as less a possible. extract unit val to a var and then multiply numDays into it, will make the code more readable.\nvar numMillisInDay = 86400000;\nvar diff = parseInt(hash.currentEnd) - parseInt(hash.currentStart);\nif (diff > 2 * numMillisInDay) {\n} else if ...\n. logic duplication with above code, lets extract this to another function ?\n. yeah this method requires fixing.\n. change windowEndTime ---> monitorEndTime\n. windowStartTime ----> monitorStartTime\n. extract this as a util function to avoid duping. \n. We add +/- 2 hours for both hours/minutes, check js method calcAggregateGranularity. \n. I wonder why we are converting a map to another map ?\n. Should not we store filtration rule at metric level ? \nthats how it is in autoanomaly.\n. I will make the change to make it compatible with java 7. Sure. This came as auto import.. Could not find better suffix, but def. can remove it once we move completely to this.\nI will remove the from email hardcoding.. should not this take care of deleting the existing anomalies for this time window first before re - generating ?. this string is not used at more than one place, perf. wise no extra cost.. Yes. Ideally we would never use this default.. sure.. please take a look at \"chain of responsibility\" design pattern and how we can trigger \"apply\" method one after another.. Keep Compare Mode consistent with rest of the code... eg w/2w vs Wo2W ?\nUse a enum and change if else blocks to switch case. this would improve readability.. Since same strings literal is used at more than one places, we should extract as static final and reuse.. Please make the variable names consistent. at one place it's DB, another its DAO_REGISTRY.\n. What DC stands for ? choose meaningful and self explanatory names please.\nwe have been using xyzDAO for data provider objects.. I will add javadoc. \ntargetDimesionMap will hold metadata of the event. for example \n1. holiday event will have\ncoutntryCode --> {US, CA, ...}\n2. Deployment Event will have\nfabric --- > {prod-lva1, prod-ltx1..}\nhostname ---> {hosta, hostb, hostc...}. can you replace this as :\nprivate static final DAORegistry DAO_REGISTRY = new DAORegistry();\n. use equalsIgnoreCase.. Nit : use equalsIgnoreCase. why 5 minutes and not 15 ? \n15 looks reasonable.. I would have named it \"completenessCheckEnabled\". this is single time data load script. We can remove these later.. just use get/set metric instead of \"topicMetric\" and have a javadoc explaining what metric is. . just use getSpec().getMetric().. I dont see a reason to overrider plain simple getters/setters.. conventionally yes.. follow one convention for time, use long as you would not have to worry about TZ. \nalso please be consistent with parameter naming camelCase vs under_score.. This logger statement does not look right.\nCan you please confirm if it prints log info as expected ?. please be consistent with parameter names. Keep camel case for functionId also keep variable name same as parameter name.. conversion of string - id  to long is unnecessary. Make the datatype itself to long.. Would it make sense to have an object \"AlertFilterEvauationResult\" instead of a double array, and returning that as result. \nThis way you would not have to maintain the index names and use it outside this util class.. use long time as milliseconds if possible, this way you would not have to convert it to string / date and also would not have to worry about timezone related errors etc.. does not really matter. \neg I would not have to write ThirdeyeMetricUtil.detectionTaskCounter, rather I would just write detectionTaskCounter while accessing it. . Not sure if it is. But it would matter only when we start storing these event to our local db, at that point we would not want to store duplicates.. yeah, just a habit of doing both checks.. find Not Notified anomalies ByFunctionId (given functionId) And anomaly Id Lesser Than (given anomaly id) And EndTimeGreaterThanLastOneDay. already included in line 45. sure.. use proper request object instead of passing string and then converting that to an object.. unused code - kept commented for future chart related references.. Principal is the authenticated actor. It could be a user, account or group.. - we will need to add a mocked user session provider for unit testing. Something that we would have when implementing authorization.. is it frequency of anomaly job or granularity of data ?\nif later then please rename it to something like aggGranularity (aggregation granularity). let this class extend AbstractSet.. javadoc please !. code documentation about the strategies please !. thats toAddr from thirdeyeConfig which is te-dev address. Not same as subsGroup's toAddr.. It should be static final, making it volatile would not really cause any issue. However keeping it final would enforce no new assignment to this variable.. ",
    "jiaqi-g": "LGTM.\n.  (long) (a * b) not working. You can try the following:\nint a = Integer.MAX_VALUE;\nint b = 1;\nSystem.out.println((long)(a + b)); // -2147483648\n. @kishoreg I think the mmap library should support file greater than 2GB, which is one of their selling feature. We just need to assure passing the right offset/address (may be greater than MAX_INT) to it.\n. @Jackie-Jiang @kishoreg @antumbde I added the isSelectStarVisible as a column metadata, it's up to you guys whether to merge this PR or later.\n. LGTM. When travis passed, you can merge it \ud83d\udc4d \n. Thanks. I fixed it.\n. This has already been checked inside the function of HllUtil.getHllFieldSizeFromLog2m(hllLog2m).\n. It verifies the correctness of generating startree with or without hll and write to disk successfully without exceptions.\n. It does test v1 -> v3 format conversion, however, it checks to make sure the conversion is correct for segment with hll index, i.e. successful conversions with hll field and values in indexed segment files.\n. This is the old version aggregation function, it just mimic the structure of combine of old distinctcounthll and other functions to have a pre-check of the null value. I'm not sure it's absolutely necessary, but it's always safe to do that.\n. I'll fix that.\n. We have getDerivedMetricType(), from which outside methods can get the type info. And if in the future, there exists other derived types, outside methods can add a new \"case\" clause in switch for handling that type, which seems clear.\n. fixed\n. The toString should not be used in any part of the real production code. It's only used for related test codes. The caller should have a sense of how much the output is and whether to use it or not. We can surely attach a warning in the comment of this function.\n. I will update the logic in another PR.\n. This is made intentionally. I believe it should be at \"info\" level since it does not contain any of the debug message, e.g. intermediate results. And similar messages in other classes are also at info level.\n. I will pull hll config in metadata out of StarTreeMetadata into segment metadata in next PR, so it will resolve this issue.\n. The reduce part of this new aggregation function is never got called. I think the transition of old aggregation API to new API is not fully completed. Currently the reduce is supported by old API and I think it should work fine for multiple segments. (That's part of the reason we need to keep the old API in system)\n. No, fasthll is not shared with distinctcounthll. But old and new fasthll API is shared in combine/reduce part. I add the comments there.\n. fixed\n. fixed\n. Still I think these are info level information. e.g. directory, column names and so on. Not the debug level information, e.g. intermediate results and so on.\n. When there is no missing value for the key, the config.getInt(key) throws an exception, which is immediately caught by my code in several lines below.\n. column name is available, added it to the exception description.\n. added\n. added\n. done\n. added in ColumnMetadataTest\n. added in ColumnMetadataTest\n. performFastHllRewriting should only be called after a successful check of existence of startree. If the user specify a customized generated hll column, we should not rewrite the aggregate column. (Since user generate it, he/she should be knowledge of the column name, and Pinot does not have this information, so no rewriting can be done.)\n. isFitForStarTree will give green lights to all fasthll aggregation regardless of the aggregate column, the difference in the rewriting part. When customer provides the hll column, he/she should query on it directly, Pinot does not know how to do the rewriting. But for Pinot generated column, user can query the original column, and Pinot has the knowledge of how to do the rewriting.\n. Yep, I updated the code.\n. Yes, this should not be changed. From the logic we assume  blocks.length == dataschema.size(). I updated the code and you can take a look at it.\n. mappedByteBuffer.toDirectByteBuffer(pointer * (long) totalSizeInBytes, dimensionSizeInBytes) results in an array, you still need to iterate the array to get the content. Probably you are checking a newer version of the library?\n. ",
    "VicoWu": "@jfim  @kishoreg @sunithabeeram  @shouhm \nColumnar format like Parquet/ORC is now widely used, instead, row-oriented format like JSON/Text/AVRO is rarely used now. So, do you think it is valuable to do so?  I know that for Druid, it could support Parquet/ORC by its extension feature(http://druid.io/docs/latest/development/extensions.html). \nFor other Realtime OLAP like kudu + impala , it also support Parquet/ORC.\nSo, could any one answer below questions:\n1. Is it feasible to do so? \n2. Is it valuable to do so? . @kishoreg Great thanks for your reply. It really sounds great that pinot has such a great extensibility!\nI will have a deep insight on pinot code and implement and ping you if I have any update.. ",
    "sql888": "Thanks!\n. ",
    "anujambekar": "+1\n. +1. ",
    "bl44": "We need to expand the design later to handle the artificial discontinuity issue. For now this is relying on better granularity in scaling factor.. discard this pull request. the clone part is committed in https://github.com/linkedin/pinot/pull/961. The reply part will be provided in similar way.. This frequency is only used by DetectionJobSechulerUtils for now. \n. Since this change will modify database tables, please wrote proper instrunctions for product release on thirdeye, they may facing errors without knowing this particular change.. Can use return (qualificationScore > threshold), to replace line 33 to 37, to simply the code.\n. Here, you see severity, later you do return weight. It's still confusing. Can you add more comments here for better clarification. \n. This function looks the same as the sentEmailWithHtml defined in line 137. Can you consolidate these two?\n. \"No failure email configs provided\" seems too generic. For example 'alert email configuration'?, just try to separate it from other 'failure email configs' log, if there is any.\n. For a given MergedAnomalyResultDTO, multiple rules can be applied. Want to make sure that  you can get a list of filtration Rules, based on metric_id and/or pattern type.  For simplicity let's do metric first, but we can have at least more than 1 rules. \n. My understanding is that we cannot assume that very metric in this 'MetricTimeSeries' share the same scaling factor. So we need to specify the metric name. Sure. I will change it.. The scaling Factor list (not scaling factor itself) should not be empty.. I have thought about this strategy and the reason I am not using the way you suggested is: 1) the MetricTimeSeries do not provide a good way to iterate through each timestamp. Or get the timestamps within a window. 2) If we were to expend the daily factor to 5-minutes interval factor, for example. We need to first align the timestamp (if there is a convention like 5 minutes always start at 0, 5, 10min within an hour).  I agree with you that the way you mentioned here is more graceful. let's discuss further tomorrow morning. . No. Will add that in follow-up pr.. Let me think about that. We do need some smoothing here. But since we do not provide additional information here, use previous weeks average is too adhoc. Thinking of introduce Period Units as an input here.. comment should be deleted. No meaning here.. This is just a suggestion: here and line 129 assume that we have a default scaling factor (start, end, 1.0d), but this is might not  be what we expect. If the config is not valid. we should expect Null and the out put result should be an empty list. If we do keep default 1.0d, we should add this to the log in line 126. I understand this is equivalent to removing the ts, but can you explain the difficulties of removing the ts from original metricToModify? Is it because the other metric in this dataset may still have to use the ts? or some other reasons? . I could imagine a use case where you only want to deleted the merged anomalies and leave the raw-anomalies (its children) untouched. So can you add a boolean input that can be used to determine whether or not remove the associated raw anomalies. . The use case I am thinking of is to just replay the merging logic, where you do not need to remove raw anomalies. . Good to know and yes what we really want to know is to show that this particular metric is unknown at this TS, no need to remove the ts itself.. Sure. This is a good suggestion. I intend to use the 'GenericDatabaseAccessTool.java' only for initialize the series of 'dao' for database interaction. Not the adhoc io method.  We'd better put the specific method in individual onboarding tools, like the 'Clone' and 'Regnerate'. Will clean this up as suggested.. please make the log info more specific like ' deleteing merged anomaly results'. same here: deleting merged anomaly result id. Second this comment. Should make sure the anomaly results in this time range is cleaned. . typo, detectionHost twice. . I would suggest that you test this endpoint against 'dashobard' and 'anomalydetector' on your local host before you merge this change. . Should remove raw anomaly results before before regenerate. Another place need to modify is the clone method, when clone merged anomalies, we should either reset their 'raw anomaly ids to null', or clone the raw anomaly result together with merged anomalies, otherwise their might be still a problem. @cyenjung is this a valid concern?. Agreed, let's make smaller batch of changes and merge more frequently. . Is it possible to treat baselines as named ? your current choice is a direct extension from previous case where you have current  + baselines (list). But if you have current already as a list, there isnot strong reason you treat them differently. you just need the hash-name to impose the relationship between current and baselines, this relationship can be achieved with a real tag (or how you construct the transformer). . related to previous comments in AnomalyContext. you need to use metricName anyway, so under this new situation, its better to treat current and baseline equally. Since both are modeled as timeseries right now. It should be fine to have 'un-equal' length for baseline and current. In general, as long as we remove the seasonality, you do not need the baseline and current always aligned in length. Usually the transformer do not mix current and baseline. . Second this, we do not put anything that is in 'anomaly-detection lib' in thirdeye-pinot. This is a good isolation strategy (for internal and open source use cases). . I believe there is not need to include this here. We can use weka for now in our internal lib, and there is no concerns at all. Will wrote if we really want to open-source alpha-beta-logistic classifier. . I would suggest that we have a AutotuneJobResource, that can be used through UI (ad-hoc) or background job scheduler (in periodic fashion even in this scenario, we are talking about weekly tune, not hourly).. query parameter should include ('alertFilterName') since it may differ from the existing one, you could make the existing one as default. . I did not see a reason why we need this AlertFilterAutotuneFactory. Thirdeye only call autotune from anomaly-detection lib, how we tune it is determined in anomaly-detection lib. On thirdeye, we at most need a interface and a dummyAutoTune as the base class. We do not need a factory. . The way this class is coded, looks more like you want to have a Factory for 'AlertFilter' not 'AlertFilterAutotune'. Since we do not need to store 'autotune method' in anomalyFunction specs. . weka is under GPL (http://www.gnu.org/licenses/gpl.html) and cannot be used in thirdeye according to @kishoreg. I believe we do not need this in production environment. Please remove before merge.. should we use an separate filterConfigPath (this is not about the input name, but rather how we use it in thirdeye pinot application). @cyenjung can you comment here.. AlertFilter is an interface, right? Is it better to return a BaseAlertFilter? This, of cause, assume that the BaseAlertFilter provides some shared methods for all AlertFilters we implemented (and going to implemented).  . Do we really need these two ALPHA_BETA_ / DUMMY here? We at least need one. and make the other constructed uniformly. . if you want to make it reusable (as a function), you may want to let it take some inputs such that it can generate anomalies with different properties.  . Can you provided some example how does this file look like?. Why deleted these two, seems irrelevant to this commit.. Got you, thanks. . The AlertFilterAutoTune may or may not be triggerred by the anomalyFunctionSpec. The class name of AlertFilter is not directly related to AlertFilterAutoTune class name.  Suggestion is to put a new property key in AnomalyFunctionDTO (eg 'AutoTuneMethod'), or just provide this string as input (instead of the anomalyFunctionSpec). . This BaseAlertFilterAutotune seems not used anywhere. In the refactory in returned AlertFilterAutoTune (the interface, which put this baseClass not necessary).. change to /autotune/alert/{functioin_id}. is returning 0d a good choose here? For example we do have min = 0 and current < mean, then it makes more sense to return - Inf (Double.MIN_VALUE).. Do we need to consider divided by error? I also write this tiny function for sign test. It might make sense to make it as a common util function. Since many anomaly results might carry currentValue, baselineValue and change.. Can't really compare the 'negative' severity with 'positive' severity here, even we use absolute(severity). The definition of deviation from threshold might not be a good 'severity' to use. . there computation is not correct (not consistent with raw weight, score, current, baseline definition) if you have different lengths for two anomalies to merge. . I am wondering if the mergemodel is properly defined. 1) can this be called independent of 'AnomalyDetectionFunction'. this use AnomalyDetectionContext to update a merged anomaly, which seems odd. Do we actually store this context in our anomaly results? 2) I did not see where you provide this MergedAnomalyResult. . Does this assume any particular format of input? If yes, please write this and provide an example in the comments. Or is the output should following some conventions such that this can be used in following module?. We had few endpoints on thirdeye that takes start, end as query parameters. We should make it unified. . does tune -> config (tuningParams) make more sense?. When you design the table, it might be good if we can use it for more generic use case (not limited to function configure) can be other configures. What I am thinking of here is: if we separate filter from anomaly detection function, can we leverage this table design. . sorry for not address this comments before merge, will do it next time when working on similar changes. . Thanks for this. Lesson learned.. Are these functions in this file is only for local test purpose? if not move to under main/. can you request @npawar @puneetjaiswal  to review the database design and coding. Please share a wiki link for the design. . Here you assume that the anomaly result in the list do not have overlap, this is not always true. Because the data structure itself dose not require the elements not overlapping. Or you should provide better comments/descriptions here to show the proper way of using this class/method.. Any other codes are using this class/method. These codes looks very should and is there existing code that can do these; seems to me these are pretty common tasks. . have you done unit test on this?. proper tested?. The functionality should already be supported by the DTO class. You may not need to implement here. . Please ask @kishoreg or @cyenjung . Can we rename AUTOTUNE here to replay: or function replay. Can you write a description here, what you try to achieve here. For example why you name two Id: functionId and clone Function Id, without context. . Does joda.time.Interval support merge functionality? I saw the same logic has been implement couple of places within 3rd eye repository: for example in Merge Anomalies. We should think about unify (merge intervals) logic. . This looks like a method all other module in anomaly detection can use, another good reason for you to consolidate the codebase. \nMay want put it into a utils under anomalydetection. Is this a typo, startTime is long, right?. What's the relation ship between 'bean' and 'DTO', do we have to care about the corresponding bean class for this code change. . is this like the counterpart for properties in previous RawAnomalyResult? should we take the same naming convention (this might make the migration easier)?. Please add comments here to justify your choice of setting given WinodwUnit. Please remove classes that is not defined used right now ( For example in case of future use. . Please consider Restrict this class to IntervalUitls, that extend the method that can be applied to Intervals. This method to merge intervals (or ranges) have a broader use in thirdeye, anomaly-detection code base and should abstracted out.. This can be part of MergedAnomalyDTO, or MergedAnomalyDTOUtil.. Please write few comments in your pull request to explain what you try to achieved here and how you do it. The commit 'title' sometimes is not sufficient, especially for this scale of code change (adding). . Here is what I mentioned earlier, you can create method here: getInterval(). . Can you comment here what is the right format ofr Iso time?. Same here. Better to be verbose and user can correct their input in a informed way.. Why these particular combination of pValueThreshold? try to follow a log-scale for 1, 2, 3 sigma? or should we restrict the default to few cases: like 0.05, 0.01 (2,3 sigma). is these runnable going to create multiple cloneFunctionIds, if it takes multiple configurations? So you will always return the last one, is this the expected behavior?. Does the AnomalyFeedbackType contains 'NULL', what's the convention we used here?. Where and how this metaDataNode will be used? Does it have broader use cases? You may give it a more intuitive name. Also, even thought this is sub class, its better to name it 'MetaDataNode' to reflect that this is a class name, not a variable name.. Agreed. let's keep this in might and solve it in next version. . rename to 'anomaly'. it [closed, closed], so it we should have + 1;. This is to align with current infra. We can change bucketsize to period all in once later. . please provide necessary comments and description such that others can leverage on this tool you wrote. . Are these just formatting change? Can you clean it up such that its easier to understand. . It is hard for me to understand how you setForceBackfill to 'false'  related to 'notified or unnotified'. Is it true that any generated anomalies is treated as 'notified label = false' by default. What the setForceBackfill really do?. Is the 'traffic contribution' generic enough to put it here? Does it depend on what time of metric (count, vs average vs other)? If the metric it self is 'count' and it can distributed along one dimension then this TrafficImpact make sense, otherwise its not.. When you do define this as traffic impact you already 'assume the metric of interest is traffic itself', otherwise it does not make sense.. What's the relation of this metric to other TimeSeries? Can we find a better way to pass these information when do dimension drill down? for example use metricName --> Timeseries mapping? Should we name it differently?. you may also want to put default 'false' here for isCloneAnomalies?. I believe if you input a functionName that already used, you will not be successful in updating the AnomalyFunctionDAO. Why you need to rename the function anyway if you claim this endpoint is to activate a function (you just need the function id or function name, both are unique identifier). It is hard to believe that this simple but useful endpoint is not yet available though; thanks for implementing this. . Does this mean that you will fix the end to now? This is less flexible than the original one. Why making this choice?. Is your definition of F1 score need to change too?. So there will be no SpeedUp?. Sure.. Agree that we do need some level of access control for using such endpoints (which I assume is a common problem for many other products). Put it in endpoints make our experiment so much easier that I do want to have some of this endpoints. I will change the magic world 'ALL' for now, we can think of better way for security.  . During the experiment process I found myself using these activate/deactivate function so many times. Its essentially just of way communicating with the application database. Java do not support good 'cli' tools that's why I prefer endpoints over directly invoke the toggle function. . fixed. What DIMENSIONAL type do? Its difficult to interpret the difference just by name.. is THis only used for alertGroupMerger?. Is there any comments you want to put here? otherwise please remove. You'd rather move the whole files here. \nStringUtil.java, you do not need to leave a comments like this in a open source project. . Only part of the properties need to match, not all of them. Otherwise the properties as a field will be restricted. My original design is  to use the test_config (key, value) as a unique identify of the detection config. You may following this idea and come up with a better one.. Please remove this comments without actual code change.. This condition may need some comment to explanation: you defined isMergeable here, but (Not) isMergeable and other two conditions (which defines isOverlap) together defines (shouldBeSeparated). . somehow it looks weird to have this kind of constructor. It might be better to define:\nmergeConifg(mergeStrategey, gap, length, keys) and use other. as input when you need to construct a new config with an existing config.. you may want to define a new variable name or function to wrapper the if condition:\nisNotMergable(). what if the namespace does not exist. Are you going to create a new one?. should we return some message here?. What's the corresponding operation for namespace, is it fixed? This related to previous comments.. should we call it DatabaseConfigManager?. Can you add some comments here about the usage and parameters. \nIt is little bit confusing here -- you have both name and appName as query parameters. . Its better that you explain more in your pull request description what you are cleaned up here and make sure no one are actually using these endpoints.. should we use - in the path\nfunction-by-name instead of functionByname. same here. use function or functions? lower case with - or camel style. Let's fix it. It will make it easier for other engineers to discover new endpoints.. I put it here primarily because this class host all endpoints that interact with anomaly-funciton.\nThis particular one does not fit where in AnomaliesResources, where those endpoints are primarily used by anomalies tab in UI -- the return is a list of metadata of anomaly results.\nI do not think a customer facing tab need an endpoints to query anomaly by function Id (we already have the one by function name, this is more intuitive and friendly).\nHere I used it primarily for the (onboarding) replay process, we only care about the ids (we also can query raw vs merged right now).\nSo I think this endpoints belongs here.\n . Is it absolutely necessary to rename the DimensionKeyMetric...Map to DimensionMapMetric...Map? if not let's keep it. . it seems to me that the input: monitoringWindow is not used in your function. may add a line break here. . It does not feel right to take comma separated string as path parameter. Is there a particular reason why we want to feed f1, f2 at the same time instead of firing two calls for f1 and f2 separately?. should you check anomalyFunction == null here first? Also this treatment of different function ids together feels very arbitrary. . Maybe we can use function/{id}/replay for single function,\nand create another one function/replay?ids=\"f1,f2,f3\" for multiple functions replay at a batch if you really think it is truly necessary.. This is not generic for all functions, so it does not make sense to do this type of speedup for all. \n\nplease add more inline comments to state why you choose these 'speedup' configurations and when it should be used.\nwhen you do speedup this way for multiple functions, you have even stronger assumption here for your input, which should be explained in java doc.. please use PUT as the method name instead of POST, then you do not need update/properties in your path. \nAlso agree with yen, this should be put in AnomalyFunctionResource where the current 'UPDATE' endpoint located. . can you align the query parameter naming and input naming here (may add java doc) to avoid the trouble of readability issue.. we kind of need this partial-update for better and smoother replay.  We will make sure all endpoints related is well organized and avoid duplication. . could use /{id} \nmake {id} as path parameter\nif you use PUT, that means you are update so no need to put update in your path name. . This type of out put is hard to interpret without know what's the endpoints do, can you put more context in your output. \n. \" function_id to replay --> replay job_id \" . please provide java doc to discribe the expected input output and the purpose of this endpoint.\nHow to interpret the results\n\nWe are considering to use swagger to mange our API's in the future, so its better to put more comments. . use path parameter instead of query parameter job/{id}/status. a list of job excecution ids?\nOrdered? corresponding to the input order?. If we are going to reposition this class to host autotune (tune alert filter or later alert-group filter), let's redesign this class carefully. . Why deleting this endpoints. Are you not using it?. don't you need a constructor here? are anomalies and alertFilters independent in principle?. The previous setting is artificial limitation posted by old ingraph adaptor used. Which always have d15 minutes delay and we do not want to have the most recent one delayed and set its to 30 minutes to keep it safe.\nSitespeed data is in pinot, not from ingraph. Ingraph metric can be treated as real time for now.. Sure. Need to change it. . in graph is real time. All data is streaming to ingraph database through kafka. If there is delay (more than say 5 minutes, it will be a big production issue). \nOn the other side, our sign test method do not sensitive to missing data. Considering we are doing 6 hour moving window. We can tolerate the delay. This frequency change from 30 minutes to 15 minutes is not significant: that 6 new data points vs 3 data points.  But if we change granularity to 1 minutes in future. 15 minutes means 15 new observations -- this can really move the needle. And we may consider further push this to 5 minutues, if we really targeting for MTTD for some special use cases. . Why not return at line 473, if you logic is 'fail one fail all'? Even in the current logic you will not be able to get all failed tasks.. Because you wait for 5 second, its still possible that your all your tasks finishes. skeculedTaskDTO.size = 0, so you job should be complete, not timeout.. move line 497/502 outside the if else statement, they can be consolidate to one.\nFor line 500, if anyway you have to change the status to COMPLETE. you do not need to check the current status. . remove new here. should this subject be generated within this method? what would you expected this to be? 'replay results for {id} during {} and {}'? or how front-end know what to put here? should user specify the subject?\nsame goes for fromAddr, should it be fixed?. Do you want MEDIAN or MEDIUM. sensitivity=median sounds like a typo. remove extra lines. should we put default=true. since it will mess up your merge process.\nAlso, is it already be taken care of by the 'force' parameter?. Do we want to do some clean up if replay job fails?. 1. What if there is no anomalies generated during the reply? If my understanding correct, there will be no email send. But how user distinguish 'no anomaly detected' vs 'replay is not run'?\n\nShould we use slightly different email template for this replay notification email?. If there is not anomaly detected, there will be no email send, right? If the purpose of this email is to notify the reply is end, we may want to send empty email with title like 'reply is done, but no anomalies is detected'. . This important scala java packages, is it fully necessary?. In other places, the bucketMillis is also used to determine if we have missing values (null). We usually expected same intervals between consecutive timestamp, otherwise, we might have to refill it some other places.\nWhile there is no immediate requirement here, its better to aligned with a general use of AnomalyTimelinesView. Should we call it getCurrentUser? or provide some java doc here. \n\n. its frequency of anomaly job. Like schedule a job very 15 MINUTES.. can you follow the pattern in 'post' method where you do '1_MINTUES' type of input.. something like this:\n// modify dataGranularity, the format of input should be like '1_MINUTES', '1_HOURS', '1_DAYS'\n    if (StringUtils.isNotEmpty(userInputDataGranularity)) {\n      TimeGranularity dataGranularity = TimeGranularity.fromString(userInputDataGranularity);\n      anomalyFunctionSpec.setBucketSize(dataGranularity.getSize());\n      anomalyFunctionSpec.setBucketUnit(dataGranularity.getUnit());\n    }. timeWindow sounds more like a range of time. For timeseries representation, name the key to timestamp may make more sense. . Remember the timeSeries is an orderedMap, so it should be sorted, please make sure this is the case.. Can you please put some comments here to explain the 17, 37 choice little bit?. This is a good case demonstrating the value of 'distinguish zero and null'. Good Job!. should we always set the timestamp to the value? even it is NULL_DOUBLE, otherwise what's the timestamp corresponding value? NULL_DOUBLE by default?. Got you from the later code change. This is a very thoughtful treatment. . Nice work for backward compatibility. Should we also tag '@Deprecate' here?. Is these aggregate metric actually used? It is a cross metric aggregation. Wondering where it could be used. . define 'null' as a constant, for example, THIRDYE_NULL . Is 13 a real 'magic' number?. Nice way to construct new ArrayList.. please provide proper comments (java doc) for this interface. should this be a field in AutotuneConfigBean?. Is this change truly necessary? There was no problem without this default initialization. . Move this down to before line 534, such that the 'update parts' are  adjacent to each other. May let is return only the function Id or 'OK' for a 'PUT' function. You already have the get endpoints if you want to view what you have modified.. Thanks for the fix.. AlertJobResource is being deprecated. and We should not add more functions into it.. AlertJobResource. Add this new class to EmailResources.  We can consider rename the file later. \nFor now just keep it here in the repo.. the holidayCronExpression is used in two ways:\n1) if this is not null, then its holiday mode\n2) For holiday mode, use the cron for alert distribution.\nOne need to setup customized cron expression for each 'alert config'. This will be done through this endpoint, and of cause we can use a generic format for all alert config: '0 0 0 8 * *' -> 8 am in the morning.. ",
    "jenniferdai": "@mcvsubbu I verified the code by spinning up a controller locally. I verified that without my code change I get the FileExistsException and with the code change, I don't. Thanks for your help with this!\n@kishoreg fixed :). @gom thank you for fixing this!. Thanks for fixing this.. Tested this by sending GET/POST requests manually. Integration tests will be added in the next part.. Added tests. good call, all other calls in this file don't have this problem. I got the forbids idea from here: https://stackoverflow.com/questions/28161838/args4j-how-to-make-an-argument-required-if-another-argument-is-isnt-given. Merged your change, thanks for catching this!. Starting another one for clarity: https://github.com/linkedin/pinot/pull/2207. Addressed comments. The following for airlineStats_realtime_table_config.json in pinot-tools/src/main/resources/sample_data/ should allow you to post a table and create a consuming segment:\n{\n  \"tableName\": \"airlineStats\",\n  \"tableType\": \"REALTIME\",\n  \"segmentsConfig\": {\n    \"timeColumnName\": \"DaysSinceEpoch\",\n    \"timeType\": \"DAYS\",\n    \"retentionTimeUnit\": \"DAYS\",\n    \"retentionTimeValue\": \"5\",\n    \"segmentPushType\": \"APPEND\",\n    \"segmentAssignmentStrategy\": \"BalanceNumSegmentAssignmentStrategy\",\n    \"schemaName\": \"airlineStats\",\n    \"replication\": \"1\",\n    \"replicasPerPartition\": \"1\"\n  },\n  \"tenants\": {\n    \"broker\": \"airline_broker\",\n    \"server\": \"airline\"\n  },\n  \"tableIndexConfig\": {\n    \"loadMode\": \"MMAP\",\n    \"streamConfigs\": {\n      \"streamType\": \"kafka\",\n      \"stream.kafka.consumer.type\": \"simple\",\n      \"stream.kafka.topic.name\": \"flights-realtime\",\n      \"stream.kafka.decoder.class.name\": \"com.linkedin.pinot.core.realtime.impl.kafka.KafkaJSONMessageDecoder\",\n      \"stream.kafka.hlc.zk.connect.string\": \"localhost:2191/kafka\",\n      \"stream.kafka.zk.broker.url\": \"localhost:2191/kafka\",\n      \"stream.kafka.broker.list\": \"localhost:19092\",\n      \"realtime.segment.flush.threshold.time\": \"3600000\",\n      \"realtime.segment.flush.threshold.size\": \"50000\",\n      \"stream.kafka.consumer.prop.auto.offset.reset\": \"smallest\"\n    }\n  },\n  \"metadata\": {\n    \"customConfigs\": {}\n  }\n}\n. @alex-hofsteede Did that work for you?. @snleee yes, it is. @jamesyfshao @fx19880617 Any thoughts?. Hi @jamesyfshao,\nI have not gotten a chance to implement realtime support for deep storage. If it is needed urgently, I would love to discuss/design a solution together if you would like. We would welcome contributions from your side!. @sunithabeeram talked about exposing these extra methods offline and since not needed today, we can always add if you decide to add those with the output format\n. Thanks for pointing this out! We have had some discussions around changing our documentation so that it goes through review before being published. For now, I have deleted this page.. The conf is set in our tests. https://github.com/linkedin/pinot/pull/3153. We did. I momentarily removed it in the big refactor and was asked to create this but added it back in the same one after some discussion.. Internal customers needed it. https://github.com/linkedin/pinot/pull/3153. Discussed offline, we will leave this in the top level since we need to instantiate pinotfs anyway for other operations.. I think in the case of segment fetchers that are tied to fs (not http, etc), it should be tied to pinotfs, aka, pinotfs should be initialized first, and we shoul duse those same instances. In the case people override segment fetcher with non pinot fs classes, they do not need to depend on this. Segment fetchers that are tied to fs will use pinot fs methods, so should depend on the appropriate pinotfs to be instantiated appropriately. I might have phrased what I was trying to say incorrectly. What I'm saying is if you're going to use the pinotfs methods, you should initialize pinotfs so that we can use those same instances in SegmentFetcher. If not, and you have configured some other non-pinot fs class, then your code will work still.. I think it is right now because the fetchSegmentToLocal today depends on protocol, so each segment fetcher works that way today. Each fetcher can only fetch for a single protocol. SegmentFetcher should not need to be smart enough to make that determination, even in the future. Eventually, even if we will support http fetch for hdfs, the protocol is still http, so segmentfetcher should still be the http-configured one.. What do you think is a better approach?. i think those need to be two separate segment fetchers (same copytolocal wont work in that case). Hi @fx19880617 ,\nI apologize for the backwards incompatible change but would like to discuss whether you would like to migrate to the new approach. I will happily support the migration effort/spend time with your team to help. Definitely feel free to chime in if you want the old way to still be supported. \nI have a couple of design reasons for making this backwards incompatible change. \n1. I wanted Pinot internals to have the final say about the directory structure where segments are deposited. This way, we can enable features (later) such as retentionmanager for deep storage, versioning, etc. If clients have the final say about how segments are stored, this will be much more difficult.\n2. Because of the first assumption, our initial way to make sure we have the final say during segment upload is to first copy the segment to the local controller dir (thus why the local temp dir is needed) and then upload the segment to the final uri location based on the data dir configured and additional paths after that. \n3. The reason I have left it to download first to local and then upload is for example, if you are uploading across different hadoop clusters. There could be different authentication needed, so we may need to support multiple types of hadoop filesystems. I am leaving that flexibility for now and hope to potentially add a direct move later (though with encryption, etc, might be a little complex)\nWhat are your thoughts?. For 1, we can propagate that header through the code so that it doesn't do the move as well. \nI understand. We can keep #2 as is. Do you mind if I set that header inside the segment uri push job when we create the segment uri request?\n. we can take the same approach as with this header; the previous behavior we checked if downlaodUri == null before moving.\nsure! I can update the open source with that header once this goes in. Should I assume the idea is to eventually phase out the header? In that case, might be nice to add a TODO also. i can help to implement that if you would like! Just let me know. @fx19880617 Subbu and I talked offline about this. One option is to bring back the old endpoint and change the path of my new endpoint to /v2/segments instead so that you have exactly the same behavior as before and so we can deprecate that endpoint eventually. I want to do a design review to compare the approaches since this is an architectural change, so is it okay if I implement this on Monday? I will send out an internal email today with details.. Sorry about the delay. Really wanted to implement this today to unblock you but want agreement from the team.. sounds good, i will combine both approaches. In that case, please update docs/microsoft folks. Currently, msoft (and we have) configured with file:/some_path, so if only file:// works, then it will break. @fx19880617  want to confirm one last time, are you using this method inside fileuploaddownloadclient? i've changed it to the new endpoint\npublic static URI getUploadSegmentHttpURI(String host, int port) throws URISyntaxException {\n     return getURI(HTTP, host, port, SEGMENT_PATH);. https://github.com/linkedin/pinot/pull/3326. @fx19880617 . @Jackie-Jiang I think it may be nice to help users construct the request (in case other people wanted to migrate as well), thoughts? Maybe I can rename my new one. @Jackie-Jiang makes sense, how about this most recent approach?. @jackjlli copy does that. I think a helpful test case would be ensuring that segment naming of simple date format and/or segment metadata is as expected.. @chenboat do you have any concerns/questions about this? Would love any feedback or to help in any way.. It requires significant internal build script changes, which I haven't gotten to yet.. Good point. I think I would prefer if Pinot breaks since dataDir is manually configured, and if they put extra slashes there, it is most likely a typo, so I will leave it as is for now. . Does this work for you? https://github.com/apache/incubator-pinot/wiki/Offline-Index-Creation\nYou can try generating the shaded jar.. > * We can have init() present at all times - I don't see an issue with an empty implementation for most and overridable by the readers that need it.\nI like this idea, but I am concerned because some of private \"init\" methods there already, and a lot of code (perhaps other open source users too?) directly instantiates these readers through the constructor rather than the init method. I also don't want people to be confused when they add a new record reader. \n\n\nWe can make the reflection based support to be more general: If the users specify a record-reader class in the segment generation config, you can instantiate it and return. If only the input format is specified, we will instantiate the default readers for specific formats. Do capture the order in which these will be handled and what happens when both are specified (we probably just need one of them to be specified to avoid confusion).\n\n\nI made the reflection based support more general, I like that. However, for the order in which they are handled, ideally, it would be nice to throw an exception so users know they can't set both, however, in segment generator config, we default have avro format currently, and I don't want to break our users' behavior\n\n\nIn the recordreader factory, allocate the record reader and before returning call init() on it; ie, move the return to the end of the getReader method.\n\n\nSince I wanted the record reader path because of the reason above to override, I moved it in front instead. Let me know if you have thoughts on this.. > Does it need the entire segmentGenerationConfig? \nDifferent record readers need different params, so thought segment generation config would be the best/most general. eg: csv record reader needs an extra reader config, json record reader needs a column sort order, etc)\n\nHow can we make these record readers work for both realtime and offline.\n\nNot sure, will look into this.\n\nAlso, we should probably move these record reader implementations out of pinot-core \n\nSure, I can put them in their own module although my orc reader brings in hive, so I still would want the reflection instantiation option.. I use this logic twice since I have to fetch the table config - I fetch the realtime table config and the offline table config with separate calls so that I can log appropriately for debugging purposes.. Sounds good! I merged the pull request before receiving your comment, so I've refactored it here: Refactor rebuilding helix entry #983. Removed in new pull request. verified. fixed. annotated. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. I believe I'm using these!. statsCollector.getMinValue() throws the high level exception. statsCollector.getMinValue() throws a high level exception. Okay, so for user errors, I should continue to allow the api to throw an exception? My thought process was that for user errors, we should always log infos; is that incorrect? I can remove the try catch for the null preconditions, but should I leave them for illegal argument exceptions?. I see an IOFileUploadException in the stack trace!. I might have missed something, but why is this set to 1? And where do we set the cardinality correctly when it does have dictionary columns? Am I correct in assuming that we just added the cardinality field, and it wasn't there before?. Why do we have this path twice?. nit: Known. does this test work on travis? Travis is slower than your local box. Can we wait for something rather than sleeping?. nit: OffHeapStringStore. ask for?. do we want to check if max is null before assigning it a value?. Does this conflict with the preconditions check you put in allocatedirect?\n Preconditions.checkArgument(size >= 0 && size < Integer.MAX_VALUE, \"bad value for size \" + size);. do we want to allow size to be 0?. done. I don't think we need to have segment location here as it is created in the upload portion.. do we want jerseyAdminPrimary to be a boolean? and to change the name to jerseyAdminIsPrimary?. this file lgtm. this file lgtm. this file lgtm. do we want to forceMkDir here as well?. should we return a bad response if it's not good?. we currently have both /instances and /instances/ do you want to keep both?. are you planning on addressing this for this pr?. Can we put the previous error message back? Might be more clear\n@Response(statusCode = \"409\", description = \"Forbidden operation typically because the instance is live or \"\n          + \"idealstates still contain some information of this instance \\n\"). Could you expand on this/remove the todo if it is addressed?. Can you add a comment that this is for split commit only?. I might be missing something, but why do we generate a uniqueSegmentFileName only to overwrite it with tmpFile? . this file lgtm. lgtm. lgtm. why do we have this?. lgtm. lgtm. lgtm. lgtm. lgtm. lgtm. The reason I didn't use the required attribute is in case someone wanted to create a table using only dimensions or only metrics. Topic and partition are ignored for metadata-only consumers. I duplicated the logic we had before for the metadata only consumer. removed. done. Yes, I've duplicated our current logic. currentOffset == finalOffset is checked inside endCriteriaReached.. done. done. The reason this isn't error is because by default, this factory isn't set and defaults to simple. We only set it internally to use a different consumer.. done, will also get a review from @npawar . Can you change this so that if it throws an exception when reading the readerConfig, you log a message stating that CSV reader config __ could not be read?. Originally, I didn't want to use HllUtil mainly because it has a method where it pulls in GenericRow, currently in pinot-core also. I've changed it so that I pull out the logic having to do with hllfieldsize into a different HllSizeUtils and put that in pinot-common so that no logic is duplicated.. good catch, checked this. done. done. thanks, done. thanks, https://github.com/linkedin/pinot/pull/2134\n. maybe change the name so that it doesn't sound like it should be a boolean field?. what is this for?. i like setStarTreeIndexSpec or something without enable more, but as long as you feel that it isn't a boolean, fine with me. sorry if i'm misunderstanding, but if you're enabling startree, i assume you need some sort of config?. None of the apache classes have the if-match header. from my understanding, in zk, it will always be populated with something, whether it is the string \"null\" or something else. By that logic, I thought it would be better to always populate it with NONE to make it less confusing, which I was planning on doing inside upload segment though I could also do it here. I don't know what the convention we want to follow for \"empty\" fields in zk is; for example, if you look at the field schema_name, I've seen \n1. empty string\n2. the string \"null\" (which I feel is very confusing when doing comparisons)\n3. the string NO_SCHEMA\nDo you have a suggestion about the convention that I should be following?. That's a good idea. I can add specific job types. Thanks. why do we not read more than 1000 bytes?. do we want to implement retries here like we do in httpsegmentfetcher?. Could we leave some comments regarding this logic? Spoke offline and it made sense, but might be difficult in the future to decrypt. because?. yes, i pass in the version from offline segment zk metadata, where i set the znode version. yes, but currently there is backfilldatetimeconverter, which is a minion job inside pinot-tools. There are some dependency issues to solve to get that to also use the same upload method, will add a todo to change after refactor. I use the timestamp to set offline zk metadata as well. i have added in the writes to segment push status manually, I like the finally idea, but I want to preserve the ControllerApplicationException format we have . Good call. From the docs: /\n     * Allocates a Date object and initializes it so that\n     * it represents the time at which it was allocated, measured to the\n     * nearest millisecond.\n     \n     * @see     java.lang.System#currentTimeMillis()\n     /. If minion is configured in the table config, that means that a race condition between minion and minion uploads or a race condition between hadoop and minion uploads can happen. We want to write to zk as little as possible, and handling the race condition only in minion configured tasks allows us to cut down writes a little since part of handling the race condition is an extra write to zk to write segmentPushStatus.. I think minion-specific logic can be good(reasons below), but maybe not task-specific logic. However, I couldn't think of a better way to do it. I also think that purge is a specific use case, and we won't necessarily have to do this for other tasks.\nMinion has specific logic that keeps creation time the same. Currently we reject segments of creation time the same or less. Additionally, a future looking optimization is that we don't need to necessarily refresh the whole segment in the case of use cases where minion generates segments of the same crc ( we don't want to reject, we still want to change refresh time, but that can be an optimization, for example ).. This can happen in the case of purge. We want to change metadata, eg: purge time, when a segment is purged so that we can monitor and schedule appropriately. \nThe way minion is designed we decided to keep the creation time the same for all minion tasks. In all the optimization tasks, that is the plan as well. The idea is that minion is working on the \"same segment,\" and we use creation time in order to denote that.. Subbu and I discussed this offline, and we discussed storing a map of minionHistory, which will contain the task - timestamp. Thoughts? This way, we don't need task specific logic. . maybe we could leave a comment here regarding what this class is intended for (kinds of conversions, etc). please remove convertToRawIndexTask/replace with task name. please remove convert to raw index task/replace appropriately. same. did we discuss changing the interface now? to add a flag to allow us to not use table config as source of truth? or was that later?. here also. For now, yes. I thought we wanted to add the option to use other methods so that we can migrate in the future/allow tasks to not have to set task config. But that can be in another pr.. Adding hll for pbnj. Agreed. It will be fixed once we redesign. This is for a hotfix because user agent header is not always sent.. If you changed this back to millis, can you also change this comment?. I feel like this name doesn't convey that it's not just the start time, also includes committing. Can we think of another one? I personally like the old name more. I think we should leave the old name or at least say what it's used for or make it only for segment upload times. Otherwise, other people might accidentally overwrite this map, and we definitely need to preserve it in certain cases.. is this on purpose?. how do we distinguish between transient and non-transient exceptions?. do we also want to include e?. we can return here if this succeeds. i could be missing something, but why do we not need to reset segment upload time upon exceptions thrown? . Not at this point. If there is confidential information, I'm not sure how to distinguish especially since we have internal-specific headers, and we want to keep this method generic.. I also have segment name and table name headers specific to pbnj, I'm not looking for upload type necessarily. My concern with returning null was making sure is intentional - for instance, if we somehow return null for a different reason, I would want to know/decouple that. Thoughts?. makes sense, changed. I definitely agree that we should have a metric. We don't have any open source minion metrics right now, so it might be a little more involved. I filed a ticket for this change.. I came up with it based on what I thought pinot needed; I can relook at all the fs methods to see if any others could be useful.. That makes sense; good catch! I will add those two to the interface.. I'm not sure if we have the license for the new year, I searched in the entire repo, and this is the latest year in any of the files.. This is the behavior of the hadoop fs. If I want to change the behavior, I can't simply call their APIs; I would have to write my own implementation, and I would like to avoid doing that if possible. Sure, can add that information.. added. I changed it, I agree that it isn't the most intuitive . changed the dependency tree, thanks!. move assumes the same fs, only copyToLocal and copyFromLocal will be allowed for differnet filesystems. same. fixed. yes. fixed. I think for all exceptions I want to delete the dst directory. src can be a directory. same as move. Hadoop throws illegal argument exception if it's a directory, changed to fileUri. I'm worried uber has already wired this config into their machines; that's why I didn't change that one. I want the default open source classes to be included in the config so users don't wire those in themselves.. I see that we usually have methods both for get and set for each configuration we wire in, so I added that for consistency. It isn't currently used.. I'm using it in PinotFSFactory. In the next one, I plan to add a new constructor in SegmentGeneratorConfig that takes in table config and sets parameters (startree, etc, so we don't have to serializet he whole thing). However, I like the extra logic/control that I feel should not go into the constructor for this parameter in particular in particular because I want the segment names to be correct.. Reasoning is to separate out constants that we get from table config vs hadoop constants; there will be more coming. It looks sparse for now because it's piecemeal/haven't put in the majority of table config constants. I can combine them if you prefer though!. no, this is only for different kinds of filesystems. For each fs we configure (for example, internally, we can configure dali), we will have one of these strings. Basically, this will jsut like the immutable map in segment fetcher. yes because the same race condition when adding to zk can happen (minion pulls, pbnj pushes, minion pushes finished segment). We decided during design review that we wouldn't take care of this case. Have some notes in the design document about this (basically the problem is difficult because without downloading segment, can always be injected). good call, fixed. maybe add a different error message. I know I didn't do this, but do we want to let users configure this particular param? Maybe we should have a commented section for things we expect users to configure vs things we don't. Could we add back the log? This code could throw a null pointer exception if table config doesn't have time column name and timetype (sometimes people don't set it even if append), and users might not realize why. Could we add something to this log to denote what we're printing?. what is the purpose of adding schema name here? we don't usually do this for our offline segment creation jobs right?. maybe rename to make it clear that you also build segments?. I don't know if hadoop is slower than our other integration tests. If that's the case, travis might have transient errors. Thoughts?. does this just mean we re-run all of these tests? Does that add extra value/do the queries hit your data/they aren't in a specific order either right?. I'm a little worried about this. We've had problems in the past where we have netty incompatibilities that only fail after 3 days or so of our cluster running prod. Can we try this maybe in lor1 perf?. If we want all the files in the directory, we might have to recursively go through the directory and get the size of all files. Unfortunately, java's length() only handles length of an individual file. We have some examples of recursive directory iteration when we gather input paths.. Can we use the above constant (hdfsTarPath) instead of constructing it again?. Can we put a comment for this one that we are deprecating this and prefer that they fetch it from the controller?. Can we change this comment? Update seems like it's a different push location, maybe add?. maybe add that those two are required for append use cases. Agree, can add that in a future one. We've done this for the tar segment file upload as well as the JSON file upload. The idea is that we don't do the extra zk write (that would protect against mutant metadata) unless clients send that header to protect against zk problems. We can change this in a future pr, but for now, this is consistent with other segment uploads. Do you know what this impacts/do query results change?. Renamed.\nIn my next one,  I will add retries, so I am preparing for that.. could be if we instantiate the hadoop one, not the local one and the instantiation fails\n  _hadoopFS = org.apache.hadoop.fs.FileSystem.get(_hadoopConf);\n\n. Discussed this offline, this isn't possible at this point if we want backwards compatibility. Talked about this offline. This is needed for all fs related classes. Http/Https/etc will all be separate.. This is needed because in the init for SegmentFetcher, it requires an instance of GenericSegmentFetcher, so it requires the default constructor. I think we don't have that use case in Pinot and I don't anticipate us needing that as these are used for segment upload, refreshing segments on server side, etc. . When we designed, other filesystems default overwrite, so I wanted to keep it consistent.. Agree that we should collect all necessary apis, but I missed this one. I think after this one, we should be complete. forceMkDir is what we currently use in our code, so I wanted to keep the behavior the same. It doesn't overwrite the directory if it already exists.. no, it cleans all tempdirs, i do have delete in pinotfs to support this. wanted to migrate all to void and throw exception always to be consistent across filesystems but can leave it as boolean for now. agree, that's why i made the interface defn void. For now, will leave as boolean with the rest as you mentioned in an earlier comment for consistency. Will clean all of them up together after doing some more careful investigation in our code.. today, it is. we assume if they haven't configured, it's local fs. Can't think of a better way to do this, open to suggestions. done. We will instantiate the PinotCrypter class at time of starting controllers, servers, minions so that when we download segments, we can decrypt. This class will be wired in by reflection, and during init, we will take that parameter in, so we don't need another parameter during create.. This is where we initialize pinotfsfactory, segment fetcher, it is called in server starter.\nunit tests were added in the last pr for pinot crypter factory initialization. I want the segment upload to be as clean as possible and that means that the whole chain will have the same behavior with different classes. The other implementation once we add metadata upload is for the MetadataProvider to simply unzip return the metadata, similar to a noop.. I currently do not anticipate any other variations to ZK operations during upload but am open to discussing if you feel there is a need.. I like the File idea, but I had to make this a generic object to support multipart. Because multipart is also a type of decrypting, and the lowest common denominator class is Object (there's no way to turn multipart into a file without actually extracting and we want to do that step in the crypter), it became an object.. The reason that I have added multipart is more of a noop operation to organize the segment upload code. When the SegmentFetcher downloads a \"multipart\" segment, it is a noop operation and will do nothing since the segment file is already local.. I think we already have users with this header, so I will leave it as it is.. This is purposeful. Multipart segment fetcher is a noop command, and we want to organize segment upload code such that all kinds of upload go through a segment fetcher.. Sure. I think it can plug into the interfaces I currently have.. If I change that, it wants a return value since the compiler doesn't register that an application is always thrown. I think it may be cleaner to leave it as it is.. I wanted to leave this here in case we needed to revert, but I can remove it.. The special case scenario for file is that we will set the downloadUri to the http segment endpoint we download from. Otherwise, we will construct it from controller data dir (with remote storage scheme) and download from there. The downloadUri has been set in the previous calling method. I wanted to put it there because in my mind the controller should come up with that location. However, this downloadUri is reset here because we need to move the final to the constructed final dir first.. they have returned, good catch.. I might have misunderstood/missed something, but this is an exact copy of our current logic.. I might have misunderstood/missed something, but this is an exact copy of our current logic.. It's for the metadata provider, which I had to put here because all the other segment metadata classes are here too. It was throwing dependency errors in core. This one is untarring and unzipping the file in the decrypt call.. I see, what would you suggest? Not sure I can think of a better one.. No, the metadata one is going to come later. Did not want to make this very long.. We want to plug all upload methods into a SegmentFetcher as we discussed during the design, so that's why I've created a multipart one that is a noop.. I don't think we need it because we would never want to transform a pinot segment to a multipart in our code I think but because we have a crypter (we want the interface to support decrypt and encrypt), I left the encrypt method there.. I have integration tests that cover this entire pathway. I think this should be done in integration tests so that we can verify data as well on the server side. We have integration tests to cover the various conditions (different refresh cases in UploadRefreshIntegrationTest, etc). I put the valid one in OfflineClusterIntegrationTest. I've removed this. Yes. removed due to new way of getting info. moved. I moved the required header to where I construct the uri. sure, thanks. I think that's the correct behavior.. updated. my paths include the slash. I ran the integration test with/without it set.. I exercised this manually in the integration test. Unit tests for this portion would include a lot of mocking because I need to get a hadoop filesystem, so I think the first way is preferable.. Do we want to change this to set the default crypter if not otherwise set?. might not always be .tar.gz right?. I think you need to change moveSegmentToPermanentDirectory to move the encrypted segment instead. Segments were always in .tar.gz format. The reason I put defaultcrypter is so that we can take the same code path for both cases ( decrypt). I like that more too, but the i is used to name the tarredSegmentFile. Talked to Jack offline, I agree that we should either put all controller-specific configs in controllerconf, server specific in server conf, etc, or put them all in common constants. Will create a separate ticket for that. I want that refactor to be separate from fixing incorrect configurations such as this one.. even if you set this, inside \"completeZkOperations,\" I again get the final segment directory and will move it there later on. Will that break your functionality?. nope, download uri will be right, but the segment will still be copied to local and copied to the remote place. segment will be in both places. What input are you planning on allowing?\nI see that normal directories are allowed but curious about different file:// prefixes? Do all amounts of slashes work?. We have both paths still, but in the segmenturi push job, etc, I wanted to use the new one by default as Xiang mentioned he has his own internal way of pushign. This way, pbnj, etc, all will use v2. I have added the old path back as a v1 upload type. Based on discussion with kishore on Xiang's PR, we decided introducing a new header AND a new endpoint would be best so that everything goes through the same path. good catch, fixed. alternative is a string, and URI is better imo. Also consistent with the other apis. If we want different crypter classes, we need to collect all the ones we want to support. So the config will look like\ncrypter.class.firstcrypterclass\naccompanying configs:\ncrypter.firstcrypterclass.moreconfigs\ncrypter.class.secondcrypterclass\naccompanying configs:\ncrypter.secondcrypterclass.moreconfigs. i will support remove aged segments in the next one, after my other PR for adding lastModified to PinotFS goes in. I realized I need the table name to construct this, so will leave it here. good catch, thank you. theoretically, if it's an offline-only use case, users may not set a schema or a time field spec or an incoming granularity spec. could we do a null check here?. same here, may not be simple date format in which case we will only have one item in the array. maybe this could go above the simple date logic to help. is it possible to add a test case for csv generation/reading? What is the issue you ran into? We don't usually generate CSV internally, so I am not too familiar with this part. . Can we remove these comments when it comes time to check in?. same here. which formatting scheme are you using for these changes?. could we use outgoing granularity spec?. nit : could we store schema in a variable?. I think 2 is preferred; could we revert the formatting changes?. could we also add a check to ensure that the format is either epoch or simple date and throw an exception if it isn't?. why did we add this dependency with a version? Should versions be enforced at the top level?. do all our apis/consoles still work with this change?. What does this dependency do/why did we add these?. we want to make all relevant parent directories for dstURI if they don't exist. Also, FileUtils has different methods to move files v. directories.. I don't want to unnecessarily have to do a bunch of try/catch statements in the code for pinotfs apis that shouldn't throw IOExceptions (eg: isDirectory). I like this idea; I will think about how to design this/add this in another one. . you're right, ill add this in the other PR where I make the api changes to remove throwing exception. i see, changed. reverted, made this change in the other pr.   @Nonnull\n  public TimeGranularitySpec getOutgoingGranularitySpec() {\n    if (_outgoingGranularitySpec == null) {\n      return _incomingGranularitySpec;\n    } else {\n      return _outgoingGranularitySpec;\n    }\n  }. For codestyle reasons so that people can understand what the allowed formats are, I would prefer if you checked for this up front, with a comment that only epoch and simpledate time formats are allowed. could you refactor the check for valid simple date format logic into a separate method?. can you refactor this line and the next into a separate method and comment why you have paired millis/with the simple date format, provide an example so outside pinot users can also follow this?. Can you also add logging statements here so we know what is beign set?. Can we also revert this spacing?. Can we leave out the incoming granularity spec null check? That is not needed, think that is a malformed schema and should have already failed. Can we also add a info log that states schema is null or no time field spec, not setting time column or something aong those lines?. does swagger still work when you make this change?. This part seems not needed, can we revert?. I missed these, can we also remove these imports.. same here. I think we should leave this as is. Uber guys committed this parameter for their use, and I do not want to change how their segment names are formatted. I might have added the wrong comment for the sample segment name, if you would like to fix that instead.. Hmm, I think I removed this part of the code.      There's a log in the caller of the method. LOGGER.info(\"Removing aged (more than {} days) deleted segments for all tables\", _deletedSegmentsRetentionInDays);\n. do you want to log something here before returning?. strip is a replace all or a strip leading/trialing spaces, and trim is just leading/trailing as far as i know, but I only want to remove the last slash. Is there another method I don't know about?. thank you! . do we want to keep the startree todo so that we can remember to add a startree doc?. You just need to make sure that all code references to these methods have the same contract as well.. changed the file formatting to bring in a general option. That's what users should set if they want to use adl or hdfs, essentially lets us know which segment fetchers to initialize. when i generated, it became snapshot. ill put version here but leave it for the other one since the other docs are based on this version. ",
    "lionelfeng": "I met the same problem and it took me one day to direct me here to save my ass.  This PR did fix my issue and please merge this PR asap since the new Configuration() is really confusing... Thanks.  . ",
    "gom": "@jenniferdai thank you for merging :). This only supports CSV format, according to SegmentGeneratorConfig.\n. Right.\nwill read as string from file here, and create readerconfig in the mapper.. ",
    "cyy0714": "The issue has been fixed in the new commit.. Thanks @cyenjung  for pointing that out. It's been resolved. . It has been solved in the pull request: \nhttps://github.com/linkedin/pinot/pull/1441. Yes. The old alert pipeline, using emailConfig, is still there and runnable. They will use the MultipleAnomalyEmailContentFormatter to format alerts. The new one will follow the new pipeline. They will co-exist in the system. \nThe to-do will clean up the old pipeline and migrate all alerts to the new pipeline. Then we don't need the old pipeline anymore. . We have two ways to generate baseline: offline and online. Online is for generating the anomaly view, while offline is for use case like RCA. By default, we use offline. . I see. Thanks for the explanation and the fix. . There is a static method in AnomalyResource.generateFilterSetForTimeSeriesQuery(), which doing the similar thing. Would it be possible to merge the two functionality? It would be better to keep one version in the codebase.. @akshayrai I wrote the example in the description. And the test case also tests the case when no property value in the property string.. > @cyy0714 The upper/lower bound is optional which means you don't need to store it in Anomaly.\n\nThe main purpose is to use in preview and RCA.\n\nFor RCA, how is the baseline calculated? If we don't use the sliding window fashion as preview, we will lose the accuracy. . variable name should start with lowercase letter.. would it be better to use cloneNameTag.isEmpty()?. In the cloneAnomalyInstances, \n\nfor (MergedAnomalyResultDTO mergedAnomalyResultDTO : mergedAnomalyResultDTOs) {\n     long oldId = mergedAnomalyResultDTO.getId();\n     mergedAnomalyResultDTO.setId(null);  // clean the Id, then will create a new Id when save\n     mergedAnomalyResultDTO.setRawAnomalyIdList(null);\n     mergedAnomalyResultDTO.setFunctionId(destId);\n     long newId = mergedAnomalyResultDAO.save(mergedAnomalyResultDTO);\n     LOG.debug(\"clone merged anomaly {} to {}\", oldId, newId);\n   }\n\nIt doesn't copy the raw anomaly to the new merged results. . Issue Fixed. Thanks for your comments. This issue has been solved in the new commit. It will return 0, instead of the actual date difference. You need to change to the local date fist. \nCheck: http://stackoverflow.com/questions/3802893/number-of-days-between-two-dates-in-joda-time\nAlso, in current version, do you consider the effect on HOURS?. Fixed. Fixed. Fixed. Fixed. Fixed. Fixed. Use fname only. Fixed. Fixed. Fixed. Use StringUtils.isBlank in the new pull request. Fixed. Fixed. Fixed. Fixed. Fixed. Fixed. Fixed. Fixed. Nice catch! thanks. I checked the paramArray.length() in 366-368. I will continue the iteration if it is 0. Should I still check for the params size?. Updated. Thanks. Yes. The example is written on line 449.. That's a good idea. We can discuss further about the design. Yes. That's a good comment. I'm working on that.. Yes. It is used to replay as well as when we want to apply the config to the actual function. I will work on the unit test for the class. I will work on the unit test for the class. Should we put context into the interface?. Considering grouping, should we add a list of containing anomalies or an enum showing the level of the anomaly?. Joda interval only support overlap, but no function for merge. This logic is similar to the anomaly mergers, but the way using it is quite different. I am not sure if it can be used to TE repository. I will have a further discussion with TE. . Good idea. Will fix it.. solved. solved. solved. solved. This line is redundant. You may need to check if historicalAnomalies is null. As you have for each in the next line, you don't need to check if it is empty.. Here use isUserLabeledAnomaly || isRemovable. It will be more readable.. Should we use bucketMillis? Or we can use period, for avoiding DST.. Remove brackets in the example, including all the examples in the other code.. I think it is better to say, a list of ISO DateTime String (e.g. 2016-5-23T00:00:00Z) separated by comma. . It's not used. Will remove them. Yes. I just add few lines here. In brief, I check if the AnomalyTimelines is stored in Properties. If yes, I take the result from Properties; otherwise, calculate the baseline.\nif(anomalyProps.containsKey(\"anomalyTimelinesView\")) {\n  anomalyTimelinesView = AnomalyTimelinesView.fromJsonString(\n      anomalyProps.get(\"anomalyTimelinesView\"));\n} else {\n\n...\n}. Good idea. I will change the name.. That's a good catch. I'll rename the class.\nThis is to provide a class to evaluate precision and recall in ThirdEye. There are two versions of precision and recall calculation in ThirdEye: one is in AlertFilterEvaluationUtils, and the other is in EmailReportGenerator. I want to have a tool to calculate the precision and recall for a past time region, but I cannot use either of them. Therefore, I want to unify the calculation of precision and recall. . We should log this exception, e.g. LOG.warn(...);. Sure. Thanks. Good catch. Currently, we cannot automatically determine this in the system. I will add a flag in AnomalyDetection to determine if we need to calculate traffic contribution.. Yes. I assume the metric value without dimension and filter as the traffic itself. I will add comments describing this. . Good catch. Removed. Solved. The scheduledTaskDTO is updated at the end of the loop.. Fixed.. No. User can assign different start time in its query. My modification here is to set-up a default start time. . It is not required. The definition of F1 score is not changed. It is a different calculation strategy among different sub-metrics. . The default speedup value is set in the base constructor. This value here is a duplicate. . For the exceptions, we should expose this to users through response. . Why store the feedback as String instead of FeedbackType?. Thread is interrupted, not failed. Correct the return message.. This one is a duplicate. It is used in the previous if statement. Updated.. The activate function is implemented in AnomalyResource.activateAnomalyFunction(). Should we modify that one?. @cyenjung  yes. I should pass the start time equals 1 bucket before the end time.\n@kishoreg That function is based on an anomaly result in the system. I will see if I can reuse the code.. It can export png or csv files.. Yes. I will stop by your desk.. We should also unify the type of id here. Use long instead of String.. one minor: the indent of this line. . I think it is necessary. Using dimensionKeyMetricTimeSeriesMap is misleading. We should remain the consistency with the key-value type with the name. . Removed. Thanks for the comment!. Done. The reason why I need a bulk replay is that when the replay is done, we would want to send the replay result to user. If we send an alert for each function the user creates, it spams the user. Therefore, I need a bulk replay method.. Good idea. Done the changes. Done. . Done. Thanks for the comments. Done. The return message now contains a map, which map the function id to its job execution id. . Change to no update if jobStatus is unchanged.. Solved. Thanks for the comment. Identity is a vague term here. Please clarify the identity here.. Please check if both functions exist.. Refer this to @bl44 or @puneetjaiswal. Please make sure the path is consistent with all the others.. If the string is invalid, users are not notified. Please send proper error massage to user.. Please also document the null condition in Java Doc.. Send a proper response back to user. Like Response.status(Status.Bad_Request).entity().build();. Or throw new WebApplicationException();. We discussed about using Pair offline. However, Pair takes type implements Serializable; however, TimeSeries is not Serializable class. We are not able to use Pair. . Thanks for the comment. Yes. If this happens, we need to take care of the timestamp set inconsistency. . What if smtpHost and port are null? Same issue in the other segments.. The return of getSmtpConfiguration() cannot be null. You should add a checker in the function, and return null if the smtpConfiguration isn't valid.. You can assign 25 as default port.. Added. Thanks for the comment.. Added! Thanks!. The old feature is now logged in the properties. Thanks for the comment. It is for create a new AutotuneConfig entry for each anomaly function.. It's for generating the cookie with authentication tokens. I do this way so that user only need to worry about the authentication token, and the constructor makes the cookie and insert into the request. I leave more flexibility for adding more cookie in the future. . It's removed. Thanks for pointing out. . Thanks for the comment. The duplicate lines are removed. . Done.. Done. Done. Done. I am also thinking of this. Otherwise, it is expensive when a new test begins. The problem is the current function uses the create-schema.sql and drop-tables.sql to create and cleanup the whole DB. There is no information for us to construct a single table. We need to go through the sql file. I don't know if there is any other way to solve this.. Yes. This operation is expensive. The origin design follows the same process. The current pr doesn't lose the performance. But we can think about how to improve the overall performance. It can be something good to have. . Hi @apucher, Thanks for the comment. Is there a proper solution for that? . This user-reported anomalies will be in a separate table. I would ask Yen about his design on this part. . Resolved\n. Thanks for the comments. I'll add java docs to these methods. This methods return a user-defined models. These methods are usually called only once. They return the same instance every time they are called. The implementation can override these methods, but in realistic, they are seldom override by the implementations. That's why I want to move it forward to the abstract class. As the methods only return the pre-setup models (the models are created and initialized in init()), using init may disguise these methods. . This is a good question. We can examine the transformation functions and figure out if useHitoryAnomaly() should be true. But it can lead to an ad-hoc design that if there is new model requiring history anomalies, we don't know that. We can discuss a more systematic solution for this. . Do you suggest to have a pure enum, and determine the predicate on the other side? May I know  the reason behind the choice? Thanks for the comment. I am curious about the choice.. As the format of the output string is like field1=value1;field2=value2. The jaxson cannot recognize this format. This format is shared with all the other properties in the current design.. Add @NotNull for both input arguments.. It is created in AlertTaskRunnerV2. It should be the place where the alertSnapshot is created. Otherwise, the alertConfig has no idea about the new generated alertSnapshot.. If it is null, the init throws errors in the new commit.. Thanks for the comments. . It has fixed. Thanks for the comments.. No. The initial creation of alertSnapshot is handled in AlertTaskRunnerV2.. Can you add some comments describing the meaning and usage of isProjected.. Do you assume the dimensions and filters of userReportAnomaly and totalAnomalies are the same? I don't see how the userReportAnomaly is fetched here.. Please provide a java doc describing the the context here.. Should the interface restrict to detection onboard job? Do you have plans to extend this design to all jobs in ThirdEye?. Will we have multiple detection onboarding services? What is the plan here? Or it is to extend it to the other job services?. Please list the patterns here in the java doc.. Can start and end time be null? If not, please add @NotNull decorator.. Same for here. . Usually the comment is before the variable, except the inline comment. Please put the comment ahead of the variable definition. . Please make the variable readable, using startTime or so on instead of startTM. These checks can be done on with @NotNull decorator on the PathParam. . Here I store the anomaly function config. I will change it to ANOMALY_FUNCTION_CONFIG\n . Can you give me the field name of these features?. Fixed.. Fixed.. Fixed. Fixed. That is a good thought. We should throw out the exception. I will change that. . If we gives MINUTES, HOURS, or DAYS, the TimeGranularity can parse them directly to 1_MINUTES, 1_HOURS, or 1_DAYS. . Yes. For 1, 5, and 15 minutes, we can still use SIGN TEST. Currently I don't want to over complicate the problem. We can add more condition if we need specify differently for certain time granularity.  . The convention for setXXX is to set the value of XXX field. Using setAlertFilter to set both alert filter and tuning properties is not a good idea. I would suggest to name it initAlertFilter or so. . For sign test, the detection window is minute, but the window size is 6 hours. The calculation is wrong here. . Same errors as above.. Name it detectionMinimumBuckets may reduce the confusion. . Thanks for pointing this out. . Yes. They are set to be unique; both function name and alert name. . Yes. you are right. I also checked my code, these configurations are inserted in the init(). We should look into what happened to the exceptions during replay. . I just found out the code is still lying there for review. . The problem here is the value is from alertConfig (not a map). Can I still use the MapUtils?. Thanks for the comment. It is fixed by introducing EmailContentFormatterConfiguration.. Could you explain 1) why the start time of the slice greater than max time, and 2) why we fill in NaN here?. I see. Thanks for the explanation. . Thanks Kexin for the comment. The rb has been pushed. I removed the default properties here. . It's because of the interface. The content formatter takes a Collection of AnomalyResult. I cannot directly apply List. I need to cast the MergedAnomalyResultDTO to AnomalyResult to fit the input argument.. thanks for the comment. It's been fixed. . Thanks for the comment. It changes to camelCase.. That's a good point. Currently, it is no harm to add duplicate emails. But to check if the email is redundant, should we also check if the email format is valid? . It is done. Please review the change.. Use Boolean.toString() instead of String.valueOf(). Please handle possible exceptions, like mergeAnomaly == null. . This is not related to the workaround. It is to fix when there is no anomaly generated, we might face null pointer exception when generating emails.. Change to function-onboard.. Thanks for the comment. It's been fixed. . Use AnomalyResultSource.USER_LABELED_ANOMALY).equals(...) instead.. When do you think it is a proper place to activate the new alert?. Thanks for the comment. It's fixed. . Is sort by alias is what we expect, or sort by metric name?. How the interrupt is triggered?. With interruption, what will be the status of the task and job? If it is ongoing or failed, what will be the plan to recover that after the system is up?. Is it possible to apply to interrupt a specific detection job? FYI, currently the only way to recover the failed jobs is triggering replay offline.. Also, this works for the detection runs normally. How do we handle when there is a zombie task? For example, the detection stops when running on one of the dimensions. It won't enter into the if statement.. Can you add a task and job status as INTERRUPTED, so that we know this task/job was interrupted but failed?. Nice catch. As this has been merged, will fix that in the nex pr. . For future developer, it is good if we can leave a comment, indicating what they expect to receive from getTotalResponses.. For the part of joining application with the anomaly function, can you move this part to an util or a static method, as we will use this method for many other endpoints. . I can understand, but this code segment is shared by multiple methods, for the sake of code re-usability, or easier for us to improve the performance in the future. In my opinion, I think we should better utilize the code segment. . I'm thinking of having this method in ApplicationManager, where we can fetch the list of anomaly function ids from the DAO.. Yes. As we don't need the testing window for that. . Write a JavaDoc describing the usage.. Use simpler path like eval/projected/score/{autotuneId}. Please take care if autotune config and anomaly result is null.. Please take care condition when the configuration is null or empty.. Also when alert filter is null.. Please move this code segment to an util method. I know this code segment may be simple. I still hope the implementation can be simplified.. Could you explain why we need to add and reduce an offset here?. Could you leave a comment on the code segment? It is easier for people to understand it later.. I mean if you can leave a comment for line 542 to line 545. It is easier for people to quickly understand.. Should we check if the anomaly time range overlap between merged and new raw anomaly?. Fixed! thanks for the comment. Please change the code followed by https://github.com/linkedin/pinot/pull/2650.. If the exception happens to a certain dimension, can we also log this information?. Can you also include the merged anomaly id?. It only truncate the last exceptions. Can we truncate each of the exception message if the size is too large?. Thanks for the comment. . Do you plan to store the job status in function bean? Or it is a temporary solution. You can use Yen's task dto to store the status. Currently all task exceptions are stored in the task dto.. Do you know why do we + 1 before? It would be good to leave a comment on the change. So next time people who changes this part knows the logic behind. . In the new version, the anomalies are from 12am to 12am. The endtime exclusive should be the same for all granularity.. Please add \"downgrade.variables.seasonalities=;\" into the properties. and change function to \"function=SelfRecoverableAnomalyDetectionFunction\". There are two StringUtils used in the class: one is from ThirdEye and one is from apache. I'm not able to strike out org.apache.commons.lang3. Why do we want to catch the exception from decodeCompactedProperties? If the exception is caught, what is the expected behavior if there is an exception?. Thanks for pointing out.. Fixed. Added back.. Added.. will it change the order of replay tasks? If yes, then this part causes the incorrectness of replay. The replay task ordering affects the final replay result a lot.. I see. I also figure out it doesn't affects the execution order. But if the execution order isn't deterministic, how can we promise the replay result is the same as the result they see via scheduled tasks?. should be the metric tuning runs on.. Where it is used?. Can be more general to Period.days(functionDTO.getBucketSize()).toString(). ",
    "apucher": "updated to make registry ref final. Test failures are heisen-bugs caused by incomplete state reset between tests. Fix here: https://github.com/linkedin/pinot/pull/1040. rebased onto master after merging #1040. all working. pull request to be split into multiple pieces. Also seems to fix #1140. Any thoughts on this?. working on ci fix #1176 . There seems to be an unrelated test failure. The PR builds fine locally, but this is worth investigating:\ntestRefreshDataset(com.linkedin.thirdeye.autoload.pinot.metrics.AutoloadPinotMetricsServiceTest)  Time elapsed: 0.013 sec  <<< FAILURE!\njava.lang.NullPointerException: null\n    at com.linkedin.thirdeye.autoload.pinot.metrics.AutoLoadPinotMetricsService.checkMetricChanges(AutoLoadPinotMetricsService.java:218)\n    at com.linkedin.thirdeye.autoload.pinot.metrics.AutoLoadPinotMetricsService.refreshOldDataset(AutoLoadPinotMetricsService.java:150)\n    at com.linkedin.thirdeye.autoload.pinot.metrics.AutoLoadPinotMetricsService.addPinotDataset(AutoLoadPinotMetricsService.java:105)\n    at com.linkedin.thirdeye.autoload.pinot.metrics.AutoloadPinotMetricsServiceTest.testRefreshDataset(AutoloadPinotMetricsServiceTest.java:87). Hi Baolei, the endpoint is fully implemented. The pull request is held up\nby an unrelated bug that has been plaguing our CI for some time now.\nhttps://github.com/linkedin/pinot/pull/1159\nOn Thu, Mar 23, 2017 at 9:26 AM, Baolei Li notifications@github.com wrote:\n\n@bl44 commented on this pull request.\nhi Alex, What's the current status of adding this endpoint? Need this to\nautomate the onboarding process. Thanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/linkedin/pinot/pull/1159#pullrequestreview-28704974,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AYQu3YEItBks8U-3NXyLf-vdkGES1sxfks5rop1LgaJpZM4Mf0wl\n.\n. working on CI fix #1176. all comments addressed. build passes. please review and merge. all metrics enabled again.\nmvn clean test: log output from 2363 lines (before) back up to 5908 lines (after). split into two parts. splitting into separate pull requests. again, breaking into pieces. again, breaking into pieces. LGTM. I used a pretty hacky approach in \"AnomalyView.js\" and \"AnomalyModel.js\". It does the job, but I'd be glad to learn how to do this the right way. @justYves . requested fix amended. I think i have some overlap in the full fix #1403. This allows users to add mappings between custom entities without forking and modifying thirdeye's source code. For example, events and metrics from a proprietary A/B testing framework could be associated with each other.. why isn't init() called internally from the constructor?. @bl44 this change is required to support re-configuration of thirdeye components at runtime. \n. That's really 2 PRs. Is your intention to display the top 5 absolute contributors, or the top 5 contributors to change?\nRight now, you're fetching the contributors to change.. The more I look at this the more questions I have. Why do these utility classes maintain state at all? Are they clients?. please always run a mvn clean test before checking in code. Ok, great this should avoid the stale reference problem - i.e. hopefully maintain correctness.\n\nThe second thing to do is to get rid of the \"DaoProvider\" interface again. DAORegistry already is a singleton that's referenced all over TE. DaoTestBase only needs to hold the datasource reference - call init on test start, cleanup on the same reference on teardown. DAOs can be accessed via DAORegistry as usual.. Looks good. Does caching still work for third-party connectors, e.g. autometrics?. thank you for your extensive feedback. yes, it definitely needs further cleanup. let's do a basic integration and see what else is missing.. great. thanks for updating!. Also, here's a freemarker diff to try out the changes via email reporting:\n```\ndiff --git a/thirdeye/thirdeye-pinot/src/main/resources/com/linkedin/thirdeye/detector/multiple-anomalies-email-template.ftl b/thirdeye/thirdeye-pinot/src/main/resources/com/linkedin/thirdeye/detector/multiple-anomalies-email-template.ft\n--- a/thirdeye/thirdeye-pinot/src/main/resources/com/linkedin/thirdeye/detector/multiple-anomalies-email-template.ftl\n+++ b/thirdeye/thirdeye-pinot/src/main/resources/com/linkedin/thirdeye/detector/multiple-anomalies-email-template.ftl\n@@ -145,6 +145,41 @@\n           \n#if\n\n<#if groupedAnomalyDetails?has_content>\n\nanomalies grouped by alert name\n\n\nname\nalerts\n\n<#list groupedAnomalyDetails?keys as group>\n<#assign anomalies = groupedAnomalyDetails[group]>\n\n${group}\n${anomalies?size}\n\n#list\n#if\n+\n<#if holidays?has_content>\n\nholidays\n\n\nname\nstart\nend\n\n<#list holidays as e>\n\n${e.name}\n${e.startTime}\n${e.endTime}\n\n#list\n#if\n+\n         \n\n\n\n```. still some graphical glitches, but good enough for a prototype. \n. Thank you, thank you.. \n. yeah styling is questionable. will be replaced with merged cards.. the rumors are true!. ha merged it first!. ok, cleaned up the entire controller. @ttbach the header used to expand automatically when no feedback is provided. that functionality was broken in that previous PR. I don't like links that go nowhere. You don't either. :-). I'm referring to the change in the if-statement on line 1014. already integrated. semantic comment: use metric \"value\" instead of \"score\" (that's what's in the \"Anomalous\" column). this is a very special kind of troll. fixed. this is merely a quick fix. The wider issue has to be addressed holistically with a new execution pipeline, such as the one @cyenjung is working on. yeah just looked into this too. I'll address this here https://github.com/linkedin/pinot/pull/2517. what's the \"mode\" flag about?. Folks, we're blocked on dashboard development until this gets merged. If you feel this should be refactored, please do it in a follow-up PR.. Yes. When the user does not select any filters, then Thirdeye already requests the data for the \"all\" dimension value for all dimensions. If a filter is applied for a specific dimension, then ThirdEye requests the specific dimension for the selected filter, and \"all\" for any remaining dimensions.\nThis PR simply removes the dimension value \"all\" from to available options for user selection and display, i.e. it does not change TE behavior. As before, the absence of a filter value for a given dimension leads to the use of the pre-cubed \"all\" for this dimension.. please fix unit tests. awesome. thank you for the quick turnaround! I have a few comments, but that looks great already.. for test coverage with RCA in general, we'll need to add actual mock data for data endpoints. It's probably a good idea to combine this with generating test data for overall integration tests. I'll push this for Q2. looks like there's quite a few nulls in the index for application in my copy. we'll have to address this. @cyenjung console logger https://github.com/linkedin/pinot/pull/2669/files#diff-d5f459506c57c1032a3a2cb10f08c9c4. I wonder if this is actually the root-cause :-) It seems like the RCA controller should catch error by itself and fix it.. yes. i'd leave this in for now and instead add some \"message-and-reset-to-blank\" error-handling in the rootcause route. We'll need an input for \"countryCode\" dimension values s well.\nAnd while I'm also guilty of non-CSS, there's a few CSS classes you could add anyways - just look at the related metrics modal :-). @kishoreg we already have tabs - adding sub views to tabs make it even more confusing. remember the metrics cards?. this is hardly a cleanup. It's just another hack on top to get rid of the reverse proxy. @jihaozh and I will look into a more robust solution. I'm a big fan of this. Thanks for implementing the slider. Let's see about that .... They'll be disabled unless specifically activated. We're already seeing a bunch of unused prototypes lying around. Also, nice flow chart :-). @kishoreg atm the only way to go about this in TE is setting up separate metrics. We may be able to enable flexible agg functions on the UI but we're already over-committed\n@dylancharris afaik the BYTES MetricType isn't used by pinot data source. The result in TE is always either a double, long, or string.. They would have to me native metrics as derived metrics are computed in TE directly. @dylancharris Making MetricType part of ThirdEye's MetricConfig is really unnecessary. MetricType serves as configuration for MetricTimeSeries only - a predecessor to DataFrame. MetricTimeSeries was used to move tabular data around TE and all of this data has already been processed and aggregated by the data source.\nWhenever we onboard metrics and datasets from Pinot schemas, we need to set the defaultAggFunction in the config correctly, based on each field's data type. The confusing part here is that MetricType uses the exact same names as the DataType in the FieldSpec. The FieldSpec's DataType however describes the data type before aggregation, whereas MetricType the one after aggregation. The MetricConfig in ThirdEye only cares about the latter, and in fact only handle numeric (long, double) values.. @jihaozh can you have a quick look as well?. Thanks for the image. I'd somehow indicate to the user that clicking the \"GO\" button changes the underlying page, rather than just open a modal. The alternative is to enable the modal to stand alone.. awesome. thanks, steve. The Ember moves in mysterious ways. There's still a few more things to fix in TE bootstrapping, but we're getting close. travis passes. I'm a fan.. TODO warning for dimension algo tab (which doesn't support exclusion). btw @aaronucsd got experience with changing the bubble color for power-select-multi? I'd like to color exclusions red rather than blue. cool. Made it work. \n\n. > TODO warning for dimension algo tab (which doesn't support exclusion)\nDisabled algo summary for metrics with exclusion filters until we can change its implementation. \n\n. still pending design review. new design requested. Hey what happened to (2) and (3)?. same issue lol. Q: How to speed up you Ember build?\nA: Disable any and all parallelism. Absolutely not happy with the state of affairs here. There are 3 different representations for anomaly labels used throughout backend and frontend. Fixing this isn't trivial unfortunately.. @aaronucsd you are not worthy ... get your apache uid fixed. @harleyjj I be glad to get more background on this. I understand you want to integrate the chart with the \"Manage Alert\" page, but I don't get how comparison range and legend are useful for this. Ultimately I wonder what's the value-add of this component. It doesn't seem to add any kind of shared state or interaction between the sub-components.. hacking my contributor stats!. this PR will completely bust my contributor stats lol. @Jackie-Jiang . @harleyjj please rebase branch onto current master. you have pinot code diffs. > > elegant fix\n\ntechnically we should not need to do a toLowerCase on an empty string. :)\n\nthis here is the definition of pre-mature optimization :-). So far this part just NPEs later down the road. One approach I'd suggest is indexing over dataset requiring completeness checks and selecting them.\nThat design assumes that we consider \"completeness\" as dataset property rather than something associated with, for example, an anomaly algorithm. It's something we'll have to decide eventually.. Design question. I'll follow your plan.\nThat said, I expect we'll have to return rich task results sooner or later anyways.. aye. it's stronger than just enabling completeness check -- the detector will require a check to be performed before applying anomaly detection. This shouldn't even be here. A config file would be a better place. Suggestions?. It's hard to tell what this function is for. I assume it's related to sending out email summaries. Is there a better way of naming it?. addAll is idempotent for empty collections already. Yes. If it is to be used for augmenting email alerts, I wonder if it should be part of the dashboard. Wdyt?. MIT license. It's already a (transitive) part of the ThirdEye dependencies. Alternatively, Exp4j would be an Apache License 2.0 choice.\nhttp://projects.congrace.de/exp4j/index.html. javadoc added. javadoc added. samples added.\n@npawar we could have used a baseline time-range (pseudo-entity) in the search context as well. we went with an entity wrapper to stay consistent with out knowledge graph schema. multiple options again. Ultimately, we want weights provided by the user in the search context, and weights generated by pipelines and the aggregation stage in the execution context.. fixed. fixed. Enum constructor is always private. fixed. fixed. javadoc added. renamed to isValidDAG(). done. keyed by pipeline name. added javadoc. removed \"typically\". It is used to encapsulate user input during framework execution.. The method returns an empty set if no entities found. Added javadoc. removed time filter. done. DimensionAnalysisPipeline it is. done. moved to instance method of PipelineContext. I ended up including meta data with the entity instances. In a sense, each instance of Entity is meta data already - the urn itself is only a reference to the \"thing\" outside of the framework. done. done. pipeline names. added javadoc. done. yes. added javadoc. The static pipeline always returns the same result, regardless of the input.. EntityType serves the same purpose as an Enum - with the difference that it's extensible by other projects importing ThirdEye as a library.. we require a reference to an EventDTO anyways. done. done. see comment about EntityType.java below. Sure. We can implement whatever business logic we need. I'd suggest to put different scoring mechanisms into separate pipelines instead. I'll merge the Scorer with \"DimensionAnalysisPipeline\" to avoid confusion.. done. I think default values should be the responsibility of the logic using the pipeline. Otherwise, an omission by the programmer can lead to very confusing results for the user\nFor example, a UI may display a Wo4W comparison but not pass on this baseline. The RCA framework would execute without warning and provide misleading WoW results.. for testing. We'll integrate this with @npawar's entity-to-entity mapping table. Is this left over from debugging?. I don't quite understand the reasoning behind building a new baseline entity. There's a baseline TimeRangeEntity in the search context.. Yes. Is there a specific reason to type for \"TreeMap\" rather than just \"Map\"?. The last Throwable in the varargs is automatically appended by SLF4J convention. the current weighting/importance of the target metric. when the user's search context contains multiple metrics (with potentially different weightings). If there's only one ThirdEye client instance per class, maybe go without a separate name property. I recommend adding at least some javadoc stating that there can only be a single instance of the Pinot client. Or better yet, throw an exception if there's multiple.. This kind of code repeats over and over. I wonder if initializeCaches() should simply extract this information from thirdEyeConfig by itself. After all, there's no external info added here (i.e. it all comes from thirdEyeConfig in the first place). It's mostly a limitation of how we load configs. If a property is not in the config file, it errors out. We could could change that and make RCA (and other stuff) optional. ?. should this be configurable?. technically, yes. If merticIds is empty it just returns an empty map. Stylistic question. Absolutely doable, yet start/stop aren't really properties of the anomaly ranges either (i.e. they're a cutoffs, not anomaly ranges). fixed. just return true/false and get rid of boolean updated. just skip defining updated. It's transparent.\nhttps://stackoverflow.com/questions/19279628/what-is-a-good-way-to-manage-keys-in-a-key-value-store. please re-read comments and documentation. see above. Either Config or Settings. This should be the other way around. Depend on the declared field type, not the input data - i.e. if the field has a numeric type, attempt conversion.. Please use ApacheCommons instead. \"StringUtils.isNumeric\". Probably \"NumberUtils.isParsable\" is a good choice too.\nhttps://stackoverflow.com/questions/1102891/how-to-check-if-a-string-is-numeric-in-java. Please check the declared field type, not the field value (which may be null). Thanks for adding a unit test. Maybe check whether it's String-compatible here - and throw an Exception if not.. fixed. lol. good catch. fixed. fixed. sure. i can remove it. It's very much a hack. I want the dots to be displayed in bright color, but the description in readable, regular color. One alternative would be to hard-code a \"lighten\" in the anomaly graph wrapper when it encounters a baseline event (event.isBaseline == true). thoughts?. absolutely not. I'll review the docs. this uses a map as a delegate. AbstractSet would store items internally. Works as intended. Only programmatic 0d is formatted as such - everything else with exponent and mantissa.. why volatile? this seems like a bug. thanks. good catch. travis complained too. . AuthCookieSerializer is instantiated by the dashboard app, and dependencies are injected. There will be only one instance around.. there's an explicit principal != null check above. if it's null (and in any other case) the authenticator returns absent. that's expected and tolerated. i've changed the constructor to clarify this. why is this code duplicated four times?. this private dependency should not be here. Sorry to spoil the party, but this will cause concurrency issues. We've been there, done that. TestNG executes @ AfterClass and @ BeforeClass methods (of different test classes) in parallel.. We'll need a value for user-reported anomalies as well. fixed. shipping a feature before it's ready. unfortunately.. good catch. I fixed the code.\nusually the end index is the first excluded index. I assume this this is true for JS as well.. fixed. fixed. fixed. fixed. deleted. fixed. entities are immutable for the frontend. yes. the set object reference doesn't change. we could also instantiate a new set instance instead. deleted. deleted. yes. I'd rather keep it uniform. same. uniformity. yes. fixed. fixed. hmm. that will rip it out of context. fixed. no. the entity type (not eventType!) carries semantic information for the chart. E.g. a metric is displayed differently than an event. Every type requires different logic to convert it into series data.. fixed. fixed. fixed. yeah I saw that one too. if we introduce it, we should replace all plain JS objects with it for consistency. fixed. semi-fix. arrow context works for entities loading, but not for timeseries loading. this is a strange case.. fixed. fixed. maybe \"compareModes\" to be consistent with \"granularity\"/\"granularities\". typo!!1. do we have any convention regarding public/private method naming?. maybe define this as a constant further above. also, it seems this subtracts N days, rather than weeks. please feel free to remove any of these old fields. hmm not really without blowing this helper out of proportion. \"topk\" is the set of topk dimension names. \"dimNameObj\" only makes sense in connection with the code that calls this helper.. fixed. yes thanks. fixed. shouldn't this use a standard serializer, like jaxson?. This seems domain specific to database fetching. you may want to keep this out of the enum and instead have an enum->predicate map where it actually applies.. for now, please \"declare\" it as a class-member in controller.js - I'll refactor that shortly and don't want to miss anything. you'll have real data shortly. The encoding is \"countryCode\" -> [\"CA\", \"MX\", \"US\"]. what would be a readable suggestion here? :D. fixed. fixed. I'm inconsistently consistent :). both lines perform different operations on different sets. The controller should only handle the context object. All the complexity of converting between query-params and context, and display options and context should be hidden in the route and the components - i.e. \"context\" is the interface.. let's not worry about fetching this data yet. This will be handled by asynchronous services.. this should be encapsulated within filter-bar. entities go in, a set of urns comes out via onSelection action - i.e. \"entities\" and \"onSelection\" is the interface. Yes, I remember that discussion. IMO we should decide recovery/merge/ignore when we prepare the data for auto-tuning. Otherwise, we risk losing the user input irrevocably by mingling it with algo outputs.. fixed. also, thank you for looking this over. it's a super long PR.. fixed. fixed. this shouldn't be here. filteredUrns is a set that's populated via actions. see above. see below. hmm. the definition yes. the comparison will look worse \"ROOTCAUSE_METRICS_SORT_PROPERTY.DATASET\". isn't there a better way to do enums in JS?. fixed. fixed. \"currentUrns\" and \"current2baseline\" are gone. as per our discussion: https://github.com/linkedin/pinot/pull/2119. note this change. email subject name used to overload alertConfig.getName() in some circumstances. they are now separated.. @cecilynie yes this is another thing to change. it's for a separate PR.. there already is an enable/disable endpoint in AlertJobResource.. thanks for implementing. please move this to AlertJobResource.. yes. if it ever comes up, please blame it on me. :-). yes, this is guaranteed to be in millis.. fixed. the else clause here is defensive programming, i.e. it should never actually be called during execution.. why is this null-check needed? this code path should execute exactly once. this is very dangerous. please at least add documentation that this is for testing purposes only. It allows full access to pinot. no, the entire anomaly is replaced (see CP above). fixed. fixed. fixed. fixed. fixed. fixed. both ways are mentioned in the docs. is fetch meant to POST requests?. yes. this is for consistency with other uses of switch() in our project. fixed. fixed. fixed. fixed. fixed. for the date, month can be shortened, but weekday should be included. fixed. fixed. fixed. fixed. fixed. fixed. ack. I try to use \"getProperties()\" consistently rather than mixing up get() and getProperties(). fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. please also delete the code in timeseries-chart that applies a CSS class from the color string (lines 73-75). line break. i wonder if there's a better way of doing this throughout our project. nice typo. lets delete the method if its not used - we can keep the mapping const. yeah that's a habit of prefixing any boolean return type with 'is'. I'll rename it. it's a tri-state variable - \"default\", \"true\", \"false\". null is the default value. spelling all of this out as an enum seems overkill. the one-way interaction between isHidden and isHiddenUser is important here. the first part is redundant. for cleanup use only \"taskDriver != null\". i'd just pass through the actual name. might as well poll every minute. delete \"is\". \"abortOnFailure\". this \"should\" be the constructor. IMO avoid init() methods whenever you can. Pinot just underwent a major cleanup for this. best practice add an 'unknown' job state or throw an exception. I wonder if this duplicates existing logic - i.e. could any job submission simply return the id assigned by the database, without keeping track of it in memory? What if there are multiple different frontend servers?. +1 for extensive unit testing. I should have used isNotEmpty() in the first place. This is stricter than not null. fixed. range is always replaced as a single unit. there was still a bug though. thx. left them out for now for vspace. may return soon. required, otherwise changing the filter will permanently override the CP. yeah it not currently uniform and we'll have to refactor a bunch of these.. fixed. multiple spinners indicate loading even if the tabs are up-to-date already. We'll probably need individual loading status. then again, this view will turn into a table anyways. the get() vs getProperties() will haunt us until the end of days. fixed. fixed. reverted to original. fixed. fixed. fixed. fixed, plus comments. ack. you know me :-). auto-generated by intellij, both are valid: http://usejsdoc.org/. same. Is this intentional - metrics as the default view? afaik the heatmap should be the first thing. same. did you try this with metrics with very long names, e.g. ones related to page views?. Is this intended as a stand-alone CLI, or as a service?. please remove linkedin-specific references. It's an internal utility function for writing tests and pipeline code. thanks for looking at this. I've expanded the javadoc.. interrupted should break from the loop. shouldn't this be caught and logged at the highest level?. same. maybe use a cached thread pool at this point. 40 idle threads is a lot.. see javadoc of the method. ok fixed. even more doc. you could use the \"humanizeChange()\" util (if it's already merged). afaik this does not necessarily iterate in order. you may get 'wo2w', 'current', 'wow4', .... this isn't the predicted value. imo it's better to omit than to mislead. you could cache this aggregates[...] value since it's also used above. Please add a description to the PR that mentions this change (in addition to describing the header bar). It's got to be readable using the text-only console as well.. fixed. fixed. fixed. I wonder if this is more confusing than helpful up here. I think you can safely read this directly in onSessionSave(). maybe rename this to \"sessionUpdatedBy\". The session-owner is the user that originally created it, which may or may not be the last person to update it.. yes, i'll push a separate PR for that. Yeah I agree it's time to start documenting this. The RCA core UI has become fairly stable. Let's go over this on Mon.. thanks. fixed. not part of the PR. tuple sort in natural order. Lodash's sortBy() applies to objects with named keys. it's a tuple sort. Naming collision. 'session' currently refers to 'RCA session' in the route and controller - this has to be refactored in the future. fixed. @ttbach . add 'entities'. I should address this in the backend in the long run. I agree it's copy, but it also affects what's stored in the backend. If you come from an anomaly you get a different default than coming from a metric or a stored session.. yes, something for a separate PR. yes, something for a separate PR. thx. +1. fixed. fixed. Please use a dedicated email-config object with only the fields you need. Reusing other config classes is confusing and error-prone.. you can replace this with apache commons MapUtils. please use camelCase for variables, UPPER_CASE for constants only.. Please do not inherit from ThirdEyeConfiguration, it's the config for a dropwizard application (webapp, controller). Instead just create a POJO with the required fields.. I see, yes. In this case your solution is the way to go.. this seems to be an undocumented quirk. transitionTo() is supposed to abort to ongoing transition, however, it apparently doesn't when only the queryParams change.. yes, they all become part of the RSVP hash. fixed. \"if the the date range we want to fetch is past the latest time stamp available in the database (i.e. in the future), return NaN\". NaN here is an equivalent for null, but still a valid Double value.. fixed. @ttbach imo the \"correct\" way would be to make this a two-sided map. we already have a didUpdateAttrs() method. That may be a good place to put all the logic in a single place (and avoid the observer). maybe rootcause-chart is a better place to put this logic - it does all the translation between \"rootcause entities\" and \"timeseries-chart series\". see above. it's pretty specific to rootcause-chart. I'd keep the order here the same and instead just set \"selectedMode\" to ROOTCAUSE_ROLLUP_MODE_CONTRIBUTION_DIFF by default. How is this related to the dummy-function workaround?. same. this namespace clashes with the existing \"detection-onboard\" resource and/or the reverse proxy. Please choose a different name.. thanks for cleaning this up. the original, nested exception passing, is the correct way of doing this. same. please trim this code and push it as a separate PR - this workaround PR should be minimal and isolated so that it can be reverted later.. not relevant at this point. subject to change once we mock timeseries data.. deja vu. this time we have permissions tracking. fixed. fixed. yeah I could also use startOf('day').plus(1, 'day'). Are you sure about this? This means any alert, even if backtesting fails, will start eating up cycles. after it successfully completes backtesting, at least. yes. alias is what the user sees.. that's a legacy hack of mine. if you find a better solution please go ahead, but it wasn't immediately clear how pass separate key/value pairs for the same \"record\". yes. it's a transitive dependency from \"_makeRecord()\". Ok. I'll update the services code in a single followup PR rather than have a mixed state. fixed. No. This is a \"must not happen\" case. We can also ignore it transparently, but may see unexpected behavior later. style question. not sure if a long variable in lambda expressions make this more readable. ultimately, we'll have to adopt a code style guideline for our JS. fixed. fixed. yes. if it needs a config, we can package the logic here too. Interrupt happens at process level, e.g. via SIGINT, and is passed down to the threads via the ExecutorService's shutdownNow(). The exit state of the task should be \"FAILED\" and recover by the same means you recover from other errors during detection.. Detection jobs a currently a single-task monolith, so interruption is all or nothing. Zombie tasks stuck inside an algorithm is out of scope - this has to be addressed by the developer of the algorithm (but can be done in the exact same way). yes. it's generated by the RCA formatters by default. what? :D. yes. code moved only. fixed. for the 'current' offset. hmm. a state-check in a template? it's kind of a different thing - only displaying a value rather than value & change.. that, sir, is an excellent catch. This is a simple code fragment. Moving this to a separate method creates way more clutter than it saves. Where would you put this method, and what would be it's signature?. javadoc. please obfuscate page names further. i would split this into two separate functions for clarity. no performance tweaking necessary here. +1 I think this should be {} instead. If this were to go into a DAO, then it would be the AlertConfig DAO. That wouldn't be the place where anyone would look for it though - i.e. this is a classic case of cross-entity business logic.. ist endTime/endTime intentional?. remove GET annotation and add TODO as below?. remove GET annotation and add TODO as below?. i'd delete the whole resource class. delete the whole class?. delete whole class?. remove GET annotation and add TODO as below?. delete entire resource class?. AuthenticationResult should be a return value. not sure this is needed. constant?. yeah. I'll do this across the entire utils in a separate PR. thanks for putting this in the right place. leftover?. please fix the indent. thanks for this. should eliminate some of the RTT blocking. please fix formatting and arrangement. another star of the show. please add a comment to the PR summary. looks like a duplicate. maybe rebase the PR to master?. jsdoc fix?. Time buckets may be computed in days, but need to be offset against UTC for clients in non-utc time zones, i.e. the bucket-boundaries should align to UTC + offset day boundaries instead of plain UTC day boundaries\nAn example: a client in PDT (GMT-7) requests data with daily granularity. Without the offset calculation above, we'd align to UTC days which corresponds to 5pm in PDT. By shifting by offset before truncation and adding it back in later we align exactly to 12am PDT boundaries.. I gladly invite your contribution to this PR. Please refactor the code as you see fit.. I added javadoc above. There's various solutions to this, but I wonder if this would be premature optimization. the database has about 600 events per year. hardly a concern anytime soon. I'd move this to the existing events package \"com.linkedin.thirdeye.anomaly.events\". This may need to be a bit smarter. Events sometimes change start/end time - this logic would duplicate them. I'd suggest to write a custom, name-based logic here instead of relying on the equals() and hashCode() methods.. I strongly suggest to include id in equals() and hashCode(). Otherwise, we might see some strage side-effects with the storage backend. as before, when the holiday changes dates, it is not picked up here. Ultimately, there are three cases: (1) new event appears, (2) existing event changes, and (3) event disappears. The code handles (1) and country additions for (2). I would modify this section to simply override any pre-existing events (and their country codes) with the same name for (2). For 3 you may need to introduce some kind of time-based cutoff and then simply delete events that aren't returned from the API.\nProbably makes sense to wrap this logic into a testable unit, too.. you could revert these whitespace changes to make the PR smaller. I could turn this into a \"regular\" comment, but a comment there will be. the aren't any cache limits atm, however, the cache currently gets flushed any time the user changes the investigation period or -metric. interesting. what creates the impression that something is missing here? I mean, what would you expect to be there?. yes, that could work. this assumes that there's strict time barrier for moving around events, i.e. events from the future cannot move to the past and vice versa.\nthere may be an issue with RCA however - saved investigations keep track of event by id, and these events could be in the future (just a few days). If we delete events and the re-create them, they get a new id.\nIf we put the time barrier for delete/re-create in the future, e.g. by a week, this should work. It may, however, have some non-obvious side-effects.. \"confix\" typos. did you rebase to the latest master? this looks like it doesn't belong here. Remember the CSV data source? Make the path a (partial) URI and part of the configuration for easy testing. You can probably reuse some of the methods. This should be part of the configuration. This should be part of the configuration. i think this should return 1 on delete, and 0 if not found. but not critical. You can simplify this by custom sorting festivalEvents before the assertions. we're synchronizing on one of 25 connections. the int is not protected.. ok, we'll delay this a sdiscussed. ok. fixed. The queue is drained every hour by the logger. Counting elements isn't O(1) because it's a concurrent structure. In the best case we can have an approximate gauge.. they're default and accessed from the package, e.g. by the formatter. fixed. fixed. fixed. meh. ok. fixed. you may want to remove this route change. fixed. fixed. fixed. the table component does not re-render if we change the columns property after it has been initialized. My workaround for now is to destroy and re-create with this flag. If there is a better solution, I'd be glad to use it instead. That's a consistency issue. Is it really best practice to mix get() and getProperties() throughout the code?. The object pointer is constant. Then again, how many people still appreciate the difference between (const void) and (void const) nowadays? :-) If that's best practice I'll change it.. eventType is used for URN construction and should be lower case. With this added, you should be able to remove HolidayEventEntity. I'd suggest to just use the type property of the underlying EventEntity. Maybe stick to String here. EventType is more accurate, but not extensible to different event types people may add through external libraries. there is a better solution. :-). yeah. this one pulls in data from two properties. not sure if computed.filter() was designed for that. at least I can't quite find examples. The latter one does not mutate to original \"reference\" foo, but the object that is referenced by by \"foo\". This is similar to the first example.. good catch. fixed. space. I wonder if it's better to call this \"secondary\" instead of \"ruleBased\". After all, any anomaly function should work (minus collisions in the properties). We need a reference for anomaly function to task status. One way or another we'll have to modify the AnomalyFunctionBean to store a reference to a task dto or the status directly. If you keep it separate there's just another thing you need to keep in sync (e.g. what happens if one of them is \"cleaned up\"?). moment js should be able to handle this generically.. metricEntity is not set when coming from anomalyId or sessionId.\n(Also this doesn't belong into the context, i.e. it's not part of the RCA \"search query\"). instead of the metric max time, set the max time to the EOD today. Multiple metrics can have different maxTime values, so there isn't a \"true\" maxTime anyways.. actually yes, you're right. the max time should be analysisRange[1]. Minor one. Maybe rewrite this to use the Guava API. TE mostly uses that one.. thanks for the info. key-value pairs should be unique from backend. Yes, that's a false negative. (TE prediction negative, User condition positive). not really, just figured the slider may be re-used somewhere else. this one is gone anyways :P. fixed. fixed. fixed. If we don't specify \"set() {}\", the entire computed property is overridden by power select. because ember.. Is this meant to stay here?. There's a util for parsing strings like \"4weeks\". Could be helpful here. Random thought: could we inject a \"LegacyMergeWrapper\" property here by default? (and then the LegacyDimensionWrapper inside the LegacyMergeWrapper, and so on)\nThis way, user can still specify any kind of workflow but can safe the effort if they only want a single filter-merge-dimension-algo flow.\nObviously not related to the PR specifically.. You may have to handle divByZero here. ... and here. ... aaand here. Good catch. I wonder if it's worth making a separate PR though . should this still be here?. still needed?. yeah. doesn't add a lot of value. good catch. I re-introduced the logic for this. Also, there's #3149 to add support for global impact filters to the legacy emulation layer. add @AfterMethod method with this.testDAOProvider.cleanup();. I wonder if we should merge this with the \"migration\" resource somehow. Also turn something into a detection config. Thoughts?. yeah. That's not a blocker. I'd return a structured json response here. e.g. {\"detectionConfigId\": 12345, \"atectionAlertConfigId\": 12345} or the entire serialized config object.. Maybe move these template configs into an actual file. Then, they serve a dual-purpose as examples for external users too. (This reminds me to finally clean up our readme and example config). BCC should not be in the email. as above. is there a specific reason to use key-up?. :+1:. does this work when time granularity is minutes or hours?. are you using this?. nit: new line. import the base namespace. Both lang and lang3 should work here anyways. same. same. same. meta: please consider using findByPredicate() in the code directly. The DAO interfaces are already overloaded with calls that are used only once.. ok I'd throw an Exception on non-daily granularity then.. I'd call this \"entities\" throughout. Most RCA components use that convention. is this being used?. same. does this belong in this PR?. ask @aaronucsd :-). I'd put this with the derived class. IMO the merger has no business computing these values, unless dealing with legacy code. same as above. same as above. or why not add another layer of abstraction? ... yay!. Yay! Layer of indirection!. is this intentional? they should be sorted. because detection used to generate anomalies from 12:00am to 23:59pm - rather than 12am - 12am. hmm?. why would this be a dup? sometime rca loads without an anomaly id, bt controller is not destroyed either\n. resolved offline. We can remove that functionality. The UI will evolve anyways. plenty of JS doc added. JS doc added. Please make this a list. We have full JSON support here.. This is all about concurrency. Ok. Please leave a TODO here with context. I'm not a fan of this either. That explicitly couples the alerter to the task execution framework. Since you only keep the ThirdEye config - please pass it explicitly.. ok added more JS doc. Don't we have mirage?. I wonder if this could be an Enum instead. I'm not happy with this thing overall. It should wipe any query params off the RCA url once the RCA is set up. this should just re-throw the error (i.e. \"throw error\"). Also, maybe make isDevEnv a variable we can actually edit with the Ember inspector - so we can easily troubleshoot issues in the prod env. delete?. I get the intention, but what makes 48h the right number? maybe 7 days? or 3?. nit: we generally use (apache) StringUtils.isNotBlank(). If you get a chance, use Apache StringUtils instead. This isn't gonna work, unfortunately. You'll need to compare the start and end of the anomaly entity with the anomaly range in the rca context. more background - the user may change the investigation range and save a session. If the session is loaded later on, the anomalyRange will be whatever the user saved, rather than the anomaly's original value.. this really shouldn't have side-effects.  cough  I noticed that of course .... Is the +1 on purpose?. Should there be a +1 here?. Map.class should do the job. the order already isn't deterministic (multiple threads, head-tail fetching at random). So this doesn't change the guarantees or semantics of task execution. isn't there an isAnomaly() helper?. ",
    "justinpark": "It looks good. Ship it!. Let's use a single quote.. this can be shortenreturn this.getDataAsynchronous(url, data).then(([data]) => data.id);. Single quote please :). You can handle this in one line in line 26\nthis.metricId = params.metricId || params.metric.id;. Single quote please. In this case, init must be called with {} and will throw an error in init() case.\nI suggest to use like\ninit(params = {}) {\n  const {metricId} = params;\n  this.viewParams.metricId = metricId || '';\n}. It looks iterating the entire selectedData array but it only needs the first one.\nLet's pick the first index data and then spread the values.\nconst { id, text, name } = selectedData[0];\nmetricId = id;\nmetricAlias = text;\nmetricName = name;. Single quote please too :). can you cache this selector?. same here. it would be better to keep it in a cache.. same here. I prefer to have these jquery selectors at initializing and reassign once it's rerendered. remove would be better to detach the event binders.\nIf you'd like to keep the #anomaly-results-place-holder element, .children().remove() would be fine.. same here. I prefer to design the option parameters following way.\nformatWowResults( wowResults, args = {}){\nconst { anomalyRegionStart, anomalyRegionEnd, dataset, metric } = args;\nwhat do you think?. ",
    "justYves": "@kishoreg Will create jira tickets for those!. @theseyi The whole point of this pr was the transpiling. One of the big step in the email flow experience is including a screenshot of the graph anomaly. Unfortunately, the current version of phantomJS doesn't handle es6 at all. (they have a new beta that does, but it seems to be buggy on OSX). Thanks for reviewing! \n(screenshots is an essential steps for the launch of the MVP/ pre-ember rewrite ). @kishoreg this is ready for your review. Thanks! . Thank you for fixing this! \ud83d\udc4d  (Not comfortable enough with back end to approve this though). Closing this. Email layout was redesigned. @luisah Thanks for reviewing! The use case here is as follow : btn thirdeye-btn thirdeye-btn--secondary. This is indeed a layer on top of bootstrap button. The \"circle-effect\" animation isn't included; the transition was added to make it looks smoother. (see below). If you do feel like it's too close, I'll go ahead and remove the transition. \nedit: removed transition and inset, the button is looking a lot more generic now\n. Testing locally and I'm seeing the following issue:  anomaly region is now outside the date range provided. (discussion moved on slack) \n. @cyy0714 yes, those are cached by the HASH_SERVICE. @yee-lkd imported ember-moment and deleted the format date helper. \nThanks! . @apucher Good question! \nTLDR: Yes\n```\nYarn maintains consistency across machines in two key ways:\nYarn uses a deterministic algorithm that builds up the entire dependency tree before placing files where they need to be.\nImportant info from the install process is stored in the yarn.lock lockfile so that it can be shared between every system installing the dependencies.\n```\nsource: https://yarnpkg.com/blog/2016/11/24/lockfiles-for-all/ . fyi @newsummit Most of the work was done in the old framework. closing in favor of https://github.com/linkedin/pinot/pull/1867. Post merge LGTM!. Fyi @ttbach This feature lives in the legacy app (no sass, no mixin, no link-to). thanks for doing this @apucher. \ud83d\udc4d . can we get a screenshot of this toolbar? . LGTM\nedit: oops! thought I'd approved it. Latest changes LGTM\n. Closing this since this got merged https://github.com/linkedin/pinot/pull/2512. can we get a screenshot please? . @apucher Looks like this can be closed? . @cyy0714 Let's close this since we went with another implementation? . +1  to Alex's comment.\n. This will be thoroughly tested on sandbox. closing in favor of https://github.com/linkedin/pinot/pull/2690. @cyy0714 @newsummit Looks like this is blocked by a failing back end test\n```\nTests run: 708, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 100.815 sec <<< FAILURE! - in TestSuite\ntestGetEmailEntity(com.linkedin.thirdeye.alert.content.TestOnboardingNotificationContentFormatter)  Time elapsed: 0.17 sec  <<< FAILURE!\njava.lang.AssertionError: expected [THIRDEYEYouwillnowreceivealertsfromintegrationtestfunction1ALERTCONFIGNAME:TestConfigThisalertwouldhavedetected2anomaliesinthepast30days.MetrictestFilteredByN/ADimensionsN/AAlertPatternN/AApplicationN/AMailinglistanomaly@linedin.comReviewalertYouarereceivingthisemailbecauseyouhavesubscribedtoThirdEyeAlertServiceforTestConfig.Ifyouhaveanyquestionsregardingthisreport,pleaseemailastyle=\"color:#33aada;\"href=\"mailto:ask_thirdeye@linkedin.com\"target=\"_top\"ask_thirdeye@linkedin.com\u00a92017,LinkedInCorporation,1000WMaudeAve,CA94085,USA] but found [THIRDEYEYouwillnowreceivealertsfromintegrationtestfunction1ALERTCONFIGNAME:TestConfigThisalertwouldhavedetected2anomaliesinthepast30days.MetrictestFilteredByN/ADimensionsN/AAlertPatternN/AApplicationN/AMailinglistanomaly@linedin.comReviewalertYouarereceivingthisemailbecauseyouhavesubscribedtoThirdEyeAlertServiceforTestConfig.Ifyouhaveanyquestionsregardingthisreport,pleaseemailastyle=\"color:#33aada;\"href=\"mailto:ask_thirdeye@linkedin.com\"target=\"_top\"ask_thirdeye@linkedin.com\u00a92017,LinkedInCorporation,1000WMaudeAve,CA94085,USA]\n    at org.testng.Assert.fail(Assert.java:94)\n    at org.testng.Assert.failNotEquals(Assert.java:494)\n    at org.testng.Assert.assertEquals(Assert.java:123)\n    at org.testng.Assert.assertEquals(Assert.java:176)\n    at org.testng.Assert.assertEquals(Assert.java:186)\n    at com.linkedin.thirdeye.alert.content.TestOnboardingNotificationContentFormatter.testGetEmailEntity(TestOnboardingNotificationContentFormatter.java:117)\nResults :\nFailed tests: \n  TestOnboardingNotificationContentFormatter.testGetEmailEntity:117 expected [THIRDEYEYouwillnowreceivealertsfromintegrationtestfunction1ALERTCONFIGNAME:TestConfigThisalertwouldhavedetected2anomaliesinthepast30days.MetrictestFilteredByN/ADimensionsN/AAlertPatternN/AApplicationN/AMailinglistanomaly@linedin.comReviewalertYouarereceivingthisemailbecauseyouhavesubscribedtoThirdEyeAlertServiceforTestConfig.Ifyouhaveanyquestionsregardingthisreport,pleaseemailastyle=\"color:#33aada;\"href=\"mailto:ask_thirdeye@linkedin.com\"target=\"_top\"ask_thirdeye@linkedin.com\u00a92017,LinkedInCorporation,1000WMaudeAve,CA94085,USA] but found [THIRDEYEYouwillnowreceivealertsfromintegrationtestfunction1ALERTCONFIGNAME:TestConfigThisalertwouldhavedetected2anomaliesinthepast30days.MetrictestFilteredByN/ADimensionsN/AAlertPatternN/AApplicationN/AMailinglistanomaly@linedin.comReviewalertYouarereceivingthisemailbecauseyouhavesubscribedtoThirdEyeAlertServiceforTestConfig.Ifyouhaveanyquestionsregardingthisreport,pleaseemailastyle=\"color:#33aada;\"href=\"mailto:ask_thirdeye@linkedin.com\"target=\"_top\"ask_thirdeye@linkedin.com\u00a92017,LinkedInCorporation,1000WMaudeAve,CA94085,USA]\n``. Also, understand that styling is not the highest priority, but I feel that some spacing between the icon and the input would be nicer visually. Perhaps 4 or 8 px? this should already exist as sass spacing variables. @aaronucsd Correct, this is automated. After you push, the regular travis ci test will run. Our ember test will be run as part of themaven testhook. Any type of test failures (back end / front end) will block a merge. . nitpick: \n- in the provided screenshot, looks like there's a double border (around the tab card),\n- background color seems a bit off as well . Kindly provided by @cyenjung. Thank you again! \ud83c\udf89 . Yes sir! Sorry, it was mostly copy pasta :) I'll make sure to refactor as I go. I think we can run into the case where both params.metricId and params.metric are undefined. soparams.metric.id` will throw a TypeError.\nIdeally, I'd like to only keep params.metricId and deprecate params.metric. This will require a deeper dive into the code. I'll keep this section of code as-is, and will update the 'to-dos' . good catch! === it is . so the initial intention was that since this property can either be set from the controller as an object {} , or  taken from the hash params as a stringified object \"{}\", I would parse it only in the latter case, the default value being \"{}\"\nBut I agree that a try catch might be cleaner. . Thanks! Will refactor. Wish it was an ember app though :p \nI'll add the return in the this.set(). Airbnb's guideline is to omit parenthesis when braces are also omitted, otherwise keep them for clarity https://github.com/airbnb/javascript#arrows--one-arg-parens\nAre we doing this differently ? . inline styling needed for jQuery select2 component, otherwise it gets overwritten. Removing those are on my to do list. . Nah it's there. github is being stupid haha. Agreed that an actual img tag is preferred for actual images. But since this is the linkedin logo (next to \"ThirdEye\"), I feel that the element it is attached to \"thirdeye\" already conveys meaning. Do you see it differently? . good catch. It was an existing typo. Will fix! \ud83d\udc4d . Icky inline styling but again needed for the select2 component.\n\nThe best way to ensure that Select2 is using a percent based width is to inline the style declaration into the tag.. Thanks for fixing \ud83d\udc4d . Good catch! It was an oversight on my part. I refactored from value1, value2 => value.. I was actually looking through our style guide and airbnb's and couldn't really find a specific guildeline for single line-if. Closest I found is this: https://github.com/airbnb/javascript#blocks--braces . They should not, but I agree it'll be safer to have a check here. Will add. Agreed. Will refactor the old code. Copy pasta :p Will add css class and take out this ugly thing. copy pasta from inline scripts. Ideally we want to use es6 modules import exports and not rely on globals. (todo). inline styling everywhere :( internal stylesheets doesn't work for mobile mail apps . no es6, phantomjs doesn't support it . Thanks for the tip! I'll make the change. Yeah, this code needs comment as I can see it's a bit hard to understand what the intention is. \nedit: works with every. Thanks! . @justinpark Sure thing! Will make the change. copy pasta from art deco. same, copied from art deco. No, this one is used for styling purposes only so that it looks consistent with the footers below. I agree with you, but  I'm actually going to save the url path to my constants.js file so that the logic will be consistent accross the app.  . Yes, will definitely make this DRYer at the next iteration (with ember). \nI touched those line mainly to remove the self horror. touched this file to because the ellipsis in searching... was incorrectly encoded. good catch, looks like the file used tabs and not spaces. . yep!\n. Unfortunately this is needed because of select2 component not reading consistently reading the width from a class selector.\n\nSelect2 will do its best to resolve the percent width specified via a css class, but it is not always possible. The best way to ensure that Select2 is using a percent based width is to inline the style declaration into the tag. . In this case it wouldn't be possible since hashParams will be updated on line 46. I could possibly declare the variable then set it later on, but it seems to be a bit redundant. Any thought @yee-lkd?. Nice! I never thought of doing it this way. . Good catch!. Confirming that this is working as intended . Initially didn't use h* because of bootstrap applying a lot of custom styling. Will override them. . This is part of the daterangepicker component that attaches an \"input-like\" element . After talking to @yee-lkd offline, we decided to change the label to an h5 .. This is part of the daterangepicker component that attaches an \"input-like\" element. removing the label tag here. . This was a dropped feature. Will remove. . this is es6's new arrow function expression. They do not bind their own this context and allow to avoid having to use self. ES6 syntax is now strongly preferred. https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions\nhttps://iwww.corp.linkedin.com/wiki/cf/display/ENGS/Data+UI+coding+standards. Thank you @npawar  for your help on this. @yee-lkd those files were actually generated with ember g. This is the pod structure default's naming convention i.e. components/component-name/template.hbs components/component-name/component.js. good eye! \n. Looks like this is auto generated by ember. The same way\nimport startApp from '../helpers/start-app';\nimport destroyApp from '../helpers/destroy-app';\nis generated for acceptance test. Is this a setting I can modify to change those to absolute paths? . see pod structure comment above . see pod structure comment above . line 23 lists the instructions: \n+## Running / Development\n  +* `ember serve`\n  +* Visit your app at [http://localhost:4200](http://localhost:4200)\nI'll also update our internal confluence page\n. can you add a space between if and (, it's a convention we adopted. . same. I think you named your spinner rootcause-spin-area. can we have create a new css class and save the style in thirdeye.css)  perhaps rootcause__details.\nInline styling is usually viewed as bad practice.. same. Good \ud83d\udc41 !. The model currently has a hard check for != undefined. I'll add refactoring this old code to my to do list. . none, just copy pasta code. will update this section . Can we move this inline javascript script into a Js file and perhaps call it after the page is rendered? . can we have classnames for each a so that the js is a little bit more specific than a[data-toggle=\"tab\"] \nfor example .rca-link[data-toggle=\"tab\"]. Ha nice find. Will definitely import!. Good catch!. This is a placeholder until we have the full navbar component? . do we need anomaly-id__item--metric and anomaly-id__item--value ?  I don't see those in the scss file. Todo: we should save all these magic numbers in a variable.scss files. . just curious does this need to be an ember object? . fyi, you could also use this.setProperties({}) to set multiple properties. nit: can we add messages to these assertions. It'll make our life easier if one does fail. \nhttp://api.qunitjs.com/assert/equal. does the component still need to read from the config ? . is this still necessary?. is app-text--xxsmall defined anywhere? \nnit: instead of global classes, I would rather have this as a mixins that we can include in .te-nav__link. Any reason why this index route is needed?.   redirect: function () {\n    this.transitionTo('self-service.manage');\n  }\nPerhaps the redirect hook is more semantic . fyi, if this is imported before the component in the app.scss file, you would have access to the variables without having to import them. \nFor example:\n```\n// Utilities\n@import \"utilities/variables\";\n// Base Rules\n@import \"component/tag\";\n@import \"component/navbar\";\n```\nhere navbar and tag will have access to the utilities variables\n. this is a BEM anti-pattern. \nFor reusable css class, let's plan on making them mixins and including them in your modifier classes\ni.e \n.te-navbar__item--hide {\n @include hide-mixin\n}. Copied from old Thirdeye UI. Will need to revisit this to remove some template level logic. copied from old UI. Mostly following BEM syntax. \nWill need to clean up after the launch of this MVP. Can you make sure that the rca/metrics page still look ok after this change? . I think h1 might be more semantic. I know we might have to override a lot of bootstrap classes, perhaps we could do it in one mixin (@include reset-bootstrap-title) for all h ? . \ud83d\udc4d . can we keep this hidden until the feature is launched?. Do we have to use jquery here? wouln't we achieve the same result by wrapping the '.te-search-results' section with an {{#if resultsActive}} ?\n. Do we need this?. nit: space after if. make sure to wrap all your col--* with a bootstrap row. \nThe container adds negative -15px margin left and right, the row offsets those. . \ud83d\udc4d . nit: could we avoid tag selectors. this might be a good candidate for a Bem block__element class. yes! Good catch. I'm fine as long as the layout line up. I'm anticipating that we will need to use rows at some point, and the elements inside of it will not line up with the navbar and/or the rest of the page. \nI feel that always adding a row in container is easier than adding special  css classes to offset the container's margin. . groups with more than 25 will be shown as pageKey (688).\nYes, ultimately, we would want to have the expand and lazy loading, but that would potentially require our own fork of the power-select, or working with the open source project.. you can also pass any number you want into the component \nmaxNumFilters=40 . delete?. empty selector? . fyi you can use {{#each selectedGroupFunctions}} {{else}} {{/each}}\nthe else close will be used if selectedGroupFunctions is an empty array. nit: can we add new line for readability (applies to all inputs)\n{{input\n  type=\"email\"\n  id=\"...\"\n  ...\n}}\n. pass (mut selectedPattern) into power-select. . nit: we can potentially return early here. . nit: using reduce here might be cleaner? . would something like this work? \nconst allowedGranularity = ['minute', 'hour', 'day'];\ngkey = allowedGranularity.includes(granularity) ? granularity : '';\nOr we could create a const GRANULARITY_MAPPING = {5_minutes: 'minutes', ...}. fyi you can use the ember array method filterBy\nthis.get('allAlertsConfigGroups').filterBy('active');. This could also potentially be a computed property watching the fields that you care about. let's use \nthis.setProperties({\n isMetricSelected: true,\n ...\n}). it should be this.get('selectedConfigGroup') and  this.get('newConfigGroupName'). Otherwise, I believe it'll always be true because it returns a function (computed property). we can also just return this: return A && Ember.none(B) ?\n. fyi you can also do this: this.get('selectedMetricOption.name') . this.setProperties({....}) is preferred when you're setting multiple props. nit: this.setProperties({...}). Thanks for creating this!. do we still need to depend on this property ? importExistingDashboardName looks like we're not using it in this cp. Looks like a good candidate for isFormDisabled : Ember.computed.and('isExistingDashFieldDisabled', 'isCustomDashFieldDisabled') \nhttps://www.emberjs.com/api/ember/2.14/namespaces/Ember.computed/methods/and?anchor=and. nit: I think this can be cleaner with the logic in a setter. https://guides.emberjs.com/v2.14.0/object-model/computed-properties/#toc_setting-computed-properties\nWe can discuss this offline. fyi, in es6 you can use the short hand notation, you can just pass \nconst importObj = {\n       datasetName,\n       dataSource: 'AutometricsThirdeyeDataSource'\n}\n```\nvar a = 'foo', \n    b = 42, \n    c = {};\n// Shorthand property names (ES2015)\nvar o = {a, b, c}var a = 'foo', \n    b = 42, \n    c = {};\n// Shorthand property names (ES2015)\nvar o = {a, b, c}\n. do we need to nest the .then here? \ncan we `return this.fetchMetricsList` and chain the `then` on line 205?. nit: This is a pretty long function. I believe we can abstract some of the logic into a helper function for readability. . btw, there's a shorthand to import multiple properties:\n      const {\n        primaryMetricColumn,\n        selectedMetricsColumn,\n        selectedDimensionsColumn,\n        holidayEventsColumn,\n        holidayEventsDatesColumn\n      } = this.getProperties(\n        'primaryMetricColumn',\n        'selectedMetricsColumn',\n        'selectedDimensionsColumn',\n        'holidayEventsDatesColumn',\n        'holidayEventsColumn');\n``. is this still a todo?. same. nit: please indent.thens . we should also utilize your checkStatus so that i actually fails. This catch is just aesthetic for the moment. . I would sayfunction  expressionis preferable. But function declaration is fine if we need the hoisting. good eye!  will make the change in my follow up PR. will make the change in my follow up PR\n. Can this ever benullorundefined? This might error out if that's the case. perhaps use the same logic as belowthis.get('alertFunctionName') || this.get('alertFunctionName').trim(). As discussed, we should double check the expected format of the filters.{\"continent\": [\"US\", \"CN\"]}or{\"continent\": [\"US\"],\"continent\": [\"CN\"]}. nitpick: our js styleguide recommends using'instead of\". please useNumber.isNaNinstead https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN. fyi we can also usegetWithDefaulthere. https://www.emberjs.com/api/ember/2.14/classes/Ember.Object/methods/getWithDefault?anchor=getWithDefault . this.thenwould only be called if an error was caught on line 315. Is this the intended behavior? . good catch. will delete. Please delete commented out code . this will probably be run afterthis.callReplayStart. Just want to make sure that's what we want. I believe I already made a change to make the power select input consistent with our existinginput. \nThis might not be needed.. fyi, I just wrapped everything in arow. only actual change is on line 4.\nThe row was needed so that it aligns with the navbar. \ud83d\udc4d  only problem is that it's the old ui so we don't have access to sass . Looks guide, i'll take a look and see if can refactor this in a follow pr. I know this is not new, just wondering if this is actually being used anywhere. Nit: useletdo declare out here.. good eye :) . Yes, this was an oversight on my part while working on encoding all endpoints (yesterday). \nI was expecting thismetricIds` to be an Array that needs to be stringified. but in actuality, the serialization had already happened.\nsingle metric will use : /anomalies/search/metricIds/1502780400000/1502866800000/1?metricIds=3496875&functionName=\nmultiple metrics : /anomalies/search/metricIds/1502780400000/1502866800000/1?metricIds=3496875%2C2132370&functionName=&filterOnly=true. yes, if it's hour or day  it'll return true. ah gotcha. Was this a recent change ? \n. fyi, you can use es6's destructuring to do this: \nlet { \n  start : displayStart, \n  end: displayEnd,\n  label: displayLabel\n} = event; \nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Object_destructuring. are those colors from go/patterns ? . is this mapping accurate? . SASS provides a lighten mixin already. \ndoc: http://sass-lang.com/documentation/Sass/Script/Functions.html#lighten-instance_method\nusage: https://codepen.io/baudoin/pen/HdliD\nAs always, come find me if you have any questions! . getting the valueOf is needed since we want all date time query params to be display in unix ms. Omitting it, doesn't consistently yield the expected result. Will add a comment. Thanks! . nit: can we find a better name than 'k'. nit: please use single quotes (per our data ui coding standards). Copy pasted code from /alerts to alerts/index. Copy pasted code from /alerts to alerts/index. Good point. will do the reverse per your suggestion. \nBtw, any reason why this is not consistent ? . the script also has a bunch of system.stderr.writeLine which acts like console.log. This is pretty useful for debugging purposes as phantomJS is a headless browser. \nLet me know if you disagree! . nit: deconstructing might be cleaner here const [ group, subDimension ] = label\nthen just pass \n{ \n  name: label.join(':'),\n  group,\n  subdimension\n}. nit: I think buildDimensionObject(++index); is more concise. nit: do we need to add a .catch , can any of the calls above fail? . let's delete this. nit: empty strings are falsy, I feel subDimension && dimensionObj[subDimension] might be cleaner. \n. any reason why we needed to bump this up? . fyi: I think this should work also \nshowGraphLegend: Ember.computed.notEmpty('alertDimension')\nhttps://www.emberjs.com/api/ember/2.15/namespaces/Ember.computed/methods/bool?anchor=notEmpty. fyi: this should be shorter to write: \nisSubmitDisabled: Ember.computed.or('{isEmptyEmail, isEmailError, isDuplicateEmail ,isProcessingForm}'),\nhttps://www.emberjs.com/api/ember/2.15/namespaces/Ember.computed/methods/bool?anchor=or. nit: this looks like a good candidate for a reduce (m to 1) . ### Blocking comment: \nlet's refrain from using that . The Ember.run.later api allows to pass the context before the callback. \nhttps://www.emberjs.com/api/ember/2.15/namespaces/Ember.computed/methods/bool?anchor=notEmpty\nEmber.run.later(this, function() {\n}). nit: let's use the destructuring here: \nconst {newFunctionObj, oldEmails,  newEmails} = this.getProperties('....'). this step controller.set('model', model); should already be handled by ember. Any reason why we need to specifically call setupController here? . this is silly really. The linter was complaining of the unused 'd' variable so I just commented it out. I'm keeping the code here since we will implement an onclick event soon. . Let's use this.setProperties here. nitpick: can we have a more meaningful naming instead of m? . What's the purpose of adding this in the legacy ui? . Looks like a good candidate for this.toggleProperty . Same, this.toggleProperty should be semantically more correct. missing EOF line. it's not in ember. This is a free marker file used from the java Email Resources. . \ud83d\udc4d . @newsummit do we need a default case here? . nit: If the values is undefined, Lets use this.getWithDefault here: \nhttps://dockyard.com/blog/2016/03/18/get-with-default\nCaveat: this does not work when the value is null. this might result in an undefined behavior. since our array starts at index 0, dates[dates.length] will result in an error. \ud83d\udc4d . Let's set the query params as *** for now since we're not using them . nitpick: let's obfuscate this as well. . since this is just a Javascript object, the keys property name does not need quotation marks \"\". \napplies to whole pr. perhaps this instead /timeseries/compare/${metric[0].id}/*** ? . changing the data to something else \"dress=froufrou;hat=fancy\" \n. fyi, andThen , click are both async helpers, you don't have to nest them \nhttps://guides.emberjs.com/v2.14.0/testing/acceptance/#toc_asynchronous-helpers. ah, probably due to the find being synchronous. \ud83d\udc4d . nit: can range be just 1 Day? . nit: Wouldn't returning this.get('dateRangeToRender').map(this.renderDate) be cleaner here?. let's stay away from saving this into another a value. \nThe combination of arrow functions and passing this context in Ember.run.later should allow us to get rid of the that\nrun.later(myContext, function() {\n  // code here will execute within a RunLoop in about 500ms with this == myContext\n}, 500);\nhttps://emberjs.com/api/ember/2.15/namespaces/Ember.run/methods/later?anchor=later\n. lint: missing new line at EOF. (non blocking comment) using display flex might be easier here: https://codepen.io/anon/pen/BmNBXx. ^ This the only blocking comment. . nit: let's use string literals here c3-region--${series[sid].color}. can we just have _entitiesLoader depend on this entities property ? . please use this.getProperties when retrieving multiple properties. Do we care about entities as a whole (reference to the array), or do we also want to recompute when properties changes on entities?  Maybe https://guides.emberjs.com/v2.16.0/object-model/computed-properties-and-aggregate-data/#toc_code-each-code might be helpful . do we need to specifically notifyPropertyChange here? (applies to other actions). Also if kept in the same file, we usually have helpers before the component. if you're checking against undefined you can use this.getWithDefault('prop', 'defaultValueIfUndefined');\ncaveat: this does not work when null. do we need to use this.notifyPropertyChange('model');, it's hard to determine what this will trigger. I'd rather have a computed property on 'model', 'model.data' . Applies to other actions. where you trying to create a gcn event? looks like youre config file above is expecting : \n +    header: \"gcn\",\n +    inputs: [\n +      {\n +        label: \"priority\",\n +        type: \"dropdown\"\n +      }\n +    ]. nit: new line at EOF. is this a placeholder? . no need for space before and after the entity-filter__group-list--hidden class name \"entity-filter__group-list--hidden\". Other than for semantic purpose, do we need to do this in setupController here? would a Ember.alias('model.filterblocks') in the controller work the same way ? \nalso (nitpick): do we still need the filterBarConfig on the model? If not, we can delete it from filterBlocks.\n. Assuming we don't use setupController, wouldn't it still be available through this.get('model.filterblocks') in the init hook anyway?. todo before release: \nDocument this cp as what's it's doing is a little bit obscure . let's define all variables at the beginning of the cp please. nit: do we need to call filter multiple times, can we achieve this in one pass?. eventually, the entity types will be provided by the back end,  correct? . nit: semantically this.get('') is preferred, since we're getting only one property. nit: perhaps a switch case here would be more readable? . nit: new line at EOF.  fyi we have a .eslintrc file you could use to write code consistent with our guidelines and best practice.. fyi, you can use the checkStatus utils function from  import { checkStatus } from 'thirdeye-frontend/helpers/utils'; it checks for the status code and returns res.json()\nfetch(url).then(checkStatus).then(...). fyi, we can use a Map https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\nwhich has the 2 following methods: \nMap.prototype.clear()\nRemoves all key/value pairs from the Map object.\nMap.prototype.delete(key)\nReturns true if an element in the Map object existed and has been removed, or false if the element does not exist. Map.prototype.has(key) will return false afterwards.. Also the use of arrow functions should let us avoid passing the context. In which case is this failing?. ^ This is the only blocking comment. fyi, we generally follow this convention:  use single quotes in JS, double quotes in the template. . haha good eyes! . imo this is fine. unless you want to use typescript which allows declaring private methods. good catch, meant to be weeks \ud83d\udc4d . will keep it until we have query params. I like them for debugging purpose :)\n. fyi, for straight foward click action that sets a property to a new value, we can use the mut helper here and a custom actions is not needed anymore. \nsomething like: \nonclick={{action (mut urn) urn}}\nhttps://emberjs.com/api/ember/2.15/classes/Ember.Templates.helpers/methods/mut?anchor=mut\n. does this still need to depend on 'analysisRange' ? . let's save the string absolute, relative and log into a const obj TYPE\nand refer to them as TYPE.absolute, TYPE.relative and TYPE.log\nhttps://github.com/linkedin/pinot/pull/2081/files#diff-ba88a3a55f4254f597817fd4301d5280R20 can also be updated accordingly. Let's try using better variable names that just letters for readability. The compiler would shorten them anyway for performance reason.. nit: !== unless you're checking for undefined and false as well, in which case if (onSelect) is sufficient. can we just do entities[urn].type == 'event' && entities[urn].eventType == clickedBlock.eventType in one pass?. nit: we can use a reduce function since it's a n to 1 \nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce?v=a. This data needs to be fetched as it prepopulates the data for the rootcause settings component. This is only called once when a route is visited. Let me know how else you'd like to handle this\n. In order to use queryparams, those needs to be defined in both the route and controller, because the queryparams are only stored in a one level object, we would need some sort of conversion. Since the queryparams only update the url but not the model, the model hooks and setupController are not called. Therefore the only place to have this conversion logic is in the setupController on init and the onChange handler passed into the component. \nLet me know if you want to handle this another way . let's use single quotes ' in javascript please. nit: let's use absolute path here 'thirdeye-frontend/...'. nit: let's break this up into multipe line. entities[urn].label.split(\"::\")[1]; return agg;. nit: !selectedValue.length is more concise . is this still needed for debugging purposes? . nit: use getProperties. I feel that having this in one const PROP will be more readable: \nconst ROOTCAUSE_METRICS_SORT_PROPERTY = {\n  DATASET= 'dataset',\n  CHANGE= 'change',\n  METRIC='metric'\n}\n. same\nconst ROOTCAUSE_METRICS_SORT_MODE = {\n  ASC: 'asc',\n  DESC: 'desc'\n}. fyi this is not used in the code. Keeping it here in case we need to quickly implement a 2 way queryparams binding\n. @apucher  passing it down as config from the controller. not with Vanilla JS. But typescript allows for it: \nhttps://www.typescriptlang.org/docs/handbook/enums.html\n. this might be shorter\nreturn [...dimensionFilters, ...metricFilters, ...frontendMetricFilters]. we can achieve this with a one liner: \nconst { context: { anomalyRange, compareMode }} = this.getProperties('context');. oh oops, didn't push the revised change. thanks for catching. @ttbach this was generating an error, you'll need to use Ember.set instead of Object assignment. I believe the following should work here\nEmber.setProperties(block, { \n  filtersArray,\n  isHidden\n}). when we use this.set and this.setProperties the context is obvious (this), but when using Ember.set, Ember.setProperties, the first arguments becomes the context. . Any reason we're using lethere? I don't see the variable being modified latter on.\nAlso this can be reduced to a one line: \nconst {\n    filterUrns,\n    config: filterBlocks\n} = this.getProperties('filterUrns', 'config'). see Assigning to new variable names in https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment. you can just use value instead of this.get(). This is ok for poc, but let's refactor it together once you're back.. It's not very clear what the whole function does. We can improve readability by breaking it down into smaller utils/helper functions. the + here was handling the case where the ms timestamp is a string. just make sure that this doesn't break when you have query params initially. fyi the timePicker uiDateFormat here was an ask from Kishore, he wanted the date ranges to depend on the granularity . let's delete this if we don't need it anymore. Is there any way we could refactor this piece of code so that there's only one this.setProperties at the bottom. \nHaving multiple consecutive set usually results in a slight decrease in performance (it's minor, but it adds up). can filterBlocks be null or undefined here? . can a portion of the anomaly change instead? if yes, we'll have to add 'anomaly.attributes' to your computed dependencies. applies to the cp below as well. nitpick: let's have better naming than 'n' for readability's sake. I know this is a mvp, but shouldn't the feedback component always be there if an anomaly exist? \n(the case where a user wants to change a false alarm to a true anomaly). I see this is a copy paste from the legacy code. FYI, almost all of the css class defined below are not accessible in the ember app. nit: New line at EOF. let's save this in to a const for readability's sake. let's utilize checkStatus here. same. since this is an ember addon, can we just do import CryptoJS from 'cryptojs'; as the doc describes here: \nhttps://www.npmjs.com/package/ember-cryptojs-shim. non-blocking: fyi, since 2.16, ember supports a new way of importing modules instead of everything (import Ember from 'ember') \nOfficial doc:\nhttps://www.emberjs.com/blog/2017/10/11/ember-2-16-released.html#toc_ember-js-modules-api\nUsage in our code:\n\nhttps://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/pods/rca/details/dimensions/route.js#L4\nhttps://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/pods/rca/details/dimensions/route.js#L7\n. Also, any reasons we're using ajax here instead of fetch? I don't mind using ajax if it has better support and use case. I just want us to be consistent in our usage.. fyi, you can aggregate cases like so: \ncase 'metricId':\n  case 'anomalyId':\n    return !value || (Number.isInteger(value) && parseInt(value) >= 0);. let's try to define variables at the beginning of this function scope (model). nice try at styling! \nfyi we're using the BEM naming convention \n\nrelevant links:\n\nhttp://getbem.com/introduction/\nhttps://css-tricks.com/bem-101/\n\nBest practice here is to have a base styling .rootcause-legend__boxwhich would have \n+    display: inline-block;\n+    height: 0.8em;\n+    width: 0.8em;\nThen the modifier .rootcause-legend__box--colorName would only need to apply a background. \nYes, this means a more verbose template (class=\"rootcause-legend__box rootcause-legend__box--colorName\"), but we do gain a lot in readability and maintainability imo.. nit: let's save moment(d) into a const here. . nit: new line at EOF. \nfyi, we're using eslint to catch linting errors in the IDE. I'm using VScode, but i'm pretty sure intellJ also has support for it. let's add this to the jsdoc above. since Ember 2.16, the best practice is to import modules instead of the whole ember library.\nimport { computed, get, set, setProperties } from '@ember/object'\nOfficial documentation:\nhttps://www.emberjs.com/blog/2017/10/11/ember-2-16-released.html. nit: can filterBlocks be null or undefined here?. nit: let's use parenthesis around the argument names when the array function spans over multiple line. \n. '' are unnecessary for object keys with simple strings. . Please use this.getProperties when multiple get are needed. . fyi, I think you can also do \nthis.get('filteredAnomalies.length');\nit yields the same result, but it wouldn't generate an error if this.get('filteredAnomalies') is undefined or null. nit: this.getProperties . you can also deconstruct your split this way: \nlet [ sortKey, sortDir ] = sortOrder.split(':');. is the card content hard coded here?. nit: please use parens around your argument (data) since the array function spans multiple line.. same (applies to whole pr). let's add a TODO comment to refactor this, so that all requests are made from the route instead of the controller.. let's indent the .then and .catch here. empty action? please add a \"todo\" if it's still needed but incomplete. This looks like a good candidate to be abstracted as its own helper function. Looks like a lot of business logic here. Can we get some jsDoc here please. hard coded for now? . ### Blocking Comment: \nThis selector is too general (it also affects the icons in the rca table). \nPlease wrap this with a custom css class. Since we're overriding bootstrap, I'm okay with using !important (bs uses it everywhere anyway). nit: new line at EOF. nit: let's use parens around (data) since this array function spans across multiple line. . is -solo a modifier or a new block element? \nif it's the former, let's use the correct BEM syntax : te-search-results__option--solo\nThen the usage will be as follows: (base class + class modifier)\nclass=\"te-search-results__option te-search-results__option--solo\"\n. fyi, bem need not follow the dom markup. we don't need to start at the page level (te-aler-page.... ) ,\nYou can just set it to a any block: anomaly-table__row or even table-row__body\n```\nBlock\nEncapsulates a standalone entity that is meaningful on its own. While blocks can be nested and interact with each other, semantically they remain equal; there is no precedence or hierarchy. Holistic entities without DOM representation (such as controllers or models) can be blocks as well.\n``\nhttp://getbem.com/naming/. please remove thehttp://thirdeye.corp.linkedin.com(it's linkedin specific data). \na relative path is fine (on prod, /app and /thirdeye are on the same level)  .--should be used for modifier such as--red--dark--small--editableetc. \nPlease use better naming as--summary-block--details-blockindicates another element. . this seems to be a modifier i.e--solo. We've added a few styles under styles/components/button/scss, can we try to reuse them if possible? . blocking comment: please match add anidproperty to match the label's for attribute.. blocking comment:.scssis unnecessary here. nit: new line at EOF. wondering if doingconst attr = this.get('anomaly.attributes.comment.firstObject')would work here, \nso we can justreturn attr || [];. Would love to see some sort of documentation here i.e. why this custom helper is needed . :+1: This is basically importing the template helper defined earlier. Will add a note with my following pr. . Sorry for the confusion, I meant : => this.buildTooltip.\nThe tooltip callback function doesn't have access to the global context, but has access to thethis, I'm setting it on thethiscontext. nit: we could use destructuring here. . nit: let's use this.getProperties. fyi, we've built a.entity-indicatorclass, it currently lives infilter-bar.scss` but we will soon move it into its own file.. fyi, you will get some merge conflicts from my legend changes. Let me know if you need help resolving the conflics. (my changes added a wrapper and borders around the legend and tooltip.), some of the styling changes you made here should not be needed anymore. let's not override bootstrap's classes directly. \nPlease create a new class (we may use !important as long as we comment that it's to override bootstrap) \nAlso, I feel this is not needed anymore after my legend pr got merged. We could also import the whole utils as 'utils' and use them in the code as utils.toFilters etc... . Oops haha. nit: needsFeedback might be more correct (grammatically) . do we need to explicitely check for null (i.e. undefined should not pass? ) \nOther wise we can just do if (isHiddenUser). you can also do this.toggleProperty('isHidden')\n. How about deconstructing it this way: \nconst [ start, end ] =  _.slice(analysisRangeUrns[0].split(':'), 3, 5).map(i => parseInt(i, 10));\nthen use start and end in analysisRange . fyi, I personally prefer passing a closure action into the component and call it in the action this.attrs.inputAction(). Blocking comment: This is breaking the implementation of the modal component. Please pass the action into te-modal as \n{{#te-modal \n  saveAction=(action \"onSave\")\n  cancelAction=(action \"onCancel\")\n}}. same. \ud83d\udc4d  Thanks for fixing. fyi, the controller is optional, if we' are not using it, we can just omit the file.\nAs a matter of fact ember g route manage/alert/edit creates blueprint for your route and template only. . please use this.getProperties when accessing multiple cps. Potentially blocking: Wouldn't this always result to the default case ? your switch cases are capitalized but you granularity is casted to lower case. Potentially blocking: same comment regarding granularity being lowercase . huge nitpick: you have an extra space after the  arrow =>. :+1: a reduce could also work as you are transforming many n items into 1 hash {}. does this cp also need to depend on 'range.@each` ? . ^ comment applies to the following cps as well. fyi, if onChange is supposed to be passed into the component, you could also do: \nthis.attrs.onChange() instead of this.get('onChange')(). no more labels for the input fields here? . delete if not needed. new line at EOF. Perhaps we could move the .row div wrapper inside the component (https://github.com/linkedin/pinot/pull/2234/files#diff-1bf4da1ba2e97196b1a3e10e3c1ed6ddR80) , since boostrap's col-- must be wrapped in one. (it's easier than having to remember to add them in each template where the component is used. . one loader instead of individual loaders? \nOne problem I saw with this implementation is that the container could potentially be very big, and the loader might not be in view of the user. . Just curious, what's the usual response time for this endpoint? \nIsn't every 5s too often? . I understand that we're not refactoring this until launch in Q1. But just as an fyi, the best practice here would be to move your fetch logic (fetchCombinedAnomalyChangeData) to the route, as a route action, then you can just do return this.send('fetchCombinedAnomalyChangeData') ; the .then logic can also be moved to the route.. nit: no need for quotes ' around object keys (unless it has a special character) . .forEach might be more correct, unless anomalyData isn't always an array, but an iterable. Just curious, Why do we need to set properties on the controller if you're transitioning to another route?. nit: unnecessary quotes around obj keys. Potentially blocking: Any reason why we're not taking the .valueOf() here? . a map here might be semantically more correct. Fyi, you use an optional second parameter as the index \nanomalyPromises  = idGroups.map((group, index) => {.....} )\n. nit: looks like we're not using this here. Is the \":\" a typo here?. let's use a custom css class instead of <strong>. I believe the default styling for strong is too dark and too bold. \ud83d\udc4d  was this generated with ember g ? . fyi, path is optional if it matches the route name. any reason we're using let instead of const here?. Thanks for working on masking the data \ud83d\udc4d. are we expected to change the alert here? should we use a const? . nit: visit is an async helper. I believe the best practice for those helpers (visit, fillin, click, etc... ) is to have them as siblings of andThens\nhttps://guides.emberjs.com/v2.17.0/testing/acceptance/#toc_asynchronous-helpers. please use \nEmber.computed.or('entitiesService.errors', 'timeseriesService.errors','aggregatesService.errors', 'breakdownsService.errors')\nhttps://emberjs.com/api/ember/2.17/classes/@ember%2Fobject%2Fcomputed/methods/or?anchor=or\n^You may pass in more than two properties and even use property brace expansion. The computed property will return the first truthy value or last falsy value just like JavaScript's || operator. nit: indent. same\n. I can see a pattern here, perhaps an opportunity to componentized later on (obviously we'll need a design first :) ). nit: new line at EOF. the col total doesn't add up to 12. on purpose? . fyi, no need for a row, if we're not going to use col-xs-... inside. \nThis actually causes alignment issues since the col-xs-... classes offset the negative margins from .rows. nit: new line\n. I know it's copy-pasta, but what is this \"col\" class here? . are you applying the property separately (instead of the shorthand) because of bootstrap's stronger selector? \n. nit:  passing aggregatesUrns.add as the callback for forEachshould work and is more succinct. . same. It is not apparent what this is doing, let's have some comments above. Also, let's use more meaningful variable name (not just l) . For readability's sake, please span over multiple lines when chaining methods. \n. I feel that a switch case might be cleaner here. per our slack conversation: \nseems like when passed as a callback it loses it's `this` context\n`bind` will be needed to make it work, but then, the initial implementation is cleaner. I believe using onSessionSave would only work for just saved report. I think she's trying to handle the case where it's already saved and we're reading the info. . I believe Number.isInteger does the same thing and is built-in\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger. nit: there are opportunities for DRY-er code here, for instance:\nconst multiplier = isPercentage ? 100 : 1; \nconst formattedNum = metric * multiplier;\nreturn isWhole ? formattedNum : formattedNum.toFixed(1);. nit: trailing commas in objects are not necessary and our best practices discourage it. . Looks like a lot of this data massaging is for UI only values. If those stats are not used for the logic, perhaps it'll be cleaner to use template helpers instead. Let's discuss this offline. (non-blocker for now). can't we just reuse metricName here? entities[metricName] and metricName = entities[metricName].label.... Blocking comment until we determine if this breaks rca/rootcause: This toBaselineRange util function is being shared with 4 services and 1 components. I feel that changing [compareMode.toLowerCase()] to  [compareMode] would introduce breakage. @apucher can you confirm if this is ok. . This is also being used by the tooltip builder, the color delta helper and 2 other components. Any reason why we're deleting? Let me know if I'm missing something cc @apucher @ttbach . same. nit: Since it's a component, shall we just set the BEM block to anomaly-stats instead of the parent te-horizontal-cards?. Nice componentization! nit: Looks like this could be componentized further as each card essentially has the same view. . nit: Let's add some JS doc for those utils functions when we get a chance. nit: let's document using the JS doc format. http://usejsdoc.org/\nThis should be straightforward. @ttbach  and I are available to discuss this as well. . nit: let's start using better variable names than single letters . \ud83d\udc4d  Looks so much cleaner! . perhaps a try catch would be more succinct here. I feel it's fine to use for deeply nested objects where a null can pop up at any level.\ntry {\n  return (entities[urn].attributes.additive[0] === 'true')\n} catch (error) {\n  return false; \n}\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Control_flow_and_error_handling#try...catch_statement. fyi we can just use the _.has from lodash  https://lodash.com/docs/4.17.4#get\nIt's behaves similarly to Ember.getWithDefault but works with non Ember object. do we need to use this.get('model') here? do we expect it to update? . Perhaps we should use Ember.run here to make sure that the template only rerenders once for both Ember.set\nhttps://guides.emberjs.com/v2.11.0/applications/run-loop/#toc_how-do-i-tell-ember-to-start-a-run-loop\n. can't we use const here if we don't expect the variable to change?. Ew haha!. BLOCKING COMMENT: this is going to change the styling for a lot of labels in the app. Is this a global change at the art-deco/design level? \nIf you need add spacings, I'd rather see that in the container of label + input.. \ud83d\udc4d \nnit: If we're going this route, then the import on line 1 https://github.com/linkedin/pinot/pull/2358/files#diff-bacd678ef191027b39a62d8400a26a9bR7 should be removed. nit: let's also import get set getProperties ... and use them instead of this.get this.set (newer way to do things). fix: please remove. fix: for attribute doesn't match the input here. fyi, the correct way to use modifier with BEM is by using the default class + modifier class. For instance if we had a button we would see: \n<button class=\"te-button te-button--red\">\nThe \"correct\" way would be to name your classes so that the class names are as follows: \n<li class=\"rootcause-metric__display-view rootcause-metric__display-view--active>\nThis can be fixed in a subsequent pr\n. There's a more succinct way to do this: \nimport { equal } from '@ember/object/computed';\nrequiresFeedback: equal('status', 'NO_FEEDBACK'). Please use single quotes ' for string in JS. (This is a convention we adopted) \nApplies to all prs.. any reason why we changed the name here? (curious). + class=\"thirdeye-link\"  for consistency . nitpick!: line break at EOF. fix: didReceiveAttrs is optional if you're not doing anything with it. any reason this isn't returning anything? . fix: indentation + BEM. \nmodifier classes in BEM are augmenting a base class.\n based on what you have the correct way would be class=\"\"\"spinner-wrapper spinner-wrapper--self-serve\". is the last item in the array always guaranteed to be the active one? . fix correct bem usage would be class=\"te-form__select te-form__select--wider. sure thing. . done! . let's create a constant.js file to store all constants. fyi, if onSave is a passed function. we can just to \nthis.attrs.onSave(). can we try keeping all fetching logic out of the controllers? (Thank you for your effort in abstracting them to services btw!) . nit: let's use parens (res) when the arrow function spans over multiple lines (our convention). (just a thought) : this utils file is getting really big, if feel that we should break it into smaller files. . this looks like a UI only logic (copy), perhaps this should be handled in the template? . fyi missing import (not related to the pr's feature). Good question! yes it does pass, but it found an error on the format-number helper, will push a fix :) . aggreed, it can even be a cp getWithDefault('alertData.pattern', 'N/A') note: this only works for undefined.. Can the toCalculateGlobalMetric change while the reference o alertData doesn't change?\nIf yes, we should compute base on alertData.toCalculateGlobalMetric. fyi, if this logic is only used in the template, we do have template helpers such as format-number for UI.. can autoTuneId be an empty array here? . should we use <label for=\"....\" here since we have an input with id =\"alert-tune-pattern\". Blocking comment: Again this seems to be a global change to all te-label. Please create a specific class for your feature, unless this change is driven by design. Blocking comment: This seems to be a global change as well. Please make sure that this doesn't break any of the current implementation or create a BEM modifier for daterangepicker-input. should this.setProperties and the this.send below happen after the this.preparefunctions's chained promises? if yes, the current implementation doesn't guarantee that. Just curious, is this an arbitrary number? . Is the intention here to stop the checkReplayStatus loop on exit? \nIf that's the case, I feel it'd be cleaner to implement it with ember-concurrency (we use it for the typeahead logic in power-select). The library offers cancellable/restartable async tasks. \nI understand we are under tight deadline, please add a comment to refactor + jira tickets for now. \nDoc:\nhttp://ember-concurrency.com/docs/cancelation\nExample in our code:\nhttps://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/pods/rca/controller.js#L53. It's not very clear why an id of 0 means an error here. Is this an implementation choice? . is this variable used anywhere?. Let's use <label for=\"...\"> here to be more semantically correct (since we have an input)\nApplies to all label + input. Looks like duplicate code, let's make it DRY-er  by moving this into a function. \n. This will save a promise into anomalySessions is that what we want? . transition.abort() is what you need? \nhttps://guides.emberjs.com/v2.18.0/routing/preventing-and-retrying-transitions/. can't we just set it to NaN ? \nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN. actually Number.NaN seems more correct https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/NaN. Thanks for changing the data! \ud83d\udc4d . Did this work? . Thanks for the honesty \ud83d\udc4d . undocumented change? what does this do? (nit obvsly). nit: Let's move this into a /utils/constant.js since this is needed for every post request with fetch.. It's a bit obscure at first glance what you're trying to do here. Perhaps add a comment? . Also, are we checking the unix ms value here? \nfyi, you can call .valueOf() on moment object which returns it's unix ms value (@type Number). nit: Seeing the same logic in more than one place. Perhaps we could have a cp returning those queryParams. nit: let's not use glyph but icon. glyph is a term that's mostly used in bootstrap only. Any reasons why we're setting properties twice in a row here? \nThis is known to cause performance issues in Ember. any reason why the focus-out is not used anymore? . can this find ever return undefined ?. is it timeproof? i.e. we run this in 5 months, is it still going to work?. QQ: do we need quotes around the key names here? \nI understand that we're trying to replicate a JSON response, but I feel this is already handled by mirage.. Do we need a check against anomalyIds being undefined/null here? . Did {{rootURL}} work?. @ttbach not using arrow functions here because the this context changes otherwise. . what does the +1 do here? Seems very arbitrary. @apucher .add(1, 'days') is the correct method I believe \nhttps://momentjs.com/docs/#/manipulating/add/. nit: technically it's 'days' and 'hours', but moment seems to  handle singular as well (this doesn't seem to be documented though) \n```\n// from their doc https://momentjs.com/\n// plural for add/subtract\nmoment().add(1, 'days').calendar();  \n// singular for startOf and endOf\nmoment().endOf('day').fromNow();\nmoment().startOf('hour').fromNow();\n. Nice use of `Ember-concurrency`! Looks like we may have multiple checkReplayStatus call at the same time. \nIn case you need this, `ember-concurrency` allows for a max number of concurrent calls\nexport default Controller.extend({\n  restartableTask3: task(SHARED_TASK_FN).maxConcurrency(3).restartable(),\n  enqueuedTask3:    task(SHARED_TASK_FN).maxConcurrency(3).enqueue(),\n  droppingTask3:    task(SHARED_TASK_FN).maxConcurrency(3).drop(),\n  keepLatestTask3:  task(SHARED_TASK_FN).maxConcurrency(3).keepLatest(),\n});\n```\nReference:\nhttps://ember-concurrency.com/docs/task-concurrency-advanced. qq: Arbitrary number, or requirements from design/relevance? . nit: let's delete if unneeded. If this is here because it needs refactoring, please add a TODO. Looks like we have multiple nested .thens here. \nLet's start looking at async/await documentation for a future refactor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\nExample implementations in our code:\n\nComponent:  https://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/pods/components/te-modal/component.js#L66\nTest:  https://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/tests/acceptance/rootcause-test.js#L49\n. looks like you have a BEM modifier on a child element. \nThe correct usage would be creating a child class list-item (modifier might not be needed), or change the class name so that it applies to the list item \nte-anomaly-table__list-item te-anomaly-table__list-item--smaller. unnecessary check here since dimensionKeys should always be truthy since it's the result of Object.keys(dimensionObj). \n[] === true;. Also, do we also need to check for .length here since we're calling .forEach on an array?. fyi, this should work subdObj.cumulativePercentageChange.map(Math.abs). <strong> is a valid html tag, however let's stay consistent with the rest of the app and use the same classNames. I believe this styling should already exists for labels (look up .te-label in _styles.scss). or using Ember. getWithDefault(graphConfig, 'dimension', 'All')\n^ just fyi, this might results in more line of codes in our case. OK, this should be documented outside the code for product. (not sure what's the best medium) . To keep a consistent UI, let's pick colors from here https://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/styles/wrapper/_color.scss \n. Did we check with design that this change is fine? (not sure if Selene had the previous order for a specific reason). Let's add a comment that this is temporary\n. BLOCKER: Any reasons we built 4 different templates here? \nIt feels like this could be accomplished with the same template and just pass 1. a score and 2. a value? . Are we using this property in this cp? changesOffsetFormatted. Let's use he newest module api for new files please. https://github.com/emberjs/rfcs/blob/master/text/0176-javascript-module-api.md#addendum-1---table-of-module-names-and-exports-by-global. fyi, ember has helpers tood http://www.emberjs.com.cn/api/#method_isNone. Are we surfacing this error to the user?. I wonder if the more succinct setProperties(anomaly, {shownCurrent: curr, ...}) would work here. I know we went back and forth regarding this. Just want to make sure what's the latest consensus here. . Looks like a misuse of BEM here, te-anomaly-table__list and its modifiers te-anomaly-table__list--shadow should be on the same element\nhttps://medium.com/fed-or-dead/battling-bem-5-common-problems-and-how-to-avoid-them-5bbd23dee319. I've seen this statsCard logic before. Anyway we can consolidate all uses of starsCards? . Is this check needed? Can this ever be null or undefined? (based on the call above, it looks like this will always be an array) . Let's refrain from importing ember. Let's stick to the new module apis: https://github.com/emberjs/rfcs/blob/master/text/0176-javascript-module-api.md#addendum-1---table-of-module-names-and-exports-by-global \n\nnote: I'm ok if this is done in a follow up pr. delete?. let's not mix old and new module apis. Good job on using later here, let's also use get(this,...) and setProperties(controller, ..... Per our conversation on slack, using local Storage is fine for launch. Eventually, we want to have more consistent code, and we'll move this into a service (a la rootcause). This should support all newer version of the browsers we use. Looks like there's no  need for a polyfill/addon at this point. \n\n. Let's add a comment explaining why this is necessary . Is this error currently getting caught? . Let's try using more meaningful variable names than single letters for readability sake. \nThe final compile step changes them to be more succinct anyway.. qq: any reason why this wasn't chained after the .filter? . I personally prefer the shorter way:\nconst UNIT_MAPPING = {\n  MINUTES: 'minute',\n  HOURS: 'hour',\n  DAYS: 'day'\n}\nthen UNIT_MAPPING[unit];\nThis also allows moving this constant to the constants.js file (if needed). Harde coded arbitrary nums? . we can just pass an anonymous function in catch\n.catch(() => {}) \nThis essentially achieves the same thing, but looks better imho. Is this safe to remove this? I believe @apucher was intentionally triggering a cp recomputation here. . same. we could just use a try catch if response from the back end are inconsistent. looks like reduce might be a good candidate here since we have transforming n to 1 . empty css selector?. did you know that can use the bitwise not operator ~-1 == 0 so the check could be rewritten as if (~jobId)\nThis is just an fyi, some people might think this is a very obscure way to write things \nDocumentation: \nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Bitwise_NOT. not very clear where metricDataColor is coming from, if it's a constant let's use uppercase METRIC_DATA_COLOR. fyi getWithDefault would be cleaner here:\nconst metricId = getWithDefault(this, 'currentModel.config.id, null). Is this what you were referring to? My understanding is that moving this to another async function will allow forawait/async, but doesn't work in the context of a task generator? . I'm seeing a lot of work done to the table. I wonder if going back to theember-models-tablewould save us time in the long run? (not a blocker!). Seeing this code repeated several times, Perhaps this could be abstracted into a utils function?.const metricData = await fetch(metricUrl).then(checkStatus). let's useNumber.isNaN`\ndocumentation:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN. Any reason why we're not handling the error anymore?. Your understanding is correct\n. are we assigning at index id here? Seems like an object would be more correct. Any thought?. do we need the try around the whole function here? ideally, this can only error out at the fetching step . Fyi you can do dimensionOptions.get('firstObject') or I think this should work too: this.get('dimensionOptions.firstObject')\nhttps://guides.emberjs.com/v2.18.0/object-model/enumerables/#toc_use-of-observable-methods-and-properties. Why don't we augment spinner-wrapper instead of overriding it? \nwe could just add a modifier like so class=\"spinner-wrapper spinner-wrapper--self-serve\"\nSo that we keep the same base class, and modify with --modifier classes. can't this be handled with :last-child ? \nhttps://developer.mozilla.org/en-US/docs/Web/CSS/:last-child. \ud83d\udc4d Jsdoc. This could be refactored nicely with await\ninitialize: async function() {\n  const functionData = await this.prepareFunctions(this.get('selectedConfigGroup'))\n  this.set('selectedGroupFunctions', functionData)\n}\n. A variable can be assigned a default, in the case that the value unpacked from the object is undefined.\nExample:\n```\nvar o = {p: 42, q: true};\nvar {p: foo, q: bar} = o;\nconsole.log(foo); // 42 \nconsole.log(bar); // true\n```\nDocumentation:\n  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment\nIn your code:\n```\n  const {\n    selectedApplication = [],\n  } = this.get(.....\n// then below we can do: \n const activeGroups = alertConfigGroups.filterBy('active')\n```\nAnother option is to use Ember 's getWithDefault, if you have an ember object myObject, you can access it's property this way: \nmyObject.getWithDefault('propertyKeyName', 'a default String')\nDocumentation:\n  https://emberjs.com/api/ember/3.0/functions/@ember%2Fobject/getWithDefault. Looks like this is the same code as https://github.com/linkedin/pinot/pull/2545/files#diff-c4e1ed83815b62ca0daad6dbd8dbe9d8R234\nAny way we can share this function in both places? . Nit: Here we can set the default to an empty string instead of null\nconst pattern = selectedPattern ? optionMap.pattern[selectedPattern] : ''; \nabove so that we can just write \nconst formattedPattern = pattern.toLowerCase().replace(',', ' ').camelize()\nIn my opinion, ^ is more readable.. indexor alertIndex perhaps? . newline please\nhttps://stackoverflow.com/questions/5813311/no-newline-at-end-of-file\nhttps://evanhahn.com/newline-necessary-at-the-end-of-javascript-files/\nhttps://robots.thoughtbot.com/no-newline-at-end-of-file. I believe the intention was to create it now since we'll need it eventually ?. \ud83d\udc4d This can be added to mirage as well. We're currently building a Proof of concept, so this will be pushed (under a hidden url) so that design/product can start playing around with it.. It's a route action. Do we have a better alternative? @cptran777 . you know the drill ;-) new line please. screenshot didn't show the colors. Is this working?\nedit: oh, was that what you were referring to with \"css will be fixed later\". we're already have styling for thirdeye-link, if this is slightly different, how about adding a modifier like thirdeye-link--large . we might want to add a .toFixed(2) here. are those numbers rounded? if not, perhaps use the d3 formatter? \n(some metrics have values in the millions+, and we don't want the text to overflow) \nhttps://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/utils/utils.js#L52\n. any reason we need to specifically set this? default value is flex-start. each time we do $(), we're essentially using jquery to grab a dom object (not performant). \nLet's refactor this so that we only do that once per selector\n```\nconst $title = this.$(TITLE);\nconst $description = this.$(DESCRIPTION)\nconst $number = this.$(NUMBER)\n// and in your assert :\nassert.equal($title.get(1).innerText .....\n```\n. Please review this. (half of it are jsdoc) \nI'll add a todo to abstract the fetching into a service. This is the mvp. @ttbach This is how you override some of the table css. this is passed inside the ember-models-table in https://github.com/linkedin/pinot/pull/2575/files#diff-fa2088e19d4061108d3a57d8e9aeefbaR77. fyi @newsummit had to make this change since I modified the component's API here https://github.com/linkedin/pinot/pull/2575/files#diff-3a3caf1f54b62eda5b463d1a8e9cc743R50. @ttbach fyi this is how you pass a custom filter when you're using a custom cell. travis is passing. Going to add those in the next pr. Thanks!. This is starting to become pretty big. not needed in this pr, but we should start considering using scenarios/factories . @apucher fyi as we discussed (a while ago). I'd rather not use magic numbers with margin/padding for positioning. \nWhat is the intention here? Let's discuss this on Monday. Does this still need to be a task since you remove the yield keyword?. nit: let's pass a meaningful message as the 3rd argument, we'll thank ourselves later for that. same. fyi we also have the moment-format helper that we can use directly in the template \n{{moment-format date dateFormat}}. fyi, if we need those to be dynamic in the feature, we can obtain them by doing the following: \nmoment(StringifiedDateOrEmpty).valueOf(). @newsummit Is this change in alert/explore ok? . fyi: We're sticking the following standards\n- single quote `'` in JS\n- double quotes `\"` in template. also applies to next 2 lines. nit: Let's pass a third argument in assert with a meaningful error message. same here. please change the jsdoc since we change the method name. not sure if it's a github issue, but the identation looks a bit off here. nit: let's use a more meaningful name instead of f . we could do\nisActive: range.value === activeKey\nso we dont' need line 74-80. apparently using this.attrs in components is no longer best practice. please use the regular this.get('selectAction')\nhttps://github.com/ember-cli/eslint-plugin-ember/blob/master/docs/rules/no-attrs-in-components.md. BEM: this make it look like that wrapper is a element nested inside te-pill-selectors however this is a block on it's own. Semantically, I feel that te-pill-selectors-wrapper is more correct. . again, is __title an element of te-pill-selectors? if that's the case, we should change the top level selector to te-pill-selectors, \nand everything nested should have an __element \nte-pill-selectors__title\nte-pill-selectors__body\netc...\n. qq: how is it cache? is it in setDuration(duration, startDate, endDate); ?. Also, might consider changing the name since the component is now called range-pill-selectors, the classNames should reflect that. let's move this css into it's own [componentName].scss. wrapper shouldn't be nested if it's indeed a parent block. TODO (follow-up PR): is it worth componentizing each te-pills? . no need to call RSVP.hash since hash was directly imported just use hash(). don't think this is necessary since we're importing hash and allSettled in https://github.com/linkedin/pinot/pull/2613/files#diff-079b46af257352395a99cf63940b5e30R14. nit: is there any way we can achieve the same result without the use of \"global\" boolean that's being checked in multiple places. We should attempt to make it more maintainable. TODO (follow-up PR): let's continue the good work abstracting the url strings into a api.js. fyi, you can do  $rangePill.find() so you don't need to grab the item again from the DOM. fyi you can do $rangePickerModal.find('.ranges'). oh thanks! didn't know about this work around. @aaronucsd This is actually the new syntax, ember https://github.com/ember-cli/eslint-plugin-ember/blob/master/docs/rules/use-brace-expansion.md. nit: Yay, much cleaner than the double quotes\".  I understand that this is a JSON response, but since this currently lives in a JS file, let's omit the optional quotes around key property names. . fyi, since we're open source, we're trying to obfuscate the data as much a possible.. I'm personally not a fan of  because it's not really semantic html. \nCan we achieve this with css? . indentation, let's tab all the .then and .catch.\nAlso fyi, we can now use await/async instead of .thens. I can walk you through what it'll look like. just ping me!. please keep the indentations before the .thens. nit: looks like a good candidate for a reduce function here. nit: const [ start, end ] = context.anomalyRange\nthen just plug in ${start} and ${end} in the url. Let's document this with jsdoc http://usejsdoc.org/\nHere's an example in the code: \nhttps://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/pods/rootcause/controller.js#L748. seems like we could just do:\nconst arrayName = metricUrnToOffestAndUrn[metricUrn] || []. also we can use a const here. const objects can have their property change/updated/deleted but the reference to the original object must remain intact. \nmetricUrnToOffestAndUrn[metricUrn] = []; will not be allowed, but if you apply my next comment, this should be a non issue. documentation: \n- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function\n- https://hackernoon.com/6-reasons-why-javascripts-async-await-blows-promises-away-tutorial-c7ec10518dd9. documentation: \nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment. documentation: \nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce. ah, sorry didn't realize that. Nevermind then,  keep up the good work! \ud83d\udc4d . nit, we could destructure ({name, value}) => { so we can just refer to name and value. why is run needed here? I believe we can simply use the click helper here\nawait click('.daterangepicker-input'). syntax: space before and after [ a, b ] when we destructuring arrays or objects const { keyProp } = objToDestructure. Do we need to calculate this for every urns? How about setting this as a prop?. sytntax: space between try and { . If we have plans to handle the error, let's add a TODO comment in the code. Comment applies to whole pr. Nice job on using async/await! \nLooks like some awaits here are not needed though. We should only use await with an async call (ajax for example). . sanity check: is this the format the back end will send this? no camelCase? metricAnomalyId. nit: could use .mapBy('name') here \nexample:\n```\nimport EmberObject from '@ember/object';\nlet hawaii = EmberObject.create({\n  capital: 'Honolulu'\n});\nlet california = EmberObject.create({\n  capital: 'Sacramento'\n});\nlet states = [hawaii, california];\nstates.mapBy('capital')\n```\ndocumentation:\nhttps://guides.emberjs.com/v2.18.0/object-model/enumerables/#toc_map. nit: let's use async/await to avoid the nested then's? . fyi, We could leverage getWithDefault here:\ndocumentation:\nhttps://emberjs.com/api/ember/2.18/functions/@ember%2Fobject/getWithDefault\nexample:\nimport { getWithDefault } from '@ember/object';\n// ....\nconst filterMap = getWithDefault(res, 'searchFilters. statusFilterMap', null);\n. if anomalyRecord is an ember object (it should be), \nwe can utilize setProperties so that we don't notify property changes for each sets. An alternative would be to wrap that in an ember run. \ndocumentation:\nhttps://emberjs.com/api/ember/2.18/functions/@ember%2Fobject/setProperties\nexample:\nanomalyRecord.setProperties({\n  anomalyFeedback: selectedResponse,\n  showResponseSaved: true\n}). let's use setProperties here. nit: if we're sure that range contains both name and value property, we could deconstruct it\n({ name, value }) => {\n // ...\n  return {\n       name,\n       value,\n       isActive: false\n    };\n // ...\n}. \ud83d\udc4d fyi, I believe Steve started an API file, we can start thinking about putting new urls there in an effort to  alleviate new tech debt. Just curious what's the rationale behind choosing to implement it as a utils vs a service? . @aaronucsd ah didn't realize this was a copy/pasta. a TODO comment in the code is fine for now \ud83d\udc4d . are we actually using rsvp here?. couldn't we achieve the same layout with flex box ? \nPersonally not a big fan of magic numbers to position items. if you were trying to offset the spinner's own height and width. You could keep both left and top at 50%, and then use the transform trick.\ntransform: translateX(-50%) translateY(-50%); \nIn the context of translateX, and Y, the percentage refers to the actual size of the element and not the parent's (as in the left and top property)\n. fyi, if this is an ember array, you could use mapBy https://emberjs.com/api/ember/2.15/classes/Ember.Enumerable/methods/mapBy?anchor=mapBy. assert.ok if you're checking for truthy\ndocumentation:\nhttps://api.qunitjs.com/assert/ok. fyi, this library could be helpful if you're checking dom attributes\nhttps://github.com/simplabs/qunit-dom. Can we abstract those strings as constants somewhere and give it a meaningful name. . Can we avoid tag selectors as much as possible please as they are very costly. \nhttps://www.learningjquery.com/2017/09/optimize-your-jquery-selectors-for-best-performance\nfrom 2010 but still relevant: https://css-tricks.com/efficiently-rendering-css/. fyi we can use the jquery method first() here also\ndocumentation:\nhttps://api.jquery.com/first/. fyi, every time we do a ${someSelector), this translates into a dom traversal operation. This could be cached into a variable \nconst $optionList =  $(OPTION_LIST);. I recall you created a constants file for test. Perhaps some of those should go there? . any reason the submit button is a let while dashboardInput is a const ?. Let's add a comment explaining which user interaction this is mimicking. same, does this need to be a let? . Unfortunately ember concurrency's task are currently not compatible with await/async. I believe @newsummit found that out a few weeks ago. Yes, it's a template helper, so it's dasherized in the template https://github.com/linkedin/pinot/pull/2689/files#diff-fa2088e19d4061108d3a57d8e9aeefbaR49. Good to know. Thanks!! will fix\n. This is actually constructing a new array and setting it here https://github.com/linkedin/pinot/pull/2689/files/c21017e56023f0b5e60ffb788c9ef6f532860ee9#diff-8ed4175cf53b2ef4678cc9b4ee73238fR436. oh Good catch. this should be lastSearchTerm consistently. I used to cache the task for a potential .cancel(), but this is handled more elegantly with a .restartable() . I don't think I'll have bandwidth to update this specific piece. @aaronucsd Would mind fixing in a follow up pr? . Oh yes. you're right, this wasn't set to itself. forEach is indeed more semantically correct :+1 . Let's use the more robust Number.isNaN().\ndocumentation:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN. nit: let's continue abstracting all api endpoints into their own JS file. . let's use defined variables when they exist. \nhttps://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/styles/shared/_variable.scss. fyi @newsummit created an app-shade mixin \nhttps://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/styles/shared/_functions.scss#L2\n. Let's not hard code any colors. \nWe should utilize those we have here: https://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-frontend/app/styles/wrapper/_color.scss. nit: let's use template literal here. . @apucher Yup that's fine, the same way we use both set and setProperties. The only difference is that setProperties is more performant (each this.set() would notify a property change, and cause cps and observers to recalculate), but getProperties and get are essentially doing the same thing. . @aaronucsd I'm fine with const here since the reference doesn't change. Is it best practice to use a let to explicitly indicate that the array content might change?\n. food for thought: https://mathiasbynens.be/notes/es6-const. Can we also document the params in the jsdoc? . do we still need this?. Do we need to import both Service and inject ? . let's document the params in the doc above, also, let's stick to the JS doc comment syntax: \n/**\n * This is a JS doc comment\n * @type/@method\n * @param\n * @example\n * @return\n */. Do we need this init() if we're only calling this_super()? . Is this import being used here?. nit: Let's make this a template helper if this is a UI only display property. ",
    "skyb92": "Hello @mcvsubbu ,\nThank you for your advice.  I'll post my progress soon.\nPinot is awesome!!\n-Skyb. I got this error message when I restarted pinot, any suggestions? @mcvsubbu \nCaught exception while processing resource mmcloud_facebook_akun_stat_REALTIME, skipping.\njava.lang.NullPointerException\n        at com.linkedin.pinot.controller.helix.core.realtime.PinotRealtimeSegmentManager.assignRealtimeSegmentsToServerInstancesIfNe\ncessary(PinotRealtimeSegmentManager.java:207)\n        at com.linkedin.pinot.controller.helix.core.realtime.PinotRealtimeSegmentManager.processPropertyStoreChange(PinotRealtimeSeg\nmentManager.java:291)\n        at com.linkedin.pinot.controller.helix.core.realtime.PinotRealtimeSegmentManager.access$000(PinotRealtimeSegmentManager.java\n:66)\n        at com.linkedin.pinot.controller.helix.core.realtime.PinotRealtimeSegmentManager$1.onControllerChange(PinotRealtimeSegmentMa\nnager.java:105)\n        at org.apache.helix.manager.zk.CallbackHandler.invoke(CallbackHandler.java:209)\n        at org.apache.helix.manager.zk.CallbackHandler.init(CallbackHandler.java:324)\n        at org.apache.helix.manager.zk.CallbackHandler.(CallbackHandler.java:114)\n        at org.apache.helix.manager.zk.ZKHelixManager.addListener(ZKHelixManager.java:317)\n        at org.apache.helix.manager.zk.ZKHelixManager.addControllerListener(ZKHelixManager.java:426)\n        at com.linkedin.pinot.controller.helix.core.realtime.PinotRealtimeSegmentManager.start(PinotRealtimeSegmentManager.java:102)\n        at com.linkedin.pinot.controller.ControllerStarter.start(ControllerStarter.java:133)\n        at com.linkedin.pinot.tools.admin.command.StartControllerCommand.execute(StartControllerCommand.java:155)\n        at com.linkedin.pinot.tools.admin.PinotAdministrator.execute(PinotAdministrator.java:113)\n        at com.linkedin.pinot.tools.admin.PinotAdministrator.main(PinotAdministrator.java:125). Thank you @mcvsubbu it really helps.. ",
    "cptran777": "+1. Indentation looks crazy here. Can you generalize these into a function with more variable values in the string? They are all so similar it almost seems redundant. Indentation looks off here. Indentation looks off here. Is there supposed to be some content here?. You can probably generalize these functions and just pass in the string to set instead of rewriting the same thing so many times. Probably wasteful to go back and rewrite but just a thought for the future.. Can metric ever be a string form of a number? If so, should you apply the allow decimal logic to that as well?. What if time is 0? Is it supposed to default to an empty string in that case or show 0 units?\n  . Seems like there are a lot of actions on this controller, wondering if that's necessary? Ember best practices wants us to minimize controller usage whenever possible so just curious.. +1 to this comment. Are we expecting the value of these properties to change together or can each one be changed individually while the others remain the same? Based on the function, it seems like all these values are updated at once together. If so, it would seem like making a computed property with observers for each of these properties creates unnecessary references. If not, ignore this comment :)\n  . You have a listener for 'changes' above but you grab a 'changesFormatted' here. Is that on purpose?. It seems like all these events are updated at once whenever 'entities'[] is updated. If so, this way of counting the entities could be arguably more clear but seems really roundabout and inefficient since you're counting through the same 'entities'[] for each eventType multiple times. Wouldn't it be easier to just count all the events at once in a single function that loops through 'entities'[] once and keeps track of the count for each type in the object you return instead of having to define two functions where one of them just calls the other function repeatedly?. If you're gonna put it on one line anyway, i think if (value === 'N/A') return works and looks cleaner.. is humanizeFloat an IT reference? we'll all float one day.... I'm confused as to what the comment beside this is. Is that a default value? If so, jsdocs has a good format for that\n/**\n * Your description\n * @type {type}\n * @default value, ex: 'Han shot first' or {}\n */\nyourProperty: null,. Are you expecting more values in the future? Seems pointless to use getProperties on a single item and then have to parse the resulting object.. Same as the above comment about single line if statement. I like the example :). Just curious why you're defining an empty object literal here and then spending the extra lines setting properties on that object as opposed to just seeing\nanomalyInfo[offsetFormatted] = {\n  change: etc...\n  value: etc...\n}\nright off the bat. Looks kinda strange/waste of typing/space to me.. I saw above that the anomaly property is a computed property that I guess returns an object, but it can also return a boolean as false. Will that be an error issue here?. So many column configs... so much writing. It almost sounds like you could use a util function to build out these columns!  :D\nIn all seriousness, not a big deal but if you end up having multiple tables and want to have more readable configs, callisto and cmon-web both use artdeco table config builders. Not a fan of using super short variable names like res vs something clearer like result even if it is more concise. It's like coming in and being all \"what is res? stare ooooh result\". Are we sure res will always be a defined array of objects with an attributes property? Because if not this may break.. Instead of having a check for whether f is a number in every single util function, it might be more concise to just check for f's type first and if it's a number do these other functions or if not then you only have to write the check once. Not worth a refactor or anything, just a thought for future purposes where you find yourself writing a the same logic repeatedly. Empty controller, just making sure you didn't mean to add something here lol. Sounds like a great case for mirage! :D . I'm confused. metric and Function names seem to be strings, and anomalyMapping is an array, but you're using them to create new arrays as properties on your mapping Array? And then functionName is an array on the array you created on the array? . I think using bubbling through this.send is not very performant. Would it not be easier to just call that function directly?. ",
    "snleee": "@jfim @mcvsubbu thank you for the help!. LGTM. @Jackie-Jiang On travis, this test takes 16.48s (49s previously). If we want to further improve, we should avoid using SegmentIndexCreationDriver. How do you think?. @Jackie-Jiang 33.434sec -> 19.531 sec on Travis. @shaunschembri Can you check and post the broker side log? PostQuery command will send the request to broker so it should contain specific error on why it throws 500 error.. I looked at the following documentation to decide the place to release.\nhttp://netty.io/wiki/reference-counted-objects.html\n. We have fixed the hadoop dependency issue for HDFS fetcher along with JF's commit that you mentioned above and  https://github.com/linkedin/pinot/pull/1973. (If Hadoop jar does not exist, do not initialize HDFS fetcher)\nI recommend not to include Hadoop dependency for Pinot because Hadoop introduced a lot of library version conflicts and we spent 2-3 days to resolve conflict issues for our internal release.\nI would suggest to keep it as provided.. @agrawaldevesh We do have some support for preserving types. https://github.com/apache/incubator-pinot/pull/2830\nIf you add OPTION(preserveType='true'), Pinot will preserve the type for the result. One limitation is that this won't preserve types for grouping keys (Keeping types for grouping key will require considerable refactoring).\nCan you play with preserveType option to see if it makes your task easier? However, it would be ideal if we can add the types along with the column names.  . In order to avoid the commits like Merge branch 'master' into ..., you can check out how to use git rebase.. @mcvsubbu The tests that you mentioned are already covered in ReplicaGroupRebalanceStrategyTest. I also make the change to use InvalidConfigException for configuration related exceptions.. @ttbach Can you make sure to pass travis-ci test before merge the commit from the next time? This commit pushed an empty file thirdeye/thirdeye-frontend/app/pods/components/ts and this caused all the travis tests to fail due to license check. I removed the file from https://github.com/linkedin/pinot/pull/2584. @mayankshriv Travis failed for https://github.com/linkedin/pinot/pull/2574. We will need to be extra  careful to make all travis test before we merge the code.. @mcvsubbu I added the test to cover:\n1. Create a table without replica group, then update table config with replica group. (changing segment assignment strategy)\n2. Create a table with replica group. @mayankshriv Merging two 1GB segments took about 2000 sec in my laptop. Sorting took 600sec and segment creation took another 1400sec. . This PR is submitted as part of implementing segment merge and rollup with minion framework (#2715). Can you make sure to pass all unit/integration tests before merging?\nPinotTableRestletResourceTest.testCreateTable:130->ControllerTest.sendPostRequest:157 \u00bb IO\n  PinotTableRestletResourceTest.testTableMinReplication:139->testTableMinReplicationInternal:154->ControllerTest.sendPostRequest:157 \u00bb IO\n  PinotTableRestletResourceTest.testUpdateTableConfig:194->ControllerTest.sendPostRequest:157 \u00bb IO\n  TableViewsTest.setUp:78 \u00bb InvalidTableConfig No schema defined for realtime ta.... Can you try to directly clone this repo instead of using fork? Maybe that's why you cannot merge. Also, we usually use git commit --amend for keeping one commit for one pr and use git push -f origin <branch>. But, this is personal preference since the commits are squashed into one if we merge to the master anyway :). #2715. @kishoreg This is for supporting unflattened multi-value selection result for internal restli endpoint. Since we need to introduce new API endpoint for pinot queries, we have decided to support preserving types as a cleanup. I don't want to do this by default for now because it's not backward compatible. With this option on, we will be returning the types correctly for BrokerResponseNative except groupKey.. ```\nselect AirTime from mytable limit 1\n{\n    \"selectionResults\": {\n        \"columns\": [\"AirTime\"],\n        \"results\": [\n            [\"154\"]\n        ]\n    },\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numDocsScanned\": 120,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 120,\n    \"totalDocs\": 115545,\n    \"timeUsedMs\": 8,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {}\n}\nselect AirTime from mytable limit 1 OPTION(preserveType='true')\n{\n    \"selectionResults\": {\n        \"columns\": [\"AirTime\"],\n        \"results\": [\n            [154]\n        ]\n    },\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numDocsScanned\": 120,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 120,\n    \"totalDocs\": 115545,\n    \"timeUsedMs\": 9,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {}\n}\nselect max(AirTime) from mytable\n{\n    \"aggregationResults\": [\n    {\n        \"function\": \"max_AirTime\",\n        \"value\": \"652.00000\"\n    }],\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numDocsScanned\": 115545,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 0,\n    \"totalDocs\": 115545,\n    \"timeUsedMs\": 8,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {}\n}\nselect max(AirTime) from mytable OPTION(preserveType='true')\n{\n    \"aggregationResults\": [\n    {\n        \"function\": \"max_AirTime\",\n        \"value\": 652.0\n    }],\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numDocsScanned\": 115545,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 0,\n    \"totalDocs\": 115545,\n    \"timeUsedMs\": 11,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {}\n}\nselect max(AirTime) from mytable group by Carrier top 3\n{\n    \"aggregationResults\": [\n    {\n        \"groupByResult\": [\n        {\n            \"value\": \"652.00000\",\n            \"group\": [\"HA\"]\n        }, {\n            \"value\": \"635.00000\",\n            \"group\": [\"UA\"]\n        }, {\n            \"value\": \"583.00000\",\n            \"group\": [\"DL\"]\n        }],\n        \"function\": \"max_AirTime\",\n        \"groupByColumns\": [\"Carrier\"]\n    }],\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numDocsScanned\": 115545,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 231090,\n    \"totalDocs\": 115545,\n    \"timeUsedMs\": 38,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {}\n}\nselect max(AirTime) from mytable group by Carrier top 3 OPTION(preserveType='true')\n{\n    \"aggregationResults\": [\n    {\n        \"groupByResult\": [\n        {\n            \"value\": 652.0,\n            \"group\": [\"HA\"]\n        }, {\n            \"value\": 635.0,\n            \"group\": [\"UA\"]\n        }, {\n            \"value\": 583.0,\n            \"group\": [\"DL\"]\n        }],\n        \"function\": \"max_AirTime\",\n        \"groupByColumns\": [\"Carrier\"]\n    }],\n    \"exceptions\": [],\n    \"numServersQueried\": 1,\n    \"numServersResponded\": 1,\n    \"numDocsScanned\": 115545,\n    \"numEntriesScannedInFilter\": 0,\n    \"numEntriesScannedPostFilter\": 231090,\n    \"totalDocs\": 115545,\n    \"timeUsedMs\": 20,\n    \"segmentStatistics\": [],\n    \"traceInfo\": {}\n}\n``. TODO: This fix won't preserve types for group key for aggregation group by queries..  #2715\n. #2715\n. LGTM. @jfim I spent some time on adding this to existing test code. However, it will require a lot of code change because we perform sorting on column names when deciding the order for projection. This causes the comparison to fail. (I checked that the returning results are the same rows but columns are in different order) I will address this as a separate pr.. @mcvsubbu SinceSelectionOrderByOperatorrequires a lot of information (IndexSegment,ProjectionOperator, which again requiresdataSource,Block,DocIdSetOperator..etc), I assume that it's the reason why we don't have the unit tests that covercom.linkedin.pinot.core.operator.querypackage. To me, it makes sense to cover this via integration test because adding unit test is also a large work for testing simple filtering logic added in this pr. Ideally, I agree that we should cover in both unit/integration tests. Anyway, I will work on addingselect * ... order byquery in integration test.. #2715. @nilesh-kanawade  Can you retry with JDK 8? It seems thatsun.*` are removed since JDK 9. I have found some similar issue from the other project https://github.com/bitcoinj/bitcoinj/issues/1477. When I tried to limit the bloom filter size to 1MB (by computing max false positive using formale), I found that clear spring implementation does not behave as expected for the cases when we have high cardinality while Guava implementation is working as expected. Please refer to the size of bloom filter (Guava's bloom filter size is correctly capped at <1MB while clearspring implementation uses larger size). It seems that Guava's implementation is more robust with the capping the maximum size of bloom filter. @kishoreg \n```\ncardinality: 1,000,000\nnumHashFunction: 4\nmaxFalsePosProbability: 0.05\nnumBitsRequired (Estimated): 6235225\nrequiredSize (Estimated): 779403\nclear spring size: 875085\nGauva size: 779414\n\ncardinality: 3,000,000\nnumHashFunction: 2\nmaxFalsePosProbability: 0.2610525068636746\nnumBitsRequired (Estimated): 8386047\nrequiredSize (Estimated): 1048255\nclear spring size:1125085\nGauva size: 1048262\n\ncardinality: 5,000,000\nnumHashFunction: 1\nmaxFalsePosProbability: 0.4490143136505804\nnumBitsRequired (Estimated): 8332767\nrequiredSize (Estimated): 1041595\nclear spring size: 625085\nGauva size: 1041606\n\ncardinality: 10,000,000\nnumHashFunction: 1\nmaxFalsePosProbability: 0.696414773438059\nnumBitsRequired (Estimated): 7530599\nrequiredSize (Estimated): 941324\nclear spring size: 1250085\nGauva size: 941334\n\ncardinality: 30,000,000\nnumHashFunction: 1\nmaxFalsePosProbability: 0.9720203742797628\nnumBitsRequired (Estimated): 1771985\nrequiredSize (Estimated): 221498\nclear spring size: 3750085\nGauva size: 221510\n\ncardinality: 50,000,000\nnumHashFunction: 1\nmaxFalsePosProbability: 0.9974212860608853\nnumBitsRequired (Estimated): 268710\nrequiredSize (Estimated): 33588\nclear spring size: 6250085\nGauva size: 33598\n```. Updated bloom filter implementation\n\nChanged the implementation to use Guava BloomFilter library\nAdded unit test for bloom filter\nEnforcing the maxmimum size of bloom filter to 1MB\nCreated bloom filter interface in order to make it easier to add other types of bloom filter (e.g. offheap)\n. #2715 . At the end of the command, we now print the following logs.\nMin start time / max end time for input segments : 1530403200000 / 1533080700000\nMin start time / max end time for merged segment: 1530403200000 / 1533080700000\nTotal number of documents for input segments: 81464\nTotal number of documents for merged segment: 81464. #2715 . @npawar Thanks for the confirmation. I'm merging the pr.. ```\nBefore fix\ntimeMs:10, docs:20/15593300, entries:0/2, segments(queried/processed/matched):2/2/80 servers:1/1, groupLimitReached:false, exceptions:0\n\nAfter fix\ntimeMs:14, docs:20/15593300, entries:0/80, segments(queried/processed/matched):2/2/2 servers:1/1, groupLimitReached:false, exceptions:0\n``. @sunithabeeram Can you double check ifcopy` is creating necessary parent directories?. @icefury71  Can you try the following?\nhttps://join.slack.com/t/apache-pinot/shared_invite/enQtNDY4NDczOTYyNjk1LTExODVjY2QxYzBkMzJjNTk0ZGQ3NThiYTU2YzdlNjE0MWI5ZjUwYjI2ZTgxNjNiYWJiNmEzYjkxMTIzMzUxNTQ. @kishoreg Do you think that the code for thirdeye also need to follow the same rules? It seems that it's not the usual case since we won't include thirdeye code for our release but we share the same repository.. Thank you for working on this!. After discussion with @Jackie-Jiang offline, we have decided to stick with the current license-maven-plugin.. @felixcheung pinot-perf module includes some benchmarking codes that are mainly used for measuring performances (e.g. dictionary, index reader, query engine..etc). Given that this is mainly for testing, I don't think that we need to include this for distribution package.. @felixcheung As you mentioned, pinot-perf will still be included in the source code distribution while it won't be a part of binary distribution. I have added the documentation on how to build & run pinot-perf module from the source code and added a note that this module will pull jmh which is under GPL 2 license.. After removing category X dependency and removing \"pinot-perf\" from distribution package, we are bundling 109 external jar libraries and 9 js/css libraries within the source code. After this pr, anyone who's changing version of any library or adding a new library needs to update NOTICE & LICENSE files.\nThe extensive list is present at the following spreadsheet https://docs.google.com/spreadsheets/d/1lMEEvrA8SqHe0Yy0yC2Nd-nN5lg5sPaNwihrj_--y8Q/edit?usp=sharing\n. @felixcheung  @olamy Can you check this when you find the time?. @kishoreg In my understanding, we have 2 approaches.\n1. copy license in /licenses and point that in LICENSE\n2. copy license directly to LICENSE file\nWhich approach do you prefer?\n@felixcheung Please correct me if I'm wrong.. > My take is if it's MIT license it needs not be included:\n\nhttp://www.apache.org/dev/licensing-howto.html\nhttp://www.apache.org/dev/licensing-howto.html#permissive-deps\nhttps://www.apache.org/legal/resolved.html#required-third-party-notices\n\n@felixcheung @kishoreg \n```\nBundling a dependency which is issued under one of the following licenses is straightforward, assuming that said license applies uniformly to all files within the dependency:\nBSD (without advertising clause)\nMIT/X11\nIn LICENSE, add a pointer to the dependency's license within the distribution and a short note summarizing its licensing:\nThis product bundles SuperWidget 1.2.3, which is available under a\n\"3-clause BSD\" license.  For details, see deps/superwidget/.\n```\nIt seems that the pointer is needed for BSD, MIT licenses. The example above has the link pointer to the full license deps/superwiget. Am I reading this incorrectly? \nAs long as we don't violate the license issue, I can go ahead for removing copied license files from /licenses for BSD, MIT.. @felixcheung The current pr includes the license with MIT and BSD under /licenses. I also dealt with license vs license-binary. If you don't have any other concerns, would you give me a shipit along with the final check?. @felixcheung This addresses the issue of including LICENSE-binary, NOTICE-binary, /licenses-binary for binary distribution tarbell. #3722. @mcvsubbu I don't think there's a way to do that. I have checked at least 5 apache projects and they all have version for each sub module. However, maven-release-plugin will handle updating versions in the pom files. I added the plugin along with this commit (I still need to do some study on how to use it correctly). Once I have a good understanding on end-to-end release process. I will write up the doc.. https://www.apache.org/legal/src-headers.html. There's an ongoing work on modifying record reader's validation logic for time column in https://github.com/apache/incubator-pinot/pull/3895\nDepending on that, you may need to add some extra validation logic for time column. Let's wait until that's resolved.. #3895 has been merged. Can you make the required changes after looking at the change happened in that pr? The main issue was to handle time column when the column name for incoming & outgoing time spec are different. . e.g.\nProcessed requestId=192,table=test_OFFLINE,segments(queried/processed/matched)=2/2/2,schedulerWaitMs=2,totalExecMs=360,totalTimeMs=362,broker=Broker_localhost_8099,numDocsScanned=11672398,scanInFilter=15593300,scanPostFilter=2,sched=fcfs. @jamesyfshao Does Kafka pass any exception when the incoming message size is larger than the buffer size? This still does not fix the issue of silent failure. Logging error or throwing exception when it happens would be a good start. Ideally, we should be able to recover from the such situation and let users to pick on the behavior when such failure happens.\n\nthrow exception and stop consume message until a user restarts server with the new config if they don't want to skip the message.\nIf their use case can tolerate skipping messages, we need to continue to consume from the next offset.. @mcvsubbu I checked it locally and it shows the images correctly.. Out of curiosity, why do we allow different incoming and outgoing time column names? What would be the use case that requires this feature?  I think that it's better to enforce those two column names to be the same.. As we discussed offline, we should do the following:\nremove license check for _themes\nremove apache license header for external code (css, html, js..etc) and keep them the same as the original code.\nupdate LICENSE file. @kishoreg We currently log within QueryScheduler in server and BaseBrokerHandler in broker. Unless we log in the separate thread, we should not use rate limiter since it will block threads in the critical path. Even if we write logs in a separate thread, task queue will grow indefinitely if incoming logs are queueing much faster than maxRate. How do we address this?. @kishoreg Oh I think i misunderstood your comment. So, I think that you meant dropping logs once we reach maxRate. That makes more sense. I will make the change.. Perf stress test result: \n\nExperiment setup: 1 broker, 1 server, 1.5k qps, internal production data & query\noriginal code (no throttling)\nbroker side avg 99th percentile latency - 83ms\nserver side avg 99th percentile latency - 8.3ms\nserver side avg 999th percentile latency - 85ms\nthrottling log at maximum rate of 100qps\nbroker side avg 99th percentile latency - 44ms\nserver side avg 99th percentile latency - 12.63ms\nserver side avg 999th percentile latency - 31.8ms. @mayankshriv Identifying what files need to be deleted takes 2 lines of code and performing deletion is ~3 lines of code. removeSegmentsFromDeletedDirectory() also performs the deletion of empty directories which has the similar logic (identifying and deletion). Then, this function (~20 lines) needs to be separated into 4 short functions. I feel maybe we are over-splitting the function. What would be the better approach? . I followed the pattern from the function removeSegmentFromStore() which already existed in the Segment Deletion Manager. I think it should be at least warning. I will make the change.. @jfim getAllTableNames() actually fetches brokerResource and there is a separate method called getAllPinotTableNames() which filters out the brokerResource. So, getAllTableNames() is a misleading method name. I will create another PR to address this issue.. @jfim Please take a look for tearDown() method.. done. done. done. done. done. done. good catch. I forgot to change that.. same as above. We don't need 'mirrorAssignmentAcrossReplicaGroups' when creating the mapping table. The mapping table specifies the replica group for each partition or table and 'mirrorAssignmentAcrossReplicaGroups' affects when picking a server from the replica group. In other words, its setting does not change any information in the mapping table side. We definitely need it for the segment assignment part.. This mapping table is used for offline segments only. In terms of routing for LLC, the broker will look at KAFKA_PARTITIONS and pick one server for a partition (in my understanding).. I removed unnecessary sleeps for all tests. (160sec -> 5sec). The sleep in this class is to wait for the external view picking up table or segments update. Waiting 2-3 seconds for each update seems too long. Anyway, thank you for the comment and I will be more cautious from the next time.. The second one supposed to me /tables/{tableName}/segments/crc/. Fixed.. Fixed. I think we should add the check in the routing table builder factory. If ReplicaGroupStrategyConfig does not exist, we should use the default routing builder.. done. After the discussion with @Jackie-Jiang , we can keep the current behavior for the case of no server found vs no server found due to pruning. I initially thought that no server found means the failure case where no server is alive for a segment. However, this covers more generic cases (i.e. empty table). In case of all servers down for a segment, all of broker builder implementations would throw an exception so it won't go through this code path.. I will address this in separate pr for partition aware routing for realtime.. I will address this in separate pr for partition aware routing for realtime.\n. done. I will handle this with separate pr with realtime. If there is no partition information, I sequentially assign replica id for each server and add it to look up table.. This part of code is borrowed from KafkaLowLevelConsumingRoutingTableBuilder and I will clean up this part from another pr. Anyway, the reason for using SortedSet here is to be able to pick the first segment that has CONSUMING state.. done. done. If the segment zk metadata for the segment is somehow missing, this can be null.. done. done.. done. I was not aware that the realtime segments do not care about the push type. I removed this check.. Same as above. done. done. This is the case when all replicas for the segment are missing. (i.e. no server that holds this segment is found). serverInstance = replicaId2ServerMapping.values().iterator().next() will get the different replica. . Thank you for explaining the context of serial assignment. If that's the case, we cannot enforce this optimization. I will remove this TODO comment.. added TODO comment on SegmentId class. I moved out this fake property store from RoutingTableTest. Some tests in RoutingTableTest require IZkDataListener and these lines. For the new tests from the PR, they don't use any functionality of listener so they are always passing correctly.. done. done. done. This is getting called from ClusterChangeMediator which uses a single thread. So, I think that we don't need synchronized method.. I will address this from the separate PR.. This code looks the same as the code above. We can probably take out these as a separate function to reuse the code. i.e. addToPriorityQueue(priorityQueue, maxSize). Can you update this error status code to @Responses?. private?. I think it's better to put the name of the test to what it is actually testing.. better name for zkStr?. Since we are always running the test locally, we can always set the hostname to localhost.. zkStr. change this to QUERY_FILE_NAME. maybe you can use static final?. I think it's good to leave TODO or a comment to indicate that you try to keep the same logic as before. I can see we are not checking creation time here while the controller side checks it. Eventually, this part can even be removed as we discussed offline.. I think that you need to pass name instead of timeUnitName.. same as above. Can you explain why you changed this function to static?. Code can be written more briefly if we write \nfor (int i = 0; i < length; i++ ) {\n    long inputTimeMillis =\n    inputDateTime.setDate()\n    switch() {\n        case WEEKS:\n            outputTime[i] = ...\n        case MONTHS:\n            outputTime[i] = ...\n        ...\n    }\n}\n. wrong indent. LOGGER.error would be more suitable?. LOGGER.error same as above. Is this something that you missed or purposefully left it out for future PR? I think we can add the helper function in ControllerTest that sends PUT request and returns the response code instead of response body text.. same as above. same as above. Rename test?. delete this line. . swap actual, expected result.. good catch \ud83d\udc4d . Yes. If max length > query length, substring() will not create a new string object.. good catch \ud83d\udc4d . Add a comment that this check is for new entry to the list.. Maybe we can move up to if((tokens==null) || (tokens.length)...?. Isn't this unnecessary? _paddingByte is already included in ImmutableDictionaryReader.. It seems that we use 0 for checking whether to use unpadded or padded. Can we use public static final?. I will work on porting to Jersey for the next release.. What is the reasoning behind for keeping comments in MCombineGroupByOperator and removing from this class?. I will remove this.. I will remove this. I forgot to check this part after borrowing code from server admin api.. I set up the swagger for broker with this migration. Since server also has swagger api, I think that there's no harm to keep swagger. How do you think? Broker has total 4 apis (health check, routing table, time boundary service and query). I checked the code so if the string is empty, trace enabled will become false because it's using Boolean.parseBoolean(). I think I can remove isEmpty() check.. combined. I will address this from another pr. added. Input query string for this method is decoded. removed. Thank you for changing names for this part. It's much easier to read.. I think that this changes the behavior of the function. If tableName exists but cfg.buildRequestRoutingMap() returns null or empty table, it previously returns false. After your change, it will return true. Is this an expected change?. I think it's better to keep the comments for step 1,2,3.. Can you explain the logic behind of putting volatile for this variable?. fixed.. fixed. removed. Let's choose empty line or no empty line between com.linkedin.pinot... and java... and make all classes consistent.. Same as above.. Can we add the documentation on the reason why you put this as protected? I see that you put the explanation on the pr message but it would be helpful to put a documentation here.. Space ? BaseFilterOperator {. I will address starTree with another pr.. Discussed offline. Discussed offline. We should not emit the metric if the query does not perform group by. Current implementation seems to emit 0 for that case.. Can we rename to RebalanceSegmentStrategyFactory?. This will require us to restart the controller in case we change the segment assignment strategy since RebalanceSegmentsFactory is a singleton class. Do you prefer to leave this way or do you think it's better to create rebalance strategy every time we need to use?. I think this function can be shared across the RebalanceSegmentStrategy. One way to achieve is to make an abstract class BaseRebalanceSegmentStrategy and make all the implementation extends that. Another way is to change the interface not to include the update to zk and pull this function up to PinotHelixResourceManager. I personally prefer to the latter.. Adding spaces back would look better?. I would prefer to keep this interface for computing new idealstate mapping. I think we can put the write to zk in HelixResourceManager. How do you think?. This should return UniformPartitionAssignmentStrategy by default if we don't want to break the current tables. The factory should already take care of that, right?. Can we change this API to return both new idealstate mapping and partition assignment in a JSON format? This will be helpful for debugging since this API can potentially update ZK twice. We should be able to see both when we run with dryrun flag. For offline table, we can return the partition assignment as empty.. I think you are doing correctly. This should be the same as the logic from LLC segment manager, where it fetches the partition information from Kafka. PinotTableIdealStateBuilder.getPartitionCount is the correct wrapper for doing that.. If you make this line as a function, the code may look simpler since they are repeating a lot. resetGuage(ServerGuage.LLC_PARTITION_CONSUMING) This is just a suggestion.. I think I can extend PartitionAssignment class to represent ReplicaGroupPartitionAssignment. Or, we can also introduce PartitionKey and implement ReplicaGroupPartitionKey as Neha suggested.. Why not use segmentName?. Can you add the documentation for this helper function?. I know that you didn't add this but I think we should remove this?. 3xx is redirection. Can you add some documentation why we would want to regard this as an \nerror?. IOException, HttpErrorStatusException instead of Exception. I think this approach would be more simple. If we introduced PartitionKey, we will need to make the current existing realtime partition assignment compatible (e.g. 1 -> 0_1).. fixed. . added precondition check. numInstancesPerReplicaGroup will be better name but as you said, it's already in table config. I changed the name for numPartitions. moved. What if we keep BaseRebalanceSegmentStrategy and make this rebalanceIdealState method as abtract method?. Can you add the logging information that the table is using high level kafka consumer so that the partition assignment would be empty?. Maybe we can create a blocking retry policy?. No, I'm changing the code following the convention from DefaultRebalanceSegmentStrategy.. changed.. changed. changed. Yes, I'm following DefaultRebalanceSegmentsStrategy. thanks for the catch. I updated the code to reuse it.. I reordered the validation.. good catch. I removed the check.. changed. fixed. added check for realtime tables. fixed. fixed. fixed. changed the comment. In case of downsizing the replica group, we will need to re-distribute the segments from removed server. For example, if we use mirroring, taking away 3 servers with the same segment assignment will cause the inaccuracy of query result until the segments are redistributed because we won't have some segments available while rebalancing. I'm indicating that for the log. Do you think it's unnecessary?. I recently added code to update the replica group mapping (INSTANCE_PARTITION) when the user updates the table config from non-replica group to replica group one. Imagine that some segments get pushed before you run the rebalancer. Then, all the config will indicate that you have the correct replica group configs while some segments are assigned based on default strategy and others are assigned based on replica group strategy. In this case, the rebalancer will behave in a weird way if the user do not use \"bootstrap\" mode explicitly. Solution to this problem will be either to make sure all the segment is covered only for once within the code, or to throw an exception and provide the message to use \"bootstrap\" mode. . fixed. added comment. added log. as we discussed offline, I removed this bootstrap mode. Startree index generation will simply call recordReader.next() while this sorter only changes the order of docIds that are returned by recordReader. So, it should work with startree index generation. Currently, no-dictionary and multi value columns are features that are not supported. I will catch these cases upfront at the PinotSegmentSorter.. Correctness is fine with the current code but we can save some computation by adding break statement. I added the break statement.. If the sort order is not specified, the reader will not attempt to sort. It will only concatenate the records. I will add the documentation.. Added java doc for all public contructors.. Can you add some information why we are throwing IllegalStateException?. \ud83d\udc4d . Rename file to MutableSegmentTest.java. MutableSegmentTestUtil. \ud83d\udc4d . Can you explain what noinspection means here?. Naming for segments are not consistent. You changed OfflineSegmentDataManager to ImmutableSegmentDataManager above while you are keeping RealtimeSegmentDataManager here.. Either throw the exception from rebuildBrokerResourceFromHelixTags() and catch here, or you can throw one kind of exception for all errors. Or, you can move table check here (Many ways to achieve this). Let's not catch it by looking at the message.. You should not throw any web application related exception in PinotHelixResourceManager.. This is the side effect because you throw web application related exception in rebuildBrokerResourceFromHelixTags. ValidationManager does not do anything with webapplication. . code = 200. Let's clean up unused exceptions. this is not used. Subbu meant InvalidConfigException. I don't think we need this check since you are already checking tableConfig == null within rebuildBrokerResourceFromHelixTags(). remove this. You can catch InvalidConfigException and throw 400 error since invalid config exception indicates there's something wrong with the user input and for the rest of other exceptions, you can throw 500 error.. Need to add the header for all new files. (check travis log). Can we add one line for each ApiResponse for better readability?. \ud83d\udc4d like this. realtimeTableName should be the same as the tableNameWithType. Let's clean up to use one variable for the same information. You are using realtimeTableName for fetching schema while using tableNameWithType for exception log.. We prefer tableNameWithType when the table name has _OFFLINE or _REALTIME suffix. In this way, we can directly know that the variable contains the suffix.. I think that it looks better before auto-format for this case? (up to your judgement). You can build the schema object and call schema.getJSONSchema() to get json string.. Is this used outside of this class? Otherwise, let's change it to private. fixed. fixed. I would want to enforce to contain all columns. I will add this to documentation.. Instead, I put the builder inside of SegmentConverter.. I guess the this is not needed?. As discussed offline, write to volatile int is atomic. . Is there any case where we have columns not specified in RawIndexCreationColumns but specified inRawIndexCompressionType? I think that it makes more sense to explicitly check RawIndexCreationColumns only.. Can you clean up the constants from all hadoop jobs (SegmentCreation, SegmentTarPush, SegmentUriPush)? We use some of constants from this class and we use hard coded values for some other constants (e.g. push.to.host, push.to.port). I think that you need to provide the backward compatibility in case when no push location is provided. This will affect to people outside who are using this push job.. forgot to remove after debugging. removed.. Do you want to enforce that the table config must contain time column name & type for APPEND case? I think that we should add the validation code rather than printing the previous log and throwing null pointer exception.. removed. I checked that all of our production jars are pulling 3.9.6.Final. This is for helix, zkclient, and hadoop jar. Pinot code use different netty (io.netty - netty-all). This makes sure that segments that are built and pushed from Hadoop are valid.. Starting Hadoop cluster is very slow. I will first let this in and if it causes transient errors, I will bump this number up.. I initially thought that adding this may help since I need to post schema anyway for hadoop segment build and push integration test. But I don't think we need this now. I will remove them back.. As we discussed offline, I moved this to HadoopSegmentCreationMapReduceJob. Where do you run properties.set(JobConfigConstants.TABLE_CONFIG, tableConfig)? It should be somewhere in SegmentCreationJob. I think it's better to put null check like if (tableConfig == null) return; in order to avoid the nested if statements.. You already have indexingConfig variable. No need to fetch it from the tableConfig again. Please change all the tableConfig.getIndexingConfig() to indexingConfig.. Is there a particular reason to explicitly set this to null initially?. Can you add LOGGER.info below where we print out all configs? (after *********************). I took it out as enum called MergeType. . fixed. refactored. removed the validation since the same validation happens when we initialize MultipleSegmentRecordReader. Otherwise, I will need to put ValueAggregatorFactory.ValueAggregatorType.SUM.name() which is much longer than SUM string. How do you think?. good catch. changed. This function never gets called. I will merge after testing.. good catch. I was testing this and forgot to change.. If the storage quota was enabled by default before this change, I think we should turn this on by default. Otherwise, it's not backward compatible and may affect to users outside.. I guess this can never be null after your fix?. we cannot use e?. Where do you get retryCount and retryWaitMs? If they are instance variables, please reformat to _retryCount and _retryWaitMs. Can you change the variable name to fixedDelayRetryPolicy?. yeah you're right \ud83d\udc4d I got confused.. What is the plan for the migration after you implement async request handler? After your refactoring, we will have multiple implementations of broker request handlers. We may need to consider to add the configuration and use the factory to initialize broker request handler (and use async one by default). . Should it be LOGGER.error?. Same here (LOGGER.error?). I think that reorderFilterOperators should be better. Since this is an edge case, can we check separately when cardinality = 1? Currently, it will hit 1 with very very low chance.. Can you put some comments on how we decide the number of bits per value in high level with some simple examples?. removed the annotation. fixed. Can you briefly add the explanation on how we define missing intervals here?. changed to NUM_GROUPS (number of routing tables) * 10. done. Can you separate out the BOOLEAN? Comment can be misleading.. Renamed to MergeSegments. Added NormalizedDateSegmentNameGenerator. Because of compatibility with pbnj, I directly implemented SegmentNameGenerator interface.. changed. fixed. fixed. fixed. fixed. done. done. done. done. i will handle this on the separate pr. fixed. changed the code to support comma separated multiple files and/or directories and also nested directory.. I changed this to support comma separated files/directories + nested directories. Also, I added to throw the exception if the given input path is not valid.. You may want to remove int rows here as well.. You probably wanted to throw FileNotFoundException instead of IOException?. I think that our hadoop job supports CSV, JSON, THRIFT format as well.. Can we add the instruction on how you push the segment outside of hadoop? We can provide the sample command with UploadSegmentCommand. added comment. done. good catch. I added the version to segment merge lineage but decided to remove. I removed this. . I think that we should limit the number of groups when assigning the merge job, not from the lineage data structure. . added comments on what we are storing for segment merge lineage data structure. addSegmentGroup will be called in 2 places.\n\nRegular segment upload (via pbnj) : for original segments, we keep the group level 0 with children = null.\nMinion merge task calling Controller API(will be added with the other pr): in this case, minion job needs to provide the children groups and call controller api to update segment merge lineage. \n\nI tried to keep API parameter as simple as possible because the minion task has limited information (although we can pass more information to task as task config). I think that we can revisit this issue for the pr for controller api.. added. fixed. added. fixed. updated. fixed. added an example in the class header. for now, I would want to keep them separate. Once the merge feature is done, I can work on cleaning up the pruner (currently, it's closely tied with PartitionAwareRoutingTableBuilder and we need to decouple them). As discussed offline, we concluded that broker routing builder requires the re-structuring on class hierarchy. I will add the comments about it and will address later with the separate clean-up pr.. changed the name of the class to SegmentSelectorProvider. License header is required at the top of all the files. I think that it's better to indicate int to the function name since this is specific to getting an int value. e.g. getIntConfigWithDefault . I think that this function should locate in the base class that defines simpleConsumer. Can we move this to KafkaConnectionHandler?. If we generate the tree programatically, i still won't have the result to test against. I can probably come up with another implementation of the same logic directly from hashmap representation (not using tree). I will add this as a separate pr for improving testability of this segment selection logic. For now, I expanded the testing case to cover more edge cases with a fixed example.. Are we using FieldSpec in this class?. Can we remove these lines?. I just checked Spark's source code and binary distribution. For the source code, they include LINCENSE, NOTICE file for source code distribution while they include LICENCE-binary, NOTICE-binary for their binary distribution. I will keep 2 different license files one for source code and the other for binary.. Separated out LICENSE, NOTICE into LICENSE, NOTICE, LICENSE-binary, NOTICE-binary. LICENSE, NOTICE will be included for source code release while LICENSE-binary, NOTICE-binary will be included for binary distribution.. RC versions are release candidates, not the official releases. If 2.27 version contained the fix that we need, I would use that.. Can you add TODO comment to remove range format in the future?. I think that we need to check both numbers in the range. When a segment includes partition 0-9, I have seen something like partitionRanges: [0 9], not [0 0], [1 1] ... [9 9]\n. I guess that removing the above assumption is TODO task? Can you update the comment what needs to be resolved?. Same as the above. This will change the behavior. I have checked that DataSchemaSegmentPruner is checking if all columns from the query exists in the query request. Checking column is enough for checking column metadata existence?. Those files are the part of the git repo (they are used for some UI components. e.g. pinot query console). After checking in this, I will file a separate PR for handling the build to include LICENSE-binary for the binary release.. Is this comment still valid?. Thanks for the catch. I will resolve it with a follow-up pr.. I actually considered that. However, that will cause the issue when people try to build the binary tarbell from the released source code since the source release won't contain -binary files. Spark seemed to have the same issue and their decision is to remove -binary files from the source release. Side effect is that people cannot build a completely valid binary release from the released source code. https://github.com/apache/spark/pull/22840\nOn the other hand, I checked that Apache Flink is using similar approach as Spark (dividing LICENSE vs LICENSE-binary) and they include -binary files to their source code. You can check it from https://www.apache.org/dyn/closer.lua/flink/flink-1.7.1/flink-1.7.1-src.tgz\nI would prefer the latter since it allows our users to build a valid binary tarbell (with correct LICENSE, NOTICE). \n@felixcheung How do you think?. Thirdeye (Anomaly Detection Platform) is a separate project and this won't be a part of Apache Pinot distribution. We are sharing the same repository because Thirdeye is interacting closely with Pinot as its primary backend storage layer and it's using many parts of Pinot code. In my understanding, Thirdeye will move out of this repository in near future.\n@kishoreg @apucher @xiaohui-sun @raviarin Can you guys also comment on the plan for Thirdeye?. fixed. I think that we should pick either LOGGER or _logger and make them consistent. I think that we have both. . This will make _defaultPermissionsMask to become null if key does not exist?. This change may break hadoop jobs for people out side if they do something similar to PBNJ (importing pinot-hadoop jar for their hadoop job project). For now, I think that this is fine; however, it's going to be hard for us to change the constructor in very near future. Once we publish our jar files to public maven repo, this kind of change should happen in multiple steps. (Add constructor, add deprecated annotation, remove them with the major version bump).. I think that it's better to expose JobName to be configurable. It's fine to include that within properties and read it back along with other config instead of having it as an input variable for constructor.. I think that we should add some logging in this constructor so that we can use those info when debugging. (e.g. we logged the information about segmentNamePrefix is set to segmentName when it's null.) Or, do you want to call toString() method on the upper layer?. +1 on moving sequenceId to generateSegmentName instead of passing it via constructor.... done. Can you download pinot codestyle file and apply it to this file? It's located in config/codestyle-eclipse.xml or config/intellij.xml.. remove empty line. remove line. I think that you can keep ParquetReader<GenericRecord> in the ParquestRecordReader and put the following logic in there. In that way, we don't have to go back and forth to check the actual logic. \nIf this part is required for the issue of pulling dependency, can you add the comment why you need this 2 layer of record reader?. Is file:// necessary?. same here. Is file:// required?. From some of the voting mails that i checked, they do check if documentation files (.md or .rst) have the proper headers. So, I would prefer to keep them from the rat check.. Got it. For now, I removed the check from license-maven-plugin. But, during the release process, RAT plugin will check rst documentation files (RAT checks if the file has the valid license but it does not check whether the file has the exact text given in LICENSE file.) \nmycila/license-maven-plugin does not natively support rst file nor support .. comment style. http://code.mycila.com/license-maven-plugin/\n. fixed. This function is only applicable to testing code. Can you move this part to either Util class in test module or within ParquetRecordReaderTest?. Same here. . Will fs.defaultFS and fs.file.impl automatically get overridden when we run this on Hadoop?. Can you add public static final variable for DEFAULT_FS = \"file:///\"? Also, please add the comment on why we need to explicitly set this to file:///. Can you add the comment as I mentioned above?. Is there a way to avoid this repeating validation logic for each record reader? This makes hard for people to add a new type of record reader. For instance, outside contributor is working on adding a parquet reader https://github.com/apache/incubator-pinot/pull/3852\nOne approach would be always try to read incoming & outgoing time column values and do the validation based on GenericRow. abd -> and. Can you remove this.?. Can you make the variable name consistent? fetchRequestSize vs fetcherSizeBytes. Same here fetchRequestMinBytes vs fetcherMinBytes. I can see that increasing buffer size will enable Pinot to fetch larger messages. Other than that, what is the impact of increasing buffer? I guess that it will increase the throughput but may impact on latency?. I'm sorry to be picky but we generally use // for comments inside of the function and /** ... */ style for the comments above the function. Instead of ignoring null time column values, maybe it's better to throw the exception? How do you think?. I think that it has to be more specific docs/_themes/sphinx_rtd_theme/* and put its license as LICENSE-sphinx_rtd_theme.txt since sphinx project is different from sphinx_rtd_theme project. @mcvsubbu Some numbers would be use case specific. For now, I have put some lenient numbers. We can tune this as we needed.. changed to maxRate approach. This is no longer needed.. I was originally following the existing convention of schedulerConfig. Referred ResourceManager and it has query_runner_threads and query_worker_threads. I can do query.log.max.rate. Full config name will be pinot.server.scheduler.query.log.max.rate since QueryScheduler will only get configs with prefix of pinot.server.scheduler.*. I prefer to change all configs to be in *.*.* format.. fixed. added. oops. I will make a change. Thanks for the catch.. This won't work. Instead, it will log dropped messages whenever tryAcquire() succeeds. . added. Let's put the link for the below page. It gives us the extensive list of allowed/not-allowed licenses\nhttps://www.apache.org/legal/resolved.html#what-can-we-include-in-an-asf-project-category-a\nhttps://www.apache.org/legal/resolved.html#what-can-we-maybe-include-in-an-asf-project-category-b\nhttps://www.apache.org/legal/resolved.html#what-can-we-not-include-in-an-asf-project-category-x. space after $. same here. Is this added by the license plugin or added manually? If it's from license plugin, I think that we should fix the issue.. I changed it to query.log.maxRatePerSecond to make it consistent with broker. For query_runner_threads and query_worker_threads, I will address it with a separate pr along with checking other configs.\n. Can we rename this function? deleteSegment sounds like we are deleting segments instead of book-keeping.  It's confusing since we have another method called removeSegment.. Discussed offline. We can probably add the time based eviction and increase MAX_DELETED_SEGMENT_CACHE_SIZE.. instead of 0.1.0, we can put <version> since this will going to be changed periodically. ",
    "cecilynie": "Overwrite by https://github.com/linkedin/pinot/pull/1484. This PR is a better fix version that can overwrite https://github.com/linkedin/pinot/pull/1454 . Hi @newsummit, the format of returning projected mttd within this endpoint is the same with /**\n   * Get Minimum Time to Detection for Function.\n   * This endpoint evaluate both alert filter's MTTD and bucket size for function and returns the maximum of the two as MTTD\n   * @param id function Id to be evaluated\n   * @param severity severity value\n   * @return minimum time to detection in HOUR\n   */\n  @GET\n  @Path(\"/eval/mttd/{functionId}\") you already in use. Please use the same way as you process the non-projected mttd. @apucher It's because FE is fetching anomalies using anomaly function Id. The create user report logic  is adding anomaly function but not adding the function Id. From integration test I see the created anomaly has anomaly functionid=0. This is a quick fix. A better fix should be when adding \"anomaly function\", the functionId field should also be populated.. @apucher \"User-Report\" Anomaly is \"not notified\". Frontend is using \"notified flag\" to show the anomaly list, hence previously \"User-Report\" is never shown in the list.. split string: \"Severity, feedbackType\" to \"Severity\", \"feedbackType\" . This is to specify the alert filter's wrapper class. fixed. The AlertFilterAutoTuneFactory is kept only to trigger library's autotune wrapper class.. fixed. fixed. the function spec has alertFilterType. Thus when passing into a function id we know which alert filter has been tuned. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. fixed. After changing the props to contain all types of alert filter, the two types here can also be removed.. It's returning an interface since the wrapper class is not implementing the same base alert filter with thirdeye's. AnomalyFunctionDTO. Removed. Added Comment. They are not used in this class. fixed. fixed. also changed the name in autotune factory. fixed. fixed. fixed. fixed. . fixed to one function. fixed. fixed in another commit. fixed. fixed. fixed. Modify the previous class to contain all of the fields.. fixed. This tool is used to get auto tune results. Now is triggered locally. Later can be used to schedule auto tune jobs. For these values initialization I coped the way in \"FetchMetricDataInRangeAndOutputCSV\". fixed. fixed. It's not. Now put it as a place holder. The autotune job is now triggered only by endpoint. However I wonder in the future we will need to put it to worker. Thus I initiated it here.. fixed. fixed. fixed. without brackets. will update the comment.. can put it as \"/autotune/function\" to follow similar conventions in alert filter autotune. Please return an \"autotuneId\" to make it reusable for next steps.. remove this line. can be write as \"reply/function/{id}\" to follow similar convention with alert filter autotune. is it possible to set a default parameter for tuningJSON? If user has less background knowledge to tune it can be hard to use.. This can be a TODO: override existing autotune results by a method \"autotuneConfigDAO.udpate()\"  Leave it in the future. :). The only usage here is to do replay once using the input configuration. Hence only one clone function Id will be generated. Modify its name to lastClonedFunctionId.. AnomalyFeedbackType has been overrided.. fixed. Thanks for your suggestions @bl44 and @cyenjung. I'll close this pr and create a new one to generate initial anomalies report. - i.e. That's our actual goal. :) . Issue is resolved in https://github.com/linkedin/pinot/pull/1297. Can you be more explicit on what does \"includeOrigin\" do?. How do we deal with the anomalies from original function? It varies with the usecase:\n1. The cloned function is for replay and replace original function. You don't care about the anomalies from original function. You can erase the historical anomalies from original function\n2. If original function already have labeled anomalies, then you should always have \"isCloneAnomalies = true\". As suggested by @cyy0714, use a hashmap to track if this message needed to be send to users. The usage of this endpoint is to replay based on auto tune configurations, here auto tune Id will be used as principal if both are provided.. Sure!Thanks for your suggestion!. sure. fixed. there is a logic inside this enpoint, if isClonedAnomalies is not given, should always clone if the original function has labeled anomalies. This is to protect user information.. currentTime is not being used in anywhere this endpoint?. If a task always failed, will this cause an infinite loop. Should think about ways to give a hard limit for failed jobs to restart. if new autotuneConfigDTO is empty, are we designed to not update target Function? Let's log this difference, the original function setting is already optimal after tuning.. change while to if!. Since feedbackType cannot be null. There seems a gap between Feedback and FeedbackType. For feedbackType there is \"NO_FEEDBACK\", but if anomaly.getFeedback() is null, it then cannot access .getFeedbackType() thus as always we cannot utilize \"NO_FEEDBACK\" as an anomaly feedback?. If we have a default duration value, why we don't have a default duration unit?. The clonedFunctionId will always be overrided to the new clonedFunctionId, and in the end you only keep the very last cloned function Id. Shall we keep the name of \"lastClonedFunctionId\" or some what change to a better name to specify this logic?. If is selfKipp, clonedFunctionId is also being deleted. What about the clonedFunctionId contained in Runnable?. I have reduced the \"property\" to contain only the configurations.  There are two facts that I see when doing integration test:\n1. Repeated information are being stored in both anomaly.getProperties() as well as anomaly.getFunction().getProperties(). They actually were storing the same function settings, i.e. signTestPattern:\"UP,DOWN\". Then I re-designed to put only the one side function configuration into anomaly.getProperties()\n2. It is hard to decode test_config (key,value) when do update in merge, we want to use the specific one side configuration rather than the two sided anomaly function property. If we really want to recover tag to lift/shift values, we need anther encoder and decoder for anomaly function config tag.. fixed. fixed. fixed. Keep the logic as it is here, and change the function isMergeable to isEqualOnMergeableKeys.\nThis if-statement is doing a comparison on sequentialAllowedGap and if is equal on mergeable keys.\nSee line 109 is comparing on maxMergedDurationMillis\nThe AnomalyMergedConfig is fully used in this block of code, to really extract the isMergeable function needs to refine the whole block rather than simply this if-statement, hence changed the function name to specify the specific condition.. See the comment below. See the new commit for re-design.. This constructor is in fact hasn't been used in current codebase. Change it to explicit input arguments now. . Changed. But prop1 or prop2 will at least be an empty hashmap and won't be null. See how we initialize it.\nprivate Map properties = new HashMap<>();. If both prop1 and prop2 do not contain \"key\", which means the mergeable keys defined by anomaly function is redundant, or the both anomalies are not generated by the anomaly function.\nI think in this case we need to log it as an error, since both of the cases are supposed not to happen.. Fixed. fixed. Changed to use Map.Utils to avoid cases if props are null. It was set to warning for the latest commit. :). fixed. Changed to use field type. All of the \"DEFAULT_\" variables are defined as String, thus cannot judge the field type to assign value. But within alert filter class, there are private variable with the variable name in their correct type. Since within alertfilter class, for example AlphaBetaAlertFilter, the private variables are initially being assigned as DEFAULT value, thus here it will be equal to default value when missing. This is to parse the input, but the next block is to grab default value from the original class, thus they are different. fixed.. Add to throw Exception when field is none of these \"Double.class\", \"double.class\" or \"String.class\". Are we removing \"NO_FEEDBACK\" as well?. change this variable name accordingly since notActionable is being removed.. @cyy0714 Hi Yungyu, can you change the logic here when converting non actionable to new trend after Neha's PR? This will effect the precision on anomaly report.. If jobStatus = SCHEDULED, does jobDao still need to update?. Needs to make sure the front end can parse detectionJobIdMap (when it's calling a single function to replay still needs to parse this map in order to get the function's corresponding jobId). Thanks, fixed. fixed. fixed. removed this part, force function to take not null arguments. fixed, thanks for your advice!. Hi Steve, here we have a different configuration: hourly and daily metrics, speedup should be \"false\".. Do we have a convention what is the shortest frequency for minutes? I recall that ingraph is being refreshed 30mins. For sitespeed @cyenjung manually adjusted to 15 mins for quicker alerting.. Please also adjust the comment on line 320 accordingly. (Probably why changing the default time from 10 hours to 0?). Is inGraph itself being refreshed every 30mins? Though we do real time data retrieval, but inGraph is not real time?..This is an impression I got when talking to Ads POC, correct me if I'm wrong. . fixed code on line 473, modifying to if \"fail one fail all\".. Changed to check number of scheduled tasks. When time is reaching to limit and still number of scheduled jobs left not done, then jobStatus should be TIMEOUT. fixed.. fixed. fixed. thanks. Was giving the freedom to let user customize the subject of replay email. Modified to use \"Replay results for {alert name} is ready for review!\" \nAs for fromAddr, usually uses thirdeye_dev@ for testing, currently still leave it as a parameter and let frontend input the fromAddr.. Good idea! Put a TODO here. Need to discuss with @cyy0714 how to get this.. 1. Yes if no anomalies generated should not send out email to customer team. But how about sending an email to internal? Also logs number of anomalies generated to distinguish replay not run and number of anomalies = 0;\n\nFor now uses the same template. We can have a next step refinement, since anyway the url of tuning page should be included in this email as well. For now that is still under design & review.. fixed.. Put default to false since we don't want to mistakenly remove user labeled information. Here the wrapper endpoint is actually a use case when FIRST time do replay, which is assuming there is no anomalies exists in this anomaly function.\n\n'force' is whether to resume backfill is there is already any.. is JSON.stringify adding quotes around metricIds? how about passing a list of metricIds? Backend would expect passing metricId1,metricId2,metricId3\nHave we recently changed this part from frontend? Since searching by metricIds was working.. Thanks! LGTM :)). At line 127, smtpConfig has been assigned to thirdeyeConfiguration.getSmtpConfiguration();. speedUp is \"true\" for minutely metrics, speedUp is \"false\" for hourly/daily metrics, is the logic correct here?. Actually if it's hour/day speedup should be \"false\". Minutely should have speedup to be \"true\" since it has more data.. It's actually not. The logic is the same in old flow. Probably a bug?. Will do.. It's to be decided. AutotuneConfigBean contains entities to be wrote to db. Not sure if these tuning related properties need to put to bean.. It is needed in Anomaly Detection Library. . Do we want to use \"getFromAddress()\" to setFromAddress()? It can be a little bit confusing here we are using a \"toAddr\" to set \"fromAddr\". Same thing for EmailResource line 65.. The selected granularity for minutely metrics can be '5_MINUTES' or 'MINUTES' or '1_MINUTES', is there a better way that we can represent minutely metrics' granularities? Or here we can use \"HOURS\" or \"DAYS\" to represent the other two cases and set default value to be \"Sensitive\"?. It depends on the data source. For ingraph it can be either 1_MINUTE or 5_MINUTE, for sitespeed metrics I think they from a different data source (harrier) and being imported to pinot. Their granularity are being imported as \"MINUTE\". Probably needs to unify that.. Thanks for pointing this out. Changed in next commit.. fixed. thanks!. Please add explanation in javadoc for features. Thanks! . Here you are changing feature set. Please log the previous feature set and your updated features.. why setting Id to null?. setConfiguration or setAlertFilter? Only use setConfiguration can be put to database. If want to record to db, please use setConfiguration.. Please remove this line if we don't want to save current alert filter anymore. But better have it logged. Thanks!. Probably we can change this to \"AUTHENTICATION_TOKEN\" to make it more clearer?. Agree! Thanks for your suggestion!. Is it a conflict that if one anomaly function defines \"AnomalyRemoval\" functionality in  Transformation chain, but useHistoryAnomaly() is false. Or if use the new default value of \"useHistoryAnomaly()\" to be true, but failed to define any \"AnomalyRemoval\" strategy. Shall we come up with a way to finally unify \"useHistoryAnomaly()\" and \"AnomalyRemoval()\" in transformation chain? . Hi Alex, thanks for implementing this endpoint to take user-report anomaly. If there is already one (or more) anomaly overlap with user provided start and end time, shall we recover those as \"user-report\"? It will help on correcting tuning's training samples. Thanks.. Let me correct the purpose of having the match. Users' input time range can be arbitrary and can be interpreted as a guideline. In most of the case the start and end time of anomaly that user input can go beyond the region that the algorithm specify. User can have a rough impression to report (since in fact they don't usually know the accurate start time as well), thus we don't necessarily to take it as an accurate input. To make sure algorithm's anomaly removal + baseline prediction running properly, we need to 1) give user space to input anomalous region; 2) match user input region to existing anomalies (these anomalies are detected by the algorithm but just filtered out by alert-filter), following up with anomaly detection running, anomaly removal will be correctly done using the matched anomalies; 3) If no matches found,  run algorithm model selection (currently under design) to fully recover the user report. \nOverall, with user report anomaly, this is the only place to get matches, otherwise algorithm cannot pick up correct anomalies for removal, as well as auto-adjust the performance of algorithm.\nThanks!. Hi Alex, what's the \"notified\" flag for \"user-report\"? Here are two use cases:\n1. In evaluation module, it relies on \"isNotified=false\" to make classify user-report anomalies\n2. In search page (alert page), when showing anomalies is depending on \"notified = true\", but user report anomalies should also be shown on the page. You probably need to edit the logic of showing searched anomalies. (including user report, replayed anomalies) . Since this endpoint is already defining \"holiday mode\". Are we expecting user of this endpoint to input a specific \"cron\" to define the holiday mode, or within this endpoint it can figure our the default cron by the granularity of the metric already? Then what user's input on cron can be a customization on the alert specifically. . Hi Yen, here the get methods are all return (int) rather than (double), if casting them to double, will these shown on UI as \"number of anomalies = 10.0\"?. Hi Alex, thanks for providing this endpoint. Just realize the updateFeedbackRange should update feedback for the same dimension as with user report anomaly, can we please extend this endpoint to support dimension matching? Thanks. Added. thanks. fixed.. This endpoint will return one value of mttd, frontend can treat this return as a number which can directly display on UI.. fixed.thanks.. fixed. thanks. pr: https://github.com/linkedin/pinot/pull/2233. In fact changed to assign a default value to \"\", in case frontend don't pass in dimension information. fixed. I see examples from other places have \"Notnull\" as PathParam. Those need to be refactored sometime. fixed. thanks. fixed. thanks. Hi YungYu, if here we assert the input function properties should be not null, where do we generate the default function properties? Thought when creating functions, we are using the default values stored in anomaly function already.. Is this CRON the same with \"ALERT_CRON\"?. Hi YungYu, thanks for doing the test for onboarding tasks. Here are a bunch of parameters that can be read from thirdeye-configs, e.g. SMTP_HOST, SMTP_PORT. Since currently onboarding tasks is taking a JSON format of payload and convert it to configurations to run, should the input payload include these parameters that are already in thirdeye-configs? Note that frontend cannot commit configurations to its codebase. \nBy running the onboarding tasks end-to-end, I always failed on the \"NotificationOnboardingTask\" at the point when it's doing Precondition-check-not-null for parameters such as SMTP_HOST. Is this the design that frontend should pass in the parameters with regard to email sending, or we can let \"NotificationOnboardingTask\" to read from thirdeye-configs if it finds NULL for the configurations. Thanks!. Hi Steve, could you please modify the severity map to the latest version of the wiki, where the mapping is: \n\"Percentage of Change\" to \"weight\"\n\"Absolute Value of Change\" to \"deviation\"\n\"Site Wide Impact\" to \"site_wide_impact\" \nThank you so much!. I triggered the whole on-boarding using the endpoint +  @POST\n +  @Path(\"/create-job\") in DetectionOnboardResource.java from https://github.com/linkedin/pinot/pull/2230. I skipped the parameters that supposed to be injected from system such as SMTP_HOST / SMTP_PORT. But the whole onboarding task fails at \"NotificationOnboardingTask\" saying missing input. Is this a bug? . As the latest design, we don't need to take SENSITIVITY_LEVEL anymore.  Please change this to AUTOTUNE_TYPE, AUTOTUNE_FEATURES; AUTOTUNE_MTTD Thanks. AUTOTUNE_TYPE = \"autotuneType\"; AUTOTUNE_TYPE_VAL = \"AUTOTUNE\". Followup on this question: User can input 1_MINUTES, 5_MINUTES, HOURS, DAYS as to specify granularity. Later we probably will also support 15_MINUTES. How can we parse this input? format as (X)_(MINUTES) from users?. Are we casting all 1_MINUTES, 5_MINUTES, 15_MINUTES into \"MINUTES\" here?. fixed.. This is not using \"window size\" for Sign Test as the function. The mttd is based on minimum detection window, which is based on \"signTestWindowSize\" as the key from Sign Test.. Not an error as stated above. . Hi Yung-Yu, after a second think, these properties should have their own default values when using function. e.g. anomalyRemovalThreshold has defined in the class \"AnomalyRemovalByWeight\" in AD library. I recall that you have fully tested to trigger these anomaly function without any properties and they can still properly run. Here can we utilize the default values in AD library without writing explicitly these property values?. Thanks Yung-Yu. Since we are having the default setup in AD library, how about within this pr only merge the wrapper code for deploy? Thanks!. Hi Yung-Yu,  since here anomalyCandidates is a list with filtration rule being applied already, what's the purpose to use another list \"filteredAnomalyResults\" to store the same information?. Hi Yung-Yu, thanks for fixing this. do we check if the input recipients already exists in current recipient list? . Thanks fixed.. Fixed. Thanks. fixed. thanks for advising!. Is this a typo?. added. thanks. In this sense how do we come up with a generic way to fetch anomalies under an application. Noting this can be executed drastically in the dashboard that we are going to build. How can we make sure avoid code duplications and improve execution efficiency? . Hard to understand here, why we set the days to be \"24\"?. Thanks. Added. Please also let TE aware to modify the onboarded alerts using SplineRegressionWrapper on the additional properties. . ",
    "theseyi": "LG. Might be helpful to add a comment here on what the intention behind matching the charaters rand after the quantifier. Same here. You don't need a break statement in a switch's default clause as there are no more cases to fall-through. We don't use trailing commas as a convention. You have areturn statement above, the break is unreachable code and should be removed. Should this be an identity === comparison? This is preferred as a default except you're intentionally seeking the implicit type conversion with ==, in that case it is better to be explicit with a type conversion operation e.g. using String() or concatenating with an empty string literal '' + .... Hmm.. this may not actually achieve what you want... JSON.parse(\"\") will throw. Personally, if i'm uncertain of the input into JSON.parse I would encase in a try-catch block then subsequently check that value is valid. Object#hasOwnProperty() should be used here if you're sticking with for..in, or Object#keys on paramsToUpdate if you want to iterate with  Array#forEach. You can condense these lines 89-95 into one succinct default operation:\njavascript\nvar value = this.get(paramName) || this.set(paramName, defaultValue);\nor  even 88 -95\njavascript\nvar value = this.get(paramName) || this.set(paramName, paramNamesToDefaultValuesMap[paramName]);\nif the var defaultValue is not used anywhere else. Ember.set returns the passed in value. ```javascript \nreturn name && dataService.fetchMetricId(name);. You don't need parenthesis arounde. We generally by convention prefix $ elements with $, so$selectedElement, so it's clear to the reader later in the context that this is $ element as opposed to a DOM element. Seen, in that case since you have complete control over this input value, maybe a comment here indicating that, just incase another dev works on this codebase and might think this is a bug on first pass. Not sure, missing opening comment tag?. Seems you're missingforattribute or a nested phrasing element. Probably create a ticket for this and add in comment, or GH issue. \ud83d\udc4d . Deleted code is always the best \ud83d\udc4d . This is all throw away but I would suggest creating a new rule with a higher specificity as opposed to overwriting bootstrap classes.\nMaybe a new class, in a css file that gets loaded in after bootstrap. Would this be better served as an image element since it is content that conveys semantic meaning? Don't thinkbackground-imageis a11y friendly.. braces aroundreturn;. Isvalue1a global or outer scoped variable? or is this a typo?. Parameter types should be in curly braces instead of square brackets, also the suffixed colon:isn't part of the JsDoc spec. what is these arguments are missing?. Same comments as above for JsDoc. Why not use Array#forEach to iterate the anomalies? forEach is declarative, hence clearer and more readable than an imperative for loop. You can also simulate acontinuein a forEach by replacing it with areturn` statement:\njavascript\nif (!anomaly) {\n  return;\n}\nAlso you won't need to manually cache each anomaly in a local var. You can skip the else by defaulting to N/A and checking only for the valid case:\n````javascript\nlet changeDelta = 'N/A';\nif (current && baseline) {\n  const amount = (current - baseline) / baseline  * 100;\n  changeDelta = ${amount.toFixed(2)}%;\n}\nreturn changeDelta;\n````\n*Not a big deal if invocation is limited but you may also want to ensure that current and baseline can be parsed as valid numbers. Inline?. You could also just do\njavascript\n$(function () {\n//stuff happens here...\n});\nsynonymous with doc ready. I'd use Array#every in this case, it's more declarative than imperatively going through with a for...in since you're trying to check that each element meets a condition. Also allows for easier to read constructs, less lines and more maintainable. I would also add a comment so future you knows exactly what the intention of this code is and the \"why\".\nIt looks like you are trying to check, in the positive, that?\n- each param in params is a tab or a rand\n- each param is HASH_PARAMS.isSame as this[param]\nIf so, you can do:\n````javascript\n// **You can modify this comment, not fully aware of the context here\n// Check that each param is either a tab or a rand\n// and is the same as the HASH_PARAMS\nreturn Object.keys(params).every((param) => {\n  const isParamTabOrRand = ['tab', 'rand'].includes(param);\n  const isParamSameAsHash = HASH_PARAMS.isSame(param, params[param], this[param]);\nreturn isParamTabOrRand && isParamSameAsHash;\n});. Why the need to directly invoke the valueOf method?\nIf there's a special reason, might be helpful to add a comment here, otherwise, if it's just to unbox the variable / get the primitive value, i think having it in a template literal as you have, is sufficient hint for the js engine to automatically do the conversion. Ah, it's a Date object. Yea, the comment should help since it wasn't obv to me. I believe using the ember-native-dom-helpers should work now, given the upcoming change to testing in Ember. What's the intent of this run loop? Can the intended action be done in a more deterministic way rather than what is essentially a setTimeout operation?. ",
    "jamesyfshao": "a few things might need to be further worked on, depends on how critical they are:\n1. retry/wait for hdfs fetch failure\n2. more testing on kerberos or other hadoop authentication mechanism\n3. update on pinot startup script within pinot-distribution sub project to include hadoop depenency. will update wiki once the pull request is merged. @jfim updated based your feedback and cleaned up a bit more on httpSegmentFetcher following the recommendation/best-practice you provided as well, thanks for the review!. @jfim I have written a wiki doc for hdfs segment fetching under my fork: https://github.com/jamesyfshao/pinot/wiki/Pinot-Segment-Fetcher-Configuration. Please take a look if it looks fine and I will add it to linkedin/pinot wiki. Thanks for all the review and merging!. @kishoreg I definitely think that would make more sense. However, this might break certain users' segment fetcher as the current pinot logics allow users to implement their own extension of segment fetcher.. @jfim I agree this would potentially break users' expectation of Pinot behavior on deep storage. However, storing data on S3/HDFS without automatic clean up option could translate to higher storage cost for use cases that don't care much about pinot deep storage, especially given most of these files are just pinot segment files and usually not the source of truth at the moment. \nI would suggest that we should provide a configuration option to users to decide whether to perform deletion on deep storage (with the default being False and detail warning documentation). This feature would also require implementation of deletion logic in each customized segmentFetcher, so users could provide their own logic to handle proper deletion logics/configuration if they are loading from a customized deep storage location. . @jfim @kishoreg any comments on this proposal? Would you guys want to see a draft implementation and we can chat about whether it makes sense?. @jenniferdai hi Jennifer we are curious about the current progress of this effort? We did a bit exploration on the latest pinot code and I see that you have already implemented the logic for localPinotFS and HadoopPinotFS. However, some of the components still seem to use native file API instead of the generic file system API. (example). \nAs we are currently working on integrating low level consumer to our workflow, hdfs back up is an main blocker for us. I wonder if you have any plans/existing works on changes related to that? If not, we are thinking about contributing changes related to using hdfs back up for uploaded segment.. @mcvsubbu @kishoreg  the lag I referred above is the difference between the latest offset(high-water mark) of a particular kafka input topic partition and the consumer last committed offset for that topic. There are multiple scenarios that lag might increase:\n\nkafka input topic has surge in traffic and pinot consumer is not able to catch up, causing the lag to increase\nmisconfig/bugs in a particular pinot server caused it to slow down or stuck and not able to catch up with kafka input topic\nbug in kafka consumers that cause reset offset to an earlier offset.\n\nIf we have a pinot component that can help us to calculate the lag between the latest available offset for each partition and our consumer last committed offset and emit this information to pinot Metrics, pinot users would be able to set up alerts based on this \"lag\" number, either based on per-partition lag value or aggregated lag value. The scenarios we mentioned above would be captured easily.\nI would say putting such calculation in kafka consumer within pinot server would also be a great way to do it. The only problem is that it will not be able to catch scenario No.2 I listed above. However, it is a really uncommon issue and we could ignore it for now.\nFor using external Kafka monitoring service, it would be great if it is already available within users' infrastructure but it is an external dependency that we will require pinot users to set up and operate. I feel like it would be better if we could provide users means to achieve the same goal without setting up such external dependency. Also adding/removing consumer group to monitor (for HLC at least) when we add/remove pinot table is tricky to automated with external monitor services (with the reason I mentioned above).\nIf it sounds good, we will spend more time investigating implementing such metrics calculation logics within kafka consumer\n. > @jamesyfshao can we compute the offset in the controller without contacting individual servers?\nIt is possible to compute offset in controller (at least for hlc consumer) as pinot store the information about consumer group id, partition under property store zk node.\nExample zknode content about this info:\n```\n$ zkcli get /PROPERTYSTORE/CONFIGS/INSTANCE/\n('{\\n  \"id\":\"\"\\n  ,\"simpleFields\":{\\n  }\\n  ,\"listFields\":{\\n  }\\n  ,\"mapFields\":{\\n    \"KAFKA_HLC_GROUP_MAP\":{\\n      \"\":\"\"\\n      ....    }\\n    ,\"KAFKA_HLC_PARTITION_MAP\":{\\n      \"\":\"\"\\n          }\\n  }\\n}', ZnodeStat(...))\n```\ntable config about zookeeper and topic name can be retrieved in zookeeper node  <parent node>/PROPERTYSTORE/CONFIGS/TABLE/<table name>.\nPinot controller should have access to those info. for example, class PinotRealtimeSegmentManager has access to groupid/partition-id through _pinotHelixResourceManager.getInstanceZKMetadata(instanceId) and table info through HelixInstanceDataManager. But I have to admit it is a fairly early investigation and we have not looked into llc cases and other streaming solutions. We will definitely do more investigation once we have more ideas about which direction we want to focus on. will reinvestigate llc and see if how we can utilize it to help us to get this information, thanks for all suggestions!. sounds great! looking forward to it. looks great! will definitely take a look!. @snleee @mcvsubbu could you guys help me to review this diff for fixing bug in low-level consumer?. > @jamesyfshao Does Kafka pass any exception when the incoming message size is larger than the buffer size? This still does not fix the issue of silent failure. Logging error or throwing exception when it happens would be a good start. Ideally, we should be able to recover from the such situation and let users to pick on the behavior when such failure happens.\n\n\nthrow exception and stop consume message until a user restarts server with the new config if they don't want to skip the message.\nIf their use case can tolerate skipping messages, we need to continue to consume from the next offset.\n\n\nUnfortunately. kafka simple consumer doesn't throw any exception while it encountered this issue. I have tested multiple version of kafka simple consumer library (from 0.9 to 1.1.1), they just simply stuck in a loop trying to read from network channel but failed due to there was no buffer left to host the next message. Eventually, there might be a socketTimeoutException after the consumer timed out from the configured value. However, this exception is fairly generic and it is very hard to tell it apart from just losing the connection from kafka broker (which is a retriable exception and reconnect to kafka should solve it). I feel we should be looking at kafka standard consumer API as simpleConsumer is marked as deprecated in later versions of Kafka (1.0+) and it seems to not getting proper bug-fix like this.. > Thanks for reverting the default. If you can please make sure travis passes, we are good.\nthe previous fails due to jenkins not able to fetch earlier commit, I rebased and it is passing now. Thanks for the review and it would be great if you or @snleee could see if anything else we should change for this diff.. updated for all files with author names. I researched a bit on crc calculation for hadoop/local fs, it seems that according to this stackoverflow answer https://stackoverflow.com/a/14564532 it is tricky to implement the crc validation across different file systems. I think for the sake of simplicity we can skip this part as we are not doing that for other fetchers as well. \nFor checking local file existence, I think this might be dangerous as they might be partial copy results. to verify that file content is correct we will need to do checksum verification or other things. This leads us back to my previous comments. it is supposed to be a dummy fetcher that we used for unit test (see pinot-common/src/test/java/com/linkedin/pinot/common/segment/fetcher/SegmentFetcherFactoryTest.java). updated all start up log to info. log both message and config. changed the whole segment fetcher initialization argument to configuration to facilitate default/exception handling. The old way of passing in Map is unnecessary and cause a lot more redundant codes. Also refactor other fetcher and updated tests. Done and updated HttpSegmentFetcher with similar logics as well. Done. the segment fetcher code is actually used by both controller and server (usage in server code in here) I am not sure prefixing it with either controller/server is a good way to do. Maybe we should consider the naming something like pinot.common.segment.fetcher?. We would be fine to change the config to the latest key. However, I am not sure if any of other users might be relying on this configuration key. If you or other contributors are aware of other users using this configuration we should think about supporting backward compatibility.. got it, I misunderstood the changes you made in server starter section earlier but it makes sense now. Thanks!. updated in new diff. updated in new diff. So in kafka consumer, there are 3 toggles to control the consumer fetch behavior:\n1. fetch.min.bytes: this control when the kafka broker returns the data. This will impact the server latency (but usually minimal, like sub-seconds level) because kafka broker will try to ensure it has that many data before it return to the consumer. We are still using old config for this value.\n2. fetch.message.max.bytes: this control how much data kafka broker supposes to return when it has more data. Usually, higher value can increase throughput when we have large lag (more efficient batching) and might have slight impact on consumer fetch latency (sub-second level) for sending more data if there are.\n3. there is also a timeout config in stream config (fetch.timeout.millis) which allow us to control how much latency we will wait at most for kafka consumer. This will allow us to put an upper bound to consumer fetch latency if it is a concern.\nOverall increasing this default value will increase latency at a minimal level (as it is bound by fetch.timeout.millis and kafka supposed to return data when reaching minBytes) and if this value is lower than kafka message size the consumer will fail silently at that message and get stuck. It would seem to be a small price to pay for getting pinot more flexible at handling large message and better catch-up performance. @mcvsubbu I have reverted the default back to the old value. . ",
    "shaunschembri": "I am trying to follow the How to Use Pinot tutorial. When I arrive to the step to query the data I get a similar error when I execute\nbin/pinot-admin.sh PostQuery -query \"select count(*) from flights\"\nException\njava.io.IOException: Server returned HTTP response code: 500 for URL: http://my_private_ip:8099/query\n        at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(HttpURLConnection.java:1894)\n        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1492)\n        at org.apache.pinot.tools.admin.command.AbstractBaseAdminCommand.sendPostRequest(AbstractBaseAdminCommand.java:77)\n        at org.apache.pinot.tools.admin.command.PostQueryCommand.run(PostQueryCommand.java:94)\n        at org.apache.pinot.tools.admin.command.PostQueryCommand.execute(PostQueryCommand.java:100)\n        at org.apache.pinot.tools.admin.PinotAdministrator.execute(PinotAdministrator.java:96)\n        at org.apache.pinot.tools.admin.PinotAdministrator.main(PinotAdministrator.java:108)\nIn pinotController.log I also get\n2019/02/11 14:41:54.759 ERROR [org.apache.pinot.controller.api.resources.PqlQueryResource] [] Caught exception while processing post request\njava.io.IOException: Failed : HTTP error code : 500\n        at org.apache.pinot.controller.api.resources.PqlQueryResource.sendPostRaw(PqlQueryResource.java:187)\n        at org.apache.pinot.controller.api.resources.PqlQueryResource.sendPQLRaw(PqlQueryResource.java:230)\n        at org.apache.pinot.controller.api.resources.PqlQueryResource.getQueryResponse(PqlQueryResource.java:140)\n        at org.apache.pinot.controller.api.resources.PqlQueryResource.post(PqlQueryResource.java:80)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)\n        at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:469)\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:391)\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:80)\n        at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:253)\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:292)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:274)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:244)\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)\n        at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)\n        at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:679)\n        at org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer.service(GrizzlyHttpContainer.java:353)\n        at org.glassfish.grizzly.http.server.HttpHandler$1.run(HttpHandler.java:200)\n        at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:569)\n        at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:549)\n        at java.lang.Thread.run(Thread.java:748)\nOS = Centos 7.6\nPinot Version = Head on master branch (Commit ac058c5)\nJava Version = openjdk version \"1.8.0_191\". @snleee Here is the exception in pinotBroker.log\n2019/02/12 07:59:23.384 ERROR [org.apache.pinot.broker.api.resources.PinotClientRequest] [] Caught exception while processing GET request\njava.lang.IllegalArgumentException: bound must be positive\n        at java.util.Random.nextInt(Random.java:388)\n        at org.apache.pinot.broker.routing.builder.BaseRoutingTableBuilder.getRoutingTable(BaseRoutingTableBuilder.java:146)\n        at org.apache.pinot.broker.routing.builder.DefaultRealtimeRoutingTableBuilder.getRoutingTable(DefaultRealtimeRoutingTableBuilder.java:100)\n        at org.apache.pinot.broker.routing.HelixExternalViewBasedRouting.getRoutingTable(HelixExternalViewBasedRouting.java:103)\n        at org.apache.pinot.broker.requesthandler.BaseBrokerRequestHandler.handleRequest(BaseBrokerRequestHandler.java:257)\n        at org.apache.pinot.broker.api.resources.PinotClientRequest.processQueryPost(PinotClientRequest.java:98)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory.lambda$static$0(ResourceMethodInvocationHandlerFactory.java:52)\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:124)\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:167)\n        at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$TypeOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:219)\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:79)\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:469)\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:391)\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:80)\n        at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:253)\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:292)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:274)\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:244)\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)\n        at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)\n        at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:679)\n        at org.glassfish.jersey.grizzly2.httpserver.GrizzlyHttpContainer.service(GrizzlyHttpContainer.java:353)\n        at org.glassfish.grizzly.http.server.HttpHandler$1.run(HttpHandler.java:200)\n        at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.doWork(AbstractThreadPool.java:569)\n        at org.glassfish.grizzly.threadpool.AbstractThreadPool$Worker.run(AbstractThreadPool.java:549)\n        at java.lang.Thread.run(Thread.java:745). I found the issue and it was that the stream.kafka.decoder.class.name property was referencing an invalid class.  I updated this property to org.apache.pinot.core.realtime.impl.kafka.KafkaJSONMessageDecoder and it worked.\nI updated the wiki however I cannot update the flights.tar.gz file.  If you want you can get it from here and update your wiki\nhttps://github.com/shaunschembri/incubator-pinot-wiki/blob/master/flights.tar.gz?raw=true\nI have also opened this PR with simillar updates\nhttps://github.com/apache/incubator-pinot/pull/3826. ",
    "letsflykite": "Thanks. However after reading source code including https://github.com/linkedin/pinot/blob/master/pinot-integration-tests/src/test/java/com/linkedin/pinot/integration/tests/RealtimeClusterIntegrationTest.java, I did not find any way of using schema.json change only or even an argument to sh script to achieve the Kafka port customization. Can you give an example without revising Pinot java source code?. ",
    "newsummit": "wrong branch. Addressed recommendations + added a fix for finding application name in search results.. Leaving updates to this PR on the next one : https://github.com/linkedin/pinot/pull/2280. Please ignore.. Sorry, not the PR I intended. Creating a new one.. Good! We're ahead of deprecation for the Ember namespace object. Hopefully no side-effects.. This PR is redundant.. @apucher, I added an indication that you're going to the Alert Page. I'm consulting with our designer for ideas on this. The next iteration should be the standalone modal.. So after discussion with UI team and design, we prefer to disable it until we have better way to integrate it into the dashboard UX.. Just wondering if you meant to \"null\" these as well.. Looks good - just an extra space preferred before the \"{\". Awesome. The fun begins!. Yes - some class names may change in the navbar PR.. Not using --metric, but yes using --value. The scss needed a bit of re-arranging.. Sure. Lets do that.. Not really, probably overkill.. Thanks - I'll use that.. Agreed. Thanks.. Sounds good, Yves.. sweet.. nice.. I added it in case we need a \"home\" route/link in nav. Feel free to change it.. Yes! lets use mixins.. No need to have things like app name hard-coded in config + component also, right?. Just avoiding having hard-coded properties in both places.. What's this overriding? maybe just add a note.. Toggle this on to hide the item. Done. Looks good.. Sure, can do.. Does title attr need it too?. Forgot to remove this :). We need to clear previously rendered results. The conditional wrapper would just not display them.. Actually, I tested this and it seems that the .row class is the one that adds -15px (which is not needed).\n\n. Yes. agreed. thanks!. ok, thanks. We'll sync on that. I've not had any alignment issues, thankfully.. So, groups with more than 25 filters will be hidden, or will only display 25? Good performance compromise. We can figure out a way for user to further expand a filter group, perhaps.. Awesome. Thanks.. Good catch - thanks.. Yes, still needed - this is actually the value of the first field, \"Import Existing Dashboard\". Much better - thanks.. Ok, this is being refactored anyway.. Correct - I was just doing a sanity check on that :) and forgot to replace it.. Sure - I'll show you the refactored version soon.. We'll see... I'll show you the new version.. Yes - that endpoint is fake for now.. Do we want to wrap the response var or not? on 81, 82 its not, but 83 it is.. Cross-app consistency question - do we favor using function declarations or expressions? https://rainsoft.io/6-ways-to-declare-javascript-functions/#12differencefromfunctionexpression. Note: we need to style notifications for both internal/external audiences.. var name = startDate. Space before \"?\". What does it return if empty param? null?. won't hurt to add this. thanks.. I confirmed this with the team, and added \"dimension filtering\" based on selected filters in the last commit.. got it. thanks.. No, the first catch is for \"callCloneAlert\" and the second one is for \"callReplayStart\". It is properly entering the \".then\" after \"callCloneAlert\" resolves. I've tested both error handlers and they work as expected.\nBut, I actually can catch both in one handler, so I'm removing the first catch.. Are these commented lines intentional?. ...and these. Yes, that was intentional, but I'm modifying it after today's meeting (replay sequence is now being modified). if opacity can be less granular, then we can use app-shade(black, 1) in these cases... otherwise, just keep it this way.. this one would be app-shade(white, 7) (I think the mixin only converts the single digit to .7, so only use if you don't need opacity to be set in \"hundredths\"). Note: at this point, we don't do anything with the replay response.. Nice catch - thanks. Not needed any more.. Do you want these console logs to remain?. Yes - we should add one, for sure.. oops. Thanks.. No, doesn't make much difference.. nice - thanks.. thanks. actually I will use emailArr.every(email => emailRegex.test(email)). Good to know!. Yes, its redundant. I'll remove it.. Thanks!. What's going on here? intentional?. Ok - got it. All good.. After some investigation, I found that toggleProperty will not be able to find 'filterObj', as it is not an observed property.. After some investigation, I found that toggleProperty will not be able to find 'block', as it is not an observed property.. Yeah, selectedConfigGroup is null, but its prop is undefined. So I'll use it.. hmm. why is lodash already accessible without explicitly importing it?. Not yet - this is placeholder logic for how to handle the incoming array of filters (still TBD what the default case will be). Hard-coded for now... until the next phase (load summary of stats from server).. Ah, yes - I forgot to change that!. Yes - I'll make a note to allow that.. yes. nice - thanks.. Thanks. Forgot to do this when I added the second property.. Yes, until we have the endpoint for it.. I've pulled this logic out into a function where I describe each default and fall-back step for deriving the final start/end timestamps.. I want it to be a modifier - I've changed the block element and downstream template.. yes - fixed. yes - fixed. yes - refactored. done. done. done. Yes, please @cecilynie : if you could make this method return a JSON string, it would make things alot smoother on the frontend. Thank you! Here's this for reference: https://github.com/linkedin/pinot/pull/2217. fixed. fixed. Thanks. I have it as a placeholder to fill in.. :) fixed. Yes - it was returning the wrong increment value. Fixed.. fixed. fixed. We can discuss. We want to clear the \"pending\" status banner during replay as soon as possible once its done.. fixed. Using .find instead.. sure.. Yes- I need to omit that (holdover from a previous iteration). fixed. I actually don't need the .valueOf(). Removing it.. Thanks. Done.. true.. No. \"Custom\" is the only time range option with a semicolon:\n\n. Good idea.. Yes.. thanks.. we will .... Horizontal list. Added comment in stylesheet.. Sure - left over from a multiple set.. is concatenation confusing?. I thought I got rid of those already :) thanks.. Refactored.. done. done. What I'm doing here is a multi-line literal concatenation.. ...same. Ok, but I'm not convinced its more 'readable'. Yes - for sure.. yes - done.. yes. yes. Adding a note for this - I want to keep it there for now.. done. done. done. 'for of', I would argue is not necessarily less 'readable', in fact, its known to be more performant - but its not really needed here, as I'm iterating on a regular array. I'll go ahead and reserve 'for of' for looping through collections.. sure. yes - forgot to remove. Sure - I'll use !isNaN instead here.. Yes - good question. A bit further down, I'm only using \"non-zero\" values (discarding the rest). See noZeroDurationArr. These actions are needed for the links in the parent 'manage.alert' view.. Done. Thanks Kexin.. No, its the same var. We're constructing the property name.. Yeah - that works better, thanks.. No, this is a very route-specific grouping function - not a Math util. In this form, it would not be used anywhere else. This is where the aggregation of anomalies by application happens - core to this route.. Sure thanks. For this iteration, I don't want to hide what I'm doing behind a lodash method.. Hmm. What I have here looks way more approachable. :). Sure - Lets.. done. Would be a good case for it - I just wanted to use a raw table in the first demo to keep it simple and get feedback quickly ... we don't need filtering, for example, just sorting for now.. Ok, I pulled those styles out.. You can use the new computed syntax here.. Just check whether you want == or === here.. fixed in https://github.com/linkedin/pinot/pull/2351. improved in https://github.com/linkedin/pinot/pull/2351. oops - didn't see that. TBD. For all comments, please also see the new version of this at https://github.com/linkedin/pinot/pull/2351. thanks. For some reason, I was blind to that :). I will need to address this in the next iteration.. done - thanks!. no - not needed. I'll modify.. for this instance, we do expect it to change, as its within a availableGroups.forEach loop.. :). fixed - wasn't that important.. It looks like I missed this file during clean-up.. It turns out I don't need it. Removing.. sure thing. thanks.. Its actually the first one (working because there is only one 'active' at a time). Changing it from .pop to [0].. done. Actually, postFunctionBody is not being used by the template anywhere, nor is alertData, its source object.. ah, yes - I changed this in the previous PR.. I'll verify. It comes in as an array of one. If empty, fetch will catch an error below.. good reminder. This is actually used as a param sent to the model method triggerTuningSequence. No, these are not expected to change.. thanks. see comment below - this change was removed.. thanks. forgot to remove.. good destructuring candidate... however, the suggestion is incorrect and will result in undefined vars. Instead...\nconst {\n        alertEvalMetrics: evalMetrics,\n        customPercentChange: severity\n      } = this.getProperties('alertEvalMetrics', 'customPercentChange');. sorry. for consistency, not refactoring the tuning flow to new get syntax yet.. good idea.. Please disregard - I've removed everything except this.send.. Yes... currently we have a deficiency in this API. It is not yet returning an ID for the new alert function. Once we receive success status from the create call, if we cannot confirm the existence of the alert in our DB (using /data/autocomplete/functionByName, I'm passing 0 as Id. I will change this to -1.. yes. Great idea. Thanks. I prefer to implement it now.. Ah - yes. I'm setting a time marker when onboarding begins here, and measuring elapsed time later, when checking on create and replay status.. Yes, we use it to measure time passed from onboarding start during alert create confirmation loop.. Yes, thanks. I prefer to refactor this now.. done.. My bad. Its actually already there in utils. Forgot to use it.. On second thought, I do have such a utility, but needs refactoring - its only for POST requests. I'll make a note to include it.. Thanks. Adding context comments here.. sounds good.. Yes, if the anomalyStats object above is altered... modifying.. focus-out seems redundant. key-up will trigger if the user enters content.. fixing this. thanks.. yes. thanks.. I believe it was working all along, I just had some complex interfering boolean conditionals blocking it.. :). Yes, decided not to use refreshModel. sure. noted. I forgot to change this instance of the  tag.. sure - thanks.. Adding a note for inline documentation on each step.. So this table, if we choose to \"componentize\" it, can be refactored into ember-models-table with some time commitment due to custom filtering. We did not think it was wise to sink time into it in the MVP.. I've seen them fire one at a time (2 second yield), but this is good to have as reference. Thank you.. Arbitrary - agreed with relevance that its a good number of \"top dimensions\" to expose in the graph.. I left it there as a reminder to get more context on it. Not going to need it, apparently.. I would say they are multiple \"chained\" .thens. Wondering if we should bundle some of them in RSVP hash. I'll leave a recommendation note.. I will try this.. Ok, since Object.keys({}) = [], I'm ok with removing that.. Thanks, I will modify.. will do.. Switching \"filters\" and \"dimensions\" fields (dimension to the left). will check. ok. Yes. Not the error details, but they will see an error page.. Ah - works great. Thanks!. Yes - I realize I do need this to cause a reload when I'm ready to check for new anomalies.. Yes. I found a more efficient way (using extractSeverity method from manage-alert-utils.. I removed this check.. done. yes.. yes - this is something I'm gradually cleaning up from early implementations. This case is resolved.. Awesome. Looking forward to that. thanks.. Thanks for adding that note.. What's this for? vertical spacing?. This fixes an edge case where score is 'NaN'. This is an experiment with metric data caching - not in use yet, as there are better ways of doing this.. Replacing this chain with concurrency tasks.. sounds good.. I'll look into this.. done. thanks.. Correct. https://emberway.io/ember-concurrency-the-solution-to-so-many-problems-you-never-knew-you-had-cce6d7731ba9\nThis may be outdated by now, but \"until the proposal supports cancelation, ember-concurrency can\u2019t use async functions as task functions.\". Yes. We likely will. But all I'm doing here is adding a container div in order to position the loader icon.. Yes - I was thinking of doing that. TODO.. TODO. Making this action more consistent with the manage.alerts.tune action for the same component (date-range-picker). Converting these fetching functions to concurrency tasks. (to be ported into services later on). I tested this locally and it seems to help with quicker transitions while large datasets are still loading.. From what I have researched, I can't yet use async/await here because they have not been integrated with concurrency due to \"cancellability\". Feel free to correct me if I'm wrong.. Arbitrary eliminator of excessively long performance numbers, which would be errors.. This promise resolves with the anomaly Id as associative array so that I can filter it if needed later.. True - no need to wrap the entire function. I'll move it down to where the fetching begins.. I'm prepared to refactor this table in one of the next iterations to nicely \"componentize\" it.. Will try that.. yes, I like that better.. yes. replaced.. Thank you.. got it. thanks.. I've reduced duplication by leveraging the shared util formatConfigGropProps. Further, this is a good candidate to move into shared services for self-serve. Added a refactor note.. Good suggestion. However, I want to avoid formatting it if pattern is empty - don't want to end up with an extra _ in the string.. alertIndex. Hey, good point. I've removed the loop in favor of a find.. Yeah - it got reverted. Correcting.. readability enhancer... a little spacing would be good here, around the -. Yeah, I had issues with unusually long numbers here. Fixed them to 2 decimal places.. These links will be replaced once we know where the swagger doc will live.. Yes, I want a better naming convention for this. Agree.. Yes - it does yield for child tasks and a data processing function to complete.. Yes, I like that as a location for it.. I'm sure you checked, but just in case: lets make sure our displayed change rates are consistent with the way they are being calculated/displayed in other routes. Thanks!. Just indentation changes below in this template.. Yes - this set goes with the Alert Page performance APIs, so I'm abstracting those next.. good catch - thanks.. got it.. done.. done. Removed __wrapper and moved css into component-linked file.. I reconfigured the class names. __title is a block element.. Yes. The setDuration helper makes sure a copy of the selection remains in session storage.. done. Instead, I am now using the same range-pill-selectors component to render these.. done.. We can discuss a better approach. For now its just a way to load less data in dev mode.. done.. yes. It calls 'selectAction', which invokes the closure action, same as here: https://github.com/linkedin/pinot/blob/b93b6f3cfc236ac53ee4f80d6e8b537b8e92e197/thirdeye/thirdeye-frontend/app/pods/components/te-modal/component.js#L77. Ember component testing docs recommend using it to prevent unintended behavior: https://guides.emberjs.com/v2.18.0/testing/testing-components/#toc_testing-user-interaction\nWe recommend using native DOM events wrapped inside the run loop or the ember-native-dom-helpers addon to simulate user interaction and test that the title is updated when the button is clicked.\nUsing jQuery to simulate user click events might lead to unexpected test results as the action can potentially be called twice.. done.. The jsDoc here doesn't seem to match the component.. Every new line above 435 should be removed (merge resolution fix). onRangeOptionClick no longer needed.. You can restore onRangeSelection. Lets try import { anomalyResponseObj } from 'thirdeye-frontend/utils/anomaly';. Not needed, right?. Nice - thank you!. Do you need to keep this?. Question: what's the limit and will exceeding it simply mean no new data is cached?. Maybe convert this to comment.. Something missing here?. works. thanks.. got it. thanks.. done. Good reminder - turns out I don't need to select the descendant.. I'll cache the element in cases where I need to load it once for multiple references.. yes - I like that.. I need to cache the element again, as it has changed.. Same here. Need to re-cache the element to look at its new state.. done.. Yes. For now I'm keeping the constants file exclusively for element selectors. If the team wants to add all vars, we can consider, but this seems cleaner.. Is this comment a TODO?. Thanks for setting this up: store/models/adapters. Much simpler than what we had before.. I see. So this new architecture renders our API utils obsolete. One of the reasons for having those was to have a centralized inventory of all APIs used. What do you recommend for that?. So for testing interaction of tabs and tabpanels, I assume RCA acceptance test will handle that, correct?. At first look, it seems the tabs component set will be able to handle \"sub-tabs\" in any given tabpanel. Any thoughts on that?. Thanks for providing the example. Am I seeing double @example?. Yes - makes sense. I noticed we're doing it here in RCA as well.. Sounds good. However, this one is not related to API - no fetching of data from server. It only caches user-selected time ranges for various routes to read/update.. Sure. newDuration is the incoming object containing the time-range properties to save.\nIt is not part of the loop. In the loop, I'm iterating over required keys to assert their presence and expected type. I will make this clearer in the method.. Yes - good call.. Just a thought - maybe verify on lowercase name for added stability.. Thanks for finding this!. I believe this was set to avoid unexpected anomalies on the edge of an hour, but probably not making a big difference.. NOTE: we are working on stabilizing this test. remove?. Curious - what does the 'X' mean to format?. should this be type === 'end'?. remove?. Sure. As explained by Alex, the context object is maintained by the RCA caching services. It defines the 'state' of the analysis view as the user modifies options. This object will always contain start/end ranges, which the component needs to react to. I can describe this better inline.. Sure can. I just haven't refactored yet. Have been wanting to go through last year's code to replace all nested then structures.. Not sure what you mean here. If there is no errMsg, it will render nothing. Its part of the paragraph with response text.. Yes - oversight. Will fix.. Will do.. Ah, yes. Sorry for lack of context. This is related to a query that was failing in the backend and we no longer need: .../services/all. After conversations, we don't want to display this in the entity mapping modal dropdown any longer. I can safely just remove it.. Does this route users to home no matter what their target page was?. ...starting review. Here, I'm pretty sure this will work, as we're doing it in self-serve tabs here: https://github.com/linkedin/pinot/blob/da30818ce7986e69d98aaf79103641f204704988/thirdeye/thirdeye-frontend/app/pods/manage/alert/template.hbs#L110\n{{#link-to \"manage.alert.explore\" record.anomaly.functionId}}. If the #link-to works, above, this would probably not be needed.. Just wondering if you could use Ember's isBlank or isNone here and remove lodash?. Placeholder?. Saving for later?. Sorry for the noise here - was just removing a redundant wrapper tag.. Yes - on init is surely better. Thanks.. Yes, agree. I'm now leaving class names in template.. Yes, I'm needing the table to refresh to load cached or new data if any incoming attribute changes in the RCA context.. Specific widths are needed for each bar after row values are scaled. This is similar to the way we would have to do it in D3. Let me know if you have any ideas.\nvar svg = d3.select(\"#chartholder\")\n            .style('width', width + 'px')\n            .style('height', height + 'px');. Yes. I'll get the URL instead.. Just need to confirm data is correct before releasing it.. Will consider.. It was running more than once, but not for this reason. I've corrected it by adding refresh logic in init.. We can. Its resolved either way.. Yes, this was changed.. Yes, yielding fine (tested). Otherwise I get some error like \"Unexpected strict mode reserved word\". Oversight - these are general/global, not rootcause-specific.. Sounds good!. Yes - screenshots always help:\n\n. I just want it there for the next iteration - didn't want to sink time into it this time.. Yes. What's this part?. good idea. Thanks.. Curious about the UI for this tree component - maybe throw in a screenshot if possible.. Some clean-up here. ...and here.. Thanks.. Yes - onFocus is the action that allows us to trigger the insertion of the metric alias (when user clicks on metric selector). Thanks Alex!. Oh, I see what you're saying here. I need to base these limits on windowSize and windowUnit. Ok - will modify.. Its for the next PR :). This file name looks fishy \"rootcause-select-comparison-range2\". The granularity minimums are max number of hours (MTTD). Great minds think alike :) I'll put this away for now.. When sorted (by id) the metrics loaded in graph don't match the order in the legend.. thanks. ",
    "cryptoexponetial": "okay, got it, thanks man.. ",
    "ttbach": "I like the short PRs. Keep them coming!. @apucher I was thinking about that. I'll make the consolidation.. @justYves LOL \ud83d\ude06 . @kishoreg \n1. Sure, I can keep both views and have the option to switch between the two. \n2. Which number are you referring to for formatting and in what format?\n3. The search box comes with the addon, so I can't remove it for one column and not the others.\n4. We can probably make a custom component for the sparkline. What would the sparkline be plotting?. @kishoreg I've updated the screenshots with the suggestions you made (i.e. number formatting + 2 views). I've had another look at addepar, and I realize it uses a different library for the table from the current one used here, and adding a sparkling is not as straight-forward as I initially thought. If you think it's absolutely important to have it, we'll need to have a conversation because it will take a while to implement.. @kishoreg That's the default view for now. I'm unclear whether we already have information about WoW, etc. I'll ask Alex once he gets back. Once we have them, they'll be exposed on the UI.. @kishoreg Done. @justYves Great suggestion! This should be a quick fix.. @justYves Yes, I made sure the flows for rca and manage alerts work.. @justYves Nice catch. I can increase the width.. @apucher Ok, then I'll close this PR and https://github.com/linkedin/pinot/pull/2514 then.. @justYves It's not too much work, since right now, card-container--medium will only be used in the new rca page. My question is when do we use one over the other? Are we only creating the medium one temporarily until we make a global change, or are you saying both versions of card-container will be useful in the future?. @justYves As per our in person discussion, I'll refactor the card-container styling for only the rca page, so it doesn't have a global effect.. @snleee Oops, apologies from that. Will do next time. any reason you're not doing a link-to here instead of the a tag?. I thought so too. I think it might be globally accessible, but eslint is complaining about it.. By obfuscate, do you mean \"delete\" or change the data to something more obscure?. so change it to /timeseries/compare/***?. I placed the click statement outside of andThen and the test failed because it couldn't find the EDIT_BUTTON. . Alrighty. I'll submit this as is. Thanks for comment.\n . for readibility, can you make every attribute its own line. \n{{timeseries-chart \n   series=series}}\n. you can do controller.setProperties to set multiple things. https://guides.emberjs.com/v1.10.0/cookbook/working_with_objects/setting_multiple_properties_at_once/. You can define this function inside the controller as opposed to making it a global function, in case it gets overwritten accidentally or called in another file. I would suggest doing the same for other instances.. Can you put the config in a separate file under /app/mocks and import it?. use this.getProperties to consolidate these 3 lines https://emberjs.com/api/ember/2.15/classes/Ember.Object/methods/getProperties?anchor=getProperties&show=inherited%2Cprotected%2Cprivate%2Cdeprecated. You can add a JSDoc comment above for this like so:\n/**\n * selectedUrns are ...\n * @type Set\n */. You can extract these two helper functions into separate files in /app/helpers and import them here.. Extra empty line 13?. I meant to change this object to deployment instead of gcn. Will make the config change, so when I build the filter bar, it'll reflect deployment.. Yes, it is. A lot of this will be changed in later PRs.. I think lodash has _reject, which does what you're writing: https://lodash.com/docs/4.17.4#reject. if you're only getting 1 property, you can just use this.get. Same here for this.get. You can use this.set instead here since you're only setting 1 property.. Don't forget to put this config in a separate file under /app/mocks and import it. This makes the file a lot less long and more readable.. No need to comments here. Is this | intentional?. We don't need filterBarConfig in the model. I'll remove it. I have it in setUpController, so it's available in the component init() hook. I'm not sure if this is the best way to do it. Any suggestions?. Please add jsdocs comments for this variable, as per Data UI's coding standards wiki. Missing @type. I think it's more readable if we have the variables defined at the top before methods and computed properties. Let me know what you think.. Can these be defined inside the route declaration, or is there a reason why these variables are defined outside? I might be missing something here.. Documentation please :) . Documentation here also. Missing @type. I second this comment.. What are dimNamObj and topk? Is there a way we can rename these variables to make them more meaningful?. Nitpick: add a new line after this. Thanks! This was a change I made before you told me about real data, so I'll remove it some later time.. Yep! Thanks for the comment. It's fixed.. Fixed!. Done!. Non-blocking: since you're only getting 1 property, you can just use this.get('onSelection'). I think we can chain these two .filter:\nObject.keys(updates).filter(...).filter(...)\n. same as above. No, you're right. I forgot about this. Thanks. No, since it's a guarantee that the config file that gets passed is not null.. Assuming the config file is passed and not empty, filterBlocks will never be null or undefined.. Yes. In the future, when the config is more finalized, this is assumed to be in the config.. JSDoc? It'd be great to add as much as we can.. \ud83d\udc4d \ud83d\udc4d \ud83d\udc4d . nit: \"Adding...to the this context\" (typo?). @type?. Missing EOL. you can use this.get since you are only getting 1 property.\nconst context = this.get('context'). This needs to be indented by 1 more space. Same indentation as above. Same as above. Since you're only getting 1 property, you can just use this.get('onSave')\n. Typo for conteiner?. We can combine these 2 set statements and use setProperties. Same as above. Does this need to stay for future debugging, or can we remove it for this PR?. Since you're setting multiple variables, let's try to have each set in separate lines for readability. For example:\nthis.setProperties({\n  sessionId: res,\n  sessionModified: false\n}). Same as above. This seems like a modifier, which means the name should be prefixed with -- according to BEM documentation. I would suggest a better name for -row would be --vertical-align.. Also a modifier, so this should be --toggle.. Blocking comment: Since rootcause-header is its own component, we should create a separate styling file for it, so it's more modular and keeps rca.scss shorter.. isNeedFeedback lol (you can tell it's named by a SWE). I agree with @justYves . this.get for single gets. this.get. this.get. Let's make this multiline since you're setting multiple variables/objects. this.get. Fix for rest of PR. multiline here as well. Since this method is only used here, I would suggest moving the logic to here and remove the method definition above.. this.get. Possibly a more meaningful name could be setUndoProperties?. We can just import computed here instead of ember, as per the new way of importing modules. Documentation here: https://github.com/emberjs/rfcs/blob/master/text/0176-javascript-module-api.md#everything-is-a-named-export\nimport { computed } from \"@ember/object\";. I don't see fetch being used in this file. Do we need it?. Let's import specific modules here for the entire PR instead of importing the entire ember, as per the new way of importing modules. Documentation here: https://github.com/emberjs/rfcs/blob/master/text/0176-javascript-module-api.md#everything-is-a-named-export. Do we need this here, or can we delete it? Same comment for the commented out code bits in this file.. JSDocs for these?. Missing @type. Let's fix this for the rest of the PR.. We can do renderDate(range) {...} to comply with es6 semantics.. Let's use forEach here instead of a for loop for readability.. Let's use string interpolation here.\n`${this.get('anomalyDataUrl')}anomalyId`\n. Since you're only setting 1 property here, we can use this.set instead.. We can use string interpolation here.. Can you clarify what hzlist means? It's not entirely clear to me at initial glance.. this.get. this.get. Since these are the same, let's save this in a variable in the component and pass it in the template. As per our in person conversation, if you can, make a short note of why you're having a get() here, referencing this documentation: https://guides.emberjs.com/v2.7.0/object-model/computed-properties/#toc_setting-computed-properties. There's no reason. I'll make the change. Thanks!. You're right. Will fix this.. Fixed.. Oh my god, thank you so much!. Nit: Missing extra line. Nit: missing extra line.. Since this is an element and not a modifier, to comply to BEM standards, it should be __split-header, since -- is reserved for modifiers like color or position. \nhttps://en.bem.info/methodology/naming-convention/#two-dashes-style. It doesn't do anything. I'll remove it. Thanks for the catch.. this.setProperties. If possible, would you mind updating the PR, so it uses the new way of exporting modules, i.e.  import EmberObject, { get } from \"@ember/object\"; and get(this, ...). Let's use es6 arrow function syntax for readability:\n_.filter(scoreDimentions, (dimension) => {...}. Let's use forEach here for readability:\ntopDimensionLabels.forEach(subDimension => {\n   ...\n}). forEach here as well. Since you're using template literals here, you can omit the + sign. Same as above. Let's use template literals here for readability.\n${model.alertData.bucketSize}_${model.alertData.bucketUnit}. refreshModel() {...} for brevity. For readability, let's have each property on its own line\n{ \n   count: cat.count, \n   label: cat.label, \n   isActive: false \n}\n````. Same as above. Let's use template literals here. Let's extract this logic to be computed by the component and reference it as a variable in the template because it's not too readable here. It's also good practice to make the template as easy to understand as possible. This logic is also repeated in other places, so it removes repeated logic.. Let's move the bold styling to scss files to the `te-form__banner--failure` class.. Same as above. We can wrap the bolded text in a `span` tag and assign a styling to it.. Do you still need this, or is it commented out for something? If it's the latter, let's add a `TODO` for the task or comments on why it's uncommented.. Typo: `text-decoration: none`. Is this meant to be removed?. Missing `@type`. Missing `@return`. There are 2 different `propName` variables here declared in different scopes. Is that correct? If so, can we change the name to differentiate? It's a bit confusing.. A shorter way of writing this logic:\nconst direction  = this.get(propName) ? ':up' : 'down'\nthis.set('selectedSortMode', ${sortKey}${direction})\n. `@return` instead of `@returns`. You can use lodash's `._meanBy`: https://lodash.com/docs/4.17.4#meanBy\n  . A shorter way of writing this: https://gist.github.com/venning/b6593f965773985f923f. I think math functions should be extracted to a math util and imported here for modularity.. Let's extract the state of viewTotals to a variable called `isActive` in the controller or component and reference it here, since this logic is later repeated.. See comment above. Same comment as above with a different variable. Same as above.. Here as well. Let's do this for the rest of the PR.\n  . Let's put this in its own scss file called `performance-tooltip`. I might be missing something here, but is there a reason we can't utilize `ember-models-table` here?. Yeah, I notice that too. The engineer who wrote the logic for computing those properties are out, so I'll have to ask him for more context. Until then, I figured observing for all these changes is a safer approach. Thanks for the comment.. Nice catch. I meant to listen for 'changesFormatted'. Will make the change.. Then can we use `propName` on line 69 instead of `this.get('propName')`? Let me know if I'm misinterpreting this.. In that case, can you add a `TODO` to refactor this and replace it with `ember-models-table`, so that we don't have to maintain multiple types of tables?. Ooh that's a good point. I'll make the change. Thanks!. Nice catch. I meant `===` here. Thanks.. Blocking comment: Since there's a computed property called `changesOffset` above, can we give this a different name?. Since you're only getting 1 property, you can use `this.get`. Woohooo! I love comments. Thanks for this and also `@param` and `@return`. Quick note: `@return`, not `@returns` \ud83d\ude09 . Same here. Selene suggested to move the metrics tab to the first tab (see task spreadsheet). If it's the first tab, then it should be the default one that's shown.. Yes :). Ah, gotcha. Didn't realize that. Good to know!. Will do. I'll still need to calculate the raw change to compute the color of the number in addition to computing the human-readable value that gets returned from `humanizeChange`, just to be clear.. Thanks for the note. I'll make the change.. \ud83d\udc4d . Good point. I'll have this loop through an array of ordered keys to iterate over the `anomalyInfo` object.. Haha I didn't write this, so I can't claim the credit, but that's a pretty cool reference.. That's a default value for a variable that's expected its value to be passed by the parent component. I'll update the jsdocs for this.. Nope, I'll make the fix.. I tried setting properties on the object, but it threw an error, saying I can't `set property change of undefined`, which meant I had to initialize the object to an empty object before setting its properties. This way that you suggested works, actually. Thanks!. Good catch. I changed it to `return ;`. So in the anomaly computed property:\n`if (!anomalyUrn || !entities || !entities[anomalyUrn]) return ;`. I did\nfilterPrefix(Object.keys(entities), 'thirdeye:metric:').forEach(aggregatesUrns.add);\n```\nand it threw an error: \nMethod Set.prototype.add called on incompatible receiver undefined. Can we include a quick comment on why we're doing this check, just so we remember in the future?. @justYves I think what @apucher means is user can be retrieved like this.get('session.data.authenticated.name inside the onSessionSave method, as opposed to making a CP. I'll make the change.. Gotcha. That makes sense. Will make the change.. I think it's more concise than having to write model.session.name, model.session.text, etc.. \ud83d\udc4d. I think as we do more work on this, we should start being more diligent about documentation, so it's easier to read and also to refactor later. It would be unideal if we got to a size that's unmanageable, and we have little clue what's going on just from glancing at it. . Missing jsdocs.. Yay jsdocs! \ud83d\udc4d . It's unclear to me what .sort() is sorting by. Can we use lodash's sortBy() for sorting in this function, wherever it applies? https://lodash.com/docs/4.17.4#sortBy. Let's include some more comments for why there are 3 entries for each array mapped to a urn and why we're returning a mapping to the 2nd entry. . nit: tuple instead of t for clarify. nit: I would suggest naming it sortBy because you're providing an option for sortProperty. nit: Missing type for urn. . nit: same as above. Missing jsdocs. . Nit: Missing @type. Please fix for the rest of the PR \ud83d\ude03 . Yves's right. My initial CSS wasn't BEM compliant. I would suggest doing the following:\n<ul class=\"rootcause-metric__view-options\">\n <li class=\"rootcause-metric__display-view rootcause-metric__display-view--{{if (eq selectedView \"card\") \"active\"}}\" {{action \"selectView\" 'card'}}>\n    Card\n </li>\n <li class=\"rootcause-metric__display-view rootcause-metric__display-view--{{if (eq selectedView \"table\") \"active\"}}\" {{action \"selectView\" 'table'}}>\n    Table\n </li>\n</ul>. urns already listens to entities, so I figured it would be a duplicate listener if I add entities. Thoughts?. Also, missing @type. Since you're using the new import method with computed, you can also apply that to this.get by using get(this, ...). I think you can use Ember.computed.not here: http://www.emberjs.com.cn/api/classes/Ember.computed.html#method_not. Missing @type. nit: let's add a line between variable declarations and other logic.. Missing @type. . You should be able to chain these in one line like such:\nconst { severityMap, patternMap, amountChange, ... } = this;. Should this console statement still be here?. You can write this in one line:\nconst { evalMetrics, severity } = this.getProperties('alertEvalMetrics', 'customPercentChange'). Is this meant to be deleted?. nit: no need for a space between num and ++. Do we need this console statement?. Since right and left margins are both 0, you can write this as 3 values as such: \nmargin: 15px 0 12px. Documentation: https://www.w3schools.com/css/css_margin.asp. Console statement needed?. I think you can extract alertData.pattern into a variable in the component, set its value there, and then reference it here to simplify template logic.. Same as here, since it's repeated.. the metrics-table also uses update-table. Can you double check that there are no side effects here?. Can we include an @example here?. Out of curiosity, does the test pass? If not, it should be fixed, so we have fewer failing tests.. Ah, I misread. Yes, I meant your suggestion. . Classic Alex \ud83d\ude1b. You know what my comment is going to be.. I know this is not part of the PR, but is this supposed to be a comment for something? If not, let's remove it.. nit: this can be written with 3 values: margin: 16px 0 0. See under shorthand property: https://www.w3schools.com/css/css_margin.asp. @justYves Yeah I was itching about that. Should I extract the translation logic here into a util?. I agree. The only thing is there's no bi-directional map in javascript \ud83d\ude1e . Ooh i like that. Thanks for the suggestion! @igbopie. . The run loop is intended to fetch the latest state of the session every 300s. I don't know if there is another way of doing this other than this. Do you have any suggestions on a better way?. Good to know. Thanks. . I needed to check whether tabs are absent in the acceptance test, and I needed a unique class name to identify the tabs div. I figured the test will be more readable with find('.rootcause-tabs').get(0) as opposed to something like find('.card-container__header').get(3).. For the test, the number mocked here is irrelevant for our test case right now. I might revisit this for when we test the chart. @apucher thoughts?. No, there's no need for quotes. I'll remove them.. nit: we can use arrow function for here. nit: let's make the css class name for meaningful because in general, we shouldn't name things based on their position since that can change. Maybe name it rootcause-header__button instead.. lol Alex.... \ud83d\ude06 . \ud83d\ude06 . nit: @type doesn't need to be capitalized.. nit: typo for concurrenty?. Do we need this here, or can we delete it?. Let's avoid doing inline css styling here. Maybe have a span around {{selectedDimension}}. Same applies to line above.. shorter way of writing this: \nconst selectedDimension = dimension || 'All'. This seems really dense for me. Any chance we can break this up? Is startTimeBucket supposed to be a boolean?. Any reason why we can't use ember-models-table for this? I think I might have asked this in an earlier PR a while back, but I don't remember. If it doesn't make sense, be sure to include it in the comments. We should try to avoid building more components that we'll have to manage overtime instead of leveraging existing ones.. Can you include an @example here for clarity. It's not immediately understandable from the inline comments below.. Since this check is repeated 3 times, let's extract this into another function, maybe call it isNotANumber(f) and reference it in these places.. Since these are meant to be displayed in 2 lines, it's more semantic to have <p> tags instead of <span> because span is for inline texts.. You know what I'm about to comment here \ud83d\ude04 . Are we sure res will always be an array of objects, and that it will always have an attributes property?. this.getProperties for getting 1 property \ud83d\ude09 . When does this custom template get used? It's not clear to me.. Since this template doesn't differ much from the metrics-table-offset template, can we do a check for whether it's a current column via the propertyName of the table and use 1 custom template for both current and offset columns?. Nit: Missing @type. Can we change acc to something more understandable? It's unclear to me what acc is here.. Let's have each attribute in its own line for readability like so:\n{{#acc.item \n   class=\"te-form__custom-label\" \n   title=title}}. Is there a reason why this was changed from a forEach to a for loop? Is existingFunctionList ever an object? It seems to me we can still keep forEach since it's more readable.. I know this is not part of the PR, but is there a way to short-circuit this? It seems like you only need to find a duplicate and then set isAlertNameDuplicate to true immediately without needing to iterate through the rest of the alert object. . Since we've migrated to a new way of import, let's be consistent about it here.\ngetProperties(this, 'isDuplicateEmail',...). Can we rename cnt to something more meaningful?. Yes, @justYves is correct.. Gotcha. Thanks for the comments! Will change this to a {} instead.. @justYves Yeah, a lot of these classes are stubs, so I can figure them out later.. @justYves This is temporary. I'm planning on trying to incorporate Steve's te-anomaly-table styles, which contain styles for this.. Good call. Thanks.. I'll remove this line then. Didn't realize flex-start is the default. Checked the UI, and it looks fine after removal.. nit: Missing @type. There are other properties that are also missing.. Nit: Missing @return. I'll add a TODO to refactor this in another PR.. The intention is for the See More row to be adjacent to the bottom of the table, as opposed to having a gap between the two. I tried setting the table's margin and padding and border bottom to be 0px, but there was still some gap that I'm not sure what is causing it. We can talk about this more in person.. Based on the documentation for ember-models-table (http://onechiporenko.github.io/ember-models-table/v.1/#/), in order to override some default css, I'd have to pass custom classes to the component. It is possible to do in the CSS through, but @justYves has done this in the controller previously here, so I figured it's acceptable: https://github.com/justYves/pinot/blob/4fc67f78c74fe12f9bce95f46609c0930b599aca/thirdeye/thirdeye-frontend/app/pods/components/modals/entity-mapping-modal/component.js#L270. \nMaybe @justYves can also weigh in on this also?. I figured it would be shorter than: \nset (this, 'selectedApplication', this.selectedApplication)\nWhat do you think?. As per our in-person conversation, I have changed this to set this variable in the route's setupController method.. I think we can remove the TODO comment and the classname on line 6. I had it there, thinking that I was going to do something about it later, but it doesn't seem like it needs any additional styles to apply here.. Can we elaborate on the example like the following?\n@example getFormatDuration(1234567, 456789) = 'April 5th, 2018' // I made this up. It's not accurate. woohoo! \ud83c\udf89 . ",
    "sriram570": "Sorry, requested to the wrong branch.. ",
    "ananthdurai": "Please review the PR for adding thrift support \ud83d\ude47 \nhttps://github.com/linkedin/pinot/pull/2306. Though implementing own FileSystem abstraction is a good idea, I would like to point to some of the genuine concern raised in Flink development and how they handle it.\nhttps://issues.apache.org/jira/browse/FLINK-5706. Thank you @kishoreg. I think the scope of the search capability can be limited to the following, and I'm assuming the column error_logs is the full text indexed column/\n1. prefix Query ( error_logs = \"error\")\n2. wildcard Query (error_logs = \"apacheerror\")\n3. regex Query ( error_logs = \"error.*access\")\n4. Fuzzy Query (fuzzy_search(term=\"apache\", fuzziness = 3))\n5. Match Phrase Query ( error_logs = \"error\")\nThe proposal assumes that users may choose some column to be indexed as free text. . TIL: Let me run some performance comparison study on it.. @mayankshriv Yes, that is correct. Ideally, if Pinot can support multiple indexing formats, (log search and the columnar indexing) and the query engine intelligent enough to choose the indexes based on the query pattern, that would be awesome.. Adding a couple of links from DM for future references,\nhttps://www.quora.com/What-is-the-algorithm-used-by-Lucenes-PrefixQuery\nhttps://issues.apache.org/jira/browse/LUCENE-1606. My bad, I changed during one of the debug. Will revert it.. Thrift support ArrayList, HashSet and HashMap. I will add support for HashSet and exclude HashMap for now.. This test case failing from the second record, throwing\njava.lang.IndexOutOfBoundsException\n    at java.nio.Buffer.checkIndex(Buffer.java:546)\n    at java.nio.DirectByteBuffer.getInt(DirectByteBuffer.java:685)\n    at com.linkedin.pinot.core.segment.memory.PinotByteBuffer.getInt(PinotByteBuffer.java:195)\n    at com.linkedin.pinot.core.io.util.FixedByteValueReaderWriter.getInt(FixedByteValueReaderWriter.java:37)\n    at com.linkedin.pinot.core.io.reader.impl.v1.SortedIndexReader.getInt(SortedIndexReader.java:85)\n    at com.linkedin.pinot.core.io.reader.impl.v1.SortedIndexReader.getInt(SortedIndexReader.java:27)\n    at com.linkedin.pinot.core.data.readers.PinotSegmentColumnReader.readInt(PinotSegmentColumnReader.java:51)\n    at com.linkedin.pinot.core.data.readers.PinotSegmentRecordReader.next(PinotSegmentRecordReader.java:107)\n    at com.linkedin.pinot.hadoop.io.PinotOutputFormatTest.verifyRawIndex(PinotOutputFormatTest.java:153)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:76)\n    at org.testng.internal.Invoker.invokeMethod(Invoker.java:673)\n    at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:846)\n    at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1170)\n    at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\n    at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\n    at org.testng.TestRunner.runWorkers(TestRunner.java:1147)\n    at org.testng.TestRunner.privateRun(TestRunner.java:749)\n    at org.testng.TestRunner.run(TestRunner.java:600)\n    at org.testng.SuiteRunner.runTest(SuiteRunner.java:317)\n    at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:312)\n    at org.testng.SuiteRunner.privateRun(SuiteRunner.java:274)\n    at org.testng.SuiteRunner.run(SuiteRunner.java:223)\n    at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n    at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\n    at org.testng.TestNG.runSuitesSequentially(TestNG.java:1039)\n    at org.testng.TestNG.runSuitesLocally(TestNG.java:964)\n    at org.testng.TestNG.run(TestNG.java:900)\n    at org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\n    at org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123). increased the version to fix\n`java.lang.NoClassDefFoundError: org/apache/commons/io/Charsets\nat org.apache.hadoop.security.Credentials.<clinit>(Credentials.java:222)\nat org.apache.hadoop.mapred.JobConf.<init>(JobConf.java:334)\nat org.apache.hadoop.mapreduce.Job.getInstance(Job.java:184)\nat com.linkedin.pinot.hadoop.io.PinotOutputFormatTest.init(PinotOutputFormatTest.java:57)\nat com.linkedin.pinot.hadoop.io.PinotOutputFormatTest.runPinotOutputFormatTest(PinotOutputFormatTest.java:98)\nat com.linkedin.pinot.hadoop.io.PinotOutputFormatTest.verifyRawIndex(PinotOutputFormatTest.java:94)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:76)\nat org.testng.internal.Invoker.invokeMethod(Invoker.java:673)\nat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:846)\nat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1170)\nat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\nat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\nat org.testng.TestRunner.runWorkers(TestRunner.java:1147)\nat org.testng.TestRunner.privateRun(TestRunner.java:749)\nat org.testng.TestRunner.run(TestRunner.java:600)\nat org.testng.SuiteRunner.runTest(SuiteRunner.java:317)\nat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:312)\nat org.testng.SuiteRunner.privateRun(SuiteRunner.java:274)\nat org.testng.SuiteRunner.run(SuiteRunner.java:223)\nat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\nat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\nat org.testng.TestNG.runSuitesSequentially(TestNG.java:1039)\nat org.testng.TestNG.runSuitesLocally(TestNG.java:964)\nat org.testng.TestNG.run(TestNG.java:900)\nat org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\nat org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)\n\nCaused by: java.lang.ClassNotFoundException: org.apache.commons.io.Charsets\n    at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    ... 30 more\njava.lang.NoClassDefFoundError: Could not initialize class org.apache.hadoop.security.Credentials\nat org.apache.hadoop.mapred.JobConf.<init>(JobConf.java:334)\nat org.apache.hadoop.mapreduce.Job.getInstance(Job.java:184)\nat com.linkedin.pinot.hadoop.io.PinotOutputFormatTest.init(PinotOutputFormatTest.java:57)\nat com.linkedin.pinot.hadoop.io.PinotOutputFormatTest.runPinotOutputFormatTest(PinotOutputFormatTest.java:98)\nat com.linkedin.pinot.hadoop.io.PinotOutputFormatTest.verifyStarIndex(PinotOutputFormatTest.java:89)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:76)\nat org.testng.internal.Invoker.invokeMethod(Invoker.java:673)\nat org.testng.internal.Invoker.invokeTestMethod(Invoker.java:846)\nat org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1170)\nat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)\nat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)\nat org.testng.TestRunner.runWorkers(TestRunner.java:1147)\nat org.testng.TestRunner.privateRun(TestRunner.java:749)\nat org.testng.TestRunner.run(TestRunner.java:600)\nat org.testng.SuiteRunner.runTest(SuiteRunner.java:317)\nat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:312)\nat org.testng.SuiteRunner.privateRun(SuiteRunner.java:274)\nat org.testng.SuiteRunner.run(SuiteRunner.java:223)\nat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\nat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)\nat org.testng.TestNG.runSuitesSequentially(TestNG.java:1039)\nat org.testng.TestNG.runSuitesLocally(TestNG.java:964)\nat org.testng.TestNG.run(TestNG.java:900)\nat org.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:72)\nat org.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:123)`. refactored this method to `AvroUtils.getAvroSchemaFromPinotSchema` to share across other modules.. reverted my change to commit hash 940ca146132eb8ea781bae21d0d6c7e3272e7fa8. Unfortunately, have to store the intermediate file as a json format for a couple of reason\n\n\nGenericRow is not a recognized FileFormat\nStream/bytes are not supported as a default contract for Pinot. Good one, The intermediate file writes similar to rolling logs. If the file size is more than MAX_FILE_SIZE, the FileHandler will flush the current file and create a new one.\nhttps://github.com/linkedin/pinot/pull/2388/files#diff-917ef75d722ac12b40a9d4b36b5d3a3aR128\nThe intention behind the structure is\nprevent a single large skew of the intermediate file\nenable multi-threaded segment creation in next iteration\n. Sorry, I'm not clear on the question. Can you provide an example of it?. \n",
    "alexband": "the version in quick-start-realtime.sh is scala-library-2.10.3.jar\uff0c  but when you build, the jar in lib is scala-library-2.10.5.jar \nthis is my situation. also you need to add all the hadoop jars in the CLASSPATH\n\"$REPO\"/hadoop-annotations-2.7.0.jar:\"$REPO\"/hadoop-auth-2.7.0.jar:\"$REPO\"/hadoop-client-2.7.0.jar:\"$REPO\"/hadoop-common-2.7.0.jar:\"$REPO\"/hadoop-hdfs-2.7.0.jar:\"$REPO\"/hadoop-mapreduce-client-app-2.7.0.jar:\"$REPO\"/hadoop-mapreduce-client-common-2.7.0.jar:\"$REPO\"/hadoop-mapreduce-client-core-2.7.0.jar:\"$REPO\"/hadoop-mapreduce-client-jobclient-2.7.0.jar:\"$REPO\"/hadoop-mapreduce-client-shuffle-2.7.0.jar:\"$REPO\"/hadoop-yarn-api-2.7.0.jar:\"$REPO\"/hadoop-yarn-client-2.7.0.jar:\"$REPO\"/hadoop-yarn-common-2.7.0.jar:\"$REPO\"/hadoop-yarn-server-common-2.7.0.jar. but still there is an error about CA\n. ",
    "jackjlli": "@jenniferdai Good catch! Thanks for reminding! \ud83d\udc4d . @kishoreg My code doesn't change the code coverage a lot. \nIt seems the reason why CC drops from 70% to 69.3% is this PR: https://github.com/linkedin/pinot/pull/2327. \nOnce having clause implementation is complete, CC will be back.. LGTM :ship: it. @Jackie-Jiang RetryPolicy has already been used in fetchSegmentToLocal method. Thus, there's no need to reuse it in this part. . @Jackie-Jiang Ah, gotcha! Thanks for reminding! \ud83d\udc4d \nJust addressed your comment. \ud83d\ude09 . This PR has been verified in local machine. Everything works fine.. Problem is found in https://github.com/linkedin/pinot/pull/2823. No need to have this RP.. @Jackie-Jiang It's called auto-reload after schema/table config updated. \nOne less API call if we set reload param to true. So you can say an easy way to reload. ;)\nBy default it's set to false in case of backward compatibility.. I'm closing this PR since it's unused.. @mcvsubbu You're right. Schema is proved to be not null when adding table(https://github.com/linkedin/pinot/pull/2841). \nWe don't need this PR any more. I'm closing this PR.. @kishoreg The motivation is that users don't know how many brokers are serving their tables behind the scene. If one broker goes down, overall qps quota can be shared across the rest of the brokers. So that from users' view, pinot cluster can provide fix overall rate.\nIf we use fixed rate for each broker, when one broker goes down, overall rate goes down as well. Since requests get throttled, users will notice the decrease of qps, which's not what they want.\nI think the strategy you mention would be total qps / number of replicas(correct me if I'm wrong), which is a fixed rate. So it falls into the 2nd case.\nAnd yeah, it'd be great to have more discussions on this.. @kishoreg Gotcha! We can bring in a factor. The max_qps can be calculated from min_qps multipled by this factor. The ideal situation is that all replicas are up and each broker'd use the min_qps quota. If some replicas go down, the qps rate should not exceed max_qps.. I found an article from Stripe. Seems they have more strategies on rate limit. \nhttps://stripe.com/blog/rate-limiters. https://github.com/linkedin/pinot/pull/2958 per @mcvsubbu's request. @sunithabeeram Comment addressed. New message would be like:\nStorageQuotaChecker - Storage quota exceeded for Table testTable. New estimated size: 5.81KB > total allowed storage size: 5.47KB, where new estimated size = existing estimated uncompressed size of all replicas: 4.69KB - existing segment sizes of all replicas: 900B + (incoming uncompressed segment size: 1KB * number replicas: 2), total allowed storage size = configured quota: 2.73KB * number replicas: 2. @kishoreg If we wanna clean up some jars during/after the build, maybe Maven clean plugin would be a better option? https://maven.apache.org/plugins/maven-clean-plugin/. @kishoreg We can finally make the enforce command pass by removing jersey-client:1.19.2:test:jar out of the root pom. And jersey-client:1.19.2:test:jar is only used in pinot-server module. Now I'm checking whether we can downgrade this test jar version to 1.9 for pinot-server.. @kishoreg @jenniferdai Now when running mvn clean install, enforcer plugin will be triggered for every module:\n$ mvn clean -DskipTests install | grep \"enforcer-plugin\"\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-common ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-transport ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-core ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-server ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-filesystem ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-controller ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-broker ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-api ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-hadoop ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-tools ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-minion ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-integration-tests ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-perf ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-hadoop-filesystem ---\n[INFO] --- maven-enforcer-plugin:3.0.0-M2:enforce (enforce-dependency-convergence) @ pinot-distribution ---. @jenniferdai I've already tested it end to end.. @kishoreg The reason why I pick 3.4.11 is that Helix is also using this version. \nThe latest non-beta version is 3.4.13. \nhttps://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper. Right now validation manager and task manager run every 1 hour by default. In order to stagger the tasks, validation manager is set to start at 30th min. Task manager remains the same.. Added ControllerPeriodicTask abstract class in the latest push, so that Pinot lead controller's logic can be unified in the same code, and can be easily migrated in future.. @kishoreg Changed the path to /tables/{tableName}/batch. \nBasically it mainly checks storage quota and should be put under the table size resource.. This PR is no more needed. I'm closing this PR.. @ly923976094 In Pinot, segment push is pretty much the same as segment upload.\nsegmentPushFrequency is the frequency of uploading new created / updated segments to Pinot cluster.\nAPPEND use case is that the segment to be uploaded is brand new and it's just added to the previous set of segments. Thus the number of segments for that table in the cluster will be increased.\nREFRESH use case is that the segment to be uploaded is updated from a previous segment and will replace the previous segment in the pinot cluster. The number of segments for that table remains the same.. @ly923976094 The segmentPushFrequency is also used for realtime data as well. The value would be the same as the ones you mentioned, like \"segmentPushFrequency\": \"daily\".\nSo ValidationManager is run at the background when Pinot controller is up and running. It's configured in pinot controller config: controller.validation.frequencyInSeconds.  Basically it gets the frequency of segment push defined in the table config and then searches for any gaps between data. E.g. if the frequency is set to daily, and the validation manager found out there's no data for 11/11, then validation manager would log the message saying \"Table: blabla has segments with invalid interval: blabla1-blabla2, and emit any metric if possible. You can check the code in ValidationManager.java for more details on how Validation manager works.. @jfim The purpose of keeping schemas in broker is to reduce the call to pinot servers if any columns in the query don't exist in table schema. Currently pinot brokers blindly send out the query to all the selected servers and get empty response without any extra info.. @npawar Yes, the method getAllHelixInstanceConfigs() also uses cached data accessor.. Could you add some tests before merging it?. Right now there's no need to make it changes. I'm closing this PR now.. @mcvsubbu Comment addressed. @sunithabeeram Unit test added.. @mcvsubbu Here's the answers:\n1. Participant controller would be needed to add state model but for now since there's no controllerResource logic in this PR, participant role would only be shown in the cluster and won't have other effect yet. The only difference is that some tests checking the number of instances might need to update the expected number.\n2. Pinot only controller would be registered as both admin and participant role. Instead of participant role, admin role will do the stuffs as the controller in dual mode does. But since we haven't change the leadership logic in this PR yet, pinot-only controller is kind of useless by now, since it can't handle periodic tasks and realtime segment completion. I've added some code in controllerStarter to avoid using pinot-only controller in production. Once the whole logic has fully been merged, this role can be unlocked for production.\n3. I've tested this PR manually by setting up a cluster locally. Things are working fine, like adding table, uploading segments, etc.\n. Test plan added for dual mode controller in: https://github.com/apache/incubator-pinot/issues/3957. This is the PR for adding logic for controller mode: https://github.com/apache/incubator-pinot/pull/3864\nTest plans:\n1. Testing dual mode controller:\n Start Zookeeper.\n Start dual mode controller.\n Start broker.\n Start server.\n Add table (succeeded).\n Upload segment(succeeded).\n Query table (succeeded).\n Stop existing dual mode controller, start a new dual mode controller.\n Upload another segment(succeeded).\n Query table (succeeded).\nSince Pinot only mode isn't supported in this PR, we'll skip the test plan for testing Helix mode and Pinot only mode.\n. That's because all the other unit tests for operators are under com.linkedin.pinot.operator.filter, while SortedInvertedIndexBasedFilterOperator locates in com.linkedin.pinot.core.operator.filter, i.e. in different packages.\nDo you think we should refactor the location of those unit tests?. That's because the type of parameter unitCount is long according to the method signature, i.e. public void addMeteredTableValue(final String tableName, final M meter, final long unitCount). That's a good idea! But let's separate these two tasks. I'll open another ticket to remove PinotSegmentRebalancer class.. We do need a setter for this, otherwise there's no way for us to mock the reader's behavior in the test.. The usage of setTableSizeReader is just the same as the one of setMetricsRegistry.. Nope. I'll remove the unused imports. \ud83d\udc4d . Fixed.. That's because the response may come from both realtime and offline servers. If we make deserializeServerResponses do the computation and emit the metric, the metric only represents either realtime or offline total response size. Thus, I'm thinking whether we sum the totalResponseSize and then emit it in one time.. Good idea \ud83d\udc4d . Good point! I'll adjust the code and add unit tests for it. \ud83d\udc4d . That's because we want to reuse the QuotaConfig class by adding qps field in it, while QuotaConfig field is under TableConfig. And TableConfig belongs to the table with a specific type(real-time or offline).  We can discuss it to find a proper place to store this qps field.. Then we need to adjust the value of qps field to be sth like 10qps or 10 query/minute. Let me create a doc to discuss this and the like.. If we print out the dependency tree, we'll find out there's another same jar but with higher version in the same module.\n[INFO] com.linkedin.pinot:pinot-api:jar:0.016\n[INFO] +- com.ning:async-http-client:jar:1.9.21:compile\n[INFO] |  \\- io.netty:netty:jar:3.10.1.Final:compile\n[INFO] \\- com.101tec:zkclient:jar:0.7:compile\n[INFO]    \\- org.apache.zookeeper:zookeeper:jar:3.4.9:compile (version managed from 3.4.6)\n[INFO]       \\- (io.netty:netty:jar:3.10.5.Final:compile - omitted for conflict with 3.10.1.Final)\nBut after excluding it from com.ning:async-http-client, the dependency tree now looks like:\n[INFO] com.linkedin.pinot:pinot-api:jar:0.016\n[INFO] \\- com.101tec:zkclient:jar:0.7:compile\n[INFO]    \\- org.apache.zookeeper:zookeeper:jar:3.4.9:compile (version managed from 3.4.6)\n[INFO]       \\- io.netty:netty:jar:3.10.5.Final:compile\nmaven will traverse the tree and then find the  io.netty:netty:jar in deeper level and ultimately imports that 3.10.5.Final jar, which is what we want.\nBut yeah, the strategy of explicitly putting dependency in higher level might be the better approach. I'll adjust the code. \ud83d\udc4d . Just noticed that PinotHelixResourceManager belongs to pinot-controller. \nSo I think for now it'd be ok to just pass the propertyStore as the param into the constructor, just like how HelixExternalViewBasedRouting does.. Good catch! \ud83d\udc4d I'll use AtomicInteger in this case. Thx!. But think it this way: whatever mistakes client makes we'll return 400, whatever the mistakes server has we'll return 500. Obviously if client gives a wrong table name, we shouldn't return a 500 since it's not a mistake from the server.. Yup, a metric called \"QUERY_QUOTA_EXCEEDED\" will be emitted in BrokerRequestHandler.. This method is used to fetch the table config with another table type. E.g. if the the table type is offline, then we try to fetch the real-time table config, and vise versa. And it's possible that there's only one table config in the property store.. It's for checking whether the admin port is missing or not.. Sure, I can clean this up.. We have a teardownTest method that deletes TEST_DIR, which contains all the test files. It will be called when each unit test is finished.. It'd be good to print the conclusion and then show the incorrect config, like:\nString.format(\"Exception when parsing table config: %s\", tableConfigString);. Test added in the latest push.. Seems FileUtils.sizeOfDirectory() would be the best option. Thanks for pointing out! \ud83d\udc4d . It'd be good to say something like Please set host {} and port {}. Thanks for the suggestions! Comments addressed.. There's no need to enable SASL-authenticated if we start a local zk server. So I think there's no harm for us to reduce one possible cause for the timeout.. I don't think ZkStarter should be sufficient to provide us enough information. Something may happened under the zk server and client code which causes the timeout.\nAnd yeah, let me reset the log level back in teardown method. \ud83d\udc4d . Add a space right after the string \"aggregator\". It'd be better to use ValueAggregatorType instead of a String \"SUM\" here?. Great! Thanks for the suggestion. I think it's good to keep this message log, since this message wouldn't be printed quite frequent, and it's beneficial for us to know how the request goes. I've adjusted the message in the latest push.. It'd be better to update the time range to 2014-2018. The same in log4j-fatal-only.properties as well.. It'd be good to just use LOGGER, i.e., replacing %s with {} and you can get rid of String.format().. Same here.. @sunithabeeram From the code perspective, the method waitUntilConnected() in 0.8.1 calls \nthe method waitUntilConnected(Integer.MAX_VALUE, TimeUnit.MILLISECONDS), which literally means waiting there forever.. SGTM. I'll create another PR for that.. https://github.com/linkedin/pinot/pull/3078. Please add an Assert.fail(); statement after this line.. It'd be good to add some logic to check whether the input tableName contains suffix.. Add a space before \"not found\".. Please log the tableName here as well.. I think it's best to use String.format() to form the String.. The method waitUntilConnected has been called in the constructor of HelixAdmin in Class HelixSetupUtils before it hits this line of code. So it should be good.. The constructor of ZKHelixAdmin has already checked whether it's connected. If we wanna wait without any timeout, we should change the one in ZKHelixAdmin constructor in Helix code, since that's the first place that checks connection.. Please change the comment here if we've decided to fetch table names from table configs.. I guess we miss a tearDown class here.. The logic here shows if there's no segments for this table, this table can still be returned. . Cool. Let's modify the description of this PR then.. Use the Constant TABLES you created here.. It'd be good to firstly calculate the estimated end time beforehand, and then check System.currentTimeMillis() < estimatedEndTime in the while loop. . A new method waitUntilNoOnlineResources() has been added to this PR.. That's because in RealtimeSegmentRelocator, we need to convert the frequency on the fly, e.g. converting 1h(string format) to 3600(long format). \nThis conversion cannot be done until constructor gets called. And this setting intervalSeconds is what we're doing in the current code for RealtimeSegmentRelocator.. The variable _executionTime is used to calculate the priority of each task in priority queue. \nRight now we use scheduleWithFixedDelay for each of the tasks.\nIf we schedule a task to run every minute, but it takes 1.5 mins to run, then the next task would be ran after 1min, i.e. the 2nd task will start at 2.5th mins.\nIf we want the next task to run right after the previous task(which took 1.5mins) finished, then scheduleAtFixedRate should be used.. I think it's preferable to use just 1 thread, so that multiple tasks won't be run at the same time (which may lead to race condition).. This is a scheduler level thread. If the thread was in task level, we could rename that.\nPlus, the log message prints out the current class name. If some exception happens, we can find out which class this exception comes from according to the log message.. Actually I like the idea of tracking the run time of each task as you mentioned in the first comment. I've added an abstract method in PeriodicTask called runTask(). We can easily calculate the run time of each task in that method and emit a metric out of it.. Added.. It's been tested in cluster integration test.\nI changed the check interval time to be configurable, so that in cluster integration test, it'll be woken up faster.. @Jackie-Jiang Nope, as long as we set _running to false, it will terminate after finishing a task.\nAnd using shutdownNow will throw a lot of unnecessary exceptions from either take() method or sleep() method.. javadoc added.. The check has been done before the task gets pushed to the list.\nSee line 61 of ControllerStarter.java. Yeah sure. The check can be removed while setStatusToDefault() needs to be called here.. I think it's essential to keep it there. One the one hand, this allows the interrupt to propagate - the method should not continue on ignoring the interrupt, which is beneficial for us to test. On the other hand, the global throwable block can just simply log the exception/error without stopping the scheduler, so that it won't block the next following task.. The check has been removed in the last push.. Missing a new line at the end.. Can we mark intervals as @nonnull here?. It'd be better to use 0L.. 0L. Why do we need to import StringUtils?  . Same as PREFIX_OF_CONFIG_OF_SEGMENT_FETCHER_FACTORY. Other controller configs in ControllerConf are eager to have them reunion.. Can we move it to ControllerConf.java?. Nice and clean here \ud83d\udc4d . I think we'll still need this class. PeriodicTask and BasePeriodicTask are so generic. They can be used in other module in future as well.\nAnd that's the reason why we put them in pinot-core.. We can rename it once we added the logic of distributed controller model.\nFor now it does handle all the tables.. I think what you're concerned about is the logic in retention manager, where the retention manager stopped if any exception occurred in one table. We can handle it in another PR.. No need to rename it at this time.. No need to rename it at this time.. You can also put 30 into a constant.. It'd be better to rename it to tableNameWithType.. The purpose of the log here is to log the value of _deletedSegmentsRetentionInDays rather than run-frequency. The latter one has been added to the base class. . This dependency is brought from two sources, and we only need one:\nDependency convergence error for com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.4 paths to dependency are:\n+-com.linkedin.pinot:pinot-server:0.016\n  +-org.glassfish.jersey.media:jersey-media-json-jackson:2.24\n    +-com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.4\nand\n+-com.linkedin.pinot:pinot-server:0.016\n  +-io.swagger:swagger-jaxrs:1.5.10\n    +-com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.4.5. So jersey-client is marked as test and will only be used in the tests. I've already verified it.. It seems jersey-core has been brought from hadoop-minicluster jar. We don't need to specify it here any more. I've removed it in the latest push. It's been tested.. I've tested it. It works after the changes.. This API would be super useful. \ud83d\udc4d . Can we print out the exception message here?. nit: add a space between ){. Indentation isn't correct here.. Is it kind of redundant here? We list the files but never test the result.. Miss new line at the end of the line.. The purpose of making the initial delay to config.getValidationControllerFrequencyInSeconds() / 2 is to stagger the execution time of validation manager and pinot task manager. \nNot sure the change is what we need.. +1 on Subbu's comment.. It'd be good to mark which 0L is invalid.. nit: It'd be good to log the messages like Start/Finished removing blablabla here and at the end of the method.. Yeah, putting the check to broker side seems to be the right place. \nIn that case, DataSchemaSegmentPruner would be useless.. Done.. It is the latter.. +1 on moving it to a config option. . 0L. Done. Changed to refreshAfterWrite. Thanks for reminding. \ud83d\udc4d . Done. A extra field called validateQuery in query has been added to this PR. Only when it's specified and it's set to true do we validate the schema.. @dasahcc Do you mean keeping one Collections.singletonList(instanceConfigs) is enough if I've already given root path?\nWe can't guarantee instances are stable; we may add/remove instances. But the purpose of getting instance configs is to get the admin endpoint, which consists of hostname and admin port. And these two elements won't be changed often for each instance. Thus, using ZkCacheBaseDataAccessor should be good in this use case. I guess the correct usage of that class is:\n_cacheInstanceConfigsDataAccessor =\n          new ZkCacheBaseDataAccessor<>((ZkBaseDataAccessor<ZNRecord>) baseDataAccessor, instanceConfigs,\n              null, Collections.singletonList(instanceConfigs));\nCould you confirm?. Great! I've tested it using your suggestion and it works perfectly. Thanks for the help! \ud83d\udc4d . Done. Another tests added.. Should this logic be put to the check of realtime table, ie. the brackets between Line 86 and Line 90?. Done. Thanks for the tip!. Good catch! \ud83d\udc4d . In your case, src is name1 and dst is dst/name1.\nSo the condition !dstFile.getCanonicalPath().startsWith(srcFile.getCanonicalPath()) is satisfied and so isdstFile.exists(). Thus, the previous dst will be deleted. . Do you mean there's an edge case that Line 116 can't handle? \nIf src and dst are the same, regardless of src's type, nothing should be done.. The reason is that I'm not sure whether this API will be exposed in the future. Right now all the listStatus from Hadoop FileSystem return an FileStatus array. So I think it's best to follow the convention.. According to the existing manual of touch command, the API throws an exception if the parent directory doesn't exist. We can follow this convention.. That's a good question. @jenniferdai do you have any comments on it?\nI've modified the code to keep the original destination dir if it exists.. Could we shorten the initial delay time here? Waiting for 60 seconds is a bit long for a test and will affect the total time to run.. I've added a new method called preComputeRequestInfo which extracts this part of logic, so that both broker and server can reuse this logic.. Done. Removed.. Done.. Done.. Actually it removes metadata from ZK AND moves segment files to Delete_Segment dir as well. That's why I name it to Removed segments. Done.. Done.. Suggestion accepted. \ud83d\udc4d . Discussed with @jenniferdai offline. She's happy with the changes @sunithabeeram proposed.. @jenniferdai I've verified that all code references to these methods have the same contract.. Talked with @mayankshriv offline. It's better we parse the query only once end-to-end, i.e from broker to server. While this might need to have another design on changing the payload, which would be out of the scope of this PR. In the current PR we guarantee the query is parsed only once in pinot-broker. We can take this payload change in the near future.. We need an instance of FilterQueryTree to be returned if it's been calculated. And simply returning this instance out of the method validateRequest looks unreasonable. Thus, I use an array to return the instance. Another way to handle that is to return the instance of RequestInfo.. This runtime exception will be captured in caller's exception block and thus throws a QUERY_VALIDATION_EXCEPTIONS back to the client. So we're good here.. Done.. Updated the PR by returning request info.. Done.. The design of using this guava cache is, if the schema doesn't exist, the cache makes an async call to fetch the schema. This async call will be done only once even if there's a burst of queries coming in (e.g N queries). The following queries (from 2nd to Nth) containing the new table name will ignore the schema check until guava cache successfully gets the schema from ZK. So in this case, we guarantee the number of times to hit ZK is just once. There won't be N ZK reads when N queries received.. Please add the condition when it should early terminate.. CleanupTask might be better?. Initializes. So the purpose of adding synchronized here is to avoid different periodic tasks running at the same time? Then is it the same as running multiple tasks in one thread?. I'm not quite sure the logic here. The variable remainingTimeMs is initially set to 30_000L. Then sleepTimeMs is set to 30_000L, since it's assigned from the larger number between 30_000L and 1_000L. Then remainingTimeMs is set to 0L. In this case, the thread will be slept only once. Could it be min() instead of max()?. I'm thinking whether the method stop be added at the end but it doesn't seem matter.. \ud83d\udc4d . Correct the method according to the latest API doc we made in PinotFS interface.. I think it's essential to log when returning false because the false result may be returned from the deep inner logic of different FS.. Adjusted the comment.. Done.. Yes, the variable assignedInstances can be null, but it can't be empty. \nIf it's empty, it's guaranteed that the method getAssignedInstancesForSegment gets called but there's no assigned instance. In this case it has been handled in SegmentValidator before hitting this part, i.e. throwing an exception in validator.\nIf it's null, the caller might be from PerfBenchmarkDriver. And it can also be that this is an existing segment, which shouldn't be in Method addNewOfflineSegment. So we're good here.. Done.. Done.. Added.. Added.. @Nonnull has been added in front of the param.\nAnd getAssignedInstancesForSegment() is called when assignedInstances not provided in Method addNewSegment(@Nonnull SegmentMetadata segmentMetadata, @Nonnull String downloadUrl). @Jackie-Jiang A Precondition check on assignedInstances is added before adding metadata to zk.. SegmentValidator also depends on other variables like pinotHelixResourceManager, executor, connectionManager, etc, which are not related to the segment itself. And the logic is in Resource class. I think it's best to instantiate one, since the latency of uploading an offline segment is acceptable.. Done.. Done.. Done.. Yes, this change is needed as creating parent directory logic is put to base method level in PinotFS class.. Some zk verification code has been added.. TestUtils.waitForCondition() added to wait for helix role getting connected.. Same as above.. Done.. Common logic has been moved to base class.. Thanks for the detail! I'll add your comments to the API doc.. Good catch! \ud83d\udc4d Addressed.. Tests added for these two scenario.. Comments updated.. Removed.. There's no code changes for copy in this PR. So no harm to leave the doc change here. :). The doc has been updated without mentioning overwrite.. Done.. Split these two brackets.. Same here.. No, Mockito cannot mock static object. In this case, Pinot controller contains more than 1 singleton object and we need to instantiate more than 1 pinot controller in our test.. Done.. Removed.. Done.. Done.. Extracted Helix controller out of PinotHelixResourceManager. PinotHelixResourceManager join as PARTICIPANT.. This variable assignment is duplicated with the following line. Just keep one of them.. I'm not quite sure the logic here. SCHEMA_SAME_INCOMING_OUTGOING should have the same TimeUnit? But here one is in Days and the other is in Seconds. Or could you add some comments here?. Same as here. If the schema has no incoming, why do we need \"incoming\", TimeUnit.SECONDS, FieldSpec.DataType.LONG?. Removed PowerMock.. Done.. Done.. Right now Pinot controller (pinot only and dual modes) still need this logic for realtime segment consumption. I think for now it's best to leave it here. Will add TODO in the comment.. Good catch! Fixed.. Done.. Done.. Done.. Done.. Done.. Done.. Yes, and for Pinot only mode, we won't touch this line since it's gotten an exception from isPinotOnlyModeSupported() and exit the app.. Done.. Addressed.. Done.. Added a TODO in the comment. ControllerLeadershipManager will be removed once everything is ready.. Please update the comment here if logic changes.. Helix only mode controller is just to register a Helix controller to Helix cluster and there's no logic added for that. Thus, it's easy to split Helix only mode out of the dual mode. Right now we can run controller with Dual mode and Helix only mode. . Done.. TODO added.. Refactored the code for adding service status callback for both contollerManager and participantManager.. TODO added.. Removed.. It would be good to leave some comments to stagger these two tasks here.. Should the shaded jar names be the same, either pinot-hadoop-0.1.0-shaded.jar or pinot-hadoop-0.1.0-SNAPSHOT-shaded.jar?. It might be good to provide some explanations on the differences of these two functions, or provide reference links.. ",
    "agrawaldevesh": "Is there any update on this ? Seems easy enough to do by exposing the DataSchema(cachedDataScheme) from com.linkedin.pinot.core.query.reduce.BrokerReduceService#reduceOnDataTable into BrokerResponseNative. It seems straightforward and backward compatible change that I would be willing to work on it. \nIt would save me writing some janky client side hacks if this existed.. I am wondering if there is an update on this ? I could use it too. I think it is a more broader change but looks fairly straight forward.. My queries are relatively simple for now, so I have hacked my way away around it in the client. But schema inference is proving to be more involved (issue 2302) and so I would rather get that done. So to answer your question, this is a nice to have for me presently.. Doing expressions on the client side (in the select statement) can be done on the client but it is essentially an involved operation: \nConsider a contrived query like this: Select mul(foo, 2), div(foo, bar) from Table where mul(baz, 4) = 10. \nIf this query is generated in an adhoc manner, the client would have to have support for parsing this query and figuring out that the foo, bar need to multiplied like so and that baz has to be ignored. That's a lot to ask from a client and it is something that would be easier to implement in the database itself. \nCan you help me understand how much work would it be to implement such features ? I am happy implementing if they won't require a lot of architectural changes :-). Without this diff, \n\"select `a.b.playerID` from baseballStats limit 10\" clearly works\nbut \"select `a.b.playerID`, count(*) from baseballStats group by `a.b.playerID`\" returns no results. \nOTOH, with this diff: both of these above queries work and the group by returns non empty results. It also obviously works if I remove the backticks. \nI understand that this makes us further deviate from SQL. \nHaving said that, going to SQL isn't going to be easy and would anyway require more changes. I know that some of you have started thinking of Calcite integration etc, which would wholesale replace the current the compilation subsystem. \nSo I think this change is worth putting in for the short term until we decide to take bigger work towards SQL. (Which is totally something Uber wants !). \n. ",
    "jagarwal0424": "Hi tekbird,\nI am trying to build Pinot using below steps, but i don't find  pinot-distribution/target/pinot-0.016-pkg folder after doing successful mvn. How did manage that? \ngit clone https://github.com/linkedin/pinot.git\ncd pinot\nmvn install package  -DskipTests\ncd pinot-distribution/target/pinot-0.016-pkg\nchmod +x bin/*.sh\n. Hi tekbird,\nThanks for your response, \nmvn install step seem successfull but still pinot-distribution folder does not contain required pkg. Please see attached log when you have time.\nmvn_error.txt. ",
    "tekbird": "If you do mvn install step, it should create the pkg file\nSent from Mailhttps://go.microsoft.com/fwlink/?LinkId=550986 for Windows 10\n\nFrom: jagarwal0424 notifications@github.com\nSent: Friday, January 26, 2018 1:51:25 PM\nTo: linkedin/pinot\nCc: tekbird; Author\nSubject: Re: [linkedin/pinot] Error while running bin/quick-start-offline.sh (#2346)\nHi tekbird,\nI am trying to build Pinot using below steps, but i don't find pinot-distribution/target/pinot-0.016-pkg folder after doing successful mvn. How did manage that?\ngit clone https://github.com/linkedin/pinot.git\ncd pinot\nmvn install package -DskipTests\ncd pinot-distribution/target/pinot-0.016-pkg\nchmod +x bin/*.sh\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/linkedin/pinot/issues/2346#issuecomment-360713895, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AApadlh_F9LStYdcVOD5ZGy9pu4ASFJ9ks5tOYsFgaJpZM4RkY2l.\n. ",
    "WicketWarrick": "Hi tekbird,\nI have the exact same problem and error. I tried adding the following dependency to the pom.xml file:\n<dependency>\n<groupId>commons-logging</groupId>\n<artifactId>commons-logging</artifacts>\n<version>1.2</version>\n</dependency>\nBut I still get the same result. I did some research on stackoverflow and others, but most of the time they just say that it should work if the dependency is added to the pom.xml file, if the commons-logging-1.2.jar is in the lib folder, and if that .jar contains the classes that are causing the error (it's almost always on the LogFactory class on stackoverflow threads). \nAre you still stuck on the same error ? If not, I would love to know how you did to fix it.. ",
    "esoterick": "@tekbird @jagarwal0424 @WicketWarrick If you update the quick-start-offline.sh line 80 from commons-logging-1.1.1.jar -> commons-logging-1.2.jar things should just work.. @feng-tao if you updated the quick-start-offline.sh line 80 from commons-logging-1.1.1.jar -> commons-logging-1.2.jar things should just work.. ",
    "alex-hofsteede": "An example of a working realtime pinot table config using a remote kafka 0.9+ broker would be super helpful.. @jenniferdai IIUC this config still implies a zookeeper dependency (stream.kafka.zk.broker.url etc), I was looking for a solution along the lines of the new consumer which replaces the old simple and highlevel consumers and removes the client dependency on Zookeeper to store topic offsets. Is that something that Pinot supports?\n. @kishoreg I think so, just to clarify, does that mean that stream.kafka.hlc.zk.connect.string andstream.kafka.zk.broker.url can always just be a local zookeeper instance for pinot offset management, unrelated to the remote kafka broker that I am consuming from? . Great, I was able to get ingestion working with a config based on the one in https://github.com/linkedin/pinot/pull/2421 (without the .zk. config options) Thanks so much @jenniferdai @kishoreg @jfim !. ",
    "chenboat": "Hi @jenniferdai , this is Ting Chen from Uber. I will work on the HDFS feature with James. We are happy to contribute. I am still looking into the current progress in the codebase and will contact you with more questions. Thanks. . Hi @kishoreg the issue seems to relate to the following code in the refreshSegment() function:\nhttps://github.com/linkedin/pinot/blob/9ea11693d693d53f5712571cb1259344b5b17cc9/pinot-controller/src/main/java/com/linkedin/pinot/controller/helix/core/PinotHelixResourceManager.java#L1497-L1507\nBy default (i.e., if the table config does not have custom config banning direct message), the controller sends messages to servers for segment reload but it does not ask Brokers to refresh the time boundary. The else branch, on the other hand, goes through a Helix state transition to reload the segments in servers and the brokers also get notified in the process. \nSo a potential fix is to let the controller also message the broker to refresh the time boundary. The broker can then compute the new time boundary: it does not need to wait all the segments get refreshed though as long as it gets a more recent time boundary. This will make the two if-else branches' behaviors about the same.   \n. Revise the codes based on mcvsubbu's review.. @jenniferdai , thanks for the detailed design. A few questions to confirm about the segment upload.\n\nOn the controller side,  segmentUpload()...\nDuring this step, we create a temporary file with the segment we wanted to commit after the first step and write to that ...\n\n\"We\" refers to the controller? If so, the controller will create and write the file to either deep storage or local file system. Is there a way to let the server upload the segment to the deep storage directly and pass only metadata to the controller for commit? Your server side segmentCommitUpload() design seems to allow \"either the segment will go to deep storage or local storage on the controller\". \n. > -Then, we commit the segment metadata. In the first pass, we will still need to download the segment from deep storage or send the entire segment with .tar.gz in order to to get the segment metadata.\nWhy do we need to download the segment again to get segment metadata info? Which kind of info we can get from a download? Can we get them the query parameters of segCommitEnd request?\n. A meeting note summarizing our discussion on Wednesday. Feel free to edit or comments. \n@jenniferdai @fx19880617 @jamesyfshao . A proposal to remove the segment data downloading by Controller for metadata extraction is added by @npawar  and @mcvsubbu.\nhttps://cwiki.apache.org/confluence/display/PINOT/Segment+Completion+Protocol+enhancements+for+Deep+Store+support. @npawar @fx19880617 @jenniferdai . @npawar Thanks for the investigation. It really helps. In our use cases, the client first wanted to use \"1 week\" as the bucket size or granularity. When they found out it did not work because 'week' is not supported, they switched to use 7 days (probably without understanding the semantics). So the ideal fix is to make week work as a legit bucket unit because alignment by calendar weeks is more intuitive to users. Is it possible to do it? Otherwise, we can spell out the plausible combinations of parameters in this UDFdoc -- I guess the users find 1:WEEKS there.  \nAs for fixing the issue with the granularity in terms of  days, I would say both (1) and (2) are fine as long as we define it clearly in the same UDF doc. As far as I know, there is no well known notion about how to align a general N days bucket: so most of users can accept a definition and decide if it works for them. (3) is not working for us in this case because our users do want to the Pinot feature to convert the time to a local timezone (e.g, Chicago).  . Thanks @Jackie-Jiang and @snleee for the quick replies. DATETIMECONVERT is a popular UDF used by several clients in Uber. While we have recommended to our users work around the problem to use EPOCH time as the output format, SDF is still useful because some of our users are issuing adhoc/interactive queries -- to them SDF conversion of Pinot is really convenient. That is why I believe Pinot internal query optimization is beneficial.   . @mcvsubbu I will write a more detailed proposal and add it here. Can you also try to assign the issue to me now? It looks like I was not a participant on this issue earlier.. @mcvsubbu The cwiki is linked to Jennifer's original proposal . @mcvsubbu  The cwiki has user restriction on who can add/edit page on the space. Right now neither Chinmay nor I can add a page to that cwiki space. Can you open the edit access right to us?. > I would prefer that we avoid getting the segment file altogether.\n\nThe server uploads the segment metadata file as a part of the COMMIT message, and that gets passed around in the CommittingSegmentDescriptor.\nWe should avoid pulling the segment metadata file out of the tarball.\n\nThank you for the suggestion. That will simplify the workflow. I am working on that.. @mcvsubbu , some context about this PR, in the umbrella issue, we talked about a phased solution to use Pinot FS (the detailed plan here)\nhttps://github.com/apache/incubator-pinot/issues/3420#issuecomment-437806568\nInitially we planned to do Pinot FS refactoring only. In the last phase M4, we plan to do what you suggested and let server upload the metadata directly. I also did a code work through and found some metadata field server needs to pass through is nested object (i.e., ColumnMetadata). So the last step is a more involved API change (rather than adding a few more parameters). I plan to work on next.\nSo can we treat this PR as an incremental bug fix on what Jennifer has refactored and committed so far?   . Thanks @npawar and @mcvsubbu for the detailed evaluation. So the server sends the extracted meta data files to the controller -- that is a good idea. I was thinking of servers sending structured data fields to the controller which seemed involved too much data transformation. I will send a revised PR alone the line you described.. > +1 to @mcvsubbu's comment about adding it in the existing call instead of having a new segmentCommitEndWithMetadata. It would much simpler to migrate, and we'll avoid a lot of code duplication\nI think @mcvsubbu was asking to add an optional form to the existing segmentCommitEnd() and add a new POST endpoint segmentCommitEndWithMetadata() ?\nThe current segmentCommitEnd() is a GET.  If I make it a POST (which seems the right type to me) and add the form to it, would it be backward compatible?  \n. > Also, can you modify the existing SegmentCommitEnd to take on an optional 2-part form? #3748 (comment)\nTo clarify. The current SegmentCommitEnd() is a GET method. Can a GET method take a form? It looks to me abuse of GET. If we change to POST, would that be a back compatibility issue?. > Minor comments. LGTM otherwise\nThanks. Additional logs added.. > Please note any manual testing you have done in the PR.\n\nHere is the test I would suggest. Run LLRealtimeClusterIntegration test in debug mode on your IDE, and issue manual curl calls to start/upload-data and end commit with metadata. Also, if you modify segmentCommit end point, then test that as well the same way.\nThese tests will make sure that before we add the server side, the code we have on the controller work right.\nWhen we add the server side, we should add integration tests for the whole package.\nthanks\n\nI rely on two integration tests: LLCRealtimeClusterIntegrationTest and LLCRealtimeClusterSplitCommitIntegrationTest which covers segmentCommit and segmentCommitEnd http rest points. For extra safety I used debug modes to check the metadata extraction and it looks good.\n. > Can you make sure that you have the segment name logged in all the new log messages you added? I tried to note it, but I may have missed some.\nACK.. Add a shutdown hook at the TimeboundaryRefreshMessageHandlerFactory() c'tor (L55-65).. Done. Done.. Done.. Done.. Done. . Done.. It should return true here and my new code does not change the existing logic. It returns false iff the table config explicitly sets the custom config field. If the table config is nil, true is returned. . Done.. Done.. Done and thanks for pointing this out.. Done.. Done.. True should be returned instead. My refactoring does not change the current logic. False is returned iff only if tableConfig explicitly does not allow sending message (by setting the custom config field.). Add the new condition check as suggested.. Done.. Done.. Done.. Done.. Done.. Done.. Move segment metadata extraction to the LLCSegmentCompletionHandler.. You are right. Flip the boolean expressions.. Right. I made 2 and 3 both return null.. Resolved by returning null as pointed in the comment below.. No. The segment file in this function is on local mounted FS. This should work on the current clients using local FS. I will modify this function so that it also works for clients on deep storage.. Change done to make the method work for Deep storage. Note this function still download the segment file but it is not primary means to extract metadata now.. I still prefer to use a URI to pass into \nextractMetadataFromSegmentFile(.,.) because PinotFS expects an URI in general.  Construct a URI directly instead of calling \nControllerConf.getUriFromPath (which is essentially a thin wrapper). \n. @mcvsubbu My latest commit  already passed in \nnew URI(segmentLocation) as suggested. Please take a look.. Done. Now in uploadSegment(), the metadata will be extracted directly for the uploaded file if it is not a split commit.. Use java.net.URI uniformly now. In fact, my test shows that the original apache uri usage may not work for URI with % char in it. Please see the two added tests in LLCRealtimeClusterSplitCommitIntegrationTest() for details. They can be deleted when this PR is submitted. . No. I am not doing metadata extracting in this handler. There is a control flag isSplitCommit in calling the uploadSegment(). If it is true, there will be no metadata extraction. Note that we pass true at this line.\n. Agree. I suppose the code is already doing what you suggested? In the lines follows:\n// Return failure to server if both extraction efforts fail.\nif (segmentMetadata == null) {\n  LOGGER.warn(\"Segment metadata extraction failure for segment {}\", segmentName);\n  return SegmentCompletionProtocol.RESP_FAILED.toJsonString();\n}. Done.. Done.. Done.. Done.. Done.. Done.. I got what you were saying. Simplify the logic and return failure if there is no files in the input.. Done refactoring. . Reformat with guideline applied.. Done. Put the config into IndexLoadingConfig just like splitCommit. . Let me explore a bit your idea to pass in the metadata files via the Segment Descriptor.. Done.. I see. Then we can just use the existing metadata files on the server -- and there is no need to delete any temp files. I tested it and it works. Please check the latest commits.. Done.. Done.. Done..\n",
    "EronWright": "@npawar are you envisioning a plugin system here?  i.e. install a stream provider, configure it, provide a facility for storing state (e.g. offsets), some documentation, etc?. Thanks @mcvsubbu, by formalizing the effort a bit more, the community could jump in and help out.. Thanks @mcvsubbu and @npawar for the ongoing effort.   . I took a look at the abstractions with en eye to how to map a dynamic sharding scheme (e.g. that of Pravega) into the partition level consumer interface of Pinot.\nOne idea I had was to develop some notion of virtual partitions (e.g. fixed partitioning of the stream's keyspace).  The per-partition checkpoint requirement could be satisfied, but the notion of an offset may be a problem.   How central is the notion of offset, could it be factored out as an implementation detail of the consumer?\nAlternatively one could target the high-level stream consumer interface.   I don't understand what the tradeoff would be.  I also don't understand how checkpoints work in the high-level API; does Pinot expect a global checkpoint or a per-indexer checkpoint?\nThanks for any insights!. Linking to #2583. ",
    "jihaozh": "Thank you. I've written documentation to some of theAPIs. With swagger, we can write more later.. Thank you!!!. Added the screenshot.. Rebased. The old pipeline skips anomaly detection if the time series does not pass data filter with in a time range. . One question. How will this affect our existing detection configs without the new active flag?. Looks like some unit tests failed.. This looks awesome. Thank you @dylancharris for adding this!. It would look like this. For example, the detection stage will have two methods:\n/*\n   * Returns a data model describing all required data(time series, aggregates, existing anomalies) to perform a stage.\n   * Data is retrieved in one pass and cached between executions if possible.\n   * @return detection data model\n   /\n  StaticDetectionPipelineModel getModel();\n/*\n   * Run detection in the specified time range and return a list of anomalies\n   * @param data data(time series, anomalies, etc.) as described by data model\n   * @return list of anomalies\n   /\n  List runDetection(StaticDetectionPipelineData data);\nIn the first method, the user defines what data they need to fetch for that stage, like the time range for the time series, aggregates, existing anomalies, events. The framework will fetch the data required by the user and then run the stage with the data.\nVery similar to our getTimeSeriesIntervals, analyze in the current interface: https://github.com/linkedin/pinot/blob/master/thirdeye/thirdeye-pinot/src/main/java/com/linkedin/thirdeye/anomalydetection/function/AnomalyDetectionF\nunction.java. But the new interfaces add more flexibility to fetch aggregate values and holiday events and fit into the new pipeline.. This is so cool! Finally, we have a data source to bootstrap Thirdeye!. looks good. left one comment. thank you for putting this together. probably hide LinkedIn internal URL in comments.. Those are done in the algorithm libs.. Looks like there are some issues on detection yaml translation caused by this PR. I'll submit a follow up PR.. Thanks for the effort. But afaik, anomaly detection libs have heavy dependencies on thirdeye.api package.Those references will be broken by this change.. Will add. No problem. Thank you! This is cool.. We are iterating through two arrays at the same time. Not sure how to do that with reduce in JS?. Changed to await/async!. sure. Changed to prop. Removed unnecessary awaits . Thanks! That would be much easier!. Sure!. I could do that. But the problem is that there are a lot of existing holiday events in our DB right now. If I don't collect existing events there might be duplication.. Yes. I've set up the minimum time to now, so this will only fetch the future holidays. . existingHolidayEventToCountryCodes maps the holiday in to a country codes hashset.  So this shouldn't be a problem . Sure. If the holiday belongs to a specific country, holiday.getCreator().getDisplayName() will return strings like \"Holidays in United States\", \"Holidays in Canada\", etc, If the holiday doesn't belong to a specific country, this returns null.  I'll change this code to check the string length is greater than 12 and also return NO_COUNTRY_CODE if no country code found.. Sure. Thanks! I will add this logic and tests.. Can we just remove all existing events within the specific time range and write the new ones?. Yen let me remove the deprecated isMerger flag since I'm modifying this part of this file.\n. Sure. Will change.. Sure. Will change. Could be b.containsKey(key)? trivial though.. durations.containsKey(key)?\n. remove?. fixed. fixed. fixed. currently not. leave it for now.. Fixed. Removed. Fixed. Fixed. Fix comment above the function? Seems no longer does filling NULL values for missing rows.. Sure. Will change to a list of anomaly functions.. yes, I can add that.. This script is used for PhantomJS to open an anomaly page and take a screenshot. Then it will be put in an alert email. I increased this delay here so that the script will take the screenshot after the page is fully loaded, otherwise we get an empty picture in the email. . I guess it's because interval is a function pointer to setInterval.  Adding interval(); actually calls the function.. Okay. It's redundant then. This was written a year ago. Maybe it's time to clean it up. . this works. thanks for the example!. removed. thank you! changed to use the util.. Yeah. If the dividend is zero, the division will be short-circuited. so this anomaly will not be filtered.. Looks like a unrelated file change.. Let's just put it here. Thank you for cleaning up the tests! . No more static final constant?. Looks like still need an alert filter class name for the regression alert filter to work. . Thanks. Added after method.. Maybe keep separate so that we can remove the migration resource after fully migrated to the new pipeline?. Thank you. I've added an example YAML file for testing. . changed to serialize the config object. We can have a higher level API where the user only needs to define what data they need to fetch for that stage. The framework will fetch the data and then run the stage with the data.. sure. I'll add the java doc.. will rename this to inputData.. The empty list is the group-by dimensions parameter which meant to be used only for dimension exploration for now. So this is not exposed in the high-level interface.. These are wrappers around the interfaces and work as the drivers for our interfaces.. Yeah, but in the current design, the class name has to come from the properties because there are multiple nested wrapper class names we need to pull out from one detectionConfigDTO.. Added another layer.. Solves all problems in computer science!. maybe import StringUtils in the beginning. Maybe do \n\nmetricConfigDTO.getTags().removeAll(Collections.singleton(tag));\n\nSo that it's consistent with TE code base.. should this be a @ DELETE endpoint?. I like Javascript. Have to implement heap from scratch!. Maybe instead of passing the whole taskContext, only pass in part of the ThirdEyeAnomalyConfiguration that is needed in this alerter.. In a new design, we decided to move filling current & baseline value back to the detection pipeline again. So currentAndBaselineLoader won't be necessary anymore. let's leave it for now.. Maybe change the return type to Map, would add more flexibility. . just in case the configuration might be a list or something else later. such as \n\nalerter_configuration: prop: [value, value]\n\nthirdeye usually uses a MapUtils library to get properties out of Map configs.\nnot a blocker. . changed to isMovingWindowDetection. added. yes. this is the expected behavior as we do currently.. maybe not now cause this function requires passing multiple parameters from outside and intended to use only here.. changed to the Enum type. . Some changes in the YAML format coming soon. Have to update this template later I guess.. thanks. changed to use string utils.. nice catch. forget to push a commit.. Thank you. Nice catch. Probably use PUT for update action. Still need this?. clean these lines?. this is the example template that shown as default in the alert Yaml edit page. To keep this simple, I think a yaml with dummy values (w/o linkedin specific information) would be enough for now.\n. removed. remove commented code?. consider use feedback.getFeedbackType().isAnomaly() ? that one is in the feedback type label class, make it easier to manage the labels.. can we do migrateLegacyAnomalyFunction(anomalyFunctionId) first for each legacy function. and then let\nYamlDetectionAlertConfigTranslator(detectionConfigDAO).translate(detectionAlertYaml) to handle the vector clocks and detection config id list? So that we don't need extra logic to plug in vector clocks.. Is it possible that we don't access the anomaly function DAO here? This translator will be kept after the migration, i.e. after the anomaly function DAO deprecated. I'd prefer not to refer it in the new code.. good idea. changed.. might want to change this path?. Yes. Otherwise, all previously manually set parameters will be lost (override by tunable module) during migration and impacts detection performance.\n. We still want to see this in the log?. add '/' before 'yaml/preview' ?. nice catch. merged. added. sure. good idea.. Let's not overuse Singleton pattern.\nSince there is no access to the resource will be requested from multiple, disparate parts of the system and the initialization of the object is not heavy.\n. Looks like this yamlConfig is loaded and thrown away immediately. It should be fine to let the client code to do validate yaml syntax, cause it has to load the yaml anyways. . Should be detection pipeline, not subscription group. And this error checking logic is missing in the /create-alert endpoint.. Not really. I noticed a bug caused by the id missing in the vector clocks. But the vector clock will be generated automatically from the detection config id list when alerter runs.. added . change this path requires frontend changes too.. same as above.. Do we need to 10x pinot client timeout?. Looks like the close is missing.  It's safer to put connection, statement, result set into a try-catch-resource block so that they would be closed(resource released) automatically once done. \nlike \n```\n    try (\nConnection conn = dataSource.getConnection();\nStatement statement = stmt = conn.createStatement();\nResultset rs = stmt.executeQuery(SqlUtils.getDimensionFiltersSQL(dimension, tableName));\n){\n // read the result\n    } catch (Exception e) {\n// catch exception\n    }\n``. remove println. consider logging them if necessary.. consider \"The try-with-resources Statement\" for close since they are AutoCloseable. it makes the code cleaner.. Any specific reason to set the lowerBoundInBytes here? cause if the Runtime.getRuntime().maxMemory() is smaller than lower bound, should we still set it to 100M?. Looks like two conditions are the same. Consider merge them.. not a 'point query'. same as above. 'SQL' instead of 'PQL'. Maybe clean up the javadocs since this is for standard sql?. remove?. don't need to add this predicate. It's hard to estimate how much would be enough. (Depends on how many detection jobs is running, etc). If set too low, the performance suffers, if set too high, the cache would eat too much memory. To cap it to one-third of memory is reasonable I think. added a log there to show the cache size.. added. yup. but even if we disable the cache, and re-fetch the data, it requires to create a copy of time series anyways. . this parameter name has been changed to 'percentageChange'. Yes. When it tries to catch up, the task takes longer to execute. Without this backoff logic, lots of duplicated tasks will pill up, which exacerbate the overloading issue. . Need a Map from string to TimeSeries here. We need a predicted time series per detection rule and dimension value.. The windows inmonitoringWindows` are overlapped with each other. doing a merge/append may not get the right result. Unless the moving window is moved into the library, then we can simply get the predictions for the whole detection range. . In the merger, dimension explorer, and anomaly filter wrapper need to handle this predicted time series too. . updated. sure. The time zone should be the frontend's timezone. \nTechnically, the granularity of the graph should be the granularity for detection. However, with yaml, we allow the user to monitor in different granularity in different detection rules. Therefore, multiple granularities could be used in the in one detection, we don't know which one to show. I suggest using default time granularity for the metric in preview graph for now. . Should we keep the timezone? @harleyjj could you check how RCA makes this call, it should use the same timezone to make all graph consistent. \nThe granularity can be just left empty.. Just checked this. \nThe timezone should be pinned to \"America/Los_Angeles\".\nGranularity should be left empty.\nThanks.. The max duration actually not in the properties map. It's in the nested merge wrapper properties.. Yeah. I'll just check the number of anomalies instead.. ",
    "metasensus": "Full detailed log is below\n[WARNING] Error injecting: org.codehaus.plexus.archiver.jar.JarArchiver\njava.lang.ExceptionInInitializerError\n    at org.codehaus.plexus.archiver.jar.JarArchiver$$FastClassByGuice$$180e749b.newInstance()\n    at com.google.inject.internal.cglib.reflect.$FastConstructor.newInstance(FastConstructor.java:40)\n    at com.google.inject.internal.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:61)\n    at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:105)\n    at com.google.inject.internal.ConstructorInjector.access$000(ConstructorInjector.java:32)\n    at com.google.inject.internal.ConstructorInjector$1.call(ConstructorInjector.java:89)\n    at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115)\n    at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:133)\n    at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68)\n    at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:87)\n    at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:267)\n    at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016)\n    at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1103)\n    at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012)\n    at com.google.inject.internal.InjectorImpl.getInstance(InjectorImpl.java:1051)\n    at org.eclipse.sisu.space.AbstractDeferredClass.get(AbstractDeferredClass.java:48)\n    at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)\n    at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53)\n    at com.google.inject.internal.ProviderInternalFactory$1.call(ProviderInternalFactory.java:65)\n    at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:115)\n    at org.eclipse.sisu.bean.BeanScheduler$Activator.onProvision(BeanScheduler.java:176)\n    at com.google.inject.internal.ProvisionListenerStackCallback$Provision.provision(ProvisionListenerStackCallback.java:126)\n    at com.google.inject.internal.ProvisionListenerStackCallback.provision(ProvisionListenerStackCallback.java:68)\n    at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:63)\n    at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45)\n    at com.google.inject.internal.InjectorImpl$2$1.call(InjectorImpl.java:1016)\n    at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)\n    at com.google.inject.internal.InjectorImpl$2.get(InjectorImpl.java:1012)\n    at org.eclipse.sisu.inject.Guice4$1.get(Guice4.java:162)\n    at org.eclipse.sisu.inject.LazyBeanEntry.getValue(LazyBeanEntry.java:81)\n    at org.eclipse.sisu.plexus.LazyPlexusBean.getValue(LazyPlexusBean.java:51)\n    at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:263)\n    at org.codehaus.plexus.DefaultPlexusContainer.lookup(DefaultPlexusContainer.java:243)\n    at org.codehaus.plexus.archiver.manager.DefaultArchiverManager.getArchiver(DefaultArchiverManager.java:63)\n    at org.apache.maven.plugin.assembly.archive.DefaultAssemblyArchiver.createArchiver(DefaultAssemblyArchiver.java:302)\n    at org.apache.maven.plugin.assembly.archive.DefaultAssemblyArchiver.createArchive(DefaultAssemblyArchiver.java:170)\n    at org.apache.maven.plugin.assembly.mojos.AbstractAssemblyMojo.execute(AbstractAssemblyMojo.java:484)\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\n    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)\n    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)\n    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)\n    at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)\n    at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)\n    at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(java.base@9-internal/Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(java.base@9-internal/NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(java.base@9-internal/DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(java.base@9-internal/Method.java:531)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 1\n    at org.codehaus.plexus.archiver.zip.AbstractZipArchiver.(AbstractZipArchiver.java:122)\n    ... 59 more\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary:\n[INFO]\n[INFO] pinot .............................................. SUCCESS [  3.182 s]\n[INFO] pinot-common ....................................... SUCCESS [  3.503 s]\n[INFO] pinot-transport .................................... SUCCESS [  1.943 s]\n[INFO] pinot-core ......................................... SUCCESS [  1.458 s]\n[INFO] pinot-server ....................................... SUCCESS [  3.391 s]\n[INFO] pinot-controller ................................... SUCCESS [  2.579 s]\n[INFO] pinot-broker ....................................... SUCCESS [  2.739 s]\n[INFO] pinot-api .......................................... SUCCESS [  0.150 s]\n[INFO] pinot-hadoop ....................................... SUCCESS [  1.647 s]\n[INFO] pinot-tools ........................................ FAILURE [  1.763 s]\n[INFO] pinot-minion ....................................... SKIPPED\n[INFO] pinot-integration-tests ............................ SKIPPED\n[INFO] pinot-perf ......................................... SKIPPED\n[INFO] pinot-distribution ................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 22.620 s\n[INFO] Finished at: 2018-03-19T08:08:32-07:00\n[INFO] Final Memory: 41M/137M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-assembly-plugin:2.5.5:single (build-pinot-tool-launcher) on project pinot-tools: Execution build-pinot-tool-launcher of goal org.apache.maven.plugins:maven-assembly-plugin:2.5.5:single failed: An API incompatibility was encountered while executing org.apache.maven.plugins:maven-assembly-plugin:2.5.5:single: java.lang.ExceptionInInitializerError: null\n[ERROR] -----------------------------------------------------\n[ERROR] realm =    plugin>org.apache.maven.plugins:maven-assembly-plugin:2.5.5\n[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy\n[ERROR] urls[0] = file:/home/deepak/.m2/repository/org/apache/maven/plugins/maven-assembly-plugin/2.5.5/maven-assembly-plugin-2.5.5.jar\n[ERROR] urls[1] = file:/home/deepak/.m2/repository/org/slf4j/slf4j-jdk14/1.5.6/slf4j-jdk14-1.5.6.jar\n[ERROR] urls[2] = file:/home/deepak/.m2/repository/org/slf4j/jcl-over-slf4j/1.5.6/jcl-over-slf4j-1.5.6.jar\n[ERROR] urls[3] = file:/home/deepak/.m2/repository/org/apache/maven/reporting/maven-reporting-api/2.2.1/maven-reporting-api-2.2.1.jar\n[ERROR] urls[4] = file:/home/deepak/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.1/doxia-sink-api-1.1.jar\n[ERROR] urls[5] = file:/home/deepak/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.1/doxia-logging-api-1.1.jar\n[ERROR] urls[6] = file:/home/deepak/.m2/repository/junit/junit/3.8.1/junit-3.8.1.jar\n[ERROR] urls[7] = file:/home/deepak/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar\n[ERROR] urls[8] = file:/home/deepak/.m2/repository/org/codehaus/plexus/plexus-interactivity-api/1.0-alpha-4/plexus-interactivity-api-1.0-alpha-4.jar\n[ERROR] urls[9] = file:/home/deepak/.m2/repository/backport-util-concurrent/backport-util-concurrent/3.1/backport-util-concurrent-3.1.jar\n[ERROR] urls[10] = file:/home/deepak/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar\n[ERROR] urls[11] = file:/home/deepak/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar\n[ERROR] urls[12] = file:/home/deepak/.m2/repository/org/apache/maven/shared/maven-common-artifact-filters/1.4/maven-common-artifact-filters-1.4.jar\n[ERROR] urls[13] = file:/home/deepak/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.22/plexus-interpolation-1.22.jar\n[ERROR] urls[14] = file:/home/deepak/.m2/repository/org/codehaus/plexus/plexus-archiver/2.10.2/plexus-archiver-2.10.2.jar\n[ERROR] urls[15] = file:/home/deepak/.m2/repository/org/apache/maven/shared/file-management/1.1/file-management-1.1.jar\n[ERROR] urls[16] = file:/home/deepak/.m2/repository/org/apache/maven/shared/maven-shared-io/1.1/maven-shared-io-1.1.jar\n[ERROR] urls[17] = file:/home/deepak/.m2/repository/commons-io/commons-io/2.2/commons-io-2.2.jar\n[ERROR] urls[18] = file:/home/deepak/.m2/repository/org/apache/maven/shared/maven-filtering/1.3/maven-filtering-1.3.jar\n[ERROR] urls[19] = file:/home/deepak/.m2/repository/org/apache/maven/shared/maven-shared-utils/0.6/maven-shared-utils-0.6.jar\n[ERROR] urls[20] = file:/home/deepak/.m2/repository/com/google/code/findbugs/jsr305/2.0.1/jsr305-2.0.1.jar\n[ERROR] urls[21] = file:/home/deepak/.m2/repository/org/sonatype/plexus/plexus-build-api/0.0.4/plexus-build-api-0.0.4.jar\n[ERROR] urls[22] = file:/home/deepak/.m2/repository/org/codehaus/plexus/plexus-io/2.6/plexus-io-2.6.jar\n[ERROR] urls[23] = file:/home/deepak/.m2/repository/org/apache/maven/maven-archiver/2.5/maven-archiver-2.5.jar\n[ERROR] urls[24] = file:/home/deepak/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.21/plexus-utils-3.0.21.jar\n[ERROR] urls[25] = file:/home/deepak/.m2/repository/org/apache/maven/shared/maven-repository-builder/1.0/maven-repository-builder-1.0.jar\n[ERROR] urls[26] = file:/home/deepak/.m2/repository/commons-codec/commons-codec/1.6/commons-codec-1.6.jar\n[ERROR] Number of foreign imports: 1\n[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]\n[ERROR]\n[ERROR] -----------------------------------------------------\n[ERROR] -> [Help 1]\n[ERROR]\n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR]\n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginContainerException\n[ERROR]\n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn  -rf :pinot-tools. ",
    "aaronucsd": "@apucher Yeah, my error catch all for any  route that does not handle it itself. So the fix really is why it broke and gracefull add code to handle the error. But you said the catch-allreturn home` link was preventing so i can remove for now. But this is meant to catch any error that bubbled all the why up.. I don't have much context yet until i research into it more..Maybe leave the error substate for now?. Updates with @justYves feedbacks. Thanks!. Updated with humanized caching to avoid mutating the actual ember proxy models (records from store). . \"nitpick:\nin the provided screenshot, looks like there's a double border (around the tab card),\nbackground color seems a bit off as well\"\n@justYves Yes it was intended. Have discussed with Kishore on these changes. The idea is to help make the tab more dominate and noticeable as customers reports not knowing those are tabs. . fixed linting per Travis log. . Ah right. Let me add it in the RCA too. @apucher . A long time ago when i was coding java. We used to call them javadocs. . Added new route and controller unit tests for home/share-dashboard. Ah yeah. Thanks for catching this @apucher !. Updated all fetch() calls to use checkStatus to make sure we catch 401 errors.\n. NICE!. I'm not able to grok the fix. Which CP is causing the issue? All i see is replacements of getProperties with get.. > power-select-multi\n\nbtw @aaronucsd got experience with changing the bubble color for power-select-multi? I'd like to color exclusions red rather than blue\n\napp/styles/components/filter-select.scss\n```.filter-select {\n  // overriding the power-select component\n  .ember-power-select-multiple-option {\n    background-color: $te-blue-5;\n    color: white;\n    border: none;\n    border-radius: 10px;\n&:hover {\n  background-color: $te-blue-7;\n}\n\n}```. > Hey what happened to (2) and (3)?\n? It's there in thirdeye/thirdeye-frontend/testem.js? no?\n  browser_disconnect_timeout: 500,\n  browser_start_timeout: 90,. Lgtm. Can you merge it as well? I can not.. > This is amazing. Yaml config gives us the ability to move fast. Before it gets too complicated, lets make sure we document all the configs in one place? Maybe have a schema for yaml format? We made this mistake in Pinot and would like to avoid that in ThirdEye.\nSecond the document for the yaml config. We need to show in UI as well so the user know what options exits.\n. > @harleyjj I be glad to get more background on this. I understand you want to integrate the chart with the \"Manage Alert\" page, but I don't get how comparison range and legend are useful for this. Ultimately I wonder what's the value-add of this component. It doesn't seem to add any kind of shared state or interaction between the sub-components.\n@apucher I think @harleyjj is trying to make the two charts or all the charts be consistent with using the same chart component. I agree that the range comparison doesn't make sense. We might want to exempt that from this component. . Screenshot if possible mask.. > elegant fix\ntechnically we should not need to do a toLowerCase on an empty string. :). Is there a reason why we can not do this in the CSS vs here in the Controller? Maybe in the te-anomaly-table.scss file? The reason it's not ideal to put css in JS because any updates done in CSS might not catch the ones in JS classes definitions. If we want specific styles for this component or page only, we can assign a specific class name and use that to style in the CSS. Also for searching it's hard to do in both CSS and JS files for any style maintenance. I could be wrong if this is best practices. . Sorry it was late last night i meant not CSS file. But in the HBS. As it's best to keep the separation of concerns with the definitions in CSS and usage in HBS/Template files vs JS. It's not a big thing, I felt it's better if we apply so many classes to a component to do in the template vs the JS. Someone can do a clean up of a class and miss the JS files vs HBS files. If we do this in the JS, it's best to consolidate to a single BEM class perhap.. Should we use only set here if it's only for one prop?. I feel this name could be better named perhaps. Maybe something like defaultApplication, as it's just happens to be the selected as well. And i'm not sure we need to make this a computed if it's returning the first one anyway. Are we assuming here model.applications will update?. perfect! As controller itself being a singleton (it does not get called over and over like the route) is not ideal for setting anything dynamic and having a need of model itself. The setupController is primarily for setting up some controller context dynamically. And in this case, it is a good usage of   accessing the model and setting the controller's defaultApplication property.  Thanks for doing this!. I like how we will link it to Swagger. That is very cool indeed!. This is a great idea Steve. Thanks for doing it! However, it all const or static definitions. Can we find a more formal folder where we keep all global consts? like say app/utils/api/self-serve.js\ni think i saw utils/constant.js there too. SO maybe good to group all kind of constant or static helper files there? Or where we keep common files of this type.. I see what you did here. So by default we get all the endpoints on import or selectively choose to import individual groups likegeneral or onboard seperately. Works for me.  However, I wonder we should be more explicit with the export names to tie with the self-serve api file name itself. Cause if i use general or onboard in the calling file, i might not have context if general ties to self-serve api or maybe it conflict with a later api with the same export name. Just a thought. . +1. Good catch. It's not. I made a change to test. Will revert. . Good to know. WIll use this in the template and drop line 66. Thanks!. Ah right. It was copied from existing codes. Wonder how those got by eslint then. Good catch.. Neat. Will update to use. Thanks!. I personally would keep it get as that's more proper way of getting and setting props for Ember.Object.. This is interesting to combined props of the same parent object. . This init is growing too large. Can we move this outside of init? Like at the top? Or better yet, some const file?. Man. Ember keeps changing like this. Soon we just do regular vanilla. :). NIT: missing selectAction in document here.. @return {Array}?. Should these be sendAction?. From the css, looks like it's a modifier. So maybe range-pill-selectors--title might be appropriate. . This will add a whitespace if range.isActive is false. We can do\n<li class=\"te-pill-selectors__item\" class={{unless range.isActive \"te-pill-selectors__item--active\"}} {{action \"onRangeOptionClick\" range}} data-value={{range.value}}>\nEmber will unified the class attributes. . So much cleaner!. Oh i see it's a local action that invokes the actual closure action. OK. Makes sense. Thanks.. do we not use prettier? All these syntax issues would have been all auto fix by prettier. . This should have been a warning that error is defined and not used. I rather we just remove this catch.. We should look into extracting these consts of these urls into a file under utils/api later.. let me setup to automate this. It will auto update with prettier for any file changed.. Ah darn. I did a replace all for Id:..with anomalyId. Need to revert.. Ok cool. It was copied of existing codes didn't check to refractor the method itself. I can do it now.. https://guides.emberjs.com/v3.0.0/applications/services/ explains the criteria for when to create a service. THere is no need to require shared state etc here. . He has it for self-serve only. I can put another one for maybe something general.\napp/utils/api/self-serve.js. again existing codes. But updated. Thanks.. again existing codes. But updated. Thanks.\n. Sure. But i don't see why we need invoke a method that does the same kind of ternary underneath. I like it this way, it's more explicit to read. . done. i'm not sure on this code. It existing and shows green because of merge conflict resolved.. DONE. DONE. DONE. DONE. DONE. DONE. SKIPPED. added utils/api/anomaly.js. DONE. DONE. yep. Let me remove.. removed.. DONE. DONE. DONE. DONE. Let me remove. I had it for testing a promise reject for the error. Thanks.. i added the flexbox.. DONE. DONE. . Thanks for moving these consts out Steve. They will be great for other acceptance tests. We might want to pick a different name for this folder test-const. Maybe something like tests/utils/constants.js to be consistent with the one we have under apps/utils/constants.js. Can we use a task here? Not a fan of async on a hook and using this.isDestroyed this.isDestroying checks.. Nitpick: builUrnToId -> buildUrnToId. Using a map for the sake of mutating the array and not utilizing the new return array might be a better case to use forEach instead?\nlet relatedEntities = [{urn:1, createdBy: 'jon'}, {urn:2, createdBy: 'jeff'}, {createdBy: 'jeff'}];\nrelatedEntities.forEach((item, index) => {\n    if (!item.urn) {\n        return;\n    }\n    item.createdBy = 'bobby';\n});. What is the different with lastSearch and lastSearchTerm below? Or where is lastSearch getting updated?. nitpick: as glimmer will merge the classes for you. To avoid the empty space when the other class isn't there.\n<a class=\"thirdeye-link thirdeye-link--secondary\"  class={{unless canAddMapping \"thirdeye-link--disabled\"}} {{action \"onAddFilter\"}}>\n. Just for my understanding. Is this being used somewhere?. Should we await on this task?. Hmm. That's odd. Cause i'm using in my codes just fine. \nOk, you can leave it for now. Thanks!\nconst anomalyMapping = await this.get('_getAnomalyMapping').perform(model);. Ah ok. I wasn't able to find it earlier. Thanks!. wouldn't you need to set the relatedEntitiesUpdated = relatedEntities.map((item) => { back? As it's not self referencing with the mutated new array.\nset(this, '_relatedEntities', relatedEntitiesUpdated);\n```\nvar array1 = [1, 4, 9, 16];\n// pass a function to map\nconst map1 = array1.map(x => x * 2);\nconsole.log(map1, array1);\n// expected output: Array [2, 8, 18, 32], Array [1, 4, 9, 16]\n. Yes. Please leave it! Thanks.. Ok, just making sure we're not introducing a bug. Thanks again Yves. All other minors please leave it and i can followup on another PR. . spacing:\nimport { inject as service } from '@ember/service';\n``\n. comment needs it's own line. Not sure which method it belongs to. Can we not add it beforeactions?. any of the inputs required? If so, we need to confirm and not allow the user to submit.. we might be able to use a mut for this. But just leave it for now.. You might be missing this class to style the modal correctly. Seeapp/pods/components/modals/entity-mapping-modal/component.js`\n```\n  /*\n   * Custom classes to be applied to the entity modal table\n   /\n  classes: {\n    theadCell: \"te-modal__table-header\"\n  },\n``. Ok i can remove for now. I want to add it back once I update the error handling more. . done.. console.log. same here for console.. here and all consoles.. Hi Alex. Not sure i understand the need for this observer. We should avoid using observer when possible due to it's synchronous nature. Can we not use aninit()hook here?  I can't seem to find_columnObserver` usage. \nhttps://guides.emberjs.com/v2.6.0/components/the-component-lifecycle/\nAlso why not have showTable: true, be false by default vs setting to this.set('showTable', false);.\ninit() {\n    this._super(...arguments);\n...\n  },. Single retrieval of a prop can use this.get() instead.\nconst context  = this.get('context');\nand all other places in this component code. Thanks.. This should be a let if we decide to mutate the variable's value.\nlet buckets = [];. please use let as it's mutating later.. const  buckets  = this.get('buckets');. let baseValueLookup = {};. you might be able to use computed.filter here.\nhttps://www.emberjs.com/api/ember/2.15/namespaces/Ember.computed/methods/filter?anchor=filter\nSomething like,\npreselectedItems: computed.filter( 'data', 'selectedUrns', function(urn, index, array) {\n   return (urn => data[urn]).map(urn => data[urn]);\n}),\n. let as it is not a constant.. can we not combine the forEach here?\n```\nlet currentUrns = new Set();\nlet baselineUrns = new Set();\n[...relatedMetricUrns].forEach((urn) => {\n   currentUrns.add(toCurrentUrn(urn));\n   baselineUrns.add(toBaselineUrn(urn));\n}\ntimeseriesUrns.union(currentUrns);\ntimeseriesUrns.union(baselineUrns);\n`` \n. @justYves Yes. There are two factors for this. One is it is correct the reference default type (array) assignment isn't going to change (in this current case) soconst` here is safe. Actually its content/children is changing is the reason why this const is still valid with the linter. \nconst foo = {};\nfoo.bar = 42;\nconsole.log(foo.bar);\nHowever, we can be blinded to see future reference changes if this were to be passed to a method later that does mutate the original reference. \nconst foo = {};\nsomeMethodChangesFoo(foo);//Uncaught TypeError: Assignment to constant variable.\nconsole.log(foo);. HI @apucher.  True, as the reference itself is passed by value of the param is to the object and not the original handler. I remember by reference, forgot it was by value. So i think you're fine. My thought is later in your code, when you decide to extract this out to a method (util/service etc), someone can accidentally modify it as such foo = {a:42}; where it will just needs to update to let.  For now it's fine, just leave it as const. Thanks.. Great. I was wondering where these were. Thanks.. Sure. Will use this.. Done. Actually just realized there is already existing one in app/utils/api/self-serve.js\nconst allApplications = '/thirdeye/entity/APPLICATION';\n. DONE. Yes! We should. Will do that. Thanks!. Ah my oversight. Good catch!. looks like not. Good catch.. Nope. You're right. I had something there before but removed it. Let me remove this init now. Thanks!. removed. Actually yes. One is for Service.extend( and the other is to inject store: service('store'),. . Yes. Let me add a TODO. We will need to serialize our data to the backend calls. This will be used soon. Just commented out for now. Adding TODO. Thanks!. Actually this is a built in  serializer hook. Like model, preModel hooks in route. But i can explicitly document it as well..    /*\n    * @summary A serializer hook. Normalizing the payload from api response simpler or legacy json that may not support the http://jsonapi.org/ spec\n    * @method normalizeQueryResponse\n    * @param {DS.Store} store\n    * @param {DS.Model} primaryModelClass\n    * @param {Object} payload - the data object\n    * @return {Obect}\n    /. Can we start with the convention custom services we built ends with Service and ApiService if it's for api?\nexample\nanomaliesApiService: service('services/api/anomalies'),. If you doing this. You can remove the declaration durationObj: null, i believe. . I don't understand this loop. Why are we setting the same value newDuration to the durationObj object?. NIT: maybe clearDuration or resetDuration is better name?. Yes. Existing has been updated.. True. I might have to refractor this when i do the componentize/service in the next PR. For now i want to get it out to be used and tested. . Yeah it was set to maxDisplayWindow but i want to be precise and have it not select future time that the current baseline does not provide. So i try to set it to the current baseline's max time. Let me set it back to EOD. . let me remove this if we decided to go with the max time being  EOD today.. good catch. I updated to do the max display window range (analysisRange[1]). Thanks.. No. This is not well documented on how to implement this code. So i left it as a nice to know. How to import images in a ember-cli-build.js file. Took half a day to found how to do it correctly.. No. If it's type === 'start' we want to do the truthty part of the uni operator for both consts.. Good catch. Let me remove it when i extract the slider code out in it's own in next RB. I need it to decide to use it or not. . it gives you the iso time stamp of a Moment's object. See attached.\n\n. I wonder if there is a cleaner way then this switch statement. It will grow more soon. For now we can leave it. . What is the dynamic part of the query that is needed here? For example the above is /${query.appName} for performance.. Oh i see. autoDimensionOrder. Not sure i understand this comment. Is the service not working? We should just fix it. . I'm not sure why we label these as cached states. It's get confusing with an actual cache services. These are short lived as it ties to components. Maybe leave the cache description out?. Please put all these in a helper locally. The hooks should not have large codes in them like this.. Can we change to async/await here? Thanks.. we can check if there is errMsg, else you always doing a .\nAlso, maybe consider using some other block element. . Why do we include this <div class=\"rootcause-dimensions-table\"> here, if in the rootcasue-dimensions we already have classNames: ['rootcause-dimensions-table']? Cause that would also make the same <div class=\"rootcause-dimensions-table\"> no? We would have duplicate nesting of <div class=\"rootcause-dimensions-table\">.. We seem to not need this injection of store here. Also can you remove it for app/pods/services/api/anomalies/service.js? I think it's an oversight there as well.. True. I tried a few times to use the #link-to, however can't seem to figure out how to make it work with this pattern. If you can figure it out, let me know. Thanks!. Worst case i can make a custom link-to wrapper helper. . OK, i got what you're saying. Interesting that this pattern also works with this api. Will give it a try. Thanks Steve.. True. Will update on with next PR. Thanks!. nah. Let me remove. Thanks!\n. nope. Let me remove. Thanks!\n. Is this needs to be called on re-rendered? Can it be on init?. If possible. It's better practice to leave the class names in the template and use conditions here to check for it in the template. This would help refactoring template when css updates are needed easier (re-BEM etc).\nExamples:\nJS:\ncollapseClassNegative: negativeMax === 0,\n expandClassNegative: positiveMax === 0,\nHBS - thirdeye/thirdeye-frontend/app/pods/custom/dimensions-table/change-bars/template.hbs\n. Is there a reason for the inline styles here?. Same comment here as above. Could this be pulled from some existing constant somewhere? The domainhttps://thirdeye.corp.linkedin.com.  So that we have a single source of truth. Better yet, maybe have it dynamically pulled from query url.. NIP: {{!-- TODO:  Remove conditional when table view is ready --}}. is there a $style var for color #ddd we can use?. I think as this is a shared component, the class prefix advanced-dimensions was more appropriate than rootcause-dimensions. Unless you plan to not have it be reuse for other pages that aren't rootcause?. is it running more than once without this?. if you not wanting any duplicates. Consider addObject. . Why we doing this here? interval is a number that representing the ID value of the timer that is set, it's not a function. Can we remove this? It should already self execute with setInterval(). If this still an issue, we will revisit with await/async. . Yes. I understand. I'm just curious to why we adding this line interval(); as it's not a function. The setInterval() should already does that.. \n. Thanks JiHao!. As part of moving the anomaly report button to the dashboard. We will need a new resolution type of User Reported + True anomaly. Not sure it will need change here.. Looks good. Is there a reason not to fix this on the .date-slider class itself vs creating a new modifier class? . can we add async/await for this fetch?. same async/await. i wonder if this is yielding correctly. \nvs like \n const functionArray = functionIds.map(id => yield fetch(selfServeApiCommon.alertById(id)).then(checkStatus));\n. Hi Alex. Can you please put this under shared folder like that of app/shared/anomaliesTableColumns.js? It would be cleaner for this file. Thanks!. NIP: missing * @return {Array}. NIP: !==. NIP: for clarity\n const current = currentTimeseries ? currentTimeseries[1] ? currentTimeseries[1] : Number.NaN : Number.NaN;\nto\n const current = currentTimeseries ? ( currentTimeseries[1] ? currentTimeseries[1] : Number.NaN ) : Number.NaN;\nor this i think should work\n const current = currentTimeseries && currentTimeseries[1] ? currentTimeseries[1]  : Number.NaN;. Please use setProperties. . Please add a TODO for ember data replacement here.. please use async/await vs chaining promises.\n. instead of having to reference nestedProperties[0] everywhere. We can have one const for it.\n```\nconst nestedProperties = nestedProperties[0];\nusage:\nnestedProperties['dimensions']\n``. TODO for the ember data replacing thisfetchlater.. TODO here as well.\n. async / await here as well.. please use single quotes in all JS files.. Same here with TODO and async/await.. space not needed?. Is there a reason why this can't be part of the rootCauseCOnst above if it's related to root cause?. Let's be consistent everywhere forget,setandget/setProperties` everywhere in the file. I'm guilty of this too, been cleaning my act.\nimport {\n  get,\n  set,\n  computed,\n  setProperties\n} from '@ember/object';\n. NIP: all UI PR with template additions or changes needs a screenshot. . Can we remove all these comments? Do we need them?. can you not use this style for computed? Especially if you're not doing anything with set(). Try this\nsizeOptionSelected: computed(\n    'sizeMetricUrn', 'sizeOptions',\n    function() {\n      const { sizeMetricUrn, sizeOptions } =\n        this.getProperties('sizeMetricUrn', 'sizeOptions');\n      return sizeOptions.find(opt => opt.urn === sizeMetricUrn);\n    }\n  ),. Then we should use like computed readOnly or Ember.computed.oneWay. try\nsizeOptionSelected: computed(\n    'sizeMetricUrn', 'sizeOptions',\n    function() {\n      const { sizeMetricUrn, sizeOptions } =\n        this.getProperties('sizeMetricUrn', 'sizeOptions');\n      return sizeOptions.find(opt => opt.urn === sizeMetricUrn);\n    }\n  ).readOnly(),. Ideally we should use oneWay as readOnly will throw an error if someone (like a component) tries to mutate the object. OneWay makes a copy of the computed object and pass it on.. Removed.. We still need 'wo3w', 'wo4w' here?. Some async/awaits on the fetches?. done. I actually had debugger statements in this PR and no one caught it. :). remove?. Good catch. I had it as entities=entities but changed it to test passing in only metrics only to the components vs having the component derive the metrics but seems better having it in the component for separation of concerns.. reverted it back to entities=entities. Ah i see. Makes sense. . If you do this check here to confirm the urn is in entitites, then we can remove the condition check here for entity.\nconst agg = entity ? { alias: entity.label, id: entity.urn.split(':')[2] } : {};. It is a POC route. People wanted to try it live (designer etc). We can rename to have poc in the name . this vs line 764 if (this.isDestroyed)?. maybe dup. We can remove one?. The space should be handle by css.. NIP: Let's be consistent and use this here as well.\nimport { getProperties } from '@ember/object';. same here with getProperties. Can all these new CP have a comment doc added to them? Explaining what they do would help understand a lot of all these filter(t => t[1] === '='); . Not sure what you expecting in for you to filter etc. . Same here with the doc  comments. First glance i do not understand when and why you forceShowExclusions. What it means to force show?. Same here with the space. We should use css to add white space.. Some thoughts on this. One, can we also do bookmarking here? So we remember the last exclusion added? Like that done on metrics. Same for inclusions. \nAlso, the whole, left and right click to add exclusion or inclusion. We need like a popup menu that user can selects to say Add inclusion etc. Cause in the future the right and left click might be needed for other actions. . The reason i mentioned because i saw you did something and it magically added to the exclude filter and i wasn't sure how you did it. Till now that i saw the PR here. :). set(anomaly, 'index', ++index);. nip: &--left only is simple and clean name . nip: &--left only is simple and clean name . getProperties(this,  here too to be consistent. i think we should rename this to something relate to Filter By since it was meant for that and not to be confused with the actual anomaly response list. If that makes sense. . I would swap this forEach for for..of and add async/await if you want guarantee for the order of return responses and also if there is dependencies of something here (ex. p.result) in the codes after it. \nasync _update() {\n..\n for (const p of starting) {\n      await fetch(p.url)\n        .then(res => { p.result = res; this._update(); })\n        .catch(err => { p.error = err; this._update(); });\n    };. There a need for document for both Classes and also what this new service will deliver. It's good practice on all services and utils etc. So we know how we can use it elsewhere. A link to stackoverflow might always give us enough insight. Thanks.. Could this be reset in resetController?. Sure. Yep. . Yep. Sure.. I was thinking we can do something like http://localhost:4200/#/self-serve/create-alert?isDevEnv=true. This allows us at any route to override the isDevEnv to decide which mode to be in. This would not need inspector change.\nand this design allows for other debugging flags. i'll do this in another PR.. We need to change these mock values . We should have left showGraphLegend here. As it has changed to false. Also we do like the option for user decide to show the legend by specifying the showGraphLegend's value. Now we force it to not show with show: false. Also if you don't use const showGraphLegend = this.get('showGraphLegend'); we should have removed it. . Are we following this pattern like GET /detection/subscription-groups/? Under detection?. The tooltip used the same?. Yep. Agreed. TOo much work to make it api driven for something so simple as a default. I can make it generic.. We can use getProperties here.. This is wrong usage of a span tag.. Is there a reason why we creating our own custom toggling for property vs using the built in one by ember?. Since this is duplicating accessing item for anomaly. We can make a const for it.\nconst anomaly = item.anomaly;. you can use getProperties here with destructuring. . comments to remove. same here. here too.. setProperties would be nice here. Thanks.. same here. setProperties.. Anywhere you have a series of set or get to remember to use the set/getProperties method. .  feel like this could be in a util. It might also exists already. We can take off line.. not used?. remove the hard coded timerange for start and end. alertYamlChanged: observer('alertYaml', 'analysisRange', 'disableYamlSave', async function() {\n    const isPendingData = get(this, 'isPendingData');\n    if(!isPendingData){\n      set(this, 'isPendingData', true);\n      // deal with the change\n      const alertYaml = get(this, 'alertYaml');\n      if(alertYaml) {\n        try {\n          const anomalyMapping = await this.get('_getAnomalyMapping').perform(alertYaml);\n          set(this, 'isPendingData', false);\n          set(this, 'anomalyMapping', anomalyMapping);\n        } catch (error) {\n          throw new Error(`Unable to retrieve anomaly data. ${error}`);\n        }\n      }  \n    }\n  }),. make a small helper\n_editorReplace(data, replaceStr) {\neditor.session.replace({\n                      start: { row: data.row, column: 0 },                    \n                      end: { row: data.row, column: Number.MAX_VALUE }},                         \n                    replaceStr);                        \n}. No. It was reserved by Harley for comparison. We can pull that form git history if needed.. ",
    "subprotocol": "Sure, I would be happy to.\nFor a quick and dirty test I tried:\nIDENTIFIER: [A-Za-z_][.A-Za-z0-9_-]*;\nIt did break group by queries. Removing this from expression in the grammar fixed it:\n| IDENTIFIER '.' IDENTIFIER                   # Identifier\nWhile this works, I think the downside to directly allowing '.' in IDENTIFIER is that it may break future queries that could involve table references.  For example-\n\ntable.name.of.column\ntable.name\\.of\\.column\ntable.`name.of.column` or `table`.`name.of.column`\n\n1 is ambiguous because you can't really know which part is the table and which part is the column.\nI think 2 and 3 are both doable. If I had a preference I would go with 3 (mysql is able to escape identifiers in this manor: https://dev.mysql.com/doc/refman/5.7/en/identifiers.html).\nAs I see it implementing 3 would require two small changes:\n\nChange IDENTIFIER to allow back-tick wrapped identifiers\nCurrently IdentifierAstNode only has getName(), which returns the value.  For purposes of re-compilation (ie- GroupByAstNode calling groupBy.addToExpressions(groupByColumnName)), IdentifierAstNode would need an additional method that returns the identifier expression as it was passed in.\n\nFor example, the column `name.of.column`:\n- IdentifierAstNode.getName would return name.of.column\n- IdentifierAstNode.getExpression (which would be introduced) would return `name.of.column` and be passed into things like groupBy.addToExpressions\nBefore I put together a PR let me know if I'm still on the right track and if you have a preference.. Oops sorry, I misspoke.  I had some other code in there that was messing up group by.  Adding '.' to IDENTIFIER in fact does not break anything and seems to work great (future proofing issues aside).\n\nIf I understand you correctly you are suggesting we do 1 and make minimal changes for us to handle it in group by expressions?\n\nYes, this is correct.\n\nWill your suggestion work for selection and group by as well.\n\nYes, also correct.  I just took the liberty of implementing backtick escaped identifiers.  Turns out it wasn't too much trouble to implement.  Please let me know if my approach is ok: https://github.com/subprotocol/pinot/commit/d66bca8088fc966bcae8ab44cbaf3478c39685ef  I have tested with select, group and where clauses and it seems to work great.\nI am happy to make any adjustments that you or others see fit.  Just let me know if I'm on a good path. If so I will also put in unit tests and submit a PR.\n. yes, thanks!. @Jackie-Jiang thank you for pointing me to that. The specific use-case I am after is allowing customers to query their data at different granularities and timezones as determined at query time.  For example Druid has support for querying in this manner: http://druid.io/docs/latest/querying/granularities.html\n@kishoreg sure thing thanks.. @Jackie-Jiang @kishoreg Here is my take on this- https://github.com/linkedin/pinot/pull/2738. Yes I think @npawar is correct.  If I am following the code correctly I think this means:\n1. transform(..) in EpochToSDFTransformer and SDFToSDFTransformer will need to change to do bucketing right after being converted to the output format. \n2. inside BaseDateTimeTransformer add a method similar to transformToOutputGranularity(long millisSinceEpoch) that takes a joda DateTime and truncates it to the proper granularity.\nAm I on the right track?. any chance this could get a quick review?  I have some cycles coming up that if needed I can make additional improvements.. Sure no problem, that sounds like a good a good plan. Thanks!. Thank you!  I will take a look at this today. @npawar ok all merged up.  I updated the tests I had written to follow the flow of the tests that were put back into DateTimeConverterTest.. @npawar good call, I just added some in.. It's a slight tangent from the current path, but one thing I wanted to raise- should timeunits even be allowed when using SIMPLE_DATE_FORMAT?\nCurrently a time unit is required on the inputFmt and outputFmt. ie-\n1:MILLISECONDS:SIMPLE_DATE_FORMAT:yyyy-MM-dd HH:mm:ss.SSS tz(America/Los_Angeles)\nShould we update the DateTimeFormatSpec to not require the timeunit when using SIMPLE_DATE_FORMAT?. :thumbsup:. thanks!. As I currently see it, this would encompass the following additions-\n add yarn deploy related classes, ie- PinotYarnDeploy, PinotYarnAppMaster, ... also possibly a script wrapper (pinot-yarn-deploy.sh)\n provide yarn application master that manages container lifecycle, and has a ui component that shows where services are running, ports, etc, ..\n allow services to bind to random ports if passed 0 as the port number\n change pinot-admin.sh for commands that require a controller host and port, to optionally take -zkAddress. This would discover and choose a random controller to send the command to. Thank you for the resources. I absolutely agree on nailing down the right abstractions.  I am thinking more through the ways this could come together. This is what I have pictured currently-\nPinotSubmit: Determines and calls the launcher to submit Pinot into the cluster (YarnLauncher, MesosLauncher, ..)\nClusteredService: Interface for abstractions to the cluster backend, similar to what Gobblin did (YarnService, MesosService, .. would implement this)\nI don't think there is too much commonality between launchers (they are just full of backend specific boilderplate).  In Spark for example, their launcher (https://github.com/apache/spark/blob/master/core/src/main/scala/org/apache/spark/deploy/SparkSubmit.scala) determines the backend and just forwards the arguments to the appropriate launcher class (ie- org.apache.spark.deploy.yarn.YarnClusterApplication, org.apache.spark.deploy.k8s.submit.KubernetesClientApplication, ...).  Those launcher classes are optionally available depending on how spark was compiled.  I imagine it would make sense to do something similar for Pinot.  And this should allow compatibility with something internal like Rain; just add a jar onto the class path that defines the RainLauncher and implements ClusteredService.\nClusteredService would abstract acquiring and releasing resources.  What do we want this to mean exactly, and who should call it?  Would it make the most sense to just listen to when a tenant is added/updated/removed, and allocate/deallocate containers based off that?\nIf that's the case ClusteredService could just be an abstract class that knows how to listen to tenant changes.  When a tenant change occurs, it simply passes it on to the implementing backend, such as YarnService.\nYarnService would then just need to implement something like: tenantAdd, tenantUpdate, tenantDelete.  When a tenant is updated from 5 to 8 real-time servers, it would know to allocate 3 containers.   When updated to from from 8 to 6, YarnService would release 2 of that tenants containers (or listen for when they transition back to free/un-tagged).\nAs for how this would look on Yarn-\n\npinot-submit.sh -cluster=yarn -zkAddress=zookeeper -controllers 3 <other args..>\nYarnLauncher would get called which creates the cluster in helix if it doesn't exist and submit app into yarn\nYarnService (an instance of ClusteredService) would start up inside the cluster, register as the AppMaster, and then create 3 pinot controller containers\nUser adds a tenant\nClusteredService sees that a tenant was added and calls tenantAdd\nYarnService implements tenantAdd would create the containers\n...\n\n<other args> would specify things like how to size the container types (real-time server vs. historical server, broker, controllers) with settings such as heap size, container overhead, other jvm settings, ...\nLet me know if I'm on the right track.  Thanks again!. Ahhh! Ok yes, I think I follow what you mean.  I believe this should work nicely. I will spend some cycles digging in a bit more in the morning.\nOne question I have- If instanceType is SERVER, my understanding is that the server type (realtime/offline) won't be determined until the instance is created/assigned to a server.  If we want realtime servers to have say--a larger heap than offline servers--is there a way to designate the type that a server can be in advance?. @kishoreg I have a very basic prototype that is able to run Pinot entirely in YARN.  Currently the number of controllers/brokers/servers needs to be specified up front, but they can be added/removed during runtime.\n\nYou had mentioned the Minion instance type- I'm trying to figure out where exactly this ties in.  Am I correct in thinking that the Minion is work still in progress, but will eventually have a PinotAdministrator StartMinion command?\nI'm now looking closer at modeling this all around addInstance per your input.\nOriginally I was thinking the cluster manager backend would listen as a participant when an instance is needed.  But Pinot can't assign instances that don't already exist.  Given that, would addInstance be a new command within PinotAdministrator that would communicate with the cluster manager backend to create the resources?\nExample workflow would be something like-\n1. submit application into yarn\n2. run AddInstance commands-\n  a. AddInstance -instanceType BROKER -tenantName MyTenant -numInstances 2\n  b. AddInstance -instanceType SERVER_REALTIME -tenantName MyTenant -numInstances 3\n  c. AddInstance -instanceType SERVER_OFFLINE -tenantName MyTenant -numInstances 5\n  d. AddInstance -instanceType MINION -tenantName MyTenant -numInstances 1\nAfter running that you'd have a Pinot cluster with 3 controllers, 2 brokers, 3 offline servers, 5 online servers, and 1 minion.  Is my thinking aligned with what you are envisioning?\nThanks. @Jackie-Jiang Thank you for the clarification.  I ran into case 3 and it wasn't clear to me what the issue was from the error that was thrown, as I was defining an existing schema.  So if I follow correctly defining schemaName inside segmentsConfig JSON should not be used, or should always = the table name correct?\n\n\nValid because schemaName = tableName:\n{\n  \"tableName\": \"events\",\n  \"tableType\": \"REALTIME\",\n  \"segmentsConfig\": {\n    \"timeColumnName\": \"time\",\n    \"segmentAssignmentStrategy\": \"BalanceNumSegmentAssignmentStrategy\",\n    \"schemaName\": \"events\",\n    ...\n  },\n  ...\n}\n\n\nValid because schemaName inferred from tableName:\n{\n  \"tableName\": \"events\",\n  \"tableType\": \"REALTIME\",\n  \"segmentsConfig\": {\n    \"timeColumnName\": \"time\",\n    \"segmentAssignmentStrategy\": \"BalanceNumSegmentAssignmentStrategy\",\n    ...\n  },\n  ...\n}\n\n\nInvalid because tableName (events) != schemaName (events_schema).\n{\n  \"tableName\": \"events\",\n  \"tableType\": \"REALTIME\",\n  \"segmentsConfig\": {\n    \"timeColumnName\": \"time\",\n    \"segmentAssignmentStrategy\": \"BalanceNumSegmentAssignmentStrategy\",\n    \"schemaName\": \"events_schema\",\n    ...\n  },\n  ...\n}\n\n\nThe following exception is thrown when they do not match: Invalid table config for table: events_REALTIME exception: No schema defined for realtime table: events_REALTIME\n. @sunithabeeram thank you!  I am not certain why the issue doesn't trigger in your test case.  I just threw together an example app that demonstrates the issue I ran into in case it is helpful:  https://github.com/subprotocol/pinot-schema-test\nIt creates a single schema, and tries to create two tables from it (one with the same name as the schema, and the other with a table name different than the schema).  Feel free to run it, but I also uploaded the controller logs so you can see the error (https://github.com/subprotocol/pinot-schema-test/blob/master/pinotController.log#L864)\n@Jackie-Jiang Thanks I will double check what is going on in there.  In the example app I uploaded it seems ZKMetadataProvider.getTableSchema() is returning null for me in case 3.\n\n. @sunithabeeram Awesome!  Yes I believe that will solve it and make that method safe to use during table creation.  I will verify. @sunithabeeram I confirmed that it does fix my issue,  it works great now.  Thank you!. LGTM thanks again \ud83d\udc4d . Hmm, I am not certain.  I'm seeing references to aliasing in the codebase but I'm not 100% sure I follow.  Is aliasing allowing things like where test = :blah ?   And if so, are you wondering if we could also support things like where test = :`a.b.c` ?. Ahh, I think you mean the as `avg_age`.  Yes it works there as well. Great question, sorry I should have called that out.  The reason is that the expression is parsed and re-serialized back into a string.  Currently this happens here: https://github.com/linkedin/pinot/blob/a4b05037253ca5d8c1bfa7b21b767deaca6d105c/pinot-common/src/main/java/com/linkedin/pinot/pql/parsers/pql2/ast/GroupByAstNode.java#L40-L47\nIf the ability is needed to go from expression tree back into string form, we would need to be able to distinguish between the name and expression of the identifier.\nWithout getExpression() this:\nselect count(*) from table group by `this.is.my.identifier`\nwould be parsed and toStringed with an invalid identifier:\nselect count(*) from table group by this.is.my.identifier\n. Ahh I see now thank you, I will get that changed.. ",
    "sunithabeeram": "@snleee thanks for the review! Sorry I missed the test failures. They've been fixed in https://github.com/linkedin/pinot/pull/2777. (I had issues pushing my local changes to the branch, hence closed PR/deleted the branch). Few questions:\n1. What are some examples of query options passed via HTTP parameters currently?\n2. How widely is this used? Does it break compatiblity with existing usage? \n3. Can you add tests to cover this?\n. Changing smallest to earliest will require a few more changes for it to be consistent - for example, the configuration expects string \"smallest\" to pick the earliest offset. It would be better if that cleanup is rolled into effort @npawar is handling for making a generic streaming interface.. @subprotocol thanks for the details. Are you sure \"events_schema\" is actually available? \nI added a test case to cover the case you are mentioning and it seems to be working. Let me know if you see #2840 doing something differently.\n. I see an error in the test that I added in #2840. Will fix it and check the behavior.. @subprotocol I fixed a sequencing issue in #2841. Thanks for reporting the issue - let us know if the fix works for you.. FileSystem might be an alternative? . @jenniferdai the FS should also expose methods to create and open for read/write that return the appropriate input/outputstreams.. Changes look good. Thanks for addressing the comments through multiple reviews!. How are we catching these issues? Can we add appropriate unit tests with the fix?. LGTM. \nI am not sure about the usage of rethrowException in general. Its not clear to my why we can't use throw(e) again after catching it. Will check with @jfim about it.\nThe changes also included a few formatting only ones - we should keep formatting changes separate from actual code changes. If not already set, we should have the formatter only reformat updated lines - I think you can specify this in intellij as well.. Could you provide the context for this change?. >Are we calling each server for every segment upload?\nYes. In the (longish) email summarizing the issue, I have mentioned the possibility of using a cache that's periodically refreshed. \nWe could perhaps even do with a controller local in-memory cache; if the table size is close to the limit and we are uploading a large chunk, the controller can kick off an ondemand refresh and/or fire off an alert requiring the quota to be reviewed. Anytime we are around 80% of quota usage, its probably good to review and adjust table quota.. Valid points about prefetching only the inverted/startree indices - I think thats a good optimization to make. \nRegarding all segments being loaded - I guess we need to make some considerations based on whether the data set fits in memory or not. If dataset > memory, then the routing tables generated should probably weigh segment locality more.\nI think prefetching still helps even if all segments are hot - the reason being we warm up the page cache before switching requests to the new segment. . It looks like not all comments were addressed. The code also needs to be rebased.. Since the issue hasn't reproduced recently, I think we should keep the sys.out.printlns to aid debugging when it happens next and merge the change. . Closing this as I had trouble updating it to the latest.. @mcvsubbu good point about deleteClosedConnections()! I looked through the code a bit more and it seems like the issue is more with how the \"freeconnection\" list is handled. When the application tries to execute a method, the HttpMethodDirector fetches a connection to satisfy the request. The pool-mgr should return a connection with the host-configuration passed in. But it looks like thats not happening correctly in some cases. This a bit of FUD at this point, but its possible that we get an incorrect connection when we don't see the error too (as there is nothing so far that points me to the fact that this is related to conn-refused; its just more noticeable in that particular case).\nI think we should upgrade httpclients and work with newer connection pools than chase issues with the older clients.\nAppreciate the review and suggestions!. Can we please add test coverage for this? Did our tests always set a conf?. Please do add a test without the conf set and ensure things are intialized correctly. We don't want future code changes/refactoring to knock the check you added resulting in the same issue again.. Can we quantify how much of an improvement we see with this?. Yes, this is a clean revert of the commit.. Nice find! 1G per segment for one of the use cases is a nice saving.. Thanks for noting the changes in the description. Could you please include the context/motivation for this change? . @mayankshriv, I introduced the the num-non-matchind method in my previous commit - backed out a change that relied on it to keep the earlier PR simpler, but decided to keep the method exposed. I plan to revisit that soon and will add necessary test coverage then.. Are the lead controller coordinates cached in other parts of the code?. This PR is based on some assumptions (helix resource/replication behavior currently seen) that may/should not hold. Closing this and will create another PR with a different assignment approach.. @mcvsubbu thats a good point. I hadn't explicitly considered that, but the other thing that I was thinking about and the restart point may have same solution: what happens if another attempt to rebalance is kicked off either on the same controller or a different one? If the final ideal state mapping is different between the attempts, are convergence and correctness guaranteed?\nI guess this will involve some sort of state maintenance to ensure things don't step on each other/have silent failures. We could have the leader handle rebalances and maintain local state (but won't have restart guarantees) or we have zk state and either a leader or other nodes handle rebalancing with heartbeats.\nIts possible that a first cut of this approach still doesn't handle these cases and we build this in later. Currently, the operational overhead of ensuring no downtime rebalances (specifically where host count within a replica group changes) is immense (often requiring another table to be setup), so a solution that can alleviate the \"happy\" path issues may still take us a long way.. In addition to updating server startup, we can ensure that the server doesn't shutdown until the segments its serving get offlined in EV. ie, after https://github.com/linkedin/pinot/blob/master/pinot-server/src/main/java/com/linkedin/pinot/server/starter/helix/HelixServerStarter.java#L219, we could wait till the segments are offline; that way, when the server comes back up, EV does not have any pointers to it and broker won't route to it.\nWith this, we can keep the server startup timeout short.\n. @fx19880617 you mentioned that you noticed the issue recently. Was this associated with any updates for Pinot or Helix versions?. Thats good to know. Thanks for the info @fx19880617.. Can you add a unit-test for this?. I haven't reviewed the full code yet, but the metadata we send back should be meaningful to the user. Can we name the field as \"missing/nonExistentColumns\"?. > Are we going to include every pruner that was run as part of the query processing in the response?\nNo, the intention is to provide information about non-existent columns if the user queries them. The response should list the missing columns.. \"Heuristics: this is a best effort way of keeping the result correct\nbut reduce the memory footprint. The assumption is that, if the group\nis not showing up in the first 100,000 groups, then this group is not\nimportant, and probably will not show up in the final result. So it's\nsafe to just ignore this group.\"\nWouldn't it be better if we returned an error at this point instead? Aren't we taking a chance with correctness in the current approach?. @mcvsubbu agreed. I did consider using thread-locals, but didn't find a specific need for it at this point. (Thread-locals tend to bite back at times, so didnt' want to prematurely optimize)\nAlso, its not clear why DecimalFormat was chosen in the first place. Simple String formatting could have done the job, IMO. There are some minor formatting differences between the 2 though, so I didn't attempt switching away from DecimalFormat usage as this point.. Clone makes a shallow copy, so I don't think it will address the concern here. I would like to be careful about what we keep in thread-local - I've seen cases where its been abused and we take a hit due to that (holding on to more objects than needed; references not getting cleared when they ought to etc).\nThe suggestions are valid, but I would like to make sure the changes are warranted before making them. At this time, GC is able to keep up with the object allocation rate.. > @sunithabeeram Can you double check if copy is creating necessary parent directories?\nGood point @snleee. There are a few more followups for this that I've reached out to @jenniferdai for. Will let her followup.. Looks like @npawar also attempted to fix this in https://github.com/apache/incubator-pinot/pull/3591 :)\n\nOccurred to me that if we start ValidationManager soon after a leadership gain, we don't need to do this PR?\n\nI guess if the previous leader is not \"dead\" it could continue running validation-mgr - unless there is a periodic isLeader() check that lets the old controller give up.\n. @mcvsubbu I updated the fix and also added an integration test.. What does \"optimize\" mean in this case? And how was this change made?. > @sunithabeeram This is done by IDE automatically, which orders all imports alphabetically, removes redundant imports, and merge imports if possible.\nCan we pull these rules into pinot-style.xml so everyone applies them? Are there other ways to better enforce formatting so we don't diverge going forward?. We should use the maven check-style plugin with a set of rules that work for us; The google check-style rules include ones to group/order imports: https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml. Could we add a test to cover this path?. Looks like the code was using the non-schema based API and that was changed with this commit: https://github.com/apache/incubator-pinot/pull/2000/files\nWe should consider better usability of the APIs involved and/or add checks in code that asserts when the incorrect/unexpected API is used + add tests to ensure coverage so if there are regressions we can catch them better.. It might be good to add/update a test where the query/where-clause does have newlines - that way, we can ensure the code paths are rightly handled. (We can't add assertions for logging). Please consider adding a unit test so we don't regress on this in the future.. This PR provides an implementation for this: https://github.com/apache/incubator-pinot/pull/3728. Just curious - what issues are you seeing?. The impact of this change is unclear to me. Will any API responses be affected by this change? If so we should check backward compatibility implications.. Lets wait for tests to pass.. > Did u test swagger? Our tests do not cover access via swagger\n@mcvsubbu I did add basic tests for console in https://github.com/apache/incubator-pinot/pull/3740. While it won't test rendering, we'll know if something is horribly broken.. What triggered adding the close/destroy calls in this PR? Were these from compiler/IDE warnings or from a manual review?. @xueyumusic thanks for the contribution!\nI had a couple of administrative questions around this:\n- Out of curiosity, what does the PINOT-7 in the title refer to?\n- We would like to track all the work that associated with a change - in this particular case, once this PR is merged, we would like the documentation to be updated as well. We don't have a good way to track tasks - hopefully this will be addressed going forward; in the meantime it will be great if you can create an issue that lists the code changes and doc changes needed. We can close it when both are done.. @Jackie-Jiang what race condition was addressed in this PR and how?\nWas any manual testing done to make sure leader and non-leader controllers behave as expected?. @mcvsubbu since the common logic is moved to the abstract class now, its a bit more easier to enforce the contracts across FS impls. We have noted exceptions in case of AzureFS - didn't want to twist the top level interface because one FS behaved differently. . @VicoWu we are looking to improve this documentation in the coming weeks as we move most of the docs under the documentation section of https://pinot.apache.org/. Stay tuned.\nYou are right that the wiki link you pointed to provides info on the high level operation aspects. Couple of aspects of Multitenancy that you might be interested in:\n 1. Managing the multi-tenant cluster: i.e., from the controller point of view. For more info on this you can review code in PinotTenantRestletResource.java and PinotHelixResourceManager.java as to how the mappings are managed etc. \n2. Serving multiple tables on servers: this deals with more of the runtime isolation aspects of Multi-tenancy. We currently have CPU isolation between tables - review code in PriorityScheduler.java\nHope this helps. Feel free to reach out if you have more specific questions.. @Jackie-Jiang , is it possible to decouple the changes in this PR? Especially, \n Disable the Helix batch-mode and perform deduplication in ClusterChangeMediator\n Disable the Helix pre-fetch to reduce the ZK accesses\n. Couple of suggestions:\n- We can have init() present at all times - I don't see an issue with an empty implementation for most and overridable by the readers that need it.\n- We can make the reflection based support to be more general: If the users specify a record-reader class in the segment generation config, you can instantiate it and return. If only the input format is specified, we will instantiate the default readers for specific formats. Do capture the order in which these will be handled and what happens when both are specified (we probably just need one of them to be specified to avoid confusion).\n- In the recordreader factory, allocate the record reader and before returning call init() on it; ie, move the return to the end of the getReader method.. @mcvsubbu it looks like the local build isn't displaying the Edit on Github link. Will create an issue if it still is an issue on the main rtd link.. @snleee updated. . @snleee I've removed the includes for now based on our discussion. Locally, the sphinx-build version I have is v1.6.3. Its perhaps an older one and its possible that the one thats on rtd is newer (I also saw other differences).  Will push this code and build it out to ensure things work correctly.. readthedocs build uses sphinx v1.7.9 and that renders the captions correctly.. Thanks for debugging this @snleee!. @snleee the version shows only for the local build. On rtd, it shows latest.. We use grizzly for http server support; jersey for REST api support. hk2 related packages are required for injecting the right classes, AFAIK.. @ly923976094 can you provide more details? Are you adding new hosts? Or replacing existing hosts?. The data should be available on the controllers for download by other servers, so you don't need to do anything specifically to move the data. You can update the table's tenant configuration to remove the offline host and add a new one and rebalance the table. You can find REST apis' to do this by hitting your controllers' web port: http://.\n(We'll be covering more of the steps in our admin guide soon - https://pinot.readthedocs.io/en/latest/admin_guide.html). FlakyConsumerRealtimeClusterIntegrationTest seems to have failed. Created a tracker for it.. Its from previous version of the code; will fix it in a followup PR; will merge the current changes.. Do we have a metric that tracks this condition?. Partial review - have only looked at this interface.\n\nHow did we decide on the set of operations to be supported for the FS interface? For ex, I don't see mkdir/s or method to get the status of a file etc.. 2018?. Would be good to add javadocs; if not, might be better to remove the @param/@return/@throws instead of partial docs.. Why Exception? Should it be IOException? (Applies to other methods below as well). . Update the year.. It will be good to note what happens if dst exists already.. What happens if dst exists already?. It might be better if this only supports files instead of returning 0 for directory. Would be good to also state the behavior if file is not found.. This would mean anyone who would depend on pinot storage module pulls in hadoop dependency. Is that intentional?. I don't think we want to add hadoop dependency to the common storage module.. FileNotFound extends IOE - its ok to put it in the throws line, but might be better to do it consistently whereever we can throw FNF. Its unclear why its being called out only here.. renameTo actually does the move. What are we deleting?. renameTo is a move. Please use FileUtils to copy.. Please add tests for LocalFS implementation covering all methods.. The FS interface is not just for Hadoop right? What if another filesystem behaves differently? Thats where our 'impl' classes come in to smooth out the behavior differences.\n\nWe should make sure we expose something that is meaningful and not inherit everything that hadoop-fs does or does not do correctly. If there is a valid reason to return 0 for directories, I am totally fine keeping the same definition.. @mcvsubbu pointed me to the issue with our current license check plugin. You can ignore this comment. I will look into fixing the license header.. The PR description says you want to track IndexOutOfBoundsException whereas you are catching IOE and these are thrown from PinotDataBuffer in the build path. You will want to catch Exception in general and rethrow (as currently done).. In addition to changing the module name, lets update the package as well to move storage to filesystem.. How would move/copy work if the URIs refer to different filesystems?. See question on the interface about handling different Filesystems.. I don't think this is necessary. moveFiles will throw an error if dest file already exists.. The interface definition notes that if dest exists, it will be ovewritten. The above comment shows that it will result in an error. If overwrite is the behavior we want, the impl has to take care of it. Delete the dest if it exists.. Please add tests to cover move, length and include tests for files vs directories as applicable. Also, add tests to cover negative cases as well - that the right exceptions are thrown etc.. Update the logger class name.. Please update logs to refer to HadoopFS. It may make sense to pull the constants out of SegmentFetcher if they are more broadly applicable.. Will this throw an error for cross cluster copies?. Can a more specific exception be caught?. Do you want to return true even if an exception was caught?. What happens to files partially copied already? Should they be deleted?. Will dstUri get cleaned up in case the copy doesn't succeed?. Will an error be thrown for different schemes in the URI or different destinations?. Fix this to refer to pinot-filesystem instead of pinot-storage.. The interface states this should actually return a null (or fix the interface def to reflect the right thing) - ensure its consistent and there is a test case that asserts for this.. dstUri could be a folder that already has files in it. We may not want to delete existing files. Keep files if copy/move is partial and add a comment to reflect the same.. What happens if it does not exist?. What happens if the uri is a directory?. Many methods in this class are 'synchronized' - I am not sure if all private members need careful access; the newly added setMinIntervalBetweenUpdatesMillis is updating a long value without a lock. Is that safe? \nIt might be good if we have some class level comments on thread-safety related aspects of the class so future modifiers have the right context.. Since the new method is public, there is no guarantee that other parts of the code won't call it any other time. Should the interval be really decided outside this class? If we move it inside this class, then we risk fewer issues with setters getting the way. This is mainly from a pure correctness point of view.. Also, I noticed that MutableSemgentImpl is the one that calls addSegmentStats followed by a save(). Should save also not happen if we haven't updated due to the interval check? I am wondering if the interface can be simplified to have addSegmentStats call save internally. That way its well contained and we don't have to rely on users calling or not calling save().. Why does the _postingListIndexBuffer need to cleared but not _valueBuffer?. Are we using a newer version that doesn't have the unexpected issues/crashes encountered earlier?. Its not clear what \"postingList\" refers to. Could you add clarifying comments?. Lines 128-131 and 138-141 look similar. Anychance they can be a single method call?. Can we add a test to cover the case where we add more than the earlier MAX values?. This check is a bit confusing, esp given that its missing in the off-heap version. It appears that either its applicable in both places or neither. Let me know if I am missing something.. We should consider moving the part where we write the indices to file (and other common parts) into an abstract class - that way we can have common enforcement for such limits.. Can you include the instance name or some form of identifying it in the message?. Was the previous cast to long (although incorrectly applied) to take care of overflow on multiplication?. The message does not read correctly. Would be great if it can be made gramatically correct.. \"Not support ... \" => No support for down sizing the current server... ?. This file has a LOT of formatting changes mixed in with actual code changes; this increases the review burden and can lead to review misses. Can you please set the editor to not reformat lines that are not updated? Please keep formatting only changes in a PR different from actual code changes.. This is a change to the API. Are we sure that no one uses this to list tables? Does another API provide similar functionality?. The error message doesn't read quite relevant. It might be best to say \"Encountered error while encoding in UTF-8 format\".. Didn't we choose \"Filesystem\" to be the package?. Its unclear why we are constructing so many File objects.. Always include e.getMessage(); better yet, pass e to the logger to log relevant message, stack trace etc. The error message could also be updated to \"Could not create file-upload-provider\" instead of concluding that it is an isue with the configuration.. Same comment about exception logging as above.. Please catch specific exception where possible and let runtime exceptions get thrown as would happen automatically. Not sure there is much value to catching e and throwing e without further logging/processing.. I think the comment should be clarified: For local fs, we assume that the download will happen through http.. Nevermind - this seems to be specific to the controller.. protocol might be better named scheme.. We will need to check if the cluster is the same as well.. Is this being used? Didn't find any references.. Its not clear why we are doing this.. Is that true? I think we will have one factory class that will look up the config to instatiate the right FS class.. Is this actually used?. Yes, thats true. I haven't finalized this change yet (pending todos to say the least). The main point though is that estimate can be -1 and we shouldn't directly use it in the code that follows. If we go with the approach of caching, we could fall back to the last cached value etc; or accept the segment, but log a message/fire a metric that says we are flying blind a bit.\nI can pull this out from this PR and leave only the logging in; we can review table-size estimations and address this issue along with others we would like to improve on. . Thanks for pointing that out. Fixed.. It looks like resourceManager APIs can throw runtime exceptions some of which indicate client side errors (ie, broker tenant does not exist etc). Shouldn't we catch those and throw appropriate 4xxs?\n(There are more occurences of this in the rest of the file). This seems unexpected as this update API. Can we log a message saying we are adding a table?. I don't think we should hard code the version. . Is this still required if we run with -Pbuild-shaded-jar above?. Same question as above.. We should println this exception (and the one in the next catch block) as well.. Dictionary/indices may be included. Remove the last part of this comment.. Remove commented out code.. Lets first tell the user about the problem and then elaborate. \"Storage quota exceeded. Estimated size....\".\nOn thinking more, some of the error cases happen where the table has already exceeded size (indexes enabled prior to push etc). In that case, I think we can probably say, \"Table already over quota. Estimated uncompressed size of all replicas > %d (configured value X * num replicas). Check if indexes were enabled recently and adjust table quota accordingly\".. Good point. I've updated the code to not log it more than once a day. Let me know if this works better.. On a quick review, I didn't find others that might be candidates and didn't want to change any existing logs that we might be relying on. If we have more such instances then we could update the variable and logic accordingly at that time.. Based on offline discussion, we'll not reject segment in this case. I've made the handling of this case clearer.. In that case, the code uses table-level max segment size. If table level max is -1, then we return -1 as the estimate.. It would be better to rename this as READ/RESONSE timeout and not CONNECTION (typically thats used to indicate just the timeout to 'connect' to the server). Also, indicate the duration in the variable name - READ_TIMEOUT_SECONDS. You can pass in seconds directly got getOne and specify the TimeUnit as seconds.. Could we print a message here by default - so someone just trying out the code knows whats happening (or not)?. Thanks for including an example in the description. I had one additional suggestion to make this more readable: \"Newly estimated size: %s > total allowed %s. New estimated size = (), total allowed=(<numbers used to arrive at it).\nThis way, the main info is available upfront and the details are there for those who need it.. We should be careful about allowedStorageBytes == 0. There is a < 0 check for that earlier in the code, but not for == 0. Please add a check to avoid div by zero errors.. Can you also add a test to check that the emitted % is correct?. Add a comment about why this is ignored. Move the comment outside of the if-block.. Why are we doing this?. I think it will be sufficient if we enabled it only for ZkStarter right? Also, can this be added in a common/base class instead of setup for multiple tests? Is logging initialized per test? \nAlso, should this be reset in a teardown method? . That surprised me too. Will followup with Jackie.. Done.. Done.. Its a guesstimate at this point - let me know if we can use a better value or a better way to determine the value.. I've updated the code to use UNKOWN_CARDINALITY for now mainly because it was not directly available for realtime segments. Will followup with Jackie on the different constructors for datasource and if/how we can get the cardinality in such cases.. Please add a test to assert the new behavior.. Whats the impact of this change? Does the calling code appropriately bracket this in try/catch? This shouldn't result in query time exceptions.. Looks like this is used only in SegmentColumnarIndexCreator and does not get used in the query path. As the description notes SegmentColumnarIndexCreator calls min/max only for time-column in writeMetadata(). . That probably has to be the constructor with most args that I've seen. Glad we reduced that!. Updated the default.. Done.. Good point. Incorporated both comments.. I don't think waitUntilConnected() and waitUntilConnected(20s) are the same thing. What happens after 20s timeout? Is the code able to recover from that gracefully?. I understand that the API support has changed. But we could technically do waitUntilConnected(Integer.MAX_VALUE,...) to keep the old behavior. Just making sure that this new behavior is indeed desirable.\nAlso, nit: it would be good to use a named constant instead of \"20\".. Would be good to include connect in the name; DEFAULT_CONNECT_TIMEOUT_SEC. I had a similar concern about waiting till connected here: https://github.com/linkedin/pinot/pull/3076#discussion_r210147713. Will address this in a followup PR. Thanks!. The reason I had debugOptions being held/passed around was to enable other options to be fetched as well if we need to support any such in the future. My concern with this change is that its too closely tied to ScanReorderOptimization; Could you comment on how other debug options would be handled?. Nit: I try to keep statics at the beginning of the class definition. . Reading this in the context of reorderFilterOperators definitely feels odd to me. Why not pass debugOptions and let reorderFilterOperator decide what it wants to look at?. Just FYI. Kishore had a comment on my earlier PR that this should be changed to ColumnMetadata\nhttps://github.com/linkedin/pinot/pull/3111#discussion_r213012688. I am not sure if I follow. If someone tries to add a new table with a broker tenant that does not exist, is that not a client error? In which case, isn't 400 the right error code? . I did consider that, and arrived at this change for the following reasons:\n- We have OmitStackTraceInFastThrow enabled, so hopefully that will control some of the damage.\n- Broker currently logs the error for this (except that I couldn't find a good way to include server context there) and I dont' see it being a very high rate. This still doesn't mean we won't flood the logs IF something bad tickles the server, but I am guessing the chances of that are low.\n- The linked jira has context on the specific error and I could log the error in processQuery for the specific case we are chasing. It required converting a precondition check into a log and throw, which seemed clunky to me and having the caller take care of logging exceptions seemed like a better approach.\nLet me know if you think its better to track counts per interval and only log them once in a while. I am however not sure how useful that would be in debugging issues.. Done.. Done.. Done.. Will merge for now and update with rate limiting as necessary.. We are no longer catching parse exception. This seems fine for the most part (ie, it shouldn't really happen), but if it does then we fail the query while trying to do something non-essential. Something to consider - do we need to be more defensive?. I will remove the init from here.. This would require me to either provide a setter or an init() method in the baseclass just for the purpose of setting this particular variable. It didn't seem like that added much in terms of readability, so decided to keep it in the subclasses where init is implemented.. Good catch. Fixed.. We don't return an exception to the broker on this one - hence categorized it as badResponse.. Removed unsued.. I went back and forth a bit on this - I initially had it not taking a targetState; but the API expects the ideal state to be returned in response. for both dry-run and non-dry run cases. It felt weird to call the updater when it was in dry run mode, so I had the manager compute it once and updater will recompute it only if needed. I see your other comment on the name of this class being misleading. Let me rework this a bit to have things flow cleanly.. We are using a fixed delay retry so as to not hit zk too hard.. The other exceptions I can anticipate are network errors which can be retried. Looking through ZkBaseDataAccessor, set() returns false if there was any other exception internally. It is unclear which ones can be retried. I will bound it to a fixed number of times per idealstate update attempt.. Use TimeUnit to convert serverStarterTimeout to ms once outside of the loop. (No need to 1000 * serverStarterTimeout repeatedly).. For the currently configured value of 600s, this sleep seems ok, but it may not be if its configured lower. Would be good to:\na) Use a named constant \nb) sleep for min of that constant or remaining time. Please catch interrupted exception separately. \nWhen you catch interrupted exception, do:\n{\nThread.currentThread.interrupt();\nreturn;\n}\nThis allows the interrupt to propagate - the method should not continue on ignoring the interrupt.\nFor all other exceptions please log the exception.. Log this as a warning.. From our observations and evidence from logs, broker sees instance config updates soon enough and the server will stop getting requests soon after shuttingdown is set to true. I am not sure this change will actually get what we want.. Remove comment that states specific timeout when we are relying on a configed value.. Remove comment. We should pass the remaining time after we have waited for no queries so we don't wait for twice as long as max shutdown time. It will be good to check once if there are any online resources and log appropriately (adding a metric with count of online segments at exit would be great!). Would it be good to disconnect in a finally block?. Also, how was this functionality tested?. Is this really used?. I am not sure catching interrupted exception is a good idea. You can add throws to the method signature and let the test fail and bail instead of continue on.. Shouldn't we check if interval is > 0 before doing this math?. If periodicTasks is empty, why even bother with the rest? We can log a message and bail out? . It might be good to log this only at the end when we are bailing out - else it might result in too much logging.. Thanks for fixing it!. How is the sharing of the single client going to work? Earlier, the code was creating a new client for each url - which makes sense as they multiplex the request over the connections managed by the connection mgr. In the new code, the same client is shared - its not an async client, so I don't think this will work as expected. Let me know if I am missing something.. Might be better to log e.getMessage().. Was any failure path testing done to ensure this works as expected?. I looked to log just the requestId too, but broker request doesn't have it.\nTypically we see a bunch of requests timeout when a bad query hits the server; in a high qps use case, its harder to see exactly what the offending request is. Sometimes, its obvious from the query pattern and sometimes its not so straightforward. This change takes the guess work away.. It looks like this other change that I made actually gets what we want: https://github.com/linkedin/pinot/pull/3180\nThat code wasn't deployed to production when the error that I noticed happened.. Should we keep this time bound instead of count bound? If the validation runs more frequently, then we'll reach the count sooner, right? We could track last segment validation time and define a segment-validation-interval-hours to control the interval?. Lets take a concrete example. Currently, for a simple SELECT count(*) from table where colx=y; If the server has 100 segments to work with, in the current code we'll end up creating 100 tasks. They will all be executed with a bounded number of threads in the executor-service, but given the amount of work that is typically done in the planNode.run(), the task executes very quickly, so the threads hit the queue to pick up other tasks and that is where the contention is. Even though there are tasks to be picked up, most \"pqw\" threads are waiting to take tasks off the queue.\nWith this change, we limit the total number of tasks we create - so when a thread picks up a task, it has sufficient work to do before it gets back to the queue again. This ensures that we are taking advantage of parallelism as well as containing the number of tasks. The choice of max of 10 is to ensure we have threads for other queries as well (much like how it is done in CombineOperator etc).. Sorry - I misunderstood your earlier comment. I've updated the code to use the min number of threads possible.. sure, will do!. Looks like this is not used.. Does this need to be a separate config? Could we add this for all indexed columns? If we pursue the size based optimizations you mention, then the overhead would be somewhat contained.. Is that really necessary? Why can't we handle these operators if they are passed in more gracefully?. Same concern as above.. Shouldn't this be _nonMatchingIds == dictionary.length()?. The javadocs for all three methods is incorrect.. This should be numsegmentsmatched, right?. Method name should be changed to getNumSegmentsMatched.. The lookup key needs to be updated; its currently referring to post-filter metrics.. Same concern as above.. It will be good to update the log to say Segments(queried/processed/matched) - else it might be hard for someone who isn't familiar with the code to figure out what they represent; or we can log them separately.. I thought this log had a \"legend\" too; wondering if it will help to make this more self explanatory.... Can we add bloomfilter for all dimension columns? \nI am wondering if the configuration can be simplified - as it stands, we have one more tunable; if in the common case the overhead is much lower compared to the benefit, I would much rather have it on by default. We can have a global config to enable or disable bloom - so that way we can do a controlled rollout.\nAlso, I am guessing generating bloom will be handled in the offline segment creation path (pbnj) too by default? (We have overrides that disable inverted-index creation, so checking what the stance will with this feature). Additional comments/context is great - thanks for adding that; however, it might be better to programatically enforce it via constructor checks (throw IllegalArg/State Exc for example) so the contract is not broken when code gets refactored/changed. In other places in this PR you have used asserts. These are weak checks as they can be disabled at the JVM level; would be good to consider throwing exceptions instead.. ok, makes sense - I might have been thinking about the not-in predicate. The non-matching id is present in the dictionary and the length of the dict is 1; in this case nothing will get ever get picked up by the predicate.. This seems a bit involved to surface the information we are looking for. Can this be handled better on the broker side? Broker can cache the schema and check for columns queried against the schema?. It might be worth it to keep the tableSchemaCache as a top level citizen that gets passed in (instead of property-store). Its possible classes outside of the RequestHandler might need access to it.. +1 for conf control.. It looks like this functionality is very similar to ServerQueryRequest.java - It might make sense to extract the common code into RequestUtils itself so it can be used by both the broker and server side implementations.. We might size this to be bigger so as to accommodate bigger clusters, else we'll have to expose a config option to do the same. \nIt might be worth exploring 'softValues' option in the guava cache so the values can be GC'ed under memory pressure, but otherwise we can keep as many schemas/tables as are accessed by the broker - this can help remove yet another tunable for the cache size.. +1; the behavior explained here is desirable: https://github.com/google/guava/wiki/CachesExplained#refresh. EXISTENCE => EXISTENT. It might be simpler to expose just getInstance(); if its not created, the instance will get created. Does the user code really need to distinguish between create and get?. This needs to be synchronized as well, else it might suffer improper publication. . It looks like this can be set in the if-else block of line 222?. What might be the limits of the data that can be pushed through this?\nThere are other tidbits of info that I would like to see in here, so would be good to know what the limits (if any) are; for ex, the brokerProcessingTime (current processingtime includes server+broker latency); it would be good to include the server-stats that are normally logged, and perhaps some client side info as well. In anycase, it will be good if this is easily extensible.. This is already  being set in line 131. 2018. Although the name does indicate the unit, I think it would be better to report this is in millis. Its just easier to deal with all latency numbers in the stats as millis so you don't have to mentally switch between units.. Did you want to deprecate the earlier one and add a new one instead?. Good point. Updated.. shouldStopPeriodicTask() might read better.\n. Do we need synchronization between start and stop? What if the leadership change happens quickly and start is still exeucting, when stop kicks in?. Good catch! I've updated the code to use bytes based method to read and decode once we have picked up the bytes read values.. Is the sleep required only here?\nAlso, a better pattern might be to use TestUtils.waitForCondition instead of a simple sleep if we are to wait on results of asynchronous operations to get reflected.. See example here: https://github.com/apache/incubator-pinot/blob/master/pinot-integration-tests/src/test/java/com/linkedin/pinot/integration/tests/OfflineClusterIntegrationTest.java#L162. Shouldn't this read \"except the srcUri is retained\"?. Incomplete. Is it valid to delete dst if its a directory?\nIf someone attempts to copy name1 to dst/name1, where the source name1 is a directory and dst/name1 is a file, shouldn't the copy fail?. What if srcUri is a directory and has files that actually need to copied over?. Same concern as above with deleting dst if its a folder.. Why can't we return the array-list here?. I don't think previous dst/name1 should be deleted. Will be good to review this and see if we should honor this contract:\nIf name1 is a folder and dst/name1 is a file, operation should fail.\nIf name1 is a folder and dst/name1 is a folder, src folder will get copied under dst/name1.\nIf name1 is a file and dst/name1 is a file, dst/name1 will get overwritten.\nIf name1 is a file and dst/name1 is a folder, src file will get copied under dst/name1.. Good catch :). Why has this been removed?. Why do we have null checks on some and not others?\nSome of the setters callout Nullable vs NotNull for some configs, but not all; The various constructors/builder methods don't ensure not-null either.. If the default/no-arg constructor is used, only custom-config and tenant config are created. Should it create the other mandatory confs? (Same for other constructor/builder). I agree this is out of the scope for the PR (the reason this made to the discussion was that we decided to remove the routingConfig related code). We should tackle it otherwise though because the checks don't make sense.. Shouldn't this method actually set _objectType?. Please add appropriate javadocs or remove the comment. (Same for the method below). Might be better to call the param propertyName.. Might be good to materialize/cache the properties.. The special casing here isn't clear to me.. Why are we returning this as text/string?. A lot of files below have just formatting changes. Would be great to exclude them from the PR - the changes also seem to be undoing some of the imports organization that was done in a recent PR.. Is there a plan to add a PinotObjectFactory that constructs the appropriate objects based on this type?\nIts not clear how String vs enum really helps; enum gives some enforcement/bounds on the type..  Would be good to keep this change to just object type changes and bring in the pql changes in a different PR. If starting up the servers is an issue, then may be we can update the code so that they are done once (or just a few times for the tests) and the state cleared between tests. We don't have to do this  now, but something we should consider/work towards.. Would be good to note a few things about the class itself: the supported types (esp around the support for string where it will be parsed as a double), handling of exceptions ( % 0) etc..  Move this below 46 to keep related functions together.. Please remove commented out code if its not needed. . Consider adding getPhysicalColumns so the virtual column filtering can be done internally.. Can we throw a more specific exception so that we can throw 400 bad request instead of a 500 internal server error?. Why does this need to be an array of 1?. isValidate => shouldValidate. @kishoreg I don't believe that is correct. We want to maintain a LRU cache - so if we have a lot of tables, the frequently queried ones will stay in memory and we'll hit ZK only for the ones not in memory. We should limit the in memory size to guard against pathological cases where the size grows unbounded. . This is ok for now. We should try to get out of the mode of throwing RTEs for exceptions that we can control - IMO its a good practice to throw specific (checked where possible) so the contracts can be enforced better.. Please add class level javadocs. Given this is a cache, some of the higlevel points that you should include are:\n- How big can the cache grow to?\n- How are source mutations to the cached data handled?\n- Is it thread-safe?. Based on our discussion, lets use size based eviction. I would prefer the cache to be refreshed on data changes via a watcher. @kishoreg would watchers on schema be OK?. Should an message be logged if move returns false? If we can rely on move to always log, then you can remove the additional log in PinotLLCRealtimeSegmentManager.java. This comment is misleading as its assuming a 'file' whereas all of the above code seems more flexible.. This part of the code exists in all implementations. Can we add this to PinotFS, call super.move() and then handle FS specific logic in the impl classes?. Remove \"to make less confusion\". +1. Please update the comment. The intent is not to just to discover misconfigurations. You can remove the second sentence.. Just curious if we need to allocate a segmentvalidator everytime - or if we can just expose a static method on a util like class.. Can we split generate and upload so we can reuse the same segment here?. We can probably remove this as we are calling out the restriction at the interface level itself.. Is this change related to this PR?. Lets add notes on some of the core discussions we have around this so its clear to other why the interface is the way it is:\n\"PinotFS is a restricted FS API that exposes functionality that is required for Pinot to use different FS implementations. The restrictions are in place due to 2 driving factors:\n- Prevent unexpected performance hit when a broader API is implemented - especially, we would like to reduce calls to remote filesystems that might be needed for a broader API, but not necessarily required by Pinot (see the documentation for move() method below).\n- Provide an interface that is simple to be implemented across different FS types. The contract that developers have to adhere to will be simpler.\nPlease read the method level docs carefully to note the exceptions while using the APIs.\". Lets not mix terminology here: Give examples in terms of move API so its clear to readers. i.e., if srcUri = /a/b; an the contents of /a/b are: /a/b/c, /a/b/d; and dstUri=/x/y, the result will be /a (directory b removed), and dst will be /x/y/c, /x/y/d.\nAnd then provide the exception case: if you would like to move b under /x/y, invoke move with srcUri=/a/b and dstUri=/x/y/b.\n. That seems wrong. Source will still have c. Its just that if /x/y/z had a c, c will be overwritten.. Might be good to rephrase this as in the move example with src and dst arguments used for the calls.. Didn't catch this earlier - I don't see an overwrite for copy! We can move addressing/reviewing copy related changes out of this PR if you prefer.. Lets not have incorrect documentation though, please :). Its not clear who handles this runtime exception and what the recovery path is. The earlier code processed the change inline.. If we get into the proactive check mode once, does it mean that the proactive check is the only one that drives further updates? In other words, does anything guarantee that the updates will be event based after a proactive check?. Nevermind, looks like Helix Spectator behavior should guarantee that watch is set after a read (didn't double check the code though). I was wondering what guarantees that the watch will be reset.. Thanks. If this had gone uncaught, then even with the proactive mode enabled we wouldn't have been able to process the changes, right? Could you please note the testing that was done to validate the changes? If any reliable unit tests can be added to test the new code, that would be really good!. The intention was definitely not captured in the description. Regardless, given how critical processing EV changes is, we can always have failsafe mechanism with metrics and alerts helping us followup on when the issue happens.\nRegardless, please include testing done (even if it is manual) so we can review the coverage the change has received. . We don't need this anymore, right?. Will this get logged everytime the record reader path is set? If so, it can be confusing to the users. It might be good to work the fall back at this layer perhaps? (ie, remove filling in the default from the config and have logic to use the default here?). Will update in followup PRs.. Could you indicate the time unit for this? Is it max rate per second, minute?. Indicate timeunit. Should the key be \"query.log.max.rate\" (to conform with other keys we have)?. Do we support HELIX only mode at this time? I thought we would still rollout with just Dual mode initially, right?. Could you track how many logs were throttled and log the count (if non-zero) the next time we are able to acquire a permit for logging? Else, it might be quite confusing to users if they expect to see some logs and find no trace of them.. Not sure we need a another ratelimiter. Here is how I thought about it using the existing query log ratelimiter: if tryAcquire() fails once, it will fail for the rest of the one second duration, so we'll not enter this block and just increment in the else block. Once we enter this block, we check if numDropped > 0, then log, reset and move on. The if check for numDropped > 0 should not be satisfied until it gets rate limited and the duration passes. Let me know if this won't work.. You can keep this for now; we should have a followup to fix it to be consistent.. +1. I don't think so. Its likely that I copied and edited the file manually. Let me check the history.. Added. Fixed. You can use simple references using :ref: syntax. See other rsts (like code_modules.rst) for example.. Should this be part of admin guide?. We cannot comment on how frequently offline data is available. You can just say that the jobs can be run daily or hourly to push offline data to Pinot.. Sorry, my bad. This IS part of admin guide :). As discussed offline, you can make this change in a followup PR.. Ok, the permits are scatter across the second, hence my assumption was incorrect. Thanks for handling this.. What does the trailing \": adl\" imply here? Same with \":  hdfs\" below.. Other files =>Might be better to reword: \"When user specified record-readers are used, files can have different/unknown extensions. e.g., orc can have no extension. Skip the check in this case.\". A branch on the Apache repo is not recommended. We almost always need branches.. On Apache repo, we would like to see branches that are used for releases (and not be cluttered with everything else that the community is working on). Would be good to point this to https://pinot.readthedocs.io/en/latest/getting_started.html. Also, there is a one more link to trying_pinot.html in the text below. Would be good to fix that as well.\nThanks for catching the issue!. Might be good to move this to indexing section.. Will change the method name.. Good point; will add it around line 138. After line 184, the segment is unavailable correct; and if it is due to a move/rebalance, we should count it as an error. We only want to suppress it when the segment has been 'deleted'.. Done. Renamed to trackDeletedSegment. Updated.. Renamed.. Done.. Removed log.. For the test I was pursuing, staggering didn't make a difference. I will however check this in to have the flexibility in the future.. The user defined SLA will account for any expected delays in the incoming stream itself. Just going by the poll time can miss cases where we have issues with indexing (there have been a few in the past; for ex, issues with aggregatable-metrics for multi-value columns etc).\nThe timestamp in the record can have a very coarse granularity, for ex, days - which isn't ideal for the granularity we would like to track freshness at. Also, see motivation notes about the lack of other usable timestamps.. ",
    "kgopalakrishna": "Can you add more details on the type of operations (exact match, prefix match and boolean operations) that can be performed on these columns?. Do you need everything that lucene provides?. ",
    "RahulGuptaIIITA": "closing this PR, check https://github.com/linkedin/pinot/pull/2987 . closed, check https://github.com/linkedin/pinot/pull/3077. Deleting it.. done. done. okay :). done. done. done. done. done. done. done. Done. done. done. done. done. Yeah, removed it.. done. done. done. done. done. done. done. done. done. done. done. ",
    "haibow": "@Jackie-Jiang would you mind reviewing this?. @kishoreg could you shed some lights on this?. @kishoreg thanks for looking into this. Data in upstream table is expected to change regularly, and there are some known issues with data source that required custom logics like dedup and backfill, so users just do the aggregation and replace the whole offline table every 6 hours. They still want fresh data in realtime table (favoring data freshness over minor incorrectness), so we end up in this mode... The fix has been verified. Closing.. Found this https://github.com/linkedin/pinot/pull/1668/. @atumbde could you help to take a look?. Thanks @jackjlli ! Could you help to merge it? I don't have permission to do it.. @jackjlli mind reviewing? Saw you had a similar diff on adding metrics. Then it'll still return routingTable for table12 when I only want the routingTable for table1, right? I'm not exactly sure whether the existing behavior is a 'feature' or a 'bug' - it is confusing to me when I ask for the routingTable for a table, it's returning information for other unrelated tables. On the UI, I have to look through a whole bunch of unrelated routingTable info in the result to find what I want; when querying from application, I need to do another layer of filtering post getting the result. \nAny anticipated use cases for the current less-strict, prefix-matching logic?. Right, we don't really control how users name their tables, and we have tables named eats_order and eats_order_with_count etc. We are using this endpoint for the Presto-Pinot connector, and this behavior caused some confusion to us.. ",
    "dylancharris": "That is a great idea. Did not think about the use case where we may use PCT queries on other datasets using the same MetricAggFunction class. I'll see about fixing that!. Added the suggestion from Alex to make the MetricAggFunction generic for other data sources. Then added the MetricType file which I actually forgot from the original commit. Couple open questions here regarding MetricType that I will investigate:\n\nWhat's the source of truth for byte size on Pinot BYTES columns\nWhat should the toNumber method return?. > +1 to what Alex said. Another question is how do we know which function to use based on the metric? Are we going to configure a different metric for each percentile and add it to the same dataset?\n\nMy thinking is the metric will specify the MetricAggFunction to use. I will have another PR to auto-onboard the BYTES columns to use the \"PCTXX\" MetricAggFunction types. Then the conversion code in PqlUtils will convert that to the function expected by Pinot. \nIn terms of \"which percentile to use,\" the idea was to use a single percentile as \"default\" and improve it in the future to configure percentile from the client. What do you think, Kishore & Alex?. @apucher, thats true the pinot data source does not use them at the moment. However, BYTES type may be needed because tdigest columns are, in effect, bytearrays. without adding that enum val to MetricType, we will have tdigest metric configs with DOUBLE or LONG type and will not know whether to use SUM as the aggFunction or one of the percentileTDigestXX functions.\nI guess the alternative would be to override a metric's defaultAggFunction when the metric configs are created/updated and preserve the LONG/DOUBLE type. This would work, but would imply that MetricType is supposed to represent the return value of the metric column after aggregation rather than before. Is that the intention?. > The confusing part here is that MetricType uses the exact same names as the DataType in the FieldSpec. The FieldSpec's DataType however describes the data type before aggregation, whereas MetricType the one after aggregation.\nThanks for the context, that's what I was missing - I will remove the MetricType now!. Added the auto-onboarding logic. Default Percentile agg function is P90. ",
    "akshayrai": "Re-triggering Travis. @apucher, deprecated the older endpoint which took only one function id as a param.. @cyy0714  what is the corner case? can you explain what the issue is?. Can we also do this for the graph in the anomaly page? Only if it is simple change like this.. @apucher that's a good idea.. Thanks for the review @jihaozh. Brace yourself! The migration is coming.. > Just curious - what issues are you seeing?\nCouple of NoSuchMethodExceptions. Looks like we have some conflicts. There are 2 versions of the jersey jars in ThirdEye's classpath. . @jihaozh, the bean and translators are already updated with the description field. I removed the references from the tests and rca\n. I will update their libraries.. Thanks for the pointer. I have removed it from the email. \nBy the way, until we bring in the concept of alert/subscription-group ownership, this can still be accessed from Thirdeye!. We are checking for at least one valid email address. As \"change\" gets triggered only when losing the focus from the recipient box, there is a chance that users will edit the recipient box and click on submit without even seeing the warning message.\nWhich means users can edit the recipient box and click on submit without the warning message being displayed to them.. Good point. Switched to findByPredicate. Aah! that must have happened while copy-pasting it to a different resource file. Will fix it.. Removed. This endpoint works only for daily metrics until we have the new algorithms supporting MIN and HOUR granularity.. We are not deleting the entire record/resource here but in fact updating the record after removing a specific tag from the tags field.. strike off! --org.apache.commons.lang3.--. Please enclose in try catch. This is a public method. Are you sure that it is not called by some other code?. Can you trim the result before inserting it into the map? That way we can make sure white-spaces are also cleaned up.. Yes, I initially considered to just pass the alerter related configuration, but apparently, there are a lot of parameters that are required especially to populate the emailConfig like the dashboard host,  failureEmails, functionConfig, alertFilter etc.. I will probably keep it here for now as it is outside the scope of this PR. We can remove it in a separate PR.. Ah! I think I misunderstood Jihao's point. +1 to passing only the thirdeye config but I cannot pass part of the thirdeyeconfig.. I am not very confident of making it an Object. These are platform metadata. I don't foresee any benefits by making it an object. In addition, making it an object will require us to call toString each time we extract the properties.. I'd prefer naming this as isMovingWindowDetection. Can you include some comments in the code on what and why we need this windowDelay for?. isBefore does a less than check right? Won't currentEndTime be excluded then?. I'd prefer passing startTime and endTime as parameters. We can convert this into a utility in the future.. Well there is no perfect number, but if we set it to something big, say 7 days, then we might end up merging anomalies and have an anomaly which spans for 7 days. This could end up swallowing critical alerts which we may want to avoid.. This is only a translator which translates a given yaml to DetectionAlertConfig.\nI believe the original idea behind this was to configure a different fromAddress. Whether we should let users update this or not can be discussed and I can include it in the validator.. It is loaded by the DetectionAlertRegistry.\nReference: https://github.com/apache/incubator-pinot/commit/feaca0a2eb5db5b028eaab1d74af35f9dd544f62. This has and will potentially have a lot of LinkedIn specific things. I think we should move this out.\nMaybe call an endpoint and let the backend return this value. LinkedIn stuff can be easily wrapped in the backend.. I'd prefer removing commented code if not required.. I think we can just remove this.. This is a good idea! The issue is that the vector clocks in the translator set the time watermark to 0, while here, since we do not want to resend the anomalies we need to override the clock to the current timestamp. Let's sync up offline to see if we really need to set the timestamp to 0 in the first place.. I have set the vector to current timestamp and updated the PR.. Maybe return a response with the created anomaly ID so that the caller knows the status of the api call.. 1. Why should tuning be disabled for migrated functions? Can you provide some context?\n2. Do we really need a new MIGRATED tag? When will we update them later?. Usually logging and throwing is an anti-pattern. This exception is caught later and logged.. Can this be merged with the above loop?. Might include some class level docs explaining what tasks does this onboarding job perform.. Enclose in try-catch. If exception is thrown, revert changes and display message 'failed to setup the onboarding job`. I think description should be made compulsory to improve the overall experience of the alert recipients. We can discuss this later. Not urgent!. Why check both? Aren't the vector clocks and the detectionConfigIds list always in sync?. @Override the methods. Yes, I have already communicated this with @aaronucsd . as above\n. Not required?. Anomalies is a list. This is a safety condition that avoids potential duplicates.. Thanks for moving this into a utility module and updating all occurrences! Good job!. I'd put this inside a PrestoUtility! And include some javadocs and unit tests.. Include the apache license header! Here and in all new files.. Any specific reason for using PinotThirdEyeResponse? It would be better to keep Pinto and Presto code isolated.\nYou could introduce another level of abstraction if you need.. I'd use UTC (TimeSpec.DEFAULT_TIMEZONE) unless it is on purpose.. I am not sure if we should surface this yet! This will make the link visible in production. Maybe comment this code out for now and we can enable it for the ThirdEye users once we test it internally and are happy with the latency requirements.\nAlso make sure the public facing links are suppressed elsewhere in this PR if any.. Why should Pinot's timeout be increased? Can we isolate Presto from Pinot if there are any overlaps?. Include Apache license header! Again thanks for separating this out.. Including a comment on what this method does would be really helpful.. I think it would be better to use a hard-coded size than determining the size at run-time! Probably easier to debug issues in the future.. Can you include a comment stating that these values are chosen randomly and needs to be tuned.. Does this mean we will make multiple copies and store them in-memory for each sliding window? That might be a lot of data.. is the change merged?. Do we know why the tasks are piling up? Is it because of one server?\nAdding this condition might stop the tasks from piling up but we could delay the detection and increase the MTTD without even realizing it, right!. Can you include a comment on what these values represent?. shouldn't it be maxDuration >= 15 mins?. ",
    "pizzaz93": "The newer version would provide better security coverage . ",
    "fredxfred": "Sure thing, I'll add a test case. Might take me a bit of time to figure it out. Logged deserialized reader config. Not sure where/how to test . One of our use cases is that we would like to change which columns are star tree indexed in a live cluster (to see the impact on performance). We haven't been able to get the REST command to update table config to work without reloading segments (possibly there is a bug there?), which brings our cluster down for too long. Having the StarTreeIndexSpecFile read as a parameter to the hadoop job gives us flexibility regarding which columns are indexed and avoids having to update the table config. Just added support for using both http and https. Hopefully this works.\nWe ended up not going forward with encrypting the netty servers since currently ours aren't exposed to the public internet. Unlike with controllers and brokers, we can't put the servers' apis behind load balancers as easily, so it makes certs too much of a hastle.\nTo keep the controller query portal working after the brokers' apis were encrypted, I added a configuration that allows the user to change the way query portal queries are executed by passing all queries directly to a load balancer.. No it is not logged anywhere. I can log it in getReaderConfig. ",
    "expzeshah": "Thanks for getting back, could you share your mvn version? \nI am running following version:\nApache Maven 3.5.0 (ff8f5e7444045639af65f6095c62210b5713f426; 2017-04-03T14:39:06-05:00)\nMaven home: /usr/local/Cellar/maven/3.5.0/libexec\nJava version: 1.8.0_144, vendor: Oracle Corporation\nJava home: /Library/Java/JavaVirtualMachines/jdk1.8.0_144.jdk/Contents/Home/jre\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.13.4\", arch: \"x86_64\", family: \"mac\". Perfect that did the trick. But still not sure why the shaded jars were not getting generated inspite of running package phase i.e. mvn clean package\nBut thank you very much.. ",
    "sunny800629": "Because  i want to use pinot in our project,but  i can not find encough  document  to support ? i am very glad to receive message from you.\nthanks!. select * from flights dayssinceepoch between  number1 and number2?. ",
    "mnandinic": "Removed the date format conversion. The code changes for reading the config file from the default file system specified in hadoop. Tested in local and ADLS.. Not sure how and where to add the test case for this. Earlier the code was only compitable to read the config from the local file system. When the defaultFS of hadoop is other than file, this was breaking. . I think it is been indented with 4 spaces. What is preferred ? . what happens to the case where there is only incoming granularity ? . default is epoch and if simple date format is not right, it would anyways throw exception as its in try. Everywhere in the code it is mentioned that this is the format. If you look at DefaultSegmentNameGenerator, the comments say\n\nIf the time column name exists, _segmentNamePostfix = \"postfix\", and _sequenceId = 1, the segment name would be\ntableName_minDate_maxDate_postfix_1\n\nBut when I tried to create segment, it was _postfix-sequenceId. After looking into the code, found this. . ",
    "s-sahay": "@jenniferdai : Did we decide not to push this PR? It looks like a good clean up effort.. @jenniferdai : Since these changes are already merged as part of another PR can you please close this PR?. @kishoreg : Can you please comment on the above?. cc @xiaohui-sun . Will there be another PR applying these formatting on the current code base? . > After removing category X dependency and removing \"pinot-perf\" from distribution package, we are bundling 109 external jar libraries and 9 js/css libraries within the source code. After this pr, anyone who's changing version of any library or adding a new library needs to update NOTICE & LICENSE files.\n\nThe extensive list is present at the following spreadsheet https://docs.google.com/spreadsheets/d/1lMEEvrA8SqHe0Yy0yC2Nd-nN5lg5sPaNwihrj_--y8Q/edit?usp=sharing\n\nGreat job on getting this done! It would be good to have the google doc linked either on the cwiki or the RTD(may be in the Developer Guide section).. LGTM \ud83d\udc4d . rename() with overwrite param set to true should give the same functionality.. ",
    "xiaohui-sun": "Good job @harleyjj ! This is very useful.. Have you merged my change and tested?. This pr is not needed since we should not change the component map.. @cyy0714 The upper/lower bound is optional which means you don't need to store it in Anomaly.\nThe main purpose is to use in preview and RCA.. > > @cyy0714 The upper/lower bound is optional which means you don't need to store it in Anomaly.\n\n\nThe main purpose is to use in preview and RCA.\n\nFor RCA, how is the baseline calculated? If we don't use the sliding window fashion as preview, we will lose the accuracy.\n\nI believe it is not sliding window but that is another issue we should fix.. This is 1% but your comment says 5%.. Based on our discussion we will always show the alert regardless range change or not.. Is it always the same address?. How to dynamically load the suppressors provided by third party?. Can we do all the check and return the message together instead of early return here?. Is there a unique name to identify the detection config? Using the name would be more user friendly instead of id. We can do the conversion in backend.. Let's move it to /admin?. Let's use /detection now and change it to other places if it is needed. @aaronucsd . Put it into a helper function.. Done.. Why the windows in monitoringWindows are overlapped?. Why merger needs to handle this? Merger's input is anomalies only.. Should get the granularity and timezone from detect function.\nE.g., the underline data may have hourly granularity, but we may want to monitor it in daily granularity.. ",
    "nilesh-kanawade": "I peeked into the code and found issue in these line:\nimport sun.misc.Cleaner; -> cannot find Cleaner class\nimport sun.nio.ch.DirectBuffer; -> internal API\nanybody knows how to solve this??. Thanks @snleee!!\nI have tried with java8 and got below error:\n[ERROR] Failed to execute goal on project pinot-server: Could not resolve dependencies for project com.linkedin.pinot:pinot-server:jar:0.016: Failed to collect dependencies at com.jcabi:jcabi-log:jar:0.17.1: Failed to read artifact descriptor for com.jcabi:jcabi-log:jar:0.17.1: Could not transfer artifact com.jcabi:jcabi-log:pom:0.17.1 from/to chibi (http://www.chibi.ubc.ca/maven2/): www.chibi.ubc.ca: nodename nor servname provided, or not known: Unknown host www.chibi.ubc.ca: nodename nor servname provided, or not known -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/DependencyResolutionException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn  -rf :pinot-server\nSo, I changed command to \"mvn -Pbuild-shaded-jar install package\" which resolves above issue but eventually failed integration test (pinot-integration-test). Here is the output:\nResults :\nFailed tests: \n  OfflineClusterIntegrationTest.setUp:129->ClusterTest.uploadSegments:271 \u00bb Execution\nTests run: 81, Failures: 1, Errors: 0, Skipped: 5\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for pinot 0.016:\n[INFO] \n[INFO] pinot .............................................. SUCCESS [  3.534 s]\n[INFO] pinot-filesystem ................................... SUCCESS [ 14.043 s]\n[INFO] pinot-common ....................................... SUCCESS [ 35.859 s]\n[INFO] pinot-transport .................................... SUCCESS [01:15 min]\n[INFO] pinot-core ......................................... SUCCESS [13:36 min]\n[INFO] pinot-server ....................................... SUCCESS [04:08 min]\n[INFO] pinot-controller ................................... SUCCESS [05:51 min]\n[INFO] pinot-broker ....................................... SUCCESS [02:36 min]\n[INFO] pinot-api .......................................... SUCCESS [ 13.576 s]\n[INFO] pinot-hadoop ....................................... SUCCESS [ 49.484 s]\n[INFO] pinot-tools ........................................ SUCCESS [01:32 min]\n[INFO] pinot-minion ....................................... SUCCESS [ 18.665 s]\n[INFO] pinot-integration-tests ............................ FAILURE [29:34 min]\n[INFO] pinot-perf ......................................... SKIPPED\n[INFO] pinot-hadoop-filesystem ............................ SKIPPED\n[INFO] pinot-azure-filesystem ............................. SKIPPED\n[INFO] pinot-distribution ................................. SKIPPED\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  01:00 h\n[INFO] Finished at: 2018-11-12T14:54:56+08:00\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19:test (default-test) on project pinot-integration-tests: There are test failures.\n[ERROR] \n[ERROR] Please refer to /Users/nilesh/Documents/repositories/pinot/incubator-pinot/pinot-integration-tests/target/surefire-reports for the individual test results.\n[ERROR] -> [Help 1]\n[ERROR] \n[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.\n[ERROR] Re-run Maven using the -X switch to enable full debug logging.\n[ERROR] \n[ERROR] For more information about the errors and possible solutions, please read the following articles:\n[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException\n[ERROR] \n[ERROR] After correcting the problems, you can resume the build with the command\n[ERROR]   mvn  -rf :pinot-integration-tests\n. Just a headsup, I'm trying to build it in my local (MacBook Pro) which might be the issue.. Thanks @ly923976094, It worked!\nHere is the sequence:\nmvn license:format\nmvn clean install -DskipTests -Pbuild-shaded-jar\nmvn install package  -DskipTests\nIt will generate necessary packages as suggested in document.. ",
    "harleyjj": "Thank you @apucher !. Very nice css. I'll look into it now. No, not yet.. This is very helpful!. Yes, it will just display the placeholder where the anomalies would typically be. \n\n. elegant fix. Thank you for fixing this!. very nice!. I wonder if this will fail integration tests.  I changed the test case to have granularity of '1_DAYS' in the PR that this adjusts.  If it fails, this is probably why.  . https://github.com/apache/incubator-pinot/pull/3861/files. Second commit:\n1) fixes feedback when users label anomalies on new alert-overview\n2) fixes bug in preview where subscription group changes would hide preview dropdown\n3) fixes styling disparity between alert edit and alert creation in yaml-editor. Nice - I think these variable names make things clearer. Cool - I was going to do this, but you already did it.  I'm wondering - should any of these fetches be just totally removed? \nrawAlerts: fetch('/thirdeye/entity/ANOMALY_FUNCTION').then(checkStatus),\n      subscriberGroups: fetch('/thirdeye/entity/ALERT_CONFIG').then(checkStatus),\n      applications: fetch('/thirdeye/entity/APPLICATION').then(checkStatus),\n      detectionAlertConfig: fetch('/thirdeye/entity/DETECTION_ALERT_CONFIG').then(checkStatus),\n      detectionYaml: fetch('/yaml/list').then(checkStatus). @akshayrai I made the changes. @xiaohui-sun  Yes, this date range checker is in place because 'newCurrent' comes from _getAggregate, which will be updated if the user changes the date range.  So we make sure that the date range can't trigger the warning (In one case, the anomaly doesn't have the warning, but when the user slides the date picker, it activates the warning - 'isRangeChanged' is checked here to prevent this behavior).  . @xiaohui-sun Thank you, I corrected it.. @apucher thank you for the help - I updated the code as specified. Is debugger supposed to stay?. Yes, I needed to toggle the property in the tree so that the state gets passed across sessions.  The props just read from the tree now.. done and done. I'll go ahead and change that asap. ",
    "icefury71": "I'm currently working with @chenboat to put up a formal proposal. We'll reply with the initial draft in some time. @mcvsubbu can you please assign this to him ?. @mcvsubbu Thank you for writing this up. However, I think this belongs in the other ticket: https://github.com/apache/incubator-pinot/issues/3420\nI feel for this particular ticket, we need to rethink the way replication works. Ting and I are refining our initial proposal and will be putting up something to review soon. Gist of our proposal:\n1) Avoid a complex segment leader election phase.\n2) Add ability to register multiple segment locations within the segment store. \n3) Use any one of these locations to download segments as and when needed.\nMore coming soon.. Hey Subbu, looks like you might have to send us an invitation for\napache-pinot slack :\nContact the workspace administrator for an invitation\nOn Mon, Feb 11, 2019 at 2:28 PM Subbu Subramaniam notifications@github.com\nwrote:\n\n@chenboat https://github.com/chenboat, @icefury71\nhttps://github.com/icefury71 it is also easier to communicate on apache\npinot slack channel for urgent issues. Please create an account for\nyourselves there as well. https://apache-pinot.slack.com\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/apache/incubator-pinot/issues/3592#issuecomment-462520457,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAsb1_CrjV2RmTe3fkdcVoN0hECS9DAjks5vMe50gaJpZM4ZJV1o\n.\n\n\n-- \nThanks and regards\nChinmay Soman\n. ",
    "rustkas": "How to fix it?. ",
    "warrenqi": "Hello, can confirm from here compiling the shaded jar resolved the error for me. Thanks!. ",
    "feng-tao": "thanks @kishoreg .. ",
    "felixcheung": "is there replacement for \"pinot-perf\" module?. @snleee sure - keep in mind ASF release is primarily a source code release. sounds like pinot-perf (source code) is still there and so long as it doesn't contain source code in a different license.\nit will help to have an README in the source to point out pinot-perf  module is pulling \"jmh-core\" based on GPL 2 license, and instruction to build pinot-perf. ~~My take is if it's MIT license it needs not be included:\nhttp://www.apache.org/dev/licensing-howto.html\nhttp://www.apache.org/dev/licensing-howto.html#permissive-deps\nhttps://www.apache.org/legal/resolved.html#required-third-party-notices~~. (I think we exchange email on this, we might need to put MIT license under LICENSES/). sorry, late comment.. this is a bit odd, I think the goal of license file is the list of source code with license y, this list looks like artifacts, not source code file. like in the commit you link to, if these are included in binary release it should be listed in LICENSE-binary instead. ~~these are no need~~\nsee https://github.com/apache/spark/blob/master/NOTICE\nvs https://github.com/apache/spark/blob/master/NOTICE-binary. since I'm not too familiar with this - are we saying these js css files are checked into the git repo?. liscenses-binary -> licenses-binary. you might want to remove -binary from the source release: https://github.com/apache/spark/commit/30aa37fca45ec0ad4f30076bc855d1a201cfc097#diff-01ca42240614718522afde4d4885b40d. why is <exclude>thirdeye/**</exclude>?. ",
    "xueyumusic": "Hi, @kishoreg , thanks for review. In pinot-core there are a batch of non-Windows-compatible tests. I tried to fix part of them in another PR. There are still several tests left, e.g. PinotDataBufferTest(I suspect about xerial mmap lib), CountStarTreeV2Test(which uses '*' in file name), and FixedByteWidthRowColDataFileWriterTest(which test special chars) etc.. . > What triggered adding the close/destroy calls in this PR? Were these from compiler/IDE warnings or from a manual review?\nHi, @sunithabeeram , these were run manually mvn test on Windows to make tests pass. E.g. some tests's teardown failed caused by non-closed file stream, and some files' path are not Windows compatible.. Thanks. Thanks a lot for review, @sunithabeeram , I tried to address your feedback and create an issue#3814. It looks the failed tests not related with this PR..\nAbout PINOT-7 in title I had thought the same as other apache project such as spark, flink, zeppelin etc. It refers to Apache jira number and could auto-related in jira's issue link..If Pinot has not adopted this way before I will follow pinot's current way using github issue to track PR.\nThank you!\n.\n. Hi, @kishoreg , thanks for review, I investigated a bit more and found that the algo adopted by spark to compute approx variance and stddev maybe more practical. From this wiki there are several different algos, and comparing them it looks Welford's online algorithm and its related algo(parallel algo and high-order algo) is more practical. They are also algos adopted by spark at here. So I think it maybe more appropriate to be used here. What do you think?. Hi, @mcvsubbu , thank you for review. I think you are right, it looks more appropriate to throw Exception here. Since it is not related with this pr(Windows compatible), I revert it back here, will submit a hotfix if necessary after. . Hi, @mcvsubbu @sunithabeeram , this is called by BaseStarTreeV2Test. Its real purpose is just to call MultipleTreesBuilder._segment.destroy(), since could not directly get _segement of MultipleTreesBuilder so add a new close method...\nIf MultipleTreesBuilder._segment does not destroyed, the BaseStarTreeV2Test's derived tests such as MaxStarTreeV2Test will failed in tearDown.\nThank you.. ditto.. hi, @mcvsubbu , the failure message is:\n```\nRunning org.apache.pinot.core.startree.v2.MaxStarTreeV2Test\nSegmentV1V2ToV3FormatConverter - unsupported non-posix filesystem permissions setting\nTests run: 2, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 4.701 sec <<< FAILURE! - in org.apache.pinot.core.startree.v2.MaxStarTreeV2Test\ntestQueries(org.apache.pinot.core.startree.v2.MaxStarTreeV2Test)  Time elapsed: 0.905 sec\ntearDown(org.apache.pinot.core.startree.v2.MaxStarTreeV2Test)  Time elapsed: 0.927 sec  <<< FAILURE!\njava.io.IOException: Unable to delete file: C:\\Users\\yu.xue\\AppData\\Local\\Temp\\BaseStarTreeV2Test\\testSegment\\v3\\columns.psf\n        at org.apache.pinot.core.startree.v2.MaxStarTreeV2Test.tearDown(MaxStarTreeV2Test.java:29)\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0\nResults :\nFailed tests:\n  MaxStarTreeV2Test.tearDown:29->BaseStarTreeV2Test.tearDown:177 ? IO Unable to ...\nTests run: 2, Failures: 1, Errors: 0, Skipped: 0\n```\n. ditto, it reports:\njava.io.IOException: Unable to delete file: C:\\Users\\yu.xue\\AppData\\Local\\Temp\\BaseStarTreeV2Test\\testSegment\\v3\\columns.psf. ",
    "WangGuangxin": "rebuild. > There's an ongoing work on modifying record reader's validation logic for time column in #3895\n\nDepending on that, you may need to add some extra validation logic for time column. Let's wait until that's resolved.\n\nok. > #3895 has been merged. Can you make the required changes after looking at the change happened in that pr? The main issue was to handle time column when the column name for incoming & outgoing time spec are different.\nyes, I have merged master and make according changes. You can  check it by commit https://github.com/apache/incubator-pinot/pull/3852/commits/53753d8feaaed89b5c91b1ce0aa45e862c459cf8. Ok. It's I'll move it to pinot-hadoop module.. > Hadoop brings a lot of dependencies. Its better to avoid pulling in those dependencies Is there a way to get the schema without depending on Hadoop libs?\n\nIf we have to depend on Hadoop then its better to add code into pinot-hadoop module?\n\nI'v refactored code, put parquet related codes in ParquetUtils.java, which locates in pinot-common, since it already has hadoop-client dependency. \nI didn't move it to pinot-hadoop because there'll be cross reference between pinot-core and pinot-hadoop.\nNow, pinot-core needs hadoop-client only in test scope. Is that ok?. Thanks for your review. I'v reformatted all my changes.. Done.. It is necessary to tell hadoop file system that this is a local file. \nI deleted it here and setting the default file system to file:// in hadoop conf, which may looks more elegant now.. > This function is only applicable to testing code. Can you move this part to either Util class in test module or within ParquetRecordReaderTest?\nI moved unnecessary code to ParquetRecordReaderTest, leaving a getParquetWriter in ParquetUtils, because it needs hadoop dependency when init a parquet writer.. getConfiguration is not used for test only. It is used by all the three functions in ParquetUtils. > Will fs.defaultFS and fs.file.impl automatically get overridden when we run this on Hadoop?\nyes, it will automatically get overridden.  \nBut sometimes, users may change fs.defaultFS in their hadoop conf to hdfs://. In that case, this job will fail because the file path passed to *RecordReader is a local file. \nSo we have to either add file:// prefix to file path to denote that this is a local file, or make sure fs.defaultFS is file://.  \nAdding a file:// prefix to each fileName in ParquetUtils may seem strange, so I preferred to make sure fs.defaultFS is file://\n. Done.. > Can you add the comment as I mentioned above?\nDone. done. ",
    "narendly": "My analysis in the log above was incorrect. There's no change to the commit itself, but I've identified the exact cause for this. See the following:\nThe underlying interface for ZkClient in HelixManager has been changed to HelixZkClient. Using ZkClient directly is no longer recommended by Helix because it might cause ZkConnection leakage. However, the way Pinot uses ZkClient here is for testing purposes only, so we need to just replace the deprecated APIs with updated ones.. ",
    "kkdai": "This PR want to fix README documentation error on issue #3960 . Done, Thank for your time. . ",
    "tabaaway": "Do we have the method to update severity of merged anomaly? How is that done? To do that, we need to get the min and max timestamp of the anomalies and repull the time series data to calculate baseline and current observation to get lift or difference.\n. What is target.getScore() here? When will you have multiple target metrics?. subMetricTimeSeries. You are doing average here given they may have different data points in the metric series countGlobal != countSub. Name that severity is from monitoring window while the traffic contribution is estimated based on the training window.\n. ",
    "luisah": "Please declare variables at the top of the block scope. Let?. Maybe using a list or a description list to make this code more semantic?. Yay! BEM!. I'm not sure if we should be copying this from art deco. It might make sense just to use bootstrap buttons and restyle them without transitions?. ",
    "yee-lkd": "To be consistent with the other changes in this PR, please use init() { ... } here.. Please move declarations to the top of function. Same as above.. Please use syntax init() { ... } to be consistent with other changes in this PR.. Lines 127 - 129: Can these be rewritten as below?\nconst { \n   maxTime,\n   currentEnd,\n   baselineEnd\n} = this;. Lines 50 - 51: I believe you can target multiple selectors at one go, e.g. $('#timeseries-contributor-placeholder, #contributor-table-placeholder').children().remove();. Duplicate?. Inline styling?. Seems like a good candidate for a11y. To make this accessible, add a descriptive text for e.g.\n```\n\n\nSearch analysis\n\n.a11y-text {\n   display: none;\n}\n. To make this more semantic, perhaps consider adding header tag to \"Trend Analysis\". For e.g. <h2>Trend Analysis</h2>. For a11y, please add \"for\" attribute: http://webaim.org/techniques/forms/controls\nDate Range (Current) \n``. Line 11 - 13: One would expect an input here.. Wondering why add empty? Also, perhaps consider using HTML entities for caret instead https://dev.w3.org/html5/html-author/charref?. Same as above.. Please see comment regarding a11y for forms - adding \"for\" attribute. Same for the rest in this RB.. Why comment it out? Is this still needed? If so, please add a comment to clarify. Same for line 9.. Indentation looks off in this file and a few others. Please fix.. Can we please rename this component to \"anomaly-graph.js\"../thirdeye-frontend/app/pods/components/anomaly-graph.js? Conventionally, Ember creates 3 files when one creates a component through Ember CLI..../components/component-name.js,.../templates/components/component-name.hbs, and../tests/integration/components/component-name.js. Would be good to be consistent with Ember naming/structure conventions :). Please see comment regarding component name above.. Please see comment regarding component name above.. Nitpick - space afterid'`. It's usually better to use absolute path to be sure that we import from the right place. Also, it's more readable (or clear) where we're importing from.. Should this be \"computes text color\" instead (accordingly to file name)?. Nitpick - please add a line between declaration and the rest of the function.. Why not use \"ember-moment\" addon https://github.com/stefanpenner/ember-moment?. ",
    "guangyi": "remove extra line break please. any reason why here is using 'var'?. space after :  :). ",
    "erwa": "I think a better approach would be to keep Hadoop a provided dependency, but to NOT shade org.apache.hadoop classes in the shaded jar. See https://maven.apache.org/plugins/maven-shade-plugin/examples/class-relocation.html for details.. Just curious, why was this exclusion needed?. ",
    "sajavadi": "I added this function since same thing is needed for building FilterQueryTree and HavingQueryTree. In package com.linkedin.pinot.tools.scan.query package there are some already implemented classes (e.g. PredicateFilter) to evaluate a predicate on docID. At the first glance, I thought I can replace my current implementation by using those classes, but when I took a closer look, I found that those classes can not address our needs without significant changes . For instance, there is startindex and endindex for range predicate  by type int, while I am using bigdecimal to be able to compare the result of aggregation functions with different types of literal. I think there should be some where else that we are applying where clause predicates and that might be the solution. I am not able  to find it, do you have any idea? . I do not remember I made this changes. Could it be because of \"Reformat Code\"? . That is my suggestion to avoid code duplicate. Is it acceptable? . done. It could be again because of code reformat. . As we discussed in person, AstNode provides more cleaner interfaces. Furthermore, here I am adding missing aggregation functions of Having clause predicate to the select list to complete the AST tree before converting it to BrokerRequest. I believe the current implementation is a better place. What do you think? . I tested with some Hard queries and it is working correctly. I added getValues function to InPredicateAstNode (and appropriate getValue function to other AstNodes) that returns values of in predicate and here I make sure that they are actually numbers. . I deleted the comment. . Yes, I added some more assertions. . I agree with your suggestions and I changed the implementation accordingly. . I am using TreeMap since it supports CASE_INSENSITIVE_ORDER. I want to make sure that  key sets of singleGroupAggResults which are FunctionName_ColumnName are not compared case sensitive. . Yes, I agree and I changed the implementation. . I deleted this line, as you mentioned, there is no need to clear the map. . I did in this class and other ones. . Fixed. . done. ",
    "igbopie": "how about this?\nconst granularityValue = get(this, 'granularity');\nconst selected = keys.find(key => granularityValue === this.granularityMapping[key]). You can do this.inputActions(...) if you want.. You can use Object.freeze(...). That is changing ;)\nhttps://github.com/emberjs/rfcs/blob/master/text/0281-es5-getters.md. ",
    "bschnack": "Do you want to make this final?. Is the else statement expected? If not, would you like to log it?. ",
    "dasahcc": "If you already give root path. You should not put INSTANCE path again here.  Or if you know that instances are stable, which means there are no instances added or shutdown, you can directly subscribe the paths without root path.\nYou can refer Helix ZkHelixPropertyStore or this constructor:\npublic ZkCacheBaseDataAccessor(ZkBaseDataAccessor baseAccessor, List wtCachePaths) {\n    this(baseAccessor, null, wtCachePaths, null);\n  }. That should work. If possible, you can local start a test and modify the instance config through zooinspector to see whether it got updated at cache side.. ",
    "tangdian": "Unfortunately, yes.. I looked through the code and I think this class is generic for any datasource. I will change the name of this class to avoid confusion.. ",
    "dinoocch": "Probably want to use subheadings. This explanation is confusing.\nMetric is number of missing segments that the broker queried for (expected to be on the server) but the server didn't have. This can be due to retention or stale routing table.. Consider format\n```\n* : \n* <Discription of Metric>\n* <Things to look for/what patterns might mean>\n\n. Probably good to give units as well where applicable (for example for consumption status, boolean might be confusing). Gaps in time for segment coverage, I think?. Hopefully we have some information somewhere about what ERROR state means? or how to find what caused the ERROR state (ie instance errors) -- it would be good to link to that here. Also consider ordering metrics by importance.. Consider wrapping long lines at 79 characters..suggestion\nIntroduction\n. configuring...?. Consider standardizing formats, perhaps\n* key - description\n  * Allowed values\n```. * Allowed values or examples as applicable. I don't know if this is actually a setting anymore?. Describe each of these values.. What does this do? Just a brief overview, unless there's a page being added initially for this?. Does this only affect realtime?. You also need all metrics(?) columns in no dictionary columns for this to work?. Maybe there should eventually be a page for this feature. Is this defaulted? Can we remove this?. Remove li specifics?. Consider including recommended values where it makes sense? Could go either way on this though.... two -> two main\ntagOverrideConfig is here as well. Consider rewording.\nSome of this seems unnecessary? There should probably be a section long before this discussing the data model of offline and realtime tables.. ",
    "jgutmann": "configuring the list of items below it . I will add one sentence, but beyond that is beyond the intention for this page. . "
}