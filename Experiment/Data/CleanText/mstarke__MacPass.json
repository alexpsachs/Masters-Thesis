{
    "mstarke": "Whooo. First contribution. Ever. =)\nThanks for the work. I'm sorry if the code isn't as straightforward. There are a lot of design decision that made the project easy but might bite me back (e.g. no multiple document handling). Since the tool is rather useless without a password generator, I did start out to work on this but it's all non-functional drafts. You contribution pushes me a bit to get cracking again. Sadly, Currently I'm filled with work related projects so the progress is embarrassingly slow.\n. Hi Dom,\nas you might see when compiling the project, there are a lot of things just barely working. Opening works, the rest is more or less fragile stuff. I'm having a conversation with the developer of Kypass Companian about his licensing model, that's why I commented on his blog.\nAnyway, that's another topic. Feel free to offer any suggestion for features, improvements, and file issues. And boy there are tons of issues. One of the biggest open tasks is a decent password generator.\nRight now I'm in the middle of trying to figure out how to enable a smoother editing experience. The problem with the keepass strucure is that you got folders and entries separated. And both have an extensive list of features. The inspector approach was my first guess, but I'm thinking about using a different method (think of popups like Calendar.app) but that's just in my head.\nTo make a long answer short. File issues, suggest features, I'm always able to ignore them in the end :)\nBut help (in any form) is highly appreciated. \nIf you want to contribute code, we might have a chat first about the architecture - or lack the of. The development process currently is heavy XP-programming style :)\nMichael\n. Reopen due to wrong issue\n. I'm no active IRC user as everybody I talk to uses some kind of instant messenger. And I'm unfamiliar with the whole process involved in creating and keeping a channel. Feel free to register one and fill me in about the details.\n. It does, and I can tell you why. I've seen his screenshots and did like the quality-bar and the idea of using rounded input fields. I had similar plans but was a bit hesitant to use a lot of custom drawing. OS X Ui customization is a lot more cumbersome than I thought.\nThere are some nice ideas. I especially like the the favorites bar. I did think of something similar, but that would lead to a special group in the KeePass container and would add additional logic, so I passed on that.\nAnd the first goal is to get the tool feature complete in terms of KeePass compatibility. Especially the KeePass1 DB Support is somewhat flacky right now, as I did not but that much effort into it.\nThe tree-view is also a common pitfall. Everybody wants to just have a nice finder sidebar but it doesn't work so easily.\nLooking forward to see you on IRC.\n. Fixed in cc49c717c98ffc9a417a324ad8120cf6d0cc9f5b\n. A big draw back to this solution is that if everything is handled by the document the current bindings for the editor get brocken and then there is a need for custom glue-code.\n. Move/Delete/Add operations should be possible though.\n. It's there and works. It's not fancy, but does the job.\n. Should work for all the actions that are there.\n. I did redesign some of them already and wanted to use a simple s/w theme to enable easy tempting, scalability and retina-readyness. You can take a look at the .AI file\nMy plan was to go on with this style. But these lack a lot of detail and color. So it might be feasible to redo all of them in a \"nicer\" fashion.\nConsidering your though on modernization, I did try to incorporate that already. I tried to lean more on the meaning than on the actuall icon, although this might shake up some of the organization. Another thought is to use auto generated folder composites instead of separate icons for groups. (But since you can assign any icon to a group, this might be a bit of a hassle to figure out when to do what.)\nAnother thing I'm currently at is the support for custom icons. So when those are used, there's another badge of possible problems with the look =)\nBut since I just dug into refactoring/rewrinting the KeePassLib I guess I'm a bit short on the creative front. What's a bit more pressing is the Application icon itself. If you have some thoughts, feel free to share them in #11\n. Might be worth a shot but my goal was to mimic the looks of the old ones since you should't have to replace the icons because they look different on each platform. Another problem that will arise is the use of custom icons. As far as I know, they are stored as tiny 16x16 versions which is rather ugly if you want to blow them up as I currently do it. I did consider font-awesome, will reconsider it :)\n. There will be a lot of direct equivalents, but the icon set used (a subset of nuvola) is rather special in some regards. As I said, it's worth to be reconsidered given that the icons are rather nicely looking.\n. Done for now since the merge of @JoannaOlsen pull request\n. I'm a bit skeptical when it comes to those icons. To me the lock isn't the right metaphor. I like the way \"Lastpass\" uses the Password stars as a hint, and did try to use the OS X like dotted input filed as a concept.\nBut in the end, your suggestion to use recognizable icons, that people are familiar with is a valid point. And since the MiniKeePass icon did change for the better recently, it's certainly an option.\nI guess it's the designer in me trying to rebel and wanting to shine with a new nice icon :)\n. Closed due to #32 being closed\n. The Format selection is disabled and the saved format is the one the initial DB was. So no KDB->KDBX or vice versa. In the upcoming library change this will be possible\n. Thank you for the nice words. As you might see, the project is in super early stages. I want to get to get more features included, like Note, Attachments, Bianry inclusion and polish the whole experince until I'm starting with implementing any additinal functionality.\nBut I'll take a look and might incorporate this. Seems like a nice feature.\n. Well then, I guess it's a feature that needs to be placed on the mandatory list :)\n. The whole point of MacPass is to be native. So the plan is to implement a KeePassHttp compatible interface in MacPass so all browser plugins can talk to MacPass just like they would with KeePassHttp. But it's still a long way till this feature will see the light of the day, as AutoType needs to be addressed first (after some other stuff on the long ToDo list)\n. This Feature is not implemented\n. Take a look at the Status page at tje wiki to see what is working, and what isn't :)\n. @EntropyWorks You're right, the feature is currently not supported. KyPass Companions only real benefit is the KeePassHttp interface as far as I can see. It's missing some crucial features and did have a rather alarming bug in it's 1.0 release and all the betas till then (you could request all passwords as clear text if you knew the ip of the computer in the network that did run KyPass Companion - no password, no encryption) other than that, it seems to work for a lot of people so feel free to keep using it. KeepassHttp support is currently lower ranked than Autotype on my internal list.\n. As much as I appreciate it. There's so much stuff not working that is \"simple Keepass\" functionality. I want to get the \"core\" features in there before I start tackling some of the plugins. Anwer would be: sadly no ;). If you want to contribute the code, that would certainly make it move up my list ;)\n. The basic idea is already in place but nothing in particular. If you take a look at the KeePassHttp Group in the project you'll find the classes I did outline. The responsibilities are more or less self explanatory. The responses are separated into classes and there's a query service to handle the document we're searching in. But nothing in detail is set in stone. Feel free to take a run at it. Considerations should be made when altering the database since the data model is undo/redo aware. I'd be glad if you come up with a working solution.\n. Looking forward to any contributions. Feel free to get in touch for decisions as the architecture isn't really fleshed out at the moment.\n. The separate application is something I was considering for multiple reasons as well. This might be useful for Autotype. For the communication Cococa XPC should work, I've started adopting NSSecureCoding since it's necessary for XPC as far as I'm informed. My Idea was to offer a communication interface for any application to just query entries, etc. or request for unlocking of the DB though I'm not familiar how to ensure security in this manner, as in only the MacPassHelper is allowed to access data form MacPass. I'm looking forward to your process =)\n. it would be awesome if you can post your progress in your fork as a new branch so we can talk about the actual codebase.\n. Looking forward to it :)\n. I just did a quick scan of you code. Some notes one code style: All message names should start in lower case, wether it's a class or a an instance message\nThe other thing is you reimplemented encryption. I used commondCrypo NSData category, I wanted to extract some of those basic things into a own repo so it's reusable. We might do that so you can easily tap into it as well. Or we just need to refactor it at the end to not duplicate code.\n. I did run through some of you commits and commented where I though it's appropriate. Do not take this as \"You did it all wrong, here's how to do it\" but rather as advice. Also take a look at Adopting modern Objective-C\n. Also this might come in handy objective-c-conventions\n. Excellent (imagine it the Burns way ;) I did not find that much time recently to work on MacPass but I hope we can integrate your solution to make it work.\n. @XBigTK13X what stuff do you use that is 10.9 only? I was (and am) hesitant to upgrade until its necessary. But on the other hand. Why not. Might be useful since then I can incorporate some refactorings as well. 10.9 introduced Base64 handling so the custom code can go away.\nI'd really like to get an overall opinion on this. But I have no clue how to put up a poll to ask if all the users are fine with going to 10.9 only.\n. The thing is not how and where to host or run the survey but how to announce it properly so that all users are at least able to participate\n. @XBigTK13X do you have any thought on how you want to handle undo/redo with the action KeePassHTTP initiates? If you just go the \"normal\" way of creating entries via the help of MPDocument the actions will get registered and are undoable, which might not be the best option for some users. On the other hand, you can easily mark those action as \"Undo/Redo KeePassHTTP [Action]\" to show the user what he does (at least if he opens the menu)\n. @XBigTK13X also if you find stuff that needs refactoring (wich I guess is a lot) feel free to dig in. I'd be glad if the interfaces get cleaner if possible.\n. What would I do without @jamesrhurst. I should make you the maintainer of the project ;).\nI did check out your implementation and again I stumbled upon a fundamental problem we have. The document is undo/redo aware so all the things you do can be \"undone\" by the user. This is sort of awkward and I think there has to be a method to \"disable\" undoing while something is added via KeePassHTTP (or any other extern source). For now it works as long as you do not hit \u2318+Z all the time. Have you tested what happens if you try to undo some things and then run some actions by KeePassHTTP again?\nI'm currently in the process of ripping the whole edit/history/undo/redo stuff apart and this might solve some of the issues at hand, but granted I'm sucking at being fast so this takes a bit.\n. The auto type stuff is not finished. Editing the window associations does not work :-/\n. FYI take a look at the discussion in the KeePassHttp pull request #247. I think everything you need to answer your questions is there :)\n. I wasn't trying to sound harsh. But with KeepassHTTP it's a bit of a fuzz. Understandably, since it's one of the more vital parts for a nice work flow, so forgive my directness and occasional snappy comments.\nIf you're feeling like it, perhaps add some more to the documentation in the Wiki. Seems to me that this part is lacking in particular.\n. See MacPassHTTP\n. There seems to be an issue with the plugin. It doesn't supply matches it just authorizes access. I need to investigate what I broke. Sorry for the hype :-(\n. Fixed. Had to fix some other threading issues but the plugin works - not all settings and features but it's usable.\n. Did you check \"load insecure plugins\"?\nIf so, check Console.app and look for output from MacPass\n. Very strange.\nTry to archive MacPassHTTP and then move it to MacPass in Application Support manually\n. Archive via Xcode i mean.\n. Functionality is added in d7f82bf88f5121b826fa666855971bbb261b0d43\n. Disabled. Will be fixed in 0.4\n. Fixed in 9c69bd652899c41677c9cbae76b09974996f76fb\n. I'm unfamiliar with the concept. Is it common for KeePass clients to write a .lock file if the File is open? Or does the OS use these .lock files? If so, I'm unfamiliar with how OS  X does use this file. Or are you talking about a cross platform environment, where other clients beside MacPass have access to the file?\n. Disabled as it was buggy. \n. Nope. But since I'm in the process of implementing a different editing method the read-only file structure can be included and I did think about adding a proper lock file handling, too. But do not wait on it ;). \n. Some time ago I did find the bits an pieces of code already laid out and wanted to implement this. To get it right, I looked how Keepass works and to my surprise the lock file stuff is marked ad \"not so good\" and actually - if I understand it correctly - intended for remote file locations, like FTP servers or some sorts. Keepass should be able to handle file changes behind the scenes with it's synchronisation feature but I need to take a closer look. Currently my time is rather limited and not so much can be devoted to MacPass, which I'm truly sorry for. Anyway. The magic word here is Synchronisation. If this is working (which it isn't) there should be a solution for databases edited via multiple sources at the same time, as long as the app is able to be notified about file changes.\nMacPass currently is so simple minded that it even doesn't recognises any changes to the file while the database is open. There's still plenty of work to be done in that area.\n. MacPass continuous build now supports synchronisation of files so no lock file-handling should be necessary. Clients that do not support synch might run into problems since MacPass does not announce a file is open by writing a .lock file alongside. I'll leave this open for further discussion for now.. I never used the 1.x versions of KeePass(X) so I'm unfamiliar with those concepts. But I did a quick look and it seems the concept is somewhat similar.\nKeePass 1 uses the Backup to store changed Entries and Deleted Entries/Groups\nKeePass 2 offers a History on entries, so this covers the moving of changed Entries. Deleted Nodes get put into the RecycleBin-Group if the database settings say, RecycleBin should be used. The recycle bin group is handled in a special way, as it's not delete able and can be cleaned by a separate command.\n. Functionality is in place. But the feature to only delete some entries is missing. Currently the trash can only be delted completely not selectively\n. Simple setup works\n. File -> Change Master Password -> \"Generate Keyfile\"\n\n. This might be a free-bee since 10.13 supports auto layout row heights.. Automatic row height is enabled in 10.13. There are no plans to back-port this to lower os versions. Disabled in 10.13 again since the table view did not render the fields if they were not visible or only after the window was resized. Needs to be investigated. Windows and Columns should be saved in bfc610a25e7a626f8141076ddf657c0ca5189107 version 0.3.3-alpha\n. Actually it does remember the colum sizes (The Table Columns), but not the Splitter sizes of Oultine, entry and inspectorview. Another thing is I do not save if the inspector is visible or not, so this is alos an issue.\nThanks for the reply, it'll be fixed.\n. With version 0.3.4-alpha the restoration now works reliably for me. You might want to give it a try.\n. NSDocument based applications allow for reopening the last file. This is done already on quitting without closing. So all open documents are reopened. If the document is closed before quit, it's not reopened.\nThis might be customizable by using a setting \"reopen last db if not already open\"\n. Feature added in bfc610a25e7a626f8141076ddf657c0ca5189107\nPrefences has a setting to en/disable this behavior\n. The feature is re-open the last database.\nYou're referring to two more things:\n1. remember, if a database has a password or not\n1. remember, if a database has a key file and if so, what file it was.\nFeature 1 is not implemented and I would not encourage it since it's a security compromise.\nFeature 2 is implemented, you need to check Remember Keyfile for Databases in the General Preferences.\n. The idea is nice, but there are some things that need to be considered. Belive me, the tree is a pain in my eyes too, but let me explain:\nThe title might be the database name, the file is always visible in the title of the window, so this would make it redundant.\nThe Groups in the outline view are unelectable in OS X so breaking with this convention is no option from my point of view. But since KeePass allows entries in the root group, you need to be able to click on that - and drag, etc.\n. The Finder sidebar is a flat list with single groups. The KeePass Database is a tree. So I see no way of easily displaying a flat Finder-like sidebar. To do this, one would have to flatten the tree for display which seems a bit odd.\nBut I'm open for solutions. \n. 0.3-alpha and onwards show the Database name. But there's currently no fallback, if the name is empty.\n. This is a duplicate of #11\n. I'll add the files in the evening\nThe License of the software is GPL i would want to apply that to your graphics. So you might consider putting it under a different one. I'm taking a look into the problem and post any suggestions.\n. The metaphor padlock for encryption is a good one. But with KeePass it's not about encrypting things rather than having a collection of keys (stored securly nonetheless). The OS X keychain uses the exact metaphor of what KeePass is - a bunch if keys. But this one is taken already. I've thought about this many times. The only real alternative that popped into my mind was to use a more direct approach and visualize the destination of those stored passwords which mostly is a password input field. But a simple input field laks a bit of punch for a nice icon. \n. As this icon is used, I'm going to close the issue. If we find another idea, we can create an \"Update Icon\" ... man that sound's nice! \n. Feature is missing as I changes the inpud fields to be real NSSecureTextFieldCells. The button has never worked. I'm trying to improve on this as soon as possible as it makes the whole tool quite cumbersome and error prone. Sorry for that.\n. Setting to unhide/hide all password is in the database but isn't respected yet. The interface is there but the functionality is missing. So your \"big button\" is there in the shape of a \"small checkbox\" :)\nEdit > Document Settings > Display > List of Checkboxes\n. Well those things come with the file format. I do not want to introduce some magic in MacPass. KeePass uses it that way so I'd rather stick with it. And yes. Database is a better name, I think I'm mixing this up a bit too often.\n. version 0.3.1-alpha has a toggle on the password inputs. The table view still displays only bullets or nothing.\n. The notes are a special spot. I thought about putting them on the first tab but then they would be very small. Another option would be to make the views scrollable but that doesn't put them on a easily viewable spot.\nA dynamic solution might be nice, but currently I do not see exactly how this would work out nicely :(\n. Another Idea might be to use a disclosure view to enable the notes view on a user basis. So if you want to see them all the time, they are shown, others can hide them if they want to. But as I said, some of the GUI decisions are hard ones and I'm not fully satisfied with all of them for now :(\n. Just to clarify the decision for the term inspector. It's a common name for the tool-pallet in OS X applications. iWork does that way, XCode uses the term for a comparable set of items. And if you use the Finder, you can open an Inspector to inspect files ;)\n. Three pane view is in 0.3.8-alpha. Just a little step, but at least one :)\n. Notes now has a separate splitter in the inspector 1f75722e67ee55734d9fc55b40337d5e91cd0ef8\n. Save dialog now shows a warning.\n. This is now obsolete, as saving without a password is not an option anymore.\n. Can be cleared both in input and settings\n. Seems to work locally, should be able to be used in 0.4 release\n. done.\n. Files are now read in raw data rather than encoded strings.\n. Moved to KeePassLib project\n. KeePassX in it's current alpha form is open source and can open DBv1 and v2 and also write DBv2 so you might get another alternative. From what I see the code get's maintained quite regularly. Just the builts are missing, which should be not the biggest hurdle.\nAnd yes, I do indeed plan on \"finishing\" it. There are many things to improve on the database handling though. Security concerns are also an issue, as currently there is no method like in KeePass on Windows to protect in-memory passwords.\nThanks for the kind words\nMichael\n. Not possible. Currently the pasteboard only get's cleared if MacPass knows it did put something in it.\n. Pasteboard support is implemented in KeePassKit\n. Duplication via Drag and Drop is currently working. There only needs to be a new action to make this accessible via different menus.\n. Duplicate of Clone-Action. Since simple clone for entries is there I guess I can close this. Explicitly cloning groups seems a bit off for me after thinking about it, so for now, no group duplication/cloning.\n. KeePass removes Binaries right after a delete. Currently a delete in MacPass is undoable. If the Trash is enabled, it's just a move. The \"Emptry Trash\" option though removes the entries for good. It's possibly better to make a delete not undoable.\n. Binaries on KDB1 entries are removed and stored correctly.\n. This issue is obsolete since the current implementation of the history support allows for \"instant editing\"\n. This is requires something like #48 . Re-opening since experience has shown that edit mode is better to prevent accidental edits.. It's there in the table view. The editor-behaviour is still a big not-done-has-to-be-thought-through sing over it. Meaning - you can double click on the column to copy the content\n. This might be usefull for the history view but is unnecessary for the rest of the UI since it's always possible to edit a field.. fixed with 0.3.5-alpha 8d34f77a1f8f674fb4f77de02591636391a8ca86\n. Hello emilecantin,\nI'm using type safe enums and options and am rather fond of the auto-layout aware NSSplitView as this enabled me to remove the clumsy delegate to calculate all the splitter and view updates. I'm not sure, but my guess is 10.7 does not use the auto-layouted splitter which might lead to some strange behavior. Other than I'm not relying on anything 10.8 only, but that's just form the top of my head.\nCurrently my main goal is to rewrite the KeePassLib to remove the strict separation of kdb and kdbx files. This takes quite some time and slows the process on MacPass' GUI an features quite a bit but when it's done, I'm able to handle the whole GUI a bit better. I still have no plans to back port to 10.7 by myself but happily will apply any patches to support this platform.\n. As this ticket is open, it's not implemented ;). It's working but I did not add any warnings or other import features.\n. With \"it's working\" I mean the code is there but not used in the release\n. The master can import XML but the last binary build (0.6.2) isn't able to.. Thanks to you both for the effort you pour into this. The current master of MacPass can import KeePass XML files so you should be able to use your script to import them without any extra tools. KyPass AFAIK offers a CVS importer so this might be a viable option for a plugin to allow for differnt format imports. XML Import works but overrides the current file and is not the best way. The best solution would be:\n\nRemove Import XML\nAdd XML as a file format for merging databases\nAdd XML as a file format for opening a new file. Tags are displayed, editing is broken for now\n. Edit working since 24274f472cd5956f198cffed9b3a83148ac1d389\n. I've came up with a changed version that doesn't require a double click in 3cf3e2515679cbd7d41f2f43c75dc2911befeb8d but I've encountered that you do not need a double click but instead could keep the mouse button pressed down and the menu will get activated as well.\n\nThis is however not necessary anymore since the choose dialog pops up just after you press \"Choose\" or use the space bar to pop up the menu.. fixed in efa727eaba06795bfe377b90f7384326b57c1f6d\n. Fixed in 0.3.7-alpha\n. Sadly I'm unable to reproduce this on my end. Can you point out the exact stepst to reproduce?\nAnd if the app crashes, can you send me the crash report?\n. That's a nice one =) On it.\n. The bug is fixed for now but the current solution isn't the nicest.\n. Two things to consider.\n1. The Data Model should try to reuse Binary data when writing the file. On runtime, just add binaries without further test.\n2. If a Binary is added to an entry, it might be nice to test the hash, so the user can be informed, that he already has added the file. This is the first enhancement that doesnt involve hashing thouhgout the data and just make them unqie at each entry. The method mentioned int 1. to ensure not double-added data takes care of the rest on write-out.\nNoted.\n. The behaviour of re-adding multipe same binaries was causing bugs to be generated on other KeePass clients since Keepass does not allow for a binary to be added twice. A binary can be added with the same data but the key has to different all the time. This is fixed in https://github.com/MacPass/KeePassKit/commit/c17e540f673d52e70021c4f6bdb9e81dce448572 and published in KeePassKit 1.12. MacPass 0.7.4 will include this change.. For now, nothing is stored securely in memory, so this feature is an easy task. I did think however about adding the \"protect in memory\" feature as keepass does it. Then those fields should better be non-searchabl\nAnother thing might be a usage counter :)\nSort of Statistiks:\n- Top Most reused Passwords\n- Weakest/Stronges (But that requires the quality estimation algorithm)\n. Like the open-dialog box Keepass shows?\n. Fixed in master\n. Actually there should be an option to select what column to display.\nKeepass also has the ability to display custom fields in the table so this might be another nice feature\nSurely editable columns and column order is a must.\n. It's not cleared but selected. Seems more reasonable\n. This is done in a slightly differnt way considering\nSee #369 #414 #603 #707 #749 for further discussions. Nice workflow addition. Thinking about this made me realize there should be a \"entry actions\" settings\nThe current solution sort of hides the the two ways of usag. Actually the whole double-click copy thing is a hidden feature so this needs to be addressed in a way. For now your way is fine and added.\nThanks for the contribution.\n. This is related to #7\nThe Problem with using Cmd+C is that this disables a lot of defaults like Cmd+C in Textfields. I'm unaware of a simple solution to fix this other thatn using a differen keyboard shortcut. The ones used can easily be modified to your desire by the Keyboard Shortcut settings in OS X.\nAnd I know it's personal taste, but I've got no problem pressing Ctrl+Cmd+C or Alt+Cmd+C on my MBPr \n. Yup. Silly. Think so too. Need's to be fixed!\n. Is extracted in master. Some minor hickups in the settings tabs still exist\n. Feature is not implemented yet.\n. Well, be aware that it's alpha software. You cannot move entries and groups for example :)\nBut I'm working on getting that done.\nThanks for the kind words!\n. It's a valid request. For Keepass there is keepasshttps which has an extension for chrome and firefox. I did think about adding this at first, since I've not got the time to do the safari extension by myself. If you'd like to contribute one, please feel free to do so. I'm open for suggestions and help.\nAnother thing is - Keepass supports autotype that is, it can send text to other windows and it matches those windows against the database entries. This way it can fill forms in websites. The system is rather felxible but you need to do a bit of handywork for some edgecases. My first goal is to get autotype working on OS X an we'll see how that goes.\n. I did ponder on this a while and thing, the browser integration might be of higher value than the global AutoType (which is more or less a universal way of trying to work without custom plugins).\nSince my time is limited and not being the biggest in the field of extension development the easy way for me might be to go for KeePassHTTP support first. When the feedback is too bad, there might be a reason to create custom extensions but this means loads of more work.\n. Mh. Now what? :). Maybe I should just implement everything as it seems both features have their valid use cases.\n. @gstammw take a look at #172 for a remark regarding donations. Since you're not the first to ask I might put a note in the Readme.\n. Drag'n Drop is disabled for now. Will be there in upcomming 0.4 realease. You have currently no way of doing what you want to do. Sorry.\n. Current master branch contains customizable columns. Will add modified and created columns as well. Though about that today too :)\n. Keepass stores this information inside the file, MacPass just isn't using it ATM. Will be included in 0.4.\n. feature working for kdbx files in 899c65d8fdef9df8640864914f9500e75c5de865\n. This is something I did think about for a sometime but since Keepass chose to stick to only entries inside the group I went with it and do the same. Currently I'm not planning to change the way entries are displayed, as this would force to severely change some GUI handling.\n. Seems reasonable =)\n. The synchronisation features needs support for history management. KeePassKit is able to read and write the history elements for a given entry, but editing with MacPass just skips history element creation (since the undo-redo-system makes this rather hard). So the first thing one should do is to come up with a way to enable history-aware editing of entries. There's some rough ideas outlines (editing button, start/end editing in the EntryInspectorViewController but nothing is finished) we can talk in the IRC channel if you want any specifics or just email me.\n. See https://github.com/MacPass/KeePassKit/projects/2. This features should be implemented the same way Keepass does it, that is, it uses modification, access, moved dates, deleted objects and entry history elements. The XML format is simply the inner unencrypted XML file KDBX files consist of. The upcoming KDBX4 format will have some modifications to this but the XML format for import/export still holds all information available. The feature should work on the internal structure to get the best user experience and is very helpful to ease the \"reload after external changes\" workflow. An external XML based process should actual do exactly the same but has the disadvantage of being external.. Current continuous release has sync on file change as well via a Merge action.. The differences view is AFAIK not present in any KeePass application since the merge algorithm is designed to preserve data. Furthermore the rationale behind this is, that most of the time you are the one introducing changes by merging two a databases you use. That said, I get your desire to see differences. It's easily possible to add the view but adding an option to reject the changes is a tad more complicated. Also, consider the extreme where your database is shared and edited by many users constantly. You then would get a \"Merge review\" screen a lot and I would wager that this completely defeats the purpose. What might be a viable alternative is a transcript of database actions. This way you can review the data level changes in a compact linear form but lack the possibility to interact with the merge process. . 0.7 officially introduces merging so this feature is implemented. What should be considered is a \"dry merge\" approach to view and even reject changes.. Separate issue for merge-view #701 . This is fixed in the current keepasskit branch. Will be with the upcomming 0.4 release. See \nhttps://github.com/mstarke/KeePassKit/commit/8c6e30a322a0420946447932fba29c3f1f37e334\n. Keychain stores only on secure dataset. If you use logins, only the password is encrypted. Secure notes are fully encrypted. The problem is to map from stored entries in keychain to entries in the KDB or KDBX file. Another problem would be how to track deletion, etc.\nAt first it seems a nice feature, but on second thought it's rather unpractical. Maybe just a simple one-way import or export?\n. The security of the keychain API would be compromised if any application could just intercept communications. The only real way is to allow MacPass access to all Keychain items and then let it do it's synching and that's a very sensitive spot. What I meant with deletion/adding is how to determine if an entry was deleted in MacPass and needs to be removed from the Keychain. Keepass stores a list of ids for deleted entries to enable such conflict resolving but Keychain hasn't any history management as far as I know.\n. Nice catch\n. I was wondering when the first one comes up with this. As I'm digging into the internals I've sadly left a lot of UI stuff untouched and more so unfinished or simply wrong. Your suggest to increate the white-space is the solutions I was thinking of too and might add this. If you pull the master feel free to update the xibs and send a pull request as I'm currently not doing any work on them (or at least not tha much that I cannot cope with the conflicts that might arise)\nSo feel free to give it a shot.\nAnd thank's for the nice words. I'm talking about this for more than a month now but I hope I can get 0.4 out of the door in the not so far future as it's got some nice new features and get's nearer to being a usable application not just a nice toy ;)\n. I changed the 6 to standard 8 again, It seems better fitting. I did add the same spacing to the group view as well. Might need more tweaking =)\n. Arg. Fixed. Sorry. I'm standing a bit beside myself. And jup, you're right. Non-pushed local commit\n. I take a look into it. There seems to be a OTP plugin for KeePass so this feature might actually be relevant. For now  not on the high-prio list.\n. @KFDCompiled nice of you to start on this. But just a warning: I've already moved on with KeePassKit (current master is ahead of the one used in MacPass, as you'll probably already have found out) to be able to create it as a Framework and to implement undo/redo with history support. I'm on a good path but it will take a bit more time as I've got limited free time atm. Another thing is, that I wanted to start adding a plugin interface to decouple the features from KeePassKit and MacPass. Should we try to use your approach to flesh out a plugin interface? As I understand it you need UI and KeePassKit extensions so there needs to be two sets of plugins - for KeePassKit and for MacPass.\n. @KFDCompiled i think there should be plugins both for MacPass as well as for KeePassKit, as there needs to be support on the data side but also on the GUI front end. That arises the problem of dependencies on plugins. e.g if we need additional inputs on the password screen that's a MacPass plugin but the KeePassKit has to handle the data provided by the additional inputs. Maybe I should just scrap the separation of KeePassKit and integrate it into MacPass but that removes the possibility for others to use the framework just to be able to parse stuff.\n. It's not that easy as MacPass might need more support for UI extensions. The Plugin system currently is \"just load code and show some settings\" more support is needed but that requires more details on the requirement for specific plugins\n. It's generous of you to offer a key but the lack of hardware isn't an issue. It's lack of time. I'm more than happy to merge pull requests but for now I'm still struggling getting to implement all the basic features e.g. history or synchronization. \n. KeePass is about to introduce a new format (KDBX 4) this has lead me to revisit KeePassKit and modularize it more. With this in mind I should be able to extend the plugin system further for this feature. That doesn't mean implementing it but it's a step \ud83d\ude09. \n. Never give up hope! This issue seems to be misleading. The last comments are about (T/HMAC)OTP support fore entries, the actual issue is about using YubiKey as a means of locking the database. HMAC/TOTP support is nearly done but I haven't had any spare time over the holidays to finish this. Yubikey support is still far out since modularised key provider are possible but not really worked out in KeePassKit\nAnd I stated this on other TOPT related topics as well. You should not store TOTP/HMACOTP keys as well as other credentials in the same database as this defeats the whole purpose of two factor authentication. . Autotype is not available at the moment. It's a planned feature for 0.5 or later. \n. The current master build has auto type working in a basic fashion. Though there are still lots of features missing. Basic password input e.g. for websites works\n. There's a lengthy discussion here #279. In 0.5.1 window associations aren't usable. They'll work on master though. So it'll work in 0.5.2. Additionally MacPass now shows a UI popup when auto type returns to show the user if it did find a match or hasn't found any entries.\n. Easiest way is to do not sign at all. At least that's how it should work. Just disable the setting in the project file by setting the \"Code Signing Identiy\" setting to \"Don't Code Sign\" and it should work for you too.\n\n. If you build via the command line, code signing can also be disabled there:\nxcodebuild -scheme MacPass -target MacPass -configuration Release CODE_SIGNING_REQUIRED=NO. Mh. I cannot reproduce this behavior on the master nor the 0.3.8 binary. Can you tell me on which version you're on? master (hash) or some old binary release. Old binaries aren't using the KeePassKit just the master. 0.4 will be the first release with KeePassKit instead of the old KeePassLib data layer.\n\n. Nice catch :). The Modified textfield has a formatter, that was reused in the table view view-queue and then turned up in other columns beside the modified column.\n. Duplicate of #14\n. Possible of course, priority is rather low.\n. KeePassKit now supports TwoFish. The next release of MacPass will include support for this cipher.\n. The second page needs extra maintenance. Do not ask me why what made me create in in the first place. I did change the links on the top to map to the releases section. Hopfully this will prevent any more lost souls in the search for binaries.\nI did not but any announcements out there since the binaries are quite old and I'm not done yet with the 0.4 release.\n. It's working for the general tab for now, the rest ist still not done (not tested by myself, might actually work right now.)\n. Don't sweat it. Especially the custom fields view is not the way it should be. But feel free to poke around ;)\n. The Http server ist integrated and can be used, you just need to implement the whole KeePassHTTP protocol ;). A small idea on how to process the whole thing is there, but it's nothing I did spent a lot of work on. Since a few days ago, I took up work on Autotype again, since this might also fix a lot of integration issues because you do not need any separate plugins. I think the current master branch also allows you to drop a URL and it creates an entry, but nothing fancy to ease the \"create new login\" process other plugins support. So see #14 for further info.\n. Tab order in entry/group inspector works with the exception of custom fields as the table-view does not tab-out after the last entry is selected. This should be a separate issue. You can mount most of those files via external tools as file systems. On free way is to use http://cyberduck.ch and mount the remote folder.\n. @kennymc-c Thank you for the comment on reloading. I never looked into but this not the intended behaviour.. This degrades security considerably hence I would rather not implement this in any shape or form.\n. There is no real benefit to use full screen. You just get a giant window. I do not have any plans on a special layout for fullscreen applications hence the feature is a rather small one in my point of view.\n. Done with merged #110\n. This should be considered when implementing Lock file handling #22\n. Current master notifies about changes.\n. Is this in the current master branch? There was is a related issue #93 that resulted in reused table cells still having the date formatter, that was fixed.\n. Ditch that, there is still a bug for #93\n. Duplicate of #53\n. Duplicate of #86\n. Did you test this? Or did you just enable the Settings in the DocumentWindow.xib? I'm asking since I did this myself and ran into some weird crashes when switching between spaces, entering and exiting fullscreen, etc. So I did not enable it. Another issue is, that the Toolbar Items do not get validated anymore when the window is in fullscreen mode, wich kind of sucks and is another reason I did not enable the fullscreen settings. Would love to hear your thoughts on this.\n. Toolbar icons do get validate. Mostly it's the lock button. All the other work most of the time. The delete button gets disabled sometimes. The problem is, that the validateToolbarItem is not called after switching. But if you did not run into any bugs, then this might actually be usable. Have encountered the issues with crashes in debug on 10.9 but maybe i did fix something in the meantime.\n. The validation is quite ugly. I wanted to refactor that to be more centralised as it is a bit too scattered around the place. If you come up with a nicer design, that makes this better maintainable I would be thrilled :)\n. Reasonable request and may I say so refreshingly simple to implement.\n. Fixed by merged #1 in HNHUi\n. What might be of a problem is that you do not call super for validateUserInterfaceItem in the Document. This should be done to ensure the default actions handled by the document (or document controller) get validated correctly. At least that's the way it used to be ;)\n. I was thinking the same, after having posted the comment. And thanks for the contribution. You're the first one to actually have to sift through my code a bit more (which I guess might not be fun all the time). \n. Sorry for the mix up, I need to get used to the workflow :(\n. Mh. I did find why this was so separated. The MPDocument is higher in the responder chain as say the window controller. Menu Items get validated at their target, hence not all items get validated in the document.\n. Another thing is, the actions on the Views work with selection and items under the mouse, which is not reflected in document.selectedItem. Hence the check wich _clickedOrSelectedItem. I did try to come up with a generalised way to deal with this, but I guess some of the stuff needs to be handled inside the corresponding view controller, but the most work can be handled by the document the way it is done for now.\nAnother way would be to let the application delegate implement all the actions and then let it figure out, where and what to do, but that didn't seem like a feasible option for me.\n. Tab navigation is something I did not invest any time into. I can however add key shortcuts to quickly enable entires, inspector or group outline views. In those you can navigate via keyboard commands\n. Something in the line of\nFocus Entries: \u2318+\u2325+E\nFocus Groups: \u2318+\u2325+G\nFocus Inspector: \u2318+\u2325+I\n. Duplicate of #68\n. Creating Entries is already bound to \u2318+\u2325+ E. It's only visible in the context menus on the outline and entry table view. I might add this to the global menu as well to make it more discoverable.\nAnd in OSX there is no real need for a shortcuts panel since you can edit, override or add them as you wish with the system settings:\n\n. Keyboard navigation now is there. Still improve able but it works for now.\n. There is, the default ist Cmd+Shift+E\n\nOn 14 Feb 2017, at 12:05, monkeydri notifications@github.com wrote:\nThere is no entry menu anymore to create an entity (\u2318+\u2325+E) so how to add it via OSX > System preferences > Keyboard > Shortcuts ?\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\nm i c h a e l   s t a r k e_ \n       gesch\u00e4ftsf\u00fchrer\n       HicknHack Software GmbH\n       www.hicknhack-software.com\nk o n t a k t_\n       +49 (170) 3686136\n       contact@hicknhack.com\nH i c k n H a c k   S o f t w a r e   G m b H_\n       gesch\u00e4ftsf\u00fchrer - maik lathan | andreas reischuck | michael starke\n       bayreuther stra\u00dfe 32\n       01187 dresden\n       amtsgericht dresden HRB 30351\n       sitz - dresden\n. There are some things that I have not looked into. Firstly, sorting doesn't seem to get saved correctly. Column sizes and order however do. If the sorting gets saved, I have no idea how to determine if it was restored or not to fall back to default sorting. But feel free to sink your teeth into it. I'm happy for any useful addition :).\nShort answer: I do agree. But saved sorting needs to be taken into account. If it's working already and I just haven't noticed, then even better.\n. Nice find. This explains a lot. You should be able to bind the sorting to the user defaults and then restoration should work. Before initiating the binding, just set the default sorting and then everything should work as expeted.\nIf you've only done iOS programming, take a look at Cocoa Bindings as MacPass makes heavy use of those. \n. This seems to be already fixed in master.\n. Merged. The strange behaviour for now is, if you got multiple DBs open, you change the sorting in all of them =). Might confuse people.\n. You got pretty much everything spot on :) - The only working thing is \"default Icon\" :D\n. They aren't useless by a long shot. Some tend to use the faviocns a lot, others use special custom icons. And I never intended to omit this feature. @kumters I do not plan to use coloured Icons as the current approach offers scalable icons without a huge effort. I might exchange them with coloured versions but those have to be made and there's no one ATM to do them. I'd like to make them but there are other more important things on the list. Another breaker is that custom icons seems to be scaled to 16x16px in keepass wich makes them rather ugly to look at on any mac with retina display or god forbid in the scaled inspector view :(.\n. The wonky part is fixed. Still there aren't all icons currently recreated for MacPass so I leave the issue open until all icons are added.\n. @JoannaOlsen thank you for the offer. I can give you a list of the missing icons. Regarding your proposal for color variations currently there's a problem with that. I use the icons as a template, so OSX renders them according to the state and surroundings. This creates the emboss, gradient and shadows for free. Templates can only be in grayscale so no colorisation is possible there. If coloured Icons should be possible the whole system needs to change to use them as non-templates. This would work as well but then we should switch to more detailed icons (at least that's what I would do, but it's not a must). When I started I liked the idea of monochromatic icons a lot but it seems people want a bit more color in their MacPass ;)\n. @JoannaOlsen I just added a folder \"Native Icons\" to the assets. The Icons are numbered. The art-board name in the .AI file represents those numbers so you can find the icons that are missing. As for the coloured versions - if you want to, you can have a go but keep in mind that currently I'm not supporting them. But if you create a complete (coloured) set I'm happy to switch to the new style of icons.\n. Nice! Thanks for sharing. My overall goal for the icons was to get the current metaphor still to work (talk about the save icon) but on the other hand try to get the \"look\" the same since no one, as pointed out by @DominusExult, really knows the meaning. Most of that gets clear only by knowing the name of the icon and that isn't exposed in the UI as far as I know. Anyway. My point being: I tried to be simplistic, remove any unnecessary perspective effects and get them to use the most space possible. The last part is rather hard, but should be considered. I tried to get them to have the same optical weight. The hammer or the wrench are good examples of light icons, disc, scanner, some of the documents for the heavier ones. I know it's impossible to make that work all the time, and my guess is you tried that too and came to the concluding this being the best way to do it. For me it resulted in the size for some of the icons being rather big. I had a hard time deciding whether to use perspective at all but scanner, hard disc and some more are very hard to to get to look plausible in only 2d and grayscale. The job you've done so far @JoannaOlsen is great. What strikes me as a bit off are:\nThe open folder icon - it looks awkward. I did start out on that too, so is this my version (if so, I know why I did not use it :) ) And what's particularly bad is the 3d-item on 2d folder stuff. We should try to find better metaphors for those (or better ways to show the current ones) at least that's my take. Another thing I would dial bag is using \"tilted\" stuff. Like the mail-folder. For those it's - IMHO - better to go for a complete different look, i.e. for the mailboxes something that does resemble the inbox icons on Apple Mail (as I really get those, and they are boxes in the true folder sense ;) )\nThe picture icon and the open box seem off. The box for being perspective in a completely different manner (I changed all iso-perspektive to either full front 2d or the central perspective used of the disc and scanner) and skyline? in the picture might not be the best scene. We could go for a scene that works better in 2d. On the other hand, I did recognize the skyline - so it might be just the right motive :)\nThe Dollar sign screams to be replaced by a bill or a stack of coins, but that might be too bold, the W for (is it wikipedia) might work better by trying to to get there puzzle-logo down, but doing that in 16x16 might prove impossible. On the other hand, someone might have used it just for being a \"W\" so getting rid of that is problematic too.\nIt's always hard to get the right level of detail. I did struggle a lot there too, removed element, the added them back. You did add the button to the camera again, that's something nice, it helps identify the icon better and also adds a bit more to the shape to make it more interesting.\nWhat also might have put you off is my system. I used some of the icons just for UI elements and made them with that in mind (the (i) for the inspector is such an example I guess) so you might have gotten the wrong idea for some, but that's my bad for not properly maintaining a decent structure in the file.\nAnyway. Just wanted to add my thoughts and thank you. I like what you did to the disc :) Simple but effective. The battery is unfinished on my part, if you come up with something better, feel free to change the icon.\n. Didn't that \"keep it compatible till the end\" mantra make Windows so bad? Kidding aside, you're making valid points and as longs a Keepass uses those icons, MacPass shoudl too. Regarding the Icons set, The password (key) icon is there: https://github.com/mstarke/MacPass/blob/master/MacPass/Icons/00_PasswordTemplate.pdf don't know why it's missing in @JoannaOlsen s preview. Or I might have corrupted the .ai file even more than I thought ;)\n. @JoannaOlsen can you fork the repository and commit your progress? Would be nice. And then just issue a pull request.\n. @JoannaOlsen we surely did not want to overwhelm you :) so sorry if that was the case. And take your time to recuperate. You're the one contribution, so I'm more than greatfull for that alone.\n. Given the issue with not all Icons being fully supported, the ones that are supported are working. Undo/Redo works as well so I would consider this issue to be resolved.\n. Is present in master\n. That was an ugly bug. Don't know how it did get into the code :(. KeePassX now opens the DB with no problems, didn't test with KeePass for windows. You might try wight the fix.\n. Saving of new Files should work. At least I did not encounter any problems. There was a bug that prevented the password and key file being set a new file, this is fixed as well\n. Thanks for the tip. I'm sorting through this right now. Seems to be a strange bug. Got to get KeePass running and need to debug the C# code to finde the answer. KeePassX and \u2013 as you've said \u2013 MacPass both can read the file without any hiccups. Even KeePass in repair mode reads it\u2026\n. Boy that was a nasty one. KeePass seems to really freak out if a Binary ref doesn't use compacted nodes.\nNot working:\nxml\n<Binary>\n  <Key>File.txt</Key>\n  <Value Ref=\"0\"></Value>\n</Binary>\nWorking:\nxml\n<Binary>\n  <Key>File.txt</Key>\n  <Value Ref=\"0\" />\n</Binary>\n. I can change a file, save it an the file gets modified. If I load it up, all changes are in the file. I cannot reproduce your described behaviour. What did you change before you did Save (Either via menu or Cmd+S)\n. It's nice since I knew what the problem is and to see you inch your way towards it. Definitely open an issue. The whole history parsing and handling is still very incomplete. If you want to fix it it's even better but my guess would be I've got to take care of that little detail. :)\n. It was more meant as a joke. Binaries should be working now. I'll test it tonight and then push the changes. I need to get the history handling working. But this is so against the nice undo/redo system in place :(\n. Binaries insides history entries should now be handled correctly\n. I'm guessing master? It sems I've broken quite a bit recently. ;)\n. Strange. Can I get you to debug the code? If you got time we can go through it on IRC\n. There is no 0.3.9 release. MacPass might not show a window on launch. But you can use the menu bar to open or create a database. 0.3.8 should work under 10.9. \n. Since this requires serious work and would lose a lot if the NSDocument based features I'm a bit hesitant. If the feature set is more on par with keepass this might be worth implementing. Since then I would leave it in the current state. \n. Tabbed Document based applications aren't something that's easily done. At least as far as I know. So It would take some time to get this working. I totally get the better UI. I just didn't want to enter the world of tab-pain too soon.\n. Multiple windows works right now =). And the NSDocument architecture really pushes you towardad one-window-one-document style. Just to be clear about the priority. Do not expect something to pop up in the next month ;)\n. As stated before I have no intention to do this. What's it with the tabs anyway ;). OS X has a decent window management but maybe I'm more or a John Siracusa windows user. The more the better :)\n. Currently looks only in the active document. This should be addressed :)\n. I have no clue at all how the UI should look like. But then there might be the possibility to use a document with multiple databases, so you have the tree with databases as root level. But that makes the whole experience a bit ... strange.\nThe other idea would be to change the search to something like spotlight. That lists all the entries within all databases. But there's no sorting, and navigation inside this pop-over-windows might be strange.\n. I just tested MacPass under macOS 10.12 and the tabs feature works like intended. I do not plan to add this as a custom feature so I'll regard this as closed by apple ;)\n. What troubles me with this feature is that it is actually working if you set OS X to restore windows. If you close MacPass with multiple DBs open and then relaunch, everything is back. If for some reason you disable this feature in OS X then I have to manually keep track of all open field (hence reimplementing and already working OS X feature) which bugs me a bit.\nIf you disable \"Close windows when quitting an application\" in the general settings, the resulting behaviour is exactly what you want. If you disable this, I have to do it manually. Which i currently do for the last document you did close.\n. Do you mean it should lists entries as well as groups? If so, this is rather hard to implement at the moment, as the entries table is designed to list only entries. It's possible to add a filter bar to the outline as well to be able to search there too, another thing would be to include a \"groups\" field int the search filter bar. Also there might be the possibility to extend the filter bar to a more finder like search bar. I wanted to keep it simple at first\n. MacPass displays the Group column to the left if you search already just like KeePassX does. The Grouping by Groups is something is a nice addition, but this would - to my current knowledge - involve going away from direct bindings to a more manual approach to data management to enable the grouping.\n. Yup.\n. @DominusExult You did mention search in Attachments - do you mean in the name of attachments or the actual content? Content would be a bigger deal\n. All is added and working.. I'm closing this. If any mentioned search filters are still missing, new issues should be created.. The current master branch is more or less usable and I'm planning on releasing this as a 0.4 version. BUT since I did change the underlying Data structures, there might be some regressions so I'm still hesitant to realease this. On the other hand, there are a lot of \"master\" users that report bugs on the spot so those get squashed rather quickly. If I get around to add an auto-updater I'm more likely to release the 0.4 version.\nThe short answer: When it's ready, there'll be another release, but I'm not sure when.\n. You make a good point. I should just face my fear and release a 0.4 versions.\n. Take a look at the milestone - no date set ;)\n. Cloning works currently via drag an drop. If you control drag an entry, it will be cloned. The action is only missing as a separate menu entry. \n. What should be done is asking whether to clone he history as well just like keepass does. \n. Sorry. Option as in the Finder. And yes, history is a kdbx thing. \n. Simple cloning added in 7f03985eff62bcff4201941cf5e1339f9091301c\n. As it should be. There are \u2026 to indicate that there will be a menu. The second option will display a dialog to select how to clone the entry (inlcude/exclude history, include/exclude binaries)\n. fixed in master\n. Since the \"we need a plugin system\" discussion came up in #350 I suggest this is a nice candidate for a simple one. Even if the interface is not fully done this one should be fairly simple to implement.\n. I chose to as this as a native feature and it's working so far. Will be pushed soon and be available in continuous. . Thanks =)\n. Thanks for the contribution. Regarding the Edit button - this feature is not enabled since it needs to work with history and undo/redo. The approach I was thinking about was creating a group in NSUndoManager and then let all the editing work, close the group and undo if cancel was hit.\nThe problem with this whole thing is the following:\nKeepass1 files do not have a histroy, they use a cured \"copy to backup before edit\" system. This is something I do not intend to emulate and instead really on undo/redo all the time.\nKeepass2 files to have the possibility for a history. But this can be disables. Hence the edit behaviour should change according to the setting. My idea: Editing with history (use undo manager to check for changes) shows the edit button. Editing wihotuh history hides the edit button ans relies on the undo/redo system.\nBut coming to thing of it it might be better to actually always use the edit and enable undo/redo all the time and just correctly handle the history entries. Oh well.\nIf you add the KeePassKit pull request I'd be happy to merge the changes.\n. I did take your ideas but set the buttons to be hidden for now, since this isn't fully working ATM.\nThe editing is change to not rely on the button label as this is localisable and so it's not a valid source to decide whether we should edit or not :). Another thing is, the HNHRoundedTextFields can display hover buttons, when no editable and non selectable, hence the editing needs to change those two attributes. But there's still loads of other ui that needs to be dis or enabled regarding the editing. That's why the feature wasn't there in the first place ;)\n. What really struck me as error prone was your way of using the button label as states. This is something you should never do. GUI is nothing you should rely to heavily on. Only trust your inner states.\n. duplicate of #53 \nThis feature is present in the master branch. Will be included in 0.4 (which I have no idea when it's going to be released)\n. It was there in the first version. But if you look a other tools, that use the toolbar there's actually a concept in the \"contextulized\" search bars. I wanted to add one to the groups too, so you would be able to \"filter\" the outline view. Conceptually putting the search bar in the toolbar is nothing so bad, but as you said addend options is a bit more cumbersome. On the other side, it's possible to customise the magnifier drop down menu to be used a checklist. Well well. You point of discoverability is a strong one. But search is bound to a common shortcut ( \u2318+F) and also visible in the menu. Mh. Why do you always find the points that I cannot deny so easily :)\n. I'm moving this in again. Current way to do it is like finder. If you type something, the bar gets displayed and search is working. The Search then uses the selections via buttons in the \"filterbar\". Your suggestion to use \"all\" as a default seams reasonable. On the other hand, saved filter settings might also work, since people tend to use search differently. Anyways. Toolbar-Search should be in in 0.4 again.\n. It's there. If the user die customise the toolbar to not show it it will be displayed just for the search and removed afterwards. Same goes for text-only display, this leads to the toolbar displaying icons and then reverting back to text-only mode after search is finished.\n. Duplicate of #114\n. Feature is not merged see #247\n. I should just release a f**** update. That's what I should do. And no, I'm not drunk ;)\n. It was. Remember 0.4.0 to 0.4.1? ;)\n. It's not integrated into the master but you can use @jameshurst fork with he keeps in synch.\n. Is working in master. Should work in upcoming 0.4 release. See #63 #115 #117\n. No big deal. At least you've looked. Most of the time I think people do not even bother ;)\n. To the risk of sounding a bit like an asshole. I get this question a lot. Take a look at the issues. You did also comment on #128 which is closed. The milestone has no date set. You see features, that are not there yet, hence no release. I did add Sparkle so I get to the point where I can release it. The problem is, there were a lot of internal changes, and those could lead to some regressions. But the requests get louder ;). And do not think, that 0.4 is feature complete. It works better, but still has a long way to go.\n. But I guess I should just set a date and put pressure on myself ;)\n. Be carefull what you wish for. I reverted the sparkle system to use a public certificate instead of relying on signed code to make other build the project easily. Will try to clean up some other lose ends and then there should be a good chance of a new release - and it will be an alpha. Beta is thanks to google the new golden master so I will sure as hell not call it that :)\n. 0.4 will be released soon (and yes, I know it missed it's deadline)\n. Application icon for now is enough\n. I never changed that from the default that is used when the Project is created with Xcode. The Save does prompt if it's the first save of an untitled document. But I take a look if this can be changed.\n. I am well aware of all the features that Keepass suports (and believe me, I would be happier if it wasn't such a huge number). Autotype is something I'm wokring on. But it's not nearly finished. And it might take some time until it works flawlessly under all circumstances (think: different keyboard layouts, ect)\nDuplicat of #91\n. No hard feelings =). If you peek at the commit messages, you see that Autotype is poppup up sometimes ;)\n. Gabriele thanks for the kind words.\nFirst things: The 0.3.8 alpha is quite old, master is currently in big movement thus I would encourage you to either be cautious with 0.3.8, use master with with even more caution or wait till 0.4 which should be usable. But it goes without saying, MacPass is in alpha stage hence it has bugs and might corrupt your data.\nRegarding the lock screen. I have no plans to change the current way - a simple password input. I did start up with a lot of UI ideas but coding all those custom view and animations slows down progress on the data-handling parts so I focused more on the later things. What would be very nice is if you want to complete the icon set. There is no file icon, not even 50% off all KeePass DB-icons are converted to the s/w template format I use, so feel free to chip in if you feel like it.\n. There is an Illustrator file where all the Icons are saved in separate art boards. The size is set to \"16px\" to stick to a simple grid. And no - no workflow. I just take a original one and try to \"get\" it's meaning and then convert it to a s/w pdf version. The only thing that might be useful is stripping meta-information. I do that so they get smaller (with they are about 30k, without around 2kb-3kb each)\nTools are Illustrator CS 5.5 and Acrobat Professional for the meat-data-stipping\n. Since nothing followed up I'm closing this for now.\n. All currently supported placeholders and references are resolved before any contents is copied to the clipboard.\n. The search bar is never a toolbar option. It just get's displayed whenever you start a search. Theere is a graphic glitch that doesn't show the search item in the palette, but you can see the name \"search\"\nAll the fancy stuff finder, mail and what not do with the toolbar is painful custom code which I want to skip as much as possible. But I'll look into it.\n. The current version of the search bar in the toolbar is a \"system-default\" version. So I guess this can be closed.. fixed in de30cf54070f5508049f566e0e9f5035de0d7247\n. It's the internal error code which I rather have displayed for people to be able to identify them.\n. Problem is that the KDB binary format doesn't account for \"easy\" password check. You can only decrypt and decode and then the most likely error is a wrong field type. But it might blow up later. You never know how the wrong decrypted data looks like.\n. Just a note. You need to stave the .strings files as UTF-16 LE with BOM otherwise the encoding get's messed up. I did fix your file to match this again.\n. I'd like to add a real name to the contributors. Can you provide me with one? If that's too sensitive for you, I'll just stick with using your github name and link to the profile.\n. Doesn't matter how little or much you did contribute. You did. So you're in the list. And thank you for the information.\n. It's simply broken and not working correctly. And the \"select after search results\" is correct and I did find that this is annoying. So it will be fixed. Hopefully till the weekend\n. The annoying selection behaviour and searching what button is pressed should be fixed with 41ba8f57ba3e1c67b84efdc9994b03474a55ef67. But the everywhere button is not enabled for now (this would also search custom fields)\n. Can you file an issue for the broken saving? For me save is working. Please provide details ( File format: kdb or kdbx) and anything that might shine some more light on the problem. If it's there is a bug, it needs to be fixed ASAP. Thanks in advance. \n. Are you sure you're on the current master?\ngit pull master\ngit submodule update\n. Ah, now we're getting somewhere. Save as. It's broken, because it's not asking for a password. Will fix this ASAP. Please consider adding those details in your description. ;)\n. I pondered about this. The best Mac-like way would be to enable quick-look. But this would lead to the problem you already mentioned - temporary files. My first though was creating a encrypted disk image, mount it, store the file, quick look, unmount, delete. The problem is that the file still exists readable for the world for the time the preview is open.\n. Well, KeePass 2 (the original from Dominik) goes through a lot of pain for security. It's far form being insecure, on the contrary. Dominik did change the opening of attachments recently to be even better, using secured memory, wiping it after usage, etc. But since MacPass doesn't have such tricks as in-memory protection (I just store xor-ed data) and such stuff, and strings get decoded to be displayed in the gui (although secure inputs are quite secure on OSX) I get your drift. The convinience might over-rule the risks\n. Quicklook preview via temporary file is in place. I did not use any encrypted disks, as those are mounted and then plainly readably just like a simple file. Files get stored in a temp directory and deleted when the quick look window is closed or if the application gets shut down. The only problem is a force shutdown. The quick look feature is a new setting in the \"integration\". It's off by default because it introduces a security risk.\n. Having thought about this a bit more, the encrypted disk might be a better solution as I can create a password on the fly and forget about it. So if the system reboots, the image is unmounted and not readable (because being not mountable without the password). The problem of being readable while mounted still exists though.\n. Not exactly the described worklflow but close with the current possibilities\n. Password is not saved to the entry, just the text-field shows the password\n. Behaviour is working the desired way now. Passwords get stored via data model methods not just added via UI.\n. Delete is fully undoable, hence no confirmation is needed. If the recycle-bin is disabled, entries and groups are directly removed (can be undone). If recycle-bin is enabled, entries and groups are moved into the recycle-bin group. Emptying the recylce-bin will permanently delete entries. But there is a prompt before doing this). Regarding the shortcut for delete, that's a valid request.\n. It was a stupid bug in the first place ;)\n. That's fixed. Reordered the UI without fixing the tab order.\n. Fixed in 33d992b7fb849875f5b322530a0778b09b56fa82\n. Since this is a security concern, the check box is off by default but can be set and is stored as a user preference and thus stays the way you want it to be.\n. They are not part of the default toolbar but can be added via customisation \n. Nice catch! The generator on the entries is currently being resetter every time. The window is a quick access to the same generator and this one isn't reset every time. Fixed now.\n. If you write me a password estimation algorithm that actually does estimate you get it :)\nThere's a reason why I only show the estimation in the generator. If the source of the password is unknown the estimation is rather... well ... hard. I did investigate into this subject a year ago or so and came to the conclusion that this is a rather difficult task so it wasn't a high priority. But I totally get your point. So do not expect a global estimation to pop up soon. The other suggestions should be considerers though.\n. I might even be able to use the one in Keepass2 as this one was upgraded to a never version recently. But yes, I could actually do that. Stupid me sometimes forgets there's other people's work :)\nHas to be rewritten to work in Objective-C (at least the C# Keepass version, C++ KeepassX version might even be easier)\n. It's a navie approach I was thinking about in the first place but since it's rather useless to judge the source alphabet size based on the used characters in a password it's more liek a very uneducated guess. The strenght estimator on the password creator works exaclty like this but since I know for sure the source alphabet and can guratnee a truly random choice it's correct. On the other hand, based on this the random password \"aaaaaaa\" used from the full alphabe is rather high in entropy but not very secure. There's a good article form one of the dropbox guys on good password strenght estimation and it's damn hard to get it right.That's what I wanted to bring accros in the first reply\n. Might I ask for a full name to give credit for the translation?\n. Duplicate of #118. when reporting bugs please take the time to search for an older issue that is already reporting the problem. Also take a look at the status page to see if a feature is implemented or not. Thanks. \n. Sorry if I sound like a jerk, that's not the intention but there are always a number of duplicates which could be avoid with a litte searching ;)\n. As this is OSX you can remap the hot keys via the OS. Take a look http://support.apple.com/kb/PH10837\nCmd+C was there but did create a load of problems, so it was changed. As a side-note: You can always use double-click on password, username url or notes as short way to copy data to the clipboard.\n. Nope. All menus get considered. And since the action menu and the context menu have the entry, they both get the user defined shortcuts. Tested it just now. There seems to be a strange bug that displays always the \"C\" key in the context menu but on the action menu you see the correct reassign shortcut.\n. Have you had any luck with setting the shortcuts? You have to exactly type in the name of the Menu Item you want to set.\n. Cmd + C was the default but text inputs with focus did consume the copy so I changed it. \n. Please take the time and read through the issues before opening a new one and take a look at the Status page to see planned features. I'm being snarky today ;). But this one gets opened once every few months. To clarify: The support is no high priority as I plan to get Autotype running since this is a more general approach. It does have it's drawbacks as it will not be compatible with Chrome (Chrome doesn't offer OS X a reasonable window title, Safari on Firebox on the other hand do). I recently got contacted from someone who offered to take a look into KeePassHTTP support so there might be something coming in the future but do not hold you breath for it (you might die ;) )\nDuplicate of #14\n. @dereulenspiegel Be careful with that. I just found a bug in 0.4 onwards that screws up all the auto type keystrokes. There will be a helper tool to fix the mess in the upcoming 0.4.2 but it's alpha for reason ;)\n. Forget the comment about Chrome. Chrome has two windows the OS sees. One on top without a title, the other is the current tab - so auto type with chrome should work too.\n. @kashnoorani Autotype is quite evolved. The architecture might change but currently it's working for basic operations. Some kinks here and there but most of the stuff should work. You can take a look at the Autotype group in the code - most of the code is there (some moved to categories on NSString though)\n. @kashnoorani If you want to contribute just contact me via mail to set up a rough path\n. The benefits of direct browser integration are a clear. There's stuff only the plugin can do that Autotype never can achieve. You mentioned some of them.\n@gstammw What team? ;) There's only me. And some contributions I'm grateful for but currently I'm the only one pushing core features. Sadly. And about the donation. I'm grateful for the offer, but I would have to declare them as income, tax them, etc. So no donations. I might change that in the future but currently, no such things. Actually I do not want any money since this builds up a obligation, that's already there with so many stargazers. All the \"fame\" makes me a bit uncomfortable. But at the end I was the loony starting the project and open sourcing it here. So bad luck ;).\nBack to the issue: @kashnoorani offered help and someone else did. Sadly nothing has come up but I'm optimistic. Autotype is more or less coming along (it's far from feature complete nor super robust) but it's sort of there. After that is in a state where I can live with it, I might take up the KeePassHTTP stuff again. After all it's no rocket science ;)\n. Jup. And #171 states that OS X supports customisation of any keyboard shortcuts tied to a menu. So you got feature 2 already. You can add shortcuts, modify them, etc. It's not as nice as to use the application itself, but I tend to try to adhere to system standards.\n. The thing with tabbing to the entry list is something I should add though.\n. And what about the keyfile? What if the master password is in the keychaing, the key file is remembered? Then the database can be opened by anyone that can reach your keyboard and mouse? I like the luxury of the keychain as much as anyone, but security and comfort are two opposing goals, and I'm hesitant to make things too comfortable. Take a look at 1password - they do not store the password in the keychain. In fact I know only one tool that does it out of the top of my head.\n. Well then. Should be a feature. But I think I'll disable it if key file locations are remembered. Actually, I might switch so storing the location an the password in the keychain. Well well well.\n. Since edf43583880838f0ef689dde148f42a88c133772 there is a Autotype Fix dialog. It's not finished but will help tracking down problems caused by a MacPass save.\n. Fix dialog is finished. Warning is displayed in footer for older files (but needs better handling)\n. If the dialog needs more work, this should be added in a dot release\n. It's bugging me since the first built but I never got to creating them. So you're not alone in staring at the white, featureless document icons\n. That's not my problem :). I need an Icon first, that's the show stopper. I could create on (since I'm not that shabby at doing icons) but I just didn't get to it, since, well, there's coding to do as well ;)\n. I took the liberty to move the files into the asset catalog and associate the document types. What might be helpful is to use different icons for KDB and KDBX files but for now it's better than plain white document icons ;)\n. Fixed in e9325a62beae6819a428f8953370a4bd2a0e231f\n. I'm pushing that in front of me every week, but eventually I should get around to release it. I'll make no promises (as I tend to break them) but I plan to at least make it work as an early (or in time) christmas gift.\n. duplicate of #119 this seems to be a regression :( \n. Support for history creation is in the works and will fix this problem. I've been thinking about a proper way to do it since the first version of MacPass but the current undo-redo support on all single edits was something I liked. But I do know it's completely opposing the design philosophy of KeePass. So this should change once history support is implemented. \n. Current master is supports pushing history. There is however currently no way to revert or browse the history\n. I agree that such a document should be created. To give a quick answer: the database is encrypted using system library functions and the random numbers are generated by grabbing random numbers from dev/random which is considered to deliver appropriate random numbers. There are numerous articles discussing what source for randomness to use. But there might be things to improve. Considering dictionary attacks the key hashing via multiple rounds is in place just like KeePass does it. MacPass does however not perform any integrity checks at startup. Might be worth thinking about. Protected memory is not used - if someone can point me to viable solutions on OS X I'm open to suggestions. All values (not the keys) of sting fields are stored as XORED data. OS X secured input fields (the dotted password inputs) are rather good at being secure so as long as you hide passwords they're protected as far as the OS can do it. That's some stuff out of the top of my head, but a full document is surely something helpful. \n. For that to work there has to be an actual team. But since this is a hobby-side-project (and I'm not talking the Apple TV kind of hobby) this approach is not feasible at the moment. But I'm open to suggestions and if there are a bunch of volunteer developers it might work.\n. @am2605 it is able to create, delete and edit most of the information just fine with the states limitations (take a look at the Readme and the Status Page )\n@viegelinsch thanks for the info I'll take a look but as I said elsewhere, if the project gets more attention via more money I should devote more time to which currently I'm not fully able to. I try to maintain it as good as I can which leads to the burst-mode that the development is in. Recently there have been some more substantial contribution which help get the project along but the \"big bricks\" are still lying in my own yard :)\n. Looks quite nice for the first thing :). And the keys array way was just a naive first hack. I never did think about it hard and long as this would have resulted in a solution like the one you proposed. One Not though - you should copy the mutabel array to make a true immutable copy, otherwise someone could find out it's actually an NSMutableArray for instance by asking isKindOfClass.\n. The plus button on the bottom did work but you're coronet that the actions were disabled as they did look for the selected item and this was set to nil fi you clicked on an empty row in the entry table.\n. MacPass uses the KeePass file format and thus there's no way to customise the type of an entry and show/hide different fields.\nThe format is flexible enough to allow some of you functionality though. You can add custom fields for hostname and port and then use them in and auto type sequence.\nAnother tidbid is, that I just call \"open\" on the url and the OS choses the application that is registered for this handler, meaning you very well can launch a terminal with the ssh:// prefix. Currently placeholder get only evaluated on auto type but I'm going to add this as to the \"copy or open\" mechanic as well and then you can create and Entry with two custom fields hostnamen and port and put something like this in the URL field ssh://{USERNAME}:{PASSWORD}@{S:HOSTNAME}:{S:PORT} and when you use \"Open URL\" a terminal should launch and log in.\n. Judging by the error code this is a KDB file. Did you select KDB in the \"save\" dialog? Can you please detail your steps to reproduce the error? I was unable to create the error.\n. I had this bug for ages. But never dug to the root of it.\n. This is a known bug an a fix is implemented an will be included in the next release. \n. Is this still valid in 0.5?\n. I'm closing this since it is fixed AFAIK. Since this was a joke an an actual port to swift might come in handy I'm closing this.. That's wrong. Every Menu can be customized. Just add a MacPass Application Shortcut and name it \"Copy Password\" and enter you shortcut. It works.\nOSX evaluates every menu. It doesn't have to be the main menu :)\n. Ah the mighty responder chain bug. Thanks for the find. There was another one present with the same result. And I thought I was clever doing it that way. Turns out I was wrong. Will fix this ASAP. \n. I'm quickly replying but slowly releasing \ud83d\ude0b. I have no intention to install 10.10 before the final release and I'm really (not \ud83d\ude09) looking forward do revamp the whole custom ui code. I'm silently cursing at myself for not sticking with fully native controls all the time. Anyway thank you for the reports an keep them coming. I'm sure there are still plenty of bugs lingering around. \n. Mh. I cannot recreate the bug with the steps you mention. For me the cancel button always closes just the popup.\n. Thanks @michaelrommel  for the video. In the next release I will add a log message to the cancel action and then we might see where the culprit is. I suspect there might be some weird stuff going on with the responder chain. But that should happen since they \"fix\" it only on apps linked agains 10.10.\n. Fixed in 6954b6f362f71486dc5b14b47fe786e85dae511f\n. Thanks for the translation. I will add you to the Credits as well\n. What do you do to \"try saving it\"?\nIs this a new kdb file? Did you open a already present file and edited it?\nWhat Version are you on? (binary release or custom build?)\nWhen you try to save a new file, you have to change the password first, this should be presented to you as a sheet before you then get on to the save dialog. Do you get an error while trying to save? Can you check the log file? This might occur if the file cannot be written. But this should display an error message to you.\nAnd please clairfy what file format you're saving (kdb, kdbx) and whether this happens to all the files, or just a special one? If save would not work, my guess it that there would be a bit more reports, so this must be an edge case (that I might have fucked up ;) )\n. Thanks for the info. There's an exception thrown but not handled hence the save thread never goes through. I'll take a look seems to me there's one option for this to happen.\n. Found the cause. Fix is in the works\n. Stupid error. NSArray:initWithCapacity: and a 0 as size causes this error to happen. Fixed. Will be shipped in the next release. (Which should be published sooner than later)\n. This error occurs, when you have no entry in the root group. To avoid this, simply add an entry in the root group and saving should work again.\n. fixed in 6954b6f362f71486dc5b14b47fe786e85dae511f\n. As far as I know, it done.\n. fixed in 53a7f92b9b362c9fc5c0957341fc1550b8c36966\n. I have not checked them out in detail, but great work. I really like it! But we should wait for @DominusExult and his devastating criticism ;)\n. We can add as much Icons as we want, but those need to be custom icons. There is no simple way to just make more numbers. I did add more icons since I used some of them as basis for the UI elements but none of them is intended as as Database icon. The default KeePass database only has a set of those 69 Icons.\n- 0 I like the round key you did in 13. We can change all keys to those if you like.\n- 16 I just realised, the needle is pointing the wrong way. Mirroring it would also make it better fit with the CD (17)\n- 25 Mailbox is way better than the folder. And the metaphor and overall \"look\" stays roughly the same so we should use your new version\n- 28 I'm still having a hard time with the windows logo. But I guess there's no better way.\n- 32 is called FSView which I guess stands for \"File System View\". It's a window with icons. Hard to get done in s/w and 16x16 :(\n- 33 That one is a real treat. Who the hell came up with this checker board as a way to say \"run\". Grrr. We should use a rocket that launches. But then nobody get's what happened to their beloved checkered board ;)\n- 42 the memory bar is nice (it's great that on can identify it) but the rotation bugs me a bit. Can you try to go for a front-on-perspektive. Even stack two of those RAM-modules on top of each other to get the size used. Or go for a chip. But that can mean anything from CPU to RAM to whatever is a chip. (Which apparently in this age is a lot)\n- 47 my preference is leaning towards the box. Since nowadays a archive is often depicted with a zipped (as in zipper) up box, not a squeezed thing. On the other hand, it does show compression good and keeps true to the original.\n- 49 There is a central perspective used in some icons, maybe doing the same for the opened folder is a possibility? The normal folder might need some shrinking so you get the extra 1-2px on each side to open the drawer, but that might fit better with e.g. the scanner or the printer. Any thoughts?\n- 58 the pixel alignment seems to be off on this one.\n- 62 your waving TUX is super cute :)\n- 66 although I do get the bills and like them, it might be better to just stick to the dollar sign in side a circle. Keeps it in touch with the native icon\nRegarding Flippy Floppy Download Thingy: Floppy for the KeePass Icons sounds reasonable. That is 26 should be depicted as a Floppy. But for the interface I really like the hard disk more. On the other hand, even that metaphor is old, since flash memory doesn't look like that. Is there any apple tool, that uses a save as icon? I can only come up with download from the cloud (cloud with arrow) or the real word \"Save\" on the button. I might just change the UI to just use the \"save\" instead of the icon. It's even better to do it that way, because then I need to implement better Drag and Drop support for file attachments.\nAlthough I did add a lot of notes, I really really like what you did there, so big thanks again. The current pull request is rather useless though, as it's only the pngs. What I really need it the .AI file. I did export all the icons to pdfs and then removed any meta-information with Acrobat, to get them to the current 1-3k size. If you like, you can do that as well, otherwise just commit the .ai file changes and include those in the pull request. If memory serves correctly you can also add more commits to this pull request.\n. I'd gladly ad the icons when the pull request includes the PDFs bit that's not the case right now. And the bummer is I really like what Joanna did so I'm with you on this one :). \n. Grrr. Stupid me. I hope you can look over the fact that I obviously forgot about that. I'll take some time to look into it again and then we should be able to finish this and add some fancy new icons to MacPass :)\n. I'm gonna close this up until you've found the time to finish the icons and can provide a pull request with all the changed (and added) pdfs :)\n. You should be able to merge all changes into the repo and then add more commits to this pull request. Another solution is to just add the commits for the changed pdf/ai files to a new pull request.\nAnd by the way: Nice! I'm very delighted that you did finish the icons. If everything goes smoothly I will add them in the next release. So thank you again! :)\n. No update. But since tags are not at all well supported it's no surprise. I think this might get some attention soon as another high priority features are finally implemented. . @timkite you idea about adding tags to the outline is something I tried as a small experiment but never quite finished. The idea was to actually save searches and add them just like \"smart folders\". Tags can be searched via the \"Everywhere\" setting in search. This is however not exculsive tag based search and Tags should get a special treatment.\n@timkite your idea about the outline is already noted in #189 . This is not present in 0.7.3. Will be released with 0.7.4. Will get released in 0.8. Current continuous release has the feature. That's a major usability problem for a lot of people it seems. But when i update on every change, it fills your undo-history with \"letter-by-letter\" changes. Nothing you really want. So the only real \"editing finished\" trigger is either a enter or a exit of focus.\nWhat this again shows is that the current way of handling edition and viewing in one \"mode\" isn't working. I have an edit button in place that changes the field form inputs to only labels. This is also necessary to support KeePass history. When I get around to implement this in a usable way, the problems you describe will all (hopefully) be solved at once. Currently I have no ideal architecture to both handle history  on kdbx and non-history (via backup copies) for kdb files. When this is abstracted in a usable fashion the feature is going to be added.\n. @qu1ck should be possible. Although considering the recent dry run, it still might take a bit ;)\n. Thank you for the pull request but since the website is generated based on the Readme so a pull request should be made for the Readme :)\n. No problem. I'm glad for every help. \n. This is a duplicate of #196. If you take a look at the log, you should see the same output mentioned in #196. Fixed in master. I should publish an update :)\n. Can you elaborate? What version are you running?\n. Do you actually use Autotype? The feature isn't anything near completeness but I would love if you got any input on if it's working, etc. \n. It's disabled by default, you have to uncomment the define and the UI for global hotkey is not working right now\n. Define: MPAutotypeDaemon.m Line 31\nGlobal Hotkey: MPAutotypeDaemon.m Line 170\n. Thanks. Keep in mind that some translations are done via code and the Localizabel.strings. I try to keep them up to date (at least for German and English) but I might miss a thing or two here and there.\n. Can you give me a real name that I can use to mention you in the contributor sections? If you're not willing to reveal it, I'll just stick to your Github profile name and link to it.\n. Will update the Readme. And it doesn't matter how much you contribute. The sole contribution is enough. \n. @jamesrhurst fixed #156\n. The password creation is now moved to the entry creation in MPDocument since this is a better place. The pre-filled textfield did not actually store anything in the entry.\n. What database format? KDB? KDBX? And what version of MacPass are you using?\nCorrection: Error only occurs on KDBX format which occurs when the xml file cannot be loaded\n. Can you try to load the db with recovery mode on windows?\n. Yup. That's a real bugger with this project as no one can (nor should) send me password files. But it's hard to identify the problem. It looks like the XML stream written by MacPass is somehow corrupted.\n. Did you do anything special with the file? Notes for the db? Special name? Some notes or fields that might contain bogus characters? I'm not positive that this is the root cause, but that's currently my only guess that somehow I create an invalid XML character.\n. What you also can do is export this file as XML, flatten it in one line and take a look at or around the location the open DB command complains about.\n. Custom Icon loading should work but I'll take a look into that as well. And thanks for the effort. It's always frustrating to receive bug reports on file corruption :(\n. Nice work. Did you delete anything via MacPass or did you just load and the save the file?\n. What is the data you posted? Was this the name of the entry? I would love to be able to reproduce the bug.\n. Nice. I'll investigate. My suspicion was something in the line of funky characters.\n. I've dug into this a bit. Problem is unsafe characters in XML. This also brought up another serious bug resulting in the attribute for protection not being properly set. The database safety is not compromised but it's unfortunate to say the least.\n. @adonishi thanks for the nice test case. MacPass now strips unsafe characters in plain xml files. If however the field is protected, nothing is stripped. This base a major impact on how to handle your KDBX Databases with MacPass because if you chose uncheck the \"protect password\" setting for a database, any special characters that isn't allowed in XML will be stripped. In plain english data loss. If you reopen the database, the password will not be the same. Keepass pervents this by forcing a default setting for protection and even having disabled the protection settings altogether. This has the effect that any other field containing control characters is always stripped.\nA simple test case for keepass is to use the password @adonishi mentioned as a username or title field. Safe and load the file with Keepass for windows and you'll see the string is stripped.\nSince this is something very harmful, I'm considering always protecting passwords, and dialling the ability for users to change that.\nLong story short. Problem is fixed with e552c725f81d360c637e762869a1d57cdb29d1b0\n. For Custom Browser support there is some Interface mocks and some code written in the MP WorkflowSettingsController. The population of the selection menu works. What's missing is selecting the browser if a user defined is present. Reseting if \"default\" is used and the actual opening of the URL needs to check for any settings and then use those. Code is there but not used: MPEntryViewController.m L626\n. My idea for the Workflow tab was a matrix to select the action triggered by double clicking a column.\nThis mostly would result in \"copy to clipboard\" but for the URL theres the possibility to open it directly. Since I did not expand on this any further there's no need to duplicate the setting hence it can be removed from the general tab. Feel free to clean up the interface. And if you have any suggestions whether or not the \"workflow matrix\" is anything that might actually be useful I'm open for suggestions (and implementations ;) )\n. If you can wait for 0.4.2 or run the master and you should be \"fine\".\nThe drawbacks are mentioned in the Readme, that is 0.4 and 0.4.1 fuck up you Autotype settings. The current build has a tool that helps you find those fuck ups. But it's not completely done.\nHistory doesn't get updated by any actions you do, that is no edit is stored in a Keepass compatible reversible fashion in the DB. I'm still struggling with a nice solution but there has to be one eventually (that is until I can name it a 1.0 ;) ). As for anything besides that most stuff should work. Basic operations seem to raise no problems although as you can see if you check the Issues sometimes there comes something up. The software is stated alpha for a good reason. \n. Never :). This falls all into 0.5 since there are so many changes. But 0.5 will not have KeePassHttp. It is intended to be the last version able to run on 10.8. KeepassHTTp then will be added afterwards since it (currently) requires 10.9 as a minimum OS.\n. Normally all this should be handled via the currentItemChanged. The only way this breaks is when no group was selected in the first place. Then exiting the search just keeps the search results.\n. I did investigate a bit. No selection at all raises an error as binding to a nil controller isn't supported so this solution doesn't work. While looking into it i fixed some other problems that occur when a selected group is deleted, so this is now fixed. The easy fix would be to check for a nil-entry afterwards and then just set the contents again to nothing. But the whole update mechanism on selection is a bit clunky. I did reworkt it a bit but I'm still not happy with it since so many interface elements try to cope with the changes. Show/Hide context bar, update context bar type, etc. Might be worthwhile to refactor the whole system.\n. Might be worthwhile this will also remove the need to change according to search, etc. But in the end the handling just gets transported. I did fix the issue. You can easily force the nil group by opening the db and then just search. This will not select any group nor entry and then result in the binding error. The fix is not something I like as it again shows the architecture isn't good enough.\n. If I use the following code:\n- (void)_didExitSearch:(NSNotification *)notification {\n  [[self.entryTable tableColumnWithIdentifier:MPEntryTableParentColumnIdentifier] setHidden:YES];\n  MPDocument *document = [[self windowController] document];\n  document.selectedItem = document.selectedGroup;\n  [self.entryArrayController bind:NSContentArrayBinding toObject:document.selectedGroup withKeyPath:NSStringFromSelector(@selector(entries)) options:nil];\n  [self _updateContextBar];\n}\nI can regenerate the issue by just opening the db, clicking in the search input box in the toolbar, type something, click the x-Button and then an Assert is fired.\nAs long as no one refactores the whole selection/content array system I would just let it be as is for now.\nWhat I have in mind is reusing the view for history as well. You might have stumbled upon some code snippets relating to a historyBrowser. The idea is to use the entry table for three things:\n- Contents of the group (showing context bar in trash mode, if the entry/group is (in the) trash)\n- Search results (including the context bar in search mode)\n- History entries (showing the context bar in history mode\nAnother idea is to use the custom data field in the KDBX file to save searches. Those then should be displayed in the outline view and you can click on them. Something along the lines of smart folders.\nWhich brings to mind that the search currently does not auto-update if the database is changed. So undo/redo on entries while search is active might result in funky behaviour. Oh well.\n. It's already on my internal things still to do list :)\nThere's some simple formatting for the Icons if the entry is expired. But this is never updates at runtime and thus disabled right now. I never got around to implement the timer behaviour that updates all the expirations.\n. Any help is highly appreciated!\n. Since f322c44fdfe09a93aed6fc575739e284c8226486 expired entries and groups are displayed with a yellow warning sign.\n. Now I see why you look at the visual cue for expired entries :)\n. That's a rather annoying bug. Will be fixed. \n. Should be fixed in master now. \n. Nope. Need to update KeePassKit but that's to cumbersome from my phone on a polish wedding ;)\n. fixed in 9699a53f12ab047a15c73d375c1cfddbaf876ed6\n. This issue was fixed in 4cbb23bed5dd80af3ab6e03f4193a723be201eb3\n. Feel free to shoot. I just did the github page to have a \"bit of website\" but even that simple setup gets left behind because of the cumbersome update process. I'd be glad to see a \"slick-looking\" website. Considering the web hosting, if the deployment works with github I'd stick to their system for now. Keeps me away from having to register a domain and get trouble with the \"real\" MACPASS\n. Nice. It's a bit bold ;) but I like it. If we get the content a bit more nailed down, I'm happily merging a pull request. As for the integration part - I'm completely new to all this github page/jekyll/what-not setup so if anyone has suggestion how to best manage this, shoot. Main goal should be to make contributing as painless as possible. If and when this site is online the update app cast should also be moved here. \n. See #700. MacPass organisation has a website that should be used as the source and the current page should state that the page has moved.. Nice catch :).\n. Sometimes I'm fast. But thats more the exception that the rule ;)\n. Regarding the scrolling issue, see #231. And that's done ;). The sorting might prove to be a bit more difficult. Will have to see how this turns out.\n. I'm currently not maintaining anything considering Yosemite. As I tend to run system software just when it's finished. There will be a lot of more things to do (UI-wise) so do not expect any updates until 10.10 is out that address issues with 10.10 ;). If, however you want to fix it, feel free to do so. I'm gladly handing of all this 10.10 stuff to anyone who actually runs it.\n. Might be something @jamesrhurst can clear up as he's been doing some stuff with autotype recently. But I have no clue whether he runs 10.10 on anything.\n. Is fixed with merge from @jamesrhurst \n. You do! Just until we corrupt your precious data again ;).\n. As discussed in #85 there is - for me at least - only one single action that's feasible. One-way-one-time export/import. Within this limited space it's a possible feature. The solution then might be a single table that display all items from the \"Internet Password\" category (or even every password stored in the keychain) and the option to select which one to import.\n. Nope ;)\n. Sorry for not already having merged this, but I'm a bit reluctant to throw away the existing page for a work-in-progress site. Maybe we should develop this on your fork and use pull requests to your repo until the site is in a state that I can merge?\n. These are valid meta entries. One and two are default keepass ones. The third is a custom keepassx entry. Those should never be visible as they are clearly meta entries. Ever entry in the top group with this layout should be treated as meta entry. I have no clue as to why KyPass decides to show them. Try to add a custom icon in keepassx 0.4x and save. This should result in another meta entry. Bottom line: looks like a KyPass bug. It's harmless to delete them as only the default username has any significance. The rest just just tree state (expanded, collapsed) group information. \n. I just confirmed the behaviour by creating a v1 DB in keepass X 0.4.3. Aded a custom icon, set the color and this is the result in Kypass Companion:\n\n. As intended is being rendered as a white image on Mavericks.\n. Since I consider this highly insecure it's disabled. The keys for databases with passwords are saved if you enable the appropriate setting. This is ignored if you open a database with only a key file. Where's the security factor in this if you do not store the key on an external drive?\n. Addendum: I have no way of knowing for sure if the location of the key file is a removable drive and thus I'm against storing it. I can enable the feature but I'm unsure it's useful for most people. \n. As stated above, if no password is set, key files aren't remembered. I'll take the info into account and might change the behaviour to include only-key files as well and this should then automatically disable the password checkbox as well.. Regarding auto-unlocking: If no password is set and a keyfile is found this is trivial.. If you create a reference with Keepass MacPass will be able to evaluate it. You even can add them manually but since a) you have no way of getting the id of an entry an b) there's no tool to easily add references it's effectively impossible. I will add some tools to help add and edit references an placeholders. Iff you are able to create the references, they should be evaluated, though. If not it's a bug ;). \n. The lookup was broken for anything else than UUIDs. This is now working since a48f323e6463f94f89ded4c50ab86bd5b0486887\n. UUID is displayed since ce49478691a3477d10d8f269bccdd47e39808898\n. It's not fixed in the late binary, but it should work in the master (if you use a custom KeePassKit to get it to compile under 10.11)\n. References are supported but no UI Tool to easily build them is in place. This is something for a future release\n. 0.4.1 is old. 0.4.2 should be release when I get off my arse and pull the trigger. Master has the feature working.\n. As a side note. MacPass is in a very unfinished stage and you should always check whether a special bug or feature isn't already mentioned (and luckily even fixed) in the master. Just search the issues before adding a duplicate :)\n. Entry Templates are working which should cover most of those use cases. What is a problem though is that the Templates are always database-focused. That is, if you have multiple Databases you need to duplicate the templates (which is currently possible by drag and drop)\n. A possible solution though is to store an unprotected \"templates.kdbx\" in the MacPass Application Support folder and let users edit the content either via a Gui in MacPass directly or just by adding entries to the file via MacPass, as this would just be a unprotected database for special purposes.\n. @yonomitt such measures should be considered as this is quite a hefty security risk. It's just a quick-suggestions to ensure a single data storage for any kind of shared data. Another way might be to actually ask the user to create a \"template\" database and then to unlock it via MacPass' GUI. To make it work more easily a special entry in any MacPass Database can be set as the \"template entry\" and this then is used to unlock the database and populate the templates. But this has to wait until more basic functions are up and running.\n. @mems a quick way to access the template group is directly via the context-menu on the \"add-entry\" button an use the \"set Template group\" action there.\n. Reasonable seems to be a very broad interval, as I tend to find 200+ very unreasonable. But who am I to judge so yes, should be changed. UI-wise this is a bit cumbersome since the slider then is very fiddly.\n. What version are you using? 0.4.1? If so, this is a know behaviour as every input field saves its contents only after a focus lost. The \"visibility\" of the password input field has nothing to do with this.\n. Just to repeat myself :) what version are you using? 0.4.1? Or a custom built from source?\n. Thanks for the info!\n. Which isn't true for some other stuff. I should come around to upgrade to 10.10 this week and hopefully I can deliver some fixes (espeically responder chain stuff seems a bit off)\n. The Problem lies in a non-resizeable view for the group inspector. This causes the split-view to be always changed whenever you click on a group. If you stick to entries, everything is fine. First fix is there, but there's probably the need to add a scroll view there as well.\n. Fixed for now. Scroll can be added later on.\n. I will pull this a soon as I figured out how to enable travis via a second account\n. I'm closing this in favour of #261 since only one makes sense. Do not take this personally :)\n. Not legitimate and the App Store is not GPL compliant. Guess I have to get in contact with Apple. \n. And thank your for catching this. Sometimes I'm a bit disappointed in humanity. But then @jamesrhurst (or anyone else) opens another pull request, and my faith in humanity is partly restored ;)\n. Nope. Did just write the author. It's a bit strange talking nicely to someone who seems have no concept of what he might have done wrong. Well well.\n. Did re-write to the author and also reported the App. We'll see how this unfolds. \n. App is removed. Will have to check back with the developer what he plans to do.\n. Seem to play the \"sit and wait\" game but since it's removed, I'll close this issue (again)\n. Use @jamesrhurst fork and use the keepass http branch. The code is not present in the main repo. \n. @pavelgurvich of course it will get included ;).\n. I'm just getting through this. I've cloned your KeepassHTTP repository as I'm thinking everything custom to MacPass should run under one hood. I will offer a pull request as I'm in the process of cleaning up the code to run with 10.8 as well (it's only the base64 encoding stuff that needs to be changed)\nAnother problem is the different code style. We should agree to one single style on all the MacPass files.\n. Mh. Right about the independence, but the project does not provide the dependencies (JSON; GCDWebserver).\nI'm a bit off as to how to handle the dependcies. Maybee it's time to use cocoapods?\n. Argh. I just realised that KissXML is a dependency of KeePassKit. Damn. I should seriously clean up the dependencies before pointing finger ;)\n. @jamesrhurst I'm trying to get 0.5.2 out. Turns out, Autotype is still a bit wonky (who would've guessed? ;) ) and there might be some more 0.5.x releases to address some issues. I'm trying to add history support (and a changed edit interface) to MacPass after that for a 0.6 release. When history support is done (or sort of done) I'd like to merge your feature. I'll ping you again to ask if you can pull in the changes to make the merge possible.\n. The reason is given in https://github.com/mstarke/MacPass/pull/247#issuecomment-66488491\n. @sheavner the prompt is based on all the information currently available in the database. I might have to change the algorithm as I did not touch it for a while. But one thing that's a possible cause is auto type definitions. KP1 does support them via notes and I did not have the time to write an export function that tries to write all KPX auto type information into the KP1 container. But good call as I did not spent too much time refining this feature.\n. Better workflow: Yup.\nThe main problem right now is lack of time on my side. This results in a very strange state for the project. There are still a lot of places that lack a lot of polish and functionality and those need to be addressed if any of the \"bigger\" stuff gets done (namely your suggestion for a plugin system)\n. Oh. Before I forget - the main reason for this lingering state is the 10.9 target. MacPass in all it's current releases works on 10.8 so including this branch would break that and I didn't want to spent time back-porting to 10.8 and just finish some other stuff and then up to 10.9 for the whole project as a minimum requirement.\n. No worries :). I'm the one not getting shit done at the moment so I'm the last person to point fingers ;-)\n. @jameshurst should we try to use this featuer to define plugin API so we can move the implementation into a plugin-bundle? I think this is  a nice way to determine some core functionality a plugin system has to offer.\n. Take a look here: #331\n. @jameshurst To make KeePassKit a framework I started pulling private API into separate headers and in that I also tried to reduce the public API. My initial goal was to use a better parent/child structure but that didn't turn out so nicely. Anyway. The index on an entry was useless from my point of view since entries get sorted all the time, but I guess matching goes through them in the order they are stored inside the array and so order does count there. It's no problem to make the API public again, but I found only one usage to move the configuration entry in MPDocumentQueryService.m#L85 which should also work with a simple - (void) moveToGroup:(KPKGroup*)group;\n. @jameshurst Ah, didn't take a look at MacPass since I'm ahead locally with my trail (and error) run to get editing to work in a better fashion. That's the reason I did not push anything using the current KeePassKit code for MacPass yet. Sorry for any inconveniences this is causing!\n. KeeFox uses KeePassRPC so this requires a port of KeePassRPC. I'm a bit bewildered why there isn't a common approach and everyone that creates a browser plugin tries to built a new solution. Anyway. Not my time to argue ;).\nAlso a side note. I've created a very raw but sort of working plugin system for MacPass and did a dirty port of KeePassHTTP over to it and it seems to be working.\n. Im closing this for now since I did port the fork to a plugin MacPassHTTP . There seems to be a bug in the plugin so it's not working correctly. But when fixed it should run.\nBeware that the current master is a mess. I need to clean it up but I wanted to push all the changes out.\n. I've started to refresh some of the UI code and there are a ton of enhancements in 10.10 so I'll be aiming for a 10.10 minimum version for 0.7\n. 10.8 support is dropped.\n. Please take the time to check if a given feature is already requested via an issue. As it is the case with Synchronization. I do not want to sound rude and I really appreciate any effort to contribute to MacPass but creating duplicates just kills your and my time ;)\nDuplicate of #83 \n. No worries. It's just that I tend to write this reminder on every duplicate I close (the level of nice-ness depends on my mood though ;) )\n. I've looked into this and the solution could be a simple 10 liner. But there's a bug in NSOpenPanel that turns it into something rather big and hacky. But, I'm onto it :)\n. I would categorise this as a \"bit over the top\". A better solution might be to just add a \"preset\" system that allows you to add some custom settings but leave the overall settings just \"as-is\"\n. Why over the top? If it's a \"per entry\" setting, it practically has no \"default setting\". Might be possible to change it from preset to a checkbox \"defaults for entry\". But that just makes the user experience a bit complex, at least that's what I think.\n. fixed in master. Entries now can have a separator generator setting. The UI has loads of potential improvement, but should work for now.\nHow to use it:\n- open the password generator for an entry\n- check the \"use defaults for selected entry\" and hit \"set defaults\" button. Now this entry has special defaults\n- if you want to remove the special settings, press Alt, \"set defaults\" should now change to \"reset\" and you can remove the settings for this entry\n. This is a clash of two use-cases I would guess. What's if someone just wants to quickly use the generator with some settings he/she feels got with today (to put it simple) but without \"polluting\" the defaults? If the defaults would get set automatically you'd lose them instantly without any means to recover them.\nIt's debatable whether this is such a bad thing but for me it would be a bit annoying. Might as well use a global setting to change that. But this then opens the door to a lot of questions whether a settings needs to be present or there should be none and the default should work for (most) people.\nProblems, problems ;)\n. Duplicate of #171\nOS X has keyboard shortcut customisation built in. No need to replicate this in the application.\n. I do not know who much this gains when we will switch to 10.9 deployment target. As then Xcode compiles the image catalog into a binary format. But anyway :)\n. I'd like to add a real name to the contributors, if you're willing to give me one I'd love to use it. Otherwise I'll just stick with your Github profile name (and link to it) if you are not willing to reveal the real you ;)\n. As you wish\n. I'd gladly merge but please make the resources available (preferably as a folder with png images with the naming @x resolution naming). And I think you're missing some resolutions.\n. Might I ask for a real name to reference you in the contributors? If you're not willing to I'll just stick with your github profile name.\n. Are you using 0.4.1? If so, this behaviour is known and fixed in master. If not, then master has a bug and you can reopen the issue.\nDuplicate of #118\n. I did merge the fix but will take a closer look as this seems to be a broader problem. \n. Take a look at the milestones. You see that I'm - as always - behind with the release but 0.5 will get released this year.\n. I wanted to use a special accout to get travis integrated, this however would mean to move the repository to an organization and that is something I'm not really keen since it will break a lot of old links.\nRegarding automated release builds - sparkle requires me to either sign the application with my developer id (which is not possible via travis as far as I know) or to sign the updates with my private key generated by sparkle. If this has to work automatically the privat key gets exposed making the whole process useless. Or am I getting something really wrong?\nAnother solution might be to just use this for nightly builds that anyone can download and properly signed releases will get vented through sparkle updates.\n. Since I do not plan to support Cocoapods and Carthage works well, it'll close this one. Sorry for the long wait and final nope, but thanks for the effort ;)\n. @lenucksi Thanks for the info, I did know this but I wanted to make a clean cut since this pull request aims for CocoaPods. \n. I'm really loving the idea but for me there are some work-flow issues to be cleared before moving to this method:\n1. I use custom forks for Sparkle to set \"Skip install\" in the Project. You're referring to the offical pod, right?\n2. I'm always changing stuff in KeePassKit and some other submodules I forked or created. If I would switch to a pod, I then would have to use separate clones to update the code base, bump the version number, etc. for all the dev-stuff is cumbersome as I cannot simply edit it all in the MacPass Project. This might be stupid simple and I'm totally missing the point and there is actually a simple soltution to make this work nicely, but I do not see it.\nIf you got any solutions to tackle those points, I'm fully sold on this.\n. Skip install is needed to archive properly as I used sub projects.\nSwitching to a workspace will fix this issue as far as I know.\nWhy external repositories? I try to extract basic stuff that is reusable hence the UI component. Also if anyone ever wants to build another tool reading KeePass files KeePassKit might be useful. Those were my thought extracting these two as separate repositories. The rest results form creating forks to incorporate personal changes/extensions.\n. I'm about to include carthage support as this suits my style a bit more, so no plans on mergin this.\n. I'll try to reproduce this. Do you run on 10.10?\n. I'm currently hunting a bug on 10.9 that doesn't send the TAB key event properly. Everything else works so this might be related. Should be fixed and included in the upcoming 0.5 release.\n. @jamesrhurst you did test auto type on 10.10 since I'm still on 10.9 do you got any thoughts on that? My current observation is, that if i use `MPAutotypeCommand sendPressKey:modifierFlags:`` directly (e.g. after MacPass launches) I get the expected result. In debug and release. If however I use the Autotype workflow then tabs get sent as key code 0x5f instead of 0x30. Every other key seems to work. I've removed the dispatch call to let it run in the main thread, added a custom EventSourceRef to mask out any interference from the system but nothing seems to work. If you have any suggestions, I'll gladly take a look in that direction.\nThe only thing different from the workflow is that it's invoked via a hot key. \n. I even extended the pause, still not working. The Tab isn't registered system wide. Or rather it's registered as the completely wrong key-code which baffles me. What hotkey combination are you using, if I might ask?\n. Found the culprit. There was a serious logical error in MPAutotypeKeyPress execute that resulted in remapping all direct key codes. This seemed to work in debug but not in production and my guess is it has something to do with the string creation. But who knows.\n. @kitzler-walli  Can you elaborate if the bug still is present in 0.5?\n. fixed with 49c73af\n. No problem :)\n. You can share the error log from the console openly as my guess is there is no sensitive information in there. Are you seeing any asserts? What version are you running? If my mind seves correctly this might be a a bug that has been reported before and is fixed in master. I'm planning to release 0.5 today so you might want to try to reproduce the bug after the update. \n. Can you check if the logs mentioned in issue #196 correspond to your logs?\n. Sorry for not holding my promise. There is an error with Autotype not sending Tabs key events in the release built that I would like to fix until I get it out. I was about to pull the trigger until I stumbled upon this bug :(\n. Can you try this with the current 0.5.x release?\n. fixed this is related to #196 \n. Mh. I bet is has something to do with the signing :( and I was afraid this might happen. I did a test run on my end and it worked.\n. Can you take a look at the console for error messages?\n. Updater was trying to update a wrongfully signed application (at least that's my guess from talking with you)\n. What noise? :P\n. Edit: you beat me to it :)\nA new database should be generated with no expirations. If you see this behaviour, got to the File > Database Settings > Tab: Advanced. There are two check boxes that you can use to disable this.\n. As a note, this is caused by a bug of MacPass not properly initialising these values in earlier releases. But since there was never any UI that warned you about it, no one actually noticed. Until now, when it screams in your face.\n. Dang 10.10 bugs :(. I'll take a look.\n. Are you able to built you own version? If so, can you check if it's fixed with 7fd1aa43ba3176e4077ba0a105b975ff8872d32a\n. Working with a48f323e6463f94f89ded4c50ab86bd5b0486887\n. UUIDs now have a field in the general tab (bottom) since ce49478\n. No direct answer to emails, so Apple Legal Issue Content Dispute is issued\n. That's exactly what I did tell them. They can charge even the insane 18\u20ac for it as longs as they do not violate the license. I did not buy those two this time especially since the 18\u20ac just for \"completeness\" is a bit to much for my taste so I wasn't rambling about not having access to the source code, which I clearly have no right to, since I have no license. Anyway. I hope this gets resolved. Otherwise I might end up buying them both just to add a note as a review.\n. Seems to have been removed from the store. On to the next one ;)\n. Contacted.\n. No direct answer to emails, so Apple Legal Issue Content Dispute is issued\n. I just took a look at the US Store. Version 1.0 is online since July 2014 and has some nice ratings. So yeah for me. Still online. Trying to escalate it further with Apple Legal.\n. Legal consequences if the copyright holder would press for compensation. And since I'm not really fond of pissing people off and try to respect the work of others it's out of the question to \"borrow graphics\" ;-)\nAnd then there's the not so slim chance the graphics aren't correctly used in the first place. Panic's Transmit Truck comes to mind.\n. @tflo :+1: \n. MacPass did initialize the database settings wrong in 0.4.x\nTake a look at #269 to fix the issue. \n. Duplicate of #269\n. This has been reported before and is due to responder chain changes in 10.10. Although I thought I had implemented a workaround for this already. Need to check. Fix will be included in the next release. \n. I cannot reproduce the bug on 10.10.1 and MacPass 0.5.1. And what do you mean by \"weird looking\" expires on?\n. Mh. Strange. Have to try to get this to be reproducible as here I do not see the behavior. Regarding your comment. MacPass is a Keepass clone hence I have to try to support all features. And as it is, Keepass has an expiration date on passwords so MacPass allows you to set it.\nI'll sprinkle in some debug information in the next release so you can give me feedback on that.\n. No need, as a fix should be present in 1729a9dcf177732958472c2af9c5e559ebe8809a\n. @yarongol You're correct in your understanding of Autotype. There is however now visual guide if auto type is initiated and has not found any matches.\nWhat you could check out to clarify if auto type is working:\n- 0.4.x did wrongfully store a bad default auto type sequence {TAB}{USERNAME}{TAB}{ENTER}. Use File > Fix Autotype to clear those out. The default should be {TAB}{USERNAME}{TAB}{ENTER}\n- create a new database, create an entry.\n- set the title to \"untitled\" and enter a username.\n- now open e.g. TextEdit and open up an Untitled document. Press the hotkey and you should see the username, a tab and the password, and a return being entered.\n- you might add a copy of this entry and redo the steps again, now you should see a prompt that ask you what entry to select for auto type. If none of this works, debugging is needed (see below).\n- the auto type key stroke is editable. Just click in the text input and press and hold the shortcut you want to use. The shortcut hast to have a non modifier key.\nFor debugging:\n- go to MPAutotypeDaemon.m and set a breakpoint on line 111 in _didPressHotKey. If you get to this, at least the hotkey did register. After that you can step trhoug the code to see where the lookup fails.\n. Another note. Autotype currently only looks at the title. URL, Host or Tag lookup as Keepass does it aren't considered yet.\n. The window title works too in master as editing is working now. This is will be introduced with 0.5.2 in the binary release. \n. Thanks for the clarification. Regarding the custom attributes not being evaluated, there was a bug with lower/upper case lookup but it should actually pick them up in 0.5.1 already. I've found and fixed some bugs in master so if you're able to check that out and test if it's working, that'll be great. Another thing that did not work properly was the command lookup for lower case special key presses. My test case only covers lower and upper case mixup in placeholders ;)\n. This might be a bug from trying to roll out repetitions. Keepass allows you to do something like this {TAB 3}. MacPass normalises this to {TAB}{TAB}{TAB}. So a custom field with a blank might have the described effect.\nAnd I just checked Keepass. Seems that repetitions are only valid for key press commands. Oh well. There's some work to be done. Nice catch!\n. Sadly the hotkey registration seems a bit flacky. Or at least there are some edge cases I'm not handling well. What you can do to visually get a clue if the auto type key shortcut is actually working is lock the database and then activate another app. Then press the hotkey. MacPass should come to the foreground and present you with the lock screen.\n. And again, Autotype is still very immature. There are so much features Dominik did add to this in KeePass that it's quite a job to just get on the same level. And some are actually quite tricky to get to work right ;). Not an excuse. Just an attempt to explain the weird stuff.\n. @miscreanttoucan any luck trying auto type with a locked database?\n. @miscreanttoucan You might have the wrong impression how auto type works. Keepass supports two modes. The simple Autotype and the more sophisticated Global Autotype. MacPass currently only has a rudimentary version of Global Autotype working. If you want to dive in, take a look at the Keepass Autotype Help\nTo summarize (and perhaps explain your observations) the process:\nYou do\nopen MacPass and enable global auto type.\ngo to a login page in your browser.\nput the cursor in the user text input and press the Global Autotype shortcut.\nMacPass does\nMacPass tries to find entries that match to the current situation. How? When Autotype is activated, the window title of the front most application is used to search through all the titles of entries and all window associations. An entry matches, if the window title contains the entrie's title. (e.g. you got to www.amazon.com and your entry title is Amazon). A window association is more complicated, as they allow for simple wild cards or even regular expressions. If only one match is found, the Autotype sequence from this match is executed. If there are multiple matches, Autotype shows you a dialog and then exectutes the one you selected.\nThe simple example I gave with TextEdit works the same way. The Untitled document results in a search for any entry that contains \"Untitled\" in it's title.\nIf you see MacPass being activated chances are, there is no match and hence nothing happens when you press the shortcut.\nNote\nAnother problem might be, that MacPass is unable to determine the title of the window of your browser. What browser are you using?\nA simple test that works for me on Firefox, Safari and Chrome.\n- Create an entry. Set it's title (NOT username) to google\n- Set it's auto type Sequence to let me {TITLE} that for you{ENTER}\n- lock the database\n- open your browser and go to www.goolge.com\n- click in the search field\n- press the Autotype hotkey.\n- unlock the Database when MacPass activates\nAfter that, your browser should be put to the front again and the search field will be filled with let me google that for you and then submitted.\n@yarongol \nI've come around with a solution for the problem of spaces in custom field names. Currently MacPass even can work with receptions of placeholders since it's a generalised approach. That did iron out some kinks. Another thing is, MacPass plainly rejects Autotype sequences with wrong bracket combinations. The only two accepted \"non-matching\" commands are {{} and {}}. Internally I map them to {CURLYLEFT} and {CURLYRIGHT} that results in valid bracket counts.\n. Nice. Than that's correct. The version your using is not implemented yet as I wanted to get the complicated one working first. The simple solution via Ctrl-V on windows should be added as well in MacPass, that's a given and if the Hot key invoked one works, the other one is not that hard to add. Haven't come around to it yet as I like the other one better :). Tastes. Glad we could sort this out (regarding the why and why not). On the bug - I might add some more log messages so we can track them down more easily.\n. Done. #288 \n. The auto type code had a lot of bugs and misbehaviours fixed, so this might be a result of them. My tests work, guess I should add one that tests for lower/upper case in passwords :)\n. I plan to add the setting to specify the default auto type sequence. Until then you can edit the sequence in the root group. The default behaviour is to inherit the sequence an thus all new entries and groups will get the one from the root group.\nI will however not change the default to comply with the Keepass' defaults.\n. I tend to forget that MacPass is used by users not knowing KeePass for windows and the features. This yields the missing documentation for a lot of features of MacPass.\nI starte a wiki page for Autotype to explain the concept and will try to fill in the blanks ASAP.\n. @akcasoy I have encountered some cases where the hotkey is not triggered correctly. Sometimes enabling and disabling global autotype fixes that. I should investigate this further. MacPass of course must run but the database can be locked. If you invoke autotype and all databases are locked, MacPass will print you to unlock at least one. If you do not unlock the database containing the required entry and another one is unlocked, autotype will fail as it's not asking for all databases to be unlocked. MacPass always reports feedback when autotype was invoked even if no match was found to be able to see if the keystroke worked. You do not need to add the hot key to the system preferences.\n. @michaelblyons you are right, the match is B. The last sentence was wrong. For the available keys you can take a look at the KeePass website. Not all are supported but quite a few. I tend not to try to replicate the KeePass documentation but it is quite useful to know what is actually supported and what isn't. The command to wait is {DELAY <seconds>} and MacPass should support it if I did not break it ;-). Feel free to proof read. I'm happy about any help that is offered! The wiki page should be editable for anyone. \n. @oehm-smith might be but I try to stay compatible with KeePass and KeePass matches in that order.\n. There where numerous bugs with autotype and those should be fixed in the current master. Those fixes will be available in 0.7 as well.. 0.7 is coming eventually. I will release 0.6.3 within the week to fix major bugs but without a complete 0.7 feature set. \nAutotype works for any app ( via context menu or shortcut when MacPass is the front most app) as well as global Autotype (hotkey based autotype when MacPass is in the background) since it relies only on the window title of an app. . There have been more fixes to the Autotype system regarding wrong windows titles (focus proxies, and the lot) that should make the system more robust and usable. Could any of you try the continuous build to see if this fixes the reported issues?. Thanks for the feedback. You should be able to use the continuous build as it represent the current master, so no need for a custom build.\n\nThere were a couple of hiccups with the hotkey registration. I have to check and see if I can iron out the one you reported as well.\nAutotype is a generalises approach for matching entries based on window titles. This way you get App names, Document names or URLs or titles for websites since the browser most of the time sets the window title to the html title attribute. What you refer to in the settings is a misunderstanding and I just updated the labels for the settings. Those settings have no effect on what is used from a browser window. MacPass only sees window titles, nothing more. Those setting refer to the field of an entry. Normally only the title attribute is matched but it's adjustable via the settings for your needs. The system gets more flexible if you also include window associations, as those allow you to add custom criteria for special cases and support wildcards and regular expression matching. If you want to get into the details of the autotype matching system, you should take a look at the documentation for KeePass.\n\nIf you got any questions, just shoot.\n. I just checked for you first observation and am unable to see this. My steps:\n\nDisabled Autotype\nQuit MacPass\nStarted MacPass\nEnabled Autotype\nPressed Hotkey\n-> System worked.\n\nDid you unlock the database? If the hot-key is pressed while no database is unlocked, MacPass should pop to the foreground and you have to unlock the database.. @roland-d  Considering your issue: The default shortcut for autotype (not Global autotype) is Alt-Shift-A so this might clash.. I'm closing this since the actual issue seems to be fixed.. There are no plans but it should be done nonetheless. I would use the wiki first. Put a link to it in the Readme. The website has a fork that is planned to take over once the fork is mature enough. It's more in the line of a product website so the documentation might be included there as well. Wiki first is fine for me though. Feel free to contribute, the pages should be publicly writeable.\n. I've seen you did add some stuff. I took the liberty to fill in some blanks\n. And thanks for the effort! :)\n. I'm closing this in favour of more specialised issues regarding documentation. The ground work is set.. Thanks for the suggestion. KeePass offers something similar as it allows you to go to an app, put the cursor inside an input field. Then you go back to KeePass and select the entry you want and start auto type for via a context menu or shortcut. KeePass then just brings back the app you used before KeePass and inserts the data. This sounds like a comparable solution. I was going to mimic this to stay \"true\" to the original. Your suggestion sounds like a nice alternative. \n. Please consider taking a look at closed issues to see if the problem is already know and/or a solution is present. Duplicate of #269.\nTL;DR; Bug in MacPass 0.4. set defaults wrong. Dialog in 0.5. was added and now shows up all the time.\n. That's something I've been pondering on for a while. The current architecture heavily relies on single selections so it might take some time. But your use case of drag and drop is one of the rare instances where multiselection is badly needed.\n. With the exception of drag&drop it should work as of c47c24e3ca96b3ee125e05f9e819771e237f9de6\n. I'm closing this and leaving drag and drop support as a separate issue.. Drag and Drop tracked here #515 . You can. Just open the generator. Set up your defaults and then press \"Set Defaults\". Done. And any newly created entry uses those defaults. If you need them to be on a per entry basis (e.g. for special policies for services) you just tick the box \"use for entry\" and then hit \"Set Defaults\" again. Then this is used as default for this entry only. If you want to clear entry based defaults, you press the ALT and the set default button turns into a \"Reset\" button to remove the entry based defaults. This should be something written in the documentation, I guess.\n. Should be easily possible. MacPass starting to get a bit of a settings-monster :)\n. That's a buggy workflow. Thanks for pointing that out. Needs to be fixed regardless of the feature. \n. @auge Autosave on locking is added in the current master.\n. @jeffmcneill autosafe on locking as well as modification notification is implemented and should work in 0.6.2 already.\n. Current master uses Autosave functionality from NSDocument so every change that is registered via the undo manager will trigger a save. All changes to entries and groups should therefor be stored immediately. There might be some kinks to work out. The .lock file is not monitored so MacPass will modify a file regardless!\n. A sort-of-working version is done in 692ade211079c76c12d0417988bd00aea08c58a2\ncorrected hash, see comments below\n. Right. I did move up two commits while referring to it. 692ade211079c76c12d0417988bd00aea08c58a2 is the correct one.\n. Nope. Not gonna happen.\n. That's classic synch-tool territory.\n. I do not want to sound like an ass, but just think about the UI. How do you think this should be done? And it would work so much against the Document based Architectuer that it would result ins a lot of custom code. That's nothing I would consider vital. Can this be done via an Automator Script?\n. Take a look at Folder actions. That might do the trick.\n. Okidoki :) If you're more into GUi tools, take a look at Sync Folders. It's advertised to automatically sync changes. But that's just what spung up on my instant google search for the task.\n. Odd one. Are able to built a debug version from the master (or use 0.5.1 tag to test the release code) and test if the crash still occurs? If so, you should get a better crash log as the debug symbols aren't stripped.\nThe only real guess is some funky stuff going on with stored hotkey data. Did review the code and did not find any obvious reasons for this to occur.\n. Please reopen the issue if this crash still exists in 0.6.2\n. Not that simple. Target is not wired as its set to first responder. Under 10.10 popups do have a different responder chain setup. This is a issue for some other stuff. Should be fixed with those changes too.\n. Scrap that last comment. I did notice there where some fuck ups after converting the xibs to a higher XCode format. Results where exactly what you describe.\n. You can unsubscribe to this via the \"Unsubscribe\" button in the notification section in the right hand side menu on the website. No clue if this can be done via email ;)\n. Can you add the .ai files as well? It would be nice to have the open format not just the finished PDFs?\n. Errr. I know it sounds like a wise-ass but if you save all the files with editing capabilities (has nothing to do with password protection) they are bloated. Just save the .ai files and stripp every editing capabilities form the pdfs. Illustrator saves the \".ai\" content inside the PDF to preserve it's editing capabilities. Can I ask what version of AI you used for the files?\n. Mh. I just checked, they are quite small so it might just work this way. But the comment about editing != password protection still stands. I'll merge this asap and try to include the icons. Thanks again! This is a huge contribution!\n. Mh. As far as I understand it, Illustrator stores the complete .ai file inside the pdf and thereby can re-read it. This might create bigger files. PDFs aren't editable by design. It's possible but the goal is reproduction, not editable content. But that's just my rusty knowledge. Might have changed over time.\n. I did not say that .ai isn't able to interpret the paths. PDFs with vectors can be parsed. But you loose a lot of capabilities compared to the original file. Just a simple example: Create a compound path, save it with and without editing capabilities. If you load both files, you see the one without editing capabilities will just be the result (the compound path expanded), the other file will still have the single parts of the compound path and the operation. Both are editable, but the PDF is ... well ... stripped :)\n. I'm sorry if I did not make myself clear enough. You're right about the editing but I was referring to the complete .ai file and structure, not just the visible parts. Thats another nice example. Just hide a path. If you save the pdf and reopen it, the path is gone (as it was hidden, and hence not included in the pdf) if you open the pdf saved with editing capabilities the hidden path is still there.\n. Cocoa can render images supplied in grayscale (or b/w) in a template fashion. That way you get effects like emboss, highlighting, shadows for free. That's why I chose the b/w approach. PDF is the simplest way I know of to supply vector formats for Cocoa. There's no native method to load SVG files.\nSimple answer - easy to load as vectors in Cocoa :)\n. Icons saving and loading should not have high impacts on the size. This is a common observation in the Keepass community. Files are compressed with gzip on save and the routine is based on system level libraries. Those libraries tend to have different compression levels. I for example use the default compression level settings so this might be the sole reason. What you can do is try to save the database without any compression. This then should result in comparable file sizes.\nAnd thanks for the praise. Please be cautious with your usage of MacPass as it's still alpha software and there are plenty of bugs left uncovered.\n. @harizvi  The main problem one might encounter is that of a missing history on entries edited with MacPass, other than that, everything should work well.\n@HomeSen thanks for the praise. Current development hast stalled a bit but I hope to get the time to at least ad those \"soon to be done\" features ;-)\n. @KFDCompiled nice catch, if you'd like, file the issue separately, even better if you put it on KeePassKit as this is probably the cause of the error!\n. I'm not really convinced this is something that's needed. What's wrong with Command+F and then Type? You loose the shortcut, but that's all.\n. Search does respect the \"search\" settings for groups, MacPass did not set the \"do not search\" on Trashes  but does so now if it generates the trash. If the trash was then again set to be included in search, it's included again.. I'm considering this as fixed since KeePassKit correctly disables search for the trash so those items get excluded from the search results. The current implementation has nothing to do with Mac OS behaviour. I just haven't had time to add it. Will be done eventually.\n. This is present in 0.7.x. Nice find. Never noticed that.\n. And might I add - nice discovery :)\n. Thoughts!\nYour observation on how MacPass holds data is correct. If you open a file, MacPass loads the data and shows you the lock screen. This has the side effect that no file system changes will be propagated.\nThere is a issue for the auto-reload as well so auto-save and auto-reload are more or less something that should be done. Watching the file for changes is rather easy, what makes this currently a cumbersome experience is the missing synchronisation feature. Keepass can synchronise two databases and therefor just import changes from the file to the open database. Another difference between Keepass an MacPass is the locking behaviour. KeePass saves the database when locked. I might move to that workflow as well. Currently MacPass just encrypts and stores the encrypted data in memory. This has the nice benefit, that you will not overwrite a file unless you explicitly save it. The bad side effect is that you live in your own world and no changes are visible to the outside and vice vera. It's debatable whether there should be a forced save before locking.\nUntil synchronisation is implemented, the only way to get this to work is:\na) reload the file if the database has no unsaved changes in MacPass - easy case (and probably yours)\nb) show a dialog and ask the user what to do.\nIf synchronisation is there, the b) should be changed to\nb) try to synchronise the databases. If the synchronisation is conflict free, just use this database. If conflicts arise, ask the user what to do. Basically this is bringing up the UI for database synchronisation.\n. I'd go a bit further and implement a file watcher and ask the user what to do. It's not that much more work than the CMD + R shortcut and this has to be done anyway so there's no unnecessary coding involved ;-)\n. As of dd1322e224e0a44cbec20b32ac15b69f96bda86c MacPass now complains when the database is changed behind it's back. It's for sure buggy since there are edge cases that I might not have thought about.\nI did change the behaviour on locking to work the same way as Keepass, that is, store the file. This then makes reaction to changes simple, I i just reload the data silently.\nIf the user did not lock the database, a dialog informs about an external change. The user than can choose to keep his version or reload the file from disk. This then toggles the default \"revert to saved\" mechanism from NSDocument resulting in an awkward dialog for the user if there are unsaved changes as it states \"Do you want to revert\" which is a bit odd in this context but I did not want to reimplement all the already existing behaviour. When syncing is woking, there are other options already discussed here.\n@miscreanttoucan \n\n\nSave the database onChange\n\n\nWorth a setting (default to off), Keepass triggers might allow for something like this as well, but I have no plan to implement triggers. Might be useful as an plugin extension point\n\n\nWhen locking the DB, close out of it, so that when you sign back in, it's the same as opening the DB. (This way, if the DB file has changed, you'll be opening the latest version.)\n\n\nDone in dd1322e224e0a44cbec20b32ac15b69f96bda86c\n. I'm closing this since the feature is present. Bugs and enhancements should be reported in separate issues. \n. Only present in current master, so you have to build your own version.\n. If you think about opening an issue, please take the time to look for duplicates. I get that you do not know the project like I do, but this one was a bit too ease since a search for shortcuts comes up with a nice list all pointing to #171\nTL;DR; OS X has built in keyboard shortcut customisation so there's no need to duplicate the behaviour in MacPass\nDuplicate, hence closed.\n. MacPass respects them as in displays and stores them. But currently there's no UI to edit them. Since we now got all the nice icons created by @JoannaOlsen I might invest the time to finish up this corner of the app and add custom icon support.\n. Did this error ever happen again?. I'll close this for now. If anyone encounters it again, it'll sure pop up as a duplicate.. @DominusExult  I think you might be off. @gbernady refers to the white text on a light grey button. \n. I guess you mean that all custom fields in Keepass(X) are shown as multi line inputs, not so in MacPass.\nThis was a simple UI decision in the past and I have been pondering about the issue as well. Goes so far as to add lines when you break them in the input field. I think there needs to be some more time spent on how the UI for custom fields works.\nAnd since it shouldn't be such a big change, I'm waiting for you pull request :P. Sorry, couldn't resist :)\n. Duplicate of #27. . If you take a look at the 0.5 release notes, you'll see that KeepassHTTP is not enabled. You can use @jamesrhurst  branch to try it. Also, as noted, 0.6 will feature KeepassHTTP support\n. Keepass does not use the URL as main lookup, but can be configured to do so. Currently only the title is used, but there's been work done to change this to the way Keepass does it. Will be included in an upcoming release. Might even be in a 0.5.x release.\n. Currently MacPass only looks for the front most window and it's title. If an http authentication sheet is displayed, my guess is it's the front most window and has no title. I've encountered this too (1Password 4 e.g. does not handle those as well as far as i know, 5 might be better, haven't tested it yet). If it's possible for me to get a parent window I might just fall back to that title but this might yield problems in other scenarios. Granted though the http-auth one might be the most frequent use case for this.\n. To confirm my suspicion I just tested this with safari and it works, as I throw away any windows without a title and the http-auth window has not title MacPass falls back to the window title of the main window an then should find a match.\nCan you confirm it's not working with Safari? Other browsers might be different. Will see what comes up there.\n. @chuenniger did you have the time to check if my observations are correct for you as well?\n. @DrSAR thank you for the analysis. The \"no match for\u2026\" suggestion is a good point. Will be added.\nSince auto type is designed to work only via window title and nothing else, your wish will stay a wish. But since this is a browser issue the KeePassHTTP solution might work. I have no idea if the browser plugin can handle the auth-windows but this might be worth a try.\n. I'm always slightly embarrassed that those typos are a thing in the age of omnipresent spell checking. Thanks :)\n. Since I'm still on the dark side (read 10.9) and should be upgrading soon to 10.10 I'll take the time to investigate once my system is running on the bleeding edge.\n. I've never encountered the issue neither on 10.10 nor on 10.11 or 10.12 so I think it's save to close the issue. . Fake vim mode :). Well, I'm all for system integrity and \"don't reinvent the wheel\" and thus I'm very in favour of arrow key navigation. There might be a time when I'm willing to add those shortcuts but for now I do not think they are of high priority, given I'm still far behind on feature parity with Keepass ;).\nDo not read this as offensive. But I'm a bit of a hooligan (a non offensive one ;)  when it comes to conventions and on this topic I'm highly on the let's do it as every one else does it side and far away from the  the I'm a pro user, i want cmd+q to let it rain unicorns and not quit the application, because, that's what i want way of doing things. \n. Nice but no. At least not now :). Feel free to implement it. As far as I can see it's \"just\" porting the perl module. Maybe someone already has one in c/obj-c/swift?\n. It should be an extension point for plugins.\n. I'm all in favour since it's a rather simple task. The UI needs to be good for adding/removing the icons but the rest ist a no brainer. Since @JoannaOlsen has contributed all the icons I will try to add the feature with the updated icons.\nAnother note: Keepass allows for custom data and since the icons are all 16x16 i was pondering with the Idea of adding full sizes (with a reasonable maximum size) icons as well and load them. This way MacPass can display the full sized versions instead of those ugly small ones. Problem with this is though that if someone edits the icons outside of MacPass I have to manually remove the special MacPass version since it might not be valid anymore. But for first-class MacPass users this might be of some benefit.\n. There's an issue related to this request: #132\n. The missing display of custom icons is a regression in 0.6\n. @tpluscode This bug is fixed in the continuous release;. It's not pushed yet since there are some minor issues that I need to iron out.. My current approach for this feature:\n\ndragging an icon in the inspector icon will use it as a custom icon\ndragging an icon onto the icon selection popup will add it as a custom icon\nthe download button in the icon selection popup will download the websites favicon as a new custom icon.\ndragging a custom icon out of the icon selection popup will delete that icon from the database \ncustom icons in the icon selection popup have a context menu with one entry \"delete\"\npressing alt while the icon selection popup is open will show remove buttons on all custom icons and a click on those will delete the icon\n\nI've already implemented 2. and 3. and now are onto 1. 4. 5. and 6.\n. 1. and 5. are working as well so basic functionality for adding, setting and deleting custom icons works.  That leaves 4. and 6.. I've decided to leave out 4 and 6 for now since the functionality is there. Further improvements should be documented in a different issue.. How about resizing the sidebar to fit the labels? As I said on other occasions, I'm a real fan of let the app look like the system wants it to, hence I'd like to keep all visuals as close to the OS as possible. What might be nice is a setting to hide the icons, but changing the font, not gonna happen (at least not for a long time)\n. That's the currently missing synch feature. It's on the todo list. But don't ask me when it's done ;).\n. Duplicate of #83 \n. Since search involves typing, why not add a \u2318+F before and you are inside the search field?\n. Just try \u2318+F, it works already. As for the settings for a default, true, but this might lead to a dip-swich-hell :-)\n. I know the keyboard navigation isn't pristine. Just a side note - using the mouse might be quite quick. You can double-click on columns to copy them to the pasteboard\n. Thank you!\n. Thanks!\n. Never really did think about that but a very valid point.\n. How do you consider this is handled? Should the list be remembered only for a single container and only on the computer it was generated or should it be stored inside the container? If in the container is what you have in mind it will use some special group. This however will lead to custom data stored in the password database.\n. That doesn't really answer my question. 1Password has a password history for entries - do you mean that? Or do you mean 1Passwords stores all generated passwords in a separate list? It did that if I remember correctly but doesn't anymore. Or it's a settings.\nRegardless - I'm using the KDBX file format so I cannot arbitrarily change anything and have to live with it's limitations. That means - A password history is possible within the format but only if you save any changes. Other things might be possible but if you want them to be stored in the database it gets rather hairy. If you on the other hand only want a local password history, that's possible e.g. via the keychain to securely store all generated passwords.\n. If you enable QuickLook in the settings, you can also open the files in MacPass. This is however a security risk as I need to store the files openly for the Quicklook Daemon to be able to read them. The will be deleted when you close Quicklook or quit MacPass. But the files are there for everyone to read if someone watches the temporary folders. I was pondering with an internal editor/viewer but skipped that due to a rather low priority. Nonetheless it's a nice feature and surely worth implementing.\n. It's a bug not a feature. A known one too, fixed as well but not released as binary. Please take the time to search for closed issues before reporting a new on. I know it sounds a bit nit-picky but it makes me happy if you try :-)\nDuplicate of #277\n. Do not take it the wrong way. It's a line everyone that reports a duplicate get's. It's awesome that so many use MacPass. Never would have guessed that the tool would attract such an amount of users. And not only attract but not scare them away right after that!\n. @gr8tushar Just a guess, but do you mean the database gets locked or the software crashes?\nIf you do not want the database to lock automatically, you can disable all those in the settings. But I highly discourage this - at least leave the \"lock on sleep\" option on.\nPrepopluation for keys is, as @DominusExult pointed out already there, you need to enable the feature but be aware of the consequences. You then have a mapping of kdb file to keyfile in your settings. Anyone able to look those files can get those mappings.\n. If you swap 1. and 2. it should work. You have to unlock the database to store the keyfile. MacPass does not keep the keyfile and password it just loads the data and generates the key internally and has no record where the created data came from (neither the plain password nor the keyfile contents is remembered)\nA side note: The keyfile will not be stored if you do not have a password set, that is, if the keyfile is enough to unlock the database!\nEdit: To clarify - set the preferences before you unlock the database.\n. @gr8tushar that's exactly how it came across. If the preferences is set and your database has a password and a keyfile the keyfile should be selected already. If not, then this is a bug.\nTo clarify - the key file is NOT stored if your database has no password, as this compromises everything.\nAs a side note - having the key file at the same location the database is at is useless. You do not gain any security with that, as anyone able to obtain the database get the key as well so your database is only as secure as your password. A better scenario would be to store the key file on a thumb drive and only there.\n. I'm not going to add the ability to store key files without a password so I'm regarding this issue as resolved.\n. @FrankKooij your use case should already work. If you enable \"Remember Key Files\" MacPass will \u2013 as you suggested \u2013\u00a0remember the location not the contents of a key file for a specific database. The mapping uses the file location so if you move the database, the mapping is not correct anymore. The mapping is updated every time you successfully unlock a database with a password and key file.\n\nYou can take a look at your current mappings\ndefaults read com.hicknhacksoftware.MacPass RememeberdKeysForDatabases\n{\n    \"/path/to/database/Untitled.kdbx\" = \"/path/to/keyfile/Untitled.key\";\n}\nThis is obviously a security risk. A possible improvement is to hash the file url for the database\n. Nope. Macpass supports both formats. It's a bug. But it's quite hard to debug. \n. @georgexsh I know it's sensitive Information but my only guess right now is you're using Chinese characters as a password, I'll try to reproduce the error on my side and if successful try to fix the issue.\n. @georgexsh can you take a look at the system log to see if any assertion prevents MacPass from proceeding? You report that nothing happens - not even an error message - suggest a low-level error.\n. Nice one! I should try to catch that error a bit better and present the UI for it!\n. The error from the outlet is a bug that was introduced when I converted .xib files. Must have missed this one since there were several in other files which I did fix. But it's for the accessory view in the open dialog and has no impact on the decryption problem.\nIt would be nice though why your restored file works and what was broken in the other one. Did you make any changes? If so, there might still be a bug lingering around that caused this behaviour.\n. I cannot reproduce the bug on the current master. Could you be so kind and take a look at Console.app and try to find any log messages related to MacPass?\n. That's the indicator that the keepassHTTP Plugin is active. There's a settings key but no UI for it. Someone expected such a wish, I guess :P. I've not put any work into it as I wanted to get other stuff done fist, which takes longer than expected :(\nTry to run the following in your Terminal:\ndefaults write com.hicknhacksoftware.MacPass ShowMenuItem -bool NO\n. Can you merge changes from master and resubmit the pull request so I can simply merge it?\n. Thanks!\n. I did investigate this and need to convert using object controllers on binding to adhere to the NSEditor protocol since this is respected by the NSDocument save operation (it flushes all changes before a save)\n. The main edit sheet works now correctly. Also the database is saved once locked so nothing.\n. The current release ignores window associations completely. That's a correct observation :). But it's already working in the current master.\n. Keepass has native support for HMACOTP and I just took a look at the requirements for TOTP. I'm currently pondering over how the plugin API should be extended to make it easy to add those kinds of pluings.\nThere is the need for:\n- Autotype command resolving\n- Autotype command announcement\n- Help to enter special keys for attribute (this should actually be something MacPass does natively)\n- Arbitrary actions for entries (via menu items). There's been some progress on KeePassKit to support HMACOTP as well as TOTP. Both aren't finalized and working but it's an item on the list. The rough roadmap is to include them in 0.8.. The group is a mirror of the database name. The root folder is a simple group. KeePass has a single root for the group tree. The kdb format did have an invisible unsaved root group and implicitly created it every time. Kdbx doesn't hide it anymore. So it's by design. You can freely rename them. \n. I've got multiselction for simple dragging/deleting/etc. working. Since multi-editing is a bit more work I'll might skip this in the first run!\n. Duplicate of #285 \n. I can reproduce the bug but a nice little something is that Keepass2 does not complain and opens the database without any problems. This might even be a KeepassX bug.\n. Since this was a problem on another occasion I did suspect this. I have no setup to debug KeepassX yet so wasn't able to locate the exact spot. Can you point me to the empty uuid filed that KeepassX trips over?\n. Fixed in master\n. That's a missing localisation. Fixed in master\n. Nice-UI bug you found there. Restored windows might linger in some state where the UI wasn't fully updates on shutdown.\n. The references aren't evaluated at view but if you copy the data. If you use \"show deferred data\" on Keepass you should see the data evaluated combined with the reference string. MacPass does not automatically evaluate references at display. Copy/Paste however works. Although there's a bug in 0.5.1 that prevents the lookup to work on all fields. This is fixed in master where you should be able to copy any item. I should add an option to evaluate the contents on view as well.\n. Should work in master now.\n. That's a hard bug to track down without any specific information. Can you narrow it down by cleaing the database step by step? This way sometimes the affected entry/group can be identified.\n. Thanks!\n. Considered. It's just another dip-switch in the settings ;)\nWhat's a bit odd is why they should know it - if they want to use it, just double-click on the password field in the table and then paste it where needed.\n. I'm with you on this. I thought about a plugin system at the beginning but since this is my first big Cocoa/Mac Project I wanted to get it up and running first to see if it's possible.\nIf plugins should be made possible there needs to be a well defined API. And if MacPass is not in a state where everything is though out (as it currently is) such an API might be hard to get right. Plugins make adding more key provider (Twofish, etc) easier too so this is a very good approach.\nIf you're willing to takle some of the task at hand feel free to dig in and make suggestions. As the work of @jameshurst has shown, I'm very happy for every help on the \"core\" application I can get even more so with the current small amount of time I can shed free to spent on MacPass.\n. Regarding Swift - If we get to a plugin system then that's the best spot to use it as I'm not really into trying to convert my exiting codebase to Swift.\nA nice start for plugin architecture is Apple's Guide on Plug-in Architectures\n. I've just skimmed through the guide. It's actually not that hard.\nWhat I got in mind:\n- flesh out Notifications/Protocolls for what MacPass and KeePassKit is doing (e.g. willCreateEntry, didCreateEntry, willAddGroup, didAddGroup, willMoveGroup, didMoveGroup, you name it)\n- support custom Settings Tabs\n- support custom KeyProvider\nThe longer I think about it this might actually be quite simple iff we're not too hard on the APIs stability at first. The simple solution is just protocols and notifications all over the place. What concerns me a bit is that a plugin can wreck havoc on the database if it is allowed to have write access on the data.\n. Another noteworthy thing:\nShould there be an easy way for users to find and install plugins? Like a central web-hub? A interface in MacPass that discovers plugins? A plugin settings to add/remove them? Or just use archaic techniques like copying stuff to a specific location in the filesystem?! Drag'n'Drop plugin installation?\n. Well. I did start creating a simple plugin system. My current solution is working but rather fragile. There's a base plugin class for MacPass and any bundle using this class inside the application support folder gets loaded. There's a setting to enable code sing checks to only load signed bundles but nothing more. The bundle can link to anything inside of MacPass and hence can potentially break everything \ud83d\ude09. I'm currently trying to port the  KeePassHTTP fork over to work as a plugin. \n. Pushed to master. It's actually nothing more than a bundle loader. You can cause havoc across MacPass but it's a start.\n. With 0.6.x there's a release supporting plugins! But be aware that the current system is highly fragile!\n. KeepassHTTP seems a bit strange to me as well. We might try to move this over to the plugin MacPassHTTP\n. Good catch, waiting for you pull request :)\n. fixed in a26c7006069c6a9c0967a8b3d2d98a076c3b3423\n. thanks for the fix!\n. Merged locally, will emerge once my local changes get pushed\n. Solution one is fairly easy, the second one needs custom parsing. If you're up to it, just implement version one and open a pull request, it's definitely an enhancement.\n. It's merged, should we close the issue or keep it around if anyone wants to do the parser stuff? ;-)\n. I fully agree with you. Keepass and thus MacPass already have (sometimes I think) too much features and keeping things simpler is a good thing. What I though about while reading your commit is changing the whole password generation to use NSCharacterSet instead of NSString. Something like this:\nhttps://github.com/acoomans/Populate/blob/5afca6ff252a19f6a4144933ac60ae1fd99b88d7/PopulateKit/DataSets/Name/NSString%2BRandomized.m\nhttps://github.com/acoomans/Populate/blob/5afca6ff252a19f6a4144933ac60ae1fd99b88d7/PopulateKit/DataSets/Name/NSString%2BRandom.m\n. Should be fixed with the merged pull request\n. That's the system. Groups set the default sequence for all entries. This way you can change a bunch without having to set them individually. I just use the kdbx format an thus this is standard behavior. \n. I thinks it's bad to actually change the attributes in the group. It's a semantic that is provided by the setting as a trash folder. I'd go another way and judge exclude the trash while collections entries and groups for auto type or search. Don't get me wrong. I like that you try to contribute but I think this not the best approach. \n. The place that makes more sense to me should be in KPKGroup\n- (NSArray *)searchableChildEntries;\n. And\n- (NSArray *)autotypeableChildEntries;\n. Did you init/update all the submodules?\n77a7b53 refers to mstarke/HNHUI@108f4519a573c26610f7b7f69e72e4405ee420bd\nand that commit certainly contains the HNHTextView.m:\nhttps://github.com/mstarke/HNHUi/blob/108f4519a573c26610f7b7f69e72e4405ee420bd/HNHTextView.m\n. Good catch! The MPDocumentWindowController handeles the password settings but if one closes the app, the message gets send directly to the document that just tries to save itself and fails. Need to move this code to the document then.\n. Fixed in current master since autosave on first change request eh user to enter a password\n. Working is a bit overstated - it's a item that needs to be done to get a full features app :)\nAlso this goes right along the lines of #300 \n. The checkbox is mandatory because no password is different from an empty string as password. KeePass generates keys in such a way that this distinction is needed so I cannot get rid of the check box.\n. A setting might be a bit over the top but disabling by default sure seems like a good idea. \n. I've thought about this too a while ago and came up with the idea to add a search field in the groups split view, so you can filter just groups, then click on the one you like and on the right side you'll get the entries as always.\n. A solution might be to add a new column at the beginning that \"sorts by custom order\"\n. @sdellenb you can selectively delete the sort descriptor for the table.\nif you take a look at the settings, you should find a key \"\"NSTableView Sort Ordering v2 EntryTable\".\nIf you run on 10.11 or below this key might be a bit different but it should at least contain something about sort ordering of EntryTable.\nbash\ndefaults read com.hicknhacksoftware.MacPass\n{\n    \"NSTableView Sort Ordering v2 EntryTable\" = <62706c69 73743030 d4010203 0405062f 30582476 65727369 6f6e5824 6f626a65 63747359 24617263 68697665 72542474 6f701200 0186a0ab 07080f18 191a1b1c 222a2b55 246e756c 6cd2090a 0b0e5a4e 532e6f62 6a656374 73562463 6c617373 a20c0d80 02800880 0ad31009 0a111417 574e532e 6b657973 a2121380 038004a2 15168005 80068007 5a496465 6e746966 69657259 41736365 6e64696e 675f1017 4d505469 746c6543 6f6c756d 6e496465 6e746966 69657208 d21d1e1f 205a2463 6c617373 6e616d65 5824636c 61737365 735c4e53 44696374 696f6e61 7279a21f 21584e53 4f626a65 6374d310 090a2326 17a21213 80038004 a2271680 09800680 075f101a 4d505573 65724e61 6d65436f 6c756d6e 4964656e 74696669 6572d21d 1e2c2d5e 4e534d75 7461626c 65417272 6179a32c 2e21574e 53417272 61795f10 0f4e534b 65796564 41726368 69766572 d1313255 41727261 79800100 08001100 1a002300 2d003200 37004300 49004e00 59006000 63006500 67006900 70007800 7b007d00 7f008200 84008600 88009300 9d00b700 b800bd00 c800d100 de00e100 ea00f100 f400f600 f800fb00 fd00ff01 01011e01 23013201 36013e01 50015301 59000000 00000002 01000000 00000000 33000000 00000000 00000000 00000001 5b>;\n    \"NSTableView Supports v2 EntryTable\" = 1;\n}\nYou can just kill this setting via the following command (use another key if you found a different one in your settings)\nbash\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Sort Ordering v2 EntryTable\"\nA side note: Deleting the preferences file does not always have the desired effect. For a long time now (I would guess since 10.7 or 10.8) the defaults system uses a database an other \"magic\" stuff not the files. The files are just a mere snapshot but not a source. If you really want to modify anything you should always use the defaultscommand. Sometimes deleting the files works, sometimes it doesn't.\n. Since 1ae41df2cebd1cf0b7f8df25e69cd9454540f535 there's a \"custom sort\" column. It allows to sort ascending and descending in the order the entries are stored internally. It's rough but works as expected. Reordering entries though isn't supported yet.\n. There is a custom sort column, it only has no name. By default the first column has no title. This is the custom sort column. You can even move it around but there is no way to hide it via the context menu.\nSo you should be able to click on this column and have your custom ordering back. You can change it by clicking to order ascending or descending.. Related to #823.\nAlso, easier re-ordering should be enabled.. Duplicate of #277.\n. That reminds me. I wanted to release a binary ;)\n. Please try to search for an already reported issue before opening a new one.\nDuplicate of #171, #252 and #301\n. No worries. I did get annoyed at some point but that's just stupid. I see all activity others don't and I'm happy for every feedback. \n. See #66 #414 #603 #707 #749 for further discussions. Save on lock and reload on unlock/file change is a valid feature and will - actually has to - be implemented.\n. There is an often reported issue with input fields not saving their content on save, this has to do with not using object controllers for the binding. I did overlook this in the first implementation and have it on my list of things to improve in future releases.\n. If you move the focus away from input fields they should update the model.\n. This issue and many related to  editors not finishing their edit session before a save should be fixed with the move to object controllers in the current master. I have however not been able to get custom attribute and autotype editing to work the same way as there are more layers of controllers involved. \n. It'll happen. Eventually ;)\n. Should be possible to enable this. What I'm worrying about a bit is handling the UX for this. How to \"tear\" the inspector out, how to \"merge\" it in. Buttons/Settings/Draggin. I think you get the idea :)\n. You're right considering the outdated look on 10.10 and 10.11. We might even have luck and can get Iiro J\u00e4ppinen to post his opinion on a new version, but his Github account seems to have been removed :(\n. Icon is still the same. Might need smaller work-over. Closing for now.. There are even more extension for Keepass like KeePassRPC or KeeFox that have their own communication protocol so feel free to investigate a native safari extension.\nSince KeePassHTTP is supported via the MacPassHTTP plugin there's no restrictions to go ahead and add another system using system tools. It might even be better since there seems to be no way to conduct a man in the middle attack which is possible with KeepassHTTPs way of establishing a connection\nSo go ahead, I'm curious what you come up with!\n. I've specifically enrolled in the program to get a developer id to be able to sign MacPass. This however is not open. You should however be able to test and build all things without an enrollment but distribution needs one which I can handle if you want to. \n. How is the system going to handle modifications on the side of MacPass and the browser extension? Should there be a daemon that gets used by both MacPass and the extension to synchronise access/locking/etc. of a database?\n. If you take a look at KeePassKit you'll notice I started implementing NSSecureCoding as I was pondering with the same though a while back. I never got around to it as it requires more modularisation which I wasn't willing to introduce given the fact that even the simple split between KeePassKit and MacPass made things a bit more complicated. But at the end of the day this should be a viable solution. I guess 1Password uses a comparable system to communicate. The way I understand the setup is, that it consist of 1Password and 1Password mini as two separate apps one with the full features, the other with just the bare stuff to get the data to and from the browser extension. The safari extension then uses XPC to communicate with 1Password mini. I have however no idea how synchronisation is done, as there's still the possibility for 1Password and 1Password mini to manipulate the database. There might be some synchronisation feature like done in KeePass as well to get the correct data al the time and even store histories for special data (in the case of 1Password it's password histories if I recall this correctly). Anyway this seems to be a very nice topic for some improvements to the architecture. Hooray ;)\n. Known issue, fixed in KeePassKit but MacPass doesn't use the fixed version. I'm making good progress on MacPass' editing/history support which should compile fine. This is a rather old and nasty bug by the way :) \n. Current master works again but it's feature-robbed of undo until it's all sorted out. This is currently in a very unstable state but it compile again - at last! :)\n. Will take a look, might be due to some refactoring. The UI stuff isn't tested all the time ;)\n. I have to keep the image of actually doing something by fixing those minor bugs 8)\n. You can read about them in the original Keepass documentation. But in 0.5.1 they aren't used and the UI to edit them is broken. The master should be using them correctly.\n. You can get a similar behaviour if you use \"Autotype Entry\" via the context menu. This however uses the Autotype sequence for the entry with the default one being {USERNAME}{TAB}{PASSWORD}{ENTER}. The default implementation uses the Pasteboard but if you enable obfuscation the content is sent over via a stream of key strokes which is harder to track.\nAnd just a technical tidbit: The Drag and Drop architecture in Cocoa is implemented via a special Pasteboard too that is readably by any process so dragging doesn't offer any additional security over simple copy&paste.\n. I wouldn't call this flawed as it's an easy interface between processes and it has to be open. Otherwise you end up with something like a drag'n'drop firewall which disables this by default for everything. Drag and drop is as I would think not meant to be secure it's meant to be flexible.\n. That's why browser plugins for password managers come in handy as they can establish a secure connection to the database (e.g. 1Password, 1Password Helper and the various Browser Plugins) and then they use direct manipulation of the DOM to insert contents into any forms. The Advantage is clearly a secure connection but you end up with having to implement a \"Plugin\" to communicate with any tool. The clipboard and more generally the \u2013 emulated or actual \u2013 typing of keys on the keyboard is a much more flexible input method but it has the flaws of being an open communication channel  for key loggers, pasteboard recorders to name just a few. Keepass (and MacPass) offers obfuscation to circumvent easy password logging (see http://keepass.info/help/v2/autotype_obfuscation.html)\n. We live in an evil world ;)\n. This is already present, but since it's not easily \"just save the last settings\" there's been some talk about it. If you like to know how it works, take a look at #251. And if you've got some more time, take a look at #161, #166, #286 and #251 \nAnd there's even a wiki page for it Password Generation\n. Resolving works in master but not everything is working in the 0.5.1 release. I'm getting there to release a new built.\n. The protection settings are actually useless. Keepass had those for a while but the UI was removed and Keepass restores them to it's own version every time you load a database.\nThis means if you use MacPass and tick all the boxes and let Keepass save the database again, you'll find that only the password is ticket.\n. If you want to get the full details, take a look at the Keepass Website.\nThe stripped down information is: Basically a Keepass2 (.kdbx) Database is just an encrypted XML document with some header information to decrypt the file. This XML data is encrypted as a whole. That means regardless of what you set as protection settings, everything is encrypted. Names, usernames, titles, URLs, notes, tags, binary files, custom icon data even the autotype sequences or the icon ids. The protection settings comes into play on two occasions:\n- Keepass on windows uses in memory protection for every field that is marked as protected.\n- MacPass stores every protected value XORed with random bytes\n- Plain values of protected fields will get XORed with a random stream if the XML document is encrypted. This is the normal use case when saving a .kdbx database.\n- Protected fields will however not get XORed when the database is exported as plain XML. Otherwise it would be impossible to import them again, since nothing about the random stream is stored inside the XML document. This information is stored in the header of a .kdbx file.\n. Thx!\n. Since I had good results using Carhage I'll try to move MacPass over to use the built frameworks instead of having to include all the projects as submodules.\n. The lost Window associations is a bug in KeePassKit. See KeePassKit Issue 5\n. KDB Autotype-style notes aren't supported at the moment. This should be moved to KeePassKit since it's responsible for supporting any KBD/KDBX features.. Regarding you ideas:\n\nAutomatic merging/synchronization feature\n\nWill get added eventually \n\nManually merge conflicts\n\nNeeds a custom UI, automatic merge with user feedback is the better way\n\nOn save compare the current database with the one on loading (using hash, modified date or something similar) and show a warning if it's different\n\nNSDocument does this already, so MacPass warns you as well!\n\nKeep a log of all changes. On save load the original database again and apply and save the changes\n\nThis requires merging and hence is actually just point 1 again\n\nCreate a lock file on opening and don't allow anyone else to open\n\nNot possible, MacPass cannot prevent file system interaction\n\nCreate a lock file on opening and don't allow anyone else to save while this exists. If a lock file existed on load and is removed while the database is open allow user to reload to lock the database himself\n\nAs far as I know, Keepass only creates .lock files on FTP volumes if you explicitly configure it to do so. I think the better way is to work towards a synchronisation feature and use the \"stupid\" reload on change option in the mean time.\n\nAuto reload after remote changes\n\nCurrent master does this with the caveat of not being able to merge changes, so it's either mine or theirs.\n\nManually close and open the database before making a change and saving and hope no one else is editing at the same moment.\n\n;-)\nAs stated above, the current master notifies you if the file is changed outside, but you have no way of merging anything you can only choose what evil you want to keep ;).\n. Just an update. The current continuous build supports the following features:\n\nmerge databases, this also allows to synchronize distributed edits on one database\nauto-reload on external file changes\nNSDocuments sanity checks on overwriting a file that was changed externally\n\nThis should enable a proper multi-user setup.. Did you install all dependencies with Carthage?\n. This was an error that occurred in an earlier version since there was an error handling the file but this should not happen anymore. If this ever happens again, please report here.. I'm not really sure what you did fix there. And can you please fixe the misplacements?\n. Closed due to no feedback.\n. This seems to be a timing issue - which did occur in Yosemite too.\n. The current version is using single key press events instead of copy paste for nearly all typing so this error should be fixed. I can confirm that is is more or less reproducibly after the first use of Autotype in MacPass. . Autotype is performed on the last window activated before you activated switched to MacPass\nMacPass then activated the last window that was front-most before you switched to MacPass (no minimise, etc) and performed the Autotype.\nExample for a Website:\nGo to a website, put cursor in input field for username, got to MacPass, select entry to use, select context menu \"Perform Autotype\". Should work. If not, it's a bug :)\n. Did you initialize all submodules after checkout? DDHotKey is inside one. \n. This is a standard git system but nothing directly tied to OS X development. The Readme should actually contain all steps necessary to get MacPass built from scratch. \n. that's odd I can use the setup for two machines without any problems\n. Even odder is, the sparkle build is distributed as binary so there shouldn't be any building involved. Carthage favors pre build binaries if they are present.\n. Just tried it again with your exact arguments (I use Mac as platform but that shouldn't have any effects) and it ran through.\nbash\nuser$ carthage bootstrap --platform OSX\n*** Checking out HNHUi at \"1.0.1\"\n*** Downloading Sparkle.framework binary at \"More reliable migration from old Sparkle versions\"\n*** Checking out KeePassKit at \"1.0.3\"\n*** Checking out Sparkle at \"1.13.0\"\n*** xcodebuild output can be found in /var/folders/76/863tlp8c8xl3lt008k8cx6g80000gn/T/carthage-xcodebuild.zFDZqV.log\n*** Building scheme \"HNHUi\" in HNHUi.xcodeproj\n*** Building scheme \"KeePassKit\" in KeePassKit.xcodeproj\n*** Building scheme \"Sparkle\" in Sparkle.xcodeproj\nuser$\n. Nice. I was thinking about asking, whether you have custom builds. Glad it's sorted out! And congratulations for having a son! Seems to be a perfect Christmas gift. \n. The keystroke sequence gets escaped and any non Xml valid characters get stripped. There where no changes to this behavior in the recent past that I can think of would break this. It would be helpful to know the actual sequence or maybe create a test database?\n. I've found the culprit. I do not know why all the parsers are so \"hard ass\" on the format. I leave the keystroke sequence element out if empty and KeePassX actually complains about not finding the element but rather than assuming it's empty and get on with it, well. I'll fix it asap!\n. @mathos77 No problem, this was a easy one. There are plenty of bugs around that require more effort and thus tend to stick around a bit longer ;-)\n@thy1985 Thanks for the though about throwing money at the problem (me ;-) ) but the only thing for now is flattr  - there's a small button at the bottom of the Readme - and I said this before, it's nice for people to want to donate but it creates a sort of pressure on my part to actually spent more time on MacPass. Don't get me wrong, I love putting time into it, but with it already being a password manager it's kind of freaky to think what a wrong line of code on my side could do to someone using the app. Just looking at the stars in GitHub is scary enough for me :).\n. I'll take a look if it violates the GPL by not giving the user access to the source code an not mentioning MacPass. I'm a bit unsure whether it can be used to advertise for other software but we'll see. But since my complaints on other very clear violations did not always go through I'm a bit sceptical. \n. I've installed the app and saw the cross advertisement. I've asked for the source code and on the way they managed to get GPL software into the App Store so time will tell. They aren't going the ripp-off way that some others chose before but I have not had any chance to take a look at the iOS client to see if it's complete re-write or based on some other stuff. I'm not pissed as @DominusExult comment might suggest, on the contrary. It's the goal of OS software to be spread and changed to get a better product at the end.\n. I always forget that GPL and App Store don't mix. Found a good article, that clears it up [1]. Needs to be bookmarked in the \"MacPass GPL Violations\" folder. I did write another email to inform the peeps about their troubles. Let's see how it pans out, as I got the strong feeling they're using the app to promote pro customers for their iOS app.\n[1] http://www.fsf.org/blogs/licensing/more-about-the-app-store-gpl-enforcement.\n. I did get in contact with them. Source code gets sent on request so that's a nice one. I did explain the GPL implications so we'll see what happens.\n. My current information is that Keepass Desktop will an update that informs users about the removal from the App Store. Afterwards it should be pulled. \n. Update with information about removal is published. The website lacks behind but well\u2026\n. I just added Travis CI to KeePassKit so I was about to get here as well. But thanks for the work, will get integrated if I have time to set it up correctly. More importantly, all the missing tests now need to be implemented ;-)\n. Firstly, if MacPass crashes it's very helpful if you can supply a crash log (via console.app) or at least try to reproduce the crash. Secondly I plan on setting up a CI system to create nightly builds to better vent out new binaries as this is a current hold up. MacPass did change a lot, so new releases tend to be unstable sometimes. \n. @mboelke You're using address sanitiser that means your running a debug build, archive the app and use it or disable address sanitiser in the scheme for debugging. This should fix the problem. Are you using plugins? If so, this might be a problem too since there are some instabilities\n. @maku KeePassHTTP has been pushed to be a plugin since a plugin interface was introduced but no stable release was built. My guess is that KeePassHTTP crashes since there were some threading issues that were fixed.\nFor the \"new\" plugin see MacPassHTTP\nBut there is no \"easy\" way to get things working for now. You have to built everything yourself.\n. @mboelke I did answer to @maku. Sorry for the confusion.\n@mboelke Correct, only the current master is able to use plugins. If you build via the supplied method then you should have a release build of MacPass as well as MacPassHTTP. About the Adress Sanitizer: This is a debugging option and that's the lib that's crashing in your crash report (which it does if it detects an error) but normally this should not be present in any release build, only in debug versions.\n. Since MacPass has adopted Carthage the instructions did change, I just updated them for MacPassHTTP\n. Did you get MacPassHTTP to work?\n. Thank you!\n. Yup. Will get removed.\n. You seem to be using the 10.10 SDK but 10.11 is necessary (as well as Xcode 7).\n. #385 has some explanations on the file format.\ntl;dr; everything is encrypted\n. KeePass desktop will be removed from the App Store since it's in violation of the GPL license for MacPass. KeePassHTTP is supported via the MacPassHTTP plugin. Plugins are currently only supported by building your own version of MacPass from GitHub. I will release a new version of MacPass that supports plugin in the near future. Yes, I know that I say that a lot but 0.6 is necessary after this long time ;-). \n. It's completely legitimate to rename and redistribute MacPass. The only thing to comply to are the licenses. So the redistribution isn't wrong. It's the offering in the App Store. \n. @ezeeyahoo this is an MacPassHTTP issue, could you please open it in the appropriate repository?\n. Changed to the following:\n\nEnter in search moves to entries\nDown in search moves to entries\nCopy shortcuts work while in search on first hit in search\nSee #603 for details. @mariosangiorgio merged!\n. It's working. The textfield just looks greyed out since it's rendered inside a popover. I just confirmed that you can click on it and enter a manual value.. Thanks for the heads up - you're the third persons to notify me - I'm about to release a new binary that should fix the problem. \n. fixed in e99e990b134398f1c81f91b99c23b15f6ddbb271 (0.5.2)\n. I am unable to reproduce this bug. Did you rebind any shortcuts via the OS Preferences?\n. There you go. You overlayed the \u2318+C for the Textfield with \"Copy Password\". You can try to use it on any other Textinput, it shouldn't work as well. There's a reason the default shortcut isn't \u2318+C as this interferes with any Textinput.\n. Can you take at the database settings and specifically at the settings for the expiration? Is the number of days set to 0 and the check box ticked?\n\nMight this be a side effect of #269?\n. Thanks for the detailed description. There are reports of strange behavior with the show/hide mechanism all the time but I was never able to reproduce them. Recent changes to bindings might have made things worse so I'll look into it!\n. Well, I did not explicitly fix it, but it seems to have been a side effect of #421 \n. That's a huge bug. Can you provide a crash log? And are you able to create a minimal example of your database with all the entries missing? \n. @jbsmith7741 Thanks. Culprit is found. I try to patch this ASAP. The problem is a changed interface for KPKGroup. Namely I unified it to use title instead of title for KPKEntry and name for KPKGroup.\nYou have saved sort descriptors for the group column that still use the old name selector so the app crashes. What can you try to fix this crash is delete the faulty sort descriptors from the preferences by running the following terminal command:\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Sort Ordering EntryTable\"\nCan you report if this fixed the issue with the crash? The sorting might be the reason for the missing entries too, but I have to get into that. If you run MacPass with fresh settings everything works fine so I highly suspect the sort descriptors are the reason for the observed behaviour.\n. @d029940 I cannot reproduce your described behaviour so I'll have to investigate what causes this. A fresh MacPass installation shows groups with multiple entries (duplicated or newly created) and you can expand/collapse the tree as expected.\n. @jbsmith7741 can you confirm @d029940's observations that the bug even occurs on newly created databases? If so, might I ask to get your defaults? You should strip all sensitive information (Lastly opened database, key file mappings) as there might be something else causing the problem.\nTo print the defaults please run:\ndefaults read com.hicknhacksoftware.MacPass\nPlease strip any private information before publishing this, or just supply the keys but not the values of the defaults dictionary.\n. @jbsmith7741 can you try removing the following from the defaults:\ndefaults delete com.hicknhacksoftware.MacPass \"EntryTableSortDescriptors\"\n. That's rather strange.\n. @jbsmith7741 I just pushed 0.6.1 which should fix the issue with crashes as well as not showing more than one entry.\n. I get your idea about closing a document without locking the database, but the document is the database, closing it, closes the database. You still can hide macpass or minimize the windows. An idea would be to use notifications on matches not show a window as this seem to conform more to the OS X style to inform the user.\n. The KDBX file format has a value for the last visible group, which could be used to just open this group after unlocking the db.\n. Some insights after a bit of code-study:\nKeePass stores the last selected and top visible group for every database. For every group it saves the last top visible entry. Those are then used to:\n- scroll the tree to the lastVisibleTopGroup\n- select the lastSelectedGroup\n- scroll to the lastTopVisibleEntry inside the selected group\nSo everything to restore the UI state is in place, I just need to save and load the data\n. The behaviour for Groups is implemented in fc792d2d74c040021c652a3cf5c1c9705f3b7c55\n. That's a nasty side effect of the current incomplete history support. 0.5.x did record any changes as undo/redoable but 0.6 doesn't do this anymore. That's something that completely slipped my mind. Deleting should actually trigger file changes as well.\n. That's right, MacPass now saves the file on locking. And it also notifies about changes done to the file outside of MacPass, although merging any changes is still unsupported!\nI'm in the process of reworking a lot of the API on moving/editing in KeePassKit to better work with undo/redo and be as consistent as possible with the KDBX format. When this is done, changes should be recored correctly again and a warning on closing without saving will pop up!\n. Move/Create/Delete operations are registered correctly again as undoable and mark the document as dirty. Changes to groups will mark the document dirty as well again. Entry editing is the only thing left and should be fixed shortly as I think I now got the history support figured out.\n. 9ac7c93fbf4e549929d6211dee1593b4e6fa920c should fix all issues with lost data on save while text inputs still have focus\n. I got the message ;)\n. If you do not quit MacPass this bug will not arise. It's an error in migration the old defaults format to the new one as I just rehash everything so there are keys which are hashed hashes which aren't found anymore.\n. I removed the public key from the Info.plist in 3abf1982b1c6802b46dc524fbd88b16ccbb5da7e as this caused the update process to fail. If you just revert this commit everything should work. I'll try to update the code ASAP to make development more painless again. There's a discussion on the sparkle project about this issue (related to UI testing) as well https://github.com/sparkle-project/Sparkle/issues/680\n. Fixed in 4a7d6e14d97e9c730660fb97a597dfd490e265c3\n. I cannot reproduce the bug. I just checked with 0.6.2, created 3 target window entries and it worked. Saved, loaded, all 3 were there!\n. As a side note: KeepassX works very well under OS X, so if you want to, just stick to it!\n. KDB actually has Autotype features but those are stored in a special format in the notes. I have a stub to parse and save this format but did not implement it.\nSome other tidbits:\n- MacPass complains in the \"save as\" dialog when you lose data, but since you just saved this mechanism didn't work. That's an actual bug I need to fix.\n- MacPass can save to both formats, that means you can store a KDBX file as KDB (with possible data loss) and vice versa so no need to use external tools to migrate KDB to KDBX.\n. This is something that seems to break from time to time, as the functionality is actually implemented.\n. My first implementation of the \"lock after inactivity\" (e2e47a9bcfb5c5735518a4ba311b46f83f2fb33c) was done exactly this way and then I thought it was the wrong approach but I see there are scenarios for both use cases. I think it's a good cause for YACB (Yet Another Check Box) :)\n. Postponed for further releases.. I might have found the error but it seems strange. I suspect the bug occurs for a certain URL, can you verify that?\n. The error shows that the hotkey is working. If you would be so kind to set a breakpoint at\n[MPDocument(Autotype) autotypContextsForWindowTitle:preferredEntry:]\nand step through until you get the exception that would be awesome!\n. That's the spot where I did suspect the crash and I fixed it, will be pushed shortly.\n. And a big thank you for your effort!\n. First of: If you set up auto-lock after inactivity then this will lock you database.\nDo I understand you correctly that by see passwords all the time, you mean the little eye button on the password input? And you want the app to automatically toggle them back the dotted view after a while?\n. Clear. But, then you also need to ask for the password whenever the password is copied to the clipboard. And it doesn't stop there. Users can use autotype and this can reference the password. This then would also require for a password input. The next thing are placeholders in fields. Another field - say the url - could use the password. This would then require the ui to add the toggle button to the url field as well. And if you go one step further referencing needs to work the same way. I feel this makes it rather complicated, don't you think?\n. Thanks!\n. Changes already added via #434\n. Thanks!\n. Thanks!\n. Can you test the current continuous build as there where improvements that should help speed up scroll speed. . I have to admit I have not been up to date on view drawing in macOS and just recently had a good introduction into layer backed views. I surely have a lot of things in my code that hinder performance. Also, MacPass relies heavily on bindings and I ran a few performance analysis just this week and might be able to optimize a lot. I cannot promise any improvements but I am rather confident this will get better.. I guess you found the error, since you did not \"clone MacPass and MacPassHttp according to instructions\". You need to check out 0.6.2!\n. Great! It's closed already and you are able to close your issues as well :)\n. MacPassHTTP requires MacPass 0.6.2 release NOT the master version as there were changes to the KeePassKit API and this is in your case the cause of the crash\n. MacPass in the master branch always uses the newest KeePassKit Api. I do not update the version string until a new build is marked for release but if you deploy the app, the build number is included and you'll see a newer build (unequal the one 0.6.2 used). The problem is not MacPass using an old API but MacPassHTTP using the old one. The reason this is stalled is time. I will release a new version of MacPassHTTP once MacPass gets a new release to keep them in sync but I have no plans to roll the development on all plugins mainly because I want to focus on MacPass instead of divert even more time to other things. I'm more than happy to merge changes of MacPassHTTP ;).\n. That seems to be a side effect of the default implementation of NSDocument. In my implementation I never write the file directly, writing always uses a temporary file first and then AppKit does the rest. I have to look into this to find out whether I am able to allow for hard-link preservation. As a side note - why hard not soft links?\n. Thanks. If I find the time I'll try to recreate something alike and debug the symlink error. Did you try using and \"old-school\" Alias file?\n. Duplicate of #99 \n. Me neither ;). The feature @Ringelnatz describes is implemented in the master branch and will be included in the next release\n. duplicate of #424\n. I cannot reproduce this error. Can you attach a detailed error log?\n. Any news own this issue?\n. I am still unable to reproduce this bug. What version of MacPass are you using? I just tested you steps with 0.6 and 0.6.2 and the current master and it works on all those versions. By + Add do you mean the button at the bottom? This was removed in 0.6.2 so you must be using 0.6.1 or older.\n. I'll run some more tests under 10.10. I was trying to get the crash in 10.11 so this might be the ticket! Thanks for your efforts!\n. I can reproduce the bug on groups not on entries and only by editing and then saving without leaving the notes field. If i exit the notes field the notes get saved (and loaded) correctly.\n. I switched to controller bindings and this seems to have added some \"nice\" features but was actually aimed to remove all the \"changes aren't saved\" bugs. Sorry for taking so long to fix this!\n. The current master is a WIP for editing with History support so there are a couple of things broken\u2026\n. Should be fixed with 2e1e4ad5acd2364825c19c38c81e56af58e9bbe3\n. You cannot use master with MacPassHTTP. MacPassHTTP requires MacPass 0.6.2\nThe KeePassKit Api has changed since 0.6.2 and thus MacPassHTTP calls the wrong methods. I have not version checking in place for plugin loading so you find out the hard way.\n. This looks like a failing network request. \n. Just checked. It's working for me so it might have been an hiccup on GitHub's end.\n. I have no clue why the api doesn't work, I did not change anything at my end. The tag is there. I just tested with Carthage 0.15.2 and it works as well. Fetches everything without an issue.\n. I'll try to reproduce this using a VM.\n. Since this is now happening to more than one person I'm concerned :(\n. I'm suspecting this has something to do with the github access token.\nIs this possibly related?\nhttp://stackoverflow.com/questions/35790585/carthage-update-error-github-api-request-failed-bad-credentials/\nhttps://github.com/Carthage/Carthage/issues/1188#issuecomment-195918921\n. I only try to publish binary of code that is actually working properly. Master currently is in a in-between state and since I had no time to put work into MacPass I consider it not worth it.\n. And again, I have no clue why the bootstrap process fails as it works on all my setups.\n. I'm closing this in the hope that this was a local issue\n. please take the time to look for duplicates. See #447\n. And I just did a clean setup like stated in the readme and everything works fine.\n. Thanks for the effort @magebarf. I have encountered the same behaviour. Autotype seems to break for release builds from time to time. It seems the hotkey does not get fired anymore. While using the debug version this happens a lot less. I even suspekt something in the setup process is broken since it sometimes works only after you change the hotkey in the settings.\n. Thanks for the forensic work. I'll try to fix this quickly!\n. I have tested this with a multitude of check-box-settings and (as I thought) they do not affect the hotkey behaviour as they merely change the matching semantics, the hotkey is registered regardless, so this is something unrelated, at least in the current master. I cannot make any comment on this issue regarding 0.6.2 \n. As mentioned in #520 the issue where Global Autotype just stops working should be resolved in the current master, as this is the initial issue I'm closing this. . Should be fixed with #451\n. \ud83d\udc4d \n. Can you elaborate the problem?! Is it #447 or #448?\n. I'm closing this for now, if you can supply further details, please feel free to re-open the issue.\n. This issue is related to #445 #455 #478 #485.\n9ac7c93fbf4e549929d6211dee1593b4e6fa920c should fix all issues with lost data on save while text inputs still have focus\n. @DominusExult is correct. There is a setting to remember key files for databases. It's only enabled for databases that use password and key files. So if you never set a password, MacPass won't remember the key file even if you enabled the setting.\n. The UUID field is not supposed to be editable. This seems to be an regression while switching to using model controllers for bindings instead of direct binding.\n. If you could take a look in the log you might find an assertion an thus MacPass will not recover gracefully. \n. What version of MacPass are you running? Custom build or 0.6.2 or even earlier?\n. It's fixed. There was a bug in KeePassKit that prevented the correct parsing of those two settings if they were set to \"no\"\n. Nice catch, thanks :)\n. I'll investigate. Chrome has the habit of not complying with OS X defaults an I already need to filter out the nameless main windows. Full screen mode might yield some more of this behaviour.\n. Turns out chrome wasn't the bad guy. I did not search for off-screen windows, thus missing all of chrome's windows. Secondly activating a full screen app requires the use of the NSApplicationActivateIgnoringOtherApps option.\n. Thanks. Seems I haven't noticed it since it's normally in my default .gitignore file. \n. On first thought this is rather simple, but: What's so bad about just hiding MacPass? Is the menu item so much better than the icon in the dock? The second thing is, I would have to hide/show the App icon every time you click on the menu item since app hidden from the dock do not get any Menu Bar support, that is, it won't show any menus until the dock Icon reappears.\n. I just created a new database with KeePass 2.34 an opened it with MacPass 0.6.2. without any issues.\nDo you use a keyfile and a password or only one of both?\n. Never mind, glad it still works!\n. Issue is fixed. Fix will be included in the next binary release\n. Congratulations, you found a missing feature in the auto type handling. Support will be included in the next binary release. If you want to know, how to encode those characters, take a look at the Autotype Help Section. Currently this is fixed in the master branch\n. I remember having used notifications instead of the overlay window but I have forgotten why I did switch to the overlay. The benefit of not un-hiding MacPass is a very useful details. There might even be a way to use the notification for feedback, but I'm currently not sure what SDK is needed to use them.\n. You're right, it not obvious. There should be a \"every time\" (0) and \"never\" (-1) option instead of the actual values.\nThe second issue is something of a chicken-egg problem. You can enable the enforcement rule but you should also be able to disable it. Otherwise you never would be able to escape the constant password changes. It's considered a nagging reminder but nothing that is set in stone.\n. And the default is not 0 but -1. A very early version of MacPass used 0 as default and never checked for the values. Around version 0.4 the check was introduces and a lot of old databases had the default 0 value and thus users ran into this issue. The default is -1 (like KeePass) to prevent this from happening. \n. Current continuous has a better localized interface and makes the settings more clear. The force dialog now also is missing the cancel button.. I need a bit of clarification on the xml format. How did you generate it? Is this a 1password built in xml exporter?. There are a lot of minor issues with focus lost and not saving that should have been fixed by using to a NSContoller binding but that didn't seem to have fixed all issues. Thanks for the reports!\n. Should be fixed with 2e1e4ad5acd2364825c19c38c81e56af58e9bbe3 (commit message refers to wrong issue)\n. GitHub releases are all published as binaries and are available via the sparkle updater. Regarding a new release: I did drop 10.8 support recently and added partial history support (no browsing, no restoring, but edits get pushed to history) and plan to add full support to get 0.7 released with the full feature set. I am currently focused on getting support for the upcoming version 4 of the KDBX file format finished which takes a substantial amount of my spare time. What this means for you: I hope to get 0.7 out until november! :-)\n. Duplicate #400 \n. Duplicate of #400 \n. Can you explain this a bit? You can use shortcuts or the edit menu to copy the password without having to expose the password field. Also you can use double click on the password field for any entry in the list to copy it. \n. This feature is possible if synchronisation is implemented. If this is done there should be an additional option \"merge with my changes\" or something like that. However this might require user interaction. Think of conflicts where you edited an item an someone else deleted it.\nExample flow\n1. !You: edit Entry A\n2. You: edit Entry A\n3. !You: delete Entry A\n4. !You: Save Database\n5. You: Changed Dialog, Merge Changes \u2192 Conflict Entry A was edited after it was deleted\nAnd thanks for the flowers (as in praise) :)\n. Thanks for the tipps, KeePass has synchronizations strategies as well and I try to replicate those to get feature parity.. Current continuous has Synchronisation support. On first change you will get a dialogue that asks what to do. You can set a default behavior in the dialog or in the settings. Manual merge is also possible via a File > Merge with\u2026. There's a system in place for that, you can already create new entries based on templates.\nIt has one flaw though, it does not generate a new password, this might be a useful change in the future!\nCreate a group with entries you want to use as templates:\n\nIf no template group is specified, you need to set one in the database:\n\nTemplate groups are configured in the advanced section:\n\nIf a template group is set, the entries under this group are available als templates for new entries:\n\n. I did add a Setting under Workflow to update password for entries created via templates in c9085f20a1ade9e33cf6a58ffb6e3bf6e9dedb83\n. I'm closing this, as it's possible to get pretty close to the wanted behaviour with default KeePass features with the additional setting in MacPass for password-updates\n. Thanks for the bug report. I'll try to fix this quickly. \n. You found a good one there, I have refactored all the strings to use constants and have changed the case on the auto type element. MacPass did store since this commit a Autotype element. But KeePass uses AutoType. Have fixed this in KeePassKit. MacPass will use the new version as well.\n. I'll did some tests but wasn't able to reproduce all the data loss this might take some more time. About the null-false change, that was a bug in my tool function that converted all false values to inherit which is represented as null in the database. I'll try to get to the test asap and I'll let you know if you can help me out!\n. The core functionality is rather straight forward, but I do not know the impact it hast when interacting with MacPass' windows when the Dock icon is hidden. Have to run some tests. But I should be able to add this rather quickly. @cornercase seems to not have gone through with his changes or might have chosen to keep them private :). should be fixed with 2e1e4ad5acd2364825c19c38c81e56af58e9bbe3\n. I have to change for than in the population as I think I'm only listing windows on the current screen and apps in fullscreen are on a different screen.\n. It's not worse since the state is auto-saved. Reopen the file and the edited state ist still present but the changes are also there. I'm still struggling in fixing the other bug in a reasonable manner without having to jump to many hoops. \n. Should be fixed with 2e1e4ad5acd2364825c19c38c81e56af58e9bbe3\n. The autosave behaviour for OS X doesn't stick so well with the design of a Keepass database, as you have to understand the risks involved. And since MacPass does not support the history correctly this even might cause more trouble. What's include is a save on lock feature, that is, MacPass always stores the database if it gets locked. Since I did change a bit of the undo/redo support some changes aren't register as changes and you will not get a \"save changes?\" on quit dialog but this should be back in the next release. And sorry for causing you trouble with this behaviour!\n. If you'd like to implement the feature feel free to open a pull request. If it works I'll gladly merge it.\nWhat I tried to tell you is this. There are more than two users of MacPass and a handful of Keepass users around. I have no plan to diverge MacPass away and add custom behaviour or custom extension to the format as long as it's not needed. The whole purpose of MacPass is feature parity with Keepass, not another password manager as there are plenty of those around.\nWhat you might have missed - and I did not state - MacPass saves on lock and there's a setting to lock the database when the computer goes to sleep. So your custom solution works but is (for this case) not needed. As for saving every time you edit something that's a case for a trigger system. Keepass supports this, and I might implement something like this (or add AppleScript support) but since I even haven't gotten other basic stuff worked out there's simply no time for this. If someone else (or as stated above you) want's to jump in, that's highly apreciated.\nAnd as a kind remark: No one get's a dime putting time into MacPass. We're all here for the fun, not for the hassle ;)\n. BTW https://keeweb.info has a auto-save feature as far as I'm aware. You might want to give this client a try since it might suit your style more than MacPass.\n. I did suspect you were frustrated about data loss and thus pissed, hence I wasn't trying to keep the heat up. To get you into my head a little more:\nI'm not against those little features - on the contrary, but sometime I try to hold them back to implement a proper solution. There are so many little request that often seem trivial and sound vey useful. The proper solution would be the trigger system for many of \"Those Little Things\". A save-timer or a \"save after every modification\" setting is one of those those too.\nThe trigger system is a no-go for me right now so I think yet another checkbox might be the better way. I hate this a lot since Keepass already throws a huge bag of tools at you screaming \"Want more? Here you go!\" and I like the @marcoarment way of just using sensible defaults and not having a dip-switch for every little thing.\nTo be honest, I never really thought about the use-case of never locking and always sleeping thus having MacPass run unlocked indefinitely.\nThanks for insisting on this. I hope I can fix this properly soon.\n. To prevent this in the future I did experiment with NSDocument's autosaving in place and it seems to work as expected. If this works as expected, theres no need for a custom setting or code to emulate this in MacPass and as a bonus, you now get a version browser.\n. I have made more progress on autosave of the document. I suspect a lot of edge cases might exist, but for now I think I have found a good solution to work out a lot of lost data issues with this. It's not 100% safe, since some text edits might still be lost, but it's a lot closer to the goal than before. If you like to test it, feel free to use the master branch but there might be stuff broken since I also threw out 10.8 support to get some of the old nssheet api out of the way.\n. @saulodigital sorry for having caused so much trouble. Creating a tool that stores such sensible data puts the developer in a tight spot sometimes. I tend to be over-cautios in some areas but still bugs creep in that might make a lot of trouble. As stated in the comment above, the master has auto-save in place so this is working if you compile MacPass yourself. I currently am implementing KDBX4 support for KeePassKit to make MacPass compatible with the new format. I might release another version of MacPass before this is done but there's definitely an upcoming release that will add KDBX4.0 support (besides a lot more small stuff)\n. 2e1e4ad5acd2364825c19c38c81e56af58e9bbe3 has fixes for a lot of \"unsaved changes are lost\" on save/quit and in combination with auto save enabled I'll consider this as done. If there are issue with the current implementation, please create separate issues for those.\n. Or you can use the right-click menu on the entry in the list and copy a lot more (Username, Custom Fields, etc.)\n. The current workaround is to switch to MacPass, select the Entry and then use \"Perform Autotype\" in the context menu. It might be useful to think of a better workflow for this behaviour. It might be possible to implement this feature with a native Safari extension\u2026\n. I was talking about a native Safari Extension that would use a custom mechanism to talk to MacPass but this is another huge discussion, as it includes splitting responsibilities, maybe adding a helper background application, etc. I have no idea if a normal browser extension is able to fill out those forms. What I've read on this topic on the AgileBits (1Password) forums leads me to believe, it's not possible. But Chrome at least seams to have an API for those purposes.\n. To clarify some of the mechanics:\nGlobal Autotype is a generic system that uses window the title of an application to determine what to do. It matches the Window title agains the entry title field. Autotype via the context menu just uses the last app that was in use before you switched to MacPass and performs the auto type with the entry you selected - you as the user perform the match. Global Autotype tries to eliminate that step by using the front most apps window title and then looking for an entry that matches. You can chose what fields of an entry are considered for matching via the preferences:\n\nBut be aware that the input stays the same - the window title! The majority of use cases is however a browser window but for those there's no special treatment. Every application is just a number of windows with titles. That's it. It makes the system very limited but also very versatile. You can use it for other tools besides the browser as well. For those special cases inside the browsers, there's the KeePassHTTP (MacPassHTTP) interface used by browser extensions. The browser extension is a custom piece of software able to query more elaborately. E.g. it can - and does - use the url parameter. It even splits the url and uses the full url and then retry it with subsets. But this has nothing to do with Global Autotype.\n. There were numerous fixes with Autotype in 0.7 that should have fixed this. If the bug still occurs, please re-open the issue.. MacPass is singed to offer a better security (or someone to blame if shit hits the fan). CI builds cannot offer this but this might be a better tradeoff than a slow release cycle\n. Extracted @ParadiseDS comment to separate Issue #522 . @mbrucco if you're looking for a link to a newer release, there is none.. I did test travis-ci for nightlies and will try to supply them soon.. There's now a nightly build. Check continuous in the releases.. This is fixed in e06ade6a8f6c5f6e5ad1f2416cf98f3f61039854\n. This seems to stem from a wrong version of KeePassKit. Does a carthage update on the Macapass directory fix the issue?\n. KDBX4 uses it so yes, it has to.\n. Just an update. KeePassKit can read KDBX4 files. Writing is in the works. And as a bonus support for Twofish encryption is added as well.\n. Writing KDBX4 files is working also. There was a mayor issue with the way MacPass wrote the hashed stream so Keepass on windows did complain that the file is corrupted (which it technically wasn't) other clients (like KeeWeb) were able to read the file as well as MacPass. I did update the error handling since MacPass did continue silently when this error occurred.. Support ist present, but I just realized that the test coverage is not as good as I want it to.. Tests extended.. MacPass should not send an enter after each sequence. If you use a custom sequence please take a look at its keystrokes. If there is indeed no enter an it's the one used for a match this is a bug. Can you create a demo database to verify the bug an attach the file?\n. \ud83d\udc4d though if you say MacPass matches differently there's at least a need to investigate if MacPass has a bug in the matching strategy\n. It's already implemented. In the settings you can enable quick-look this will then preview attachments. If you want to take a look at the details, you should start at the implementation of the QLPreviewPanelDelegate protocol in MPEntryInspectorViewController and the supporting MPTemporaryFileStorageCenter as well as  MPTemporaryFileStorage\nIf you find ways to improve the system go ahead! A safer approach might be to implement an internal viewer, but thats a lot of work.\n\n\n\n. I'll leave the issue open for discussion!\n. There's a feature in Keepass to support TANs as entries. Would it be a good idea to replicate this behaviour? See http://keepass.info/help/base/tans.html for details.\n. Password generators should be something extensible. This way custom behaviours can be integrated more easily\n. @miheerdew there's actually no real plugin api other than loading and showing settings. The rest is free and should be implemented as needed. That is, I did sketch import/export plugins. But there's no ui support for e.g. password generators, etc. So this is something that needs a lot of work and I'd highly appreciate any contribution.\n@9point6 Keepass uses C# and MacPass does not offer any C# wrapper interface to allow for plugins to run inside MacPass as well as Keepass so the bad news is, one needs to implement them again. The good news is, it's at least possible ;)\n. I think a native plugin is not that hard to do.\nThe Api that comes to mind:\nAn abstract MPPasswordGeneratorPluginclass to subclass from.\n@interface MPPaswordGeneratorPlugin\n- (NSViewController*)generatorViewController;\n- (NSString *)passwordUsingDefaults;\n- (void)setDefaults;\n@end\nThe Plugin has to provide a UI, a facility to store/load defaults and to generate a new password using those defaults (either set by the user or the default defaults). The JS approach seems nice but I do not know if the cost justifies the benefits.. Forget any previous comments - I just tried to reproduce this in the old 0.6.2 and it did work properly.\n. This is custom Chrome behaviour. Even Keepass on linux seems to have the exact same issue: https://sourceforge.net/p/keepass/feature-requests/2182/. Autotype features aren't supported at all on KDB files. I neither parse the special notes nor do I save them. I even considered dumping support for KDB completely since it's less code to maintain.\n. Valid point on shortcuts manly being cmd based on macOS. The default had a reason that currently doesn't come to me. You can however change every keyboard shortcut of every app in the system preferences of macOS. This is also the place to add missing ones. \n. Changed to Cmd+L in d9f74938d0e79366be1736c538638c4678f6d11f\n. @graciano the system preferences allow for full customization of shortcuts on nearly any macOS application. So even if MacPass isn't providing a default you can create one for yourself. . Nice find but this is systematic. NSSecuredTextField will not register composed characters, NSTextField however will. A bad workaround for MacPass is to toggle the visibility of the password and type the \u00f1 and then toggle back and type the rest.\n. I have tried to find a solution to this but the only one that might fix you problem is using a NSTextField instead of an NSSecureText with less security or to reimplement NSSecureTextField on my own to work around this behaviour. Both solutions aren't nice and I'm hesitant to replicate NSSecureTextField\n. I'm sorry for the inconvenience but this seems to be a mayor issue for some regions. I have no clue how other password tools handle this gracefully. Changing the input to a new one is also hard since it will break old containers that use special characters. \nThis is a rather complex problem which. Changing the input system to allow for \"normal\" text input already would break latin passwords as well. If someone uses the password \u00f1otes and normally types it by pressing ~ and then Nto get the combined character \u00f1 the secure input will actually record every key and the password then is ~notes.. My guess is that this has nothing to do with MacPass at all. Take a look at your \"Mission Control\" preferences. The fist check box allows Mission Control to rearrange spaces.\nI just tested this on my system with the box checked, the behaviour is as you describe, with the box unchecked, all the spaces stay neatly at their place.\n\n. This actually was a pretty bad bug resulting in data loss on lock!\nThe problem was that [NSDocument saveDocument] was issuing the save after the database was locked resulting in missing data. This bug seems to be only occurring on 10.12. On 10.11 I did not encounter this behaviour (even with the 10.12 sdk)\n. If you still find anything strange happening on lock/unlock  please reopen the issue and report it, in case I did miss something!\n. @yaoxinghuo I somehow do not see your comment - did you delete it? You should be able to lock/unlock with 58df7fe7c6cc24d14aa6b320da91b488acaef9ca. The initial fix ee33dcaaf827c2ea331c67a664d84cca120882ad was unable to unlock a previously locked database as you encountered because of bad early return.\n. The problem you're encountering is a result of history support in combination with the default for a database to enable the history feature. If you edit an entry the changes will get recored as a history entry and KDB doesn't support the concept of history entries. KDB has a simpler way to manage this: it uses a backup group to copy entries into before an edit is done.\nWith MacPass I want to use the KDBX format internally to store all the data as long as possible without having to emulate anything that KDB doesn't support. Autotype or Binaries is another point. KDB supports auto type via notes and only one binary. I plan(ed) to add support for notes by reading and writing the KDB-format in the notes filed but providing the interface KDBX offers. Even if the user has loaded a KDB file, I want them to be able to use all features even if it means to save to KDBX at the end. But I might have to step back from this goal.\nThere actually is a solution to emulate many of the features of KDBX in the KDB format (special groups, duplicate entries for multiple binaries, etc.). I do not think it's necessary nor useful to support all this. For the history support, I can think of the following:\n1. Disable history altogether if a KDB database is loaded to prevent any history entries to be created at all. This is simple an works. MacPass will load the backup group but will not use the folder at all on edits. MacPass thus edits without providing a backup. You still have local undo/redo as long as MacPass is running but after you close the file, you only got what's actually stored in the file and loose any history MacPass has created.\n2. Use the backup folder as a history group and store all history entries inside this folder at export. The entries are stored as copies so it's impossible the add them again as history entries after the file is loaded. I could add custom notes to link them as history entries (e.g. ad  historyItemForEntryUUID) but this is a custom format extension only MacPass uses. KeePassX has custom extensions as well but I am hesitant to go this route.\n3. Use the backup folder as history group only in the file, but hold the history unmodified in memory until the database is closed. This might confuse people since a loaded file looks different if you reopen it.\n4. Create a copy of the entry in the backup folder on an edit instead of creating a history entry if the user has loaded a KDB file. This seems like the best fit, although I have no way of saving this information in the database (like KDBX has) so it has to be a MacPass prefence setting. It might be possible to guess the setting for databases with a backup folder (that is - enable history) but this turns into magic behaviour quite swiftly. If the users actually wants full history support (and other things KDBX has to offer), they have to save the file as KDBX first. Combined with the fact, that MacPass only opens already created KDB and uses KDBX as the default file format for new documents it prevents users from accidental disabling features by using the wrong format at the beginning. The warning then only appears if you have a KDBX file that you save as KDB which should be considered a deliberate choice by the user.\nIt might even be useful to poke the user a bit by showing them all the stuff that's unavailable in the KDB format.\n. Current continuous build is reduced in nagging the user. If a kdb file was loaded it is saved as one without any note to the user about data loss. This is problematic for attachments and history support. I should include additional test inside the UI to prevent users from doing unsupported stuff e.g. add a warning if a second file is attached or when history is enabled, etc.. Partial done in continuous. Full realization postponed.\nKeePassKit now has features that allow to test for version support. E.g. \"can an entry be created here\" or \"can an attachment be added\". But the UI does not provide any meaningfull feedback for the user for this.. Could you extend the pull request to fall back to a simple delete that way it fixes the crash and I can merge the pull request.\nThe main problem is exactly as you describe and that's why the warning is next to the \"enable quicklook\" setting. I did not investigate any further how to use in memory files for quick look. A quick search yielded this however: http://stackoverflow.com/questions/8917368/display-encrypted-file-using-quicklook-framework-or-uidocumentinteractioncontrol which might be a feasable solution although an ugly one.\n. As far as I know SSDs are  the reason srm was removed. SSDs tend to be more complicated regarding actual storage than spinning discs. If you overwrite the file via srm or rm it's not guarantee that this actually overwrites the blocks the data was stored to. So srm had no way of being secure. The data might even be left alone and only marked as deleted and the firmware decides when and if it nulls the memory or just uses another block somewhere else. The solution is to never store the file in the first place as the comment in the pull request correctly states. \n. Some notes:\nNSURLCache seems to be designed in conjunction with NSURLSession. I'm unsure it's possible to act as a cache without actually being one and further more, the cache is for the application (that is MacPass) but quicklookd is fetching the file preview so we might not get a cache it at all. I'm not sure how the whole architecture works, but it seems very dangerous to be able to act as a system wide URL cache so my guess is that it's just application bound. But I'm eager to see what you come up with.\nI personally would first try to look if srmis present. MacPass runs currently on 10.9 and above, that means srmcould possible be installed. Simply falling back to rm -P is easier but I would prefer the other way. Both are not secure on SSDs but on spinning discs srmat least should be reasonably good.\n. Feature is already present:\n\n. Strange. What version are you running? Custom build or a binary release? My current quick test did work. Can you take a look what's written in the defaults via:\nbash\ndefaults read com.hicknhacksoftware.MacPass RememeberdKeysForDatabases\n. Strange. I'll try to hunt this down. \n. Not really. Those are two different keys and I just realised I'm a typo-artist. Damn even the prefs are littered with them misspelled words!\nRememeberdKeysForDatabasesis dictionary mapping of: sha256(keyfile) : path/to/database\nRememberKeyFilesForDatabases is a bool to enabled/disable the feature to store those mappings\n. There is a port of Passifox for Safari but I have no information on the current state of this port. You can use MacPassHTTP to get it to work. Another way is to use global autotype since it's the method that should work with any application without special plugins. \n. It is\u2026. Argon2 and AES KDF support is implemented since c35105ae001d36da4e832e549310d7d46f63b36d. I'm pretty sure this is already fixed in the current master version but I'll double check an see if this is still valid. The upcoming 0.7 release should then include the fix. \n. For anyone interested in the current status, check out the continuous build. Autotype should resolve references correctly. On the subject of 0.7. I'm onto wrapping all ends up and reading the update.. Bug is localised in KeePassKit reference/placeholder resolving which is naive in it's current implementation.. Fixed in current master. Will Ben made available shortly in continuous. . There are some things that come to mind to fix this. There is a modification date column you can use and order but this way you only see one group of entries. To fix this, MacPass should add the ability to display sub-group-entries like KeePass does. Another idea would be to add a search filter for \"changed since \". I would suggest the first solution, since this feature was requested a long time ago and seems quite reasonable.\n. The first issue is a MacPass issue, the second one a MacPassHTTP, right?\n. The first issue results in the introduction of auto save. This might have broken things at other places as well.\n. Just to state the obvious: TouchBar support might be nice as well :). Would be a nice alternative to the hotkey for Autotype.\n. I was suspecting something like this, but I thought Xcode has a \"pinned\" control?\n. No.. I've made some changes to KeePassKit to be able to store the keyfile and the password data in the keychain which then could be retrieved via touch-id. No substantial progress though. . Multiselect is working in master is there but drag and drop support for it is still missing.. Duplicate of #285 . Released in 0.7.4. I'll try to fix this ASAP. It even should be supported by a test scenario. I cannot reproduce your bug so I have no way of fixing this at the moment. If anyone else can check if this is happening it would be great. Furthermore could you try to take a look at the logs (Console.app) and see if anything is reported there from MacPass?. Just out of curiosity - how do you copy the password? Do you use the MacPass command (Copy Password) or do you use the \"Cmd+C\" system shortcut? If you use the latter, MacPass does not clear the clipboard. MacPass only tries to clear stuff that was pasted by special command!. I did start to implement a counter-badge displayed on the MacPass Icon until the Clipboard is cleared but that didn't work as expected so I scrapped it. It might actually be useful to re-add it since the user sees that MacPass is about to clear the clipboard. If the counter is missing the user knows MacPass will not clear anything. Currently you as the user have no clue if the clipboard is cleared, will be cleared or is just left alone.. As I said earlier, the flushing is based only based on the content that was copied via the copy commands from the context menu. Copying text-content results in not flushing. This is a clear security risk and should be fixed. The best way would be to disallow the copy/paste behaviour directly inside a text view and delegate the actions to MacPass and then flush clipboard content.. I've tinkered with a solution for this problem and I think it's more or less ready. What I've done is intercept all the copy commands from text inputs and make sure the get registers as clearable so MacPass knows it has to clean the clipboard. Will be available shortly. . I've fixed the behavior. Will be pushed soon to continuous and made publicly available. . Duplicate of https://github.com/MacPass/MacPassHTTP/issues/8. KeePass code is incompatible with MacPass. It requires a custom MacPass plugin. . I took the time to look into this. It has nothing to do with a special setting inside MacPass. Hotkey registration breaks completely, if the integration preferences tab is left open. The event gets consumed as you describe by DDHotKeyCenter but it fails to find any registered hotkeys and thus does not invoke Global Autotype. I'll dive into this and hope to fix it soon.. I have identified Problems with DDHotKey deregistering. This is fixed now but I think I should change to another Shortcut system (ShortCutRecorder for example has a way better UI and seems to be better supported). The fix is introduced with d9122859195999b1270c3b050d87a3325922d709. @braham-snyder could you test this fix? . I'm closing this. If Global Autotype still seems to be broken, we'll get reports eventually.. Fixed in 6987cbf2e2daafaa13da9830aeef4b5376684081. The font for the username field is changed to be monospace so it should be better to distinguish the characters.. Thanks, that was a regression due to refactoring to use the new KeePassKit API. The current master has the following behavior different to 0.6.2:\nMacOS Auto save is enabled, that means every change is saved. That results in a request for a file name upon changing a newly created database.\nAdditionally, upon lock the database is always saved as well. . This sounds more like the area for a dedicated browser plugin (like MacPassHTTP or something else).\nIf you turn the order around, you can get into your Github account, just use normal auto type.\nOpen GitHub in your browser, highlight the user field, go to MacPass, select the GitHub account (via search or manually) and then use Autotype in the Context Menu or via Shortcut and MacPass should fill in your credentials. Autotype should always work, it's just not as convenient as Global Autotype since you have to select the entries yourself.. Since this is a KeePassHTTP issue, it should be discussed here: https://github.com/MacPass/KeePassHTTPKit. Support should be no problem. https://github.com/MacPass/MacPassHTTP has to use the new KeePassHTTPKit to support the additional requests.. This is already implemented. See #415. The master has selection restoration partly implemented. This will select the last selected group in the outline. In the 0.7 release it should work as you suggest. The fallback to the search field is another highly requested feature which should be added. . Also see #519. The localization for the error messages is in the KPKLocazeable files. The actual keys are located in KeePassKit's KPKErrors.m. There you'll find a mapping to the stings for the error messages. I did change the error codes but didn't update all keys in the MacPass project hence you might encounter inconsistencies. . NSTextField seems to consume the shortcut and the message sent.. Fixed in 0.7. Do you plan on continuing this since currently it's not finished?. I would like to add you to the contributor list for this I would use your github handle and link to your github profile. If you with not to be mentioned or I should use some other name/link just let me know!. This is a well known and often reported problem, that is fixed in the current master. The next binary release will include the fix.\nDuplicate of #478 #485 #487. @G4nda1f no worries :)\n@bz007 I'll do my best to get 0.7 released soon.. 14270 is the current master and you can edit window associations in this build.\nFocus Proxy is the window title that is looked for. There were some changes to the lookup of the window title but nothing should break. Can you give me some more details on what app you try to use autotype on? Also keep in mind that you can change the way Autotype matches in the integration settings. To clarify: Global Autotype only uses the window title of the front most window, nothing else (eg. no url for browser windows). I might try to use Accessibility APIs to better get a grip of the front most window title but the low level Window APIs deliver worked ok so far.. @fooman There actually might be a bug in the matching since Window titles should match exactly. Or use * as a wildcard.\nFor the Window-Associations, you stumbled over an UI inconsitency. The top part above the notes field is a scroll window if you scroll down or resize the notes you get some more usefull UI controlls:\n\n. There are various enhancements to autotype window title retrieval and handling in the current continuous build. Can you verify if the issue is still valid?. This is a well known and often reported problem, that is fixed in the current master. The next binary release will include the fix.\nDuplicate of #445 #455 #463 #485 . Thank you again!. There currently is no way to force this behaviour. I will try to upgrade the system to use as much key strokes as possible.. Just an update. MacPass is now able to simulate a lot more characters via key strokes. Currently this only makes obfuscated auto-type a lot better but I am on to adding this support to the normal auto-type system as well.. The majority is already done. See https://github.com/MacPass/KeePassKit/projects/1. I should really start using a development branch :). I began rewriting the MPKeyMapper to allow for modified keys to be used as well and I seem to be breaking things in the meantime.. Regarding your problems with the wrong characters being typed, do you use Obfusctation on Autotype?\nThere's a bug in the current system that misses modifiers. This has the following effect when obfuscation is enabled:\nConsider the following password: !Pa\u00a7$w\u00f8rD\nFor a german keyboard this requires the following key presses:\n\u21e7+1, \u21e7+P A, \u21e7+3, \u21e7+4, W, \u2325+O, R, \u21e7+D\nMPKeymapper would fail to resove  !, \u00a7, & and \u00f8 so the obfuscation would fall back to copy&paste which would yield all the right characters. Now MPKeyMapper will find the mapping but the current Autotype ignores the modifiers. It only is able to find upper case letters and adds the shift key.\nCan you verify that observation? Could you tell me what keyboard layout you use?\n. @timewasted could you take a look at fef22bce05838c71c98354d2d9f229b4c1d7b0a7 and check if Autotype now works again?. Duplicate of #445 #455 #463 #485. Can you take a look at the log (Console.app) to see if anything more substantial gets written there. I'll try to extend the loggin for writing to see why this might happen.. It seems the attached images got lost. You might need to use the Github web site to upload them.. Can you give me the build number of MacPass (it's listed in the about box in parenthesis after the version). . Not really, I'll need to take a look into this but it seems that MacPass actually loses the file connection. What bothers me is the read-only preferences. Do you use some net mounted user directory?. Thank you for the feedback. I'll try to replicate an AFP share and see how to get past those bugs.. fixed in master, will be published with 0.7. This should already be working in 0.6.2. the current master hast definitive support for the literal space  as well as the {SPACE} command. . I introduced a bug in KeePassKit that did not list recursively into entries and group but I fixed it. I have to check if MacPass uses the fixed version. . Scrap that. The bug should not have affected MacPassHTTP. I'll try to debug this and find the error.. I uses to use some slow high level NSData APIs for data manipulation that might cause this delay. I have to investigate. Since 0.6.2 there are a lot of changes to KeePassKit so this might be fixed. I'll try to publish a new binary ASAP so you can test this agains a newer build.. Is this still valid for the current build (check continuous in the releases). Please specify most recent build. (About MacPass -> Version)\nThis is by no means by design. Could you take a look at the settings for your encryption (AES, TwoFish, \u2026)? Do you use AES as key derivation? What is the number of rounds? Is the database file stored locally or on a network drive? What is the size of the file?. Thanks for the details. Since you mention a lot of backup entries: Do you use a KDB  a KDBX database? I will try to add a stress test with this amount of entries into my test setups to see if I can speed up performance since this is not acceptable.. Todays continuous build will include some performance enhancements. Please test to see if this makes your experience any better.. Opening and closing should at least be a bit faster. Manipulating the DB should be noticeable faster. . After having used the profiler some more, I uncovered that for KDBX3.1 storage a lot of time is used for date parsing. Using KDBX4 (by setting the Key Derivation to Argon2 for instance) yielded 50% faster times for write/read operations. Can you test if this is the case for you as well? I'll try to optimise the date parsing for KDBX3.1.. Those settings are the defaults and should be OK. About the improvements upon unlocking, I'm still working on some more speed ups regarding the date parsing.. There are more optimisations present for date parsing in the current continuous build, can you test if this enhances the unlock delay?. Uh. Change it back to AES before! you use the new version since there was a major bug with KDBX4 storage. After that you can test both. Argon2 should not be any faster than before but AES.. Does 0.7 offer better performance for you?. I've reduced the delay a bit since it was problematic in certain edge cases (namely copy paste) and since it wasn't using the set buffer but the old pasteboard content.\nI'll try to reduce the delay so there's not speed impact but this might break stuff so we need to keep on the lookout.. The current continous release has no delay and types way faster. It seems to work for now but I haven't tested this extensively. Added an option to set the delay is a nice idea but auto type actually supports this via {DELAY=} but it requires a custom string for every sequence. A global setting has the benefit of being transparent but also offers yet another preferences entry which should be omitted whenever possible.. MacPass 0.7.x breaks plugin compatibility. You have I update the plugin to 0.3 as well. . Yup :). Duplicate of #514 . You can change all keyboard shortcuts in the system settings of macOS for any application. For more information please take a look at the apple documentation: https://support.apple.com/kb/PH25377. Supported. Will be pushed to continuous soon.. Working in continuous. Implanted in current master. Delete single entries and all data is possible as well. . There was a comparable issue a while back with wrong ordered popups seems that this is a regression. . fixed in develop branch.. History support is in progress for 0.7. 0.6.3 does not create history entries on edit but will keep the ones already in the file. . Feature is implemented and working in the current continuous build. The current implementation of normal autotype uses the past board but clear it afterwards. This is not ideal and I did start to move to a key-press system just like the autotype system for Keepass on windows. . @ksb4ever this should actually not happen but might due to some timing issues. It might require to fine tune some \"magic waits\" to get those bugs removed.. Can you pinpoint what went wrong?. Can both of you tell me what window restoration settings you're running?. What's even weirder. The MacPass icon is missing from the window. . I wasn't refering to the MacPass but the System Preferences:\n\n. What version of MacPass are you running? 0.6.2 binary or a custom build from source?\nIt seems the _shouldOpenFile setting is broken.. I'll check the current version if this behaviour is still broken.. Sadly no.. The missing icon in the window is fixed. The test is something I have to look at. . This error is generated by Sparkle the Auto Update framework. Do you have write access to the /Applications folder? When you moved MacPass did Finder prompt you for a password input?. It seems to be a know Issue with Sparkle and macOS 10.12. See https://github.com/sparkle-project/Sparkle/issues/923. This seems to be fixed with an update to Sparkle. Regardless this will be pushed to 0.7 soon.. Are you sure you want this to be a pull request?. Closing. If the user issues a save the file is written regardless of state. You can compare this behaviour e.g. to TextEdit and it works the same way. I would suggest no change to that since it's a use based action.\nThe second thing is lock. This was different in previous releases of MacPass and resulted in data loss for a lot of users. Currently there's autosave in place so this issue should not arise anymore. My reasoning for this behaviour:\nExternal changes\nIf the database is locked and changed in any way, changes should be merged. Merges cannot take place without unlocking the database and asking for merge strategies. 0.6.2 does not have merge support, it only allows to decide for reload or overwrite on the event of an external change to the database. 0.7 will include merge support. By saving on lock, the need for user interaction is removed. Also, this is a good way to propagate updates to other clients if the file cannot be saved frequently via autosave mechanics of NSDocument.\nMaster Key Changes\nIf the user changes the master key this change is not affective until the next save. With autosave this should be immediate but it might be postponed in certain scenarios. By saving on lock the master password change is in effect directly after the lock (which still might never occur)\nKeepass\nKeepass writes on lock, so it seemed appropriate to do the same.\n. 0.6.2. has a lot of broken stuff regarding undo/redo and correct handling of the modified status of the database. But that should all be resolved by now.\nAbout the file diffs. This is behaviour as intended. Take a look at http://keepass.info/help/base/security.html#secdictprotect for more information about the concepts.. The current continuous build should only write a file if things did change (based on the edited flag on a file). Can you confirm if this is the case or does MacPass still behaves unexpectedly?. Since you can remap them via the System Preferences I'll consider this as closed.. They are stored as UTF 16 afaik. . I'm deeply sorry for anyone losing data. This is a well known and fixed error. I am having not that much time so 0.7 is getting along but slowly. I think I will create an 0.6.3 to supply highly needed bug fixes to anyone using the binary distribution but without all the enhancements fully implemented. This then should reduce data loss for a considerable amount of users. . Regarding the usage of the notes field:\nA workaround for data loss is to use custom fields on the entries. This is not ideal since these aren't visible in the first tab but they are available for copy and paste via the context menu and also allow for better autotype support. . Duplicate of #445 #455 #463 #485 #552. @sebw thanks for the remarks. GitHub allows to close issues in commmits as well and I've done it before but rest asured that duplicates will arise all the time. You point to no officials release with the fix and rightly so but I am getting close to 0.7 and then a lot of this should be resolved. And I'm sorry for my occasional lack of documentation to make the development process more transparent. . @sebw you hit some valid spots. Knowing that MacPass has bugs and might cause data loss for people is a bad feeling. I tried to find an excuse by providing open source licenses that allow anyone to contribute and fix bugs as well as add features and always stating the software is not fully stable (I'm calling them alpha for a reason). There were some really cool additions as well as awesome support for localisation and bug fixes in the past. The MacPassHTTP plugin for instance is just a port of code the community has contributed. But in the grand scheme the main work is done by me. And do not get me wrong, I like it a lot but there never was that much support from the community on the coding side. Again, I'm not trying to lessen the support and contributions since I'm very happy about anything contributed (I tend to include typos all over the place for instance). This makes me a bit jealous of the guys over at @keepassxreboot since there seems to be a lot more support. This might stem from my lack of a good contribution process or not actually encouraging\u2026\nLong story short - I do get the point about showing \"up to date\" in the dialog but actually serving software that is way older than it should be.. KeePassKit does currently not support arbitrary key provider. This is something I did consider while adopting KDBX 4 but haven't had the time to deliver. Everything is doable and KeePassKit surely would benefit from a loser structure for key provider. MacPass then of course has to deliver UI support for this as well.. There was a bug in KeePassKit preventing nested search this shoudl be fixed. You might want to use the development branch and/or master.. Another note, this should be reported in for the plugin as well https://github.com/MacPass/MacPassHTTP. @amandamana MacPassHTTP build for MacPass 0.6.2 should work but it's an ancient release. I have no plans to backport MacPass to support 10.9 or below so you cannot build it on any of those systems without heavy code modifications. Supporting 10.8 or 10.9 puts a lot of constraints on what APIs to use. I actually wanted to drop 10.10 support as well since 10.11 introduced a bunch of nice enhancements to view handling which would make some UI changes in MacPass more enjoyable but I did not go through with this. I'm sorry to let you down on this but this amount of backward compatibility is simply to much of a hassle for me.  . It's not about fancy animation or anything it's about cumbersome broken APIs and extensive labor to just get buttons and dialogs to work. Believe me, nothing is used to make things look better it's mostly about cleaner, better APIs and reduced clutter in code. 0.6.2 still runs on 10.8 and this has not changed but the current development build moved up from 10.8 to 10.9 and eventually 10.10.\nI check the old codebase and see if I can get you running with those releases.\nI just was about to direct you to KeePassXC but realised they require 10.10 as well now.. I just tested MacPass 0.6.2 and MacPassHTTP 0.2.1 with chrome and ChromeIPass 2.8.1 and everything worked. Granting access, creating an entry and querying and entry for a web form. I have to check if this is a runtime issue unter 10.8 since I'm on 10.12.. That's the catch. There was a change in the api. I'll try to fix this and put a 0.2.2. out to make it compatible for 10.8 again.. @amandamana I just release 0.2.2 to be compatible with 10.8. Could you test if this release works for you? See https://github.com/MacPass/MacPassHTTP/releases/tag/0.2.2. Ah. Forgot the JSONModel Framework again\u2026. This wasn't the actual issue and since this has no priority I'm sorry if this takes a bit.. I just updated the password creator to support emoji. I need to update the Autotype system as well to ensure emojis are handled correctly.. Fixed. Thank you!. You might have luck with MacPassHTTP and a port of the browser plugin. But I'm not up to date on the status.. The delete key is not associated with delte but \u2318+\u2190. Did you remapt the keys?\nWhat Version of MacPass? Custom build or 0.6.2 binary release? I am unable to reproduce this behavoir with the current HEAD of develep. Since 0.6.2 is so old I close this until you can reproduce it. Then please reopen the issue!. Are you sure you want to learn a dying language like Objective-C? Kidding aside. The Plugin-API is very unfinished, actually it's only there to load arbitrary code and that code then can do it's thing all hands off. No hooks for menus, custom UI (apart form the settings view) or anything else.\nSince you would need to extend KeePassKit as well I'm more in favour of adding it to the base source so you should extend KeePassKit to support TOTP and then extend MacPass to be able to display correct UI for all of this.. And a very warm \"Thank you\" for the effort!. @weslly I hope the codebase of MacPass/KeePassKit isn't to confusing to extend. If you have any general suggestions or something you think should be done differently: shoot. I'm happy to get some feedback on the actual architecture since there's certainly a lot to improve!. If you run MacPass under 10.12 you already get that for free. I have no plans to implement a custom version for earlier releases.\nYou can show the tab bar (View > Show Tab Bar) and then use the + Button to add a new Tab. If multiple windows are open, you can drag them to the tab bar to attach them or drag them out, just like in Finder or Safari.\nTo get this behaviour all the time, you have to set \"Prefer tabs when opening new documents\" to \"always\" in the Dock settings:\n\nAnd voila, every time you open a new file or create a new document it opens in a tab.\n\n. What do you mean by \"no feedback\" and \"somehow would\"? MacPass will try to become the front most application and show the database lock sceen. Do you mean there should be more feedback to the user as to why this happens? Something like: \"Pleas unlock the Database forAutotype\"?. What version are you running? 0.6.2 or a custom build?. This behaviour is present for the internal global autotype. The MacPassHTTP plugin however does not show any information or a request to unlock the database. This should be added however. I would consider this a MacPassHTTP enhancement. However this should be a Plugin API so the plugin does not have to handle the UI.. @neon64 to open the app is not possible since the browser plugin does not know what app to use. It just talks to HTTP server configured in the plugin.. One nitpicking about the wording. All the tabs are entry tabs, since every aspect is a property of the entry, hence naming one entry and the rest differently is a bit confusion. Attributes might be a good way for both or fields. There's a UI problem with merging them. The Custom-Fields use a table view to easily support bindings to display all of the custom fields a user has added. Additionally this way it's easy to separate between custom attributes and default attributes. If the table is moved to the first tab, this tab now has two nested scrolling areas which is rather ugly. Using an NSStackView is not easily done since it requires custom controller code for bindings which I rather not add. My only real solution right now is to use a custom NSTableView that doesn't use an NSScrollView so the table is always displaying all it's content.. Valid point. I did run some experiments with scroll-less table views and they work - sort of - iff I get the kinks ironed out I surely will merge custom and default attributes into a single view.. General and Custom tabs are merged with ae36b9fb3247ad520c4b7c970e997fa520565af7. If you still have the broken file you could try to export it to xml. If there are indeed duplicate custom keys that's a hard error on MacPass. KeePassKit has change significantly since 0.6.2 so I think this behavior is fixed. Sorry for the inconvenience!. My only guess are entries with duplicate attributes. Take a look at the list of\n<String>\n <Key></Key>\n <Value></Value>\n</String>\nnodes under each entry node. If there are duplicate keys you found the error. . The keys should not be any of the default ones like: Title, Password, etc. . I'll took a look at KeePassXC and the error can only appear, if an Entry has a duplicate Key. Keys are compared case sensitive, so UserName != Username != username. Again, the KeePassKit code of MacPass 0.6.2 has been changed a lot so this might not ever occur again on the current code base.. Any progress?. Can you elaborate on the duplicate attachments bug?. This should be correct, since an entry can have multiple history entries with the same attachment.\nBut a history entry is not allowed to have nested history. The structure looks as follows:\nxml\n<Entry>\n    <Binary>\n      <Key>Text.txt</Key>\n      <Value Ref=\"1\"/>\n    </Binary>\n  <History>\n    <Entry>\n      <Binary>\n        <Key>New.rtf</Key>\n        <Value Ref=\"0\"/>\n      </Binary>\n    </Entry>\n    <Entry>\n      <Binary>\n        <Key>New.rtf</Key>\n        <Value Ref=\"0\"/>\n      </Binary>\n      <Binary>\n        <Key>Text.txt</Key>\n        <Value Ref=\"1\"/>\n      </Binary>\n    </Entry>\n  </History>\n</Entry>\nCan you take a look at your xml structure and see if this matches. If MacPass also messes up this structure there's a serious bug that I need to locate so any help is highly appreciated.\n. Thank you for the digging. The UI of MacPass does resolve this issue by always enforcing unique keys. This is something KeePassKit should enforce at the model level as well to prevent malformed content.. KeePassKit now updates duplicate keys (instead of rejecting them all together). However there seems to be another issue in KeePassHTTPKit or MacPassHTTP yielding the duplicate key in the first place. . What version are you're running?. Can you test if this is still the case with a current snapshot (using the continuous release)?. Problem solved:\n\nThis is disabled on purpose. I can enable it but if you do not store the key on an external source that you always unplug when closing the database this effectively removes any protection from opening the database.\n. No problem :). That is a known issue. The delete task uses srm which was removed in macOS 10.12. This is already fixed in the master/develop branch. . Fixed with #507. Duplicate of #588. What Version of MacPass are you using? Did you create the file in another tool?. I have tried to replicate this but am unable to do so. Using no compression and GZIP compression on the file, multiple edits and save wich 0.6.2 as well as the current develop branch always export the attached file as unzipped text.. Found the bug. KeePassKit did incorrectly compress already compressed files again.. The custom icon UUID was never written by KeePassKit. Fixed with https://github.com/MacPass/KeePassKit/commit/b1ac5bc5e897a1dab67e17b6d5a141f2d337f935 Regarding plugin data, can you elaborate? Also, better move the discussion to KeePassKit. As mentioned in #590 attachments were wrongfully compressed multiple times. This should fix both of the issues!. Duplicate of #466. Fixed in 109f9c879913edb822a1f98dcf1aae277e45f1e5. Will be deliverd with 0.7 or with a nightly/contiuous build. Sorry for the long delay!. Known bug, fixed in master, will be fixed in 0.7.. I cannot reproduce this error. Setting Argon2 in the Database and savin/loading works flawlessly. Can you supply more detailed steps to reproduce this error.. That's the same way I converted in my test. Some things that might cause this:\nDo you have attachments in your database?\nDo you have any custom data in you database (e.g form a keepass plugin)?\nI have to take a close look into what could cause this. The error says the XML document cannot be allocated, meaning this should not be a decryption error since the file has been encrypted correctly. It might be cause by a wrong parsed inner header coming form attachments. The reduction in file size also suggest you use attachments since the KDBX4 stores them more efficiently. That's it. Attachment parsing is broken. Thanks for the bug report!. The continuous snapshot includes the fix. . I have no idea how github determines the dates. Travis builds the tag every time I update it. If you download the file and take a look at the About box you see the build date of the app. Since the app is build only on travis after a push it is the most recent version if the build went through.\n. The gif is a bit concerning, but thanks :). The continuous release is a snapshot build of the current code not like the actual releases. The update system needs to be disabled since it's not supposed to work for these builds. I'll disable this in the future to prevent this sort of warnings. The binary isn't signed as well, unlike all the other releases. . The continuous releases now have Sparkle disabled so this error will not pop up anymore!. Of course it's possible. I'll set it up if I find the time for it.. Done. MacPassHTTP continuous release now works with MacPass continuous. I assume you're running 0.6.2? Can you test this with the continuous release (backup files before use!!!) and see if it still occurs?. Then I'll close this.. That's a rather strange bug. I'll try to investigate. Can you run a debug build so I we can get a better trace?. Fixed. Will be available as continuous shortly. If you could the following things, that'd be great:\nAre you running version 20170617070636-continuous?\nDoes the crash occur directly after launch?\nIf not, can you try to open a empty db and just create an entry and add a custom field?\nIf MacPass crashes directly after launching, do you have anything \"special\" in the opened database?\nCustom Field? Attachments? Custom Icons?. And again, can I supply you a debug version so you can give a bit more feedback about the crash. This short expert is nothing I can work with.. That is rather strange since your crash happend with the current build. I have no clue what fixed your crash and what triggers it.. If the crash still happens, please reopen the issue. Otherwise I'll regard this as fixed.. That's intentional, I have no plans to change this since I am not willing to publish my developer certificate in any shape or form. Official releases will be code signed though!. The error suggest a base64 encoding NSData does not understand. What version are you running?. The error occurs while trying to load the metadata and specifially when trying to pares a UUID data string. This might be an error when the string is not set. The normal way for keepass is to use null UUIDs for unset values.\nCan you supply the <Meta></Meta> part of your  file?. Found the error. Your Meta part is missing the keys. KeePassKit assumes those are present. This should not cause an exception. Thanks for the nice find!. KeePassKit now does not fail if UUIDs are missing in the <Meta> part of the KDBX document.. This is working in Continuous.\nEnter/Return in search moves to entries\nDown-Arrow in search moves to entries\nKeyboard Shortcuts to copy username, password, etc. all work directly on the first hit in searches when results populate the list. It's already there: MacPassHTTP. Sorry, I have no clue what that comment means. Can you elaborate? And there's a pre-compiled version of MacPassHTTP as well.. This behaviour is a known mayor bug in 0.6.2. Can you see if it still occurs in the continuous build?. @fabstei can you confirm this?. Feature is already working for Entries but not for Groups.. Since merge of #665 groups will also get focus . If you look closer, one it with \u2026 at the end. The action was missing from 0.6.2 but in current continuous build you can duplicate entries with additional options.. If you select more than one, then both should be named appropriately. Changing this is useful. But I keep by having both since one does not require user interaction and simply copies values, the other can use references but requires additional interaction which might be cumbersome sometimes.. Could you resolve the conflicts by applying the changes from upstream?. Thank you very much! . You should not enable Sparkle for custom builds as this defeats the purpose. You can disable the Sparkle updater via either building as Debug or setting the following environment variable: NO_SPARKLE=NO_SPARKLE\nFor example, if you build via the command line:\nxcodebuild build -configuration release -project MacPass.xcodeproj  -scheme MacPass CODE_SIGNING_REQUIRED=NO NO_SPARKLE=NO_SPARKLE. You're the second user to miss that scrolling is possible in the inspector. Maybe Apple should have come up with a better UI for this.\nI opened MacPass 0.6.2 and resized the window a bit and there you see two buttons (+ and -) to add and remove window associations.\n\nIf you select on, you can then change the title and keyboard sequence for it via the lower input fields. The drop-down is populated with all current window titles but you can also type a name in the input.. No worries.. Fixed in current continuous release.. Can you tell me, why you stick with 10.9? 10.10 runs on all system supporting 10.9 so it should be possible to upgrade. Since there are a lot of good API changes in 10.10 that make development a lot easier I did drop 10.9 support. My internal rule was to try to support the last 3 OS releases if possible. This is currently the case with 10.10, 10.11 and 10.12. When 10.13 comes around I will even consider dropping 10.10 support.. I'm going to stick with 10.10 as minimum for now and close the issue.. Should be implemented by someone with access to a TouchBar device. (as well as #514) but that's not me right now.. The ideas look nice, but what I do not understand is the \"edit\" button. Why should you click on this? To move the focus to the input fields? To open the inspector if it's hidden?. Not for me. And I have no clue how Chrome comes to this conclusion.. That seems like a strange crash since there is no real backtrace. A debug build would help. I'll try to add a debug build to the continuous release if I get to it.. There were problems with locking and file changes discussed in #619 \nPlease try to use the current continuous build and see if the problem still arises.. MacPassHTTP continuous is supported by MacPass continuous so could you please re-check if the crash still occurs for you?. @Sec42 any news? . That's a known issue, you need to build the plugin from source. See https://github.com/MacPass/MacPassHTTP/issues/35 for a solution.. Using both continuous versions works (again). There's no changelog but it's something I did ponder about as well.. Since 10.13 is still in beta and I do not run any of the betas I cannot work on this. What it looks like is a sort of dead lock. MacPass gets notified, that the system will sleep and thus will lock all documents. Locking means saving and so the documents should get saved. At the same time it looks like MacPass gets notified that the file did change (because of the write before lock I guess) and then tries to work with that but somehow those operations get stuck. It might be because of some changes in document processing and threading in 10.13 but I will not be able to debug this until 10.13 is official.. @fjl can you try to get a sample from the process as @Jellyfrog did? Seems I have a bug in there that's apparently only surfacing on 10.13 an it's changed APIs. I'll try to set up a debug system to get to the bottom of this.. I justed tried to recreate the state that @Jellyfrog had and I was able to come close.\nScenario was a file change via an external app and then send the mac to sleep. After waking dismissing the dialog did result in a hang. I think the issue is fixed with 801889865f3ffea5eea2cf72b7a32ec00317f42d and is available in the continuous build. Would be cool if any of you could try to reproduce this again.. @Jellyfrog do you have the ability to debug a build with Xcode?. Just a normal debug build of the current master. Please set a breakpoint at https://github.com/mstarke/MacPass/blob/801889865f3ffea5eea2cf72b7a32ec00317f42d/MacPass/MPDocument.m#L267 and step over the call to see if the hang originates there.\nI suspect the call to [super presentedItemDidChange]; might cause the hang.\nAnother candidate is the obvious bug at https://github.com/mstarke/MacPass/blob/801889865f3ffea5eea2cf72b7a32ec00317f42d/MacPass/MPDocument.m#L270 since this might get called outside the main thread but it should be guarded by the check but this might not be thread safe so there's room for errors too.\nIf you could recompile and test with\n\nremoving the call to [super presentedItemDidChange];\nremoving the call to [self revertDocumentToSaved:nil];\n\nI'd be very gratefull since I have no easy way to test this on a beta build.. That's a weird one since this should only be called when the database is locked. Thanks for the input!. the call to [self revertDocumentToSaved:nil]; should be dispatched to the main queue since it is UI related. This might solve your hang. I did push some changes to improve the thread safety but I do not know if this will fix you're issue. Otherwise I need to take a dive into NSDocument a bit more to get my head around this issue.. I have found a number of improvements to make MacPass handle larger item counts better. I hope to be able to make them available soon in a new build.. Current continuous build should be noticeable faster when manipulating larger data sets. . @Jellyfrog and @kitzler-walli any comments on the current status for you? Can you verify if the continuous build is not hanging for both of you?. I'm with you in converting to UTF8 . Thinking about this, the solution 1Password chose comes to mind. They use color coding to help you understand the Password better:\n\n. Color-coding works but integration into the password fields is a bit harder than I anticipated. But it's making progress.. I still wasn't able to fully implement this but here's a dev-peek. Colors are not ideal :)\n\n. The font is monospaced already. But only on the password and username filed. The custom fields use normal fonts. It might be usefull to switch all fields to a monospaced font.. The complete plugin system is unfinished and this requires a lot of work on all sides.\n\nstable plugin API\neasy installation/deinstallation\neasy discovery (e.g. a plugin repository). As a side note, I was considering plugin installation via drag and drop and double-clicking the plugin but haven't been able to finish it. Double-Click installation (as done by other tools) is by far the easiest way but requires the plugin to be present in the first place, the \"Install Plugins\" action inside MacPass might be better for discoverability.\n\nBundled plugins are another thing that I considered but I skipped it since I wanted to focus on MacPass itself without also having a lot of side-projects as distractions.. Add plugins button in plugin settings is present since 0.7.\nA plugin repository has been started here: https://macpass.github.io/plugins\nWhat's next:\n- make MacPass aware of the page and offer \"auto installs\"\n- support a plugin-version-checking system to ensure outdated plugins get updated\n- prevent unsupported plugins from loading in MacPass\n. Considered but results in the need to move/recreate the github project page and this is something I keep pushing along since I have no real idea and resources to actually do it right. There's a domain registered for MacPass as well (http://macpassapp.org) but this needs to be tied together correctly until then I leave it as is for the sake of simplicity.. CVS Import is a common feature request and should be tackled once the core KeePass features are stable an present.. I guess a CSV importer should be upped on the list :). This was a bug in an earlier release, this should not be present in any current builds. . It's not offered via software update, you have to manually download it in the releases section. Did you find the time to test this again?. This seems to be the wrong issue. Did you mean #632 . Can you try it with the continuous build?. MacPass should be able to open a KDB file as well. What kind of encryption did you use for the file?. Had you had any change to look into this?. Sorry to bother you again, I am very interested int the original KDB so it would be super nice if you could try to find out if it had anything special (e.g. was saved with a third party tool, had a special compression or encryption algorithm, had custom icons or anything out of the ordinary). You seem to have deleted your comment. Did you solve the issue? On your screenshots I see you use the password file as a key file which is a common error users tend to fall for. Remove the file as key file. Key file does not mean password storage it's meant to be a different form of security which can be combined with a password or used solely as the key to a database file. \nm i c h a e l  s t a r k e_\ngesch\u00e4ftsf\u00fchrer\nHicknHack Software GmbH\nwww.hicknhack-software.com\nk o n t a k t_\n+49 (170) 36 86 1 36\ncontact@hicknhack.com\nH i c k n H a c k S o f t w a r e G m b H_\ngesch\u00e4ftsf\u00fchrer - maik lathan | andreas reischuck | michael starke\nbayreuther stra\u00dfe 32\n01187 dresden\namtsgericht dresden HRB 30351\nsitz - dresden\n\nOn 29. Apr 2018, at 16:11, Koen Punt notifications@github.com wrote:\nI have something similar;\nBut the same database I can open with KeePassX\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub, or mute the thread.\n. It isn't merged because it simply comments out test cases that should be completed. MacPass lacks a lot of unit tests in some critical cases. Autotype is one of the better tested aspects but there are more things that need test coverage e.g. search. Also UI tests should be added as well.. Good idea. I'll look into it.. Good point. The continuous branch is for automated builds so it might be useful to diverge there and add just testing for the other branches but I'm not sure this is a simple setup for travis. On the other hand, test coverage for MacPass is rather slim. KeePassKit on the other hand has much better test coverage.. This is working as intended. I did opt to remove keyfile remebering when no password is set. It was requested by others to remove this restriction so I will consider updating the behaviour to work even when no password is used.. A detailed explanation for the rationale can be found here: #587\n. If it's still highly wanted to remember key files regardless of the password of a database please open a separate feature request.. Duplicate of #83. The current KeePassKit release supports this, the continous build has some functionality already working when the database file is changed outside of the application but it's all not implemented nor tested.. The {PICKCHARS} command is a bit complex and I never used it so it wasn't high on my list of things to do. Implementing it is a bit more tricky since it requires UI Interaction, a rather complex option list to support and more so I would not advice to implement this as the first thing you want to do in Obj-C. If I find the time I'll look into adding it.. Just a heads up. I'm onto adding this feature as it requires some nice changes to KeePassKit and the placeholder system. Currently the system works with the password input and no options are parsed but this should not take that much extra time. . Current status:\n\n. Nice work. I'll review the code as soon as i find the time. Love the contribution!. You're right, the Root UUID is not available for unencrypted databases.\nAnother observation: You added the ability to add passwords to the keychain. This was requested as a standalone feature so a suggestion would be to generalise the approach.\n\nTouchID devices can use a touchID encrypted keychain, other devices use the normal keychain if the user chooses to store it this way. This way you can even migrate keychain items.\nThe most secure way would be to use the secure enclave to encrypt a key that is then used to unlock the database but this only works for one device and defeats the purpose of sharing the database.. You can add the changes you made to this pull request so it'll keep up to date!. Also an aside - do you absolutely need to use swift? I'm a bit hesitant to ship the run time with every MacPass version just for a single file. Also this adds another layer of complexity since Swift changes are still frequent so MacPass needs to be updates all the time to keep up.. @L4grange Any updates on the Objective-C conversion? I might try to do it myself if you're ok with it.. No worries. I'm in no position to criticise the development speed. If you want to share your progress, I'm happily trying to get it to work!. Found the issue. It seems that macOS 10.13 uses secure coding by default and there was a bug in decoding tags. Will be fixed with the next continuous release.. Fixed in current continuous build. Should be fixed in 34c33ef008d2ff354a66313724db0468a31becdc and deployed in continuous. Should be fixed in 34c33ef008d2ff354a66313724db0468a31becdc and deployed in continuous. Should be fixed in 34c33ef008d2ff354a66313724db0468a31becdc and deployed in continuous. Should be fixed with 34c33ef008d2ff354a66313724db0468a31becdc. Continuous build includes the fix.. Just a ping to nudge you to test if the bug is still present. If not, please close the resolved issues!. The current continuous build has a checkbox allow all files in the open panel to enable the desired behavior. . A side note: security through obscurity is never a good idea. If I would build a bot I would check for kdb file headers and just ignore names and extensions. . Does the continuous build work as you'd expect it to?. I'll close this for now since it's working in the continuous build. Can you clarify the version? 0.6.2 or continuous?. Fixed in cc69db11d34bb00124397e03b8d4f11093b453be. Was a KeePassKit issue. Additionally MacPass allows you to copy usernames, passwords or urls by double clicking on the column of the entry. Another solution for you might be to use Autotype. This way MacPass puts the app back in front, that was front-most before you switched to MacPass and (by default) types username and password into the focused input fields.. It doesn't matter whether the entires reside in the main menus or inside a context menu. You can set custom shortcuts for all of them. What might happen is, that you will not see them correctly displayed but they should work.. I just tested it with - alas with the current continuous build - and it does work. What is indeed broken is the diplay.\nHere's my system settings:\n\nAnd here's the context menu, that gets rendered:\n\nPressing cmd + C dose however copy the password and cmd + B copies the username . I just found a nice bug. The Context-Menu does render Copy Username wrong, the Action Button Menu however does correctly render both updated keyboard shortcuts.. @bbyk true. Restarts are needed. Sometimes even multiple ones to make the changes take effect.\n@robbpriestley Regarding minimizing after a copy that is something I can add as well. This should be included in the workflow settings as I personally would hate this behaviour.. To clarify, what version are you running (you can see it in the about dialog)?\nIf you're running a continuous build it is a side effect of macOS' autosave. Every time you modify the database, the system saves a version even without you explicitly telling MacPass to do so. This way no data should be lost even if MacPass or worse your mac might crash or get switched of without a proper shutdown procedure. Since every time the database is saved a new random seed is used for the key the encrypted data will change as well. Hence every save (even without changing anything inside the database) will generate a different binary file. Keepass for windows to my knowledge only saves on lock and when you press save. However there should be no problem since the file is always valid and can even be synchronized when changes where made on multiple sides. . I'll close this then.. Well known issue. Fixed in continuous build. Will get pushed out in 0.7 shortly. . My understanding is that using - [NSPasteboard prepareForNewContentsWithOptions:]with NSPasteboardContentsCurrentHostOnly as an option prevents the content from being transferred between devices. I set this for the current master and it will be released with 0.7.4.\nIf universal clipboard is a requested feature, I can add a preferences setting for this.. I have added a checkbox in the general preferences to enable support for universal clipboard. The default behaviour is to disable it to minimise password spillage. For MacPassHTTP bugs pleas use the corresponding repository (see https://github.com/MacPass/MacPassHTTP).\nRegarding your error, this is due to the binary release of MacPassHTTP being only compatible with the binary release for MacPass 0.6.2. There is no version checking incorporated in plugins so most of the time will fail silently which is the case in your situation. See other bugs related to this. To fix this you can build a version of MacPassHTTP with the current master, as this should run without any issues. When MacPass 0.7 will get releases I will update the plugin to fix any issues as well but currently compatibility is not a focus.. Using both continuous binaries should work!. Thanks for the contribution. I have been building a dedicated website at macpassapp.org and to move the whole repository to the MacPass GitHub organization. . Said repo is located at https://github.com/MacPass/macpass.github.io. Fixed in current continuous release. Duplicate of #639. I'll take a look. Your using the continuous build, right?. Found the culprit. KeePassKit did not save the correct final HMAC termination block for the KDBX4 files so Keepass on Windows did complain. You will not be able to recover from this error with MacPass however you can repair the database with Keepass (on Windows for example). I might actually add a repair option to MacPass for this kind of scenarios. Sorry for the inconvenience. By the way, KeeWeb will load the \"corrupted\" file just fine and then save it in the correct manner.. I'll push the fix and tell you but currently it's broken. . Current continuous build has the fix included. You now should be able to modify the database with MacPass and be able to reopen it with Keepass.. Thanks for the fix!. I'll take a look into the GUI glitch, this might be due to some changes to how the entry display is bound in a recent push, I did change that so this might have slipped or it only occurs on 10.13 which I have yet to upgrade to.\nAbout how changes are recorded: I pondered how to solve this a long time and came up with the current method. If you select an entry and start changing anything, the last state will get pushed to history but nothing more until you change to another entry/group and get to that entry again.\nMy goal was to remove an edit button and just make this as seamless as possible. The other solution would be to push every change to history but this will result in a ton of history entries and with the default settings for Keepass containers (10 history entries), you do not get that much use out of the feature. Other clients like 1Password use special consideration for password fields and store every change on them and just do not record any changes on other fields. Keepass(XC) as well as KyPass uses a modal edit in which you change all attributes you want and when you're done, the entries previous state is pushed to history. This way you will get all changes to any filed you actually committed but not every change that happened while having the modal edit open (e.g. multiple uses of the password generator)\nThere might be a better solution but I have a strong desire to make the edit as seamless as possible and get the history recording at best fully transparent.\nCan you point me to some things you feel are missing in the current solution? Do you want to know and have stored all the passwords you ever created? Might a change in the behaviour to work the same way as before but make every change to a password field record additional history entries solve this for you?. Todays continuous release will include the fix for the history display.. I also enabled the history control to set size and number of entries. This will get pushed soon to continuous. . Todays continuous release included the updated history settings.. KeePassXC stores the transformed key after it was computed once. This happens on load and if you do not change the key or the number of rounds the stored data is used for writing. KeePass for windows as well as MacPass does not reuse any seeds but regernerates them every time the key is derived (which happens on every save). I have no clue why KeePassXC opts to not do this since it weakens the database against attacks.. I just opened an issue[1] on KeePassXC to see what the develpers think about this behaviour.\n[1] https://github.com/keepassxreboot/keepassxc/issues/1051. It's a good catch :-)\nThe weakness is introduced by not changing the random seed. Only the master seed is generated all the time but not the seed for the key derivation and thus it reduces the amount of data an attacker has to guess significantly. I have no numbers on how much weaker this is. But even Dominik mentioned it on the KeePas website: https://keepass.info/help/base/security.html#secdictprotect. I'm closing this since I guess everything is clear now.. Fixed. MacPassHTTP continuous should work again with MacPass continuous. Thanks for the fix!. What Version of macpass are you using, what settings do you use for the database-keyderivation?\nI cannot reproduce this behaviour with the current continuous build neither with the old KDBX3.1 nor the newer KDBX4.0 file version.. You're using an old continuous release (Build date is 2017/06/17) there were some fixes regarding attachment storage that should be resolved in the current continuous build. Addionally MacPass did write a wrong hash value that leads KeePass to determine the DB is corrupted but in fact it isnt. This issue has be resolved as well. Your observation has nothing to do with attachments. Simply saving the DB with MacPass will result in the described error. You can circumvent this if you use AES Encryption and Key-Derivation as this will store the database as KDBX 3.1 which will be written without any issues. The error occured only while writing the new KDBX4 format. Sorry for the inconvenience. I think this is resolved then. Thanks for the contribution!. What I do not like is the OpenPanel on the path control. I tried to find the menu and check what action gets invoked but I did not put that much effort into it, but I think this should be done via the menu not via the \"first-responder\" way. Anyway. I like what you did a lot!. I cleaned up some of the code, removed the duplicate delegate creation (via code as well as xib) and I rolled back the key-path-control popup as this is rather intrusive. I found the private API [NSPathControlCell:_otherItemClicked:] that needs to be send to NSPathControlCell to get the internal behaviour. Also, I am a bit sceptical on the New-Submenu front but I keept is. Cmd+N is for new documents in my head, but this is so much less frequently used than creating new entries or group it shoud get the easies shortcut.. I am about to bundle 0.7 and have just a few things on my list I want to finish. KDBX4 support was a big change and there are some minor parts that aren't properly supported in MacPass. Furthermore I did add synchronisation as a feature but there too are some minor things that need cleanup and more thorough tests. That beding said, I think 0.7 will come out this year and I even think it's going to be far before Christmas.\nAbout tagging - the continuous tag is moving along with development so it always reflects a \"nightly\" build. I suspect cask does not work well with a never-chaning version that is actually an always changing version, right?. Did you download a binary? If not, you explicitly must disable sparkle for Releases.. See #609 for a solution for custom builds. Did you use the newly build binary? Take a look at the last output of xcodebuild to find the location in the derived data folder. I just tested the setup and everything works as expected.. I should burry the fix autotype windows in a Help/Repair/DoOnlyOpenIfYouKnowWhatYouShouldDO menu or option as this is a legacy help tool for updating 0.4 DBs created by MacPass that not so many should have.. Can you take a look at the output log for xcodebuild for details? Exit code 65 is not very specific.. Strange. Even stranger ist the simulator dependency.. I have tried to replicate the error but failed to do so. Do you have Xcode and all it's simulators installed?. Open the file and select change database password from the file menu. There you re-use your password and add a key file. The change will take effect on the next (auto)save. . This bug is fixed in the current continuous release and will be published officially with 0.7. You're running 0.6.2. Can you try using continuous to see if the error is present?\nAlso, there are signs of undo/redo. Did you try to undo changes or might those logs be unrelated?. I'm closing this, if the crash occurs again, please file a new issue.. Feature was moved forward to 0.7.4. Current prototype:\n\n. Your're awesome! One note: Autotype builder and reference builder are both prototypes and will most certainly change (a lot potentially).. Since macOS 10.12 tabbing is supported by the system so I chose not to implement a custom solution any earlier macOS version. If you want to use tabs, show the tab bar via the view menu and merge windows by adding them together via drag and drop or with the menu.. I do not like to offer application settings for system settings. You can set the system wide default to \"Always\" for \"Prefer tabs when opening new windows\" in the Dock settings to force tabs to be used whenever a new window is opened. MacPass will adhere to those settings. It is possible to enforce tabbing regardless but I then would need to add another settings items\u2026\nIf you leave the setting to \"Automatic\" you can press \u2387 when clicking Open or New in the File menu and the newly opened windows will be added as a tabs.. KeepassHTTP has been besides Kee(Fox) a requested feature. I did look at KeepassRPC for a while but skipped any work to focus on MacPass. KeepassHTTP was a contributing so it was easier to add. KeepassRPC might be a good idea for another plugin since I have the understanding that KeepassRPC is more secure than KeepassHTTP.. You're hitting a sore point there. Plugins for MacPass currently have no real fleshed out interface. I recently started to work on this a bit more while working on TOTP support since a lot of good ideas for plugins then came to mind. If you want to get to know how to create on, MacPassHTTP is a good start. I might upload my plain sample plugin to make it even easier, but a dummy plugin is actually rather simple:\nWhat you have to do is create a bundle project, add the MacPass headers to the header search path so you can use all the source (as well as the included KeePassKit) and then create a MPPlugin subclass. \nThen you should implement the designated initalizers -[MPPlugin initWithPluginHost]and off you go.\nYou can add a settings interface by implementing the MPPluginSettings protocol and you should be good to go which basically is just a getter to retrieve a NSViewController that is displayed in the plugin settings of MacPass for you plugin. The other protocols aren't stabilised and might change (a lot).\nTake a look at the MacPassHTTP project settings for HEADER_SEARCH_PATHS\nSupport for Kee is a keen goal and I'd love to see a working plugin for MacPass so if you need any help, feel free to ask.. Fixed in 0.7.1. You have to upgrade to MacPassHTTP continuous. I will publish a compatible version of MacPassHTTP 0.3 soon.. If you use the 0.3 release you should not have to enable \"Load unsecure plugins\" since it's properly signed. What version of MacPass are you running?. The behaviour seems to happen when no selection is present, since the notes then just do not get stored anywhere. Only groups or entries can have notes. This is fixed in 0.7.1 since there the notes field only is enabled if an item is selected. If the file is just opened there should not be any modifications written to it. Does the file get locked? If so, this will cause a write of the database with newly generated seeds for the password and encryption which results in different data and thus a file change on the binary level.. I'm not referring to any .lock files. Other Keepass clients have used those to indicate that the file should not be modified. MacPass does not generate a .lock file nor does it respect it. By locking I meant locking the database so you see the password input. This happens automatically after inactivity if you set MacPass to auto-lock.\nWhat do I mean by seeds? The database is encrypted. To ensure a strong encryption, random data is added to the key used for encryption. This random data is never the same for each save and thus the key also changes for each save. This yields different encrypted data and what you end up is a different file on disk every time the database is saved. Not doing this would compromise security vastly. This approach cannot be changes because the KDBX file format is encrypted a whole. Other formats try to mitigate this my storing each item as a encrypted chunk.\nWhy does MacPass store the file every time you lock it? It removes the file out of memory (at least as much as this is possible in a modern system) and ensures data integrity if you share the file e.g. if another client has the file open both can react to external changes. An older release of MacPass did not do this wich lead to a slew of problems in a synched scenario.\nAdditionally MacPass supports autosave which will save the file even if you did not close, lock or save it manually reducing the potential risk of data loss to a minimum. Normally autosave should only kick in if you actually change the file so this will not issue saves (and thus file changes) out of the blue.\nI'll try to investigate this to see if there is something wrong with MacPass resulting in unnecessary saves and the corresponding file changes.. Do you both lock the database manually or via the auto-lock feature? If so this does explain the changes since even when there are no changes to the file MacPass will write a new one. A possible fix might be to not write a different file if nothing has changed.. @neo-anderson does it really save each time you close without any changes since I was unable to reproduce this or does the same save after locking behavior occur for you as well? Does the window title change to \"edited\" before you save?. @eplanet it should. In conjunction with searching for a solution I found out that merging doesn't mark the document as changed so I will push out 0.7.4 to fix this as well and it should mitigate the always-write problem. (see 32a1f10910865f67df4ce7edc8ffaf31e0ee6152). @neo-anderson If I have a notion what is going on I can point this out, problems arise when some use case doesn't make sense to me and I have no clue of pointing the user to the actual cause so no worries!. To clarify my concerns: Always writing is a save bet so no data will be lost. Skipping the write introduces the risk of data loss if something isn't working as expected so I need to make sure this works as expected. I'm happy that most of issues resulting in lost data with 0.6.2 and before where fixed in 0.7.. The fix is not pushed into a release since I had other plans as well and wanted to fold this into 0.8. It might be worth pushing this out as 0.7.4 instead.. The current continuous build supports this and will not save the database on lock if nothing has changed.. I released a signed version MacPassHTTP 0.3 which works with MacPass 0.7. Awesome. I would suggest using an external XLIFF tool. I recently started using the process documented by Apple (see https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPInternational/LocalizingYourApp/LocalizingYourApp.html) and this is highly preferable. The only downside is the order of the string files get's changed to alphabetic.. If you come around to export/import a XLIFF you might want to update the pull request with the additional changes.. I'm using a custom build of XLIFFTool and a vanilla version of iXLIFF since I did not came around to add the \"set target language\" feature to XLIFFTool. Both of them work nice and do the job.. There is no easy way and I should add this to MacPass to see what version you are using. If you do not change the key derivation to Argon2 or the encryption to ChaCha in the database settings MacPass will keep storing in KDBX 3.1. Not all third party clients support the new format so you should check if the ones you use do and only then change. The new format has some advantages but you can happily keep on 3.1 for now. . Since 0.7.2 there is a display of the database version of the file written to disk. see #691 . I will enable continuous again but currently the official releases are preferred. I actually think about removing continuous again to force tighter releases. . Upgrade to MacPassHTTP 0.3. The plugin API did change so 0.2.x does not work anymore. . Can you provide a log for more details?. Not needed. That bug is not new from the codebase. Any string containing more than one reference will cause a crash.. This is where the {PICKCHAR} command comes in handy. Sadly it's but yet supported by MacPass but since you are the second one requesting it it might be worth implementing. See #637. I'm closing this in favor of the duplicate #637 . Not if you have set the Database to remind you. Take a look at the File > Database Settings > Advanced and at the bottom section that set reminders for password changes.. There was a bug that resulted in this behaviour when the database was being auto-locked after already being locked. This seems to be the issue you encountered and not anything with database settings. 0.7.3 fixes this. Sorry for the inconvenience.. Take a look at the database settings and check the bottom part in the advanced tab. There should be some settings explaining the behavior. . What version did you previously use?. Crap. That's an issue introduced with 0.7.2. You can manually downgrade to 0.7.1 until I publish a fix.. If both off of you could disable auto locking in the preferences and see if the error still occurs it would be great. If this resolves the issue instead  of using. 0.7.1 you can then alternatively disable auto locking and wait for the fix. And sorry for the inconvenience.. I've release 0.7.3 which should fix the bug. The automatic updater should pick it up soon and you should change the settings back to the way they were.. Nice. And sorry for the fuck up!. That's an UI bug resulting from selecting the last entry in a group after it was selected. Just select any entry in the group and then the group. I should enable double clicking on the group or fix this in some other way.. It's interesting to see that such seemingly small UI bugs cause so much trouble. I definitely should pay more attention to them and try to fix them :). In your screenshot you use a KDBX file as the key file - the \"key file\" is not the database but a file used as key, if you remove the key file can you open the database?. No problem. Glad to hear that MacPass didn't mangle your database. I was hoping for a user error since bugs resulting in corrupted data are the worst - especially when dealing with passwords.. Thanks for the Contribution!. @nickmalcolm I took the liberty to improve upon your image idea. Also now I know how to \"trick\" GitHub into hosting the images I use in the wiki. So another thank you!. Can you be a bit more precise? Autotype does not care abut the case of commands. . This is strange since all the searches are case insensitive.\nTo test this I used the following html document:\nhtml\n<!DOCTYPE html>\n<html>\n<head>\n    <title>title</title>\n</head>\n<body>\n<form>\n    <input type=\"text\" name=\"username\">\n    <input type=\"password\" name=\"password\">\n    <input type=\"submit\" name=\"submit\">\n</form>\n</body>\n</html>\nI created a database with three entries\n\nInvoking global autotype with firefox brought up all three hits in the selection dialog:\n\n. Can you confirm the behaviour? If not I need look into it.. The GitHub page for the project is neglected and I started creating a new one under the MacPass GitHub organization. There even is a URL (macpassapp.org) but I had to disable it since https wasn't working so I couldn't serve updates.. Proper setups isn't the problem. GitHub pages with custom urls and https is. The only solution I've found so far is to use Cloudfare since I want to keep the page in GitHub.. Sorry if the answer came over as rude. There is an issue, yes and I do not want to host the website on a personal server for convenience. I just got the name registered so I can only setup DNS records that do not allow me to use anything in between. YOu're right with your suggestion to use some method of forwarding but that is not possible with the current setup. I see the need to address this issue (hence the new website and the domain) but haven't come around to fix this in a satisfactory way.. The link to the latest release is not ideal since continuous is the latest release very often but not the version a normal user should download.. Fixed with the introduction of https://macpass.github.io. I try to warn people about changes in the release notes. A system to automatically detect plugin requirements and detect outdated version would be awesome but it requires quite some effort. I pondered about this and came up with a list of options.\nBreak plugins compatibility with every update\nThis is an easy way but requires constant updates to any plugins which might run fine since nothing has changed. This is not bad at the moment since there's only on plugin for MacPass available at the moment which is even maintained by myself but this will kill any other (potential unmaintained) plugins rather rapidly\nIntroduce versioned Plugin API\nThis requires a big effort to abstract internal structures away form the plugins since currently they can mess about and e.g. have to have access to KeePassKit directly wich might change with MacPass changes. This would be an awesome way since then the Plugin API could be highly abstracted but currently it's too much effort. Again - only one plugin exists ATM.\nSemantic Version Checking\nThis seems like a reasonable solution since checking is rather straight forward and easy to implement but it pollutes the versioning of MacPass. Any changes to internal plugins that break APIs will lead to a \"mayor\" change in MacPass but without any real user facing changes. That's no deal breaker but unfortunate.\n. If plugins incorporate a update system this should be handled by them internally, I would not got as far as to include a update framework for plugins. What would be feasible is a plugin repository or means for plugins to propagate their version and updates to MacPass to let it check for updates.\nOne mayor issue is that broken plugins can crash MacPass and this is highly unwanted behaviour. That's why my first idea was to use a very strick and conservative way (Xcode does the same if I recall correctly). A simple plugin repository is published on https://macpassapp.org/data/plugins.json. This is parsed by MacPass and incompatible plugins aren't loaded. Currently you only see this if you go to the plugin settings, so no user dialog keeps popping up when plugins cannot be loaded.\n\n. If other plugin repositories might pop up, it might be good to offer multiple sources. I'm thinking about something in the lines of apt or sublime package control repositories.. 0.7.4 contains the above system with a curated compatibilty list on macpassapp.org. Hi Jeff. Did you read the release notes of MacPass? If so, how should I phrase the warning about plugins breaking differently so that you wouldn't have missed it?\nTo fix your problem please install MacPassHTTP 0.3.x.\nSorry for the rant but this keeps coming up all the time and I have no clue why so many users miss the bold warning. . See the discussion in #703. I guess since this seems to come up as a regular source of problems I should actually spent some time on making this better. A global \"disable plugins\" settings is another good solutions. I enhanced the plugin loading a lot recently so you get more out of it and are able to install/uninstall via the settings but no system for compatibility checking is in place.  . This is a system setting. MacPass adheres the setting for tabs. This has changed with 10.13 to be more \"tab-affine\" but since MacPass supports 10.10 I cannot upgrade to this newer api. If you set macOS to always open new files as tabs MacPass will do so as well. If you have set to fullscreen only or never, pressing alt while opening a file or creating a new database (with the menu) will use a tab instead of a new window.. I have to revise my comment about the behaviour. Tabbing behaviour can be set so MacPass uses tabs instead of windows even if the user defaults are different. This might be unwanted for some use cases but I guess it's the better default behaviour.\nThis is updated in master and continuous as well. The custom fields have been moved into the general tab. They are listed below the tags. Just scroll down to see them.. I tested this behavior but it didn't pan out to work as simple as expected. With a bit more time this should be trivial and is indeed a major UX improvement. . The current continuous release incorporates some changes that allow to use the down/up keys to navigate the results after a search. Addionally a \"Item\" menu item was added and the shortcuts to copy entry information are now available globally and this also for the search results without having to focus the entry table.. The Search needs some rework, this is one addition that has to be considered. Others are \"search everywhere\" to kill all birds with one stone.. Have you selected all the fields in the search bar?. @zipzit any news on the bug?. The current continuous release has a \"Everywhere\" option to search in every field. That is:\n\ntitle\nusername\nURL\npassword\nvalues of custom attributes\ntags\nUUID. I'm closing this since it's captures by the \"Everywhere\" parameter. The UI and some other aspects of the search should be reworked however.. The system is rather simple. It tries to download a favicon.ico file and uses that. If no icon is found (a non 200 response code) and data was received the icon is created. This sometimes leads to the described behavior of empty images. A simple enhancement should be to test if the image actually is an image since this is currently silently ignored without failure. \n\nA more sophisticated approach would be to try more icon files, parse the header for images or use the google favicon service but I did not spent that much time on the feature. \nFixing the empty image behavior is vital and easy and should be added, the rest requires a lot more work. If you want to takle this, I'd be very happy about a pull request!. You do know that you can drag an image into the icon to set it as a custom icon?. Thanks for the feedback. I went the other way and checked on the KPKIcon since I'm not sure a KPKIcon should get niled if it does not have an image. Regarding you code: The release message is not necessary since the code is compiled with ARC so this will actually result in a compiler error.. The discoverability is not ideal but I hesitated to clutter the dialog with even more buttons. It might be useful to reserve a special place like \"Drop custom icons here\" or something like this to make it more obvious. As a long time macOS user, I'm more prone to trying drag and drop since it feels natural to me even on places that do not seem to support it at first glance.. TOTP is upcoming. About synchronization: I have no plan to do anything for this since it should be possible to do this on the file system level e.g. mount WebDAV drives. You should be able to connect to WebDAV drives automatically: http://osxdaily.com/2012/05/04/automatically-connect-to-network-drive-mac-os-x/. Could you please provide more details:\nIs the file located in a share?\nDo you have any extension installed (as suggested by the log)\nDid the file open on an older version of MacPass\nWhat macOS version are you running?. From what a quick google search yielded I suspect an underlying file system problem. Can you try to eliminate that?. A suggestion I found was to remove the caches which is rather harsh but could you try to delete the ~/Library/Caches folder?. Any news?. @smlgbl what setup do you have? Does it reflect the one @phaus reported?\nCan you give more details on your setup?. @phaus Thanks!\n@smlgbl If we can clarify the conditions I suggest creating a separate issue to reflect the error.. This is a complete different error than what the issue is about. Can you open the file with another Keepass client? Where is the file located? Did you select the correct key file (if any) did you clear the key file if none is used?\nPlease open a new issue since this is unrelated.. Thanks for the nice work. I see that you did edit the localizeables file manually and did not include the strings dictionary file. Might I suggest using XLIFF export/import for a streamlined workflow? I switched to this method and found it to be a huge help. If you want to use it, simply select the MacPass project in Xcode, go to Editor > Export for Localisation and select Dutch. Use a free XLIFF editor (e.g. XLIFFTool) and save the file and then go back to Xcode and use Editor > Import Localisation to incorporate your changes.. Would you be so kind to coordinate the changes with #714?. Hello Frank. Thank you for you work, as I have already mentioned in PR #713 using XLIFF export and import is a good way to localise MacPass. This way you only end up with no missing string. However, as you have mentioned, some obsolete string will still be present but removing those is a lot more cumbersome. I plan to update a lot of the .strings files for interfaces since they are the ones with dead key but this involves re-adding localisations and some manual synchronisations which I haven't had the time for. This is mostly cruft from refactoring views but since the UI of MacPass is pretty stable I might put in the work.\nAnd a final note: How do we work with both PRs? I have no clue which one to use? Should I merge one and then the other gets merged in as well after a rebase?. Regarding your comment about text spaces: The UI is laid out with Autolayout so no string should break it, if this happens this needs to be fixes by adjusting the layout and not by changing the localisation.. Missing Strings might result from outdated string files for .xib files. This is an issue I faced recently and haven't paid attention to. To fix this it seems to be necessary to recreate those string files for all the localized .xibs but I'm not 100% sure. I need to take a look into this. The Localizabel.strings file should be complete however.. Can I close this in favour of #715 . Closed, see #715 . I had no time over the holidays to look into this. I will try to sort through this. I had the intention that all contributors come to a final pull request which is mergeable and the rest gets closed by the authors.. I'm going to close #714 an merge this.. Do you know you can create a folder with entry templates inside your database, set this as the template folder and just use those templates to create new entries?\nCreate a group with templates\n\nSet the group as template group in Database Settings > Advanced\n\nCreate entries from templates by pressing the arrow not the add entry button.\n\nThis will carry over to all KeePass clients. Using a MacPass application setting to add custom fields might be another idea but I do like to use KeePass built-in features. Sometimes they are a bit more cumbersome but the tend to work and are compatible with other clients.. I started MacPass as a port of Keepass so I always thought of it as a tool for people that already know keepass and know it's features and the documentation. Over the years MacPass has been picked up by novice users that seem to have no clue about Keepass. Documentation on MacPass thus need to reflect that change in the user base. The wiki is editable by everyone so contributions are welcomed. I'll try to put this in the docs!. Added. https://github.com/MacPass/MacPass/wiki/Templates. The removal of the repeat-password field was intentional but as you point out it bares the risk of changing the password without knowing it.. Custom field support for MacPassHTTP works with KPH- prefixes but currently MacPassHTTP lacks support for them. I'm working on this.\nI tried to stay away from the modular view that KeePassX/XC use since it made more sense to me to have the inspector concept. I would not go as far as to hide unused filed (maybe hide the ones without values but the UI to discover them might be tricky - I'm thinking about the way 1Password or Contacts.app displays an arbitrary number of information). What I have dabbled with is making the Inspector detachable, this way one could size and position the window indepentenly\nNormally the table view should show enough to work with entries but it might be useful to extend the columns so the inspector isn't really necessary for viewing, only for editing. Another Idea was to move the notes filed to the bottom but I simply disliked the UI. I tend to forget the use case of \"notes taker\" so this is definitely an area that needs work! . Nice catch! I'll try to fix this asap.\nCustom fields need the KPH-prefix to be visible but MacPassHTTP currently is missing support for them. . Deleting an entry in the search should simply remove to from the search list. If this isn't the case this is a regression. \nBy moving you mean via drag an drop? This I need to look into. \nThanks for the reports since those bugs are as you correctly point out quite annoying. . Autotype should already be in the gear menu at the top. Double clicking the entry title is good addition and can easily be added to the existing workflow settings. A separate button inside the table is nothing I would add as this is UI I myself consider as bad.\nThe only place for a button IMHO is in the toolbar which might be helpful as well for discovering the feature. . The current continuous build has an auto-type button added to the toolbar. It's added as a default button so it should show up automatically.. This seems to be an issue with the text field not having a separate undo/redo history. I think I might have broken this accidental by disabling undo/redo on the input. But - if you finish editing a note and move the focus to something else and then undo, the whole change will get reverted. If you type into the notes field and then undo, only the currently typed changes will get undone.\nCould you try to edit a different field (e.g. the username) and use undo to see if the behaviour on those fields is like you expect it to be?\nAnd thanks for the praise but MacPass is merely a port of an already established application (KeePass) so I only tried to make a good macOS version of this app.. Thanks for the other bug - this seems to be related to the menu not being used in the responder chain.\nAbout multiple entries dragging this is a known limitation. Please try to file new bugs for new issues :).. This is not a bug but a missing feature.. #515 covers this . You can use right-click and the copy on the uuid field. After it's selected with a right-click even cmd+C works. I should change the filed to be editable at least to make this easier.\nI'm also working on a wizzard to easily create references and insert placeholders so will get better UI wise in the future.. This issue should be moved to MacPassHTTP Could you reopen it there since the menu item is managed by the plugin.. I'll try to replicate this and look for a fix. Chrome has some issues with how it reports window names to the OS so there might have been some changes for the worst.. Thanks for the praise. You seem to store a lot of extra files in the database to get it to be this large. Saving the database with a lot of files is slow with the currently widely used 3.1 KDBX format.\nCan you create a copy of you database and save it with the new KDBX format?\nTo do so, open the database and then go to File -> Database Settings and in the Security tab select Argon2 for the Key derivation. Then save the file again and check if your save times have improved. If so, you might want to move to the new format once it's widely supported. I also have more potential for optimisations but those are not high priority but might save a few seconds. . The Problem is you changed your format to KDBX 4 with this. The new format is currently only supported by the official KeePass , KyPass and KeeWeb. Others will get support eventually but it seems to take some time as there are a lot of ports, some of which might never get it. MacPass support for KDBX was added with 0.7 so there may be bugs related to this, hence make even more backups if you switch to KDBX 4 just to be on the save side.. You seem to be using a lot of \"large\" binaries and KDBX 4 improved the storage of binaries dramatically. KDBX3.1 stores binaries as base64 encoded strings. KDBX4 stores them directly as binaries inside the database.. Done in a7469975aded00b32b9a1fde9ad3aa16d998b25c. This is included in todays continuous build.\n\n. Thanks for the tip I'll try to incorporate this into the workflow since localisations should be easily updatable.. I've set up a translation project at https://lokalise.co/project/754810385a9fcb67a28241.78374438/. @berliozz  I need to invite you as collaborator. If you want me too, please give me an email I can use to send the invitation to.. The Project was restored so the project id changed. The comment is updated with the new URL: https://lokalise.co/project/754810385a9fcb67a28241.78374438/. As it turned out, using Lokalise wasn't working very well as I had issues integrating it into my workflow and keeping the data consistent. I am leaving this dormant for now, if you want to contribute to localise, take a look at the Contribution Guide. MacPass tries uses the keyboard layout you set to perform Autotype. I think the current solution fails with Russian layout since it might not find the appropriate keys. Thank so for the report, I'll look into it. . The current continuous build includes the fix. I ran tests with Russian keyboard layout and the system seems to work like it should.. Your title stated \"not working anymore\" since when did this happen? Does it correlate with a Firefox update or a MacPass update?. The database should not be the cause of the issue. Do you use global auto-type via a hot-key or do you invoke auto-type from MacPass?. And I'm still on 10.12 so this might be a 10.13 related issue.. Thank you for the clarification. The clipboard is supplied by a daemon in macOS and sometimes the key events to paste arrive before the clipboard is filled with the actual content. This might be an edge case for Firefox and it's UI. I'll have to replicate this in my end and try to come up with a fix. As a side note: the Autotype system needs a rewrite to move away from clipboard usage to simulate more key presses which might fix such problems as well but this is still far out. . Strange since there aren't any changes regarding to this issue.. As an aside: I noticed the behaviour of truncated usernames in Safari under macOS 10.12 to but only on a certain website.. Closing since it seems to be fixed or not reproduceable anymore. Pleas re-open or re-submitt if the issue raises again.. Thanks for the find. This might be due to converting the match to a regular expression and thus making the pip an operator. I'll try to update my tests for matching and find the culprit!. Indeed a pipe will be interpreted as \"or\" so this does lead to a lot of false positives. Needs to be fixed ASAP.. Moved to KeePassKit https://github.com/MacPass/KeePassKit/issues/34. I do not think it's hard to fix. It's a bit more complicated than right now but nothing serious. But it needs to be fixed since this is quite annoying.. And if you want to dig into it and open a PR I'd love that! :). This is fixed now and will be included in 0.7.4. Drag and drop of entries is limited and this is a manifestation of those limits. Currently only the outline accepts entries as dropped items. I have to rework the whole drag and drop system so also support multiple items but haven't come around to it. If this is done dragging across databases will get better as well. . Currently icons will not be moved across databases so beware!. And keep backups. There where some nasty bugs with drag and drop in 0.7.3 which should be fixed in 0.7.4.. If you set MacPass to open an URL instead of copying it on double click you get sort of this behaviour. But I guess it is limited to the app handling the URL request. So override URLs might be nice.. Nice. I never did investigate what \"Type Selection\" stands for and disabled is some while back and you found the culprit. It's for selecting by typing D'oh.\nI'll try to re-enable this ASAP.\nThanks for the dig-up!. The current continuous build has the fix included.. MacPass is localized in many languages so if your language is supported it will be displayed. \nCurrently there is support for English, German, French Chinese, Russian, Spanish, Italian and Dutch. . @loru did you get MacPass to use a different language? What system language are you using?. That is the way how macOS apps work. There is no dedicated language selection inside the app. The language is chosen like you stated based on the system language . My system is 10.12 still so no way of testing if this is a 10.13 related error.\nIf I use the following settings:\n\nThe following happens:\nIf Chrome is already running a new tab get's opened with the url of the entry.\nIf Chrome is not running, Chrome launches, the last window get's opened (sometimes an empty one) and a second window get's opened with the url of the entry.\nMy Chrome settings are:\n\nIf I chose \"Open the New Tab Page\" the url will get loaded in the single window that opens after Chrome is launched so no extra empty or \"old\" page is visible\nThere might have been some changes to the way the URL gets communicated to Chrome in 10.13 but I'll have to dig into this once my main system is 10.12.\nIt would be awesome if someone with 10.13 can test this out to see if it is indeed a bug.. Thanks for the detailed information. I'll try to correlate this with any bugs filed to Apple or see if the docs for 10.13 include anything about changes to the NSWorkspace APIs (which are the ones used to open the URL). There are 3 issues in this one.\nCould you please split the one with \"#\" into a separate one.\nAutotype not working properly is also worth a ticket. This might be due to some timing issues since copy/paste timing might have changed. 10.10 required some changes there as well so this might be the same line of error but I have no absolute clue what's going on. The current master now uses a newer NSWorkspace API to open the URL. If the current continuous is up to date, can you maybe test this on your end to see if the initial Chrome related  error is at least fixed?. @sitsofe nice find! This seems to be the problem and the end result is that a radar is filed. I hope this get's fixed soon so I'll have no way on MacPass' side to prevent this behaviour from happening.. Darn. You're right. @sfiera the hero :). The URL is escaped before it is sent  to the browser. This might be unnecessary altogether. I'll have to check if just submitting a unmodified URL works as well. . I've removed the URL-escaping since it should never be necessary. The URL in the database ought to be correctly escaped. If the URL does not contain correct escaped characters MacPass will silently fail opening the URL.. Continuous will be built shortly so this contains the fix. 0.8 does need some more time so waiting for an official release might take a bit too long\u2026. Continuous is done so you can grab that one.. It's a development snapshot. Unsigned and sometimes a bit more broken than the release but most of the times better since it includes more  bugfixes and more features :)\nTake a look here: https://github.com/MacPass/MacPass/releases. The screenshot is from 0.6 and since 0.7 the custom fields have been moved into the general tab so if you want to add them just scroll down below the tags and you'll see any custom field present. The \"Add Field\" button to the right will add custom fields.. I cannot verify this with MacPass 0.7.3 and macOS 10.12.6.\nI have the set \"Displays have separate Spaces\" checked, which might affect the behaviour:\n\n. That is a good point to improve the setup. Displaying the dialog should work in any constellation.. Your explanation is correct. MacPass re-activates the last front-most app but does not direct what window to move to the front. But my understanding is that a correctly-working macOS app will re-focus the last key window regardless of the display. This might be yet another chrome specific bug. Is this behaviour reproducible with Safari or Firefox or any other browser?. Some ideas about solutions:\nCmd + A is a system wide shortcut for Select All which I would strongly avoid. It's likely that someone uses it by accident and ends up automatically entering the password inside an application with catastrophic consequences (e.g. a chat application)\nAlt + A is used in many keyboard layouts to modify the letter A. Shortcuts tend not to soly use Alt\nCtrl + A sounds good but collides with the HIG as Apple points out Ctrl is most of the time occupied by system wide shortcuts and Shortcuts should favour Cmd as the first option for a modifier.\nAnother way would be to use Cmd + P since the system default is for printing which is ok to overlay. I think an accidental Print is highly unlikely, at least a lot more then Select All\nAny thoughts?. As of #722 the button is added. The shortcut currently is set to Cmd + T with 5a5064da43dd654013872998a74c9d3c221fd936 as this relates more to the \"Typing\" instead of the \"Performing\" of the command. The font panel is not used for the app so this is ok to overlay the system default behaviour. So you use Cmd + L for Autotype and Cmd + Shift + L f\u00fcr Global Autotype?\nCmd + L is the default for locking the database so this is a conflict in your case.\nAnd again, we're up to deciding what's ok. Locking seems quite more useful to me than creating a tab, so I would argue Cmd + T is the better choice. And we still got the idea of Cmd + P but it's a never ending game as you might have already guessed.\nWhich brings me to the conclusion I always favoured. Defaults should be ok for most but for those who do want different settings, there's the remapping option.. Regarding your comment on Cmd + T and Cmd + Shift + T is this a change introduced in macOS 10.13 ?. Well then. I give up. There's no easy way. Just customise it to your liking.. Well, then I would have to move to Cmd + L for Autotype and have to kill Cmd + L for locking. Then locking would be Cmd + Alt + L?. The shortcut for Global Autotype can be easily change by everyone but I did indeed forget to change it in the process of moving to Cmd + T. MacOS allows the user to override or add shortcuts of an app. You can do so by opening the System Preferences and then navigate to Keyboard and select the Shortcuts tab. In the list at the bottom you can add custom shortcuts for apps by entering the menu item's title and your desired shortcut.\nWhy is the shortcut the way it is? It's historical. On introducing shortcuts I used CMD + Clike KeePassX but I quickly ran into a platform specific problem: On macOS every text input support CMD + C which will \"grab\" the action if a text input has the focus. This created some confusion and lead to undesired behaviour and my quick solution was to use a non-clashing shortcut.\nI have recently started to implement more logic for copy/pasting and better handling of text inputs since I need to intercept them to make the secure clipboard functional. In conjunction with this there might be some time to invest into a solution for simple copy/paste.\nBut there's also a valid point against ist. The normal behaviour of copy is to copy everything the user has selected. If you select and entry and hit copy the user might apply the system behaviour and might come to think the whole entry is copied and can now be pasted it to another location/database. This behaviour is currently completely missing and might be added as well so there's a clash in what's the actual desired behaviour.\nYour point on it's the common action to do is a valid one an the app should try to streamline common tasks so this might be a place to stray from the convention.. The rationale of copy for me is copy what is selected. If an entry is fully selected without a text input being focused which is the case if you just click on it my understanding of a bare copy command is to copy what's selected. If you select a folder you copy the folder if you select the folder, edit the name and selection is on the text and then you copy, you copy the selected text. Your point of making the clipboard the interface to work between applications is an interesting view which never occured to me but I would strongly argue that it's not the main usage. The Finder example works well to demonstrate this. You most of the time move the files you copied inside the Finder and do not paste them into other tools. Your point of using abstract data does not apply to files. Another example is a formatted Table in a word processor. The data is usable across applications even in it's styled form but I think a lot of uses of copy/paste happen inside the word processor and even inside the same document. The text document is however a very different representation of data than a simple table view of password entries. There drag and drop is a more apt interface at least for me. But this is surely different for other users. \nBut as I said it might be useful to streamline use cases.\nAnd indeed there is a functionality called duplicate that does exactly what you describe. The concept of copy/pasting doesn't have to replicate this behaviour.\nYou're critique is fine and your certainly not the first one and I have no problem with discussing those facts since otherwise there is no improvement. A main reason not to change them frequently is the noted possibility for users to change them as they wish. Including this inside the app isn't worth the hassle but might make it more discoverable (see for example Xcode and it's key-mapping settings also with some handy collision warnings). Nevertheless the goal should be to have a reasonable default and not just \"a default\" since most users do not know about the feature of system wide custom keyboard shortcuts.\nAnd as I said, I do have to put some extra efforts into copy/pasting to make it work reliable if it's the exact same shortcut as the system default for copying.. @tflo I have to counter this statement. You can override the shortcuts in the context menu. I did this myself a lot of the times to provide feedback for issues. The problems seems to be that the shortcut applied is already used by the copy menu item so this might be due to internal resolving mechanics.\nI did however add an Item menu to the main menu so all the actions available in the actions/context menu are now availabe in the top menu as well and this might fix this issue. The main purpose was to expose copy/paste to the window without having to focus the entry list. This is important for being able to copy attributes after a search.. Opening the database is possible just by macOS system tools via open. The additional parameter necessary for the keyfile needs to be added to MacPass and can then be passed with open as well via the --args option.\nAs an example:\nopen -a MacPass file/to/database --args -keyfile=path/to/keyfile\nBut I guess the direct usage of MacPass might be even more desireable. Awesome! Thank you!. Damn. I just read your request to keep the PR open. I'm sorry for being too fast :(. The merge is squashed so you might not be able to merge the changes into your commit easily.. Manual sort is a by-product of Drag and Drop which will get updated in the future to support moving multiple entries.. Do not close this as it's not done yet :). It's working in continuous and will get published in 0.7.4. I'm preparing 0.7.4 for release, there are some minor changes to the localisation. Can you rebase and update your PR? Thad'll be awesome!. It did. But I just realised I didn't push all changes that affect localisations. So erm you might want to do that once more and re-run your translation workflow to make sure you do get all the new/changes keys.. There are indeed some changes and additional keys but I haven't added them to the nl.lproj/Localizeable.string file since this should be done by the translator. This has the additinal benefit of the UI plainly showing missing string (by rendering the Placeholders). The simplest way to get the file updated is to use the workflow described here: https://github.com/MacPass/MacPass/blob/master/CONTRIBUTE.md. If you open the XLIFF file you will see all (empty) translations which you then can update, re-import into MacPass using Xcode and you're good to got.. Btw. thanks a lot for the effort you put into this!. Those items aren't finished yet and are UI for Keepass fields.\nYou can get them to show up if you put {PICKCHARS} and {PICKFIELD} in e.g. the username and then copy the username. A dialog will pop up to allow you to pick characters or pick a field. If you need more info on them, feel free to ask.. I'm finishing up 0.7.4 so could you rebase and resolve any conflicts?. Here's the current xliff for MacPass. If you find the time to update the file it woudl be awesome.\nnl.xliff.zip\n. No pressure. I have no time frame for the release since I tend to miss them all the time. So just take your time. If something is blank, the system will display the key so it's not falling back to english. This is rather unpleasant, but this way missing translations are spotted more easily.\nIf you do not get to translating everything, I can just paste in the english version so there's at least a decent text being displayed.\nAgain, thank you for you efforts!. WebDAV URL should not be anywhere. TOOLBAR_PERFORM_AUTOTYPE_FOR_ENTRY is present. You have to look for the Comment since the english translations is just Autotype. . I'm merging this and adding the changes from the xliff import in a separate commit. Thank you for your work!. Present and since bc60ca017474a5ea7908a2258aef223d8b08eac1 also working as expected with Autotype not only with direct copy of attributes.. Dankesch\u00f6n!. I'm not sure about losing the dash.. I've extracted all the changes and added them in 4f339ba24e2b0a63d4d6efa9d7c7ebe3a0a2be59. The added space seems to be a mistake. Normally the dots should be placed directly after the word without a space or am I wrong?\nI just checked and German indeed adds a Space before the three dots. Looks strange to me but who am I to judge.. Could you maybe add this into a single PR? I know it makes for nicer stats but it's quire irritating to have a PR for every single change :). The current implementation for displaying custom fields is using bindings and this way it was the simplest solution. A mechanism to display a value without having to unprotect it is highly desirable. I have to come up with a nicer UI for this which might prove difficult. This is the main reason I opted for the current approach to get the system working without having to invest too much time into custom UI.\nRegarding the edited state of the database: Normally if the database get's locked it will get saved if the file on disk is different to the open database. The edited flag sometimes sticks if the database was loaded after being autosaved which happens for example if you just quit MacPass without explicitly saving your changed database. This behaviour might confuse users but it should never lead to data loss as the underlying autosave mechanism of macOS should work as advertised: meaning it auto-saves.\nI should however infest some time to take a look into this to make sure there is not bug lying around.. Autotype now gets executed on the main thread which might fix this issue. When 0.7.4 is released could you keep an eye out if this still occurs?. 0.7.4 is out, please keep an eye out if this occurs again. @barylwires It surprises me the that MiniKeePass was unable to load the file. If you stick to the default database format MacPass creates you should have no problems in getting the file over to MiniKeePass and use it as this is the setup I use as well.\nMiniKeePass  actually did jump-start some stuff for MacPass since I initially used their version of the KeePassLib to handle the file format but then developed KeePassKit to accommodate for better undo/redo handling and easier handling of KDB and KDBX files.\nRecently KeePassKit has gained iOS support so there's always the idea of an app that might get built out of this but GPL hinders the distribution via the App store so the only real option would be to offer the iOS tool as Open Source for users to side-load it on their devices.. MiniKeePass lacks a good workflow to synchronise files the only workflow is the one you describe by importing/exporting the file from and to dropbox which is a hassle. There are other clients that might support Dropbox integration better.. Strongbox seems to work nicely. I only tested the macOS client that works well but lacks a lot of features Keepass offers. For a simple and straight forward password manager it seems nice. It supports all available Keepass container formats (KDB, KDBX3.1 and KBDX4.0). What it lacks is a way to change any of the encryption parameters but the defaults seem reasonable.. This issue should be handled in the documentation. The default approach would be to tune your database so that it works with the title of the website without needing the URL. I see the benefit of venting the URL for a clear match but using the title works well for almost all of my use cases. The one's where it doesn't, the selection dialog pops up which slows down the process of filling the password a bit but is still very fast IMHO.\nDocumenting those plugins to allow others to decide what to do seems to be the better fit. I see that you already added a section to the documentation of Autotype so I would consider this issue resolved. Interesting bug. I have no idea how you ended up with this column. Can you try to remove the table columns from the preferences and see if the error persists? This will delete your settings for sorting and the order as well what columns are displayed but might fix the issue.\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Columns v2 (null)\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Columns v2 EntryTable\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Sort Ordering v2 (null)\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Sort Ordering v2 EntryTable\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Supports v2 (null)\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Supports v2 EntryTable\"\n. My bad. Those commands are meant to be run separately.\nCan you simply list all defaults via:\ndefaults read com.hicknhacksoftware.MacPass\n\nAnd see what of the mentioned keys is still present?\nIf you find any, could you delete them one by one via defaults delete?. Did you have the time to look into this again?. I cannot reproduce this behaviour on macOS 10.13.6\nYou seem to have moved the \"Custom Order Column\" to the end, this column does not have any title but it's there to allow for custom order by the user.. Disabling the Column to be moved might be a good ideas. I'm closing this to open a separate issue #823. Does this error occur all the time or just sometimes? If this error occurs all the time, can you open the file in another KeePass client?. That's bad. What settings has the file for encryption and key derivation? What kind of key file do you use?\nCan you try to remove the key file in another client and just use a password and see if MacPass still fails to open the file?. That's on of those bugs that bugs me. No way to know why it happened. But glad you are able to open the file now.. The icons are stored as PNG with no special consideration for the color profile and it seems to me that there are some changes in the underlying APIs that result in color shifts. I'll have to take a look into this when a 10.13 machine is available.. I'm on 10.13 finally and can confirm the behaviour as well. Since it's only cosmetic I'll try to fix it when I get to it.. The issue is the introduction of wrong gamma values and/or a miss-matching color profile. I've not come up with a solution for coco and might have to drop to libpng. The issue is fixed in master and deployed in continuous. MacPass will however not fix the wrongly stored gamma values. To fix the icons, you can open the file in KeePassXC and save it. Then the icons will look normal again in MacPass and will stay that way on save as well. I might have to come up with a tool to help fix this without having to rely on KeePassXC. This works as intended. The identifiers are used internally and there is no fallback mechanism to a different language so missing translations will be displayed like this all the time. This is as it should be, otherwise it would be quite hard to identify missing keys.. I am quite sure the keys where added later. If you could get around and update the French localization and create a pull request that would be awesome. There's a section for contributing localizations in the Readme. . I can send you a current XLIFF for French. Might this help you in any way?. You do not need to export anything. Just edit the .xliff file and hand it back to me so I can import it via Xcode.. Since this is working as expected I'm closing this.. Thank you very much!. Import/export features are a great way to introduce plugins. This is something I've pondered with for a while but haven't had the time to actually pursue. I'd be more than happy if you can contribute a plugin or a stub for it. Pass has a simple key:value structure if I'm not mistaken so an import should be fairly straight forward given that the key should be used as the username and the value is the password.. This is fixed with 0.7.4. Simply pressing 'C' or 'B' completely contradicts expected behaviour. Changing the keyboard shortcuts can be done via the Keyboard preferences in macOS. However I should change the default shortcuts as well since they are indeed cumbersome.. Please use a separate issue for Autotype shortcuts. Additionally you can customise all shortcuts in the system preferences.\nRegarding the \"Open-URL\" shortcut, there should be an option to \"Open URL and Autotype\" to make this process even better.. @stadler as stated many times, you can change every keyboard shortcut in MacPass via the keyboard system preferences in macOS.. MacPass as well as KeePass are able to synchronise databases. This is a core feature for both applications an works the same way. The details can be found here: https://keepass.info/help/v2/sync.html\nWhat you are describing is an advanced system using triggers. Triggers are not present in MacPass and thus the process described as cloud backup is not possible with MacPass on its own. I have not looked into adding Triggers to MacPass but since this might be a feature worth implementing it should be considered.\nWhat you can do is just use a database in the cloud as a single source. If you have multiple clients accessing the file at the same time all of them need to be able to synchronise changes otherwise you risk data loss. To diversify simply backup the file using another method besides the cloud storage.. The synchronisation feature can work between any two databases (even as you correctly pointed out a database in memory and a database on disk). To put MacPass' implementation in perspective let's take a look at the section Invoking a Synchronisation in the KeePass documentation:\n\n\nManually. A synchronization can be started manually by navigating to 'File' \u2192 'Synchronize' and clicking 'Synchronize with File' or 'Synchronize with URL' (depending on whether the file to be synchronized with is stored on a local drive / network share or on a server accessible via an URL). If you've previously opened or synchronized with the target file, you can also simply point on 'Recent Files' (in the 'Synchronize' menu) and select the file. Manual synchronization is only possible when the currently opened database is a local file (files on a network share are here considered to be local files); when you've opened a file from a server using an URL, the 'Synchronize' menu is disabled.\nThe MacPass equivalent is done by invoking File \u2192 Merge\u2026 BUT only the opened file will be changed. This is different than KeePass which will modify both files\n\n\nCommand 'Save'. When invoking the 'Save' command, KeePass checks whether the file on disk/server has been modified while you were editing it. If it has been modified, KeePass prompts whether you want to overwrite or synchronize with the file. Note this applies only to the 'Save' command, not the 'Save As' command. See the page Multi-User for details (section 'KeePass 2.x: Synchronize or Overwrite').\nMacPass differs in that it automatically detects an external change and immediately handles the change according to the preferences\n\nTriggers. In more complex situations you can use the synchronization trigger action. See the page Triggers for details.\nMacPass currently does not include trigger system\nScripting. In order to perform a synchronization without opening KeePass, the synchronization command of KPScript can be used. See the KPScript help page Single Command Operations for details.\nMacPass currently does not support Scripting\n\n. Closing since the issue is resolved.. In the process of changing the behavior on secured password inputs I extended the context menu and encountered similar problems. Some menu entries were added after MacPass was notified about menus being displayed which lead to me not being able to prevent them. I need to investigate this further since the reported behavior is highly unwanted. I might not have found the correct API to prevent this. . I have implemented a fragile approach to remove the menu. But i think there are more items on the list that should not be present for a textfield with sensitive data. I tend to think that maybe it's best to remove everything except cut/copy/paste this will then get rid of speech, grammar, text-expansion and many more. The only thing that I have not found a way to remove is the services menu (which then might contain another \"search with google\" option). You mean like 1Password does it? The custom class for text fields used in MacPass supports something like this for ages but I never went on with it because of various usability and layout quirks that came along with using a single copy button. Furthermore this might break keyboarded shortcuts but I'm not 100% sure about that. . Current master does not show the services menu nor any other things that might vent the password. This is done by not allowing services in the text fields and removing any unwanted submenus from the context menu.. I can reproduce the error. The error only occurs if multiple items with multiple attachments are present. MacPass will silently dismiss the duplicates and thus create possible data loss. I will fix this ASAP.. 0.7.4 is scheduled to be released soon to fix this and another issue related to attachments. Yes. Continuous already includes the fix. I'm finishing KDB synchronisation issues to get 0.7.4 finally out the door.. I tried to dig into this but there's a world of pain associated with it. The underlying infrastructure of NSDocument tries really hard to force you to stick with pre-defined extensions and it's getting pretty hard to persuade it to accept other extensions but stick to the underlying format.\nAbout the double-extension, can you open another issue please and provide details on how to reproduce this behaviour?. @0rvar can you elaborate on the duplicate extensions?. An Edit mode is something that was planned in the process of adding history support but dropped since I wanted to remove an additional click. The culprit is that you can accidentally edit a lot of stuff so this is rightfully considered harmful and I might give this another try.. See #47 for further references.. I did some tests to use NSStackViews and hide all empty fields that seem promising. The creation of an edit mode will have consequences on the current system of creating history entries but this shouldn't be a problem. The biggest change however is another model for editing. The edit/cancel setup will require a decoupling from the UI to the underlying model until the edit is finished. This will remove the need to use all those custom binding controllers but it requires some rather drastic changes to the whole system.. I can reproduce the bug but this is rather strange. MacPass seems to prevent the writing of the actual file.\nIf i check for the file after MacPass reports a file change the file hasn't changed at all. Only after stopping and starting Google Drive Stream the actual changed file is present.\nI tried to open the file with other clients as well after MacPass did report the change and the changes weren't present in the actual file. This seems to be an issue with the way Google Drive Stream handles file changes.\nTrying the same setup with Dropbox worked flawlessly just like expected.. I have ran some tests with minimal setups and it seems that indeed the mounted volume based approach of Google Drive results in the underlying NSFilePresenter mechanism failing. Testing this out with other NSDocument based tools like e.g. TextEdit result in a similar behaviour. This might actually be my first radar ever ;). I'm not sure this is the case. What I've gather so far is that Google File Stream is a mess on macOS.. I think this is something for a different tool. Including FTP functionality is something that bloats the code base but should be rather done by another app.\nHave you tried using something like https://mountainduck.io or Transmit to use the FTP server as a Volume on your mac?\nIf this comes up all the time as a feature request I might start to support it but this brings in yet another external dependency :). @gagarine Just a thought but wouldn't folder actions work for this setup?. Broken selection is a regression that needs to be fixed since it was working on an older release. I even guess considereing quite a lot of UI bugs in 10.13 that this is another one of the things that simply broke.. The error is generated in KissXML referencing some libxml headers. This might be a change in macOS 10.13 which KissXML hits.. The error does not occur on 10.12.. Moved to the correct project: https://github.com/MacPass/KeePassKit/issues/37. To clarify this is an Xcode 9.3 issue which cannot occur under 10.12 since 9.3 requires 10.13. . The issue is fixed in continuous and master by switching to a newer KissXML version. I waited a bit since I did not want to bring unnecessary swift dependencies into the project.. MacPass has keyboard shortcuts to move the focus to entry \u2318\u2325E, inspector \u2318\u2325I and groups \u2318\u2325G. They are located in the View menu item. Search is started by \u2318F. Those work with 0.7.3.\nThe follwoing enhancements are currently only present int master/continuous and will get released with 0.7.4: All shortcuts to copy information from an entry work even when the search ist still active since the first hit will get used. Pressing the Down or  Enter inside the search will move the focus to the entry list where keyboard navigation works.. @mauron85 Enter is never necessary for a search. Search happens at the moment you type anything. The only drawback not pressing Enter is that the search term will not be added to the recent searches list. The workflow you describe works sans Enter\n\nCmd + For click in the search box\ntype text in the search box and wait for the results to show up\nif you're happy with search result, use Enteror use the arrow keys to in the list\nif you're not happy with result you can adjust search text and wait for the results to show up\nyou can use all the keyboard shortcuts without ever leaving the search box on the first entry in the results\n\n. I'm closing this since \"most\" of your improvements are present in 0.7.4. Does Autotype work for your setup or can you only use copy and paste?. Please note the difference between Global Autotype and Autotype. Autotype requires you to select an entry an then trigger Autotype. MacPass then brings back the previous application and types the details. Global Autotype tries to remove the need to got to MacPass and select the entry by trying to find the correct entry using the window title of the current application.\nBoth systems aren't app specific. The idea is to use the window title so any application can benefit from the system. Mostly it's used inside browsers since most user accounts are manages inside a browser, however I for example use Autotype for a lot of other occasions e.g. the AppStore.\nFor Global Autotype to work inside a browser in a VM the VM Window needs to reflect the browser window title for MacPass to get a meaningful match. Autotype on the other hand should work all the time but you have to switch to MacPass, select the desired entry and then perform the Autotype.. There was an issue with clearing timers not being reset when new content was pasted to the clipboard.  This resulted in any new content being deleted quickly.\nTo reproduce you can try the following:\nTake a look at the setting for clipboard clearing. (e.g. 30 seconds, the longer the easier to reproduce)\nCopy something to the clipboard and wait a couple of seconds before the timer would clear the clipboard (say 25 seconds) and then copy something new. The new content will be cleared after the first timer hits (the remaining 5 seconds in this example) and you will have only the content that was restored into the clipboard in there. This is fixed in continuous (5db3950) and will ship with 0.7.4.. Just a side note: you can drag urls from the browser onto the MacPass window and it will create an entry with exactly the mentioned data pre-filled. . There seem to be a lot of UI bugs related to 10.13. The behaviour under 10.12 is correct - that is, newly created entries get selected. I'm in the process of moving my development setup to 10.13 so those issues will get addressed as soon as I'm on 10.13.. I cannot reproduce this bug. If I add an entry, the entry gets selected and the focus is set to the title field. System is 10.13.6. MacPass continuous. Closing since it's not reproduceable on my end. Please re-open when it occurs again.. I think I made this error now at least a coupe of times. I missed adding a step to actually copy the framework so MacPass is unable to launch because it's not bundled with KissXML.framework. I'll update this right now. The new continuous should work.. Current continous works again. Thanks for the bug report!. 1. It would. I have the tendency to wait until the os is final and do not run betas since I lack the hardware setup to fully support this. It's not ideal, but when 10.14 is official, dark mode support is going to happen for sure.\n\nThere are a couple:\nMacPass is GPL software and thus not compatible with the MacAppStore. I cannot change the license since I do not own all the code that is GPL. Fix: Re-write code that is GPLed and not mine, contact all contributors and ask for permission for a licences change\nMacPass uses private APIs. This is used for password input. I wanted to leverage the security but needed further changes. Fix: re-implementing NSSecureTextField.\nMacPass sends keyboard events to other applications which is limited by the sandbox. Fix: It's possible to add exceptions but those exceptions need to be specified for each and every application that should receive those events. If I wanted to make this work (and given Apple would even let me do this) I would need to make a list of every app that should support Autotype.\n\n\n\n. Since I haven't upgraded yet it's possible to build with color assets that support dark mode which are required for the search bar. I've updated all parts of the Ui to support dark mode so this currently only depends on my system being upgraded to 10.14. . Thank you for the feedback. I will dedicate more time to dark mode support in the upcoming weeks when and if my system is updated to 10.14. Sorry for the hold up. .  Notes are displayed correctly now. Continuous release of Macpass now fully supports dark mode. . Did it ever work for you? I have fixed the issue but since the have found out it requires 10.14 to build correctly. Somehow building on 10.13 doesn't fix the issue. Currently Travis doesn't offer 10.14 so it'll be only fixed in the release or when 10.14 is available on Travis. . Thank you!. Behaviour is as suggested and seems reasonable:\nPassword is hidden whenever the entry changes. This also hides the password on lock/unlock of the database.. Adding additional key suppliers is something that is planned. KeePassKit needs some more modularisation work to accommodate for that change though.. MacPass shouldn't require accessibility features since it's sending keyboard events via system APIs. Newer releases of macOS tent to continently break Autotype. According to apple, 10.14 will sandbox events between any app until the user consents. There's no real usable API at the moment and it seems Apple need to fix this. See https://www.felix-schwarz.org/blog/2018/06/apple-event-sandboxing-in-macos-mojave for more details.. Using MacPass Continous (linked to 10.13) on 10.14 Beta 10 asks for Accessibility access the first time Autotype is used. If granted everything works as expected. If access was not granted, Autotype fails sliently. I will have to update this to use the additinal APIs added in 10.14.\nNonetheless, I cannot reproduce the \"does not work\" aspect of you issue.. Duplicate of #774 . The error occurs when MacPass tries to restore objects that were present in the clipboard before autotype was used. Changing autotype to use only key stokes will work as a workaround but does not fix the issue. Can you try to get information about what was in the pasteboard before you performed autotype? Or might there even be data from MacPass in the clipboard? Please use #774  for further discussion.. I've not added this to the distribution workflow but I will add a step that generates a checksum to verify the archive.. sha1 hashes are provided for continuous builds. Official releases might get them as well.. The official builds are signed and checked by the gatekeeper if you set your system setting to only allow for apps and identified developers. The only real advantage for providing sha hashes is that it's clear that the app was signed by my developer id not by another one. This might warrant adding the sha hashes to the old releases as we..\nThe continuous build is being used by me on a daily basis and if any bugs occur I tend to fix them ASAP so it should work without problems.. I added sha hashes to all 0.7.x releases so you're good to go if you want to use 0.7.3. Do you want MacPass to stop posting notifications? If so, is disabling this in the Notifications preferences not a viable option for you?\nOr do you want MacPass to supply a detailed setting on what to notify about? If so this sort of defeats the purpose. Autotype matches might not need a notification but misses should be notified since it shows the user that something did happen but not as intended.. As stated on many other UI related bugs - this is a regression in 10.13 which needs fixing. This regressed and is fixed in d6ea2830e9956e099ab62978e6b7e4a20a31ae1e\nThere's a problem here, since changing those value is not registerd as a change to the file so no autosave or request to change on close is popping up. That means no changes are stored unless something else is modified (e.g. an entry added) under normal read-only usage the selection will not be stored automatically via autosave only on manual save.. This is actually by design, since MacPass is the front most app and that means notifications do not get displayed. However, since this behaviour tries to give some feedback to the user about what happened, the notification might be displayed all along.. The list is fed purely by the recent documents mechanism of macOS so my guess is I would have to re-implement the menu to get the behaviour changed which is something I rather wouldn't do. Alternatively you might be able to work around this by setting the recent items count to a higher number in System Preferences \u2192 General\n\n. I'm closing this since it seems to be ok to leave it that way.. When you search, the group is displayed in a separate column. It might be useful to show the full path instead of only the parent group to make it easier to find the entry.\nGroup filtering is a feature I wanted to add to the tree view to make searching them easier in large databases.\n\"Show in Outline\" is something useful for an additional entry in the context menu when selecting them in the search result list.. This might be a place for better UX. You can add additional associations by clicking the little Plus button below the list of window associations. If the buttons do not show up, you can scroll the view to make them show up. Below the buttons there's a combo-box that will display the selected window associations title. Here you can type and edit the value or you can simply select a window title from the drop down list. In the list, MacPass will display all currently known window titles for easier access.. I'm closing this since the actual issue is solved. For UI enhancements, a new issue should be created.. This might be a bug in KDB serialization. Do you use the KDBX or KDB file format?. This seems to be an issue with merging changed databases. KDB does not hold a Root folder so it is generated each time the Database is loaded. This seems to be the culprit for the duplication, although that should not result ins duplication of entries. I'll take a look and see if I can fix this ASAP. Also I'll try to device a way for you to remove all those duplicates without loosing any data.. I'm onto adding the feature to merge KDB databases on external change but this is not ideal. I'm pondering of disabling this altogether since groups can only be identified via their properties. This leads to the situations a group might map to different groups and it's not possible (at least with adequate complexity) to determine a unique mapping.\nYou should upgrade your files to KDBX and everything should work out. As said before, there's no way to automatically remove the duplicates so you'll have to manually sort through the groups to manage those. I'm sorry for the fuck up but i forgot to correctly work with KDB files on merge.\nI'll update this issue on the progress. Additionally, there's a related on on KeePassKit (https://github.com/MacPass/KeePassKit/issues/39). @oehm-smith could you try to run the setup with the current continuous build? This version tries to map folders based on names. This will still create problems, e.g. if you have duplicate names. But no duplicates will be created it the name is already present. Be aware that the match is only name based. And again a big sorry for messing up you folder structure. Brooke,\nThe latest version will not clean up any duplicates. It will however prevent any duplicates from showing up when you merge KDB files. You will have to fix the problem manually but it should not happen anymore with KDB files. Since you saved the file as KDBX you are now save and no duplication will happen again on merge.\nThe reason for asking this is to have more than my test setup to see if it actually works. If you feel comfortable of trying this setup with your previous KDB setup it would be awesome. Since I have found the culprit and the issue should not occur again but since the fix is not perfect (as described, it cannot be) there might be some corner cases that aren't handled very well.\nTL;DR; If you have switched to KDBX there's no need to use a newer version. Just stick with 0.7.3 until 0.7.4 (or even 0.8) get's released.\nAgain, I'm very sorry for the inconvenience my error has created.\n. The only thing that should not happen is more duplicates showing up. Also, created entries on the other end should end up in the same location on both databases.\nThank you very much for the effort!. Works-for-all solution by matching groups by name is working. Refer to KeePassKit #39 for details.. Closing this since it's working. Using custom data as described in the KeePassKit ticket is postponed until it comes up again.. Thank you for testing it out again. I've since started adding custom extensions to back-port features of KDBX to KDB but it's not final. This will however only allow for MacPass to better merge KDB files. All other clients will probably never support the custom extensions.. AFAIK the most used Linux client is KeePassXC which does support KDBX and allows to import KBD so this shouldn't be an issue. There are some Android clients that only support KDB but all \"relevant\" platforms have at least one decent client that supports KDBX.. I'm sorry but I have no clue what you're trying to say in your first sentence. Would you be so kind to explain it to me? But it's vital to keep KDB use cases in mind since your experience shows that if I do not cover all the use-cases strange things happen. And strange things happening to password containers is something I rather not do too often :). Of course pouring too much time into corner cases is a somewhat waste of time but most of those changes do not take too much time and enhance the user experience dramatically so I'm tempted to implement them even though it'll only show up in MacPass.. There is a know issue with attachments with the same binary data being not properly handled by MacPass but those should not result in actual data loss or corruption (see #788).\nFile size changes do occur due to differences in compression algorithms and should never yield data loss.\nCan you try to create a minimal example for attachment data loss/corruption?. Any chance you find the time for a minimal example?. @josmad If you could give more context it would be awesome. Since you describe a serious data-loss which should be eliminated ASAP. I cannot reproduce this setup so your help is vital.. @josmad did you find some time to reproduce this? . I'm closing this for now until the issue comes up again.. Awesome. Thank you!. This is an MacPassHTTP related issue that is fixed in continuous. It's going to get published with in 0.3.1 of MacPassHTTP.. MacPass Continuous is incompatible with MacPassHTTP 0.3. as you just found out :). I have to update the docs to state the incompatibility.. Just for clarity: MacPass currently supports a non-desctructive bi-directional sync. I'm also working on extending this feature to sort-of-work for KDB files as well.. Correct.. Fixed in continous. Duplicate of #344 . Fixed in continous.. See https://github.com/MacPass/KeePassKit/issues/40 for progress.. Fixed in master/continous.. This is an awesome idea for a plugin. 1password offers a WatchTower that does a comparable thing. It might be even worth considering adding this as a core feature. . I'm unsure how the UI should look. The simplest way is another column with a mark for pwned passwords which will however yield a high amount of API calls. Another idea is an additional search parameter including only pwned passwords. A combination of both might be good.\nAnother idea is a separate view that can be invoked by the menu. This way it's the most flexible but it might be bad for gaining access a specific entry however this is an entry point for a simple tool and it limits the API calls to just once. A better way might be an actual item in the outline to access those items. This is in line with the concept of adding searches in the outline view.. The plugin architecture for MacPass is in its infancy. The idea was to jump start it with the MacPassHTTP plugin which doesn't require that much plugin API and go on from there. Anything that wants to hook into the UI needs a better API so I would try to flesh this out as it's needed. This seems to be the best solution to invest only the time needed for the desired feature.\nAdding this as a core feature is viable too. The plugin system tends to shift some pressure away from the main application to add features and allows to side-track those to plugin development (and even supports more contributions)\nAs for the entry point. My inital idea for the architecure was to drive the model (MPDocument) and hook the UI onto it by observing notifications and then performing the apropriate changes in the UI. The main UI works that way, that is, it displays the password input and then waits for the MPDocument to post a MPDocumentDidUnlockDatabase notification upon which it will display the unlocked database. Then those subviews will tell the document what groups and entries are selected and the inspector shows the corresponding editors.\nA better spot to kick off the checks IMHO would be in the \"_didUnlockDatabase\" of the MPDocumentWindowController since this is the first time the UI tries to display the new content and it can be sure the data is decrypted.\nMarking the password via color or an icons is something quite nice and the better way compared to an extra column and should be rather straight forward. What would be awesome is if it's property on a string and its KVO compliant which would make it bindable in the UI and frees up a lot of code to simply update states.\nAnd before I forget, thank you for wanting to put some effort into MacPass. It's a good thing others can dig into the code and complain about all the shortcoming to get things cleaned up a bit.. Using NSSecureTextField will yield this behaviour (see e.g. 1Password). Enabling non-ascii password inputs requires a completely new control based on NSTextField.\nDuplicate of #503. Currently not. It is planned to add support in combination with keychain integration. . Duplicate of #808 . Duplicate of #731 . Do you know you can double click most of the fields in the entry table to copy them to the clipboard? Also take a look at the workflow preferences for some options on the behaviour.. Where do you think the button should live? In the toolbar? There's already a context menu that holds that action. Additionally you can just select the entry, right click and then use copy password.\n. I would love to remove the buttons altogehter. Even the show/hide button takes up way to much space but I haven't had time to build a custom text field that displays inline buttons. Adding another button will shorten the text input even more. Putting it below besided the generate button might be usefull and doesn't reduce the available display space at all.. When the readonly/edit behaviour will get introduced, input fields will gain a similar functionality like 1Passsword. I implemented the button display years ago but never used it and favoured the editable input fields.. Added in master.. The behaviour is system defined. MacPass prefers tabs since feedcd56aca2efb167a6a1387026e7a2c14e6fd2. MacPass 0.7.3 prefers separate windows. If you leave your system settings on \"In Full Screen Only\" or on \"Manually\" you can get Tabs when pressing \u2325 while Opening a File via the menu. As stated, the upcoming 0.7.4 has the behaviour changed to prefer tabs.\nYou can change this manually for 0.7.3 by setting a default value via defaults write com.hicknhacksoftware.macpass AppleWindowTabbingMode always. You can remap keyboard shortcuts for any macOS application by using the system preferences. Duplicate of #556 . Menu items do not have to be in the Main menu. The \"Action\" Menu or the Context menu for an entry is also valid.\n\n0.7.4 also has a Item menu in the main menu bar to make the functionality more obvious.. Just to clarify: There aren't many places where a normal Cocoa application needs to do custom keyboard shortcut handling, it mostly boils down to menu items and key equivalents. MacPass only does this for the Global Autotype Hotkey for obvious reasons.. I just tried it myself and it works as expected.\n\n\nPlease keep in mind that \"Auto-Type ausf\u00fchren\" (Perform Autotype) is not Global Autotype! To change the Global Autotype Shortcut you need to go to the Integration Preferences.\n\n. Can you test if the Continous release has the bug for you or if it is fixed?. Done.. Low hanging fruit. \ud83d\ude09. Drag and Drop works only for single entries. So you can move them but only one by one. Adding support for multiple selected entries is on the roadmap.. The current master branch now has drag and drop for multiple entries as well as multiple groups implemented. . All popups in MacPass now stay open if you interact with anything outside of MacPass. Feature is added in 3f43a061b885055f7a4064e0a7146dba7b3a0fb8 and should be in Continuous ASAP. Feature is on the roadmap. Duplicate of #515 . There's no workflow to import .1pif format. This is something that should be added. If you're up to it you can start digging into the code and add the functionality. I'll be more than happy to merge your changes!. There are some sketches in how a plugin API for importers can work but nothing is set in store. You could try to start there. It might even be useful to try to come up with a concept that works internally as well as for plugins say via a importer registry or something like that. It might then be possible to rework xml export/import to use the same mechanisms. The plugin API is currently relying on protocols defined in MPPlugin.h. This is a planned feature that was scrapped earlier in favour of the current way. Hiding field that aren't set in the read-only view is also considered. See #791 and #47. Can you take a look at the log in Console.app? UI oddities sometimes are caused by assertions in the underlying code. If this happens again, please report it and if possible attach any logged output. . If assertions occured, they should turn up in the system.log. You can view the log by opening Console.app and the select system.log in the left. Search for MacPass and you might find something.. Awesome to zero it in to Keepass Touch and MacPass. Can you try to test with a newly created database with the same settings as the one your having issues with? I'll try to get to test on my side too. It might be some edge case with attachments but I'll have to investigate. . Thanks for the additional information. I did already say that this is awesome, right? About KDBX4, I have implemented support for it since 0.7 so this should work. But there might be edge cases that let MacPass struggle while opening the file. With the supplied details I'll dig into the problem and a fix should be supplied ASAP. . Thank you, issue was an empty date field that fired an assertion in KeePassKit. Fix is on the way.. I'm very sorry for letting all you wait so long but spare time is rare to finish up a release. Dev builds are easier as they tend to not need that much polishing but I'm getting there. The main boxes are ticket so it'll be soon (but how soon is something I always estimate wrongly)\nAbout a beta feed for Sparkle updates, this is a nice idea but requires some changes in the build setup. The goal is to push out stable releases not make betas easier accessible.. Is pressing Cmd+Q no option for you? I am hesitant to vent this option in the UI. I might consider adding a default that is just accessible via the command line (defaults write). In bfeb71585dcb2c85807bd0296a620b6688ce2678 an continuous includes a setting to enable the desired behaviour. To enable run\ndefaults write com.hicknhacksoftware.MacPass QuitOnLastWindowClose -boolean YES\nand to disable:\ndefaults write com.hicknhacksoftware.MacPass QuitOnLastWindowClose -boolean NO\nor\ndefaults delete com.hicknhacksoftware.MacPass QuitOnLastWindowClose. You might have used the wrong repository. This is the MacPass repo. Keepassxc is over there https://github.com/keepassxreboot/keepassxc\nRegarding custom URL schemes and MacPass. If you use registers urls, MacPass will open them e.g. ssh:// should launch the terminal. Support for cmd:// is currently not planned but it might be useful to get the feature aligned on all platforms.\nI never dived into the details about cmd:// hence no progress has been made. But I'm onto changing the Autotype system so support for cmd:// might fall off the wagon. . Fixed in d6ea2830e9956e099ab62978e6b7e4a20a31ae1e. Thanks for the catch. This is a regression in refactoring. Added more tests to cover them in the future and fixed continuous is comming up.. Full width at the bottom is something I'm not a fan of. Modal is an idea but this goes against the current trend to keep everything inside a single window. What might be useful is to allow for a popover to be opened to display more information. Another idea is to allow for a very narrow table and a broad inspector which would lead to a much larger notes area.. Nice to hear you want to contribute to MacPass. Take a look at the https://github.com/MacPass/MacPass/blob/master/CONTRIBUTE.md file. It contains a good explanation on how to add a new localization. . You're right. Its rather complex. I did set up an account on https://lokalise.co but the workflow wasn't ideal so I stopped promoting it. I'll give your suggestions a try to see how they integrate.. I've updated the Project in lokalise.co and try to re-import again to see if I can integrate it. I tried to setup a project in POEditor but the UI in loklalise seems much more mature so I added you there as a contributor. I've given you download capabilities. Sorry for not giving any feedback. Generally any string can be localized but some of them are only placeholders in the UI files that will get changed by code so no need to change them. I should update the comments to clarify the ones that get changed by code.. Use the combo box below the list to edit the window title. Duplicate of #817. KeePass does a two-way sync. MacPass does not have this functionality. MacPass calls the feature \"Merge\". You talk about \"Synchronie\" so I guess you're using a localised version? French? It might be good to update the localisations to better reflect the real setup.\nIn #786 I did make a factual error when comparing Synchronisation with Merge in MacPass. I did update the comment to clarify the difference.\nI do not see the need for two files in your setup. If you keep the file on dropbox just open that file and update it. If multiple clients access the file simultaneously MacPass will see the changes to the file and merge them on request or automatically.\nRegardless of the current setup, extending the feature to work like KeePass is a reasonable change.\n. I just checked with KeePassXC and the client also only supports the Merge feature like MacPass does it.\nThinking about the workflow I do not really love the way KeePass does it. My expectation for a merge or synchronisation on a file is to merge changes into the open file not merge changes and then write them out to two locations. This violates my understanding of how an application should handle files. MacPass opens databases, you change those databases if you open and then save them. That's what I would expect and that's how it works.\nOn the other hand, having two files being in sync all the time is a very useful system. There might be a better solution to get this to work in a conceptually sound manner.. @ira-bv you can merge the changes from one database into the other by using File > Merge With\u2026 and opening the other KDBX file. There is no need to export as XML. I've added a chapter to the Wiki to clarify the whole feature a bit more. If you have any suggestions or questions, please post them to enhance the documentation. . @droloff I am aware that the German localisation is misleading as well, should be better called \"Zusammenf\u00fchren\" oder \"\u00c4nderungen importieren\". For the purpose of writing out both files, an option in the merge dialog should be considered like \"save back synchronised files\" and an explanation.\nRegarding your dropbox setup. If you edit the file offline on two machines, dropbox will most likely create two versions since it cannot resolve the conflict. You then would have to synch those two files manually and continue with the synched version and delete the other file.\nI was pondering about supporting dropbox via their API but have not had any time to invest into this seupt. Google Drive Synch (or however the new version is called) fails miserably in integration into macOS leading to horrendous conflicts when changes from the cloud get synced.. Thank you!. This is related to #54. It seems to be a big hassle for a lot of users so I try to fix this. The NSPathControl however doesn't have a lot of leeway for customisations.. Issue is known and fixed in master/Continuous. Will be published in 0.7.4. ASAP. Sorry for the long delay. Duplicate of #788. The issue is present when building with macOS 10.13. Building on macOS 10.14 fixes this. This will get vented in 0.7.4. Continous is now build with Xcode 10.2 under macOS 10.14 so it contains the fix as well.. the current continuous build supports pickchars. The pickpasswordchars placeholder is not supported since it's obsolete. See https://keepass.info/help/base/placeholders.html#plh for reference on how the system works. I might add support for PICKPASSWORDCHARS to allow for old database entries to work.. Thanks for trying this out you are the first to actual test this so I'm sure there are bugs. My internal tests worked but I might have broken them somehow. I'll try to fix this ASAP since this is a feature for 0.7.4.. I've tried to replicate your findings but couldn't get them. For me all the outputs where the same for each run and every selection was evaluated correctly. But I did find a bug when more than one entry matches for auto-type which resulted in an assertion being raised inside AppKit. This is fixed in the current continuous. Could you try to re-run you examples? I'm curious why you have those strange results.\nAbout you suggestions on auto-closing when all characters are picked an a 1-based start: I'll incorporate them right away.. 1-based index and auto-closing on character limit reach is now added as well. Continuous contains all those changes. If you find the time to test them out, I'll be great. Otherwise I'll keep it that way and fix the remaining issues in another release.. I'm keeping this open until the uncertainties are resolved. The current system (with potential bugs) will get released with 0.7.4.. I have created a database and attached it (Password: test) and tried to reproduce your setup with no luck. I do not get any TABs being typed, the keys get sent correctly every time.\nCan you try again with the attached database?\nPickchars.kdbx.zip\n. Mh. I'll try to find a test system or set a VM with 10.13 but that's going to take a while. I tried a lot of combinations but all work just as expected.. I'm on it. I'll get released. Soon. 2018 is my goal so I got at least a couple of days left :). I am prepping it, waiting for a localization contribution but this shouldn't take that long. So a release in 2019 is getting quite possible :). Tagged and wrapped, I'm updating the infrastructure right now so the auto updater will be able to pick 0.7.4 up.. Please do not forget to update to 0.7.5 since 0.7.4 has a serious bug when having used search\u2026. Preferences for macOS are stored by a defaults daemon. On older OS versions, the files were written to ~/Library/Preferences/. If you take a look, com.hicknhacksoftware.MacPass.plist is also present there. If you want to back up or modify preferences, the recomended way is to use the defaults command on the terminal. If you want to print out all defaults in XML format, use defaults read com.hicknhacksoftware.MacPass. You can export them via defaults export and import them back via defaults import. Take a look a the man page for defaults to get a detailed description on how to use it.\nFor your purpose, defaults export com.hicknhacksoftware.MacPass /path/to/my/export/file.plist and a corresponding defaults import com.hicknhacksoftware.MacPass /path/to/my/export/file.plistshould do the job.\nYou can open and edit the file via Xcode.. Just to clarify: Do not use the .plist file located in ~/Library/Preferences/. Those files should be considered caches. Everything you want to do with preferences should be done via defaults.. I'll try to take a look at your changes in the upcoming days and give feedback.. To update the english strings located in MacPass/en.lproj/Localizable.strings you can run the script extract_localizeables.sh in /scrips. The script should be run inside the scripts folder as I have not made it location un-aware. After you've run the script, /MacPass/en.lproj/Localizable.strings.updated is created. Use a diff tool to add any changes in the keys to /MacPass/en.lproj/Localizable.strings and provide a translation. If you are fluent in another language, you can use the XLIFF export in Xcode to generate those files for other languages and then update the translations.. Awesome! About using the same string on different locations with the same meaning: This is a common thought and I did it it at the beginning of MacPass as well but sometimes a different wording is useful so I changed to be verbose with the keys and thus allow for more variability. The downside is that changes often require contributions from all translators.. You're running 0.7.3 which contains some issues with adopting changes to autotype settings without a re-launch. Can you test your setup with the continuous release and see if the issue persists?. @georgesnow I would not encourage using tags. Simply using good titles works since it's a contains search - if the title is contained in the window title, it's a match. The real problem are sites that simply do not put anything special in the title e.g. \"Login\" instead of \"YourSite - Login\" which then tends to break auto-type. You might want to add window associations for those pages but then you end up with a bunch of candidates for \"Login\" if more than one pages doesn't do it properly.. I wasn't aiming to say you should stop suggesting it, but I did not have the need for tags. You seem to have developed a good method to get reliable auto-typ matches so this is worth sharing in case others might run into the same problems and find you way reliable. Tags aren't treated very well in MacPass so this is an area for improvements.. > Just out of curiosity without judging: for what reason does macpass not check the url but only the page title?\nSorry for taking so much time to reply. Autotype is a generic system that uses only the window title of any window to find a match. There is no special handling for browser windows to read the URL as well.\nThis make autotype work with nearly every application without the need for custom handling. The downside is that no other data supplied by the app apart from the window title will get ignored.. This might be something for entry templates but - templates cannot be used to set expiry offsets, only fixed dates. Mh.. KeePass has a database setting for the default user name, It might be possible to simply add the default expiry date there as well and store them as custom data inside the database. This way it's compatible with the rest of the clients as they will not delete the data but MacPass can interpret it in the right way.. MacOS uses autosave to enable this sort of workflow, this is in line with every app on macOS so I do not tend to introduce custom behaviour. You do have a point about the edit state which is fixed in the current master and will be released with 0.7.4. You can try the continuous build and verify that the behaviour is as you would expect it. You can change this by using \"Close all Windows and Quit\" by pressing Alt + Cmd + Q to quit or change the behaviour in the General System Preferences.\n\n. Solution should be an edit mode - Duplicate of #47 . Thank you for your detailed feedback. What baffles me is that you say MacPass differs in its UX from other macOS apps as the intention is exactly the opposite - to be more in line with macOS behaviour.\nThe instant edit system is a conceptual error but works nice if you know what's happening. You're right that novice users might feel insecure and stop using MacPass because this insecurity is not addressed.\nRegarding the password check box - this is in line with the other clients and your proposed solution is a better on to clarify what the checkbox does. On the other hand - this is something quite discoverable.\nThe undo/redo problem is a good point. I tried to introduce the undo/redo support to make the app behave better but with this transparent system have introduced a point of error. However. If the notes field has focus, the notes field uses its undo stack. Leaving the field and invoking undo does what you describe which might be harmful.\nIt's useful to think about a better way and identify places that might be enhanced for better UX.. The old password will get stored as a history entry. You can select an entry, then choose \"Show History\" from the action or context menu and a list of old records for this entry will get displayed in the entry list. There you can use your old password.. This requires you to enable history support for the database in the advanced database settings.. Keepass actually offers such fields. A \"UsageCount\" and a \"LastAccessedDate\" both where discouraged to prevent permanent data changes in case of just \"using\" the password container without actually modifying it.\nTake a look at the original discussion in the KeePass forums. A preferences setting is an option. Storing the data outside the database is not ideal and defeats the purpose of a self-containing file. Marking the changes as discardable will result in data loss since no autosave is issued and defeats the purpose of autosave (forget about saving you data, just use it).\nI think the best way is to actually go with a checkbox in the preferences to \"save access dates and count on entries\" and default to no. Combining this with autosave should give you the desired effect but no other client might adhere to this.\nAnother problem: What does count as access. My guess would be to count every use of auto-type as well as copying the password as an access. Everything else doesn't increment the count or update the date.. I've got this idea too but the current system was reasonably easy to implement. Parsing html for icon loading is bit more cumbersome. Another idea was to rely on a favicon service to do the hard lifting.. Nope. But I just stumbled over a Swift library (https://github.com/leonbreedt/FavIcon) that does a lot of heaving lifting. I might add this and use it as an excuse to finally start learning Swift and since 5.0 should ship with a stable ABI this might be a good time to jump on board.. I do agree. Support for the native messaging is something very useful and should be added. Since this is supposed to be a plugin, this is a good place for contributions since I'm currently not able to dedicate time to this problem.. MacPass does not support a trigger system. You should however use TimeMachine to backup your data. Another idea could be a plugin that allows for a backup system (e.g. save a backup after every change to a dedicated location). Thank you very much!. The issue in the correct project: https://github.com/keepassxreboot/keepassxc/issues/2684. Theres no corresponding issue in the KeepassXC project.. Good improvement. I took the liberty of moving this to the xib file by disallowing empty selections in the table view which should yield the same result (see 13ebb93cfbe661dbf8c0c3800a70be66fc613267). I hope it's ok with you if I close the pull request and use the xib version.\nThe behaviour in MPEntryViewController is a bit more complicated since the table is bound to an NSArrayController. The controller is set by default to avoid empty selection.. If you use the same credentials for multiple sites you have two options right now:\n\nCreate multiple entires that use a single entry as reference for credentials (password/username) MacPass has no UI support for references but you can create them manually (see https://github.com/MacPass/MacPass/wiki/Field-References)\nCreate a single entry and add multiple window associations to match more than one site. You can add a delay by using a custom Autotype sequence. I just used {USERNAME}{ENTER}{DELAY 2000}{PASSWORD}{ENTER} on the Gmail form an it works. The delay is in milliseconds so 2000ms is a 2s delay. You might have to tweak this value for your setup.. About the password input being send to the wrong form fields: I have thought about adding a special \"pause\" modus to aks the user every time a password is going to be filled and showing exactly where but this is a rather complex feature so I wasn't sure it's doable in a reasonable timeframe.. This behaviour should have been fixed. I'll try to to investigate. Could you tell me what version of MacPass you are encountering this issue on?. I was able to get the same error but could not reproduce it afterwards. This seems to be a strange bugs. I'll have to dig into this. A restart of MacPass should fix it but this is not correct.. I have not tried to dump MacPass' memory and search for strings of passwords in it. MacPass stores all sensitive data as 1-time-pad xored bytes in memory. If an attacker can gain access to the process memory, dump it, find the xored and the pad data in memory it is possible to retrieve the password. As for the master password, the password is never stored anywhere. Only the hashed value that is the starting point for the key derivation function is stored in memory and it is xored with a 1-time-pad as well. I'm a bit sceptical on those attacks. I cannot make any assumtions on strings that are displayed in the UI and their storage. MacPass uses NSSecureTextField to leverage the highest security from the framework. If a malicious software is able to dump you memory it surely is able to log your keyboard and a million other things so I consider a system where an attacker can access process memory compromised in every possible way\u2026. I can only guess that it makes key logging harder but on the other hand, it's access is simpler since an attacker can simply obtain the file and use it so it's actually easier than key-logging.. using defaults write com.hicknhacksoftware.macpass \"AppleWindowTabbingMode\" \"always\" should work!. If state restoration is working correctly, this should not happen but there might be regression with 10.13 and 10.14 so I'll have to investigate. Do you have the same undesired behaviour with the continuous build?. I tried to reproduce this and on my system every tab is restored. I have to dig into this a bit more\u2026. You can search for them in 0.7.4 but no partial matches are supported right now.. Search should be enhanced to allow for tokenisation and rules (e.g. any, all, etc.) to accommodate for different use cases like yours. Another idea is to allow for regular expressions or wildcard which would.. This is intended behaviour. This column for the manual sort option. Clicking on lists entries in the internal order which you can change by reordering them via drag and drop. You can resize it to be a bit smaller so the arrow doesn't show.. I am unable to reproduce this behaviour. I used \"Default\" for browser and added a file url and it worked on double-click. I also selected Finder and open again and the KDBX file was opened in MacPass. Can you double click the file in the Finder and see what happens?. Ahhh. Yes. I removed escaping since it screwed up urls with #. But this now breaks spaces. Arg.. Inserting %20 works.. I am unable to reproduce this error. For me the behaviour is exactly as expected. See attached file.\n\n\n. Can you specify your setup a bit more so I might be able to pin this down?. Can you try to create the same setup with text files with TextEdit and see what happens? If the same behaviour is present this might be an macOS bug.. This issue seems to be related to search! See 0.7.5. release notes. @sanderaarts can you try out 0.7.5 and see if the release fixes the issue?. The whole privacy setup on macOS 10.14 is a mess. Can you try to remove MacPass from the list and re-add it? This happens on my dev system a lot and removing and re-adding MacPass fixes this most of the time.. Two things:\n1. You should use the MPSettingsHelper to define a unique key for the user defaults. Name it something more concrete. What if we want to store more sortings later? Suggestion: entryTableSortDescriptors\n2. You should bind to [NSUserDefautlsController sharedUserDefaultsController]. To access the values, use the key path \"values.\" in our case \"values.entryTableSortDescriptors\" NSUserDefaults is not KVO compliant hence we might get funny results in some edge cases.\nIf you change that, I'm going to merge it. Sorry for the nagging ;)\n. This sleep is there to ensure the Pasteboard controller gets can process the cmd+c keystroke sequence before the cmd+v keystroke results in a paste. The solution was to solve a \"double paste username instead of password\" bug I did encounter mostly when auto type had to show the entry-selection window. Or did I miss something in you code that still handles the wait?\n. Nice. And thanks for your (numerous) contributions.\n. obj-c\nalert.messageText = NSLocalizedString(@\"ALERT_TOUCH_ID_MESSAGE\",@\"\");. exception. Please remove any unnecessary logging. I know it's nice to see that suff work ;-). Consider using a helper to wrap something like this like MPOSHelper.supportsTouchID or the like. self.databaseName. should be converted to @property. document.displayname;. simple getters do not have a get prefix.. I would be against introducing the dot. This is about the file format not the file extension.. Space is missing. You moved to Auto-Type so I guess we should stick to it.. Again, not the extension, the format.. Xml is the format so leave the dot please.. This is something that might change. There are pluralised versions as well so I would keep to the singular here.. Mh. Auto-Type or Autotype?. No dot please.. No dot please.. No dot please.. @nicoa you are right. The typo needs to be fixed surely.. Since you set them as private, no need to vent them in the header. Additionally you could just use static NSStrings in the .m file.. Initalize them statically so no need to dynamically allocate them every time the view get's loaded (e.g. if we use more than one document the init isn't needed every time and the storage doesn't need to reside for every object). Do we really need to change the color based on the system? And AFAIK system colours are supposed to change when the appearance changes. And does the Touch Bar even use different styles for dark and light mode?. This is a property, so just use it that way.\nbutton.bezelColor = NSColor.contolAccentColor;. return [self.window makeTouchBar];. Again, move them to the .m file and make them static. No need for private ivars. For user-facing text you should use localised strings. In this case:\n[MPTouchBarButtonCreator touchBarButtonWithTitleAndImage:NSLocalizedString(@\"TOUCHBAR_BUTTON_CHOOSE_KEYFILE\", \"A usefull comment\") identifier:touchBarChooseKeyfileIdentifier image:[NSImage imageNamed:NSImageNameTouchBarFolderTemplate] target:self.keyPathControl selector:@selector(showOpenPanel:) customizationLabel:NSLocalizedString(@\"OPEN_PANEL_CHOOSE_KEYFILE\", \"A usefull comment\")];\nDo not pin me down on the exact keys :). I think you get the idea.. Please consider localisation support.. Please consider localisation support.. Please consider localisation support.. Please consider localisation support.. Please consider localisation support.. Please consider localisation support.. Schl\u00fcsseldatei?. ",
    "DominusExult": "Thanks for the long answer. I'll begin writing up stuff :) Most glaring is the missing of a notes view.\nSadly I have almost no coding experience except for copy/pasting working code elsewhere and sometimes clobbering it into use :)\nI have a dozen years of experience with filing and tracking down bugs and writing documentation for Exult (http://exult.sf.net), though. So I can help there at least...\nGood luck with Kyuran, my experience with his iOS work was a bit disappointing (his decision to sell Kypass again as Kypass Pro without much new things)...\n. do you happen to be on irc somewhere? I was expecting a #macpass on freenode :)\n. I'll create a channel.  Have been using irc for over a decade but never created one :)\nIn other news, did you see http://artemnosenko.com/#/keepassx/ ? This looks familiar...\nEdit: created #macpass on irc.freenode.net. I made it #macpass which identifies it as the official channel. If you visit it with a registered nick I'll gladly make you the OP of the channel. I may not be at the keyboard though, when you get there.\nA good irc client is Textual which can be bought on the App Store or you can compile it yourself from https://github.com/Codeux/Textual\nAdium is a good multi-messenger app that allows for irc, aim, irc, etc...\n. Personally I'm already on 10.9 but I'd only make it 10.9 only when totally necessary.\nTo poll users, put out a new version via Sparkle and make a temporarily one-time-only pop up informing about this 10.9 step and link to this issue (or some other way to poll).\nDom\n\nAm 12.05.2014 um 14:58 schrieb Michael Starke notifications@github.com:\nThe think is not how where to host or run the survey but how to announce it properly so that all users are at least able to participate\n\u2014\nReply to this email directly or view it on GitHub.\n. Is this still working or not as it is supposed to be working?\nDoesn't seem so. When there is a lock file MacPass seems to ignore it and if there is none and MacPass opens the database the lockfile is not created.\n. Just to clarify, the lock file is there to PREVENT simultaneous use.\nWhen there is a lock file, MacPass should refuse to open the corresponding database. And when there is no lock file, Macpass should create one on opening a database so other clients \"know\" the db is in use.\nAm 18.05.2015 um 15:12 schrieb Jason Ramapuram notifications@github.com:\nAny update on this? Can I edit a macpass from multiple machines simultaneously?\n\u2014\nReply to this email directly or view it on GitHub.\n. If you set OS X to never store recent documents MacPass will not reopen the last opened db. It only works when the db was still open when MacPass is closed (windows restoration).\nAs per IRC, manually storing the last file and use that when no recent document entry is available.\n. +1 for that icon. Like it a lot. Thanks for doing it.\n. Yes, the padlock is good and \"historically\", with KeePass the \"mother\" of the keepass clones, correct.\n\nOther possibilities are a key, a set of key, or a keyhole perhaps, maybe a chain, or maybe three asterisks *** but as mstarke wrote, that might not be easy as an icon.\n. newest release file, btw.\n. ah, never thought of looking at the document settings :)\nMaybe that could be worded different (database settings) and I prefer a global setting rather than a per file setting (but can live with that :))\n. using Keepass and KeepassX for years now but didn't know this was a file format setting. It always seemed like a global setting for me...\nGood to know. Thanks\n. I see what you mean about hard GUI decisions.\nAn idea might be to split Inspector into a viewer and editor (I really dislike the term \"inspector\" - I'm not sure people will know what the icon bar item \"inspector\" is supposed to be).\nThe editor as the inspector is right now and the viewer more like the CoverFlow view of Finder - left the sidebar, right a horizontal split with top entries list and below an overview of the entry which allows copy/pasting from it (or top and bottom reversed). I rather grew fond of how KeePassX does it over the years.\nWhen you toggle the editor, you get the inspector to the far right as it is now.\nThat's how keepassx does it: \n\n. Stop teaching me new things :)\n(seriously, why didn't I know about Finders inspector? Never encountered it before and missed the news when it was introduced)\n. You have to create a self signed certificate with that name. It will not work for contributing but works fine for your own purposes with a self signed one.\nOne thing to remember, when you create a certificate, you need to restart xcode or it will still complain about the missing certificate even though it is there.\n. I don't like the fullscreen craze. \"small\" programs like MacPass shouldn't need fullscreen\n. Hmm, seems this is not exactly being caused by MacPass. KeePassX doesn't list these entries with an attachment but when you doubleclick it you can see it has 1 bytes there (even though no actual file).\nThis may have been caused by either Keepassx or Kypass for iOS.\n. I think we traced it down to some iOS keepass clone having caused this. There is an attachment even if it is just 1 byte, so MacPass is correctly showing an entry (even though KeePassX ignores 1byte entries when there is no filename, I think)\n. this seems to be working now.\n. I'm all in favor of the monochrom look. I'm sick of the colorfull original keepass ;)\n\nAm 27.05.2014 um 09:17 schrieb Michael Starke notifications@github.com:\n@JoannaOlsen thank you for the offer. I can give you a list of the missing icons. Regarding your proposal for color variations currently there's a problem with that. I use the icons as a template, so OSX renders them according to the state and surroundings. This produces creates the emboss, gradient and shadows for free. Templates can only be black and white so no colorisation is possible there. If coloured Icons should be possible the whole system needs to change to use them as non-templates. This would work as well but then we should switch to more detailed icons (at least that's what I would do, but it's not a must). When I started I liked the idea of monochromatic icons a lot but it seems people want a bit more color in their MacPass ;)\n\u2014\nReply to this email directly or view it on GitHub.\n. AFAICT from a test run of Yosemite, only the app icons became brighter. In app icons like Finders sidebar, are still monochrome-like.\n. Overall great, I only struggle with a few icons:\n- icon 3, I think it is supposed to be network storage in Keepass, that icon looks more like a film roll to me\n- icon 26 is a floppy disk in the original Keepass. While I agree that these days using a floppy to mean \"save\" is not the best anymore, I think keeping the floppy is more correct in this context.\n- icon 41, looks like a flag in Keepass, not exactly sure, but I also can't say what your icon means\n- icon 46, in Keepass it's the information icon (which you have in the extra icons row) not the help icon\n- icon 50, in Keepass it looks like a folder with a archive box (similar to the zip/archive icon 36), you made it exactly like the folder icon 48 (no idea how to make this in a simple icon, though)\n\nPlease don't be offended, I know that some of those icons came from existing ones in MacPass. And most of those icons I can't even understand in the original Keepass (and I couldn't find a list of what these icons are supposed to be) :)\n. @JoannaOlsen thanks for clarifying the vector icon. yes yours actually makes sense while the Keepass one doesn't ring a bell at all for me :)\nAs for icon 46, both in Keepass 1.x and KeepassX 0.4.3 it shows the i icon, not the ? one. In which Keepass version is it ? for you? Keepass 2.x (didn't have a working Windows VM running to test that)?\nAnd icon 26, @mstarke, in Keepass it's a floppy disk, not a tool bar icon for \"save as\". Anyone who chose that icon in his keefile, probably would still like to see a floppy disk, not something totally unrelated, IMO.\nI'd also really not change other icons too much, dollar bill and W icon. It's steering too far away from the original and what people expect to be shown in their keefile.\nAlso, when you add a complete icon file, it would be best to maintain visual compatibility with other Keepass versions and start with icon 0, the key icon. IMO :)\nedit: I see the help icon being in Keepass 2.x instead of an information icon in keepass 1.x... interesting\n. yes master, I was in a hurry and confused git with mercury (I think mercury has tip for newest code)\n. I'll try to catch you tonight, may be tomorrow. The only other thing I did was update to latest OS X 10.9.1 beta... doubt that could be an issue, but who knows...\n. Any pointers on how to start? Seems that it's not as easy to bisect when there are so many external dependencies...\n. a day later without restart, same version it works again... closing :)\n. it does that already. Not the last release though but current code does.\n. yes, agreed\n. sorry to pester you with this but you should really really up a new release. The current one is so old it's not even funny anymore when people wonder why that and this is not working while it already works in master.\nAt least you should get rid of the old releases. No one should be able use them over master.\n. ok, got it working with dragndrop, a seperate menu entry would still be welcome :)\nHistory? is that a kdbx thing?\nBtw, it's Option+drag, not Control\n. the clone right click option is doubled, once with the keyboard shortcut shown, one without.\n. thanks for clearing that up - it was confusing as it didn't even do anything :)\n. Kypass Companion is out of beta and costs a s***load of money on the App Store :)\n. Maybe you should add a disclaimer on top of the readme, that 0.4.1 was released on ... and greyed out things have not been implemented in that version.\nIf you want to go further you could add what has been fixed and might be merged in git and for that to use one must brew his own built ;)\nDom\n\nAm 16.10.2014 um 19:23 schrieb Michael Starke notifications@github.com:\nFeature is not merged see #247\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes, an update would help. After all that sparkle integration should be used at least once ;)\nAm 17.10.2014 um 16:05 schrieb Michael Starke notifications@github.com:\nI should just release a f**** update. That's what I should do. And no, I'm not drunk ;)\n\u2014\nReply to this email directly or view it on GitHub.\n. thanks for fixing this.\nOne question though, why the (1023)? it still shows when you enter the wrong password. My guess it's an error identifier that only shows in debug?\n. I think this just mirrors KeepassX, while the original does indeed place the URL field last. Always seemed odd to me in KeepassX but now I didn't notice anymore :)\nSo, yes, please take the URL field somewhere else, not between Username and Password.\nI would prefer it right after the Title field but probably better to mirror the original and place it after Password.\n. I'm not on master but around the time 6a28d03 - funnily tabs are still moving the cursor wrong there :)\nUsername -> URL -> Password\n. can't you lift this off keepassX? OTOH I never looked into what license you and keepassX are using and whether they are compatible.\n. another wish, if implement this, please do not use the bright colors (red to green) but rather a white to black gradient or something else that fits the style of MacPass better :)\n. Good idea, would like to follow this transition and see some Swift action ;)\n\nDom\n\nAm 03.06.2014 um 18:36 schrieb Michael Starke notifications@github.com:\nTransition Project to Swift\n\u2014\nReply to this email directly or view it on GitHub.\n. One thing to note, you need to restart MacPass (really quit, not just close the database) for a newly assigned shortcut to work. AND it needs to be a shortcut not already assigned globally...\n. Mstarke went to so much trouble to add an updater...\nHe really should just make new release...\nhint hint hint ;)\nAm 01.08.2014 um 17:20 schrieb Valerio Santinelli notifications@github.com:\nAs a side note, I do have an entry in the root group, but the behavior is still the same and I cannot save that database.\nWhen is the next release planned? ;)\n\u2014\nReply to this email directly or view it on GitHub.\n. Overall I like those a lot, the circle look seems better to me.\n\nBUT... :)\non first glance I have problems with:\n- the three bills, hard to get the idea behind this icon when you don't know it was a dollar sign before, especially at 100%\n  I'm fine with change but the dollar sign makes instant sense IMO and unless one finds an equal strong icon you better stick to the dollar.\n- icon 47, I like the traditional icon more\n- icon 25, the mailbox looks good\n- icon 46, the help sign - I'm ok with anything there now. In Keepass 1.x it was always the info sign but I now learned that for Keepass 2.x it got changed to the help sign, so who am I to argue whether it is help or info? :)\nFloppy icon: The point I tried to make is that the icons have been there to help people categorize their passwords or groups. They have not been meant as GUI elements (even though the original Keepass  recycled them), so the floppy icon is meant as a floppy disk not as \"save\" or \"save as\".\nI have no idea why I feel so strong about this, never used this icon in my kdb but replacing this with a \"save\" icon really irks me. (and yes, that save icon reminds a lot of \"download\")\n. Anything happening with this anymore? I'd really like to have updated icons :)\n. 2nd and 3rd have an attachment bin-stream (49byte and 104byte) with mostly NULL inside if that matters anyhow...\n. thanks, another bypass bug then. with my track record of reporting bugs to Kyuran, I'll just let that go.\n. You can always make this template database read-only on the file system level ;)\nBut in a group of people using that it's not gonna work long ;)\n\nAm 08.09.2014 um 16:29 schrieb Yono Mittlefehldt notifications@github.com:\nIf an unencrypted database is used to save templates, could checks be put it to ensure sensitive data is not accidentally written to it? Would there also be a way to check that new bug fixes/merges don't accidentally write sensitive data to this database?\n\u2014\nReply to this email directly or view it on GitHub.\n. That's my opinion as well. There are so many fixes since 0.4.1 that do not require 10.9. So it would benefit the few on lower OS X versions.\nAm 21.10.2014 um 10:12 schrieb Jellyfrog notifications@github.com:\nRelease a new version with the fixes in master, without changed requirements.\nAfter that, bump the requirements!\n\u2014\nReply to this email directly or view it on GitHub.\n. nothing at all in the console :(\n. yup, had the short time to check with spctl and it was indeed signed by myself :)\nsorry for the noise :)\n. The joys of GPL :\n- you can sell others GPL code ;(\n- you can't put it on the Apple stores ;)\n\nDom\n. hmm, I might be wrong about the actual issue, but isn't any group or entry you select inverted?\n. This can be changed via OS X' shortcut settings.\n\nAm 02.04.2015 um 10:30 schrieb Goran Juri\u0107 notifications@github.com:\nIs there a chance to make this configurable or at least change them to two (instead of three) key combination?\nThe current solution is IMHO clumsy...\n\u2014\nReply to this email directly or view it on GitHub.\n. https://support.apple.com/kb/PH13916?locale=en_US\nAm 02.04.2015 um 10:50 schrieb Goran Juri\u0107 notifications@github.com:\nCould you elaborate on that?\n\u2014\nReply to this email directly or view it on GitHub.\n. Did you follow step 6 of the instructions? Quit and restart the app...\nI think I had this working once. There is an older, closed issue about this.\nPlease read closed issues as well.\n\nDom\n\nAm 02.04.2015 um 12:01 schrieb Goran Juri\u0107 notifications@github.com:\nI saw that, but have you tried it?\nThis doesn't work for me and I am guessing that is because those two options are not available in the main apps menu, only in the contextual menu.\n\u2014\nReply to this email directly or view it on GitHub.\n. There is a setting for that AFAIK\nAm 07.04.2015 um 16:14 schrieb Tushar Agarwal notifications@github.com:\nThe software locks up frequently. When using a key file, once has to select the file again and again. Ideally it should show the file pre populated on the unlock screen as it does in KeyPass for Windows.\n\u2014\nReply to this email directly or view it on GitHub.\n. Also I think it would be very useful for mstarke if you can lay out some steps to reproduce your frequent lockups.\nAm 07.04.2015 um 16:14 schrieb Tushar Agarwal notifications@github.com:\nThe software locks up frequently. When using a key file, once has to select the file again and again. Ideally it should show the file pre populated on the unlock screen as it does in KeyPass for Windows.\n\u2014\nReply to this email directly or view it on GitHub.\n. Please elaborate with your exact steps in MacPass (what do you click and execute with shortcuts between opening and closing MacPass).\nIs it a keepass 1.x ir 2.x database? Where in the database do you add the new entry? Etc...\n\nBecause I cannot reproduce this, so I assume the error is somewhere else in the procedure...\n. The auto update is working fine, there just wasn't a new release ;)\nManually you can grab the latest source and compile it via xcode...\n. Expect mstarke to get rid of it ;)\n. This is the support for MacPass. Nothing to do with mono or any plugin for the original Keepass.\nFor support of Keepass Desktop contact the seller of that software.\n. Yes, \"based on\". When you need help with Keepass Desktop, ask those guys that sold it to you (via App Store).\n. I'm not 100% sure which license MacPass uses but if it is GPL, the App Store isn't compatible. Mainly that you can't pass on the app to anybody but the GPL's \"copyleft\" mindset explicitly enforces that.\nA way better look at that than I could ever give http://www.engadget.com/2011/01/09/the-gpl-the-app-store-and-you/ \n. I think there is an option for that in the preferences. It's not the default since it lessens your security.\n. I think this bug got even worse: \n- Changing an existing field and then closing MacPass via red button will not trigger the save dialog (even though the title bar says \"Edited\").\n- Changing an entry will not make MacPass change the title bar to \"Edited\" unless you change fields\n. Ah, I see. Thanks for pointing that out.\n. Please don't stop supporting kdb files!\nPLEASE!!! :)\n. I think I'd prefer 4. or 3.\nEstablishing Program specific extensions should be avoided at all costs, IMO.\nPrompting kdb users once or when they use a kdbx only option is fine. The current way is highly annoying and desensitizes one about warning messages. I've had a big password changes/purge and was annoyed by the many times this warning flashed up.\nAnd yes, it's finally time for me to switch to kdbx anyway. Every other program, especially the mobile ones, fully support it now, so no need to further delay ;)\n. It is being closed because \n- it is a duplicate of an existing filed issue. No need to keep duplicates around\n- the bug IS fixed. There is no real release of the fixed code but the issue tracker is there to record bugs, so as soon as a bug is fixed it gets closed.\nWhat you can do is use the continous build or download xcode and build it yourself (it's really not complicated at all, just takes time).\nOpensource project, especially 1-man projects are in general not quick in releasing new versions as there are often other things that are considered vital for a new release. And since it is only one person working on it, this takes time.. When you look at the first report #445 you see the fix commit.\nSo as THIS issue is clearly marked as duplicate of #445, the real issue tracking is happening over there and not here.. @sebw It all boils down to a proper release and I wrote what usually happens with releases in 1man projects. You conveniently ignored that but instead made a lengthy post about tracking patches/commits/merges which Mstarke does quite well.\nFrom my experience you will always get countless duplicates as people are not able to search issues and closed issues for some reason before adding an issue.\nMy way of doing things is looking at the date of last release, date of last commit and when there is a significant gap it's clear that you need to look more closely at open and closed issues to see if your issue has already been reported. This is hard for people it seems.. BUT IMO @mstarke should have made the old releases unavailable because of the very likely data loss. Well, you can see all the commits at https://github.com/mstarke/MacPass/commits/master. @mstarke, maybe you need to code an error check there, or rather a confirm dialog when an obvious password file is used in the key file space (obvious being the two file extensions).\n\"You are using a password file as a key file. Key files are used for extra security and are normally not saved with the extension .... Do you want to continue? Y/N\"\nIt's a bit ugly but as you wrote, it's not uncommon to happen.. 1. You can reassign shortcuts in the OS X shortcuts/keyboard manager in the OS X settings app\n2. With today\u2019s big screens I would find it cumbersome when copying one and then needing the other one to have to \"open\" MacPass again. But that\u2019s just my opinion ;)\n. Grab the one that is newer. Right now there was a release but once Mstarke tinkers with stuff, I expect continous to pick up again. Move it out of the /Applications folder and the use Finder to move it back.\nIt's a security feature that sandboxes an application when it isn't moved by Finder into that folder. If you look at the process of MacPass with Activity Monitor you will notice that it is sandboxed (not started from /Applications).\nHappened to me as well with MacPass and some other Apps as I use ForkLift for file management.. Normally you can use itunes file sharing to add the keyfile. Really shouldn't be at the same spot as the database ;). Or use iTunes FileSharing to get the keyfile on the device. This is documented AFAIK.. So it wasn't a double extension ;)\n.filename means that the file is (somewhat) hidden not that it has no name but the extension .filename. So it behaved in the manner of the initial problem, changing the extension back to .kdbx (or in this case changing the empty extension).. Has there been a regression? I've downloaded the continuous build (binary is dated 19th November) and the notes are black against the dark grey background on Mojave.. I just switched to Mojave and updated my old continuous version I had running. As I followed the comments somewhat I thought this was working correctly.\nI'll just roll my own build via xcode then ;)\nThanks!. As you referenced #803, you've read that this is a known issue ;). ",
    "yusf": "Thought of this. The current de facto set of icons seems to be what's featured in MiniKeePass, KeePassX, KeePass and so on. They leaning much towards the Windows HIG and may not be suitable for Mac, apart from looking simply outdated. \nQuestion is, should they be redrawn to maintain compatibility OR should a whole new set of icons be created, correlating to the current use of computers and web (and not the 90's)?\n\n. How's the MiniKeePass icon for a boilerplate, symbol wise? Would create a feeling of an app suite (OS X/iOS), making using the both together a tad more compelling. :smiley_cat: \n. Coming from a KeePassX usage I'm used to this. Pretty handy when the keyfile is used by 10 people over Dropbox or such.\nGoes like this\n1. keys.kdb is opened.\n2. KeePassX creates a keys.kdb.lock alongside keys.kdb.\n3. Lockfile exists as long as the keyfile is opened and unlocked. On closing or locking the keyfile keys.kdb.lock is erased. \nIf keys.kdb is opened and keys.kdb.lock already exists alongside it user is prompted to open it in a read-only state.\n:100: \n. Is this similar to KeePassX backup feature?\n. Thanks! :smile: \n. I too think the monochrome look would look best, seeing that recent OS X versions all use such icons throughout. Would really like an automatic favicon download feature, but that's another issue\u2026\n. Would favor a tabbed style too, though recognizing the hardships.\n. Multiple windows aren't that bad actually, but most OS X users lack good methods to switch between them effectively. Personally I use the \u2318~ command, \"Move focus to next window in application\". \n. Wow, that's great! Didn't know that. (didn't think of a restart).\nStill think those options should be in the menu for the sake of redundancy though :smile: \n. That sucks. Out of curiosity, what would happen if MacPass stole Safe Password's graphics in return?\n. Just a trollish way to lure them out. Not necessarily a great idea. :smile: \n. I use KeePassX as well. No such option is offered in that app. Which one of the apps would be sidelining the KeePass \"standard\"?\n. Right then! Using kdb still.\n. ",
    "Jellyfrog": "What about using something like http://fortawesome.github.io/Font-Awesome/icons/\nAnd/or others like..\nhttp://www.entypo.com/characters/\n. Yes of course, that would be a rather annoying!\nBut I was thinking that you could do some mapping, like for example that icon \"34\" (see pic in first comment) could be mapped to http://fortawesome.github.io/Font-Awesome/icon/wrench/ and so on...\n. If you have a private key with a password, OS X always asks you to add it to the keychain, thats kinda the same security issue.\n. Release a new version with the fixes in master, without changed requirements.\nAfter that, bump the requirements!\n. It will be a good base to compile! ;)\n. Github profile is fine!\n. +1\n. @mstarke you can code sign via travis, for example; https://www.objc.io/issues/6-build-tools/travis-ci/\n. use rm -P instead?\n\n-P          Overwrite regular files before deleting them.  Files are overwritten three times, first with the byte pattern 0xff, then 0x00, and then 0xff again, before they are deleted.\n. Here is the crash report after force quitting: https://gist.github.com/Jellyfrog/324ed801ecebf5ffe1c664f3e659e81c. Still hangs the moment I press \"Add entry\" for example.\nhttps://gist.github.com/Jellyfrog/08eb920001d11cce38e68fa416f60e95. @mstarke yes sure, just normal debug or a special build? . @mstarke The culprit is [self revertDocumentToSaved:nil];, removing that line and it stops hanging\n\nEdit: hmm, not sure now, because i added the lines back and it worked again for a while etc...\nI got this in xcode: (with both lines in place)\n2017-08-30 22:10:25.486400+0200 MacPass[6699:1976967] <MPDocument 0x6040001c01e0 with displayName \"1.kdbx\"> has blocked the main thread for a long time waiting for Activity. Here is the output of _NSDocumentSerializationInfo():\n2017-08-30 22:10:25.499799+0200 MacPass[6699:1976967] Pending serialization requests (3 total)\n[0] ACTIVITY: Document: <MPDocument: 0x6040001c01e0> \"1.kdbx\" -- State: ACTIVE -- Request call stack:\n(\n    0   AppKit                              0x00007fff547d454b _NSAddSerializationInfo + 111\n    1   AppKit                              0x00007fff54b9bab6 -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 200\n    2   AppKit                              0x00007fff54ad6295 -[NSDocument revertDocumentToSaved:] + 88\n    3   MacPass                             0x00000001000466df -[MPDocument presentedItemDidChange] + 143\n    4   Foundation                          0x00007fff592ba8f3 __74-[NSFilePresenterXPCMessenger _makePresenter:observeChangeWithSubitemURL:]_block_invoke.1334 + 45\n    5   Foundation                          0x00007fff59293611 __95-[NSOperationQueue(NSFileCoordinationSupport) _fc_addUncancellableOperationForReactorID:block:]_block_invoke + 127\n    6   Foundation                          0x00007fff59045ab3 __NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK__ + 7\n    7   Foundation                          0x00007fff59045915 -[NSBlockOperation main] + 68\n    8   Foundation                          0x00007fff59043dc2 -[__NSOperationInternal _start:] + 778\n    9   Foundation                          0x00007fff5903fdeb __NSOQSchedule_f + 369\n    10  libdispatch.dylib                   0x0000000100617f1f _dispatch_client_callout + 8\n    11  libdispatch.dylib                   0x000000010062c5be _dispatch_continuation_pop + 940\n    12  libdispatch.dylib                   0x00000001006235af _dispatch_async_redirect_invoke + 738\n    13  libdispatch.dylib                   0x0000000100619d77 _dispatch_root_queue_drain + 723\n    14  libdispatch.dylib                   0x0000000100619a50 _dispatch_worker_thread3 + 116\n    15  libsystem_pthread.dylib             0x00000001006941d2 _pthread_wqthread + 1387\n    16  libsystem_pthread.dylib             0x0000000100693c55 start_wqthread + 13\n)\n[1] ACTIVITY: Document: <MPDocument: 0x6040001c01e0> \"1.kdbx\" -- State: WAITING -- Request call stack:\n(\n    0   AppKit                              0x00007fff547d454b _NSAddSerializationInfo + 111\n    1   AppKit                              0x00007fff54b9bab6 -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 200\n    2   AppKit                              0x00007fff550f2ee6 -[NSDocument(NSDocument_Versioning) _browseVersions] + 123\n    3   AppKit                              0x00007fff54ad6694 __36-[NSDocument revertDocumentToSaved:]_block_invoke + 1017\n    4   AppKit                              0x00007fff54b9a630 -[NSDocument(NSDocumentSerializationAPIs) _performActivity:] + 1565\n    5   AppKit                              0x00007fff54b9bbae -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 448\n    6   AppKit                              0x00007fff54ad6295 -[NSDocument revertDocumentToSaved:] + 88\n    7   MacPass                             0x00000001000466df -[MPDocument presentedItemDidChange] + 143\n    8   Foundation                          0x00007fff592ba8f3 __74-[NSFilePresenterXPCMessenger _makePresenter:observeChangeWithSubitemURL:]_block_invoke.1334 + 45\n    9   Foundation                          0x00007fff59293611 __95-[NSOperationQueue(NSFileCoordinationSupport) _fc_addUncancellableOperationForReactorID:block:]_block_invoke + 127\n    10  Foundation                          0x00007fff59045ab3 __NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK__ + 7\n    11  Foundation                          0x00007fff59045915 -[NSBlockOperation main] + 68\n    12  Foundation                          0x00007fff59043dc2 -[__NSOperationInternal _start:] + 778\n    13  Foundation                          0x00007fff5903fdeb __NSOQSchedule_f + 369\n    14  libdispatch.dylib                   0x0000000100617f1f _dispatch_client_callout + 8\n    15  libdispatch.dylib                   0x000000010062c5be _dispatch_continuation_pop + 940\n    16  libdispatch.dylib                   0x00000001006235af _dispatch_async_redirect_invoke + 738\n    17  libdispatch.dylib                   0x0000000100619d77 _dispatch_root_queue_drain + 723\n    18  libdispatch.dylib                   0x0000000100619a50 _dispatch_worker_thread3 + 116\n    19  libsystem_pthread.dylib             0x00000001006941d2 _pthread_wqthread + 1387\n    20  libsystem_pthread.dylib             0x0000000100693c55 start_wqthread + 13\n)\n[2] ACTIVITY: Document: <MPDocument: 0x6040001c01e0> \"1.kdbx\" -- State: WAITING -- Request call stack:\n(\n    0   AppKit                              0x00007fff547d454b _NSAddSerializationInfo + 111\n    1   AppKit                              0x00007fff54b9bab6 -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 200\n    2   AppKit                              0x00007fff54afa8b4 -[NSDocument _requestViewControllerForDocumentTitlebarPopover:thenDisplayPopoverUsingBlock:] + 204\n    3   AppKit                              0x00007fff54e08aee -[NSThemeAutosaveButton _showDocumentPopoverThenContinue:] + 316\n    4   AppKit                              0x00007fff54e081f9 -[NSThemeAutosaveButton _performMouseDownWithEvent:] + 222\n    5   AppKit                              0x00007fff547ee245 -[NSThemeFrame handleMouseDown:] + 166\n    6   AppKit                              0x00007fff547ee14e -[NSTitlebarView mouseDown:] + 52\n    7   AppKit                              0x00007fff54eee3c1 -[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] + 5891\n    8   AppKit                              0x00007fff54eeb018 -[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] + 2359\n    9   AppKit                              0x00007fff54eea2c4 -[NSWindow(NSEventRouting) sendEvent:] + 497\n    10  AppKit                              0x00007fff54d4b153 -[NSApplication(NSEvent) sendEvent:] + 307\n    11  AppKit                              0x00007fff545ad5c1 -[NSApplication run] + 812\n    12  AppKit                              0x00007fff5457c736 NSApplicationMain + 804\n    13  MacPass                             0x00000001000034e4 main + 52\n    14  libdyld.dylib                       0x00007fff7e561145 start + 1\n    15  ???                                 0x0000000000000005 0x0 + 5\n)\n2017-08-30 22:10:28.211357+0200 MacPass[6699:1976832] <MPDocument 0x6040001c01e0 with displayName \"1.kdbx\"> has blocked the main thread for a long time waiting for Activity. Here is the output of _NSDocumentSerializationInfo():\n2017-08-30 22:10:28.211959+0200 MacPass[6699:1976832] Pending serialization requests (3 total)\n[0] ACTIVITY: Document: <MPDocument: 0x6040001c01e0> \"1.kdbx\" -- State: ACTIVE -- Request call stack:\n(\n    0   AppKit                              0x00007fff547d454b _NSAddSerializationInfo + 111\n    1   AppKit                              0x00007fff54b9bab6 -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 200\n    2   AppKit                              0x00007fff54ad6295 -[NSDocument revertDocumentToSaved:] + 88\n    3   MacPass                             0x00000001000466df -[MPDocument presentedItemDidChange] + 143\n    4   Foundation                          0x00007fff592ba8f3 __74-[NSFilePresenterXPCMessenger _makePresenter:observeChangeWithSubitemURL:]_block_invoke.1334 + 45\n    5   Foundation                          0x00007fff59293611 __95-[NSOperationQueue(NSFileCoordinationSupport) _fc_addUncancellableOperationForReactorID:block:]_block_invoke + 127\n    6   Foundation                          0x00007fff59045ab3 __NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK__ + 7\n    7   Foundation                          0x00007fff59045915 -[NSBlockOperation main] + 68\n    8   Foundation                          0x00007fff59043dc2 -[__NSOperationInternal _start:] + 778\n    9   Foundation                          0x00007fff5903fdeb __NSOQSchedule_f + 369\n    10  libdispatch.dylib                   0x0000000100617f1f _dispatch_client_callout + 8\n    11  libdispatch.dylib                   0x000000010062c5be _dispatch_continuation_pop + 940\n    12  libdispatch.dylib                   0x00000001006235af _dispatch_async_redirect_invoke + 738\n    13  libdispatch.dylib                   0x0000000100619d77 _dispatch_root_queue_drain + 723\n    14  libdispatch.dylib                   0x0000000100619a50 _dispatch_worker_thread3 + 116\n    15  libsystem_pthread.dylib             0x00000001006941d2 _pthread_wqthread + 1387\n    16  libsystem_pthread.dylib             0x0000000100693c55 start_wqthread + 13\n)\n[1] ACTIVITY: Document: <MPDocument: 0x6040001c01e0> \"1.kdbx\" -- State: WAITING -- Request call stack:\n(\n    0   AppKit                              0x00007fff547d454b _NSAddSerializationInfo + 111\n    1   AppKit                              0x00007fff54b9bab6 -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 200\n    2   AppKit                              0x00007fff550f2ee6 -[NSDocument(NSDocument_Versioning) _browseVersions] + 123\n    3   AppKit                              0x00007fff54ad6694 __36-[NSDocument revertDocumentToSaved:]_block_invoke + 1017\n    4   AppKit                              0x00007fff54b9a630 -[NSDocument(NSDocumentSerializationAPIs) _performActivity:] + 1565\n    5   AppKit                              0x00007fff54b9bbae -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 448\n    6   AppKit                              0x00007fff54ad6295 -[NSDocument revertDocumentToSaved:] + 88\n    7   MacPass                             0x00000001000466df -[MPDocument presentedItemDidChange] + 143\n    8   Foundation                          0x00007fff592ba8f3 __74-[NSFilePresenterXPCMessenger _makePresenter:observeChangeWithSubitemURL:]_block_invoke.1334 + 45\n    9   Foundation                          0x00007fff59293611 __95-[NSOperationQueue(NSFileCoordinationSupport) _fc_addUncancellableOperationForReactorID:block:]_block_invoke + 127\n    10  Foundation                          0x00007fff59045ab3 __NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK__ + 7\n    11  Foundation                          0x00007fff59045915 -[NSBlockOperation main] + 68\n    12  Foundation                          0x00007fff59043dc2 -[__NSOperationInternal _start:] + 778\n    13  Foundation                          0x00007fff5903fdeb __NSOQSchedule_f + 369\n    14  libdispatch.dylib                   0x0000000100617f1f _dispatch_client_callout + 8\n    15  libdispatch.dylib                   0x000000010062c5be _dispatch_continuation_pop + 940\n    16  libdispatch.dylib                   0x00000001006235af _dispatch_async_redirect_invoke + 738\n    17  libdispatch.dylib                   0x0000000100619d77 _dispatch_root_queue_drain + 723\n    18  libdispatch.dylib                   0x0000000100619a50 _dispatch_worker_thread3 + 116\n    19  libsystem_pthread.dylib             0x00000001006941d2 _pthread_wqthread + 1387\n    20  libsystem_pthread.dylib             0x0000000100693c55 start_wqthread + 13\n)\n[2] ACTIVITY: Document: <MPDocument: 0x6040001c01e0> \"1.kdbx\" -- State: WAITING -- Request call stack:\n(\n    0   AppKit                              0x00007fff547d454b _NSAddSerializationInfo + 111\n    1   AppKit                              0x00007fff54b9bab6 -[NSDocument(NSDocumentSerializationAPIs) performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 200\n    2   AppKit                              0x00007fff54afa8b4 -[NSDocument _requestViewControllerForDocumentTitlebarPopover:thenDisplayPopoverUsingBlock:] + 204\n    3   AppKit                              0x00007fff54e08aee -[NSThemeAutosaveButton _showDocumentPopoverThenContinue:] + 316\n    4   AppKit                              0x00007fff54e081f9 -[NSThemeAutosaveButton _performMouseDownWithEvent:] + 222\n    5   AppKit                              0x00007fff547ee245 -[NSThemeFrame handleMouseDown:] + 166\n    6   AppKit                              0x00007fff547ee14e -[NSTitlebarView mouseDown:] + 52\n    7   AppKit                              0x00007fff54eee3c1 -[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] + 5891\n    8   AppKit                              0x00007fff54eeb018 -[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] + 2359\n    9   AppKit                              0x00007fff54eea2c4 -[NSWindow(NSEventRouting) sendEvent:] + 497\n    10  AppKit                              0x00007fff54d4b153 -[NSApplication(NSEvent) sendEvent:] + 307\n    11  AppKit                              0x00007fff545ad5c1 -[NSApplication run] + 812\n    12  AppKit                              0x00007fff5457c736 NSApplicationMain + 804\n    13  MacPass                             0x00000001000034e4 main + 52\n    14  libdyld.dylib                       0x00007fff7e561145 start + 1\n    15  ???                                 0x0000000000000005 0x0 + 5\n). @mstarke see updated comment above. I'll use it for a while. stopped hanging for me. ",
    "sickill": "What about supporting multiple db icon sets, and allowing user to choose one in the preferences? \nMacPass could then ship with:\n- original \"90s\" icon set (for people migrating from keepass(x) who don't want to shake their organization too much),\n- a modern one based on Font Awesome, which would have mapping based more on the actual meaning (for people building their new databases, or the ones who favor nice looking set that are willing to update their group/entry settings).\n- + ability to load a custom one (for creative people).\n. +1 for supporting \"Auto-Type-Window\".\nAlso, it would be great if user got some visual feedback about \"no matching entry found\" when hitting global hotkey. Something like the popup/tooltip that displays \"Username copied!\" would be awesome here.\n. I used global autotype today on Sierra and it worked fine.\n. This will be awesome addition. :+1: \n. ",
    "aheusingfeld": "FYI: KeePassHTTP has some issues on my MBP running OS X 10.8.4 (see https://github.com/pfn/keepasshttp/issues/121 for details).\n@mstarke It's not only a nice feature but kind of a necessity when you want Keepass integration into Firefox or Chrome. :-/\n. ",
    "etuttle": "+1 for this feature!  MacPass is looking really sweet.  Once it syncs with the browser plugins it will be the holy grail of mac password managers.  Keep up the good work.\n. ",
    "offlinehoster": "+1 for this feature, too! We need more projects like MacPass. \n. ",
    "ittaiz": "@mstarke do you know if you are rewriting keepasshttp or going to interface with it (and require mono installation)?\n. Do you have an outline of the solution? Or any tips?\nI have no knowledge of the specific domain but I'd be happy to take a look\nsince this feature is very important for me to.\n\u05d1\u05ea\u05d0\u05e8\u05d9\u05da \u05d9\u05d5\u05dd \u05e8\u05d1\u05d9\u05e2\u05d9, 18 \u05d1\u05d3\u05e6\u05de\u05d1\u05e8 2013, Michael Starke \u05db\u05ea\u05d1:\n\nAs much as I appreciate it. There's so much stuff not working that is\n\"simple Keepass\" functionality. I want to get the \"core\" features in there\nbefore I start tackling some of the plugins. Anwer would be: sadly no ;).\nIf you want to contribute the code, that would certainly make it move up my\nlist ;)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mstarke/MacPass/issues/14#issuecomment-30796607\n.\n. \n",
    "tevren": "Are there any prerequisites for enabling server? The preference is greyed out in Version 0.3.8 (2523).\n. ",
    "EntropyWorks": "So from the Status page: \nExtras\n\n~~Support for KeePassHttp~~ \n\nI guess that means its not working yet. I hope to see this feature enabled. Its one of the main features I'm looking forward to using. Till then I will continue to use KyPass Companion. KyPass is the only KeePass compatible app that supports the keepasshttp interface running on OS X.\n. I don't know if this is the same bug or different Notes issue.  I can no longer modify tor add Notes field in any of my entries. All my the previous Notes entries are readable but I can't modify them. Opening the Inspector and clicking the Edit button doesn't seem to do anything. \n. ",
    "alanpearce": "Would a :+1: help move this up your list?\n. ",
    "flinz": "I personally would also rather see autotype (which opens more possibilities) than KeePassHttp in future versions.\nStill I'll give this feature a +1.\n. cool to see this happening! big thanks to @XBigTK13X \n. +1 from me\n. @jameshurst I finally got around to trying the keepasshttp branch, but unfortunately i can not get it to work so far. I am on OSX 10.11.1 and built with Xcode 7.1.\n- neither passafari.safariextension nor passifox seem to connect at all\n- chromeipass at least shows me that I am running the KeePassHttp-ObjC server. However, it\ndoes not find any connected databases.\nThe KeepassHttp server seems to be started (i can see the icon), however clicking the icon does not open any dropdown - don't know whether this is intended behavior.\nTo build it i had to circumvent the KeePassKit issue by changing binary.key --> binary.name in MacPass/KeePassKit/Core/KPKEntry.m line 618, which let me build (got this from the issue). Might it be that this breaks something?\n. I have the same issue and was just about to write something.\nAlso on Chrome, with OSX 10.9.5.\nI have tried setting the global hotkey to something different, but to no avail.\nIn this regard - some feedback on autotype operations (status bar, or OSX message popup?) would be nice\n. I just reproduced your usecase, and it works.\nIt took me a while to notice that you indeed meant the title of the database entry and not the Autotype->Window Title field.\n. Yeah, sure - I wish I had time to contribute more sincerely. Respect for what you're pulling off here.\n. Ah, very cool. I swear I overlooked this somehow.. sorry for the hassle.\nThanks for the detail on the reset, will add to doc.\nEdit: created a doc entry.\n. @EvilDragonSW Can confirm, this works as a workaround. I managed to build this way on OSX 10.11.1 with Xcode 7.1.\n. Yeah, that makes sense - just trying out the MacPassHTTP plugin (using carthage) and it looks good. \n. ",
    "marcius": "Either autotype or KeePassHttp support are top class features. Looking forward to seeing them in the next release!\n. The solution for viewing attachments adopted by the original KeePass is totally unsecure and even commercial products open attachments in the browser!\nI think your solution is safe enough and to be even fairer a warning can be issued to the user when the attachment is opened.\n. With KeePass 1 and KeePassX you must download the attachment and then open it.\nYou're right about KeePass 2, but only a few (3-4) formats are supported by the internal viewer.\nIt could be nice having both functions: \n1) a secure internal viewer for images or plain text as KeePass 2 and \n2) the \"secure QuickLook\" solution you mentioned in your first comment\nbut I'd give priority to the second one: it would work with many more file types at a reasonable risk.\n. Wow, that was... fast! ;-) Thanks!\n. ",
    "XBigTK13X": "This is an important feature to me as well. I am currently checking out the project to see how much work it would take to implement keepasshttp-like functionality. If I make progress, I will update here and see if a pull request into the main repo is possible.\n. I spent a few hours looking over MacPass and keepasshttp. Here's my current plan.\n1. Spin up a standalone application. I have programmed in a number of languages, but not Objective-C. This standalone app will give me a chance to explore the language, and be better prepared to integrate my code into MacPass.\n2. Using the source code to keepasshttp and the source code for the related browser plugins, translate keepasshttp from C# to Objective-C. I will using libraries where possible to avoid wasted effort. This will be done with the standalone app from step 1.\n3. Extract the keepasshttp communication code into a new lib, keepasshttp-objc. \n4. Hook that library into MacPass' existing MPServerDaemon scaffolding.\n5. Touch up the spots where things didn't easily mesh.\nCurrently, I finished step 1 and am in the early phases of step 2. Your recommendation of CocoaHTTPServer is working great. I can catch requests from the browser plugin and am now working on the encryption/decryption of communications.\n. I will make everything public and under the same license as MacPass once I get the first handshake to succeed. Once that's functional, everything else should be much less work to implement.\n. I threw everything I have in this GitHub repo, just in case I get hit by a bus. The first handshake is not finished.\nI haven't spent enough effort on this to estimate how much more time is needed to finish reimplementing keepasshttp in Objective-C, but I should have more time this week to work on it.\nOnce the app in that repo is functional, I'll fork MacPass and throw a pull request your way.\n. I had some more time to work on this. The association handshake now works. \nI'm mocking out MacPass communication for now. First I need to write each handler using the mocks.Then, I will drop the code into my MacPass fork and replace the mocks with MacPass' actual logic.\nOnce I move to replacing the mocks, I will update here with any encountered problems.\n. Thanks for taking a look and for providing your feedback. I will implement both of your suggestions in a refactoring stage after I verify that the communications are functional.\n. I appreciate your criticisms. As mentioned, I've never written Objective-C before. I am happy to learn from any advice you provide.\n. Thank you both for your kind words. \nI have been busy upgrading my intranet, which is now finished. I will have a few hours tomorrow to work on this enhancement.\n. My library can now associate with the plugin, and supply login credentials. The logic is in place for the other handlers, but those haven't yet been tested.\nNow is the time to make major changes if they are needed. The current architecture is to implement KPHKeePassClient from MacPass, and pass that client into an instance of KPHServer.\nAs an example of an implemented client that can only log into Redit, check out https://github.com/XBigTK13X/keepasshttp-objc/blob/master/keepasshttp-objc/Mocks/KPHKeePassClientMock.m \n. This morning I finished testing the other handlers. keepasshttp-objc and the mocked client now work with Firefox and Chrome.\n. @mstarke are you fine with me changing the build target to OS X 10.9? I use some APIs that were exposed in that release.\n. I forked MacPass and will be working on this integration in the 'http' branch.\n. > what stuff do you use that is 10.9 only?\nThe Base64 encoders hanging off NSData. The docs mentioned them being available in previous releases, but exposed in 10.9. Is it possible to set the build target to 10.9, but release target to 10.8? \n. >  do you have any thought on how you want to handle undo/redo with the action KeePassHTTP initiates\nI had not thought about that. I'll check out the MPDocument.\n. @Preston-Landers There is not a build available. My fork doesn't yet have usable integration with KeePassHttp-ObjC.\nMy schedule got crazy toward the end of April. It is now opening back up. I have dedicated time to work on this feature each week, starting 07/14.\n. @jamesrhurst First off, your re-implementation of the KeePassHttp plugin is superior to mine. It looks a lot cleaner and closer to MacPass' existing structure. Nice job!\nI am unable to build the latest MacPass on my environment (including your fork), so I cannot test at this time.\nHave you been developing this against the firefox plugin, the chrome plugin, or both? While developing my solution, I found a handful of quirks between the two plugins.\n. ",
    "coyote4til7": "XBigTK13X: thank you for taking this on. You're making me (and I suspect a lot of other people) very very excited.\n. XBigTK13X, very cool. Suggestion: add a Readme-form.md to indicate it requires 10.9 and that it's where integration is being done for the main branch.\n. I with mstarke on upgrades but 10.9 might be at the point I'd be willing to risk it. Survey monkey would be an easy how to take the poll.\n. phpwutz, does your keepasshttp server integrate with MacPass?\n. On 12/30/2014 6:38 AM, Michael Starke wrote:\n\nScrap that last comment. I did notice there where some fuck ups after \nconverting the xibs to a higher XCode format. Results where exactly \nwhat you describe.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mstarke/MacPass/issues/292#issuecomment-68356707.\n\nI hope \"unsubscribe\" in the subject line works because Github doesn't \ninclude an unsubscribe message in the emails.\n. ",
    "pol-": "mstarke: Thank you for creating this much needed application for os x.  I am so glad I found this project as I have been waiting a long time to get a native open source Keepass for os x.  Your work is extremely appreciated.\nXBigTK13X: Thank you for helping implement the one feature that will make Macpass the ultimate password solution for me.  As stated above by coyote4til7, your work makes me part of the \"very very excited lot of other people\"!\n. ",
    "kumters": "I and all my collleagues from our company are OK with 10.9+ only...\n. Guys I compiled this one and wanted to play little bit with it, but unfortunately I'm not able to edit \"Window Associations\" in MacPass and with wrong Window Titles it's not working (We did some upgrades of our services and Window Titles changed...) I have to go home from this business trip to solve it in KeePass on my Win PC then I will play with this much more...\n. Yop, I would like to have this working too:)\n. Hmmm, I prefer global auto type. I never used KeePassHTTP, cause I much more need to login to different applications/enterprise applications that web/http things...\nApplications that will be almost never supported through plugins, because they are mostly enterprise applications which are used by low % of people... (where I login on everyday basis: SIEM java clients, putty, vpn clients, rdp and ica clients, db clients, vmware vsphere client, and of course Games launchers:))\n. xDDDDDD\n. I have other 5 coleagues that will switch from Windows to OS.X next year and they will prefer that global auto type too. But on other hand I understand that KePassHTTP is good/usefull too.\n. I forgot to report this bug:) Thank you. I have the same behaviour...\n. ICONS are not USELESS. I'm using them a lot and waiting to have them in colors to have them more different one from other...\n. If I can choose won high ress icons then it's enough for me. I need to have different icons to distinguish between folder and between few types of access easily. I have very often the same accounts to dofferent systems and I would like it obvious different netween this two lines...\nThank you\n. JJ, 0.3.8 is working flawless on 10.9.\n. Go Go Go Michael:)\n. Good to know. I checked open issues and haven't found it, so I created issue - better to have duplicate than miss it at all.\n. Yop I agree with your aproach at all. Just want to place this information here to inform all of you:)\nThanks\n. Thank you guys, i Love you;-)\nOn Aug 28, 2014 7:23 PM, \"Michael Starke\" notifications@github.com wrote:\n\nMerged #232 https://github.com/mstarke/MacPass/pull/232.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/pull/232#event-158547065.\n. I can send you a version build on my yosemite, send me your email please...\n\nOn Tue, Oct 7, 2014 at 11:37 AM, jayphizzle notifications@github.com\nwrote:\n\nIf someone could compile me a version with KeePassHttp support i would\ntest it.\n(Moved from Win/Keepass to Mac/Macpass and the KeePassHttp feature is the\nonly one missing)\nbtw: is there any plan to release beta nightlies ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/pull/247#issuecomment-58159734.\n\n\nPeter Jankovsky\n+420-724-952661@phone\n347696680@icq\ntifay78@skype\nsocial: about.me/kumters\n. Original windows Keepass use \"WINDOW NAME\" not URL:) And MacPas is doing\nthe same... It's critical for me, I use it for many application, which\ndoesn't have URL at all:)\nOn Wed, Jan 21, 2015 at 12:44 PM, Christian H\u00fcnniger \nnotifications@github.com wrote:\n\nHi,\nI think that the global AutoType feature use the site name to auto\ncomplete but Keepass uses the URL. Thins makes more sense.\nWhat do you think? Can I change this in some settings?\nRegards,\nChristian\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/308.\n\n\nPeter Jankovsky\n+420-724-952661@phone\n347696680@icq\ntifay78@skype\nsocial: about.me/kumters\n. ",
    "jhthorp": "10.9+ is fine with me. Also, please consider 10.9 was free and 10.10 is\nright around the corner making 10.9 even easier for user adoption.\nFor an Open Source project that is trying to get off the ground, it may be\npreferred to just make the jump and go with it. Since 10.9 was free, the\nadoption rate was fantastic. In all honesty, why should any user have\nstayed behind except for the desire to not change?\nOn Mon, May 12, 2014 at 7:56 AM, Tim Kretschmer notifications@github.comwrote:\n\ndo you have any thought on how you want to handle undo/redo with the\naction KeePassHTTP initiates\nI had not thought about that. I'll check out the MPDocument.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mstarke/MacPass/issues/14#issuecomment-42834677\n.\n\n\nJack Thorp\n. If there was increased incentive, as a developer, I would be more than willing to divert my attention closer to MacPass as opposed to the breadth of my current projects.\nFor now, I am going to make some changes as time allows since MacPass has become my GoTo KeePass for Mac solution. \nPersonally, I would really like to see a push toward porting KeePassHTTP as this is something missing from KeePassX (And requested for quite some time).\n. ",
    "callumgare": "<3 @mstarke & @XBigTK13X, you guys both rock. Your work is highly appreciated. I look forward to seeing keepasshttp in MacPass. I'm switching from KyPass the day that happens. Keep up the good work :+1: \n. I'm getting the same issue :/. ",
    "Preston-Landers": "Is there a testing release available yet for this http plugin support? Do I need to compile from @XBigTK13X 's fork to test this out? Thanks!\n. ",
    "byteborg": "+1 for the effort. Alas, I'm not proficient in ObjC, but willing to test, also experimental stuff.\n@mstarke and @XBigTK13X thanks that you're throwing your cycles at this!\nMacPass is the sleekest implementation of the Keepass variety I've seen so far, and I highly anticipate KPH support for all kinds of browser integration.\n. ",
    "Mirocow": "please add KeePassHttp\n. why you not merge this pullrequest?\n. +1\n2015-12-23 16:07 GMT+04:00 lenucksi notifications@github.com:\n\n+1\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/342#issuecomment-166877113.\n. \n",
    "frdmn": "+1\n. @mstarke awesome! :+1: \n. @tonycpsu You need to install Carthage and then run carthage update to download the dependencies.\nIf you have Homebrew:\nshell\n$ brew install carthage\n. ",
    "saschaglo": "+1 oh man, that would be so so great :-)\n. ",
    "existpierre": "+1 keepasshttp integration\n. Work it!  Thanks\n. ",
    "jameshurst": "I've created a branch with KeePassHttp support at https://github.com/jamesrhurst/macpass/tree/keepasshttp. It would be great if you guys could test it out, find bugs, and provide feedback.\n@mstarke if you could review the code on my branch and also in my KeePassHttp implentation, I would really appreciate it.\n. @XBigTK13X Thanks! Any errors you get when building? I might be able to help out with resolving those build issues.\nI developed this testing with both the firefox and chrome plugin. I did notice that both the plugins were kinda buggy with the initial pairing, chrome more so than firefox. I would often have to restart chrome for the plugin to realize it had been paired.\n. Thanks for the kind words @mstarke. It seems to handle the user undoing the pairing fairly well and just ends up prompting them again to grant access to the KeePassHttp client. The only issues related to that are the pairing issues that @XBigTK13X and I noticed with the browser plugins.\n. This works properly in Yosemite. I assume that for some reason the image view is not updating the template image state when the row is selected and deselected.\n. Yep, I use autotype. The basic functionality it has is working well for me. I usually just use it for entering passwords into a browser in with the default autotype sequence.\n. I also saw a comment to add custom browser support. Is there anything that needs to be done for that?\n. While I was working in the Workflow settings, I noticed there is an option for what to do when double clicking a URL. This seems to be a duplicate of an option in the General settings tab. The one in the General tab is already implemented. Should the one in Workflow be removed?\n. I did anticipate an error binding to nil happening when no group was selected, but wasn't able to get it to happen. Perhaps a better way to handle showing group and search entries would be to have MPDocument keep an array of items which MPEntryViewController can bind to.\n. I did try searching after opening before I selected a group and didn't manage to get any binding errors which is odd. Do you currently have any ideas for a better solution in mind?\n. I've just installed Yosemite beta 5 and autotype seems to be working for me. Perhaps there is an issue with copying data to the clipboard using beta 2. Would you be able to update to the latest beta and try again?\n. Looks like we were restoring the pasteboard contents too quickly. This seemed to happen in the browser for me but not another application.\n. Is this a build off of the latest master or the 0.4.1 build? I've fixed this and the fix is in master. If you are in fact testing off the latest master then it would seem that we have a bug.\n. What do you mean by parts custom to MacPass? As far as I know all of the code in KeePassHttp-ObjC can function independently of MacPass.\nAs for code style, I agree that things in MacPass should conform the the current coding style. Although I'd say that it is fine for KeePassHttp-ObjC to have a different coding style as it is an independent library.\n. I think that using cocoapods would be a change for the better.\n. Just rebased with your master branch since I noticed there were merge conflicts.\n. @mattmb I'll take a look into it only finding entries in top level groups. I guess I didn't notice that since my database only consists of top level groups. As for having new entries get created in root instead of presenting some sort of dialog, I've left that as a TODO in the code which hopefully I'll get to doing sometime. For now though you can just drag the entry to another group.\n. @mattmb It should be able to find entries in all groups now.\n. @jaimeagudo Testing would be great! Just use it as your normally would and if you find any issues I'd be glad to fix them.\n. I actually just rebased against master yesterday so it should have everything in 0.5.1.\n. I'm building using the 10.10 SDK, maybe that's the issue? Also are your submodules up to date?\n. I took a look at this issue and it appears to be an issue with the version of KeePassKit that we have checked out. The issue in KeePassKit got fixed in https://github.com/mstarke/KeePassKit/commit/ab34319973f38d84f26e5e2fdbfb4bd314fa0779, but because of the API changes made in https://github.com/mstarke/KeePassKit/commit/25b5fd840b526846f442ffa1b1ca0caa5d933e02 I can't update the KeePassKit dependency to the latest verison. The problem with https://github.com/mstarke/KeePassKit/commit/25b5fd840b526846f442ffa1b1ca0caa5d933e02 was that it removed public support for adding/moving an entry to a group at a specified index which is required to support reordering entries. @mstarke is there another way to reorder the entries or should that API be made public again?\n. @mstarke When building MacPass with the master branch of KeePassKit the issues that I'm seeing are MPOutlineDataSource.m#L163 and MPOutlineDataSource.m#L168 which both require the atIndex parameter.\nChecking right now, it looks like the index parameter of NSOutlineViewDataSource returns -1 for any drop that I do, so perhaps - (void)moveToGroup:(KPKGroup *)group would suffice there.\n. @mstarke I'm running 10.10.2 and autotype invoked via hotkey seems to be working well for me. The only thing that immediately comes to mind with this problem is https://github.com/mstarke/MacPass/commit/8e689c26f87fcd790f2b738635b2ecda2726a523 where the application wasn't given enough time to register the TAB key.\n@kitzler-walli do you know if this only occurs in a certain application or does it fail for every application?\n. I'm using Ctrl+Alt+M which I believe is the default.\n. I wasn't having that happen and a lot of my testing was with the entry selection window. Perhaps the delay I added between the key down and key up presses resolved that issue.\n. ",
    "TARehman": "I was able to build and run the 0.4.1 fork that @jamesrhurst made and it is working on my MacBook with chromeIPass. Only minor annoyance was not being able to name the specific interface to my Mac version of Chrome.\nI saw that version 0.5 was just authored, but didn't include KeePassHTTP support yet. Would it be possible to merge in the changes made by the fork for the next release?\n. Well, you know, if you're going to be all reasonable and have the answer and everything... I guess I'll just go back into my corner and be quiet! ;)\nThanks for this app, by the way. New job had me go to a Mac (been a long-time Windows user) and one absolute requirement was KeePass or an equivalent. :) Let me know if there's any testing I can do - don't know Objective-C, but happy to contribute where I can.\n. ",
    "tonycpsu": "How does one build the plugin?  Simply running xcodebuild at the top level gives me:\n```\nMacPassHTTP/MacPassHTTP/MPHServerDelegate.h:10:9: fatal error: 'KeePassHTTPKit/KeePassHTTPKit.h' file not found\nimport \n    ^\n\n1 error generated.\n```\nand I don't see KeePassHTTPKit anywhere in the source for the plugin or MacPass\n. ",
    "chrisgross": "I can't get MacPassHTTP to appear in the plugins list. I've built the plugin, and it exists in ~/Library/Application Support/MacPass, but MacPass will not see it. This is true of both the packaged version of MacPass, as well as built from source.\n. I did. I see the following in the console: \"1/14/16 12:59:48.794 PM MacPass[2285]: Preflight Error The bundle \u201cMacPassHTTP.mpplugin\u201d couldn\u2019t be loaded because its executable couldn\u2019t be located. The bundle\u2019s executable couldn\u2019t be located.\n\" \nThere doesn't appear to be anything in  ~/Library/Application Support/MacPass/MacPassHTTP.mpplugin/Contents/MacOS. I wonder if that's why\n. Ah, it looks like I didn't run xcodebuild from the MacPassHTTP directory. I guess that's possibly implied by the line in the readme \"Compile and Install MacPassHTTP\", but perhaps make that more explicit. Thanks for your help!\n. ",
    "ritzmann": "Would be lovely to get a release so that us Non-Mac-developer guys don't have to struggle with XCode. ;)\n. ",
    "meaku": "Any progress on this topic?\n. Great to hear it's on your agenda :) \n. ",
    "jramapuram": "Any update on this? Can I edit a macpass from multiple machines simultaneously?\n. I would assume it be like a mutex. I.e. block until operation completes. So the options are:\n- throw error message stating changes could not be saved yet & retain local changes in memory\n- spin loop using something like a condition_variable \nEither would be adequate. \n. ",
    "dariuszmaciejewski": "@mstarke I can't find this feature. Could you point it out?\n. ",
    "ghost": "I don't think this issue is still quite working. Here is a screenshot before closing MacPass:\n\nAnd this is a shot after quitting and reopening the MacPass.\n\nSo, it remembers the window size correctly, but not the column sizes, or the list sorting.\n. Would it be possible to make the list behave like the sidebar in Finder then?\nSo it would only showcase the groups and individual items, and then the database in title.\n. I've been using KeePass for quite a while and I'd say it's really universal secure note storage. It's not just limited to online world items. I just tried to make a \"mac version\" of the official KeePass icon.\nI appreciate the feedback though. Everyone with Ps can create variations from the source files, or you can suggest me something and I can make a version.\nEDIT: Looking at the official description of KeePass, I guess it's more geared towards the online world.\n. I've been searching for an alternative way to display 'encryption', 'locked' or 'secure', but I think the padlock has represented those since forever. Even though the padlock is a physical object, its use in an icon is in my opinion, a perfect metaphor for virtual security as well.\n. Thank you :)\n. I went ahead changed the password and then it was not working. (I was sure of my new password though). Fortunately I was backing up using Dropbox and the the database file was versioned.\n. Would it be possible to use neither a password nor a keyfile?\nWhich would allow me to have multiple databases on encrypted drives. Since those are password protected themselves, it would be a real time saver, when switching databases often.. Wow, I was just going to report the same \"bug\".\nThere must be some special character maybe in the kdbx that is causing this (maybe it can not be read).\nPerhaps it would be a good idea to put all the Auto-Type entries inside a separate database somewhere. This since the Auto-Type entries will never be 100% compatible to the Windows KP2 anyway.\nI was thinking something in line of an ID or key within that little database like:   kdbx-name_UID-of-Entry\nKind regards, Mathos.\n. Hi,\nI have a test DB, just with a password.\nPassword is:   ri4visje\nThis file opens perfectly in MacPass (built from source/git).\nOnce I will open it in KeePass2 on Windows or Android KeePass2Android for instance, it fails.\nIf I remove the AutoType window assignment from with MacPass, and save it, I can perfectly open it in both Windows and Android.\nkind regards, Tom.\n\nOn 21 Dec 2015, at 12:09, Michael Starke notifications@github.com wrote:\nThe keystroke sequence gets escaped and any non Xml valid characters get stripped. There where no changes to this behavior in the recent past that I can think of would break this. It would be helpful to know the actual sequence or maybe create a test database?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/399#issuecomment-166272773.\n. Thanks Michael, \n\nWow that was fast !\nSilly indeed, if you can not find something, you could assume it is simply not there :)\nI will \n\nOn 24 Dec 2015, at 15:45, Michael Starke notifications@github.com wrote:\nClosed #399 https://github.com/mstarke/MacPass/issues/399 via ccb43c8 https://github.com/mstarke/MacPass/commit/ccb43c82b55dcdccc7326c33309495c8dc5bf73b.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/399#event-500196778.\n. The TAN feature would be an absolute killer! . Maybe the API could implement a simple function call which causes the plugin to check its own version. Plugins residing in a repository could check themselves or signal to MacPass.... \n",
    "vonbarnekowa": "Feature isn't completely working. I think the app is only remembering the last database but not the key file and if you ticked the password checkbox or not.. ",
    "daenney": "I like it though perhaps another visualisation for a padlock could be found or a different object all together, more tied to the online world.\n. Perhaps online was a bad word choice, I meant something more along the lines of virtual vs. physical. A padlock represents a physical security barrier :smile:.\n. ",
    "GhostLyrics": "May I suggest copying on double-click?\n. ",
    "BennoKieselstein": "I did not succed in importing an XML file that was exported from MacPass. Are there any conditions that apply? Would you mind to describe any use cases that were tested?\n. ",
    "nremond": "Was wondering why the \"import\" didn't add anything ... got it now. \n. ",
    "timbru31": "I stumbled across the same bug, maybe the button should be disabled until it's working :smiley: \n. Seems like the search is still affected.\nI've had a duplicate entry (searched for the URL in MacPass), deleted one. The Group was set to Trash. So far so good. But when I deleted the trashed item again it was still visible.\nAfter re-doing the search it was not listed anymore.\n. Closing this for now, since I found some more strings.\nGoing to recreate this PR.\n. @mstarke ASAP was 22 days ago ;)\nAny fix in sight? :)\n. Thanks, my bad :)\n. ",
    "txdm": "Hello mstarke, I am currently writing a script to help people export their existing keychain data into a format that can be imported into MacPass. Do you plan to implement csv import?\n. ",
    "robsalasco": "+1 for the csv import\n. ",
    "hutch31": "+1 more for csv import\nI was deep into a script to convert pwsafe data into KeePass, was wondering why XML import fails out without creating entries.   . ",
    "kennymc-c": "Is there currently any macOS App for importing XMLs or LastPass CSVs into KeePass 2 Databases? After i noticed that the import function in MacPass is disabled, i tried KeyPassX, KeyPassXC and KeeWeb but they also lack of this feature on macOS.. I tried it but it only works for specific XMLs. My XML file is just converted from a LastPass CSV and KeeWeb apparently refuses such XMLs to import.. With my LastPass CSV I get the following error: \n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/base64.rb:80:in urlsafe_encode64': wrong number of arguments (2 for 1) (ArgumentError)\n    from csv2keepassxml/csv2keepassxml:23:inbase64_uuid'\n    from csv2keepassxml/csv2keepassxml:153:in block in <main>'\n    from csv2keepassxml/csv2keepassxml:144:inopen'\n    from csv2keepassxml/csv2keepassxml:144:in `'. After exporting the converted xml to a kdbx file with KeePass MacPass and KeePassXC shows all entries as empty and i also get the expired password message. There are also 4 categories (Email, Internet....) that apparently were created automatically by your script. I think this should be disabled by default.. Ok, now the password error and the additional categories are gone. The empty entries apparently were a problem with the column order. So i ran it with -U 1 -u 2 -p 3 -n 4 -t 5 -g 6 for LastPass's url,username,password,extra,name,grouping,fav CSV (theres no fav option in KeePass right?). But now my notes are stored in the password column and all passwords seem to be missing. I think Line 85 should be options[:notes] = o  ;)\nAnother thing i noticed: When there are entries with a empty group column, the script puts them in a unnamed group instead of the root directory.. Ok, XML Import works for me as well with the latest version installed with Homebrew Cask. . Would love to see this feature as well. Currently i mounted a WebDav folder to my system and open the kdbx file from there. But every time you save something MacPass prompting me to reload the newer or use the previous version of the database because it mistakenly thinks a different program changed it. But actually both options retain the newer version. . ",
    "lifepillar": "@kennymc-c KeeWeb currently appears to have an XML import function.. I have written a Ruby script that converts from CSV to KeePass 2 XML. It uses specific CSV fields, but it can easily be adapted (if I have time, I'll make it more generic): https://github.com/lifepillar/CSVKeychain/blob/master/csv2keepassxml. It is basically untested, but it should work.\nWhen I import an XML file created with my script into KeeWeb, I get no errors, although KeeWeb displays only one item. However, if immediately after importing I export into a kdbx file, then I can open that kdbx file in MacPass and I see all the items.\n. Here you go: https://github.com/lifepillar/csv2keepassxml.\n@kennymc-c I would be grateful if you could try it and report any feedback.. Please try the current master. I was using a newer version of Ruby and I didn't notice that incompatibility. Now it's fixed.. Btw, after converting into kdbx, MacPass shows all the items, but it keeps complaining about expired passwords. KeePassX, KeePassXC and KeeWeb show only one item. There is probably something else that must be added to the generated XML, but I cannot find any documentation of the format. Any idea?. Thanks for the quick feedback, I'll try to fix those bugs.. Ok, I think I've nailed it! Please update to the current master and let me know.. Glad to hear that it (nearly) works for you.\n\nI think Line 85 should be options[:notes] = o\n\nGood catch. I've fixed it.\n\nAnother thing i noticed: When there are entries with a empty group column, the script puts them in a unnamed group instead of the root dictionary.\n\nCould you open an issue at my repo and continue the discussion there? I'd like to know more about this.. I have tried the current master, but importing an XML file into a new document has no visible effect. Maybe, you mean the develop branch?. Never mind, the version installed by Homebrew Cask (0.6.2-alpha) imports XML just fine. Should this issue be closed then?\nBtw, thanks for super-wonderful and very much needed MacPass!. I have written an AppleScript script that exports all password items and secure notes from an Apple's keychain into a plain CSV file. By itself it doesn't solve this issue, but in case you find it helpful it is here: https://github.com/lifepillar/CSVKeychain.. I have just built the current master from source. Global autotype appears to work as expected. A couple of remarks:\n\nchecking Enable global Autotype in the preferences does not immediately enable global autotype: I had to quit and re-open MacPass to have it working;\nmatching (in browsers) uses only the title of the web page (as it appears in the <title> tag), even if other options are checked in MacPass's preferences (I think this is mentioned somewhere else in this thread). For other apps, it uses the app's name.\n\nI have tested it with Safari, Firefox, and the App Store app.. >I just checked for you first observation and am unable to see this\nYou are right, I cannot reproduce it either.\n\nMacPass only sees window titles, nothing more. Those setting refer to the field of an entry.\n\nThanks for clarifying that. In fact, I had got it wrong.. I wonder whether this is a Cocoa problem. There are other applications in which scrolling performance has dropped significantly since a few macOS releases ago (the first time I noticed such degradation was in Script Editor).. KeePassXC has a form of merging, which you might take inspiration from. I am not sure I understand your example flow, but I have tried the following:\n\nEdit Entry A in KeePassXC;\nDelete Entry A in MacPass and save;\nKeePassXC notices that the file has changes and asks if I want to merge those changes.\nIf I say ok, edited Entry A remains as such.\n\nIf Entry A were not edited, then it would be deleted by KeePassXC.\n. Here for the details: https://github.com/keepassxreboot/keepassxc/pull/93.. >If the user issues a save the file is written regardless of state. You can compare this behaviour e.g. to TextEdit and it works the same way.\nTrue. But is it typical behaviour, or one recommended by Apple? Anyway, I haven't checked how TextEdit writes such a document, but MacPass writes a different file every time even if no change has been made (I mean, not only its attributes, such as the modified timestamp, are updated, but also its content, although not in an apparent way). I find that a bit counterintuitive and confusing, especially for an app that deals with privacy and security.\n\nThe second thing is lock. This was different in previous releases of MacPass and resulted in data loss for a lot of users.\n\nI am not asking to avoid saving a document altogether when locking, but to avoid it when the document has not been modified at all since it was opened or last saved. I do not see how that could result in data loss: you simply need to close the document's view and wipe memory. It would also make locking much faster (now, there's a slight delay because the document is always saved).\nBtw, there is something wrong in the way MacPass (0.6.2) displays a document status in the top-left close button. If I open a document and add a new entry, the new entry immediately appears in the main table. The window's close button, however, does not reflect that. If I start typing inside the title field, the close button changes to a modified state, but as soon as I press tab to move to the next field, it switches back to unmodified state. Despite such changes in the UI, the document is never written to disk.\nEdit: fixed typo. > MacPass writes a different file every time even if no change has been made (I mean, not only its attributes, such as the modified timestamp, are updated, but also its content, although not in an apparent way)\n~Sorry, forget about that: it's not true.~\nTo verify my claim, duplicate your database:\nsh\n$ cp mydb.kdbx mydb.kdbx.orig\nOpen mydb.kdbx in MacPass, and press Cmd-S to save it. Then, diff it with the original:\nsh\n$ diff mydb.kdbx.orig mydb.kdbx\nBinary files mydb.kdbx.orig and mydb.kdbx differ\nThe files have the same size, though.. You may try System Preferences > Keyboard > Shortcuts > App Shortcuts, and define your keyboard shortcuts there.. Btw, using MacPass 0.6.2 (12420).. I've gone to File > Database Settings\u2026 > Security tab and noticed that \u201cKey encryption rounds\u201d was set to 0. After clicking on Benchmark and saving the document again, I was able to open it in KeeWeb. KeePassX and KeePassXC still refuse to open it, though.. As a workaround, I have modified the file in KeeWeb and saved it. After that, I was able to open it with all the apps.. I do have some XML export. They are pretty big. In which section(s) should I look for \u201cduplicate custom keys\u201d?. Ok, I'll take a look. In the meantime, I've spent some time cleaning up my password file, and I was not able to reproduce the problem.. I have not been able to reproduce the duplication issue any longer (good!), so I can't help further with that. But I've got again a no key encryption rounds in header error in KeeWeb with a recently created file. Btw, this time the file worked fine in KeePassXC. The fix consisted in setting \u201cKey encryption rounds\u201d, as I had explained above. So, it seems that originally I had two separate issues.\nRegarding the problem I have just described, is there a reason why the default for Key encryption rounds in MacPass should be zero? Or is it even a good idea? See also https://github.com/keeweb/keeweb/issues/502.\nI am still on MacPass 0.6.2, so please forget this if key encryption rounds are set to a higher default in the current version.. > My only guess are entries with duplicate attributes. Take a look at the list of\n\nnodes under each entry node. If there are duplicate keys you found the error.\n\nI had this error again, so I was able to investigate it further. The problem was a KeePassHttp entry containing duplicate AES Key values. Something like this (some values are obfuscated):\n<Entry>\n        <UUID>XXXXXXXXXXXXXXXXXXXXXX==</UUID>\n        <IconID>0</IconID>\n        <ForegroundColor/>\n        <BackgroundColor/>\n        <OverrideURL/>\n        <Tags/>\n        <Times>\n          <LastModificationTime>2017-09-20T12:59:53Z</LastModificationTime>\n          <CreationTime>2017-04-03T20:08:04Z</CreationTime>\n          <LastAccessTime>2017-06-26T20:02:40Z</LastAccessTime>\n          <ExpiryTime>4001-01-01T00:00:00Z</ExpiryTime>\n          <Expires>False</Expires>\n          <UsageCount>0</UsageCount>\n          <LocationChanged>2017-10-18T08:30:20Z</LocationChanged>\n        </Times>\n        <String>\n          <Key>Title</Key>\n          <Value>KeePassHttp Settings</Value>\n        </String>\n        <String>\n          <Key>UserName</Key>\n          <Value/>\n        </String>\n        <String>\n          <Key>Password</Key>\n          <Value ProtectInMemory=\"True\"/>\n        </String>\n        <String>\n          <Key>URL</Key>\n          <Value/>\n        </String>\n        <String>\n          <Key>Notes</Key>\n          <Value/>\n        </String>\n        <String>\n          <Key>AES Key: 26A391DD-XXXX-YYYY-WWWW-XXXXXXXXXXXX</Key>\n          <Value>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=</Value>\n        </String>\n        <String>\n          <Key>AES Key: 26A391DD-XXXX-YYYY-WWWW-XXXXXXXXXXXX</Key>\n          <Value>xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx=</Value>\n        </String>\n        [\u2026]\nSince I have switched to autotype, I have not used KeePassHTTP any longer. So, after deleting this entry, the issue has disappeared.\nThis does not look like a MacPass bug then, but you may consider adding a check for duplicate entries. . I had a similar problem in the past (I didn't realize that I could scroll in the inspector tab). Maybe, you could make it a little more obvious when some of the fields are hidden? The simplest thing might be to use a different background for the upper part (tabs's names) and the bottom part (Notes box).. ",
    "kud": "I've got the same problem.\nWhen you choose not to save key files, it could be great that this input doesn't need to be clicked twice, indeed.\n\n. Great, thank you. :). You, thank you for your great app!. The reason is that it's easier to understand and learn by yourself.\nYeah it's also easier for crackers but having like 3 or 4 or even 5 words is tough to break.. That's what I thought yeah. :D. Amazing. defaults way is the best way in my opinion to add/modify settings via a script instead of backing up a file.\nThank you for your clean explanation, it helped me a lot. :)\nHave a great Christmas @mstarke \ud83c\udf84. ",
    "williamgibb": "click 'Generate'.  Change the number of characters in the text box (in my case, I choose 20.  Did not use the slider).  Click the circle button to generate a new password. The generated password does not appear to change in length from the default 12 characters.  The 'use password' button no longer responds to input.\nThis works fine if I do not change the generator settings from the default values.\nI'm using a copy of the .app that I built from commit 45cb4a2652fef78ee674b13841a070d39daa8ca6 using XCode on Mac OS X 10.8.4.\n. ",
    "nwoolls": "+1\n. Seems like this requires using the arrow keys too, at least when going from the Search field to Entries. You have to use the \u2318\u2325E key combo followed by down-arrow.\n. +1 - to me it seems like a lot of key-presses involved in unlocking, finding a password, highlighting the password, and copying.\n- Type password \n- \u2318F  \n- \u2318 \u2325E\n- \n- \u2318 \u2325C\n. ",
    "vassilevsky": "True. I have to bring up the context menu whenever I need to copy something.\n. As a fresh tranny from Linux to OS X, I was very happy to find a native KeePass shell. And I have the following to say about icons:\nThey do not matter.\nI haven't used different icons in KeePassX and won't use them in the future. It is a useless feature of KeePass :) I suggest that you should drop them from the interface altogether.\n. I keep all entries sorted alphabetically. I always start entry names according to the website / service. So when I have multiple accounts at the same service, I do one of the following:\n- append different words to entry names\n- look at the usernames (they are not hidden and they are usually different)\nHope this helps :)\n. ",
    "kashnoorani": "working pretty good now - close it?\n. bravo - that was quick! :)\n. works perfect - thanks for the quick fix.\n. I don't think that quite works - the system override requires that a menu entry exist. In the case of MacApp, there is no \"Copy Password\" in the Edit menu or anywhere that I could find.\n. I have tried it actually without success. Could you screenshot your setting in App Shortcuts?\n. I use \"Host in Title\u201d - same effect and worked well with Keepass on Windows.\nI prefer the more general approach to Autotype though I wish there was some sort of ETA :) I can help with the dev. Do you have some sort of general approach outlined?\nK\nFrom:\u00a0Frank Enderle notifications@github.com\nReply:\u00a0mstarke/MacPass reply@reply.github.com\nDate:\u00a0March 25, 2014 at 9:52:05 AM\nTo:\u00a0mstarke/MacPass macpass@noreply.github.com\nSubject:\u00a0 Re: [MacPass] Implement support for KeePassHTTP (#172)  \nActually there is a plugin for Chrome and WIndow Title - I use that on Windows for Autotype in Keepass. It's called Domain In Title.\n\u2014\nReply to this email directly or view it on GitHub.\n. @mstarke sounds great\n. ",
    "lotz": "No problem, thanks again.\n. ",
    "njt1982": "Ah that would explain it - thank you for the swift response!\nPS: LOVING this app! So much cleaner than the other attempts at KeePass for OSX.\n. ",
    "pheraph": "I tried keepasshttps and it has too many downsides for me. My main problem is that it doesn't match all saved accounts properly for specific domains. Besides that it requires KeePass-Mono, which is really slow and hurts my eyes. I hope the autotype thing leads some day to a nice MacPass-Browser-integration.\n. ",
    "thousandsofthem": "Voting for global auto type as well. Super-useful feature. Thanks again for such great software :+1: \n. Thanks a bunch!\n. same behavior\n. Do not like the idea. It compromises security - anyone with tools could hack in\n. They can't - if database is locked down. Even with physical access. That's the idea. Well, in some situations PIN could make sense. (Not for me though).\n. ",
    "d1v9d": "Thank you for the App. it's really cool... You have another vote for the global auto type... \n. ",
    "gstammw": "I second this request and would like to add the wish for support for KeeFox which uses keepasshttp in order to connect to keepass. Please add it to macpass.\nHow can one donate to this project? What about paypal donations?\n. I really second this request as it would make it possible to use KeeFox for Firefox on OSX :-)\n. Till, you are absolutely right.\nI guess this is why 1Password is so popular on OSX: it integrates seamlessly into Firefox, Chrome and Safari.\nIn the windows-world there are various browser plugins available for example ChromePass or KeeFox for Firefox that just integrate well and work great.\nKeeFox is available for OSX on addons.mozilla.org in the beta-channel and it lurks for a plugin to connect to MacPass. I hope that MacPass will evolve this way.\nI hope that I can donate a few bucks to the project in order to motivate the team ;-)\n. ",
    "mmichaa": "Hi everybody! I just want you to know, that I'm currently working on a Safari-Extension to work with KeePassHTTP: mmichaa/passafari.safariextension. There are already some builds/releases and today I released the first beta. It's still under development and the README needs at least a usage description and some screenshots. It's my first Safari Extension, maybe it could be done better.\n. @geokal You could take a look at https://github.com/mmichaa/passafari.safariextension/issues. Have a look also on the closed issues. If you still need help, feel free to open an issue there.\n. ",
    "michaelfresco": "I hope someone is still thinking about this feature. It'd be really nice if it could integrate with Chrome/Chromium and maybe Safari.\n. Ahh! I finally managed to figure out it works. 1) download macpass 0.62,\nthen 2) install the latest plugin from GitHub.\nNote: don't use Brew.\nOn Thu, 9 Jun 2016 at 11:50 Tom Kay notifications@github.com wrote:\n\n@mackdata https://github.com/mackdata ChromeIPass extension works for\nchrome\nhttps://chrome.google.com/webstore/detail/chromeipass/ompiailgknfdndiefoaoiligalphfdae?hl=en\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/77#issuecomment-224849425, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe/AOXhMPppWTsqlhfCik4qmC7Dv_Hfy1Oiks5qJ-HegaJpZM4A5tSP\n.\n. I'm running Version 0.7.4 (20181229091240-continuous), and this issues is still there. You cannot change the length of the password with the keyboard. It only takes input from the slider.\n\nCan we reopen this issue?. @mstarke actually, you are right it's working. I always think it's broken because it does not immediately update when you start typing. Say you need a password with a length of 20, ideally, (in my opinion), it should read the inputs of \"2  0\". So first give you password of length 2, then 20, while updating all the way. \nAt the moment, it only updates when you press <enter>.. I just want to confirm that on version 0.7.4 (downloaded in jan 2019) MacPass opens, but the focus is not on the password.. ",
    "TomK": "@mackdata ChromeIPass extension works for chrome https://chrome.google.com/webstore/detail/chromeipass/ompiailgknfdndiefoaoiligalphfdae?hl=en\n. Hey, @mstarke thanks for the good work on MacPass!\nI currently use the keepasshttp branch by @jameshurst and thought I'd mention here (since github isses are not enabled on the fork) i've just noticed the about box still references CocoaHTTPServer which i believe you swapped out for something else in your fork.\nThanks again!\n. ",
    "geokal": "Hi nice App by the way but i can't figure out how to set it up.I did install the MacPasshttp plugin and the right port number as well as the plug in for safari (passafari.safariextension) but does not work like Chromepass in chrome!!any help on how to use it?does it offer auto competition?\n. ",
    "lumpofcole": "Awesome!  I love that you are doing this...keepass through mono was so\nbuggy for me, and I use multiple OSs.  I simply downloaded the current\nrelease, as I couldn't clone the repository for some reason, so I'll wait\nuntil the next release to enjoy these features.\nOn Thu, Aug 15, 2013 at 4:28 PM, Michael Starke notifications@github.comwrote:\n\nCurrent master branch contains customizable columns. Will add modified and\ncreated columns as well. Though about that today too :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mstarke/MacPass/issues/79#issuecomment-22735522\n.\n. \n",
    "fenderle": "I second that - extremely important feature. Would code it myself if I had any clue of Objective C and the wohle OS-X thing.\n. isn't that already the case?\n. It only remembers one database, not all opened..\n. Thanks - this fixes my problem.\n. Actually there is a plugin for Chrome and Window Title - I use that on Windows for Autotype in Keepass. It's called Domain In Title.\n. MacPass is going to be great - I also think that AutoType is a much more important feature than KeePassHTTP\n. ",
    "dmsnell": "I'm new to Objective C, but I'd be willing to help out if you could give me some guidance on your code base.\n. ",
    "tipyn": "Thirded - this would make MacPass pretty well rounded. I'm currently a Mac user out of three people - both of them use Linux and Windows and KeePass works fine between them but I've come along with my Mac and put a bit of a spanner in the works. Any idea how long it'll be until db synchronisation will be a feature? \n. ",
    "petep": "+1 . This feature is also becoming a showstopper for me in an otherwise excellent product.\n. ",
    "h-svab": "+1\n. ",
    "tecgen": "+1 :)\n. ",
    "ricard33": ":+1: \n. ",
    "oscarfroberg": "I'll throw $20 in there for syncing. :+1: \n. Is Macpass supposed to find entries from all open databases (using autotype)? Because for me it only picks from the active one and I have to manually switch to the db window where the entry is located before autotype works.\n. I usually work with three databases so that'd be great indeed. :)\n. Yeah the global search UI sounds a bit tricky. Keepass 2 has open databases in tabs. Personally I don't need searching through all of them, but rather have Auto-Type search from all open ones. Which might practically be the same thing, except that theres no UI needed for that.\n. This has been implemented recently and works well. A minor complaint is that there's a bug where when there are multiple options and you select one, Macpass gets focus. Auto-typing works normally but Macpass is left in the foreground, on top of the web browser. When there's only one hit, Macpass is left in the background.\nI guess this is because of the selection dialog that pops up to the foreground when there are multiple options. If possible, it would be nice to \"push it to the background\" after a selection has been made.\n. ",
    "bhawker": "+1, this would be a killer feature.\n. ",
    "csjones": ":+1: \n. ",
    "holle": "+1\n. ",
    "costerwi": "+1, this would simplify my life\n. ",
    "lgraf": "+1\n. ",
    "realdubb": "\ud83d\udc4d . ",
    "woyczek": "The Keepass XML model includes a timestamp for last modification.\nIt may be lossy, but may be used to compare two entries from two files.\nI did such a thing, to re-synchronize databases, with simple shell and XML export/import.\nIt may be used with warnings, but could be adapted to the live keepass data model.. +1 \ud83d\udc4d\n(no, wasn't it this thumb :) ?). Such a plugin exists in KP for windows. Is it possible to reuse the code, or are the plugin framework totally differents ?. \nWhere is stored the localization of the error messages at login / keepass unlock ?. ",
    "srameko": "+1, because if you want to sync two KDBX there is no support. XML import just replace current database. Thx.\n. ",
    "WebWeave": "+1\nIt's really a miss that MacPass doens't have this.. ",
    "mariusmuntean": "I'm also missing this feature. Just recently I ran the portable Windows version of KeePass with Mono to sync multiple databases. It wasn't nice.. @mstarke I'm really happy for this change.\nCan we also have a view with the differences? Even if merging succeeded. Otherwise I don't know if I want the changes or not.\nKeep up the good work.. ",
    "ElizarovEugene": "Sorry for #636\nThe same I think this functionality is very necessary. ",
    "andreyantipov": "I see. Really, sounds like to hard to implement it. Yes It's too would be very helpful and useful feature even if that would be need do manually. I'm imagine that it can be implemented like a daemon which would work like a interceptor in a middle \u2014 to catch all requests between Application (which send request to write or read) and Keychain and then looking it in MacPass for save or write and sync keychain on demand with wipe all passwords data from keychain and then rewrite as a whole db without making changing commits. But i really don't know how work os x in that level so, it's just a implausible idea.\n. ",
    "heebj": "YubiKey OTP Support would be great!\nThanks for your fantastic work on MacPass! I was looking for a long time for a usefull KeePass client on Mac and finally I've found MacPass :-)\n. ",
    "mjacquet": "I Discovered MacPass 2 weeks ago and I am relieved I did! Definitely the best way to use a keepass DB on a MAC! Thanks!\nOn topic: Using Yubikey OTP would be great, but I'd feel better with 2 Factor Authentication, like described in this article: http://www.kahusecurity.com/2014/securing-keepass-with-a-second-factor/\nthat uses OtpKeyProv and KeeChallenge... Anyway, that would be a great addition!\n. ",
    "wifiprintguy": "+1\n. another +1\n. ",
    "Scoubi": "I'd love to have this fonction too!\nYour app is great by the way!! :)\n. Hi, with the recent breach of LastPass support for a Yubikey OTP for Macpass is becoming even more important. \nCan you please consider adding this? \nThe pluggin is Open Source, your work is Open Source. If anyone have any Mac Coding skills, please help us! :)\n. ",
    "digitalkram": "+1 for OATH HOTP standard (RFC 4226)\n. Stupid question probably but: I did clone the current master. When I compile & run it the window associations in the \"auto type\" tab are still grayed out.  ( 0.5.1 2557)\nbtw,\nThat is just cosmetical but the overlay info when it tries to match an entry looks like the Text is just a placeholder. Does that mean the translation is not complete? Same for PERFORM_AUTOTYPE_FOR_ENTRY in the actions menu dropdown.\n. github \"sparkle-project/Sparkle\" ~> 1.13\nis showing the same problem for me:\n```\n Checking out Sparkle at \"1.13.0\"\n Fetching KeePassKit\n Checking out KeePassKit at \"1.0.3\"\n xcodebuild output can be found in /var/folders/_8/c9qbsklx4k3fxqmfjcz1s52m0000gn/T/carthage-xcodebuild.dH6Glj.log\n Building scheme \"HNHUi\" in HNHUi.xcodeproj\n Building scheme \"KeePassKit\" in KeePassKit.xcodeproj\n Building scheme \"Sparkle\" in Sparkle.xcodeproj\n* BUILD FAILED \nThe following build commands failed:\n    PhaseScriptExecution Run\\ Script:\\ Link\\ fr_CA\\ to\\ fr /Users/usernamehere/Library/Developer/Xcode/DerivedData/Sparkle-evazerxxnoxsqmfqcthfdoqhsfhb/Build/Intermediates/Sparkle.build/Release/Sparkle.build/Script-6195D4B40E40505A00D41A50.sh\n(1 failure)\nA shell task failed with exit code 65:\n BUILD FAILED \n```\n. very strange. yes, mac vs osx should be neutral according to the manual. \nEven odder is, the sparkle build is distributed as binary so there shouldn't be any building involved. Carthage favors pre build binaries if they are present.\nWell, the \"offending part\" (in my specific situation) is a shell script execution and is not directly related to any source compilation. \nWriting that I comes to my mind that this is maybe already part of the answer of what is wrong on my end. I have lots of custom built binaries in my users environment PATH variable (including the \"ln\" binary that is called for the symlink creation.... from the script which is what fails with non-zero return code. Also my bash is not Apple's default version so built-ins might be different, too. Maybe there is a side effect...\n. Ah, yes. that is it!\nPosting that confirmation here just in case s/o has the same or similar issue (ln -sfh is used in the failing script):\nusernamehere@hostnamehere [~]$ ln -sfh test test2\nln: die Option -- \u201eh\u201cist ung\u00fcltig\n\u201eln --help\u201c liefert weitere Informationen.\nthilo@rmbp [~]$ which ln\n/opt/local/libexec/gnubin//ln\nusernamehere@hostnamehere [~]$ /bin/ln -sfh test tes2\nusernamehere@hostnamehere [~]$ ll test*\n-rw-r--r-- 1 usernamehere staff 0 26. Dez 22:16 test\nusernamehere@hostnamehere [~]$ ll tes*\nlrwxr-xr-x 1 usernamehere staff 4 26. Dez 22:16 tes2 -> test\n-rw-r--r-- 1 usernamehere staff 0 26. Dez 22:16 test\nusernamehere@hostnamehere [~]$ rm -f tes2 test\nusernamehere@hostnamehere [~]$\n@mstarke Sorry for the fuss. My bad. My son was born a few days back. Probably I am bit too tired to think through things entirely before opening an issue. :)\n. @mstarke Great, thanks a lot! I did do a new build (working around the weirdness of #398 which seems to be specific to my setup) and can confirm that it works just fine now. :)\nThat helps a lot to make MacPass even more useful for my daily live? BTW, isn't there a donate button missing? ;) Or am I just blind...?\n. @mstarke hehe, okay.  I love using MacPass  \"as-is\" with no warranty at all and I am well aware that there is always the risk of bugs that might impact security aspects. However I think I somewhat understand your concerns (even though I do not mix a donation with a VIP support pass). :) I have no intention to sign-up with flattr so far. Well, so keep up the good work and when you feel the need for a beer crate or some bottles of ur favorite non-alcoholic beverage (better for code quality ;)) just let me know. :D \n. you can simply double click on the password entry in the (search result) list to have password put to clipboard AFAIK, same for username etc. \n. Thanks for the reply. This is what I currently do besides using shortcuts instead of context menu. \nHmm. An extension based on MacPassHTTP I assume? That would be the second one then...  That is why I tried Passafari as I assumed it would work with Passafari. Maybe it would make sense to include that into Passafari. However it might be easier (yet more time consuming) to create yet another Plugin for that specific use case for oneself \n. yeah, sounds a bit like overkill. :) btw, is autotype considering the URL field of entries meanwhile? (I only used Windows Associations, so windows titles so far. I think for keepass URL is considered for mathcing as well)\nIf URL is used for matching wouldn't it be possible to enumerate the Safari Tabs (or better just pick the foremost one) and match the URL (not title) of the tab (contains()) against the URLs of entries? \n. I understand all of the above. and I use global autotype based on window title for all kind of apps including browsers which is normally not an issue and works fine with different keepass tools across multiple platforms. Only the basic auth is a challenge because the title is either the default \"Favoriten\" or the title of the previous page. I am just thinking if I can make me stick to a \"new tab for basic auth sites\" rule and simple set \"Favoriten\" as a workaround for Window title. As I have just four of them the multiple entries found dialog is not overloaded and it is still faster then the semi-manual process.\nBut what I meant with my previous post was: Is it possible to change this behavior:\n[..]\nby using the front most apps window title and then looking for an entry that matches.\n[..]\nBut be aware that the input stays the same - the window title!\n[..]\nto (if possible):\nif (noMatchFound && fronMostWindow == Safari)\n{\n  Match against URL of active tab in safari //exception for Safari, URL instead of title\n}\nDue to \"on no match found\" condition it would not keep MacPass from showing default behavior when the title of Safari (which is equal to the title of the active tab) or any other window/app is matching and only consider URL instead when there is anyway no match via title (and it is Safari). If also this is not resulting in a match there is no match.\nFor sure I cannot really judge if the following can be realized:\n a) frontMostWin==Safari?\n b) getUrlofActiveTab\nFor sure I would understand if you would not want to introduce a exception for a specific app when you consider this \"unclean\" (no Sonderlocke/Extrawurst ;))\n. @mstarke do you need a hand setting up proper ssl for macpassapp.org? . So proper setup actually IS a problem but not on your end ;-)\nI am not entirely convinced that cloudfare in the middle would make it more secure..\nIf you are willing to sacrifice github'cdn capability for the custom domain over ssl you could still use nginx as a proxy, right?\nAnyways keep up the good work with macpass - I really appreciate all the effort you put into this! Thus I just chimed in because I saw a chance to maybe contribute a little (as a non-developer) as we had a discussion about donations some time back (#399).\n. No worries! I (discontinued) running a (semi-)professional hosting business. However I've some spare servers left that I use mainly for personal projects. If you want I can offer to set up a proxy (for free) for your macpass project. If you are interested just drop me a mail (see profile, pgp key available).. ",
    "pacebl": "This would be great functionality to have, though I understand the timing may be premature. The quality of your app is great, I forget it's pre-release. \n. ",
    "groetzner-net": "+1 for OATH HOTP standard (RFC 4226)\n. ",
    "rother": "+1 for OATH HOTP, without it I can't use KeePass (and thus MacPass) on OSX\n. ",
    "kingdonko": "+1\n. ",
    "hyperized": "+1\n. ",
    "NicolaivdSmagt": "+1\n. ",
    "darii": "+1\n. ",
    "tristan-k": "+1\n. I'm also struggling with compiling jamesrhurst's keepasshttp fork. I don't even know if I'm building the keepasshttp branch because I can only download the master. @rfilmyer Can you send me your build?\n. Thanks @rfilmyer. In the end I succeeded in building it.\n. ",
    "KFDCompiled": "I've cloned the repo to incorporate @kylemanna HMAC-SHA1 Challenge & Response pull request for keepassx. Updating KeePassKit is probably doable but I don't know the first thing about Cocoa UI. \n@mstarke Thanks for all your hard work!\n. @mstarke I agree that converting KeePassKit into a xcode framework is a robust solution. Based on Issue #350 and Apple's Guide, do you think the putative KeePassKit.framework should handle plug-in arch? \n. > Should we try to use your approach to flesh out a plugin interface?\n@mstarke yes, I think the existing codebase\u2014from KeeChallenge, @kylemanna's fork of keepassx, and yubico-c\u2014give enough to assemble a prototype plugin.\n. @mstarke moved the conversation to Issue #350 \n. @mstarke I've noticed that, when saving, macpass will strip auto-type target windows saved from keepass2\n. Transferring the conversation from issue #90 to here:\n\ni think there should be plugins both for MacPass as well as for KeePassKit, as there needs to be support on the data side but also on the GUI front end. That arises the problem of dependencies on plugins. e.g if we need additional inputs on the password screen that's a MacPass plugin but the KeePassKit has to handle the data provided by the additional inputs. Maybe I should just scrap the separation of KeePassKit and integrate it into MacPass but that removes the possibility for others to use the framework just to be able to parse stuff.\n\nSharing your sentiments, I think the question becomes one of priorities at this point of development. Which of the following two options is more important and/or desireable at this stage: first, sacrifice plugin functionality for the functionality of an Xcode KeePass framework (which is a massive contribution\u2014thank you again); or, second, sacrifice the Xcode framework to facilitate plugin functionality.\nI'm of the opinion that the second option, a plugin architecture, is more desireable.\n. This is something I'm interested in as well but as Michael explained, it\nwill require tweaking the core keepasskit... Not trivial\nOn Apr 25, 2017 1:54 AM, \"martinl\" notifications@github.com wrote:\n\nI propose porting of Keepass Multi Cert Keyprovider plugin to Macpass. The\nidea is to use smartcard (eq Yubikey PIV/OpenPGP) based client certificates\nas second factor for decrypting Keepass keyfile (hash). The prerequisite is\nhaving pluggable keyproviders support in Macpass.\nHere is more info about the current implementation:\nhttp://www.creative-webdesign.de/en/software/keepass-plugins/multi-cert-\nkeyprovider.html\nThe certificate keyprovider will also need Key Manager companion\napp/plugin to manage public certificates. Here is the overview of current\nimplementation:\nhttp://www.creative-webdesign.de/en/software/keymanagerrsa.html\nKeepass key provider development api documentation:\nhttp://keepass.info/help/v2_dev/plg_keyprov.html\nWhat do you think, is it doable?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/574, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMqqs0-UwkVGwaEjJYtzu5fUC9TF-5Vnks5rzabJgaJpZM4NHHtp\n.\n. @mstarke, you're such a stud!\n\nKeeAgent (https://github.com/dlech/KeeAgent) allows entries to be associated with external ssh keys. Based on https://github.com/dlech/KeeAgent/blob/master/KeeAgent/EntrySettings.cs , it seems like the plugin appends string data to the entry. When MacPass saves, whatever data KeeAgent appends to the entry is either lost or is altered such that KeeAgent doesn't recognize it.. ",
    "jeantil": "Now that the plugin architecture is initiated can someone outline what it would take to make a yubikey plugin for macpass ?\n. @mstarke I am willing to offer a yubikey if it helps speed up implementation :)\n. ",
    "Ardakilic": "+1\n. ",
    "amnk": "+1 for this feature. \n. ",
    "nimdajitam": "+1 for OATH HOTP standard (RFC 4226) support. It's simply a must have feature today.\nP. S.: I can't help with implementation but I can with localization. \n. ",
    "EugenMayer": "Also looking forward to this. Eventhough there is MacPassHTTP, the yuibkey support of keypass is the reason i consider migrating away from 1password ( beside *pass also supports basic auth, application auth and much more, due to autotype )\n. @mstarke any progress on this already? Thank you!. i do not think it is the same, the other requests a own implementation, i ask to rather port the plugin, similar as the web-plugin\n. ",
    "queesamor": "This conversation makes me wish that I had a OS X programmer in house, or even that I was one myself, as I'd be happy to donate some of our time to helping with this request. Unfortunately, all of our developers are .NET programmers or web devs, even though some are using Macs themselves. :( Once implemented, this certainly will make MacPass a viable option for our business, which requires MFA for secure databases like password managers.\nKeep up the good work :+1: \n. @mstarke, should we stop hoping?. ",
    "blooodorange": "+1\n. ",
    "kylemanna": "Btw, on a related topic, the keepassx project has been forked and integration of Yubikey support is progressing @ https://github.com/keepassxreboot/keepassxc/pull/127 for those interested.. ",
    "meiyopeng": "+1 for TOTP standard (RFC 6238) support. Lack of TOTP is the only obstacle preventing me from fully switching to MacPass.\nTOTP authentication is far more secure than the alternative state controlled telephone 2fa method. It's supported by many online services, such as Google, Facebook, Microsoft, Apple, GitHub, Dropbox, etc. And it's widely used by high-profile people to fight against hackers.\nWith MacPassHTTP and TOTP, MacPass will be definitely the best password manager.. ",
    "milkotodorov": "+1 for TOTP support. ",
    "seocam": "News? :). ",
    "arainho": "+1 for TOTP support. ",
    "the-storm": "+1 for TOTP support. ",
    "jonasdiemer": "I see, thanks for the info.\n2013/10/7 Michael Starke notifications@github.com\n\nAutotype is not available at the moment. It's a planned feature for 0.5 or\nlater.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mstarke/MacPass/issues/91#issuecomment-25841343\n.\n. \n",
    "christophfroehlich": "Sorry if the question is too dumb, but how do I use the autotype function, especially for websites? :)\nI'm using Chrome and MacPass 0.5.1, and no matter what title I give the entry, autotype doesn't work with the global shortcut!\nHow does MacPass search for the entries and how do I have to set up the entries?\n. Sorry, I didn't find the other Issue before. Now it works, actually I just didn't specify the windows title in the right way. Thanks for your reply!\n. +1\n. ",
    "kbadiyani-be": "I made this changes. I still see the problem. What is fix for you with the suggested change only or you had to make some additional changes...\n. ",
    "rlbisbe": "Check out on the \"levels\" view, you may need to set the MacPass XCode project also to \"Don't code sign\" (third column)\n\n. ",
    "tsimmons": "Not sure if this is a problem with MacPass or with KeePassKit.\n. I'm using a git clone of master, as of yesterday. I also cloned all the required packages, CocoaHTTPServer, DDHotKey, HNHUi, KeePassKit and KissXML.\nOn Oct 20, 2013, at 12:40 PM, Michael Starke notifications@github.com wrote:\n\nMh. I cannot reproduce this behavior on the master nor the 0.3.8 binary. Can you tell me on which version you're on? master (hash) or some old binary release. Old binaries aren't using the KeePassKit just the master. 0.4 will be the first release with KeePassKit instead of the old KeePassLib data layer.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. I also created a new password file, added two folders and three entries (one in the first folder, two in the next) and switched back and forth and the same thing happened.\nOn Oct 20, 2013, at 12:40 PM, Michael Starke notifications@github.com wrote:\n\nMh. I cannot reproduce this behavior on the master nor the 0.3.8 binary. Can you tell me on which version you're on? master (hash) or some old binary release. Old binaries aren't using the KeePassKit just the master. 0.4 will be the first release with KeePassKit instead of the old KeePassLib data layer.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. It's better but still broken. I have narrowed it down to having a file attached to an entry.\nHere are the steps to create the problem:\n1. Create a new kdbx in Macpass and save it.\n2. Open that kdbx in KeePass Windows and attach a file to an entry, and save it.\n3. Reopen this in Macpass and save it again.\nNow, KeePass Windows complains about an object in an invalid format when trying to reopen it.\nStrange thing is that Macpass can still open the kdbx file and save the attachment no problem.\n. This is great, when I open a kdbx, make a change and quit and tell Macpass to save the changes, it does and remains openable on KeePass Windows. Nice job.\nI think a new bug has been introduced, though, because when I try to save through the File -> Save, File -> Save As and CMD-S, it doesn't save the file, even though it behaves as though it did (at least the timestamps of the file are left unchanged.)\nShould I open a new bug?\n. Okay, I have it narrowed down after debugging. I suspect it is due to a bogus, legacy-encoded attachment in my kdbx. Here is the error logged in console:\n12/9/13 9:49:19.296 AM MacPass[74385]: *** Assertion failure in -[KPKXmlTreeWriter _xmlBinary:], /Users/tsimmons/Documents/macpass/KeePassKit/IO/KPKXmlTreeWriter.m:310\n12/9/13 9:49:19.299 AM MacPass[74385]: An uncaught exception was raised\n12/9/13 9:49:19.300 AM MacPass[74385]: Binary has to be in binaries array\nI'm continuing to debug it ... I'll keep you posted.\n. The problem (I believe) is the way KeePassKit handles history with attachments. I have an entry that has a history with attachments added and removed and the oldest one had an attachment that was throwing the exception. The item reads fine in KeePass Windows, however MacPass chokes on saving it.\n. Here's what it looks like in KeePass Windows (opened entry, hit the History tab, then opened the oldest entry displaying the attachment that MacPass is choking on.)\n\n. Perhaps KeePassKit doesn't parse binaries that come from historical entries?\n. Yeah, I can see that _prepareBinaries() on line 357 of KeePassKit/KPKXmlTreeWriter.m doesn't process binaries for historical entries. :-/ You want me to open a new issue for this?\n. Yeah, unfortunately (as I know you are familiar) sometimes it's hard to find time to devote to developing cool open source code. I'm seasoned in many languages (and have contributed to numerous OS projects) but I'm still rough-around-the-edges when it comes to objective-c.\nIf I can find some free time, I'll look into it.\nThanks for your work on this project! I like this way more than KeePassX.\n. Heh heh, I understand! ;-)\n. I'd like to include Groups, as well. +1\n. Well, here's what I'd like to see (and it brings MacPass in line with KeePass) ... if I have a group called \"WordPress\" with 10 entries and search for \"wordpress\" it should return all 10 entries that are within that group in addition to any entries that have \"wordpress\" in searchable fields.\nKeePass actually displays matching entries grouped ... so the results look a bit like this (imagine the search for \"wordpress\")\nGroup 1 entries\n- WordPress Entry 1 - username - password (returned because the entry has \"wordpress\" in a field)\nWordpress Group 2 entries (all of these are returned because the group name has \"wordpress\" in it)\n- Entry 3 - username - password\n- Entry 4 - username - password\n- Entry 5 - username - password\nDoes that make sense?\nNow, MacPass could do similar to KeePassX where the group name is simply the first column of every returned entry as well.\n. Actually, grouping doesn't matter at all to me, they could be sorted by group is one wanted to.\nThe only addition then would be to expand the search to include group, then right?\nOn Dec 11, 2013, at 11:09 AM, Michael Starke notifications@github.com wrote:\n\nMacPass displays the Group column to the left if you search already just like KeePassX does. The Grouping by Groups is something is a nice addition, but this would - to my current knowledge - involve going away from direct bindings to a more manual approach to data management to enable the grouping.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. Eek. I would not want searching within attachments; perhaps only the name of attachments if anything. (2 cents)\nOn Mar 11, 2014, at 6:15 PM, Michael Starke notifications@github.com wrote:\n\n@DominusExult You did mention search in Attachments - do you mean in the name of attachments or the actual content? Content would be a bigger deal\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. +1\n. https://github.com/mattt/Navajo might be promising ...\nOn Mar 24, 2014, at 10:13 AM, Dominik Reichardt notifications@github.com wrote:\n\nanother wish, if implement this, please do not use the bright colors (red to green) but rather a white to black gradient or something else that fits the style of MacPass better :)\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. How do you invoke it? I can't seem to be able to create a global shortcut key.\nOn Aug 5, 2014, at 5:42 PM, James Hurst notifications@github.com wrote:\n\nYep, I use autotype. The basic functionality it has is working well for me. I usually just use it for entering passwords into a browser in with the default autotype sequence.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. Awesome. Thanks!\nOn Aug 6, 2014, at 10:45 AM, Michael Starke notifications@github.com wrote:\n\nDefine: MPAutotypeDaemon.m Line 31\nGlobal Hotkey: MPAutotypeDaemon.m Line 170\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. Here's the reporting link:\nhttps://www.apple.com/legal/internet-services/itunes/appstorenotices/\nOn Oct 5, 2014, at 7:20 PM, d-a-n notifications@github.com wrote:\n\nApp is back https://itunes.apple.com/app/id921376706 Now you should contact Apple to remove the app for good.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nToby Simmons\nSimmons Consulting Web Design & Marketing\n501-399-3603 (Office) | 501-231-2045 (Cell) | 501-244-4416 (Fax)\ntoby@simmonsconsulting.com | http://www.simmonsconsulting.com\n. ",
    "jeichhorn": "In the last binary release (0.3.8-alpha) the passwords are not displayed in fixed width font (see screenshot).\n\n. ",
    "Schtee": "This should be fixed by #101 \n. Oh ok. I might fix up the rest.\n. Hehe ok. I'm really interested in the Http support. I've been looking for a nice Firefox plugin for KeePass on Mac and haven't found one. Is this something you'd like to expand support for?\n. OK great - I'll take a look.\n. ",
    "systembell": "Right -- that's how I'm using it currently. I'd like to remove that dependency, though. Thanks for all the work you're putting into MacPass; it's a great piece of software. :)\n. ",
    "philiplb": "I vote for that, too. Especially SFTP in my case! Currently using MacFusion for this case, but that's one more programm constantly running here. It would be genius, if MacPass would support that. :)\n. I just use the notes field for this. Is this an option?. ",
    "sonique6784": "I vote for this feature too, I saw KeePass2 is doing it : http://keepass.info/help/v2/ioconnect.html\nThank you for your efforts, MacPass is very good so far.\n. ",
    "lenucksi": "\ud83d\udc4d \n. \ud83d\udc4d \n. It seems that carthage actually can be installed and used with Travis. I've just tried this with a fork.\nAs for the private credentials: I guess nightly builds would be good enough as well...\n. +1\n. I was not able to find any differences aside of the advertisement for an iOS companion in the lower right corner and a different logo...\n. \ud83d\udc4d \n. ",
    "stefnats": "+1. ",
    "takhyon": "\ud83d\udc4d . ",
    "aurora": "\ud83d\udc4d . ",
    "tech-ozon-io": "+1 for webdav support !. ",
    "gokmen": "It should be optional, and it can lock down the db again after N failed attempts. It's similar to putting a screensaver, if they reach your computer physically they can do anything.\n. ",
    "andrewschleifer": "I use full screen mode on a tiny laptop screen almost constantly, so I've been switching between screens with MacPass maximized repeatedly (dozens of times) and never saw any problems. Popping into and out of full screen I haven't done as many, maybe 10-15, but no problems there, either.\nI'm on 10.9, which might be relevant. Do you get anything in Console.app?\nI've not seen toolbar validation in either full screen or normal mode. Assuming it's supposed to be there, I'll take a look at that, and open a separate issue with more details.\n. Aha, now that I know what to look for, I do see the validation take place.\nWhen it switches to full-screen mode the toolbar is detached from the document window and gets hooked up to a NSToolbarFullScreenWindow. My testing suggests that window doesn't have any window controller, so the validation in MPDocumentWindowController isn't happening.\nI'm working on a fix for that part.\n. That's a good point. I did think about that, but didn't really follow up on it, since I couldn't see anywhere that it made a difference. There was some logging in there that didn't get committed and [super validateUserInterfaceItem:anItem] was always returning YES.\nSo I don't think anything that's in there now depends on it. Future-proofing against that is obviously a good idea, though.\nApple's documentation claims the full responder chain looks like this --\n\nThe only parts in the responder chain above MPDocument are the application object, application delegate, and the document controller.\nThere's no local document controller class yet, so we could probably move the testing wholesale into a custom class there. That would make a bunch of the tests more complicated, though.\n. Actually, scratch that. The right answer came to me right after posting that --\nreturn valid && [super validateUserInterfaceItem:anItem];\nI'll add another commit to the pull request.\n. :thumbsup:\n. Ugh.\nI've been trying to figure out why they weren't behaving, and I just learned that context menus don't follow the normal responder chain --\nhttps://developer.apple.com/library/mac/documentation/cocoa/Conceptual/MenuList/Articles/EnablingMenuItems.html\n. ",
    "gabrielecirulli": "I second this motion! Would look much better in blue.\n. Sure! I can try helping with the icons. I noticed that they are in pdf format. Do you use any specific workflow? What do you make them with?\n. Nice! I'll give it a try when I get some time.\n. I also couldn't get this to work. I tried inserting the exact name, but the shortcut would not change.\n. Never mind, it turns out you have to restart. This is strange, because normal shortcuts would usually kick in straight away.\n. ",
    "noose": "@mstarke it should be ok. Can you add \u2318+\u2325+ N to add entity?\nOr shortcuts panel @settings ;-)\n. ",
    "monkeydri": "Yes sorry I've seen it just after I posted (I deleted the message). I successfully changed the keyboard shortcut with \u2318+N in System Preferences > Keyboard > Shortcuts with text \"Add Entry\".. ",
    "gurgeous": "Ah. I'm reading about autosave... Could this explain the sorting bug?\nhttp://simx.me/technonova/software_development/sort_descriptors_nstableview_bindings_a.html\nI'll continue to investigate. I don't know much about Mac OS development, unfortunately. Hopefully my iOS knowledge will help.\n. No worries - I appreciate the suggestions. I don't mind hearing good advice. :)\nHow does it look now?\n. Ha! Yes, I can envision the problem. I didn't test that case, clearly. I can also imagine solutions but I suppose they can wait until next time. This is a step in the right direction. Thanks Michael.\n. ",
    "JoannaOlsen": "I'd like to help with the icons @mstarke  ... I sent you an email.\n. I downloaded the \"Keepass Icons.ai\" file, however, it is still not clear to me, what is missing, so yes, please send a complete list and mark the missing ones.\nWhat do you want me to do ... simple grayscale icons or more detailed colored icons? ... maybe both? :)\n. @mstarke Ok ... I'll work on it ... :)\n. Here is a preview of what the icons look like at the moment in monochrome. I was not entirely sure of all of the icons ... what they were supposed to be ... so I'd like some feedback.\n200%\n\n100%\n\n. @DominusExult I am not offended ... after all I asked for it ;) ... and yes, some of the icons had already been made (I have now added the ones already made above in a gray version for comparison). I have altered some of them slightly including number 3, however, some might not think for the better, he he. \n  This is number 41 in Keepass and it is supposed to be vector graphic. If you have worked with vector graphic I'm sure you would recognize it or am I mistaken? I must admit I had a hard time getting what the original from Keepass was ... some red blob ... it was only because of the name I could see it.\n This is number 46 in Keepass and I made a black circle with a question mark. The circle in the extra icons contain the letter \"i\".\nOups ... I forgot to turn on the little extra box in number 50 before making the screen shot.\nYou can find a list of the icons here @mstarke added them some time ago when I offered to make the rest of the icons: https://github.com/mstarke/MacPass/tree/master/Assets/Native%20Icons\n100%\n\n200%\n\n. @mstarke and @DominusExult I just came back from a couple of days without internet access gasp, so I read your messages moments ago ... I will go into detail later today, but for now I am just too tired ;)\n. If the search field also searched the tags, that would be a start. Would that be hard to implement?\n. Cool ... and yes ... I quave at the thought of the criticism sure to come from @DominusExult :P\n. \u2022 66 Apparently this  is the universal symbol for currency ... don't know if that is any better ... or I could just make a whole bunch of money symbols  ... :)\n\u2022 47 Me too ... \n\u2022 25 Thanks @DominusExult  :D\n\u2022 46 Again ... I would like to know if we could add more than the 70 icons ... I'm guessing we can since @mstarke added some already not on the list (the ones in the 90') ... can we? Because that way I could just make a whole bunch of icon variations.\n. Well, as I recall, you told me, you would get back to me with comments on the latest update, however, I don't think you ever did @mstarke? ... and then I just had too many other things on my plate and right now I am crazy busy again, but I would also like to get it done ;)\n. Well ... it's not like I've pushed for it ... could've just said something myself ... :D\n. I made the PDF files, however, I'm unsure what to do now that you closed this? :)\n. You know, since the files aren't SECURED (I did not save them with password protection) you can open PDF files with Illustrator as easily as any .ai file ... fully editable as well ... no need for the .ai files ... ;)\n. Editing capabilities has nothing to do with being bloated ... it is just how PDF's are ... editable ... \n. You can open any PDF file in Illustrator regardless of how it was saved ... except if it was password protected ... then you need the password to edit it ... just like you can open it in Photoshop as well ... though then it will be converted to pixels ... \n. Well, it would not help you to get the Illustrator files, because I have removed the excess points, paths etc. so the paths should be single layer compund paths ready to use for what ever you choose, like cut out for T-shirt print or what ever ... though I think PDF puts a clipping path on as default ;)\nJust curious ... why do you want the icons saved as PDF in the first place ... I mean, why can't you use .ai files directly? ... how about .eps ... or .svg ... is it the programming language that can't handle other formats or something? ... O.o\n. ",
    "jez": "All recent OS X versions use monochrome icons, but what about OS X Yosemite? I personally haven't looked into the newer app designs themselves that much, but a set of simple, radiant icons similar to those used throughout iOS 7/8 and OS X Yosemite could look pretty nice.\n. That is a good question haha. I think the answer is that with any software, you always run the risk of \"irrecoverably\" losing data. However, there are certain precautions which can help mitigate them, like regular backups or syncing files with a cloud storage provider. \nThat being said, I have been using MacPass for a few months now and have had no problems with it. Granted, I only use basic store and retrieve features (not some of the more complicated or fancy ones), so take that as you will.\n. ",
    "jiyinyiyong": "My mistake. Yes it's shown in the menu bar. Thx. Closing.\nAnd really a nice app, I like it. :P\n. ",
    "walterheck": "This feature would be very important for us to have as well. Our usecase: we do consulting, and we have a keepass database per client (shared through dropbox with them). On a busy day when you're tending to multiple clients, and also need access to your personal database, switching all the time is really time-consuming. \nThis client is already great, and it would be even greater if it would support multiple db's open simultaneously. This feature is not in KeePassX 0.4.3, but it is in KeePassX 2.0.x, scheduled to come out sometime this century ;)\n. FYI I don't care if it's tabs, multiple windows or a larger treeview. Just in case that matters :)\n. I'd love this as well. One of the strengths of KeePassX was it's excellent keyboard navigation. I would also be happy if you'd either adopt the same shortcuts or allow us to set them ourselves (preferential)\n. This is a duplicate of #171 by the way.\n. ",
    "bl4ckmesa": "I would love this feature.\nThe UI part for me isn't as important as the search function being able to span across all open databases.  That would get me 90% there even if the UI isn't super-slick ;)\n. ",
    "perfusorius": "Just a quick tip for anyone who doesn't want to change global tab settings just to change MacPass behavior (like me):\nCompletely close MacPass, open the terminal and enter:\ndefaults write com.hicknhacksoftware.macpass AppleWindowTabbingMode always\nFrom now on in MacPass every file will be opened automatically in a new tab (unless it is already opened).. Just a quick tip for anyone who doesn't want to change global tab settings just to change MacPass behavior (like me):\nCompletely close MacPass, open the terminal and enter:\ndefaults write com.hicknhacksoftware.macpass AppleWindowTabbingMode always\nFrom now on in MacPass every file will be opened automatically in a new tab (unless it is already opened).. Just a quick tip for anyone who doesn't want to change global tab settings just to change MacPass behavior (like me):\nCompletely close MacPass, open the terminal and enter:\ndefaults write com.hicknhacksoftware.macpass AppleWindowTabbingMode always\nFrom now on in MacPass every file will be opened automatically in a new tab (unless it is already opened).. ",
    "derhansen": "+1 for including the Groups field in the search criteria\n. ",
    "tsandor": "do we have a planned release date for the 0.4 version? I'd love to try it\n. ",
    "marcjoha": "+1\n. ",
    "mikedemarais": "+1\n. ",
    "mems": "There is an extension for that in KeePass (but  definitely not compatible with MacPass)\n. Oh! I didn't know that we could create templates:\n1. Menu \"File\" > \"Database Settings\u2026\" > \"Advanced\" : Set \"Template Group\"\n2. Main window's \"Add Entry\" Button > \"Create Entry with Template %@\"\nBut as you said, it's not global templates\n. ",
    "cseng": "I'm afraid I don't know how to fix the pull request for KeePassKit. I'm guessing I need to switch to master branch on KeePassKit and then commit (it was saying \"detached from ...\" when I originally committed). How do I fix this pull request then?\nThe change there was really, really minor. It just checked the content hash with aesDecrypted hash and logged the result.\nSorry! I'm pretty new to github and contributing to open source in general!\n. I'm in agreement about using undo/redo. I didn't know about the KeePass behavior when it came to editing entries. I'll have to study it a bit more to better understand the options.\n. Thanks but don't feel obligated to take my changes if they're not good. :)\nI'm trying to improve my skills and learning about stuff like localization is great.\n. ",
    "vabue": "Not yet. But it seems that new relese coming soon. Check #128 \n. We all wait for release ^)\n. ",
    "dule": "Pretty sure it's not implemented: #14 \n. ",
    "ssalonen": "I have the option still grayed out in MacPass 0.4.1. Is there any other reason for the feature to be disabled? Using Mac OSX 10.9.5.\n. Update to this using Version 0.5.1 (2556): username references seem to copy-paste OK while passwords do not\n. ",
    "mariosangiorgio": "I'm running Version 0.5.1 (2556) and that option is still greyed out. Does it contain the feature or shall I update to a newer version?\n. Right now I'm on holiday, when I get home and I have some time to spend on implementing the new feature I'm going to do it and open a pull request\n. I think we can close. Getting the other approach work in an user friendly way could be complex. I think there is the risk of making the user interface confusing\n. That sounds like a good idea. Unfortunately I am not an ObjectiveC expert so all my coding in this language is not too idiomatic and I don't know many useful classes\n. How do you imagine this feature to work? I cannot see how it differs from simply clicking on a group and see al the items in it.\nIf you want to search and filter at the same time I could think of several possible implementation for this feature:\n- make search work only for the elements of the group you selected\n- make search accept multiple tokens and match them against group, title and username\n- add some special keywords in the search box, such that we can search for strings like \"github.com group:Code\".\nI think the latter could be the best way to implement optional filters\n. I second this. It would be a good idea\n. +1 I might give it a try and implement it\n. The feature is in the pull request I sent.\n@mstarke , is there any issue with it or are you going to accept and include it in the next release?\n. I can answer your side question. Characters probabilities are not affected, they're still equiprobable even if they're added with the custom field. If you look at the implementation of the method that combines all the character sources it merges them without keeping duplicates.\nhttps://github.com/mstarke/MacPass/blob/master/MacPass/NSString%2BMPPasswordCreation.m#L59-L76\n. This has been already implemented, have a look at the pull request #436. It has also been merged into master so the next version will surely contain it, I don't know when it's going to be released though.\n. ",
    "sknick": "Sorry... I looked around for the issue first but couldn't find it. Evidently I'm blind. 8-O\nThanks.\n. Here's a suggestion: Do beta releases. By marking a release clearly as a beta, people will understand that it's not totally validated yet. While the more savvy of us could download the latest and greatest source and build it ourselves, that does require some hassle some of us don't want / don't have time to mess with. If you provide a built beta, some of us will install it and provide feedback.\n. I guess you've already been marking releases as \"alpha\", so you have this notion already. I say build and release what you've got! :-)\n. I confirmed this behavior in the last alpha release (0.3.8) as well... I reverted back to that after I realized the build from master wasn't saving any changes I made to a database! :-\\ (I guess that's why I shouldn't use the bleeding edge for \"production\" stuff.)\n. In trying to reproduce this, I can't even save a new database (KDB or KDBX)--it keeps saying \"The document \"Untitled\" could not be saved as \"Test.kdbx\".\"\n. ```\nknick:MacPass knick$ git pull\nremote: Counting objects: 12, done.\nremote: Compressing objects: 100% (12/12), done.\nremote: Total 12 (delta 3), reused 0 (delta 0)\nUnpacking objects: 100% (12/12), done.\nFrom https://github.com/mstarke/MacPass\n   1a2659d..2e0613d  master     -> origin/master\nFetching submodule Sparkle\nremote: Counting objects: 154, done.\nremote: Compressing objects: 100% (89/89), done.\nremote: Total 154 (delta 66), reused 99 (delta 64)\nReceiving objects: 100% (154/154), 98.89 KiB | 0 bytes/s, done.\nResolving deltas: 100% (66/66), done.\nFrom https://github.com/mstarke/Sparkle\n   0912251..6d000ed  master     -> origin/master\nUpdating 1a2659d..2e0613d\nFast-forward\n MacPass/MacPass-Info.plist   |  6 +++---\n MacPass/de.lproj/Credits.rtf |  4 ++--\n MacPass/en.lproj/Credits.rtf |  4 ++--\n MacPass/fr.lproj/Credits.rtf | 12 ++++++------\n Sparkle                      |  2 +-\n 5 files changed, 14 insertions(+), 14 deletions(-)\nknick:MacPass knick$ git submodule update\nSubmodule path 'Sparkle': checked out '6d000edc9bee8b57788ce64da0c4d2e8e4c036a7'\nknick:MacPass knick$ git branch\n* master\nknick:MacPass knick$ git status\nOn branch master\nnothing to commit, working directory clean\n```\n. Same result after doing that. Note that I'm doing \"Save As...\" from the file menu in a new database.\n. Ya, to be clear, the original inability to save I mentioned wasn't this \"Save As...\" issue. I stumbled upon the latter when I was trying to produce a file for you that I couldn't save to. I haven't yet reproduced the original issue.\n. Given that newer version of Mac OS X are now free, this is a no-brainer. People with hardware that is too old probably have more issues than not being able to use MacPass.\n. ",
    "michaelklapper": "Would be great to see the next release :)\n. ",
    "veetow": "Thanks.  I searched for an existing Issue but didn't find one, sorry.\n. ",
    "MBibal": "Hi Michael\nMy real name is Michel Bibal.\nI thank you a lot to add my name : I am a very modest contributor compared\nto many others.\nMy GitHub name is MBibal.\nCheers\nMichel Bibal\n2014-11-05 9:36 GMT+00:00 Michael Starke notifications@github.com:\n\nI'd like to add a real name to the contributors. Can you provide me with\none? If that's too sensitive for you, I'll just stick with using your\ngithub name and link to the profile.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/pull/150#issuecomment-61781444.\n. \n",
    "ozanhazer": "I'd also add these behaviour:\n- Press keyboard shortcut for \"New Entry\"\n- \"New Entry\" would be listed at the very top of the list\n- \"New Entry\" would be selected (i.e. displayed with blue background)\n- new entry added following some sort of template\n- keyboard / input focus now on the \"Title\" textbox field\n- User enters their desired title, , username, , password,\n- any other optional information such as URL, tags, notes, expiration etc.\nYou can easily miss the new entry line if you have lot's of records. So I click the add entry button and I'm like \"ok, what now?\", because the entry line cannot be seen without scrolling down...\n. ",
    "jedahan": "I would even have it autogenerate a password which is copied to the clipboard with your default settings, but if you tab over to the password field it would let you override\n. +1\n. ",
    "m4ce": "+1 - that would be awesome\n. ",
    "mstipanov": "+1. ",
    "drawcard": "+1 The password generator never seems to remember my custom settings, eg only using the characters \"abc123!@#\" in a password. That field gets erased every time...\n. It's easier to describe if I take a screen recording :)\n\n. Haven't heard of this but I'm concerned - do you have a link to an article about it?. It sounds like this flaw is Windows only (until other evidence reveals the same issue in MacOS / Linux) - it's probably to do with the way that things are stored in memory in Win10, rather than a problem with Keepass architecture across all platforms. \nNo password manager is perfect - however I imagine doing stuff like 2FA / keyfiles reduces the chance of these attacks being successful.. > If a malicious software is able to dump you memory it surely is able to log your keyboard and a million other things\nThis caught my attention - not being a security expert I am wondering, if you used a keyfile in conjunction with a text password, would that defend against keyloggers? (presuming you kept your keyfile somewhere off the system eg. USB drive). ",
    "alexbabintsev": "+1\n. ",
    "j6cubic": "I think it might be better to add a way to configure the defaults (even if it's just a button in the generator that makes the current settings the new default). That way one can adapt to silly policies of individual logins without losing the sane defaults one set beforehand.\nFor instance, I might want to use passwords with a specified list of characters and a length of 30. Automatic persistence would help here. One particular website I deal with, however, uses improper password handling and disallows certain characters (let's say % and +) and can only safely store characters less then 20 characters in length. I can adjust my generator settings to match these limitations but then I'd have to reset the settings the next time I want to generate a password.\nA \"Make Default\" button would avoid this problem while still allowing users to have the generator behave the way they want it to. One way or another, though, it would be great to be able to change the default settings.\n. ",
    "patchao2000": "Thank you, my name is Zhao Peng.\nMichael Starke notifications@github.com\u4e8e2014\u5e743\u670824\u65e5\u661f\u671f\u4e00\u5199\u9053\uff1a\n\nMight I ask for a full name to give credit for the translation?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mstarke/MacPass/pull/168#issuecomment-38433963\n.\n\n\n\u53d1\u81ea\u79fb\u52a8\u7248 Gmail\n. I'm sorry for that somehow Localizable.strings changed to UTF-16 format... . ",
    "Floppy": "Thanks for the pointer to this, setting up manually solved the issue for me. Updated instructions for Yosemite: https://support.apple.com/kb/PH18418?locale=en_US; enter \"Copy Password\" as the command name and restart MacPass. Bingo.\n(It would still be easier for new users to use cmd-C natively though ;) )\n. Using @rfilmyer's build with PassIFox, and it seems to work perfectly. Good job :D\n. Does this PR add this icon in the status bar? \nAs far as I can tell, the icon appears only when KeePassHttp is running. However, there are no options - is necessary to display it (assuming this is where it comes from)?\n. Oh, thankyou, I hadn't spotted that. Appreciate the pointer :)\n. @sir-brickalot normally when it does that for me, it's because the URL isn't set in the keepass database for that key. Do you have those set correctly for the keys you're trying to use?\n. Apologies; I did search, but didn't hit the right keywords to find those ones somehow. I know how annoying is it, sorry about that :)\n. Ah, I guess I was searching for open issues rather than ones that were already closed.\n. Would allowing plugins to somehow check and alert for their own updates help? Then at least it would remind the user to update when something did break.\nBut yes, I appreciate that there's only one plugin at the moment, so this is pretty low priority :). The plugin repository and check is a good solution. For now it could just be a simple data file in https://github.com/MacPass/macpass.github.io. \ud83d\udc4d . Oh, that's what I do now, it's just becoming a more common thing.. Oooh, no, I didn't know that. That would work. I'll give it a go!. It would be worth pasting that explanation above into the documentation wiki, I'm sure I'm not the only one who didn't know that was a thing :). I'm a long-time Keepass user, but I'm still learning things about it that I never found out before! Great to have it in the docs, thanks :). ",
    "dereulenspiegel": "Ok, I'm sorry. I just had a look in the open issues to not create a duplicate and wasn't aware of the status page in the wiki.\nThen I will wait for the things to come (get contributed to this project) and probably I have some luck. Unfortunately I I'm not familiar with Objective-C and Cocoa.\nBut still MacPass is the best solution for KeePass on MacOS. I already use it constantly.\n. Thanks for the warning. But currently I work with the good old copy and paste approach.\nBtw. I guess asking for KeeAgent-Support or something like a plugin API is a bad time right now ;)\n. After giving this some more thought I can understand that proper autotype support is a more general approach, but I don't think that it is a replacement for KeePassHTTP. The integration of the browser plugins goes beyond just autotyping credentials. It can generate proper password for registration processes, fetches the correct credentials during login processes and can remember unknown credentials after authentication (and store them to KeyPass).\nSo while proper autotype support is a really important feature a really good integration into the browser (which is probably the software you enter most credentials nowadays) is very important for most users. And autotype will probably never achieve the level of integration.\n. ",
    "neeklamy": "I\u2019ve read about developers setting up Amazon Wish Lists \u2013 I would link to some examples here, but of course I can\u2019t find any right now. And supposedly, because it\u2019s a lot easier for them, large companies will have gift buying budgets for this purpose.. It would also be useful to generate random usernames. And most of us might want a username that is easily read and written.\nLastPass has a generate a \u201csecure\u201d username tool, it\u2019s not very good though, they don\u2019t use a dictionary and the few suggestions I\u2019ve seen were far from easy to say or read.. Or how about an explicit edit item mode? 1Password requires you to hit the edit button before any changes can be made. And just in case you still manage to hose a password item, they automatically keep encrypted backups of the database.\n\n. ",
    "AlexanderWillner": "+1 for adding a checkbox to store the master password in the keychain (btw: 1Password also has this option)\n. ",
    "buckett": "+1 I use the OS keychain for all my personal passwords but to share passwords within a team having a shared KeyPass file is once solution and allowing the master password to be stored in the OS X keychain would reduce the friction for me.\n. ",
    "whi7ed3vil": "+1. KyPass also does this. God, the code is atrocious otherwise, but it's a nice feature for certain things. The purpose for me in some of this is not local security, but security from peers on a cloud share. There are certainly models where it is appropriate feature. I think an informational \"are you sure?\" dialog would be quite reasonable, though. Just to be on the safe side.\n. ",
    "stysedo": "+1 for the option to store the master password in the macOS keychain.. ",
    "greuff": "+1. ",
    "KyleSouth": "@Govinda-Fichtner, \nThank you for the feature request.  Great minds think alike.\n\n@mstarke,\nI do not believe this to be a security risk at all.\nMy master password is the password used to get into my user account on my computer.  I am not inferring that I use the same password to login as my KeePass database.\nThe point I am making is that if you are in my user account, on my computer, and I am not with you, then I have already lost.\nPlease do not take features away from the competent to put the incompetent at ease.. ",
    "chrisspelberg": "+1\nI fully agree with @KyleSouth, this is not a security risk but a very nice convenience to make the use of a password manager easy. . ",
    "tiiiecherle": "I am not a developer, so I don`t know how to do it. But this looks promising:\nhttp://superuser.com/questions/178316/how-to-set-an-icon-for-a-file-type-on-mac\nhttps://developer.apple.com/library/mac/Documentation/IDEs/Conceptual/AppDistributionGuide/ConfiguringYourApp/ConfiguringYourApp.html\nHope that helps ;) Thanks for your hard work!\n. o.k. ;)\nSo I\u00b4m looking forward to the next version, possibly with files icon ;)\n. very nice, thank you!\nDo you have a schedule when you plan the next release? Would be nice to see this in use ;)\n\nAm 04.11.2014 um 22:40 schrieb Michael Starke notifications@github.com:\nClosed #176 https://github.com/mstarke/MacPass/issues/176.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/176#event-188320882.\n. Hey, thanks for the next nice release. I\u00b4m not a programmer, only a user. I followed the autotype discussion. Perhaps you want to solve it like the osx app PasswordWallet. Autotyping is very nice there. you press the weblink and the autotype sequence with username-tab-password-enter or modified are copied to \"clipboard\". Now you have 30 Seconds to navigate to the login field. When selected, you just press \"alt\" with a long press and the autotype sequence is running. In this way you can work around problems with not matching titles or urls. This is the best way I\u00b4ve seen it. Hope that helps. Thanks for the nice work ;)\n. Thanks for the fast feedback. Perhaps you ant to try and download a trial of PasswordWallet. It is really easy to use the autotyping there. What I like most is that I don`t have to go back to the PasswordWallet again if I pressed the link button once. Second thing is that you are completely free in navigating afterwards. So If you have to go to another url on the website before login or just somewhere else you can do that and autotyping still works. You could implement the feature by double clicking on the link, then the URL would open and copy the autotype sequence to \"clipboard\". Would be nice and easy for the user ;)\n. \n",
    "phpwutz": "if, in the meantime, you are looking for a keepasshttp server for macos, there is https://github.com/bh/python-keepass-httpd\nit is not shiny and still has some bugs, but basically it does work. \n. no, its a separate program that simply allows serving a kdb or kdbx database via keepassHTTP. So if, for example you start python-keepass-httpd with your kdb database, then edit the same database in macpass, the changes will not be reflected in the data that python-keepass-httpd serves. Hope that answers your question.\nOh and btw. its not \"my\" project, I am just contributing a bit\n. ",
    "am2605": "Big thumbs up for this - working nicely for me (I have only used it \"read only\" - not sure if it supports adding new entries?)\n. ",
    "viegelinsch": "Maybe collecting and donating money via https://www.bountysource.com/faq is a solution?!\n. ",
    "stevespringett": "Thanks. That may just work for me. BTW. Great work on the project. Dig the simplicity of the interface.\n. ",
    "aled": "I am unable to reproduce it myself now. I will close the issue and reopen if I can reproduce it.\n. ",
    "michaelrommel": "Actually I triggered the same earlier on, when creating a new entry and was asked whether I want to save the file, clicked \"Yes\" and it saved, but also closed. But I couln't re-create it. You are quick, my bug didn't even made it into my own listing and your answer was there in the mail :-) Thanks, I will try to file as many as I can find - the SW seems very well designed and it runs fine under Yosemite.\n. Hey Michael,\nI put up a video for you: http://michaelrommel.com/static/Macpass_CloseWindow.mp4\nI created a completely new, empty file and added one entry to it with a \"asdf\" password and saved it.\nIn the video:\n1. Opened the file, selected the entry, clicked and cancelled the generator\n2. Opened it, selected the password, changed it and then clicked and cancelled the generator\n3. Opened it, changed the password, saved the file, changed the focus to another input field, and then dabbled with the generator.\nI tried, whether I can see any messages in the console, when I start MacPass from there, but since only the file closes and MacPass does not quit or crash (good :-)) there are no messages.\nProbably something with Yosemite, I can work around it, if I know it, no big deal.\n. ",
    "tanis2000": "\nI'm on the official build 0.4.1 \nIt's an old kdbx file that I've already opened and saved before with version 0.3.x of MacPass.\nI try to save the database by doing File > Save (or CMD-S) as I used to do with previous versions.\nSaving doesn't throw any error, but does nothing to the actual file as well.\nSaving to a new file doesn't write the new file either. It asks for the name of the new file but when I press Save it doesn't write it. \nMy user is the owner of the folder I'm writing in and has read/write access.\n\nThe console log shows this when trying to save the file:\n11/06/14 14:29:16,664 MacPass[21628]: *** -[__NSPlaceholderArray initWithCapacity:]: capacity (18446744073709551165) is ridiculous\n11/06/14 14:29:16,669 MacPass[21628]: (\n    0   CoreFoundation                      0x00007fff90b2825c __exceptionPreprocess + 172\n    1   libobjc.A.dylib                     0x00007fff92614e75 objc_exception_throw + 43\n    2   CoreFoundation                      0x00007fff909e8d70 -[__NSPlaceholderArray initWithCapacity:] + 224\n    3   MacPass                             0x0000000106c44767 MacPass + 427879\n    4   MacPass                             0x0000000106c560a5 MacPass + 499877\n    5   MacPass                             0x0000000106c5517e MacPass + 495998\n    6   MacPass                             0x0000000106c53a2b MacPass + 490027\n    7   MacPass                             0x0000000106c65db3 MacPass + 564659\n    8   MacPass                             0x0000000106c52acc MacPass + 486092\n    9   MacPass                             0x0000000106bfc6f5 MacPass + 132853\n    10  AppKit                              0x00007fff8d76b238 -[NSDocument writeToURL:ofType:forSaveOperation:originalContentsURL:error:] + 445\n    11  AppKit                              0x00007fff8d76a2f3 -[NSDocument _writeSafelyToURL:ofType:forSaveOperation:forceTemporaryDirectory:error:] + 586\n    12  AppKit                              0x00007fff8d76aefc -[NSDocument _writeSafelyToURL:ofType:forSaveOperation:error:] + 28\n    13  AppKit                              0x00007fff8d76b069 -[NSDocument writeSafelyToURL:ofType:forSaveOperation:error:] + 356\n    14  AppKit                              0x00007fff8d775f25 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke_22082 + 76\n    15  AppKit                              0x00007fff8d777294 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke_22161 + 248\n    16  AppKit                              0x00007fff8d77718d __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke2158 + 370\n    17  AppKit                              0x00007fff8d775e10 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke2073 + 1485\n    18  Foundation                          0x00007fff8f7f8e8d __110-[NSFileCoordinator(NSPrivate) _coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:]_block_invoke302 + 152\n    19  Foundation                          0x00007fff8f685a49 -[NSFileCoordinator(NSPrivate) _invokeAccessor:orDont:thenRelinquishAccessClaimForID:] + 224\n    20  Foundation                          0x00007fff8f7f8aaf -[NSFileCoordinator(NSPrivate) _coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:] + 998\n    21  AppKit                              0x00007fff8d771a0b -[NSDocument _fileCoordinator:coordinateReadingContentsAndWritingItemAtURL:byAccessor:] + 241\n    22  AppKit                              0x00007fff8d775144 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke + 599\n    23  AppKit                              0x00007fff8d7638cc -[NSDocument performAsynchronousFileAccessUsingBlock:] + 57\n    24  AppKit                              0x00007fff8d774ede -[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:] + 148\n    25  AppKit                              0x00007fff8d7712bf __85-[NSDocument saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:]_block_invoke_2 + 310\n    26  AppKit                              0x00007fff8d79e630 -[NSDocument _commitEditingThenContinue:] + 501\n    27  AppKit                              0x00007fff8d79e7dd -[NSDocument _commitEditingWithDelegate:didSomethingSelector:contextInfo:thenContinue:] + 138\n    28  AppKit                              0x00007fff8d771177 __85-[NSDocument saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:]_block_invoke + 524\n    29  AppKit                              0x00007fff8d761c47 -[NSDocument performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 66\n    30  AppKit                              0x00007fff8d770f5c -[NSDocument saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:] + 169\n    31  AppKit                              0x00007fff8d76cba1 __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_31381 + 221\n    32  AppKit                              0x00007fff8d762012 -[NSDocument continueActivityUsingBlock:] + 323\n    33  AppKit                              0x00007fff8d76cab7 __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_21378 + 278\n    34  AppKit                              0x00007fff8d76befd -[NSDocument _checkForFileChangesThenSave:saveAs:orCancel:] + 708\n    35  AppKit                              0x00007fff8d76c991 __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke1375 + 536\n    36  AppKit                              0x00007fff8d79748f -[NSDocument _checkAutosavingIgnoringSafetyChecksThenContinue:] + 116\n    37  AppKit                              0x00007fff8d76c33e __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_2 + 517\n    38  AppKit                              0x00007fff8d79e630 -[NSDocument _commitEditingThenContinue:] + 501\n    39  AppKit                              0x00007fff8d79e7dd -[NSDocument _commitEditingWithDelegate:didSomethingSelector:contextInfo:thenContinue:] + 138\n    40  AppKit                              0x00007fff8d76c12a __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke + 367\n    41  AppKit                              0x00007fff8d761c47 -[NSDocument performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 66\n    42  AppKit                              0x00007fff8d76bfae -[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:] + 128\n    43  MacPass                             0x0000000106bfc5a1 MacPass + 132513\n    44  MacPass                             0x0000000106be8b45 MacPass + 52037\n    45  AppKit                              0x00007fff8d515260 -[NSApplication sendAction:to:from:] + 327\n    46  AppKit                              0x00007fff8d5301c8 -[NSMenuItem _corePerformAction] + 394\n    47  AppKit                              0x00007fff8d52ff04 -[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] + 117\n    48  AppKit                              0x00007fff8d52f07c -[NSMenu performKeyEquivalent:] + 289\n    49  AppKit                              0x00007fff8d52b8e1 -[NSApplication _handleKeyEquivalent:] + 822\n    50  AppKit                              0x00007fff8d49aacc -[NSApplication sendEvent:] + 3293\n    51  AppKit                              0x00007fff8d2eaa19 -[NSApplication run] + 646\n    52  AppKit                              0x00007fff8d2d57a3 NSApplicationMain + 940\n    53  libdyld.dylib                       0x00007fff8cd905fd start + 1\n)\n. As a side note, I do have an entry in the root group, but the behavior is still the same and I cannot save that database.\nWhen is the next release planned? ;)\n. ",
    "mariusrugan": "Hi,\nalso have the same issue. i exported to .kdb format (luckily it works) to be able to work with it.\n- 0.4.1\n- same workflow as @tanis2000\n- new db files (kdb, kdbx) work correctly\nexception in system.log below:\nJun 22 17:48:14 [EDITED] MacPass[1695]: *** -[__NSPlaceholderArray initWithCapacity:]: capacity (18446744073709551208) is ridiculous\nJun 22 17:48:14 [EDITED] MacPass[1695]: (\n        0   CoreFoundation                      0x00007fff8d9ae25c __exceptionPreprocess + 172\n        1   libobjc.A.dylib                     0x00007fff85840e75 objc_exception_throw + 43\n        2   CoreFoundation                      0x00007fff8d86ed70 -[__NSPlaceholderArray initWithCapacity:] + 224\n        3   MacPass                             0x000000010f2dc767 MacPass + 427879\n        4   MacPass                             0x000000010f2ee0a5 MacPass + 499877\n        5   MacPass                             0x000000010f2ed17e MacPass + 495998\n        6   MacPass                             0x000000010f2eba2b MacPass + 490027\n        7   MacPass                             0x000000010f2fddb3 MacPass + 564659\n        8   MacPass                             0x000000010f2eaacc MacPass + 486092\n        9   MacPass                             0x000000010f2946f5 MacPass + 132853\n        10  AppKit                              0x00007fff88565238 -[NSDocument writeToURL:ofType:forSaveOperation:originalContentsURL:error:] + 445\n        11  AppKit                              0x00007fff885642f3 -[NSDocument _writeSafelyToURL:ofType:forSaveOperation:forceTemporaryDirectory:error:] + 586\n        12  AppKit                              0x00007fff88564efc -[NSDocument _writeSafelyToURL:ofType:forSaveOperation:error:] + 28\n        13  AppKit                              0x00007fff88565069 -[NSDocument writeSafelyToURL:ofType:forSaveOperation:error:] + 356\n        14  AppKit                              0x00007fff8856ff25 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke_22082 + 76\n        15  AppKit                              0x00007fff88571294 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke_22161 + 248\n        16  AppKit                              0x00007fff8857118d __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke2158 + 370\n        17  AppKit                              0x00007fff8856fe10 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke2073 + 1485\n        18  Foundation                          0x00007fff80b9ae8d __110-[NSFileCoordinator(NSPrivate) _coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:]_block_invoke302 + 152\n        19  Foundation                          0x00007fff80a27a49 -[NSFileCoordinator(NSPrivate) _invokeAccessor:orDont:thenRelinquishAccessClaimForID:] + 224\n        20  Foundation                          0x00007fff80b9aaaf -[NSFileCoordinator(NSPrivate) _coordinateReadingItemAtURL:options:writingItemAtURL:options:error:byAccessor:] + 998\n        21  AppKit                              0x00007fff8856ba0b -[NSDocument _fileCoordinator:coordinateReadingContentsAndWritingItemAtURL:byAccessor:] + 241\n        22  AppKit                              0x00007fff8856f144 __66-[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:]_block_invoke + 599\n        23  AppKit                              0x00007fff8855c955 -[NSDocument continueFileAccessUsingBlock:] + 234\n        24  AppKit                              0x00007fff8855cded -[NSDocument _performFileAccessOnMainThread:usingBlock:] + 782\n        25  AppKit                              0x00007fff8855da74 -[NSDocument performAsynchronousFileAccessUsingBlock:] + 481\n        26  AppKit                              0x00007fff8856eede -[NSDocument saveToURL:ofType:forSaveOperation:completionHandler:] + 148\n        27  AppKit                              0x00007fff8856b2bf __85-[NSDocument saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:]_block_invoke_2 + 310\n        28  AppKit                              0x00007fff88598630 -[NSDocument _commitEditingThenContinue:] + 501\n        29  AppKit                              0x00007fff885987dd -[NSDocument _commitEditingWithDelegate:didSomethingSelector:contextInfo:thenContinue:] + 138\n        30  AppKit                              0x00007fff8856b177 __85-[NSDocument saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:]_block_invoke + 524\n        31  AppKit                              0x00007fff8855bc47 -[NSDocument performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 66\n        32  AppKit                              0x00007fff8856af5c -[NSDocument saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:] + 169\n        33  AppKit                              0x00007fff88566ba1 __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_31381 + 221\n        34  AppKit                              0x00007fff8855c012 -[NSDocument continueActivityUsingBlock:] + 323\n        35  AppKit                              0x00007fff88566ab7 __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_21378 + 278\n        36  AppKit                              0x00007fff88565efd -[NSDocument _checkForFileChangesThenSave:saveAs:orCancel:] + 708\n        37  AppKit                              0x00007fff88566991 __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke1375 + 536\n        38  AppKit                              0x00007fff8859148f -[NSDocument _checkAutosavingIgnoringSafetyChecksThenContinue:] + 116\n        39  AppKit                              0x00007fff8856633e __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_2 + 517\n        40  AppKit                              0x00007fff88598630 -[NSDocument _commitEditingThenContinue:] + 501\n        41  AppKit                              0x00007fff885987dd -[NSDocument _commitEditingWithDelegate:didSomethingSelector:contextInfo:thenContinue:] + 138\n        42  AppKit                              0x00007fff8856612a __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke + 367\n        43  AppKit                              0x00007fff8855bc47 -[NSDocument performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:] + 66\n        44  AppKit                              0x00007fff88565fae -[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:] + 128\n        45  MacPass                             0x000000010f2945a1 MacPass + 132513\n        46  MacPass                             0x000000010f280b45 MacPass + 52037\n        47  AppKit                              0x00007fff8830f260 -[NSApplication sendAction:to:from:] + 327\n        48  AppKit                              0x00007fff8832a1c8 -[NSMenuItem _corePerformAction] + 394\n        49  AppKit                              0x00007fff88329f04 -[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:] + 117\n        50  AppKit                              0x00007fff8832907c -[NSMenu performKeyEquivalent:] + 289\n        51  AppKit                              0x00007fff883258e1 -[NSApplication _handleKeyEquivalent:] + 822\n        52  AppKit                              0x00007fff88294acc -[NSApplication sendEvent:] + 3293\n        53  AppKit                              0x00007fff880e4a19 -[NSApplication run] + 646\n        54  AppKit                              0x00007fff880cf7a3 NSApplicationMain + 940\n        55  libdyld.dylib                       0x00007fff8e0895fd start + 1\n    )\n. @mstarke i have lots of entries in the root group. (maybe too many? :D) & behaviour is the same.\ndunno how to reproduce it with a new database.\n. ",
    "arvinsim": "Any update on this? I was surprised that this feature was not implemented.. ",
    "timkite": "I'll add another vote for search by tag. The official KeePass supports it, but KeePassX/CE does not (nor does MacPass). Oddly, MacPass is the easiest to use of the three for adding tags, putting them front and center in the inspector, but they're not super useful since they're not searchable.\nAlong with search by tag, a related suggestion would be, either in the menu or in a collapsible sub-section in the left sidebar (or even a separate pane on the bottom), show all tags with their entry counts. Clicking on each could then effectively be a saved search for just that tag. That would look and work much like Finder's tag support, fitting with the Mac native approach of MacPass.. The synchronization works great! Awesome feature!. Dark mode looks great in the continuous release! There is one issue with it, though: the Notes field. Once you start typing (or view previously entered notes), the notes themselves end up as black text on a dark grey background, rather than white text in dark mode. Every other element flips text colors except that, and when the field is empty the \"None\" placeholder is the correct light grey text on a dark grey background. Notes are still readable once highlighted.. ",
    "DeX3": "\nTags can be searched via the \"Everywhere\" setting in search.\n\n@mstarke Where is this \"Everywhere\" setting? I can't seem to find it?\nI guess it should be in this search options bar part of the UI, but I don't see it here:\n\n. ",
    "kakysha": "The reason on which @qu1ck is complaining about is not about saving text fields on every change, but just also save on cmd+s. The scenario he described is very often for me too, the solution is pretty simple - just save the editting field on cmd+s and after that save the database.\n. ",
    "qu1ck": "Yes, I think simpler solution here is to save fields on the \"save file\" event, whether it's triggered by cmd-s or anything else.\n. @mstarke do you think this can be addressed with a minor fix before all of the history work you mentioned will be done?\n. ",
    "slovdahl": "Sorry, didn't know that. I'll keep that in mind if I find something else :)\n. ",
    "abhinavsingh": "Thanks Michael, I will check out master. Thanks.\nOn 31 Jul 2014 03:50, \"Michael Starke\" notifications@github.com wrote:\n\nThis is a duplicate of #196\nhttps://github.com/mstarke/MacPass/issues/196. If you take a look at\nthe log, you should see the same output mentioned int #196\nhttps://github.com/mstarke/MacPass/issues/196. Fixed in master. I\nshould publish an update :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/205#issuecomment-50743867.\n. \n",
    "akcasoy": "I have the exact same issue with the latest release.\n. As written, latest release: MacPass-0.6.2-alpha.zip\nBut i have found out that, if you try to save the file first time through the menu \"File->Save As\", it works. But if you try to close the app with a change in DB, after you get the dialog whether you want to save or not, there it does not work to save the file first time. \n. I did not quite get this feature. We cannot add multiple URLs, but instead we can duplicate the entry, and reference the username and password fields of the old one. But how exactly? Could you please write it in an example?\nEdit: Ok i think i saw it in the link above.. When i write {REF:P@I:xxx} in the password field of my 2. entry, i reference the password of the 1. entry with an ID of \"xxx\".\n. Could please someone check if autotype still works in 10.12 (Sierra)?\nI somehow could not manage to see it working.\n. I think this feature lacks a clear \"how to\". I spend the last 1 hour to understand how it should work.. \nDoes a KeePass Entry URL have to match the current URL in browser? Or how does it match the entry?\nI also enabled the preview, but do not see any preview on the screen whether it has found the entry or not. \nshortcut is ctrl+alt+m right?\nEdit: In autotype preferences, the option \"include title for matches\" (selected as default) is used for match option i think.. \"include\" is confusing.. \nbut autotype still does not react.. \n. Thank you very much Michael. I actually found out and read a bit of the KeePass Autotype Documentation. I somehow still miss another small point..\nEdit: Thank you for your fast reaction btw. Thank your explanation, i have found out that the simple version autotype (Perform Autotype) works. I think the problem with the global autotype is that the keystroke (ctrl+option+m) does not somehow trigger the macpass (although it is selected in the macpass preferences). Should i also define this shortcut in mac->preferences->keyborad shortcuts for the macpass app? \nEdit: I think it also worths to mention whether the macpass must be open in background and the database must be unlocked in order the global autotype works.\n. ",
    "naturalethic": "Been waiting for this, thanks so much fellas.\n. ",
    "auge": "Sure, though I barely contributed. You may use my name \u00bbBenjamin Steinwender\u00ab (https://github.com/auge)\nThanks!\n. I was able to track the line where the exception is thrown:\nAs item 5 in the stack trace suggests, it happens in [MPEntryViewController _didChangeCurrentItem]\nWhen \u2318+F is hit after having selected one entry, this method is called. \nMPEntryViewController.m:377 tests, if (document.selectedItem == document.selectedGroup), but both members are nil (so obviously the test is true) - thus in line 388, self.entryArrayController is invoked with a nil argument (my guess).\nwould it be valid to test additionally if the 2 members above are not nil? is this sufficient or is there something else that I miss?\n. If we can have auto-save, I would propose (according to comment https://github.com/mstarke/MacPass/issues/287#issuecomment-68295328 ) to also enable auto-save on locking (this is also what can be set for KeePass).\n. You can rename it and give it a different name - e.g. mine is called \"Main\" (although created with Keepass)\n. you can Cmd+Shift+E\n\nOn 25.01.2016, at 11:36, Ali Ok notifications@github.com wrote:\nThis is about UX.\nHere is some process:\nDo Cmd+F\nType something\nPress Enter\nNow, I need to use my mouse to select an item. Instead, it would be great if the focus is set on the first item of the list so that I can navigate with arrow keys and do Cmd+Shift+C etc.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "higstar": "Sorry, kdbx and MacPass version 0.4.1 (2534)\n. OK, so figured out how to run import with recovery...no good.  Only appears to have found an empty directory :(\nDifficult thing about this is that I can not exactly send you the file for a repro.\nI will try to eliminate enough stuff though...\n. So I corrupted another version of the file, and this one does recover\n. Great, I'll do that.\nI have favicons for most entries (hundreds, if not thousands).\n. I exported, and have not seen anything weird.\nI have tried to import xml, which doesn't work as expected.  I only get a handful of the folders, all of them empty.\n. ok, so I have been deleting folders and saving, and I've narrowed it down to the recycle bin\n. Deleting via MacPass.  I'm trying to identify the single entry...\n. OK, found the culprit, an historical entry: &\\xef\\xbf\\xbd\\xc4\\x9aP\\xef\\xbf\\xbdJ\\xda\\xac)Qf\\xef\\xbf\\xbd\\xef\\xbf\\xbd1\\xef\\xbf\\xbd\\xef\\xbf\\xbd\\xef\\xbf\\xbdz\n. After deleting this historical entry from within KeePass, I can now edit and save the DB from within MacPass :)\nThanks for the help mstarke\n. ",
    "adonishi": "I also came across same kind of problem, then find the bad entry by deleting one by one.\nerror came from password field containing control characters (I myself did not made it though).\n*EORDIE^P^V^R^P\nor\n$od -t x1a pwd.txt\n0000000    2a  45  4f  52  44  49  45  10  16  12  10\n           *   E   O   R   D   I   E dle syn dc2 dle\n0000013\ninteresting thing is, if i made new file with this entry by MacPass, then it shows error dialog on save. but with original file which came from Windows KeePass, it do not show error at all.\n. ",
    "5an1ty": "Thanks for the replies guys, I'm patient so I'll wait for the 0.4.2 release :-).\n. ",
    "internetmachines": "I have also been using 0.4.1 this year and it is helpful. Sure, there are one or two niggles, but nothing that gets in my way. \nI did clone and compile some earlier code. I haven't bothered doing anything complicated since installing 0.4.1 because it meets my needs. \nThank you Mr. Starke.\n. ",
    "andreas-becker": "So when do you think to release the 0.4.2? Cause i tried to use the 0.4.1 but without the KeePassHttp integration it's bad handling. \n. ",
    "gagarine": "This bug can be closed with the release of 0.7.3.. I do have the same bug with Mojave and macpass 0.7.3 (can wait for a new stable release, so many bugs have been fixed).\nNote that I'm using https://clipy-app.com . Don't know but perhaps it makes this bug append more often. Because I'm surprised so few peoples reported it. It seems to append regularly (1-2 times a day I would say).\nIt's a bit of a problem, I can potentially send sensitive information to the website I'm login to. I never copy in my clipboard ultra-sensitive information, as clipboard is shared between applications. But I may copy an email or source code that I don't want to be public.\nTo mitigate the risque with this bug I wanted to change the autotype sequence for all my entries by removing the \"enter\", but didn't find out how to do it.. @neon64 not related to this bug really, but I had to change my workflow when I switched from lastpass and after a short time I was a lot happier with my new workflow.\n-> use https://addons.mozilla.org/en-US/firefox/addon/url-in-title/  to have the URL in the tab (after the title, so you don't see it in fact)\n-> use global autotype\n\n-> keep macpass hidden (but do not close the windows)\nThen to login use the shortcut directly from your browser.\nThe advantage: \n- secure (no link between your browser and macpass)\n- light (no script injected in web page to detect form)\n- fast (only one shortcut)\nDisadvantage: \n- you have to enter a new entry from macpass (but lastpass mostly failed on that anyway)\n. @tflo I do not agree because user experience is reduced by a lot for new users. Most users have a hard time to install a program or even make the difference between a file and a program... Yet it's exactly those users that manage their password very badly. The value of a password manager is in the UX. Otherwise one can simply use a txt file in an encrypted image... ;)\nThis is one of the problems of open source software -> You don't have that much incentive to invest that much in reducing friction for new users.. I was using 0.6.2.. Fixed in Version 0.6.2 (20170825120842-continuous). 0.6.2. Where I can download continuous build?. Ok I will test it when I found some spear time. Thanks.. Yes it works on Version 0.6.2 (20170825120842-continuous) if you select one item and try to move it to another group (moving multi-item at once doesn't seem to be supported yet, but it's another issue.).. Why this is not merged?. KeepassRPC is more secure, and https://www.kee.pm is the best browser plugin you can find and works on any browsers.\nTheir is a plugin their https://github.com/kee-org/keepassrpc for keypass. If my page title is \"Facebook\" on Firefox but the title in macpass's entry is \"facebook\",  global auto-type don't find a match.. Nop you right. I tried it again and it works. Sorry.\nDon't know really why, but sometimes it doesn't... Perhaps is because of the use of CTRL in the shortcut that is capted by the website. I will open a new bug when I'm more confident of what's going on.. Oh great, didn't see https://macpass.github.io . For the moment google seem to prioritize the old one. But this new website is great, well done.\nOne things is about the download button that redirect to github, their is a solution to have a direct link to the latest build (without updating the link each releases): https://stackoverflow.com/questions/24987542/is-there-a-link-to-github-for-downloading-a-file-in-the-latest-release-of-a-repo\nI got the same issues with github page and SSL. Perhaps you can serve update from a different url and keep the website without SSL until GitHub finally propose let's encrypt for custom domain.. Ok, I keep that in mind for when I want to do a very small pet project: \"github-release-link.com\" that redirect to the last release or last tag.... Bundle major plugin in MacPass solve this issue for most users no? I think applications with not that much plugin should add them in the app, user can simply activate/desactivate them.  It's what http://www.jetbrains.com/ doing.. I'm on MacOS 10.13.3 but otherwise have same version and settings.. It works for me now. Sadly I don't know what I changed.\nMacPass: Version 0.7.3 (17830)\nFirefox 59\nmacOS 10.13.3. At least, when their is multiple match then it doesn't works. The pop-up to select the entry is on the \"desktop\" space and switching is not possible without passing by \"mission control\" (for example using cmd-tab to select the finder will not works).. mmmh but cmd + t is for new tab and cmd + T is to reopen the last closed tab.\nOn my side, I end up using (l = login):\n\n. \nIt's the standard Firefox shortcut:\n\n. Good default shortcut are a nightmare to find.\n\nSo you use Cmd + L for Autotype and Cmd + Shift + L f\u00fcr Global Autotype?\n\nYes. So why you don't want to use  Cmd + Shift + L for global autotype?. Oh I see. I never used the looking feature (I close the windows instead, but I mostly keep MacPass open because I'm using global autotype). Using Cmd + Alt + L for looking is good for me.\nShortcuts can be changed for sure, but good global shortcuts hare very hard to find. It's why I think it's important to try to find the \"less worst\" solution.\n. Just I did an global autotype from Firefox. I had a match but nothings append. I relalise that macpass DB was close. I unlook the DB and retry the global auto path. It was successful but 3 second after macpass crashed.. As it seem a problem with restoring clipboard before autotype was used I can add that I'm using alfred to keep an history of my clipboard.\nAs a side note, is it safe to use the clipboard as any program has access to it?\nI will try do know what was in my clipboard next time it crash!. I enter the following command but I do have some errors.\n```\n\u279c  ~ defaults delete com.hicknhacksoftware.MacPass \"NSTableView Columns v2 (null)\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Columns v2 EntryTable\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Sort Ordering v2 (null)\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Sort Ordering v2 EntryTable\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Supports v2 (null)\"\ndefaults delete com.hicknhacksoftware.MacPass \"NSTableView Supports v2 EntryTable\"\n2018-04-04 22:17:13.931 defaults[59888:4587291]\nDomain (com.hicknhacksoftware.MacPass) not found.\nDefaults have not been changed.\n2018-04-04 22:17:14.183 defaults[59890:4587304]\nDomain (com.hicknhacksoftware.MacPass) not found.\nDefaults have not been changed.\n2018-04-04 22:17:14.429 defaults[59892:4587314]\nDomain (com.hicknhacksoftware.MacPass) not found.\nDefaults have not been changed.\n```\nAnd even with the error, the preferences was reset, yet the bug persist (see the empty space at the end):\n\n. Ok I did search the value and delete them. My pref was looking like that (minus the XXX) before I restarted MacPAss:\n\n\u279c  Contents defaults read com.hicknhacksoftware.MacPass\n{\n    AutotypeMatchHost = 1;\n    AutotypeMatchTitle = 0;\n    AutotypeMatchURL = 1;\n    DoubleClickURLAction = 1;\n    EnableGlobalAutotype = 1;\n    EntrySearchFilterContext = ;\n    EntryTableSortDescriptors = ;\n    GlobalAutotypeKeyDataKey = ;\n    LastDatabasePath = \"file:///XXXXX.kdbx\";\n    LockOnSleep = 0;\n    MPHTTPSettingsKeyShowMenuItem = 0;\n    MPHTTPSettingsKeyShowNotifications = 0;\n    NSNavLastRootDirectory = \"~/XXXX\";\n    NSNavPanelExpandedSizeForOpenMode = \"{712, 448}\";\n    NSNavPanelExpandedSizeForSaveMode = \"{712, 542}\";\n    NSNavPanelExpandedStateForSaveMode = 1;\n    \"NSSplitView Subview Frames InspectorNotesSplitView\" =     (\n        \"0.000000, 0.000000, 353.000000, 616.000000, NO, NO\",\n        \"0.000000, 617.000000, 353.000000, 165.000000, NO, NO\"\n    );\n    \"NSSplitView Subview Frames SplitView\" =     (\n        \"0.000000, 0.000000, 150.000000, 832.000000, NO, NO\",\n        \"151.000000, 0.000000, 935.000000, 832.000000, NO, NO\",\n        \"1087.000000, 0.000000, 353.000000, 832.000000, NO, NO\"\n    );\n    \"NSToolbar Configuration MainWindowToolbar\" =     {\n        \"TB Display Mode\" = 1;\n        \"TB Icon Size Mode\" = 1;\n        \"TB Is Shown\" = 1;\n        \"TB Size Mode\" = 1;\n    };\n    \"NSWindow Frame DatabaseWindow\" = \"0 46 1440 854 0 0 1440 900 \";\n    RecentEntrySearches =     (\n     XXXX\n    );\n    SUEnableAutomaticChecks = 1;\n    SUHasLaunchedBefore = 1;\n    SULastCheckTime = \"2018-04-10 19:34:27 +0000\";\n    SUScheduledCheckInterval = 86400;\n    SUSendProfileInfo = 0;\n}\n\nBut still the same problem.. @mstarke oooh you right. I simply moved this \"col with no name\" at the beginning and it fixed the problem. Don't really understood how I can order stuff in a custom order but that's an other issue.\nI guess we can close this issue. But perhaps you want to make it impossible to move this column at the end?. #791 can fix part of that (when you are not editing).. The others UX problem is that you are forced to read all the field even the empty one. A reading mode can display only the field that have content. I also imagine that field will display a \"copy\" label on over that you can click on it to copies the field value.\nFor me this is the last needed feature before I can give this software to my mum ;).. FTP is dead (at least for me ;) )\nWhat can be done is allow to execute a file/command on save. Then a scp command can be used to copy the file on a server trough SSH. Using ssh key so you don't have to write your password on the command. Easy and secure.\nNow to sync the key dropbox isn't simpler?. @mstarke yes, certainly.. I'm on 0.7.3. I will check it again. But perhaps I can try on a new release if one is planned soon.. I think this is a bad idea. Peoples should backup their full system, not only their passwords.\nEspecially, on MacOS you have time machine that is super easy to use.\nYet peoples don't backup :(. It's why I proposed on #798 to send a copy of the DB by email.. Keypass DB is encrypted using SHA-256. I have to trust SHA-256 encryption. Otherwise, it's game over anyway.\nOf course MacPass should always ask the user before saving/sending the DB somewhere.\nYou can do multiple time machine backup (using multiple disks) https://www.lifewire.com/time-machine-multiple-drives-how-to-use-2260099\nLast, if your main email is compromised, then it's over. Because the attacker can use \"reset password\" functionality to reset all your passwords.. They are easy to memorize and that's a problem. If you are in a public space or working with someone on your computer and display them (even by accident, like using global auto-type in the wrong field), the person can memorize it in a 1-2 seconds.\nNormal human being can not memorize \";RG]5c|>?-\\a26cGM<R\" in less than 20 seconds.\nIt's why I'm using unpronounceable password. They are \"impossible\" to memorize quickly.\nI do use password based on sentences for the couple of password that I do keep in my head (master password, my email password, and such). But I never save those password anywhere.. Didn't think about the username. That's a very great idea.. A good way is to test with \"normal\" user. Look at the computer of a normal user when they try to install it and use the app. https://en.wikipedia.org/wiki/Usability_testing\nI agree for the password checkbox. For the password the label checkbox should be named somethings like \"Do not require a password []\" and be right under the password field.. ",
    "yonomitt": "Glad to hear it! I started using MacPass about 3 months ago. I've looked a little at the code base, but not too in depth. I may try to get my feet wet a little bit first, but perhaps I could help out.\n. Yup! I actually had this change in my local copy and, as I mentioned, I've been using MacPass for about 3 months. I just noticed today that it wasn't giving me alerts for expired passwords and decided to create a GitHub account to request that feature and figured I might as well contribute too!\n. As a workaround, you can drag them to reorder.\n. If an unencrypted database is used to save templates, could checks be put it to ensure sensitive data is not accidentally written to it? Would there also be a way to check that new bug fixes/merges don't accidentally write sensitive data to this database?\n. I did a little bit of digging, and it looks like the in DatePickingView.xib, the presetPopupButton outlet is not associated with the setDatePreset: action. If I hook this up, then it works properly. \nI would create a pull request, but I can only test on Yosemite at moment.\n. ",
    "travs": "Oh also, I run a small web hosting business and I would be willing to donate hosting space/bandwidth if it is necessary (github pages may work fine for hosting, but I haven't read too much on it yet).\n. Good points guys.\nI have something basic up right now; let me know what you think.\nRe: Hosting - Had a look at github pages and it seems to be good for our purposes.\nRe: Jekyll - I'm going to learn how to use it over the next month or so, but if anyone can integrate it from here you can go ahead.\nFor content management more generally, I am willing to update things as/if they change, and anyone else is certainly welcome to as well. The content I have there now might not be suitable; I just whipped something up to fill in the space for now.\nIf you think it looks okay/appropriate I can file a pull request.\n. @mstarke: I made some content changes to make it a little less cocky :sunglasses:. I am sure there are still more changes to be made, but I would like the community to have control over this, so I will make the pull request now.\nI searched around and I am not sure what you mean by the update app cast; could you direct me to it? \n@gdovicak: Awesome. Look forward to seeing it.\n. @mstarke : That sounds good. When we get the content under control it will be more reasonable to merge. I'll close this for now.\n. ",
    "BradGunnerSGT": "Github hosting works great and is free.  Just add a branch called \"gh-pages\" and put the website bits in there.  You can also use Jekyll to build a static site and when you check it in Github will automatically rebuild the site for you.  This way you can have the benefit of a content management system without the PHP/mod_perl/mod_python overhead and security issues.\n. ",
    "gdovicak": "I have been looking for a mac solution for a little while now (as you can see here) and discovered this app today and am excited to put this to use.\nI have experience with Jekyll (the link above is a Github Pages site using Jekyll). I'm not expert but I am capable of getting a site up and running and adding content. I would be more than happy to help with setting up a Github Pages site in Jekyll. I'll see what I can do about getting a Pages Jekyll site setup. I believe there may need to be a separate repo for it from this project.\n. I was just burned bad by this. I had entered 5 or 6 passwords over the course of the past month and never saved. My mac just crashed. I rebooted and opened MacPass only to realize I never saved any of them.\nFor me, autosave would be a great feature, but I would be very happy with a more obvious notification that I have unsaved changes.\nBecause of my workflows I tend not to think of MacPass as a utility that reads and writes kdbx files, but more a password manager regardless of where they are saved. I don't utilize different password files across different machines like many others probably do so the fact that I have to save a file is not obvious to me.\n. ",
    "dacrome": "Ok, this was fast! :+1: Thank you very much! Now my iPhone needs a little bit longer to decrypt the file ;)\n. ",
    "artem-zinnatullin": "Yeah, I know this :)\nAlso, sad that MacPass does not perform scrolling to created group, because\nonce I created about 10 groups because did not see any change on UI after\ncreating a group :D\n27 \u0430\u0432\u0433. 2014 \u0433. 20:03 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \"Yono Mittlefehldt\" \nnotifications@github.com \u043d\u0430\u043f\u0438\u0441\u0430\u043b:\n\nAs a workaround, you can drag them to reorder.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/229#issuecomment-53597025.\n. Great! \n\nI think it's time to use some Continuous Integration service to get builds after each commit :) I'd like to help you, but I am not familiar with Objective-C..\nAny way, @mstarke thank you very much!\n. ",
    "uhlhosting": "Any actions ongoing for this issue?\n. That would be great!\n. ",
    "zeliboba": "I also vote for two-way keychain integration, it would be really great.\n. ",
    "nmindz": "@mstarke It would be completely, absolutely, wonderfully awesome if you could make a 1-way import from iCloud Keychain.\nThe only thing keeping me from completely dropping iCloud Keychain is that I am never completely sure I've got all those pesky passwords somewhere else, from the time I used Safari to integrate and manage those passwords.\nAlso, on a sidenote (unrelated to this topic), a 1Password or CSV import would also make my day even brighter.\nThanks for the awesome MacPass!. ",
    "derhelge": "+1 for a 1-way import! :-). ",
    "mlehner616": "Just like it's up to the user to create a secure master password, I feel it\nshould be the responsibility of the user to securely store the key. I\nsuggest it be an option that is disabled by default perhaps with a\nwarning/notice of best practice that the key be stored securely. It's not\nreally harming security when I click \"Choose File...\" it takes me to the\nlast location I was at anyway with the key right there. It's simply\nremoving 3-4 clicks. That's my honest opinion. The point is, if an attacker\ngains access to a computer with a passwordless database he/she will be able\nto gain access to the database regardless by simply searching the computer\nfor a keyfile.\nI'm not suggesting storing the keyfile, just the last location of it\n(perhaps even masked, so one can't actually see the location).\nOn Fri, Sep 5, 2014 at 12:31 PM, Michael Starke notifications@github.com\nwrote:\n\nAddendum: I have no way of knowing for sure if the location of the key\nfile is a removable drive and thus I'm against storing it. I can enable the\nfeature but I'm unsure it's useful for most people.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/237#issuecomment-54670685.\n. \n",
    "flodaho": "Hi, \ni just want to push this again. \nI really love MacPass and think it really is the best OSX version of KeePass.\nOnly 2 things (both already mentioned): \n- directly go to search dialog after opening the program\n- key file is preselected. My use case: I sync the database over cloud service. So password only was kind of to unsafe for me. So i use a password plus a key file that is not on the cloud of course but on each device with keepass. I really would appreciate that the key file is always pre-selected... like the database already is. \nThanks for the program, \nFlorian\n. Oh .. i really embarrassed myself. Sorry for this unnecessary post. It only was one klick away.\n. ",
    "haimiko": "Agree with you in all respects except tge last because it already exists.\nYou can modify the preferences to save the preselected key file.\nOn Mar 21, 2015 8:33 AM, \"flodaho\" notifications@github.com wrote:\n\nHi,\ni just want to push this again.\nI really love MacPass and think it really is the best OSX version of\nKeePass.\nOnly 2 things (both already mentioned):\n-\ndirectly go to search dialog after opening the program\n   -\nkey file is preselected. My use case: I sync the database over cloud\n   service. So password only was kind of to unsafe for me. So i use a password\n   plus a key file that is not on the cloud of course but on each device with\n   keepass. I really would appreciate that the key file is always\n   pre-selected... like the database already is.\nThanks for the program,\nFlorian\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/237#issuecomment-84373671.\n. Excellent thank you.\nOn Aug 15, 2015 2:58 AM, \"Michael Belz\" notifications@github.com wrote:\nI thought about this already too, shouldn't be a big deal to implement.\nI'll have a look at it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/349#issuecomment-131323396.\n. any progress on this?  Would be an awesome feature and easy to do.\n. Same issue.  Used to work now doesn't.\n. Thank you for getting this fixed so fast.  You rock!\n. \n",
    "bannmann": "\nYou can modify the preferences to save the preselected key file.\n\nUnfortunately, in 0.7.3 this does not seem to work. I have enabled the option in the preferences window, and still the key file box is empty when starting MacPass!\nAlso, I want to second @flodaho: like him, I use a key file without a password, so having to disable that field each time I open the database is uncomfortable.\nBackground: the goal is not to protect against local attackers (that's what system encryption and locking the computer is for), but to make it hard for the sync provider (Google Drive, Dropbox and the like) to read my passwords. Sure, you may see this differently, but that's why it would be an option. Mine/@flodaho's use case is certainly not simply \"absolutely insecure\".\nNote: I even would like to make it so that the database is opened automatically when starting MacPass, without any form of user interaction, but that would probably be a separate feature request.. ",
    "lsgd": "I use the latest version of MacPass 0.5.1 which still has problems copying password references.\nUsernames work fine.\nHow can I fix it?\n. ",
    "metachris": "I've downloaded the latest release 0.4.1, and if I click on \"MacPass -> Check for Updates...\" it tells me I'm on the latest version.\n. ty. ",
    "unknowndevice": "I agree 'reasonable' is subjective and you're right about the slider becoming difficult to use. I just think it's weird to limit the password size since the whole point of a password manager is that it remembers passwords that are too long or complicated for someone to remember.\nObviously feel free to implement whatever you think is best.\n. ",
    "qwazix": "Indeed it does. When changing from dots to numbers the \"changed\" flag of the field resets, so afterwards, when focus is lost the value is not saved, unless you make another edit.\nSteps to reproduce\n- Create a new entry\n- Write 1234 in the password field\n- Click \"eye\"\n- Click elsewhere on the page (e.g. on another entry)\n- The password is lost\n. Version 0.4.1 (2534)\n. Yep it's similar. I'll wait and test 0.5 and if the issue is still there I will share the log. It indeed doesn't look like there's sensitive info in there, but I'm still reluctant to put the log under public scrutiny.\n. Yep, it's working! Many thanks!\n. Much appreciated.\n. ",
    "mrioan": "I am experiencing the very same behavior: password is not saved after unmasking it.\n. Same official version, no custom build\n. Thanks to you, for building the very best keepass experience for OS X :)\n. Seems to be working fine in Yosemite\n. ",
    "d-a-n": "I thought so. Did you contacted Apple? The app is already gone.\n. App is back https://itunes.apple.com/app/id921376706 Now you should contact Apple to remove the app for good.\n. ",
    "pavelgurvich": "How can I enable it? It's always grayed out in the interface.\n. @mstarke thanks for the tip. Will this be included in the main repo eventually? I can wait a bit.\n. ",
    "jayphizzle": "If someone could compile me a version with KeePassHttp support i would test it.\n(Moved from Win/Keepass to Mac/Macpass and the KeePassHttp feature is the only one missing)\nbtw: is there any plan to release beta nightlies ?\n. ",
    "mattmb": "@jamesrhurst really big thanks for working on this! Noticed two things. Browser plugins only seem to pick up entries in top level groups. Also new entries get created at the root, would be awesome to specify a default group in the config.\n. @jamesrhurst thanks! That works a treat :-)\n. ",
    "jaimeagudo": "Thank guys, I don't have a clue about Objective-C but let me know if I can help as tester or whatever, can't wait for this :) :+1: \n. Thanks @rfilmyer it works just fine for me with chromeIpass on Chrome 45.0.2435.0 canary (64-bit) Mac OS 10.10.3  :boom:  :+1: \n. ",
    "rfilmyer": "@jamesrhurst James, would you remind rebasing again so I can try this with 0.5.1?\n. That explains it, I haven't checked since yesterday :p\n. @jamesrhurst I'm having trouble building your fork on 10.10. I loaded the 10.8 SDK, but it fails building at this line in the HNHUi submodule.\n. Never mind, I checked out your fork's master instead of the KeyPassHTTPbranch.\nNow everything builds fine.\n. Also as an update, I've been using keepasshttp for 2 months without problems. Next step is going to be trying to use it through an nginx proxy.\n. @shaded2\nWe're all using jamesrhurst's keepasshttp fork. I think we've been all building it with xcode, but (iirc) I should be able to just send you my built binary.\n. Sure.\nJust to confirm, after cloning the repository, you're not able to git checkout keepasshttp to switch over to the right branch of James Hurst's fork?\n. And if I'm not mistaken, this should work for you guys. It's the app built from the latest commits.\nI just zipped it up, so I'm not sure if anything will break. It's been reliable for me so far.\nhttps://www.dropbox.com/s/2g0y62k9nvw4g6x/MacPass.zip?dl=0 (I'll make sure to keep this up, at least through 2015).\n. ",
    "sheavner": "@jamesrhurst I've been using the http integration for a week or so with chrome latest on Yosemite 10.10.3 and no problems so far.   I do have a feature request tho - to be able to ignore some folders.   I've migrated over from KeePassX v0.43 or something that was pretty old and am still using KP1 files because they work everywhere I need them to work.   KPX and maybe some of my other tools save off every modification to a Backups group and there are multiple copies of each entry.   I'd like to be able to configure it to ignore the Backups folder.\n@mstarke It would also be nice if it didn't prompt me everytime I save to KP1 that I'm losing information.  Am I really known to be losing information at this point or does it just say that with every save?\n. ",
    "dipson": "@jamesrhurst Thanks for your work on this! Working great so far.\n. ",
    "shaded2": "can someone post or send me a build for testing?\n. Thanks for the zip @rfilmyer. seems to be working well so far. I can finally unpin keepassx from my dock!\n. ",
    "sana128": "can someone give me  detailed instructions to compile that fork? its giving me so many errors (but work) when I try to compile. Im a noob and dont really understand what im doing. \n. ",
    "max-b": "Built the @jameshurst keepasshttp fork with xcode 4 for yosemite and working fine for me with chromeipass.\nDoes require a bit of tinkering with xcode build settings. I think the default in the repo is to build for 10.8. @shaded2 if you're still interested in walking through the build process we could set up some out of band chat.\n. ",
    "nazriel": "Works very well with \nhttps://github.com/mmichaa/passafari.safariextension/releases/tag/v1.0.beta2\n@jameshurst great job :)\n@mstarke maybe there's a way to introduce better workflow so pull requests like this one, which works fine won't rot?\nNow I just hope that Safari extension will mature enough, because at the moment it is rather limited compared to the ones for Chromium/Firefox :)\n. @mstarke I perfectly understand you, lack of the time is also a big issue for me.\nAlthough I had no idea about 10.8 breakage with this PR so I'm sorry for my ignorance in this regard.\nI must admit that I'm fairly new to OSX/iOS world as a user and programmer.\nAnyways, cheers up and keep up good work, MacPass is already great at this stage :+1: \n. @mstarke sure, I will try to dig into.\nProbably will be good occasion to get my hands \"dirty\" with Objective-C and/or Swift as I had no chance before to program in those 2.\nI will try to do some research about plugin systems in other application like this one and see how it is done there.\n. @mstarke I think it's ok to experiment with API at the begging - but it has to be stated explicitly that API isn't set in stone yet. So probably no worries on this ground.\nAbout plugin HAVOC...\nI think if we go with \"Central Hub\" route for plugins base, we probably could introduce some review process and accept plugins that seem to be safe.\nSo in overall:\nUsers may install whatever plugins they want, but if they want to be sure that they are tested and safe they should only stick to plugins registered at the plugin HUB.\nSo probably:\nCentral HUB as web service with WEB frontend that will be browseable + API that could be fetched from GUI form in application itself, providing easy way to install plugins in fast manner without firing up Browser.\nWhat you think?\nThanks for the link, I will look into this today.\n. ",
    "sir-brickalot": "Having trouble using the @jameshurst fork:\nI am using it in combination with PasslFox and I never get a match. Using the context menu \"Fill User & Pass\" opens a window to choose from a couple of entries. All those entries appear to be in the 'Recycle Bin' in MacPass. (Sidenote: Emptying the trash needs a 'Save file...' too, to really delete the files.)\nI used the binary from @rfilmyer because I didn't manage to compile from source.\nSystem: 10.10.3 (OSX86)\nAny idea?\n. @Floppy the behaviour is the same no matter if URL is present or not. Strange is that as long as there are entries in the trash, EVERY entry will be shown as a n option. They don't have to have any correlation to the actual website.\nJust tested again with just one key in the trash and fields get actually filled even if it has no similarity to the site. Not the same behaviour on every site. Sometimes I get the \"No login found.\"-warning.\nReproduceable:\n- create a fake key with random content and place it in the trash (only one item in trash!)\n- open https://my.asos.com/signin and choose \"Fill User & Pass\"\n(sorry for the stupid domain ;) )\n. This is the behaviour on my system right now:\n- MacPass settings/Lock while idle = 30 Min.\n- Database is locked after 30 mins\n- I open up a login page on FF or Chrome and right-click to \"Fill user name and password\" \n-> Nothing happens. The fields just won't get filled.\nWhat should happen (IMO):\n- Database is locked\n- I open up a login page on FF or Chrome an right-click to \"Fill user name and password\"\n-> MacPass window pops up and asks for master password OR\n-> info pop up \"Please unlock your database\"\nIf NOTHING is not the inteded behaviour where could be the problem on my end?. 0.6.2\nOSX 10.11.6\nFF latest\nChrom latest\nUpdate:\nOkay now I see and error for the first time (because I'm blind???): Unknown KeepassHttp error: 400 in FF. ",
    "robbie-c": "Can I help with this at all? Tried to compile https://github.com/jameshurst/MacPass/tree/keepasshttp and got a build error. Here is exactly what I did:\ngit clone https://github.com/jameshurst/MacPass.git\ncd MacPass/\ngit checkout keepasshttp\ngit submodule init\ngit submodule update\nopen MacPass.xcodeproj/\nThen when I build it fails with the following error:\n/Users/MyName/Projects/MacPass/KeePassKit/Core/KPKEntry.m:618:21: Property 'key' not found on object of type 'KPKBinary *'\nI'm on OS X Yosemite 10.10.5, Xcode 7.0.1, compiling against 10.11.\nHappy to help out e.g. if you can't reproduce this yourselves. Also in general. This is a really awesome project and I'm grateful for all the work that must have gone into it!\n. ",
    "sebastianrothe": "KPKBinary has the following properties only, data and name. I think the property should be name, not key.\n. ",
    "rodneyrod": "I'm building it for 10.10 with XCode 7.1 too, I had an error with the KPKEntry.m file too, but editing as per above enabled it to build.\nHowever, the option to enable the KeepassHttp server is greyed out and there seems to be no way to enable it.\nAlso, is integration with KeeFox being worked on?\n. ",
    "Zyphrax": ":+1: minimum of 10.9 is fine, people with old OSX versions will find alternatives.\nDon't let it keep you from using the latest and greatest :smiley: \nLooking forward to a new release version, thanks for your great work!\n. ",
    "zsabay": "It's fine :+1: \n. ",
    "krakon": ":+1:\n. +1\n. +1\n. ",
    "huangyg11": "I apologize for duplicate. but i have search for 'sync' with no related issue. \nToday I try for 'synchronisation', and find the #83.\n. ",
    "pimlottc": "Cool, thanks.  The one suggestion I'd have though, is why not just always save the settings automatically?  If the user changed the parameters (and didn't hit cancel) then presumably it was for a reason.  It would simplify the UI and you could still use the reset button if you didn't really want to save it.\n. ",
    "thomscode": "Sure, I'd be happy to change the format. I'm unfamiliar with the needed resolutions and just used Apple's icon composer.\nWhat sizes would you like?\nOn Nov 4, 2014, at 1:31 AM, Michael Starke notifications@github.com wrote:\nI'd gladly merge but please make the resources available (preferably as a folder with png images with the naming @x resolution naming). And I think you're missing some resolutions.\n\u2014\nReply to this email directly or view it on GitHub.=\n. I found the icons you already had and used those sizes you now have the following sizes in PNG\n16x16\n16x16@2x\n32x32\n32x32@2x\n128x128\n128x128@2x\n256x256\n256x256@2x\n512x512\n512x512@2x\n. Thom Williams\nThanks\n. Yes, I'm using 0.4.1. Sorry for not specifying what version I was using. \nGlad to know it's fixed. I missed #118.\nOn Nov 4, 2014, at 1:24 AM, Michael Starke notifications@github.com wrote:\nAre you using 0.4.1? If so, this behaviour is known an fixed in master. If not, then master has a bug and you can reopen the issue.\nDuplicate of #118\n\u2014\nReply to this email directly or view it on GitHub.=\n. ",
    "ochorocho": "Hey,\nsame for me.\nI'm running latest MacOS 10.10 and can only select the first 4 icons.\nCouldn't find schema the icons get selected, it looks just random.\n. ok ... thanks! \nMy Version 0.4.1 (2534)\nThanks for creating MacPass!\n. is your database on a network mount?\n. my guess was, that sometimes the connection to the mount could cause issues. But that seems not to be the case here. ...\n. i can't narrow it down (not allowed to do it at work and can't take this DB back home). Sorry. :-(\nI will watch out for the next time when i bump into this to provide more specific information.\nThanks! \n. ",
    "tanob": "Just noticed #245... :-) \nDo you still need help to enable Travis CI?\n. > I wanted to use a special accout to get travis integrated, this however would mean to move the repository to an organization and that is something I'm not really keen since it will break a lot of old links.\nI've never done it but looks like Github will handle it by redirecting the links to the new repo within the org:\nhttps://help.github.com/articles/transferring-a-repository/\nMaybe you can spike the idea by creating another repo in your user's account and try to move it to an org and see how it actually works.\n\nRegarding automated release builds - sparkle requires me to either sign the application with my developer id (which is not possible via travis as far as I know) or to sign the updates with my private key generated by sparkle. If this has to work automatically the privat key gets exposed making the whole process useless. Or am I getting something really wrong?\n\nI get it and you can actually implement that with Travis, it supports encryption of data in .travis.yml and also encryption of files that will be used in the build process.\n\nAnother solution might be to just use this for nightly builds that anyone can download and properly signed releases will get vented through sparkle updates.\n\nI think that's also fine, it will allow us to see the builds in Travis working and we can make it better in the future, baby steps :-)\n. > I use custom forks for Sparkle to set \"Skip install\" in the Project. You're referring to the offical pod, right?\nYes, sorry... I didn't check the fork to see the changes and thought it was ok :-) Is the \"Skip install\" something that every project that uses Sparkle needs to do? What are the side effects of not having it?\n\nI'm always changing stuff in KeePassKit and some other submodules I forked or created. If I would switch to a pod, I then would have to use separate clones to update the code base, bump the version number, etc. for all the dev-stuff is cumbersome as I cannot simply edit it all in the MacPass Project. This might be stupid simple and I'm totally missing the point and there is actually a simple soltution to make this work nicely, but I do not see it.\n\nThose are valid concerns, the tool needs to add benefits to the project and developers should feel comfortable with it. Maybe it doesn't need to be all CocoaPods vs all submodules, we could have them both. CocoaPods for external dependencies and submodules for stuff you have control. But that makes me wonder why you have external repositories for them, do you expect others to use them?\nOne solution for the local development of things you control is to use :path => '/filesystem/path/to/dependency/', as mentioned here.\n. ",
    "kitzler-walli": "Currently running 10.10.1 with XCode Version 6.1 (6A1052d)\n. Seems like it works now - case closed. Thx for the bugfix.\n. Works now - bug fixed!\n. Today I discovered another trigger for application hang.\nAdding a new entry to a group with enough items you have to scroll to see'em the application hangs.\nAdding a new entry to a group with just 3 items in them the new entry is created just fine.. Me too\n. ",
    "anshumans": "Oh just saw in the database settings page that you can control the duration between recommending and forcing key change (default was set to 0 days).\n. It's definitely a good way to find out about features :)  I actually didn't about it till that pop-up started coming up.\n. ",
    "tflo": "https://panic.com/extras/ripoff/\n. Just noticed this bug too. With Version 0.7 (20171019141024-continuous).\n\u2013\u00a0Tom. Yep, support for dragging multiple items to a different folder would be great!. Yes, an option to exclude look-alike characters would be handy. I often catch myself recreating a password when it contains to many similar characters, especially when I know there might be chances that I will have to enter that password by hand.. Just for info: The current version of KeePassXC does CSV import pretty well. I successfully imported from LastPass and 1Password.\nSince this is a feature you need maybe once every couple of years, or even only once in your life, I would be pleased to not see the development of MacPass focusing on that feature. In the meantime it should be legit to \u201cabuse\u201d KeePassXC solely for that feature ;)\n\u2013 Tom. > the last state will get pushed to history but nothing more until you change to another entry/group and get to that entry again\nAh, OK, got it now. I knew I was missing something ;)  \n\nOther clients like 1Password use special consideration for password fields and store every change on them and just do not record any changes on other fields.\n\nThis is not good at all. Often I have important stuff in the Notes field, sometimes as important as the password itself. (For example the phone PIN and card PIN associated with a the bank account of a banking login entry.)\n\nthe default settings for Keepass containers (10 history entries)\n\nIn KeePassXC I can set the max. history items/size. If I open a database with an entry with >10 history entries in MacPass the \"overflowing\" entries are preserved. However I can't set the max. items/size in MacPass; the setting is there (in DB Settings), but I can't enter any values though it is not dimmed.\nAs an aside: In the same settings sheet, two lines below, it says \"Empty Recycle Bin on Quit\". The option is dimmed and checked, but the Trash is not emptied on quit. (Which is a good thing, of course; but the selected checkbox is a bit misleading.)\n\nCan you point me to some things you feel are missing in the current solution? Do you want to know and have stored all the passwords you ever created? Might a change in the behaviour to work the same way as before but make every change to a password field record additional history entries solve this for you?\n\nI think your solution of pushing to history only once per entry-editing session is fine. I was just confused as I didn't see the history increase as I hit \u2318S.\nA customizable max. history would be useful though.\n\u2013\u00a0Tom\n. Looks fine now! Also the fixed recycle bin thingy.\nThank you so much for your work!\n\u2013\u00a0Tom. Thanks for the explanation.\nI've seen the guy on the keepassxc repo has tagged it as high priority bug. It seems my question was not as naive as I thought, just posted on the wrong repo ;)\n\nI have no clue why KeePassXC opts to not do this since it weakens the database against attacks.\n\nDo you mean the KeePassXC database is weakened while open, or always, also when closed?\n\u2013\u00a0Tom\n. Good idea ;) I was already wondering what it might be for\u2026. > The automatic updater\nThanks for pointing to the updater. Somehow it never worked for me, but now it does :-)\n(Not automatically, but from the menu.)\n\u2013\u00a0Tom. > but anyway, i tried the preferences approach and it does not seem to be working...\n\nmaybe it does not work for context menus? no idea.\n\nYes, I think we can\u2019t assign shortcuts to items in the contextual menu.\nThe problem is that the Copy Password entry is missing in the Edit menu. If @mstarke added the command there it shouldn\u2019t be a problem to assign a shortcut.\nOtherwise you could always forward \u2318C to \u2325\u2318 C with the help of tools like Keyboard Maestro or BetterTouchTool. Another way is via AppleScript; then wrap the script in a System Service and assign the shortcut to that Service.. You are right, it works. It needed several restarts of the app to make it work, that\u2019s why I thought it was not possible. \nNot surprising, if I use \u2318C it will steel the \u2318C from the normal Copy. Unless I assign something different to the normal Copy:\n\n\n. Here is a little AppleScript solution that gives you a \u201cuniversal\u201d \u2318C shortcut.\n\nWhile the main table is focused it copies the password from the selected entry. \nWhile in the Notes field or the Title field etc. it works as normal text copy.\n\napplescript\ntell application \"System Events\"\n  tell application process \"MacPass\"\n    # Test if we\u2019re in the main table view\n    set isFocused to focused of table 1 of scroll area 2 of splitter group 1 of window 1\n  end tell\n  if isFocused then\n    # If in the table we want to copy the PW\n    keystroke \"c\" using {option down, command down}\n  else\n    # Otherwise we want to copy normally\n    # This must correspond to your custom shortcut for \"normal\" Copy (here: \u2303\u2318C)\n    keystroke \"c\" using {control down, command down}\n  end if\nend tell\n\nSave the AppleScript as Service in Automator. Make it accessible only to MacPass:\n\n\n\nAssign the \u2318C shortcut to the Service:\n\n\n\nFinally assign \u2303\u2318C to the normal Copy command (the one that appears in the Edit menu):\n\n\nYou may have to give Accessibility access to MacPass in System Preferences > Security & Privacy.\nEnjoy!\n. ",
    "siddhartha-gupta": "Thanks for the prompt reply and the mentioned link solved the issue. Thanks once again\n. ",
    "dnv": "By \"weird\" I meant that I really did not expect (or want) a time expiration feature inside a password manager. I believe it belongs to the system you input your password into.\n\nWhat diagnostics do you want me to run or things to try?\n. ",
    "yarongol": "OK. The Window Title did it. Thanks. \nIn Windows I heavily rely on keepass Windows associations and my  \"Title\" entries are many times unrelated to the chrome window.  I found that Windows Associations tend to be more resilient to website changes but more importantly: they are needed when a single sequence is used for many pages (mostly in corporate scenarios for intranet access)\nAnother thing I noted is that autotype sequences with custom fields are not working. e.g. {USERNAME}{TAB}{PASSWORD}{TAB}{S:Custom 3}{ENTER}. Might be worth mentioning in the status page.\nSetting the actual data within the sequence DOES work. e.g. {USERNAME}{TAB}12593{TAB}{PASSWORD}{ENTER} which is a reasonable workaround\nTaking the opportunity to thank you for this great tool. \n. Did a git pull and ran. I don't think its fixed. I actually created a movie and got the picture of the custom field being inserted: \n\nNote that the custom field name is {W: Custom 3} the \" 3\" was not inserted. Maybe this is the problem\n. ",
    "BlackSwiftSoftware": "Hi. I don't seem to be able to get AutoType to work. I'm not a developer, but at least a savvy user. I tried on an existing database and using a new database as you describe above.\nI tried changing the keyboard shortcut. I tried shutting down every other program I could think of that registers global shortcuts. Nothing worked. Any ideas on what I could do to troubleshoot or test?\nI don't know if this is related, but when I go to Fix Autotype, there are NO entries in the window. It's blank. \nI am using the latest version of MacPass - 0.5.1 - on OS X Yosemite.\nThanks.\n. So this is odd. Sure enough, if the database is locked, and I hit the auto type shortcut, the OS switches to MacPass. But when I'm NOT locked, the shortcut does nothing. I select an entry, hit the shortcut, and nothing happens. If I put my focus in a browser window and hit the auto-type shortcut, nothing happens. Anything I should try?\n. I'm familiar with how KeePass on Windows works, but I may not be using it to it's full capability. Here's what I do in Keepass on Windows (and what I was trying in MacPass):\n1. Open the login screen in a browser. (example: http://www.website.com/login). Put cursor in first field.\n2. Find the record in KeepPass. Hit Ctrl V.\n3. KeePass switches back to the browser (as if I'd hit control-tab), types the username, tab, the password, and hits enter.\nI was trying to do the same thing in MacPass. I guess this isn't suppose to work? It would be pretty nice if it did. Also consistent with KeePass.\nYour thoughts?\nAlso, I was able to make autotype work on a website where the titles matched, so that's good. But I find this method very cumbersome because it requires carefully trying to make a record match a website. The website then changes, autotype doesn't work, uggh. I like my workflow better because it always works. I just find the record in my password database and one keystroke has me logged in.\nIn other news, I did have an instance today where MacPass stopped responding to the autotype. The program was locked but didn't gain focus. Restarting the program made it respond again. Not sure what that was about.\n. Would it be helpful to file a feature request then? BTW, I'd really be happy to help with testing. I'm pretty good at spotting problems, inconsistencies, etc and articulating them. I really appreciate the project. I've wanted a good KeePass implementation on the Mac for a long time.\n. Sorry to be dense, but I looked above the commit where you said a \"sort-of-working version is done.\" This commit states \"Fixed more issue with invalid XML Characters corrupting database.\" What does this have to do with simple autotype? Did you reference the wrong commit?\n. I hate to ask here, as I'm not sure whining for a status update is an appropriate use of the issue tracker. Any chance this could get implemented sooner rather than later? It's the one thing that really makes using MacPass problematic for me. It seems to me that two things are needed:\n1.) Save the database onChange.\n2.) When locking the DB, close out of it, so that when you sign back in, it's the same as opening the DB. (This way, if the DB file has changed, you'll be opening the latest version.)\nI realize how much time and effort it takes to provide software for free, so I don't want to act like you owe me anything. I'm just really hoping for this one little feature...\nThanks for considering it.\n. ",
    "rholloway": "Hey,\nJust verifying I'm not missing a working feature somehow. After reading this thread and some change logs, it looks like global auto-type is partially functional. I am able to use the 'title' field and 'autotype sequence' field and it works with global hot key.\nIs the known not functioning part as of 0.5.1 (current latest release) the window associations, window title, and window sequence fields?\nIn my keepass use case, I use global auto-type heavily. It would almost work here in 0.5.1, except the vast majority of my entries the 'title' field is for my own personal use and identification of that entry, rather than the window title of the page I want to log into. In keepass, I used the \"Auto-Type-Window\" command for each entry to flag the actual window title. Unfortunately for me, I have hundreds of entries and using 'title' to represent the window title will make it difficult to identify my own database entries, because I have no control over the window title some website chooses to use.\nOther than this one feature, macpass has been great so far! It's this one last global auto-type with \"separate\" control over window title from entry title that is really the only missing piece for me.\n. ",
    "boeren": "For my system (OSX 10.10.3) there is still a problem in the current master concerning autotype. The last 0.5.1 alpha (2556) works like a charm, but the last master releases always lower-case the first letter of the password thus leading into a faulty password... Passwords with a lower-case letter in the beginning actually work.\n. ",
    "DarwinAwardWinner": "One issue I've run into using autotype is that sometimes I also have a password saved in my browser, and it will also autofill the password on the {TAB} that switches from the username field to the password field, and the password will be typed twice and the login will fail. In order to get around this, I need to use an autotype sequence of{CLEARFIELD}{USERNAME}{TAB}{DELAY 20}{CLEARFIELD}{PASSWORD}{ENTER}. (The delay is to give the browser tome to complete its autofill. It's probably a race condition, and I have no idea of what the appropriate delay is.) Is there any way I can make this default for all entries instead of manually editing each one? (Alternately, can something like this become the builtin default autotype? Those CLEARFIELDs make it a lot more robust, in case you started typing the username before remembering to use autotype.\n. Changing the autotype sequence on the root group is perfect. Thanks.\n. ",
    "jpduckwo": "Hey, I'm a bit confused if the Ctrl-V autotype style functionality is working or not? I can't seem to get it working if it is...\nAwesome work by the way, looks nicer than the original ;)\n. ",
    "michaelblyons": "Autotype\nThanks for the Autotype wiki page. It will be super helpful for people who are new to KeePass.\nAs one of those people, I have a question about it: I don't quite understand at the end of the last section why Entry A is used. Based on the explanation, I would expect Entry B to be used. I could be misunderstanding, though.\nThere are a couple of typos in the wiki as well. If you want, I can also proofread the page.\nControl sequences\nCan you make a wiki page with a table of all the control sequences and what they do? (e.g. {TAB}, {ENTER}, etc.) Is there, for instance, a {WAIT:10} control or other features I just wouldn't know about? I can open a new issue if you'd prefer.\n. Can future upvoters just thumbs-up the first post, rather than adding a \"+1\" comment, please?\n. Duplicate of #313. Duplicate of #458?. ",
    "oehm-smith": "Wouldn't it be better to match on URL first since it is more likely to \nbe more accurate as Titles can be fairly 'loose' and ill-defined?\nWith the 'which database has the password', how about Macpass asks which \ndatabases from the recently used list?\nOn 10/11/16 07:39, Michael Starke wrote:\n\n@akcasoy https://github.com/akcasoy I have encountered some cases \nwhere the hotkey is not triggered correctly. Sometimes enabling and \ndisabling global autotype fixes that. I should investigate this \nfurther. MacPass of course must run but the database can be locked. If \nyou invoke autotype and all databases are locked, MacPass will print \nyou to unlock at least one. If you do not unlock the database \ncontaining the required entry and another one is unlocked, autotype \nwill fail as it's not asking for all databases to be unlocked. MacPass \nalways reports feedback when autotype was invoked even if no match was \nfound to be able to see if the keystroke worked. You do not need to \nadd the hot key to the system preferences.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub \nhttps://github.com/mstarke/MacPass/issues/279#issuecomment-259520268, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/ACcCs0ZI5DyM8dMBGhcwkMyVtPhWVGvpks5q8i-OgaJpZM4DFijs.\n. That makes sense.\n\nOn 10/11/16 22:23, Michael Starke wrote:\n\n@oehm-smith https://github.com/oehm-smith might be but I try to stay \ncompatible with KeePass and KeePass matches in the that order.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub \nhttps://github.com/mstarke/MacPass/issues/279#issuecomment-259666376, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/ACcCs6Jk6IPD-A_2GyTRRWopfSjiobP6ks5q8v7LgaJpZM4DFijs.\n. Yep agree.  Adding a PW will be in edit mode by default.. To me the biggest issue is creating PWs from an iOS app.  I use MiniKeepPass but it has a copy of the DB I have in Dropbox (i have the keyfile separately in iCloud and this works a treat).  So creating a PW in iOS is pointless.  It looks like KyPass does write to the cloud file.  This should solve my problems - thanks @georgesnow .\n\nANd I'm curios @georgesnow if your \"forget the other part\" comment means to forget your Kypass discussion.  If so, how does WiFi sync work to solve these problems?. A downside of Kypass is that it would seem to be closed source,m which is always a big no-no in security related applications.  Could be a NSA stooge app!. Do you mean the password file?  The keyfile is not the problem since you won't change it very often.  You just want it separate to the pw file.  It is the PW file you need to get into the mobile app via some sync solution.. Sweet thanks @georgesnow.  @mstarke do you have any comments about the encryption side of this?. KDB - This is the original databases I used with KeepassX.  I can see benefit in converting to kdbx though is there a way then to merge any entries scattered across the various folders and kill the duplicates?. Great thanks Michael.  To clarify - the passwords are not duplicated, only the folders.. (I replied this in email yesterday but it didn't seem to make it here.  So adding directly)\nHi Michael,\nWhat will I gain from running the latest version?  What will happen with duplicates given the 'problems'?  Will I still need to manually resolve the duplicate groups (eg. consolidate entries) as you suggested in a previous post?  And if so might it be just as good to do this fix and update to next version when its a proper release?  Or won't this problem (in KDBX - I saved as this already) be fixed until that new code is used?  And so any manual work will need to be redone at a later date (when the release comes out)?  Apologies for so many questions.\nThanks,\nBrooke. Ok I will do.  What should I look for?\nHere are my results so far:\n KDB file - opens fine.  There are so many duplicate folders and entries in there that I say this doesn't create more\n KDBX file - ditto\nI will perform the clean up when I can and try it again.  \nre: the mistake - no worries Michael; I can't complain about free software that does an excellent job.. Thanks a lot Michael,\nYou're a champ!\nCheers,\nBrooke\nOn 14/9/18 10:11 pm, Michael Starke wrote:\n\nWorks-for-all solution by matching groups by name is working. Refer to \nKeePassKit #39 https://github.com/MacPass/KeePassKit/issues/39 for \ndetails.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub \nhttps://github.com/MacPass/MacPass/issues/818#issuecomment-421339455, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/ACcCs1ZEwLP_OSlKa1VuEdPWUcX658uAks5ua5z7gaJpZM4Viq85.\n\n\n. Hi Michael,\nI finally found time to clean up my database.  I tested it and it works as well.  I can now see the sync / merge functionality working.  So nice.\nCheers,\nBrooke. Sounds good.\u00a0 KDB is legacy right?\u00a0 Perhaps the problem is that Linux \ndoesn't support KDBX.\nOn 1/11/18 5:43 pm, Michael Starke wrote:\n\nThank you for testing it out again. I've since started adding custom \nextensions to back-port features of KDBX to KDB but it's not final. \nThis will however only allow for MacPass to better merge KDB files. \nAll other clients will probably never support the custom extensions.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub \nhttps://github.com/MacPass/MacPass/issues/818#issuecomment-434947417, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/ACcCs31ggwmWW2WLc_ub-SyoSEeXJU-Aks5uqpf0gaJpZM4Viq85.\n\n\n. Its good of you to dot this \"eye\" / cross the \"tee\" though it seems it isn't too necessary.  Unless there are other reasons people would want to use the KDB format?. I meant its nice that you are considering all options (the corner cases).  I just wondered whether this work is really required - in your reply you said that you feel its important to enhance the user experience.  All good.  Thanks for your efforts.. I agree.  I all too often have to be vigilant when working with MacPass.  I haven't yet changed / deleted something inadvertently.  I think / hope :) . ",
    "LightServant": "Global Autotype does again not work for me. \nWenn I evoke the keyboard-shortcut nothing happens. Window Titles, and URL match at least 1 pattern in my Database.\nThe Mac Console raises an entry with the message \"An uncaught exception was raised\" as well as two more entries with messages \"private\".  Not very enlighting, but I can't seem to find anything more in the log-files. \nI'm currently working with the binary version 0.6.2 (12420).\nThanks in advance! . Thanks for the quick response! So are you suggesting I should built from source or is 0.7 to be released soon anyway? . I've worked with a compiled pull from GitHub which i suppose is 0.7 and on my macOS Sierra with Safari Global Autotype return the wrong Window Title. I think it returns the wrong window / process in focus as it always searches for some window called Focus Proxy. \nWith Firefox it's the same. Though sometime the wrong tab title is returned \nHappy Easter by the way . I'm having the same issue with global Autotype in Safari. Firefox works just fine, but it appears actual versions of safari return the value \"Focus Proxy\" as Window-Title instead of the current Tab Title. Hence, there are no machtes.. As a follow up: Firefox doesn't work as well. It seems the window-title is fechted from the first tab in the window. So if I have a firefox session with multiple tabs and I have a first tab with e.g. Facebook and a second tab with Github, and I want to perform global autotype on the second tab, macpass will find Facebook as a match and fill in the wrong account credentials. . ",
    "cmcginty": "Is .7 going to be released? It's still clear how to get auto-type working. What does \"Title\" even match? Can someone post an example that works for them? Will autotype work in iTerm2 or just a browser?. ",
    "roland-d": "Hey guys, a fresh Macpass user here. I don't have a problem anymore but something I encountered and wish to share with you. I had set my Autotype key sequence to ALT-SHIFT-A on my Mac and this never triggered the Autotype function. Switched the sequence to CTRL-SHIFT-A and things started working for me. Thank you for a great product.\nSpecs are:\nMacBook Pro (Retina, 15-inch, Mid 2014)\nMACOS 10.13.1\nMacPass Version 0.7.1 (20171118111152-continuous). @mstarke Ah thanks for that explanation. I am now used to the CTRL-SHIFT-A :). ",
    "SashaOv": "+1\nOne more use case for this feature (quite frequent for me): \n1. Change entry without saving\n2. Switch out of the app and continue work\n3. After some time, close the application. It prompts you to save. You pick \"save\"\n4. Because the database is locked, you cannot save and lose the changes\n. I thought about filing this as a separate issue but couldn't come up with a decent way to fix it:\n1. Keep the password around in case you need it for saving -- bad security,\n2. Ask for password again before saving -- bad UX (has to be done anyways to fix the issue).\n3. Secure save log that can be re-opened and re-applied as soon as the original file is opened -- too much sweat for little gain. For this sort of effort, you can have autosave and undo (versioning).\n. ",
    "jeffmcneill": "Autosave on not locking and update-notify would be the magic combo for me. I've got at least two desktops (upstairs/downstairs) that could have a database open as well as a mobile device using Kypass. Autosave would really help and then for the other opened db getting a \"database has updated / reload?\" message, or even better simply auto-reloading. That way both systems will always be concurrent.\n. Hi @mstarke I still get conflicts with 0.6.2 and as far as I can tell there is no locking. Can this feature be better described so we can check to see if and when it is working?\n\n. @mstarke is this issue dealt with by the #443 implementation? Seems similar, or perhaps the fix is similar.\n. See also #443 and #442 for more focus issues\n. @mstarke Would really like to test out this feature in a new alpha release. \n. KeepassXC does it properly, and is cross-platform so works on OSX.. Exception Name: NSRangeException\nDescription: *** -[NSIndexSet initWithIndexesInRange:]: Range {9223372036854775807, 1} exceeds maximum index value of NSNotFound - 1\nUser Info: (null)\n0   CoreFoundation                      0x00007fff9230a03c exceptionPreprocess + 172\n1   libobjc.A.dylib                     0x00007fff9060576e objc_exception_throw + 43\n2   CoreFoundation                      0x00007fff92309eed +[NSException raise:format:] + 205\n3   Foundation                          0x00007fff909b40cb -[NSIndexSet initWithIndexesInRange:] + 138\n4   Foundation                          0x00007fff909d229a +[NSIndexSet indexSetWithIndex:] + 43\n5   MacPass                             0x0000000101792f9d -[MPEntryViewController _didAddItem:] + 421\n6   CoreFoundation                      0x00007fff922c645c __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER + 12\n7   CoreFoundation                      0x00007fff921b6634 _CFXNotificationPost + 3140\n8   Foundation                          0x00007fff9099aaa1 -[NSNotificationCenter postNotificationName:object:userInfo:] + 66\n9   MacPass                             0x00000001017a8af8 -[MPDocument createEntry:] + 855\n10  MacPass                             0x000000010178b785 -[MPDocumentWindowController createEntry:] + 126\n11  libsystem_trace.dylib               0x00007fff93411cd7 _os_activity_initiate + 75\n12  AppKit                              0x00007fff86966eb1 -[NSApplication sendAction:to:from:] + 452\n13  AppKit                              0x00007fff8697c946 -[NSControl sendAction:to:] + 86\n14  AppKit                              0x00007fff8697c862 __26-[NSCell _sendActionFrom:]_block_invoke + 131\n15  libsystem_trace.dylib               0x00007fff93411cd7 _os_activity_initiate + 75\n16  AppKit                              0x00007fff8697c7bf -[NSCell _sendActionFrom:] + 144\n17  AppKit                              0x00007fff8697c715 -[NSSegmentedCell _sendActionFrom:] + 105\n18  libsystem_trace.dylib               0x00007fff93411cd7 _os_activity_initiate + 75\n19  AppKit                              0x00007fff8697acb3 -[NSCell trackMouse:inRect:ofView:untilMouseUp:] + 2821\n20  AppKit                              0x00007fff86979de1 -[NSSegmentedCell trackMouse:inRect:ofView:untilMouseUp:] + 1506\n21  AppKit                              0x00007fff86979366 -[NSControl mouseDown:] + 714\n22  AppKit                              0x00007fff86ee32dc -[NSWindow _reallySendEvent:isDelayedEvent:] + 14125\n23  AppKit                              0x00007fff86872c86 -[NSWindow sendEvent:] + 470\n24  AppKit                              0x00007fff8686f212 -[NSApplication sendEvent:] + 2504\n25  AppKit                              0x00007fff86798b68 -[NSApplication run] + 711\n26  AppKit                              0x00007fff86715244 NSApplicationMain + 1832\n27  libdyld.dylib                       0x00007fff8bc8d5c9 start + 1\n28  ???                                 0x0000000000000001 0x0 + 1\n. Note: the steps need another first step:\n- Click on Root (or some folder). This enables the +add button.\n- then search for something\n- then click the +add button\n  \n. 0.6.2\nSteps:\n1. Open MacPass\n\n1. Click on Root folder (you may need entries in root, I have)\n\n1. Click in the Search bar, type in search string, and type Enter, see search results\n\n1. Click the + Add Entry button in the upper left hand corner of the screen\n\nNote, I am on Yosemite 10.10.5\n. ",
    "jinnko": "I'm using 0.6.2 (12420) and my laptop just crashed, losing a whole series of changes I made over a couple of hours :(\nMacPass didn't lock within the time I was working.  Not sure exactly what \"modification notification\" refers to.\n. I'd also like to see such a feature.  I'd suggest it makes sense cuz with my browsers connected via MacPassHTTP I'm not really using MacPass as an application but rather for the service it's providing.\nThe point about the menu bar makes sense which made me think of how other apps manage this and a good example I found is LittleSnitch: there's a modular window that's triggered by the menu bar icon, but if you want to do anything more involved than basic interactions you still have to launch the main app.\nAnother example would be the native OSX Keychain Access application that has a menu bar feature with limited options in the drop down allowing you to lock/unlock keychains and launch the app.\n. ",
    "viktor-sc": "Hi,\nis there a way to disable the autosave feature? I like to have the control about it...\nThanks,\nViktor. ",
    "screendriver": "+1\n. ",
    "ravemir": "Just wanted to say I tested it on the current master version and it filled-in everything properly on my previous Chrome window, so if you're feeling adventurous, try it out!\n. ",
    "imcoddy": "Didn't get autotype working in 0.5.1, looking forward to this new feature and hope it works fine.\n. ",
    "aioue": "You\u2019re quite right, thank you for responding.\n\nOn 18 Dec 2014, at 11:29, Michael Starke notifications@github.com wrote:\nThat's classic synch-tool territory.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/290#issuecomment-67473886.\n. Not at all. It was lazy thinking on my part.\n\nThis looks interesting and opens up many more possibilities without interfering with MP.\nhttp://git-annex.branchable.com/assistant/ http://git-annex.branchable.com/assistant/\nThanks again for responding. I appreciate the time.\n\nOn 18 Dec 2014, at 11:32, Michael Starke notifications@github.com wrote:\nI do not want to sound like an ass, but just think about the UI. How do you think this should be done? And it would work so much against the Document based Architectuer that it would result ins a lot of custom code. That's nothing I would consider vital. Can this be done via an Automator Script?\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/290#issuecomment-67474129.\n. \n",
    "beebird": "I have the same issue:\nVM Regions Near 0:\n--> \n    __TEXT                 000000010980d000-0000000109915000 [ 1056K] r-x/rwx SM=COW  /Applications/MacPass.app/Contents/MacOS/MacPass\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   com.apple.CoreFoundation        0x00007fff8be124a9 CFDataGetBytePtr + 25\n1   com.hicknhacksoftware.MacPass   0x000000010988bd8c 0x10980d000 + 519564\n2   com.hicknhacksoftware.MacPass   0x0000000109819469 0x10980d000 + 50281\n3   com.hicknhacksoftware.MacPass   0x000000010987bdc2 0x10980d000 + 454082\n4   com.hicknhacksoftware.MacPass   0x0000000109818788 0x10980d000 + 46984\n5   com.hicknhacksoftware.MacPass   0x0000000109818e61 0x10980d000 + 48737\n6   com.apple.AppKit                0x00007fff8e48e47e -[NSToolbarButton sendAction:to:] + 75\n7   com.apple.AppKit                0x00007fff8e3bbe03 -[NSToolbarItemViewer mouseDown:] + 4996\n8   com.apple.AppKit                0x00007fff8e90f42d -[NSWindow _handleMouseDownEvent:isDelayedEvent:] + 6322\n9   com.apple.AppKit                0x00007fff8e910411 -[NSWindow _reallySendEvent:isDelayedEvent:] + 212\n10  com.apple.AppKit                0x00007fff8e355b8d -[NSWindow sendEvent:] + 517\n11  com.apple.AppKit                0x00007fff8e2d5b27 -[NSApplication sendEvent:] + 2540\n12  com.apple.AppKit                0x00007fff8e13cd9a -[NSApplication run] + 796\n13  com.apple.AppKit                0x00007fff8e105fbe NSApplicationMain + 1176\n14  libdyld.dylib                   0x00007fff948d25ad start + 1\nThread 1:\n0   libsystem_kernel.dylib          0x00007fff847b478a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff90c0858c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff90c06375 start_wqthread + 13\nThread 2:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff847b50a2 kevent_qos + 10\n1   libdispatch.dylib               0x00007fff81e8911d _dispatch_mgr_invoke + 216\n2   libdispatch.dylib               0x00007fff81e88d85 _dispatch_mgr_thread + 52\nThread 3:\n0   libsystem_kernel.dylib          0x00007fff847b478a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff90c0858c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff90c06375 start_wqthread + 13\nThread 4:\n0   libsystem_kernel.dylib          0x00007fff847b478a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff90c0858c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff90c06375 start_wqthread + 13\nThread 5:\n0   libsystem_kernel.dylib          0x00007fff847b478a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff90c0858c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff90c06375 start_wqthread + 13\nThread 6:\n0   libsystem_kernel.dylib          0x00007fff847b478a __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff90c0858c _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff90c06375 start_wqthread + 13\nThread 7:: com.apple.NSEventThread\n0   libsystem_kernel.dylib          0x00007fff847aec96 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff847ae0d7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff8be772b4 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff8be7677c __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff8be75fc8 CFRunLoopRunSpecific + 296\n5   com.apple.AppKit                0x00007fff8e29ed49 _NSEventThread + 149\n6   libsystem_pthread.dylib         0x00007fff90c089b1 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff90c0892e _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff90c06385 thread_start + 13\nThread 0 crashed with X86 Thread State (64-bit):\n  rax: 0x0000000000000000  rbx: 0x0000000000000000  rcx: 0x0000000000000000  rdx: 0x000000000000001f\n  rdi: 0x0000000000000000  rsi: 0x00007fff7236c3c8  rbp: 0x00007fff563f22c0  rsp: 0x00007fff563f22b0\n   r8: 0x00007fff8b51e622   r9: 0x00007fff7236c470  r10: 0x00007fff9796e901  r11: 0x00007fff8be12490\n  r12: 0x00007fff8db41d40  r13: 0x0000000000000000  r14: 0x00007febb3915000  r15: 0x000000000000002e\n  rip: 0x00007fff8be124a9  rfl: 0x0000000000010246  cr2: 0x0000000000000000\nLogical CPU:     2\nError Code:      0x00000004\nTrap Number:     14\nBinary Images:\n       0x10980d000 -        0x109914ff7 +com.hicknhacksoftware.MacPass (0.5.1 - 2556)  /Applications/MacPass.app/Contents/MacOS/MacPass\n       0x10997b000 -        0x1099acfff +org.andymatuschak.Sparkle (1.8.0 git-99928f7 - 1.8.0)  /Applications/MacPass.app/Contents/Frameworks/Sparkle.framework/Versions/A/Sparkle\n       0x109dfa000 -        0x109dfafe7 +cl_kernels (???)  cl_kernels\n       0x10ea12000 -        0x10ea77ff7  com.apple.driver.AppleIntelHD5000GraphicsMTLDriver (10.10.18 - 10.1.0) <63B7737D-CF57-305D-8BD6-EE9B4B03519D> /System/Library/Extensions/AppleIntelHD5000GraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelHD5000GraphicsMTLDriver\n    0x7fff678bc000 -     0x7fff678f2f5f  dyld (360.17) <03673B53-B8B7-34D1-ADCE-F449E78E39CC> /usr/lib/dyld\n    0x7fff80b04000 -     0x7fff80b0ffff  com.apple.AppSandbox (4.0 - 261.10.2) <9824F3E3-6212-32BB-BC68-13FCAF820FB1> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox\n    0x7fff80b10000 -     0x7fff80bc0fff  com.apple.backup.framework (1.7 - 1.7) <70033C43-855B-3F12-998C-343F2A8A93BA> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\n    0x7fff80c01000 -     0x7fff80c06ff3  libunwind.dylib (35.3)  /usr/lib/system/libunwind.dylib\n    0x7fff80c1b000 -     0x7fff80c23fff  com.apple.AppleSRP (5.0 - 1) <8DBB11A2-150A-3E70-8B83-DDEDAB15E2C3> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP\n    0x7fff80c35000 -     0x7fff80c40fff  com.apple.DirectoryService.Framework (10.11 - 194)  /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService\n    0x7fff80c8c000 -     0x7fff80cabff7  com.apple.contacts.vCard (1.0 - 2137) <74FA0133-CFBB-3055-B429-AF2D13B24D7D> /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard\n    0x7fff80cb6000 -     0x7fff80d1dfff  com.apple.framework.CoreWiFi (11.0 - 1101.20)  /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi\n    0x7fff80dc5000 -     0x7fff80df0ffb  libarchive.2.dylib (32.10.1) <88036C67-C2C8-3ADF-A4C7-6BBF94B80F15> /usr/lib/libarchive.2.dylib\n    0x7fff80e11000 -     0x7fff80e35fff  com.apple.quartzfilters (1.10.0 - 1.10.0)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters\n    0x7fff80e36000 -     0x7fff80f1cfef +unorm8_bgra.dylib (2.6.4.1) <28F838EA-19E5-3724-99FF-B61132555D09> /OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib\n    0x7fff81398000 -     0x7fff8139aff7  libRadiance.dylib (1440)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\n    0x7fff8139b000 -     0x7fff816d7ffb  com.apple.WebKit (11601 - 11601.2.7.2)  /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit\n    0x7fff816d8000 -     0x7fff81945ff7  com.apple.imageKit (2.6 - 930) <8DA4A452-0E28-3A3E-82B6-93D155581002> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit\n    0x7fff81ad1000 -     0x7fff81bf5fff  libsqlite3.dylib (216.4)  /usr/lib/libsqlite3.dylib\n    0x7fff81bf6000 -     0x7fff81c41ff7  com.apple.CoreMediaIO (701.0 - 4790)  /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO\n    0x7fff81c42000 -     0x7fff81de9ffb  com.apple.avfoundation (2.0 - 1046.9.1)  /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation\n    0x7fff81dea000 -     0x7fff81decfff  com.apple.CoreDuetDebugLogging (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging\n    0x7fff81e81000 -     0x7fff81eaefff  libdispatch.dylib (500.10.1) <438F4595-0731-34A2-ACAD-60121A76D1FF> /usr/lib/system/libdispatch.dylib\n    0x7fff81eaf000 -     0x7fff81f64fff  com.apple.CoreDuet (1.0 - 1) <063ADBE1-44D5-30EE-887E-69ACC8EA9AB6> /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet\n    0x7fff81f6b000 -     0x7fff81f85fff  com.apple.Kerberos (3.0 - 1)  /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\n    0x7fff81f86000 -     0x7fff81f8dff7  com.apple.phonenumbers (1.1.1 - 105) <49696A1F-83FC-3BE8-A7E8-F0F4EAA326BB> /System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers\n    0x7fff81f97000 -     0x7fff8200afff  com.apple.framework.IOKit (2.0.2 - 1178.10.1) <6A9D7E11-156A-3FDB-850E-114ECB1AE7FD> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    0x7fff820a0000 -     0x7fff820dafff  com.apple.QD (3.12 - 302) <46969760-B02A-3ED5-B8BC-D6144939B16E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\n    0x7fff820db000 -     0x7fff8211dff7  com.apple.Metal (54.26.3 - 54.26.3) <54544DF5-B1D1-3139-ADE6-E815533313EB> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\n    0x7fff82125000 -     0x7fff82146fff  com.apple.Sharing (438.0.1 - 438.0.1) <679D40D7-3C04-3D2C-962B-E8A959E5889E> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\n    0x7fff82154000 -     0x7fff821e1dd7  com.apple.AppleJPEG (1.0 - 1) <6230F3A0-C89D-3A35-A896-A17B3513E8DB> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\n    0x7fff821e2000 -     0x7fff821ebfff  com.apple.icloud.FindMyDevice (1.0 - 1) <28CE764F-4C4C-3A75-B7AE-EDBC7A189E82> /System/Library/PrivateFrameworks/FindMyDevice.framework/Versions/A/FindMyDevice\n    0x7fff8220a000 -     0x7fff8220dfff  libCoreVMClient.dylib (119.5) <56187F75-4436-31CA-8D3A-C6BC67F6F2BF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\n    0x7fff82235000 -     0x7fff823daff3  com.apple.audio.toolbox.AudioToolbox (1.13 - 1.13)  /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\n    0x7fff823e9000 -     0x7fff8245dff3  com.apple.securityfoundation (6.0 - 55126) <73D2EE6C-E3A2-32FE-89B3-BA8ACEA53F09> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\n    0x7fff838cf000 -     0x7fff8392dfff  com.apple.SystemConfiguration (1.14 - 1.14)  /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    0x7fff83a13000 -     0x7fff83b03fff  libJP2.dylib (1440)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\n    0x7fff83b06000 -     0x7fff83b08fff  com.apple.EFILogin (2.0 - 2) <1FF63331-0B4A-385D-AC44-7AE665947553> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin\n    0x7fff842fa000 -     0x7fff8439afff  com.apple.ViewBridge (157 - 157)  /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge\n    0x7fff843af000 -     0x7fff8441dff7  com.apple.ApplicationServices.ATS (377 - 394.1)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\n    0x7fff846e5000 -     0x7fff84733fff  libcurl.4.dylib (90) <00662A4C-B89A-3A17-93FF-950C6DE47F99> /usr/lib/libcurl.4.dylib\n    0x7fff84785000 -     0x7fff8478bfff  com.apple.IOAccelerator (203.10 - 203.10)  /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\n    0x7fff8478c000 -     0x7fff8478dfff  liblangid.dylib (122)  /usr/lib/liblangid.dylib\n    0x7fff8478e000 -     0x7fff8479cfff  libxar.1.dylib (302) <898402AF-0DF3-341D-83EA-4A1B1770E718> /usr/lib/libxar.1.dylib\n    0x7fff8479d000 -     0x7fff847bbfff  libsystem_kernel.dylib (3247.10.11)  /usr/lib/system/libsystem_kernel.dylib\n    0x7fff848bd000 -     0x7fff848ceff7  libsystem_trace.dylib (200) <1D289F35-BFA2-3B9E-BDF9-20F34F9A01D4> /usr/lib/system/libsystem_trace.dylib\n    0x7fff848cf000 -     0x7fff84a19fc7  com.apple.coreui (2.1 - 364.1) <4E680853-589C-3BC5-8215-240A07A92C81> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\n    0x7fff84a1a000 -     0x7fff84a26ff7  com.apple.OpenDirectory (10.11 - 194) <7ECA481B-C265-33F6-835E-2E5B96621E51> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\n    0x7fff84aae000 -     0x7fff84ab6fff  com.apple.CoreServices.FSEvents (1222.1.1 - 1222.1.1) <79DF16A7-E169-38A5-BF5E-2D45F86DE154> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\n    0x7fff84b62000 -     0x7fff84df0ff3  com.apple.RawCamera.bundle (6.17 - 825)  /System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera\n    0x7fff84e46000 -     0x7fff85242fff  libLAPACK.dylib (1159) <50654652-353D-3B6D-9065-8932042F3B17> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\n    0x7fff85243000 -     0x7fff8527aff7  com.apple.LDAPFramework (2.4.28 - 194.5) <207E4A14-E3CC-3658-ABAF-B5CAEC9ED1EB> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP\n    0x7fff8527b000 -     0x7fff8527eff7  com.apple.help (1.3.3 - 46)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\n    0x7fff85292000 -     0x7fff85297fff  com.apple.AssetCacheServices (14 - 14) <8C912A44-6635-33A0-82A3-389585BAC0F1> /System/Library/PrivateFrameworks/AssetCacheServices.framework/Versions/A/AssetCacheServices\n    0x7fff85298000 -     0x7fff85298fff  libenergytrace.dylib (10) <64F779D4-2192-37EC-8DB5-EC55BAE50058> /usr/lib/libenergytrace.dylib\n    0x7fff85299000 -     0x7fff857bbfff  com.apple.QuartzComposer (5.1 - 334)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer\n    0x7fff857bc000 -     0x7fff85818fef  libTIFF.dylib (1440) <5E2886E4-AEEF-382F-9AFB-93239278B36A> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\n    0x7fff85819000 -     0x7fff8583dfff  com.apple.MultitouchSupport.framework (304.9 - 304.9) <90E9EC0A-57D0-331E-AE0D-FF1A7756A409> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\n    0x7fff8583e000 -     0x7fff859a5fff  libBLAS.dylib (1159) <35ADE4D4-391A-30C2-9D38-388F543EA4BA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\n    0x7fff85a5d000 -     0x7fff85b6bfff  com.apple.desktopservices (1.10 - 1.10) <76AA21FE-0F96-366A-9B43-6188FBC29ABE> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\n    0x7fff85b6c000 -     0x7fff85b80fe3  libCGInterfaces.dylib (317.8) <5D867287-2340-3650-ABA9-2E4D2C99C96C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib\n    0x7fff86416000 -     0x7fff8645cff7  libauto.dylib (186) <460B0167-C89B-37EC-823C-52F684B31C26> /usr/lib/libauto.dylib\n    0x7fff8645d000 -     0x7fff8645fff7  com.apple.SafariServices.framework (11601 - 11601.2.7.2)  /System/Library/PrivateFrameworks/SafariServices.framework/Versions/A/SafariServices\n    0x7fff8655a000 -     0x7fff868d5ffb  com.apple.VideoToolbox (1.0 - 1731.15.20) <70FDD7D4-FE98-3154-8B7D-72EDD5E92CDB> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\n    0x7fff86957000 -     0x7fff8696dfff  com.apple.CoreMediaAuthoring (2.2 - 953) <8F5453F5-DC0E-39B8-9CB0-0A89268F6930> /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring\n    0x7fff869d5000 -     0x7fff8707bffb  com.apple.JavaScriptCore (11601 - 11601.2.3)  /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore\n    0x7fff8707c000 -     0x7fff870d9fff  com.apple.CoreServices.OSServices (728.4 - 728.4) <4E1819C2-F7A9-35FB-8193-FF3DCC35226C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\n    0x7fff870da000 -     0x7fff870f6ff7  libextension.dylib (78) <3A674BC1-8D7E-3A62-80EF-F950B02CB0FF> /usr/lib/libextension.dylib\n    0x7fff87107000 -     0x7fff8710afff  com.apple.Mangrove (1.0 - 1) <7CA6F485-F7A5-301C-9F14-4C667EF8B2F3> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove\n    0x7fff8710b000 -     0x7fff8711ffff  libsystem_coretls.dylib (82) <21EDACF1-D9B3-3086-9821-60EB75E7F965> /usr/lib/system/libsystem_coretls.dylib\n    0x7fff87128000 -     0x7fff871cffff  com.apple.LanguageModeling (1.0 - 1)  /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\n    0x7fff871d0000 -     0x7fff8721cff7  com.apple.corelocation (1486.17 - 1615.37)  /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation\n    0x7fff87351000 -     0x7fff87359fff  libGFXShared.dylib (12.0.34.12)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\n    0x7fff8735a000 -     0x7fff873fefff  com.apple.Bluetooth (4.4.2 - 4.4.2f1) <7037778A-6783-3727-9076-6CA9ED130A11> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\n    0x7fff873ff000 -     0x7fff8745fff7  com.apple.QuickLookFramework (5.0 - 696.1) <727FE6BE-8E92-38A3-BDEB-2410B553BB27> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook\n    0x7fff87460000 -     0x7fff8747fff7  com.apple.framework.Apple80211 (11.0 - 1102.32)  /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\n    0x7fff87577000 -     0x7fff8769cff7  com.apple.LaunchServices (728.4 - 728.4)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\n    0x7fff876c2000 -     0x7fff876ebff7  libsystem_info.dylib (476) <65D0643A-C8AE-3E8D-9F6E-E4AD823F16B2> /usr/lib/system/libsystem_info.dylib\n    0x7fff876fc000 -     0x7fff8770efff  libsasl2.2.dylib (209)  /usr/lib/libsasl2.2.dylib\n    0x7fff8770f000 -     0x7fff8771aff7  libChineseTokenizer.dylib (16) <1794A880-9C3D-37B2-8F3E-6CAFFB396089> /usr/lib/libChineseTokenizer.dylib\n    0x7fff8771b000 -     0x7fff87720fff  com.apple.DiskArbitration (2.7 - 2.7)  /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    0x7fff87721000 -     0x7fff877dbfff  com.apple.DiscRecording (9.0.1 - 9010.4.3) <7AFCD317-2A1C-30D3-9871-C9C2C4FF05FD> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording\n    0x7fff877dc000 -     0x7fff877dffff  com.apple.IOSurface (108.0.1 - 108.0.1) <7B05B27A-5CC4-30D4-8A10-ED444A2807A2> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\n    0x7fff877eb000 -     0x7fff8783dfff  com.apple.CloudDocs (1.0 - 382)  /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs\n    0x7fff8783e000 -     0x7fff8788efff  libcups.2.dylib (435)  /usr/lib/libcups.2.dylib\n    0x7fff878cc000 -     0x7fff878ceffb  libutil.dylib (43)  /usr/lib/libutil.dylib\n    0x7fff878ec000 -     0x7fff8799cfe7  libvMisc.dylib (563.4)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\n    0x7fff8799d000 -     0x7fff87a09ff7  com.apple.contacts.Contacts (1.0 - 2137) <3503806B-F315-3869-88FD-FFF8D5C10973> /System/Library/Frameworks/Contacts.framework/Versions/A/Contacts\n    0x7fff87a61000 -     0x7fff87a63ff7  libquarantine.dylib (80) <1693C5FE-EA0A-3122-85EB-7950ECC7435A> /usr/lib/system/libquarantine.dylib\n    0x7fff87a64000 -     0x7fff87b3cfff  com.apple.CoreMedia (1.0 - 1731.15.20)  /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\n    0x7fff87b3d000 -     0x7fff87b3dfff  com.apple.audio.units.AudioUnit (1.13 - 1.13)  /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\n    0x7fff87b6d000 -     0x7fff87c99fff  com.apple.CoreText (352.0 - 494.5.1) <393F0F48-0226-34BA-9793-66D8455EF894> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    0x7fff87cb7000 -     0x7fff8808ffef  com.apple.CoreAUC (214.0.0 - 214.0.0) <36675355-FEF4-3DC0-9734-AE6F125883C2> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC\n    0x7fff880ad000 -     0x7fff88401fff  com.apple.Foundation (6.9 - 1255.1) <3AD7B198-3943-3919-B6F2-B0C28DC817B1> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    0x7fff88402000 -     0x7fff88424ff7  com.apple.IconServices (68 - 68) <9F8B9184-8DA8-3B7A-970B-3086DDD1CC6F> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\n    0x7fff885d1000 -     0x7fff885d1ff7  libkeymgr.dylib (28) <47080280-8B57-3D75-8A20-9E100864DE27> /usr/lib/system/libkeymgr.dylib\n    0x7fff88621000 -     0x7fff88697ff7  com.apple.MMCS (1.3 - 349)  /System/Library/PrivateFrameworks/MMCS.framework/Versions/A/MMCS\n    0x7fff88698000 -     0x7fff88743fff  com.apple.PDFKit (3.1 - 3.1)  /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit\n    0x7fff88943000 -     0x7fff88d71fff  com.apple.vision.FaceCore (3.3.1 - 3.3.1)  /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\n    0x7fff88d7d000 -     0x7fff88da4ff7  com.apple.ProtectedCloudStorage (1.0 - 1) <403BC9E0-2A4E-3481-BDFE-B3CB372E5051> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage\n    0x7fff89092000 -     0x7fff890a3fff  libz.1.dylib (60) <43317BEA-ACA2-34C2-AF37-902AA926C83A> /usr/lib/libz.1.dylib\n    0x7fff890a4000 -     0x7fff890f3ff7  com.apple.opencl (2.6.9 - 2.6.9)  /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\n    0x7fff896d6000 -     0x7fff89704ff7  com.apple.CoreServicesInternal (248.1 - 248.1) <834B5D98-DB81-36B1-BD2A-640928EDAAF6> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\n    0x7fff8a088000 -     0x7fff8a08dff7  libheimdal-asn1.dylib (452.1.1) <6E911973-1E1A-3F80-B955-FA78CF20FBFD> /usr/lib/libheimdal-asn1.dylib\n    0x7fff8a08e000 -     0x7fff8a099fff  libcsfde.dylib (517)  /usr/lib/libcsfde.dylib\n    0x7fff8a2e9000 -     0x7fff8a2f0ff7  libcompiler_rt.dylib (62) <253B36E5-572D-377D-AE99-A02CE32590E5> /usr/lib/system/libcompiler_rt.dylib\n    0x7fff8a2ff000 -     0x7fff8a303fff  com.apple.CommonPanels (1.2.6 - 96) <1D76DDD3-D45A-3679-8B72-5EECE6C1ACAC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\n    0x7fff8a304000 -     0x7fff8a30cff7  libcldcpuengine.dylib (2.6.4.1)  /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib\n    0x7fff8a30d000 -     0x7fff8a326fff  com.apple.CFOpenDirectory (10.11 - 194) <86755CDA-B4AA-39EF-8F7B-27F120F9AAC3> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\n    0x7fff8a392000 -     0x7fff8a41bff7  com.apple.PerformanceAnalysis (1.0 - 1)  /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\n    0x7fff8a583000 -     0x7fff8a623fff  com.apple.Metadata (10.7.0 - 972.9) <303B6874-8B16-39A0-BB9D-5B7A59D3B8A2> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\n    0x7fff8a624000 -     0x7fff8a65cfff  com.apple.RemoteViewServices (2.0 - 99) <8BD12AE2-BE91-37CF-955B-62E08551FF83> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\n    0x7fff8b0f6000 -     0x7fff8b154fff  libsystem_network.dylib (582.1.4)  /usr/lib/system/libsystem_network.dylib\n    0x7fff8b155000 -     0x7fff8b1a8ff7  libc++.1.dylib (120.1) <54190E1B-EE49-3D6D-AC29-2813D7380BA5> /usr/lib/libc++.1.dylib\n    0x7fff8b1a9000 -     0x7fff8b1bafff  libSparseBLAS.dylib (1159) <86AFE478-E6FB-38AB-84A3-7E4317521F2C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\n    0x7fff8b1c0000 -     0x7fff8b1ceff7  libbz2.1.0.dylib (38) <99C5121D-8147-3B51-8D79-66245C863338> /usr/lib/libbz2.1.0.dylib\n    0x7fff8b1d7000 -     0x7fff8b1e2fff  libkxld.dylib (3247.10.11) <22BBF963-3808-3320-8BDA-5B7A99035F14> /usr/lib/system/libkxld.dylib\n    0x7fff8b253000 -     0x7fff8b548ff3  com.apple.HIToolbox (2.1.1 - 806) <359FC9DB-B64C-3BC7-B9DA-401D8A5337DC> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\n    0x7fff8b57c000 -     0x7fff8b58afff  com.apple.IntlPreferences (2.0 - 192) <6576CA0C-BFA3-3DD4-8FB8-B2B36137060E> /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences\n    0x7fff8b5f9000 -     0x7fff8b5f9fff  libOpenScriptingUtil.dylib (169) <5C4A51D4-09A9-3209-8E57-15F112725CC4> /usr/lib/libOpenScriptingUtil.dylib\n    0x7fff8b5fa000 -     0x7fff8b632ff7  com.apple.Accounts (113 - 113) <22DBA9B9-F70A-33CB-B87C-4D11AD66D126> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts\n    0x7fff8b633000 -     0x7fff8b66dff7  com.apple.DebugSymbols (132 - 132) <6F5853A1-5DA8-3C42-8E02-2B972F34BCE0> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\n    0x7fff8b66e000 -     0x7fff8b670fff  com.apple.OAuth (25 - 25)  /System/Library/PrivateFrameworks/OAuth.framework/Versions/A/OAuth\n    0x7fff8b671000 -     0x7fff8b6d4ff3  libAVFAudio.dylib (161) <1E0384CE-FF8D-36EE-8A28-50CD673D3109> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib\n    0x7fff8b6d5000 -     0x7fff8b6ddfff  com.apple.NetFS (6.0 - 4.0) <5602F3EB-64F6-3495-BEF0-988F92974234> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\n    0x7fff8b801000 -     0x7fff8b874ffb  com.apple.Heimdal (4.0 - 2.0) <2D358FB4-61BB-3BB6-9EF7-D9868A0B0275> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\n    0x7fff8b875000 -     0x7fff8b877fff  com.apple.loginsupport (1.0 - 1) <09F245DC-8342-358E-A881-DAE88BF0EC1D> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\n    0x7fff8b878000 -     0x7fff8b893ff7  libCRFSuite.dylib (34) <65E4DC91-A994-3921-B5B0-696123CE0C1E> /usr/lib/libCRFSuite.dylib\n    0x7fff8b894000 -     0x7fff8b899fff  com.apple.ImageCapture (9.0 - 9.0)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\n    0x7fff8b89a000 -     0x7fff8b995ff7  libFontParser.dylib (158.3)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\n    0x7fff8b9aa000 -     0x7fff8b9b6fff  com.apple.speech.synthesis.framework (5.4.12 - 5.4.12) <8D8F331E-21D2-3B7E-B977-3EB1D9E44D5B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\n    0x7fff8b9b7000 -     0x7fff8b9b9fff  libCVMSPluginSupport.dylib (12.0.34.12)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\n    0x7fff8b9ba000 -     0x7fff8b9bbfff  libsystem_blocks.dylib (65) <1B4F1F10-823E-3781-8162-6884D14DF0D6> /usr/lib/system/libsystem_blocks.dylib\n    0x7fff8b9bc000 -     0x7fff8bb82fef  com.apple.ImageIO.framework (3.3.0 - 1440) <40A1D113-9A4A-37D5-98A7-52AABB16A942> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    0x7fff8bb83000 -     0x7fff8bb84fff  libDiagnosticMessagesClient.dylib (100)  /usr/lib/libDiagnosticMessagesClient.dylib\n    0x7fff8bb85000 -     0x7fff8bb89fff  libGIF.dylib (1440) <22C11AAC-DDCD-37F8-8656-27184840CA7F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\n    0x7fff8bb8a000 -     0x7fff8bb8cfff  libsystem_coreservices.dylib (19) <692631A0-1923-32CA-9BD5-044B1382FFDE> /usr/lib/system/libsystem_coreservices.dylib\n    0x7fff8bb8d000 -     0x7fff8bb92fff  com.apple.MediaAccessibility (1.0 - 79) <309526B0-1A18-3C2D-B425-A2BB61EED005> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility\n    0x7fff8bba0000 -     0x7fff8bbc9ff7  libxslt.1.dylib (14) <412A09C9-7C02-351E-A416-2453361EACA9> /usr/lib/libxslt.1.dylib\n    0x7fff8bbca000 -     0x7fff8bbe4ff3  liblzma.5.dylib (10) <8CD18286-49EA-31E4-8A73-1BF8DECED6C6> /usr/lib/liblzma.5.dylib\n    0x7fff8bbe5000 -     0x7fff8bbeeff3  com.apple.CommonAuth (4.0 - 2.0) <6EF43A6E-C071-36A3-8B94-694AC6BEF6D3> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\n    0x7fff8bded000 -     0x7fff8c262ff7  com.apple.CoreFoundation (6.9 - 1255.1) <86B26482-C917-34F2-80D8-02911B6001E0> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n    0x7fff8c274000 -     0x7fff8c274ff7  libunc.dylib (29)  /usr/lib/system/libunc.dylib\n    0x7fff8c275000 -     0x7fff8c27dfff  libMatch.1.dylib (27)  /usr/lib/libMatch.1.dylib\n    0x7fff8c27e000 -     0x7fff8c284ff7  com.apple.speech.recognition.framework (5.1.1 - 5.1.1) <433F8745-874A-39B3-A7C6-2EDA8C2C6B4A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\n    0x7fff8c285000 -     0x7fff8d342ff7  com.apple.WebCore (11601 - 11601.2.7.1) <46F67CA0-E449-3C16-B1E5-CD3C32C74D7A> /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore\n    0x7fff8d343000 -     0x7fff8d384ff7  libGLU.dylib (12.0.34.12) <055A2B53-7C59-359A-82CB-1F79160C5C86> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\n    0x7fff8d385000 -     0x7fff8d3aefff  libc++abi.dylib (125)  /usr/lib/libc++abi.dylib\n    0x7fff8d42a000 -     0x7fff8d42dff7  libsystem_sandbox.dylib (459.10.4)  /usr/lib/system/libsystem_sandbox.dylib\n    0x7fff8d42e000 -     0x7fff8d6b5ff3  com.apple.CFNetwork (760.1.2 - 760.1.2)  /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    0x7fff8d6b6000 -     0x7fff8d8c1fff  libFosl_dynamic.dylib (16.24) <28CD6965-696D-32D0-B76F-4EA21DC1984A> /usr/lib/libFosl_dynamic.dylib\n    0x7fff8d90d000 -     0x7fff8d91efff  libcmph.dylib (6) <43880250-9C2D-395C-90C7-CCCE109FF1B2> /usr/lib/libcmph.dylib\n    0x7fff8d91f000 -     0x7fff8d92afff  com.apple.CrashReporterSupport (10.11 - 716) <9BD908E9-368A-3B17-AFCD-185277FF70BA> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\n    0x7fff8d92b000 -     0x7fff8d980fff  com.apple.AE (701 - 701) <87FDCC5A-82AC-36A2-BFE9-D0B2A3D870F1> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\n    0x7fff8db3b000 -     0x7fff8de9e6d7  libobjc.A.dylib (680) <7C5FAD04-2C01-3ED6-AA40-78925C12A456> /usr/lib/libobjc.A.dylib\n    0x7fff8dea4000 -     0x7fff8dfb3fe7  libvDSP.dylib (563.4) <643154B1-9A66-3265-9A7F-B36D71964FF7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\n    0x7fff8dfb4000 -     0x7fff8dfbcfff  com.apple.frameworks.CoreDaemon (1.3 - 1.3)  /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon\n    0x7fff8dff1000 -     0x7fff8e020fc3  libsystem_m.dylib (3105) <07D50372-30ED-3B03-9FA0-0662BF8F0098> /usr/lib/system/libsystem_m.dylib\n    0x7fff8e0ff000 -     0x7fff8ed21fff  com.apple.AppKit (6.9 - 1404.13) <9B600863-6A16-31CB-8138-97AC8F43FBC6> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    0x7fff8ed22000 -     0x7fff8ed60ff7  libGLImage.dylib (12.0.34.12) <4FC92D21-0834-397E-BE0D-282A73FC16B2> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\n    0x7fff8ed93000 -     0x7fff8edb7fff  libJPEG.dylib (1440) <7A2BE834-C5F1-3950-B13D-66C1D39AD7AA> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\n    0x7fff8edb8000 -     0x7fff8edc0fef  libsystem_platform.dylib (73.1.1) <3F4D2390-E3DE-3C24-A515-95DFAC8671C4> /usr/lib/system/libsystem_platform.dylib\n    0x7fff8edc1000 -     0x7fff90011ff7  com.apple.CoreGraphics (1.600.0 - 938) <22518FBE-1937-3AF6-A91D-6B8983184025> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    0x7fff902ad000 -     0x7fff902afff7  libsystem_configuration.dylib (801.10.2) <93D5FB9A-CC7C-3672-80D8-7A1C4805204B> /usr/lib/system/libsystem_configuration.dylib\n    0x7fff90300000 -     0x7fff90396ff7  com.apple.ColorSync (4.9.0 - 4.9.0) <1FBEDDC2-4BCD-3148-800E-968814206CB9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\n    0x7fff90397000 -     0x7fff903a1fff  com.apple.NetAuth (6.0 - 6.0)  /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\n    0x7fff903cc000 -     0x7fff903fdff7  libtidy.A.dylib (15.17) <917B7716-5060-3755-A1BA-435DAC06E778> /usr/lib/libtidy.A.dylib\n    0x7fff903fe000 -     0x7fff90450fff  com.apple.AppleVAFramework (5.0.31 - 5.0.31) <17D3C8AE-5E48-34CE-B5FB-5F30747EDE91> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\n    0x7fff9051c000 -     0x7fff9051fffb  libScreenReader.dylib (425.100) <993C7AE7-6CA2-37B5-A13C-F9032857D3AD> /usr/lib/libScreenReader.dylib\n    0x7fff9077d000 -     0x7fff90785fff  libcopyfile.dylib (127)  /usr/lib/system/libcopyfile.dylib\n    0x7fff90786000 -     0x7fff90786fff  com.apple.Accelerate (1.10 - Accelerate 1.10) <78D9071F-93DE-3C66-8912-8B0AA25DDF05> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\n    0x7fff90787000 -     0x7fff907d8ff7  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <73EF4EB0-315C-3064-A991-3DBFF6BDDFE1> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\n    0x7fff907d9000 -     0x7fff90802fff  libxpc.dylib (755.1.19) <3E09C275-A33B-357A-B0AB-A2DDF88EC9D5> /usr/lib/system/libxpc.dylib\n    0x7fff9085d000 -     0x7fff908c7ff7  com.apple.framework.CoreWLAN (11.0 - 1101.20)  /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\n    0x7fff908f0000 -     0x7fff90900ff3  com.apple.ProtocolBuffer (1 - 242)  /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\n    0x7fff90932000 -     0x7fff9093bffb  libsystem_notify.dylib (149) <56ABC155-CB99-30A8-A8B1-C204B5615092> /usr/lib/system/libsystem_notify.dylib\n    0x7fff9094e000 -     0x7fff90bcdfff  com.apple.security (7.0 - 57336.10.29)  /System/Library/Frameworks/Security.framework/Versions/A/Security\n    0x7fff90bed000 -     0x7fff90c04fff  libsystem_asl.dylib (322) <97D794DA-8CE5-3676-AC5E-364F6D172BDA> /usr/lib/system/libsystem_asl.dylib\n    0x7fff90c05000 -     0x7fff90c0eff7  libsystem_pthread.dylib (137.1.1) <1373D0F1-C6CA-364E-A6BA-8BDBD0D34670> /usr/lib/system/libsystem_pthread.dylib\n    0x7fff90c57000 -     0x7fff90c87ff3  com.apple.CoreAVCHD (5.8.0 - 5800.4.2) <56AA41E6-2F60-31D8-B506-2D4A5C341C77> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD\n    0x7fff90c88000 -     0x7fff90c89fff  libsystem_secinit.dylib (20) <932ED582-E80F-39DA-B0FA-F1BC5F1AD2F8> /usr/lib/system/libsystem_secinit.dylib\n    0x7fff90c8a000 -     0x7fff90c8bffb  libremovefile.dylib (41)  /usr/lib/system/libremovefile.dylib\n    0x7fff90cfe000 -     0x7fff90d10fff  com.apple.contacts.ContactsPersistence (1.0 - 2137) <40E67B07-5DC9-3B5E-8266-1A27142268D0> /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence\n    0x7fff90d24000 -     0x7fff90d6fffb  com.apple.print.framework.PrintCore (11.0 - 472) <34EA102A-D482-37FF-9C9B-E4FE4275913B> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\n    0x7fff90d82000 -     0x7fff90d9efff  com.apple.GenerationalStorage (2.0 - 239) <05652CAD-E7F5-3225-929D-E13F241FBA41> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\n    0x7fff90d9f000 -     0x7fff90daafff  libGL.dylib (12.0.34.12) <182B925C-7BF6-3EFE-85AF-54760206A6FD> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\n    0x7fff90dab000 -     0x7fff91301fff  com.apple.MediaToolbox (1.0 - 1731.15.20)  /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox\n    0x7fff91305000 -     0x7fff9159afff  libmecabra.dylib (696.1) <8FCC4C88-BE6A-3697-B1D3-8E1A2A3B99BA> /usr/lib/libmecabra.dylib\n    0x7fff9159b000 -     0x7fff915b7ff7  libsystem_malloc.dylib (67) <1B57A614-3D60-3F87-876F-7DB4AF38120F> /usr/lib/system/libsystem_malloc.dylib\n    0x7fff915b8000 -     0x7fff915c7ffb  com.apple.LangAnalysis (1.7.0 - 1.7.0)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\n    0x7fff915c8000 -     0x7fff91a35ffb  com.apple.GeoServices (1.0 - 1151.2.13.1) <8305A6E9-BE86-3AC7-8EAB-6A989CC208C0> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices\n    0x7fff91a77000 -     0x7fff91b06ff7  libCoreStorage.dylib (517) <1CC0776E-B682-3CC1-8CC2-2305E0FA439D> /usr/lib/libCoreStorage.dylib\n    0x7fff91b07000 -     0x7fff91b2cff7  libPng.dylib (1440) <98D183F0-7F1A-3175-BE7F-2F90564061F0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\n    0x7fff91b2d000 -     0x7fff91b9cffb  com.apple.datadetectorscore (7.0 - 460) <117708DA-6E19-3866-AD15-0CE3E3F2211A> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\n    0x7fff91c14000 -     0x7fff91c1cffb  libsystem_dnssd.dylib (624.10.1) <21D63EAB-27BE-3F41-B1D4-604BE7F4C9BA> /usr/lib/system/libsystem_dnssd.dylib\n    0x7fff91c5b000 -     0x7fff91c6bfff  libbsm.0.dylib (34)  /usr/lib/libbsm.0.dylib\n    0x7fff91c87000 -     0x7fff91c90ff7  com.apple.DisplayServicesFW (3.0 - 378) <69821BC1-66F6-30FE-B706-134F3A9FCAD7> /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices\n    0x7fff91cda000 -     0x7fff91cddff7  com.apple.AppleSystemInfo (3.1.5 - 3.1.5)  /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo\n    0x7fff91ce1000 -     0x7fff91d6efe7  libsystem_c.dylib (1081.1.3)  /usr/lib/system/libsystem_c.dylib\n    0x7fff91de4000 -     0x7fff91df2fff  com.apple.ToneLibrary (1.0 - 1)  /System/Library/PrivateFrameworks/ToneLibrary.framework/Versions/A/ToneLibrary\n    0x7fff91df3000 -     0x7fff91df5ff7  com.apple.xpc.ServiceManagement (1.0 - 1) <0EA1807B-4F41-317D-A6C2-E6A23F201252> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\n    0x7fff91e17000 -     0x7fff91e17fff  com.apple.quartzframework (1.5 - 21)  /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz\n    0x7fff91e18000 -     0x7fff91e1dff7  libmacho.dylib (875.1)  /usr/lib/system/libmacho.dylib\n    0x7fff91e5a000 -     0x7fff92028ff7  com.apple.QuartzCore (1.11 - 410.9) <4D3C169D-C579-38C3-AE10-B975E89331E0> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\n    0x7fff92029000 -     0x7fff923befdb  com.apple.vImage (8.0 - 8.0) <3EF89E53-2A54-3464-A405-88E3213F31F7> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\n    0x7fff9247b000 -     0x7fff924f2fc7  libcorecrypto.dylib (334) <4E1B969F-8449-3B21-9880-51AD58E25AA6> /usr/lib/system/libcorecrypto.dylib\n    0x7fff924f3000 -     0x7fff92509ff7  libLinearAlgebra.dylib (1159) <01BD9187-521F-3F96-B477-24511318AECD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\n    0x7fff9250a000 -     0x7fff92599fff  com.apple.CorePDF (4.0 - 4) <023E8BCC-DA79-34EE-8975-45690E97F862> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF\n    0x7fff9259a000 -     0x7fff9259dff7  libCoreFSCache.dylib (119.5) <5935DEAB-4236-38D2-8C76-5AF9A5700559> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\n    0x7fff925c2000 -     0x7fff925c2fff  com.apple.Accelerate.vecLib (3.10 - vecLib 3.10)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff925c3000 -     0x7fff925c5fff  com.apple.SecCodeWrapper (4.0 - 261.10.2) <54B4F790-1FD5-3DFB-8F1F-3BEE312238DC> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper\n    0x7fff925c6000 -     0x7fff925d4fff  com.apple.opengl (12.0.34 - 12.0.34) <31C23ABB-8F75-3201-8CD1-447B3052B434> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n    0x7fff925e1000 -     0x7fff925fefff  com.apple.AppleVPAFramework (2.0.15 - 2.0.15) <86BC6DCE-8590-38E3-9C0C-52E97F617B58> /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA\n    0x7fff929ce000 -     0x7fff929d6fff  libsystem_networkextension.dylib (384.1.2) <4736FCC5-9DBA-31F4-AAC8-CD0A177CF502> /usr/lib/system/libsystem_networkextension.dylib\n    0x7fff9323d000 -     0x7fff93256ffb  com.apple.openscripting (1.7 - 169) <6AA25650-8900-33C6-AD49-D0543DB27C16> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\n    0x7fff9327e000 -     0x7fff932b1fff  com.apple.MediaKit (16 - 807)  /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit\n    0x7fff932b6000 -     0x7fff932eaff7  com.apple.CoreVideo (1.8 - 191.1)  /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\n    0x7fff93490000 -     0x7fff934c0ff7  libsandbox.1.dylib (459.10.4) <78F4D125-DEF0-3BEA-9D7F-E5BE5C06C8DA> /usr/lib/libsandbox.1.dylib\n    0x7fff934c1000 -     0x7fff93506ff3  libFontRegistry.dylib (155)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\n    0x7fff93507000 -     0x7fff93535ff7  com.apple.DictionaryServices (1.2 - 250) <94678AC8-41FF-3D2E-A35E-D83AD18D7A78> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\n    0x7fff93536000 -     0x7fff93536fff  libmetal_timestamp.dylib (600.0.41.2) <2E74E3DE-B13E-3645-8A32-90D889FE92E1> /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib\n    0x7fff93636000 -     0x7fff93636fff  com.apple.CoreServices (728.4 - 728.4) <14019127-641A-3CB9-8155-86AD35F23597> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    0x7fff9372e000 -     0x7fff937c3fff  com.apple.ink.framework (10.9 - 214)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\n    0x7fff937c7000 -     0x7fff937f6fff  com.apple.securityinterface (10.0 - 55065.10.2) <1D6DB9F4-6EB4-39E0-8E99-C09EEA78BB16> /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface\n    0x7fff937f7000 -     0x7fff93843ffb  com.apple.HIServices (1.22 - 548) <19389B63-C373-31AE-9180-3A11093EAE58> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\n    0x7fff93844000 -     0x7fff93848fff  libpam.2.dylib (20) <7F986CE8-EF74-3BC3-BB7E-5267E24EAFFE> /usr/lib/libpam.2.dylib\n    0x7fff93849000 -     0x7fff93849fff  com.apple.Carbon (154 - 157)  /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    0x7fff9384a000 -     0x7fff93856fff  com.apple.HelpData (2.1.4 - 90) <17295640-71FE-3D5A-887A-751D110E0630> /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData\n    0x7fff93857000 -     0x7fff93906fff  com.apple.cloudkit.CloudKit (480 - 480) <2507C1D3-733F-394A-9ADC-FF8FAD7D21B9> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit\n    0x7fff9390e000 -     0x7fff93910fff  libCGXType.A.dylib (938) <91E0A256-B45F-3728-B68A-250E4E74A838> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib\n    0x7fff93911000 -     0x7fff93929fcf  libcompression.dylib (23) <7467B2EB-E0E0-3E9D-9EAD-3E04500C6395> /usr/lib/libcompression.dylib\n    0x7fff93980000 -     0x7fff93a60ff7 +unorm8_rgba.dylib (2.6.4.1) <49FF2837-D97B-3CFF-B139-E57D40700F32> /OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib\n    0x7fff93a92000 -     0x7fff93c9efff  com.apple.CoreImage (11.1.0 - 366.1.1)  /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\n    0x7fff93c9f000 -     0x7fff93cc6fff  com.apple.shortcut (2.16 - 93)  /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut\n    0x7fff943f2000 -     0x7fff943f5fff  libspindump.dylib (197) <4DAD2F5F-B719-3DD8-9D7C-135314CE85D0> /usr/lib/libspindump.dylib\n    0x7fff943f6000 -     0x7fff94402fff  com.apple.SpeechRecognitionCore (2.2.7 - 2.2.7) <12117823-8A9E-3C88-A01C-3B25D68535CE> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\n    0x7fff9443e000 -     0x7fff94529ff7  com.apple.QuickLookUIFramework (5.0 - 696.1) <921959F6-96C2-3814-8D20-0E761AB51199> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI\n    0x7fff945b7000 -     0x7fff945e0ffb  libRIP.A.dylib (938) <4D830858-FD2C-32B1-9B29-E88AD815E604> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib\n    0x7fff948c8000 -     0x7fff948cdfff  com.apple.TCC (1.0 - 1) <96281C9E-B2DF-325F-BFA4-0A15150165EC> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\n    0x7fff948ce000 -     0x7fff948cefff  com.apple.ApplicationServices (48 - 48)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    0x7fff948cf000 -     0x7fff948d2ffb  libdyld.dylib (360.17) <99396189-E53A-3A78-BC49-449236DA7CFF> /usr/lib/system/libdyld.dylib\n    0x7fff9496e000 -     0x7fff94ac9ffb  com.apple.WebKitLegacy (11601 - 11601.2.7.2) <79E0891B-88EE-34EB-92D6-3403D89CBB08> /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy\n    0x7fff94aca000 -     0x7fff94acbff3  com.apple.print.framework.Print (10.0 - 266)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\n    0x7fff94acc000 -     0x7fff94ad2fff  com.apple.XPCService (2.0 - 1)  /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService\n    0x7fff94ad3000 -     0x7fff94d79fff  com.apple.CoreData (120 - 640) <37466A48-AA4C-3DB5-B606-C04841D3F654> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\n    0x7fff94d7a000 -     0x7fff94dabffb  com.apple.GSS (4.0 - 2.0)  /System/Library/Frameworks/GSS.framework/Versions/A/GSS\n    0x7fff94dac000 -     0x7fff94f2afff  com.apple.UIFoundation (1.0 - 435) <237F281F-7F15-3309-B749-F8DA37822F9F> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation\n    0x7fff94f2b000 -     0x7fff94f9afff  com.apple.SearchKit (1.4.0 - 1.4.0) <45A716CD-D9E7-3F1F-9EC8-BB37CA9E8C04> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\n    0x7fff94ff3000 -     0x7fff95200fff  libicucore.A.dylib (551.30)  /usr/lib/libicucore.A.dylib\n    0x7fff95201000 -     0x7fff9520cff7  libcommonCrypto.dylib (60074)  /usr/lib/system/libcommonCrypto.dylib\n    0x7fff95226000 -     0x7fff9536aff7  com.apple.QTKit (7.7.3 - 2937)  /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit\n    0x7fff953d3000 -     0x7fff953efff3  libresolv.9.dylib (60)  /usr/lib/libresolv.9.dylib\n    0x7fff953f0000 -     0x7fff953f0ff7  liblaunch.dylib (755.1.19) <7EC0F297-43CC-3D11-B46B-7E72E372648A> /usr/lib/system/liblaunch.dylib\n    0x7fff95454000 -     0x7fff95455ffb  libSystem.B.dylib (1225.1.1) <59F79CA0-5D86-359D-A235-4F257409109E> /usr/lib/libSystem.B.dylib\n    0x7fff95456000 -     0x7fff954a6ff7  com.apple.Symbolication (1.4 - 58044)  /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\n    0x7fff95cb1000 -     0x7fff95d87ff7  com.apple.DiskImagesFramework (10.11.1 - 415)  /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages\n    0x7fff95db5000 -     0x7fff95e9cff7  libcrypto.0.9.8.dylib (59) <7C4E5457-B66C-39CA-BC0E-15CA6C051FC0> /usr/lib/libcrypto.0.9.8.dylib\n    0x7fff963ca000 -     0x7fff963cbfff  com.apple.TrustEvaluationAgent (2.0 - 25)  /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\n    0x7fff963cc000 -     0x7fff964bbfff  libxml2.2.dylib (29) <0702E13C-D726-3DAF-B0D1-77F7B9EF6A37> /usr/lib/libxml2.2.dylib\n    0x7fff964bc000 -     0x7fff964e7ff7  com.apple.AddressBook.ContactsFoundation (8.0 - 2137) <082A84FD-0076-3129-8193-2BCB0EAD15E2> /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation\n    0x7fff9652f000 -     0x7fff96544fff  com.apple.AppContainer (4.0 - 261.10.2)  /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer\n    0x7fff9655b000 -     0x7fff96570fff  com.apple.ToneKit (1.0 - 1) <3722D681-0582-335A-A992-A972D2046163> /System/Library/PrivateFrameworks/ToneKit.framework/Versions/A/ToneKit\n    0x7fff9671c000 -     0x7fff9676efff  com.apple.ImageCaptureCore (7.0 - 7.0) <74BC5DBA-FD63-31B9-A55B-C3C128852F1D> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore\n    0x7fff9676f000 -     0x7fff967f7fff  com.apple.CoreSymbolication (3.1 - 58048.1) <7B9BCFD9-3600-3973-841D-6227BEDE5D36> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\n    0x7fff9686e000 -     0x7fff96870ff7  com.apple.securityhi (9.0 - 55006) <02F35345-EFDE-3EE6-8526-F64EA74F91EA> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\n    0x7fff96871000 -     0x7fff96898fff  com.apple.ChunkingLibrary (167 - 167)  /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\n    0x7fff968d1000 -     0x7fff968d5fff  libcache.dylib (75) <4948E2C8-867F-3E9D-AAE7-2F30F0B345C6> /usr/lib/system/libcache.dylib\n    0x7fff969c4000 -     0x7fff96ab6ff7  libiconv.2.dylib (44) <82529E3B-0485-344C-8075-83C7725D6A6F> /usr/lib/libiconv.2.dylib\n    0x7fff96ab7000 -     0x7fff96d9cff3  com.apple.CoreServices.CarbonCore (1136 - 1136) <9DE930A3-63C0-3E21-965A-132D97D61892> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\n    0x7fff96df2000 -     0x7fff96e37ff7  com.apple.coreservices.SharedFileList (24.4 - 24.4) <3C8665BA-A9CD-377C-BECB-2E933FDB68AE> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\n    0x7fff96e38000 -     0x7fff96e4ffff  libmarisa.dylib (4) <4D3AE55B-CE77-364F-B8DE-C95CAA48B291> /usr/lib/libmarisa.dylib\n    0x7fff96e60000 -     0x7fff970abfff  com.apple.AddressBook.framework (9.0 - 1679) <87B2D9E4-A042-3A99-BC5F-BA48D6896D12> /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook\n    0x7fff97131000 -     0x7fff97131fff  com.apple.Cocoa (6.11 - 22)  /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\n    0x7fff97132000 -     0x7fff97145fff  com.apple.CoreBluetooth (1.0 - 1)  /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\n    0x7fff97180000 -     0x7fff9719bfff  com.apple.aps.framework (4.0 - 4.0)  /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService\n    0x7fff9719c000 -     0x7fff971b0fff  com.apple.CoreDuetDaemonProtocol (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol\n. Well I built the binary with 0.5.1 tag, and reproduced the issue:\n2015-11-01 03:29:34.975 MacPass[33291:6014252] Sparkle: ===== MacPass =====\n2015-11-01 03:29:35.016 MacPass[33291:6014499] App Transport Security has blocked a cleartext HTTP (http://) resource load since it is insecure. Temporary exceptions can be configured via your app's Info.plist file.\n(lldb) \nAccording to https://forums.developer.apple.com/thread/3544, I tried to add a key in MacPass-Info.plist but the issue was still there....\n. ",
    "harizvi": "Good to see macpass make so much progress. \nDespite the compression choice, is the .kdbx file still compatible with other versions of keepass software on other platforms?  After editing with macpass, will I be able to take this file and load it in Windows or iPhone software. \n. Good, thanks for confirming that you have been able to move it back and forth. That's a critical check for me, since I am on multiple platforms every day.\n. @mstarke I noticed the missing history entries, not a big deal for me most of the time. \n. ",
    "HomeSen": "Well, I don't see a reason why it shouldn't. And I also never had any\nissues with modifying my .kdbx with MacPass and opening it with KeePass\n2.x on Windows or on my iPhone, afterwards. Even sync'ing the modified\n(on MacPass) .kdbx with a copy on Windows works (through KeePass 2.x)\nlike a charm.\nAm 31.03.2015 um 02:08 schrieb Haider Rizvi:\n\nGood to see macpass make so much progress.\nDespite the compression choice, is the .kdbx file still compatible\nwith other versions of keepass software on other platforms? After\nediting with macpass, will I be able to take this file and load it in\nWindows or iPhone software.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/294#issuecomment-87881299.\n. Any time again ;)\n\nSince I'm in the same situation (mostly OS X and Windows, only, though),\nI know that \"fear\" too well. In the beginning I always copied .kdbx's,\nbefore moving/sync'ing back and forth :D But I know I can say with\ncertainty: MacPass is an awesome product, and only the lack of (\"soon\"\nto come) features justifies the alpha status. Kudos to @mstarke for\nbringing this awesome to us Apple folks.\nAm 31.03.2015 um 17:03 schrieb Haider Rizvi:\n\nGood, thanks for confirming that you have been able to move it back\nand forth. That's a critical check for me, since I am on multiple\nplatforms every day.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/294#issuecomment-88123485.\n. MacPass only supports KeePass 2 databases, if I'm not completely mistaken ;)\n\nIn order to use your existing database, you can install/download KeePass\n2 on Windows, import the .kdb (KeePass 1.x database) and save it as\n.kdbx (KeePass 2.x database)\nAm 15.04.2015 um 10:00 schrieb georgexsh:\n\nenv info:\nMacPass 0.5.1 (2556)\nOSX 10.10.3 (14D131)\ndatabase created by Keepass 1.x windows\nsteps:\nopen MacPass\nselect database file\ninput master password\nclick \"unlock\" (\u89e3\u9501)\nthen, nothing happends\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/329.\n. Ah, okay, sorry. Didn't know that (mainly dueto me never having used\nversion 1.x). Maybe I should have RTFM'd before replying :$\n\nAm 15.04.2015 um 10:08 schrieb Michael Starke:\n\nNope. Macpass supports both formats. It's a bug. But it's quite hard\nto debug.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/329#issuecomment-93253203.\n. \n",
    "larssb": "+1. ",
    "jongibbins": "Hi there.\nThis would also be beneficial here too as I have started using multiple platforms with KeePass 2. Other than this issue, MacPass seems to be the best on OS X.\nThanks \n. ",
    "tibor": "Would it be possible to implement at least a manual reload with cmd + r? This would be a great improvement in relation to having to close and reopen the database every time.\n. That\u2019s a nice feature, how can I get it? MacPass doesn\u2019t offer any updates to me and in the download section 0.5.1 is still the most recent version of MacPass as far as I can see.\n. Okay, but what about keeping it unchecked by default or offering an option to deselect it by default in the settings? It\u2019s not that important but it\u2019s not very comfortable to uncheck it all the time ;)\n. ",
    "MrPrimate": "I have this problem as well, only the password remains permanently corrupted, not sure it's related to the eye functionality though. Same versions.\n. I moved to Linux on the desktop, so, not so much for me.. ",
    "chmedly": "I'm pretty sure that I upgraded to the next available version (of macpass) at the time and, as far as I know, it hasn't happened again.  . ",
    "ain": "Thanks. Would love to, but I'm not really an Obj-C guy. It'd take me ages to make this simple change and end up in a PR that you'd then most likely rewrite :)\n. ",
    "chuenniger": "I'm wating for version0.6\nThank you.\n. Okay,\nyou're right. I mistook that with the KeeHTTP feature, sorry :)\nThank you for your fast reply.\n\n. ",
    "DrSAR": "@mstarke, I tried Safari, Chrome and Firefox and they behaved similarly. I do notice though that Window title as the only criterion for match is a bit of a problem: \nIt might be me (and the http-auth protected webpages I am visiting) but the window title is not so obviously well-defined. On first hit to the URL, I often don;t know what the window (or browser-tab) title is. I just get a \u201cNo Match!\u201d notice. Could it maybe say, \u201cNo Match for blah!\u201d so I can at least adjust my title in the database? What I can do is proceed with empty passwords and then I get the expected 401 Unauthorized. On reload, I get presented with the HTTP-auth dialog again and this time I can achieve a match by having my window title set to \u201c401 Unauthorized\u201d\n(works for Firefox, Chrome and Safari) but that of course means all my http-auth have that choice\u2026\nSo, in the short run I wonder how I can figure out the appropriate window title and in the long run, I would really like further match criteria for global auto type (e.g. authentication realm for http-auth? not sure that\u2019s so easily accessible).\n. ",
    "velichkin": "Take a look at my small modification https://github.com/velichkin/MacPass/commit/98135e9ede801c36ab94e9c8eb37e3436193efbb\nIt's unperfect, but it works. In few words - window title of chrome's http auth window is \"Window\". I use this information and \"flag\" in item notes named \"allowEmptyWindowAutoType\".\n. ",
    "bvehse": "Hi, I'm experiencing the same issue (also running Mac OS 10.10).\nThe main MacPass window isn't visible. I tried closing and opening the application several times, deleting preference files and restarting to no avail.\nI use MacPass every day, thanks a lot!\n. No, it's on my local drive - but synced via Dropbox.\n. ",
    "ozzi-": "Im using 10.12.6 (16G1036), MacPass Version 0.7 (20171024171012-continuous) and two screens.  Rebooting shows MacPass fine. I think this can be closed.. ",
    "douglaslamb": "That's alright!\n. ",
    "Couto": "This might sound like a small feature, but it's really helpful to visually identify the correct folder/password from the list. It's actually one of the features that I miss the most.\n. ",
    "eboddington": "Yeah, me too. Given the current development state of MP, it doesn't seem like a glaring omission, but it'd be really nice to have.\n. ",
    "NicolasSiver": "Also Keepass original supports nice plugin, - Favicon Downloader, most useful plugin that I have used for years.\n. ",
    "alakani": "I would really, really like this feature too.  I don't mind if it doesn't even have a UI, maybe it can allow dropping a new icon over the one in Inspector, like Finder supports.  No high res icons needed either, 16x16 is fine.  Also - I think 0.6.2 broke the ability to display custom icons added from KeePass 2, which was working in 0.5.1\n. ",
    "zmcode": "+1 for this request and actually I am in the same situation as @alakani: MacPass version 0.6.2 does not display custom icons added from KeePass 2.\n. ",
    "tpluscode": "@zmcode not only it doesn't display custom icons, it also cleared custom icons I had set for folders (entry icons seem to have been kept intact). Thanks for the explanation. I'm using Version 0.6.2 (12420). ",
    "henriqueccruz": "There's a button called \"Download icon\" which is always greyed out, no matter what I do.\nDownloaded continuous and am a bit clueless about how to do it.\nDo I need some plugin to achieve this?. ",
    "mbonaci": "IMHO this is the only feature that is missing in this great product. So often I wish I can search all fields, especially the Notes field.\n. ",
    "adamatan": "For me, a custom field in the grid view would be a lifesaver. A lot of financial sites require a custom field and copying them from the menu is cumbersome.. ",
    "wujekbogdan": "\u2318+F would be a nice feature too, but this is how the official keepass for Windows works and i got used to it (and I believe i'm not the only one).\nIf for a some reason you don't want to implement it as default maybe you could add it as an option in the app settings?\nPS.\nTx for this app - Even alpha version Is much better than KyPass Companion (which cost $7.99 in app store...) \n. > Just try \u2318+F, it works already.\n\n@mstarke \n\nyeah, it works and it's OK, but it's one more step to get things done. When the application starts first we need to focus on the search field, then choose a result from the list (which requires an additional click, because pressing tab key doesn't move focus to the first search result: https://github.com/mstarke/MacPass/issues/414)\nIMO implementing this 2 little features could improve the usability a lot. Searching and copying entries are the most relevant features for the users. \n. > How do you imagine this feature to work? I cannot see how it differs from simply clicking on a group and see al the items in it.\n@mariosangiorgio\nThere is a difference:\n1. You'll see all the items that belong to the group matching search phrase AND all other the items matching the search phrase\n2. The second advantage: using search is faster than clicking the group. Especially if you have plenty of groups.\n@mstarke \nIMO there should be just one search field. Facebook has just one search field and it works for friends, groups, pages, events, etc. \n. +1\nand this one is a bit related: https://github.com/mstarke/MacPass/issues/369\n. ",
    "l3ender": "I'm running into this issue now and it's kind of strange. I open a database file with a non standard file extension. I'm not exactly which scenarios trigger it, but sometimes I notice that the database file has been renamed. Not just a new copy with new extension...the original database no longer exists.\nThanks!\n. I agree with @aliok that it should focus automatically \n. @mstarke Thanks for all your hard work and positive attitude, despite those who have no gratitude for it\n. It'd be nice to match Keepass shortcuts on Windows: ctrl+b to copy username, ctrl+c for copy password, ctrl+u to open URL, ctrl+shift+u to copy URL. On Mac I would expect to substitute command for ctrl and have the same shortcuts.. ",
    "kyranjamie": "Came to report same issue.  Big +1 for this.\nI've read of malware before that searches the 1password / lastpass default database directories (and uploads it somewhere).\nKeepass/Macpass doesn't have a default save directory, but on a compromised machine it'd be trivial to find ~ -name \"*.kdbx\".  As suggested by @zdover, an inconspicuous .docx would circumvent this.\nI'm sure a more sophisticated search could detect a keepass database file, but this would be a slower operation and require more work.  This feature would remove a small, but not insignificant, attack vector.\n  . ",
    "ninjasiat": "You can do a workarround by building an APP with Automator wich calls\nopen -a MacPass filename.unknown\nWhere \"filename.unknown\" is your Databasename\nregards...\n\nAm 10.01.2018 um 12:28 schrieb Kyran Burraston notifications@github.com:\nCame to report same issue. Big +1 for this issue.\nI've read of malware before that searches the 1password / lastpass default database directories (and uploads it somewhere).\nKeepass/Macpass doesn't have a default save directory, but on a compromised machine it'd be trivial to find ~ -name \"*.kdbx\". As suggested by @zdover https://github.com/zdover, a inconspicuous .docx would circumvent this.\nI'm sure a more sophisticated search could detect a keepass database file, but this would be a slower operation and require more work. This feature would remove a small, but not insignificant, attack vector.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/mstarke/MacPass/issues/322#issuecomment-356575675, or mute the thread https://github.com/notifications/unsubscribe-auth/ALDUcNcKZI3rABpUSjg6RT1u6lzEJmmZks5tJJ7HgaJpZM4D1RSR.\n\n\n. Hi,\ni was wrong...\nwhile opening a file with another extension, macpass allways tries to \"autosave\" the file. but here it tries to save the filename.kdbx!\nso it's not functional.\nregards...\n\nAm 10.01.2018 um 14:17 schrieb Andreas Geinitz ninjasiat@gmail.com:\nYou can do a workarround by building an APP with Automator wich calls\nopen -a MacPass filename.unknown\nWhere \"filename.unknown\" is your Databasename\nregards...\n\nAm 10.01.2018 um 12:28 schrieb Kyran Burraston notifications@github.com>:\nCame to report same issue. Big +1 for this issue.\nI've read of malware before that searches the 1password / lastpass default database directories (and uploads it somewhere).\nKeepass/Macpass doesn't have a default save directory, but on a compromised machine it'd be trivial to find ~ -name \"*.kdbx\". As suggested by @zdover https://github.com/zdover, a inconspicuous .docx would circumvent this.\nI'm sure a more sophisticated search could detect a keepass database file, but this would be a slower operation and require more work. This feature would remove a small, but not insignificant, attack vector.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/mstarke/MacPass/issues/322#issuecomment-356575675, or mute the thread https://github.com/notifications/unsubscribe-auth/ALDUcNcKZI3rABpUSjg6RT1u6lzEJmmZks5tJJ7HgaJpZM4D1RSR.\n\n\n. ",
    "vvojciech": "+1 \nJust started using MacPass and all in all is a great software, but this feature is missing for me. \n. ",
    "gjuric": "Could you elaborate on that?\n. I saw that, but have you tried it?\nThis doesn't work for me and I am guessing that is because those two options are not available in the main apps menu, only in the contextual menu.\n. You are right!\nSorry for wasting your time..\n. Just an update if anybody is trying to do the same, the original page on apple.com is now gone, but it can be viewed here: https://web.archive.org/web/20180105044227/https://support.apple.com/kb/PH13916?locale=en_US. ",
    "coolicer": "I see in 1password,it is generate one password each time, so you can know the last one.\n. TouchID Supported ?. Ok, I know.Thank you. @mstarke . ",
    "suchkultur": "Hi Michael,\nsorry, i never reported a bug on github and did not know that the filters input field\nallows free text searches. I will look closer next time before i open an issue again :-)\n\u2014\nGru\u00df,\nStefan\n\nOn Apr 7, 2015, at 5:02 PM, Michael Starke notifications@github.com wrote:\nIt's a bug not a feature. A known one too, fixed as well but not released as binary. Please take the time to search for closed issues before reporting a new on. I know it sounds a bit nit-picky but it makes me happy if you try :-)\nDuplicate of\u00a0#277\n\u2014\nReply to this email directly or\u00a0view it on GitHub\n.\n. \n",
    "gr8tushar": "Hi,\nI tried that but it doesn't work. \nSteps to reproduce.\n1. Open MacPass and use a key file to unlock the database. \n2. Go to preferences and choose to remember the key file.\n3. Lock the database from the File Menu.\n4. The key file is not pre-selected in the lock screen.\nPlease let me know in case you need more information or correct me if I am missing out something.\n. @mstarke hmmm... May be I didn't explain it well. My bad ;).\nBasically I have a database and a key file to unlock it. Both of them reside in the same folder. \nWhen I open the kbdx file, it asks me for pwd or a file. I choose a file to unlock it. \nNow when the database gets locked (due to inactivity or any other event), it again asks me for a pwd or a key file. That time I have to choose the file again. \nWhat I wanted is that the key file which I used to open the database, should come as pre-populated and I just have to press the unlock button.\nP.S. In the preferences, I have checked the option to save the key file.\n. @mstarke I just have a key file and no password for a db. If that is the case, I think it might be a bug.\nThanks for suggestion. I know that I am misusing it ;). For now I am only using it as a repository. I save the database and the key on cloud so that I have all the pwds available on all my systems.\nNeed to update that. But anyway, thanks a ton for your advise. \n. ",
    "FrankKooij": "Thank you all for developing the best open source password manager for OS X. I would like to second gr8tushar comment of Apr 7, 2015. Unfortunately it is not quite clear to me whether this is considered to be an issue that needs to be fixed. In my opinion MacPass should remember the location (not the contents) of the key file and pre-populate the location field when one uses both a password and a key file and is trying to open a database (at least when it is on the recent files list). Having to search for a key file every time one logs in in addition to already having enter a password, will put many people off and may make the key file a somewhat useless feature. Could you please have another look at this issue? Thanks.\n. Dear Michael, thanks for looking into this issue. I tried that checkbox multiple times before submitting my comment, but it did not work for me then. It is now, however. My key file is stored on a NAS. Might that have anything to do with it? (The NAS share was mounted every time that I tried this.)\n. Pull request #713 appears to be an refinement of the original localization by @clone1612. Both localizations still contain many English (e.g. Restore Entry, Toolbar, Trash) and technical terms (e.g. Keyfile, Database), and also spelling errors such mid-word spaces and mid-sentence capital letters (e.g. Activeer Input Geschiedenis).\nApple and Mozilla use spelling conventions when localizing software. They use a standard vocabulary and always start button texts with a verb. Pull request #714 attempts to adher to spelling conventions like these and consequently is a complete overhaul of the original translation.\nAs far as I can tell #715 introduces many changes to #714, both additions and deletions. Some appear to reverse what #714 attempts to achieve, e.g.:\n\nTekenreeks instellen (noun + verb, #715) instead of Bewaar tekenreeks (verb + noun, #714);\nBeschikbare commando's en placeholders (English + technical, #715) instead of Beschikbare invoer en variabelen (Dutch, #714)\n\nOther changes most likely come from XLIFF.\n@mstarke Please let me know if you wish to pursue the direction of #714 or prefer to keep the original localization with the refinements of #713 or perhaps something in between (#715).\nIf you decide to opt for the direction of #714, I would be quite happy to continue refining it using feedback from the community. Such feedback already resulted in the changes in commit 741ea1c1c23892cf554f1de0516ea292c3bd0ec3.. Sorry for the delay. There was no time for coding over the holidays. When I compare the last commit of #715 with the last commit of #714 many translation improvements appear to be missing in #715. You can close #714 if these improvements are also added to #715.. First time updating from a remote branch. Did commit ecb2780011d0ea7eb2675cd4750fdffd07fc8276 do what you asked for? There were no conflicts.. Done. I see that you deleted some lines from MacPass/MacPass/nl.lproj/Localizable.strings, but there are no new texts, so no need for additional translations in this release. BTW I also fixed a single typo in MacPass/MacPass/MPDocument.m. You may want to double check this yourself. . Could you indicate where I can find the Character Picker and the Field Picker in MacPass? Many of the items that have not been translated yet appear to be related to these pickers.. I resolved potential merge conflicts by reinserting trailing whitespace that had been automatically removed by my editor. Unfortunately I have not had access to Xcode since last summer. Unless someone can help me get the necessary XLIFF files, further localization improvements will have to wait.. Thanks for the attaching the xliff file. Still some 135 entries out of 577 to go... How much time until the 0.7.4 release? Also, what happens when a translation is missing, i.e. blank? Will the software automatically use the original (English) text?. Am I overlooking something or are some strings missing from the xliff file, e.g. WebDAV URL and TOOLBAR_PERFORM_AUTOTYPE_FOR_ENTRY?. You will find a partially updated nl.xliff in the attachment. The remaining translations are quite difficult because it is not quite obvious if and where these strings are used in the UI. Further refinement may therefore take some time.\n. @mstarke Please find additional improvements in the attached nl.xliff.. @mstarke, thanks. The sequence that you used for Gmail, works for Evernote also.. ",
    "georgexsh": "@mstarke unfortunately, my password do no contains special character but regular ascii chars. \nis there any more information I could provide?\nand, thanks for your kind reply \n. @mstarke log goes :\n15/4/19 02:23:51.502 MacPass[3511]: Unsupported algorithm\npart of the following backtrace:\n15/4/19 02:23:51.552 MacPass[3511]: (\n    0   CoreFoundation                      0x00007fff91e8403c __exceptionPreprocess + 172\n    1   libobjc.A.dylib                     0x00007fff87bde76e objc_exception_throw + 43\n    2   MacPass                             0x00000001045adfb2 MacPass + 626610\n    3   MacPass                             0x00000001045adc01 MacPass + 625665\n    4   MacPass                             0x00000001045ae10e MacPass + 626958\n    5   MacPass                             0x000000010459ab52 MacPass + 547666\n    6   MacPass                             0x000000010459a7f1 MacPass + 546801\n    7   MacPass                             0x000000010453e8fc MacPass + 170236\n    8   MacPass                             0x000000010452778b MacPass + 75659\n    9   libsystem_trace.dylib               0x00007fff8cbf1cd7 _os_activity_initiate + 75\n...\n. @mstarke yeah, I changed database encrypt algorithm from twofish to aes using keepass, and now macpass could open it!\n. @ajsgithub would you mind open another issue then I could close this one.\n. ",
    "ajsgithub": "I'm also having trouble opening my database, but I see something different in the logs:\nApr 18 12:35:38 Zucchi.local MacPass[562]: Failed to connect (allowAllFilesCheckButton) outlet from (MPDocumentController) to (NSButton): missing setter or instance variable\nApr 18 12:35:38 Zucchi MacPass[562]: assertion failed: 14D136: libxpc.dylib + 62495 [D35D0DB2-D7BD-3BE4-8378-062BFE545E1D]: 0x89\n. This started after I updated to the latest OS X Yosemite.\n. Restored from TimeMachine and it's working again.  Never mind.\n. The only change that I recall was adding a few new entries.\nI was in a bit of a panic as I had a submission deadline and so I wasn't as meticulous as I should have been while troubleshooting.  I think, though, that the file may have gotten corrupted during syncing between one of several computers that I use.  Just a guess at this point.\n. Go ahead a close this issue.  If I can recreate my problem, I'll open a new issue.\n. ",
    "tuexss": "ok, i will try that\n. ",
    "flecmart": "Thank's for the quick response - that did the trick (after a restart of MacPass) :-)\n. ",
    "floriangouy": "I can't find this feature directly on the web interface. I will try something else.\n. Would be easier this time ;-)\n. Thanks for MacPass!\n. ",
    "fabwa": "I found a related issue with changes in Notes of existing key are not being saved...\nNew Key: Add some Notes (Note window on the right) - save - close DB - reopen DB - open key - change/ add notes - save DB - close DB - reopen DB... no changes saved\n. ",
    "fiery-": "This bug also occurs when you create/change a Custom field, then click on General panel and Save. When you restart MacPass, no Custom fields exist (changes applied) for this item. It seems that save operation doesn't work when you move the focus from the current item panel. Very serious bug.\n. ",
    "bokysan": "I agree. Use it every day.\nThis is the original plugin that most other apps seem to support:\nhttps://bitbucket.org/devinmartin/keeotp/wiki/Home\n. ",
    "rathisarov": "Nice to see the project developing with great prospects, especially with Jameshurst http fork. \nAlso the  discussion on plugin system is a great hope.\nLet's hope someone would develop a plugin for TOTP support.\n. ",
    "jsphpl": "Hey guys, is there any progress on this?. Cool, thanks for the update!. ",
    "Nes-si": "+1.\nAlso for deleting and other actions.\nPlease!\n. I've watched same issue. But after updating the plugin to latest (continuos) version it starts work.. ",
    "drivo": "I got the same issue. There's a workaround:\n1) Reopen database with MacPass\n2) Change an existing entry (e.g. I added a white space to the name)\n3) Save the database\n4) Reopen database with KeepassX and it will work.\n. ",
    "debfx": "The KeePassX parser trips over  and  as it expects an actual uuid there.\nI'll fix this to allow empty uuids. Strict parsing mode is disabled in current master so this won't be an issue anyway.\nSo not a MacPass bug, but I'm curious why it adds those elements in this case but not in others.\n. RecycleBinUUID and EntryTemplatesGroup.\n. ",
    "PickRelated": "+1\n. ",
    "Tankernn": "+1\n. ",
    "drewdroid": "I second this request. Pleeeeeease.. with a cherry on top.  I would like to easily see my passwords in the table form without going to each individually. This would also let me easily see overused passwords. Loved this feature on Keepass but MacPass doesn't have it :(. I actually went into the issues section looking for it. \nLove the software by the way, had to search high and low for a keepass client for mac that I liked.\n. A few options, double clicking on the list of usernames and passwords like\nthe original keepass, or some kinda toggle like how Chrome dev tools has.\nIf you go to chrome dev tools, there's a button you can hold down the mouse\nand change it so it either gets tied to the screen (a la inspector), or\nit'll always pop out.\nLast option I guess is a straight pop out button on the inspector that'll\npop out the window but the setting doesn't stick. Or you can toggle the\nsticky option for that somewhere (double click, opens with inspector,\nalways open in pop-out window).\nDepends on how sticky you think this behavior should be.  Personally, I\nthink the option to have the behavior stick should be available since lots\nof people use the notes.\n(i put bank account, wire info, secret question and answer, license keys\nfor software I bought and other stuff that doesn't fit as straight up user\nand password).\nLastly I really really want that other option to display my passwords in\nthe list without asterisks. On keepass official client this works out to\nctrl H I think\n.  Maybe cmd option H or even keep ctrl h ( obviously can't be  cmd h is a\nglobal mac shortcut).  Not sure. This option should definitely be able to\nbe sticky like on SwiftKey.\nOn Sep 28, 2015 7:19 AM, \"Michael Starke\" notifications@github.com wrote:\n\nShould be possible to enable this. What I'm worrying a bit is handling the\nUX for this. How to \"tear\" the inspector out, how to \"merge\" it in.\nButtons/Settings/Draggin. I think you get the idea :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/374#issuecomment-143716217.\n. \n",
    "chrismjspencer": "Another vote for this. MacPass is incredible, I've spent so many hours looking for a keepass replacement now I've switched to a Mac. But please can we have a feature to show the passwords in free text in tabular format?. ",
    "tvavrys": ":+1: \n. ",
    "sub0ne": "I thought about this already too, shouldn't be a big deal to implement. I'll have a look at it.\n. If an error occures during the opening of the document the alert message is displayed to the user. If the document instance then is nil the normal welcome window is shown.\n. ",
    "andreas-": "+1\n. ",
    "kdoteu": "Time for a release? Loving to see the new possibilities :+1: :smiley: \n. ",
    "JordanSekky": "Okay, I totally agree that is a much better and more reasonable way to do it. New pull request submitted in KeePassKit's repository.\n. ",
    "rdoering": "My fault.\nThanks\n. May we could change the behaviour by adding the shortcut Space to show the preview if the file is selected.\n. I will. I just wanted you to know that it is in progress.\n. I totally agree. The plain-text-data should never be stored.\nBut to fix the missing srm-command problem I used rm -P.\nI will try to find a way to use the preview without using a temp file. \n. NSURLCache, this seems to be the best solution for me. Instead storing the plain data to a drive we could store them to a memory cache object.\n. ",
    "sdellenb": "I found this workaround for now (accidentally clicked on the column header and inadvertently sorted by name):\n1. Quit MacPass\n2. Delete (or move) ~/Library/Preferences/com.hicknhacksoftware.MacPass.plist\n3. Start MacPass\nNow the default (custom) sorting will be applied again.\nAttention: This also resets the default password settings (length, extra characters etc.).\n. Thanks, Michael, I've bookmarked your solution for the next time. \ud83d\udc4d \n. ",
    "enterfornone": "It does work :)\nMany thanks!\n. Sorry to resurrect a very old thread, but as I managed to click on the column head again, I'm now stuck one more time with alphabetical sorting.\nBut this time neither deleting the preferences key, neither the whole preferences file worked.\nAlso there is no custom sort column. I'm running 0.7.3 (17830), as the updates started again and I went out of the nightly builds.\nHow can I get back the custom sorting from KeePass (I sync the file from KeePass on Win). Few days ago on 22 Feb, we marked a sad anniversary.\nFor all of us who cannot build from a binary, there is now one full year with no release. No bug fixes, although they seem to be fixed in the nightly builds (like custom icons, custom sort).\nNevertheless, I'm happy that development seems to be ongoing and hope to soon see 0.7 version released.. ",
    "eweiss99": "I tried duplicating the problem, and have not been able to.  I did shut down my Mac in between my problem and it working, so maybe that is part of the solution.  I am using a 2.x database.  I also am storing the database in DropBox so I can use it on iOS hardware.\n\nOn Sep 7, 2015, at 4:38 AM, Michael Starke notifications@github.com> wrote:\nThere is an often reported issue with input fields not saving their content on save, this has to do with not using object controllers for the binding. I did overlook this in the first implementation and have it on my list of things to improve in future releases.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/372#issuecomment-138236763.\n. Do you have a work around for the problem?\nOn Sep 7, 2015, at 10:22 AM, Eric Weiss eweiss@winchendon.com wrote:\nI tried duplicating the problem, and have not been able to.  I did shut down my Mac in between my problem and it working, so maybe that is part of the solution.  I am using a 2.x database.  I also am storing the database in DropBox so I can use it on iOS hardware.\n\nOn Sep 7, 2015, at 4:38 AM, Michael Starke notifications@github.com> wrote:\nThere is an often reported issue with input fields not saving their content on save, this has to do with not using object controllers for the binding. I did overlook this in the first implementation and have it on my list of things to improve in future releases.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/372#issuecomment-138236763.\n. Thanks for the update and solution.\n\nOn Dec 27, 2015, at 3:41 PM, Michael Starke notifications@github.com> wrote:\nClosed #372 https://github.com/mstarke/MacPass/issues/372.\n\u2014\nReply to this email directly or view it on GitHub https://github.com/mstarke/MacPass/issues/372#event-500988464.\n. Thanks for the update and solution.On Dec 27, 2015, at 3:41 PM, Michael Starke notifications@github.com wrote:Closed #372.\u2014Reply to this email directly or view it on GitHub.\n. \n",
    "philipgiuliani": "Still no new release for more than a year :( Would love to have this improvements. At least as a beta :(\n. ",
    "schrej": "If that is the same person i guess he would have some things to improve here.\nhttps://dribbble.com/shots/1756852-Yosemite-style-app-icon\n. ",
    "m1rc0": "I think that would be a great idea. \n. ",
    "fservida": "I'm looking into this idea, but before beginning i'd like to know if it's something of interest or if mstarke prefers not to split the extension protocol between apple's and keepasshttp in the hypothesis of multi-browser support.\n. Very well, will let you know if I manage to implement something\n. You're welcome!\n. ",
    "geigi": "Is anybody still working on the safari extension? Otherwise I would love to give it a try :)\n. It seems like this is only possible with an Apple Developer Certificate which is included in the 99$/yr membership. I suppose there is no membership for MacPass?\n. Ok that's cool, cheers! \n. With Safari 10 and macOS 10.12 they introduced a new way of extensions for Safari:\nhttps://developer.apple.com/library/prerelease/content/documentation/NetworkingInternetWeb/Conceptual/SafariAppExtension_PG/index.html#//apple_ref/doc/uid/TP40017319\nThis basically allows the Safari Extension to ship with the App, without having to install the extension separately. And it also allows the extension to be written in native code (at least for a part). I couldn't find any information about how long the \"old\" extensions are going to be supported, but I don't think, they will cut it off very soon.\nThis extension would require 10.11.5 with Safari 10 or 10.12. The \"old\" extension would still require 10.11, because of the encrypted data transfer between the app and the extension. Are there any objections/doubts from you regarding the new Safari extensions? In the documentation they are only talking about distributing the new extensions over the App Store (included with the actual app), I hope that you can also use the extensions when distributing the app otherwise.\n. Alright so I learned a lot about these new app extensions now:\nThe extensions are started by the host application (in this case Safari) and are written in native code. The interaction with the webpage is done by javascript injections, as on typical browser extensions.\nNow the important point is, that the parent application (in this case MacPass) doesn't need to be running in the background, when the app extension is being started. The app extension is more a separate application, but it's extending an existing one. \nNow this would give the extension the possibility to integrate very nicely into Safari, using a Toolbar-Button and a nice PopOver UI or something like that. Also all interaction with MacPass (as unlocking the Database) could be done directly from Safari.\nApple made it very easy to reuse code from the parent application in the app extension. So I hope I can reuse as much as possible from the existing MacPass code. \nI've made a list of the basics, that the extension should be able to accomplish. Here I need your help, are there missing any essentials for being able on reading existing entries of the KeePass database?\n- [ ] unlock database\n- [ ] search entry using a url\n- [ ] read username & password for specific entry\n- [ ] paste username & password in correct website forms\nThis list is only for the bare basics, but the app extension could be used for a lot more than that (creating new entries right from Safari, etc...)\nEDIT:\nFor anybody interested in this stuff, you can find the branch with the extension here: https://github.com/geigi/MacPass/tree/safari_extension\n. Hm you're right, this is a problem. Another problem I just realised is, that the App Extension is sandboxed and only has very restricted access to the filesystem. A daemon might be a good solution for both problems? It could synchronise the access to the database nicely and provide access to the data for the limited app extension. How would the daemon communicate with MacPass and the extension? Using inter process communication?\n. Ahh ok I understand I think. So NSSecureCoding is used to make serialization/deserialisazion secure against some attacks? So this approach would make KeePassKit a daemon to which MacPass and the extension would connect using XPC is that right? Sounds like a lot of work :D \nWhat would be the first steps to start this project? Is there something else that should be done before even starting this? EDIT: What would be your priority for this?\n. Do you mean feedback from the user? I'm pretty sure there is functionality for an action button and a reply function included. It would be kind of cool to include the selection of an entry in case of multiple matches in the notification, but I'm not sure whether this is possible or not...\n. ",
    "EvilDragonSW": "Hi,\ni hav show what stand in KeePassKit github.\nChange MacPass/KeePassKit/Core/KPKEntry.m line 618\nsize += [binary.key length];\nto\nsize += [binary.name length];\nand i can build ;)\n. Please please ;)\n. ",
    "mkubenka": "+1\n. ",
    "tcgoetz": "Updated to latest. Works for me.\nThanks for the quick response!\n. ",
    "twolfson": "Interesting, do you know if the drag/drop architecture is similarly flawed on other platforms?\n. Ah, I see. I think I will rationalize my past drag/drop behavior over copy/paste with it being less likely to be implemented by a keylogger. However, I will definitely consider moving to a browser plugin for long term.\nAlthough, I have a sneaking fear that a malicious site could more easily break the browser extension boundary than compromise my OS to install a keylogger.\n. ",
    "shangjiyu": "try\nshell\nbrew cask install macpass\n\n. ",
    "matthiasfeist": "Damn. Yeah right! Sorry for wasting your time! :sweat: \n. ",
    "packplusplus": "Can I get a bit more clarification? You say useless, does that mean\nall fields are encrypted regardless? or should i only use macpass if\nim worried about the text fields?\n. ",
    "dehnhardt": "I did, but something was wrong. I reinstalled Carthage and dependencies again and now everything seems to be in place!\nThanks for your help!\nHolger\n. ",
    "everyonesdesign": "It happened to me today, but I don't know how to reproduce it.\nIt really worked after I relaunched MacPass.\nMacPass Version 0.7.3 (17830).\nmacOS High Sierra 10.13.3 (17D47)\n. Well that's why I reported here (I wrote the version in the first message and it seems to be latest stable version).\nA also use Dropbox syncing and KeePass Touch. Maybe this guy generates some files incompatible with MacPass? Not sure about that.\nTried to reproduce that editing the file with KeePass Touch with no luck.. @mstarke Thank you very much!\n. ",
    "shad0whawk": "Nevermind didn't realize there was a change in the build process.  I figure it out. Thanks.\n. Thank you for pointing me in the right direction.  I had to use the \"carthage update\" process to update the file.  I appreciate it!\n. ",
    "fjl": "I noticed (while creating the repro steps) that the 'garbage' being typed is actually the content of the clipboard.\n. Thanks for fixing this so quickly.\n. I can confirm that this is still an issue with macOS 10.13 build 17A352a.. ",
    "rmey": "Thanks. I have Yosemite. I open editor or browser set cursor activate MacPass select entry autoytpe nothing happens so its a bug as you said.\n. With the latest version I completely rebuild today it's working, thank you very much.\n. ",
    "otheus": "Sounds like I need to do that. Is this a standard thing to do that one should just know when building MacOS software?  Can you by chance step me through it?\n. ",
    "ParadiseDS": "Oh this post just saved me! I use the GNU version of ln as well and found the same strange error. It was quite unlovely that GNU and osx version of ln are not compatible with each other.. Thought it might be good to add a homebrew formula for MacPass to handle the building of HEAD, as the --HEAD option is supported in many formulas. All dependencies could also be resolved by this way conveniently.. ",
    "9point6": "I do the same, would it be possible to change the script to detect the type of ln in the path? (Or maybe use an absolute path to the OSX one). +1, I've missed my \"Readable Passphrase Generator\" plugin from windows keypass\n. Will this include support for Argon2, too?\n. Ah brilliant. I didn't know if it was a required dependency or not\n. Keypass already has a lot of plugins providing password generation, any chance that these can be adapted to work on MacPass? \nThough, I suspect they might contain windows specific components (I'm not too familiar with the Keypass plugin API)\n. Or a step further - plugin support for password generation algorithms!. @L4grange could you push up the unfinished work? How much more work do you think is needed?. ",
    "Lich4r": "Well it says it is made on MAcPass in the app info (with link to MacPass repo) but no more\n. ",
    "theoriginalgri": "Just stumbled over their website and stranded here because of \"wtf! this is macpass!\".\nI think they are well aware of the GPL Violations and don't care. They also have published a clone of MiniKeePass (also GPL) to the iOS App store and haven't even released their source (that would not matter) - yes, they seem to have made some improvements though.\nAlso their \"whatsapp client\" seems to be \"based\" on https://github.com/stonesam92/ChitChat - but this is not a GPL violation.\n. ",
    "maku": "O.k. will try it next time. Thank you for your effort\n. @mstarke I use MacPass with KeePassHttp (Version 0.4.1 (2535) -> don't know from where this version of MacPass is) \nFor me KeePassHttp is a must have and I would like to use MacPass further because I really like it (thx for your great effort building it). But this version is really unstable (I know it is some alpha version ...)\nIs there a stable(r) version of MacPass (with KeePassHttp) available / planned?\n. @mstarke when I compile MacPassHttp I get an error \"fatal error: 'HNHUi/HNHUi.h' file not found\" (after the steps described in https://github.com/MacPass/MacPassHTTP\n. @mstarke o.k. compilation worked. when i restart (the also new compiled MacPass) I am able to activate MacPassHttp (after restart and enabling unsecure ...) .  \nBut it seems it does not work. I checked the port (19455). This seems fine. But no contact... Any ideas? (tried it with IChromePass which alread worked for me)\n. The new compiled version seems stable. Thx for helping...\n. Yeah, it seems you have to do a new \"connect\" with the chrome extension (chromeIpass) because of security reasons... \n. ",
    "mboelke": "Same here. Since I built a new binary (as described) yesterday, MacPass crashed two times.\nPlease find crash log attached.\nMacPass_crash.txt\n. @mstarke Ok, I have no idea what you mean. For building MacPass I follwed your \"How to Build\" steps.\nThe only (are there more?) plugin I am using is MacPassHTTP. Therfore I built the app because the releases aren't able to use plugins (right?).\n. ",
    "mr-jingles": "I got it to work too! For me everything is now just as I want it. Perfect - Thank you so much for your effort!\n. ",
    "ezeeyahoo": "Well I asked because :- \n\n. I had that doubt, how can someone build and release an open source on a different name and ownership.\nThanks MStarke for that news and information.\n. Hi,\nThere is an issue with MacPassHTTP plugin if used with PassIFox(not checked for Chrome). It matches on username for example if a login page ask for email id and if I give an id which is already exist for any record in the database, then it auto-type without checking URL and it ask to update if you give different password rather than asking to add new entry for that new domain/URL.\n--\u00a0\nEshant Gupta\nSent with Airmail\nOn 1 February 2016 at 8:50:29 PM, Valentine Budkin (notifications@github.com) wrote:\nWe all wait for release ^)\n\u2014\nReply to this email directly or view it on GitHub.\n. Sure, Thanks\n--\u00a0\nEshant Gupta\nSent with Airmail\nOn 2 February 2016 at 3:09:13 PM, Michael Starke (notifications@github.com) wrote:\n@ezeeyahoo this is an MacPassHTTP issue, could you please open it in the appropriate repository?\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "tthoma24": "Could you explain how offering the app in Mac App Store violates the license?\n. ",
    "aliok": "For reference: Cmd+Alt+E worked. But still, just like we're used to it in other places, it is a much better UX with Enter.\n. ",
    "bwlang": "in case it's relevant, keepassX focus goes to the entry list after search.\nMaybe down arrow instead of enter since the search is performed with each letter typed?. ",
    "willhardy": "I don't agree with @bwlang's \"down arrow instead of enter\", down arrow is not a valid alternative, the original suggestion from @aliok would be the better implementation for UX. Typing enter means, \"I'm done typing my search, take me to the results\".\nI've managed to get a third of the way there by setting up an OS shortcut for this app, mapping Cmd+Enter to \"Focus Entries\", except that the first result still isn't selected, I still have to move my hands away from the home keys to the arrows to select the first entry before I can continue.. This appears to have been addressed already, works for me in Version 0.6.2 (12420).. ",
    "eouw0o83hf": "+1 just ran into this issue today, would love to have that field be editable\n. ",
    "r0bj": "Yes, two:\n- \"Copy Password\" as \"cmd C\" (this may be related)\n- \"Show Password Generator\" as \"cmd P\"\n. Thanks.\nBoth \"Recommended key change every\" and \"Force key change every\" check boxes were ticked and set to 0.\nAfter disabling those options changing pass works ok.\n. ",
    "360fun": "Yep, I agree, it was tricky to identify the behaviour! ;)\nHope you can fix it soon! :D\n. Wow, you fix it! AWESOME! :)\n. ",
    "movsky": "Forget it. Its working now for some reasons...\n. ",
    "d029940": "I can confirm that with version 0.60 you no longer cannot see password entries if there is more than one in a group.\nYou can create a simple example in creating an empty database. Add one password entry to a group. You still can see the password entry. As soon as you duplicate, you are no more able to expand the group to see your password entries.\nExisting password databases (where you have many groups and passwords) show the number of passwords in the group, but you cannot expand the group anymore.\n. Just about my problem, that I cannot see any password entries if there is more than one in a group.\nIt is working now again.\nSo what did I do?\nPreviously I updated to 0.6 from 0.5.2 which gave me the problem I mentioned.\nSo, now, I deleted the old version and downloaded the new 0.6 version, build 12310. Everything is working for me. For new databases as well for existing databases.\n. ",
    "jbsmith7741": "2/13/16 7:34:54.142 PM MacPass[30958]: * Terminating app due to uncaught exception 'NSUnknownKeyException', reason: '[ valueForUndefinedKey:]: this class is not key value coding-compliant for the key name.'\n* First throw call stack:\n(\n    0   CoreFoundation                      0x00007fff84493ae2 exceptionPreprocess + 178\n    1   libobjc.A.dylib                     0x00007fff8afd3f7e objc_exception_throw + 48\n    2   CoreFoundation                      0x00007fff84493679 -[NSException raise] + 9\n    3   Foundation                          0x00007fff8db27aa4 -[NSObject(NSKeyValueCoding) valueForUndefinedKey:] + 226\n    4   Foundation                          0x00007fff8d9fae48 -[NSObject(NSKeyValueCoding) valueForKey:] + 414\n    5   Foundation                          0x00007fff8da0d9f0 -[NSObject(NSKeyValueCoding) valueForKeyPath:] + 272\n    6   Foundation                          0x00007fff8da2c594 _sortedObjectsUsingDescriptors + 387\n    7   Foundation                          0x00007fff8da76463 -[NSMutableArray(NSKeyValueSorting) sortUsingDescriptors:] + 466\n    8   AppKit                              0x00007fff889a4d9a -[NSArrayController _sortObjects:] + 305\n    9   AppKit                              0x00007fff889a1aec -[NSArrayController _arrangeObjectsWithSelectedObjects:avoidsEmptySelection:operationsMask:useBasis:] + 181\n    10  AppKit                              0x00007fff889a4a71 -[NSArrayController setContent:] + 768\n    11  AppKit                              0x00007fff889a4477 -[NSArrayDetailBinder _refreshDetailContentInBackground:] + 1001\n    12  AppKit                              0x00007fff88945f36 -[NSObject(NSKeyValueBindingCreation) bind:toObject:withKeyPath:options:] + 758\n    13  MacPass                             0x000000010b925a84 -[MPEntryViewController _didUpdateSearchResults:] + 473\n    14  CoreFoundation                      0x00007fff8444d70c __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER + 12\n    15  CoreFoundation                      0x00007fff8444d67f _CFXRegistrationPost_block_invoke + 63\n    16  CoreFoundation                      0x00007fff8444cd47 _CFXRegistrationPost + 407\n    17  CoreFoundation                      0x00007fff8444cab2 CFXNotificationPostblock_invoke + 50\n    18  CoreFoundation                      0x00007fff84446d42 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1922\n    19  CoreFoundation                      0x00007fff84335145 _CFXNotificationPost + 693\n    20  Foundation                          0x00007fff8d9da921 -[NSNotificationCenter postNotificationName:object:userInfo:] + 66\n    21  MacPass                             0x000000010b95e9c5 35-[MPDocument(Search) updateSearch:]_block_invoke_2 + 204\n    22  libdispatch.dylib                   0x00007fff9105933f _dispatch_client_callout + 8\n    23  libdispatch.dylib                   0x00007fff9106bebf _dispatch_barrier_sync_f_slow_invoke + 523\n    24  libdispatch.dylib                   0x00007fff9105933f _dispatch_client_callout + 8\n    25  libdispatch.dylib                   0x00007fff9106cc1d _dispatch_main_queue_callback_4CF + 1685\n    26  CoreFoundation                      0x00007fff843d9cd9 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE + 9\n    27  CoreFoundation                      0x00007fff84394d3d __CFRunLoopRun + 1949\n    28  CoreFoundation                      0x00007fff84394338 CFRunLoopRunSpecific + 296\n    29  HIToolbox                           0x00007fff95014935 RunCurrentEventLoopInMode + 235\n    30  HIToolbox                           0x00007fff9501476f ReceiveNextEventCommon + 432\n    31  HIToolbox                           0x00007fff950145af _BlockUntilNextEventMatchingListInModeWithFilter + 71\n    32  AppKit                              0x00007fff888770ee _DPSNextEvent + 1067\n    33  AppKit                              0x00007fff88c43943 -[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454\n    34  AppKit                              0x00007fff8886cfc8 -[NSApplication run] + 682\n    35  AppKit                              0x00007fff887ef520 NSApplicationMain + 1176\n    36  libdyld.dylib                       0x00007fff953fe5ad start + 1\n    37  ???                                 0x0000000000000001 0x0 + 1\n)\nHere is a more detailed report.\nProcess:               MacPass [31582]\nPath:                  /Applications/MacPass.app/Contents/MacOS/MacPass\nIdentifier:            com.hicknhacksoftware.MacPass\nVersion:               0.6 (12310)\nCode Type:             X86-64 (Native)\nParent Process:        ??? [1]\nResponsible:           MacPass [31582]\nUser ID:               501\nDate/Time:             2016-02-14 09:18:36.980 -0700\nOS Version:            Mac OS X 10.11.2 (15C50)\nReport Version:        11\nAnonymous UUID:        23EF1251-36BC-23D4-D814-E45CD51850B0\nSleep/Wake UUID:       02E65FFA-C2C7-4C32-AF44-2DD4F3C3BBCE\nTime Awake Since Boot: 95000 seconds\nTime Since Wake:       490 seconds\nSystem Integrity Protection: enabled\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\nException Type:        EXC_CRASH (SIGABRT)\nException Codes:       0x0000000000000000, 0x0000000000000000\nException Note:        EXC_CORPSE_NOTIFY\nApplication Specific Information:\n*** Terminating app due to uncaught exception 'NSUnknownKeyException', reason: '[ valueForUndefinedKey:]: this class is not key value coding-compliant for the key name.'\nabort() called\nterminating with uncaught exception of type NSException\nApplication Specific Backtrace 1:\n0   CoreFoundation                      0x00007fff84493ae2 exceptionPreprocess + 178\n1   libobjc.A.dylib                     0x00007fff8afd3f7e objc_exception_throw + 48\n2   CoreFoundation                      0x00007fff84493679 -[NSException raise] + 9\n3   Foundation                          0x00007fff8db27aa4 -[NSObject(NSKeyValueCoding) valueForUndefinedKey:] + 226\n4   Foundation                          0x00007fff8d9fae48 -[NSObject(NSKeyValueCoding) valueForKey:] + 414\n5   Foundation                          0x00007fff8da0d9f0 -[NSObject(NSKeyValueCoding) valueForKeyPath:] + 272\n6   Foundation                          0x00007fff8da2c594 _sortedObjectsUsingDescriptors + 387\n7   Foundation                          0x00007fff8da76463 -[NSMutableArray(NSKeyValueSorting) sortUsingDescriptors:] + 466\n8   AppKit                              0x00007fff889a4d9a -[NSArrayController _sortObjects:] + 305\n9   AppKit                              0x00007fff889a1aec -[NSArrayController _arrangeObjectsWithSelectedObjects:avoidsEmptySelection:operationsMask:useBasis:] + 181\n10  AppKit                              0x00007fff889a4a71 -[NSArrayController setContent:] + 768\n11  AppKit                              0x00007fff889a4477 -[NSArrayDetailBinder _refreshDetailContentInBackground:] + 1001\n12  AppKit                              0x00007fff88945f36 -[NSObject(NSKeyValueBindingCreation) bind:toObject:withKeyPath:options:] + 758\n13  MacPass                             0x0000000106034a84 -[MPEntryViewController _didUpdateSearchResults:] + 473\n14  CoreFoundation                      0x00007fff8444d70c __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER + 12\n15  CoreFoundation                      0x00007fff8444d67f _CFXRegistrationPost_block_invoke + 63\n16  CoreFoundation                      0x00007fff8444cd47 _CFXRegistrationPost + 407\n17  CoreFoundation                      0x00007fff8444cab2 CFXNotificationPostblock_invoke + 50\n18  CoreFoundation                      0x00007fff84446d42 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1922\n19  CoreFoundation                      0x00007fff84335145 _CFXNotificationPost + 693\n20  Foundation                          0x00007fff8d9da921 -[NSNotificationCenter postNotificationName:object:userInfo:] + 66\n21  MacPass                             0x000000010606d9c5 35-[MPDocument(Search) updateSearch:]_block_invoke_2 + 204\n22  libdispatch.dylib                   0x00007fff9105933f _dispatch_client_callout + 8\n23  libdispatch.dylib                   0x00007fff9106bebf _dispatch_barrier_sync_f_slow_invoke + 523\n24  libdispatch.dylib                   0x00007fff9105933f _dispatch_client_callout + 8\n25  libdispatch.dylib                   0x00007fff9106cc1d _dispatch_main_queue_callback_4CF + 1685\n26  CoreFoundation                      0x00007fff843d9cd9 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE + 9\n27  CoreFoundation                      0x00007fff84394d3d __CFRunLoopRun + 1949\n28  CoreFoundation                      0x00007fff84394338 CFRunLoopRunSpecific + 296\n29  HIToolbox                           0x00007fff95014935 RunCurrentEventLoopInMode + 235\n30  HIToolbox                           0x00007fff9501476f ReceiveNextEventCommon + 432\n31  HIToolbox                           0x00007fff950145af _BlockUntilNextEventMatchingListInModeWithFilter + 71\n32  AppKit                              0x00007fff888770ee _DPSNextEvent + 1067\n33  AppKit                              0x00007fff88c43943 -[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454\n34  AppKit                              0x00007fff8886cfc8 -[NSApplication run] + 682\n35  AppKit                              0x00007fff887ef520 NSApplicationMain + 1176\n36  libdyld.dylib                       0x00007fff953fe5ad start + 1\n37  ???                                 0x0000000000000001 0x0 + 1\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\n0   libsystem_kernel.dylib          0x00007fff847b3002 pthread_kill + 10\n1   libsystem_pthread.dylib         0x00007fff82a105c5 pthread_kill + 90\n2   libsystem_c.dylib               0x00007fff887316e7 abort + 129\n3   libc++abi.dylib                 0x00007fff8af6af81 abort_message + 257\n4   libc++abi.dylib                 0x00007fff8af90a47 default_terminate_handler() + 267\n5   libobjc.A.dylib                 0x00007fff8afd66ae _objc_terminate() + 103\n6   libc++abi.dylib                 0x00007fff8af8e19e std::__terminate(void (*)()) + 8\n7   libc++abi.dylib                 0x00007fff8af8e213 std::terminate() + 51\n8   libdispatch.dylib               0x00007fff91059353 _dispatch_client_callout + 28\n9   libdispatch.dylib               0x00007fff9106bebf _dispatch_barrier_sync_f_slow_invoke + 523\n10  libdispatch.dylib               0x00007fff9105933f _dispatch_client_callout + 8\n11  libdispatch.dylib               0x00007fff9106cc1d _dispatch_main_queue_callback_4CF + 1685\n12  com.apple.CoreFoundation        0x00007fff843d9cd9 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE + 9\n13  com.apple.CoreFoundation        0x00007fff84394d3d __CFRunLoopRun + 1949\n14  com.apple.CoreFoundation        0x00007fff84394338 CFRunLoopRunSpecific + 296\n15  com.apple.HIToolbox             0x00007fff95014935 RunCurrentEventLoopInMode + 235\n16  com.apple.HIToolbox             0x00007fff9501476f ReceiveNextEventCommon + 432\n17  com.apple.HIToolbox             0x00007fff950145af _BlockUntilNextEventMatchingListInModeWithFilter + 71\n18  com.apple.AppKit                0x00007fff888770ee _DPSNextEvent + 1067\n19  com.apple.AppKit                0x00007fff88c43943 -[NSApplication _nextEventMatchingEventMask:untilDate:inMode:dequeue:] + 454\n20  com.apple.AppKit                0x00007fff8886cfc8 -[NSApplication run] + 682\n21  com.apple.AppKit                0x00007fff887ef520 NSApplicationMain + 1176\n22  libdyld.dylib                   0x00007fff953fe5ad start + 1\nThread 1:: Dispatch queue: com.apple.libdispatch-manager\n0   libsystem_kernel.dylib          0x00007fff847b3ff6 kevent_qos + 10\n1   libdispatch.dylib               0x00007fff9105f099 _dispatch_mgr_invoke + 216\n2   libdispatch.dylib               0x00007fff9105ed01 _dispatch_mgr_thread + 52\nThread 2:: com.apple.NSEventThread\n0   libsystem_kernel.dylib          0x00007fff847ad386 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff847ac7c7 mach_msg + 55\n2   com.apple.CoreFoundation        0x00007fff84395624 __CFRunLoopServiceMachPort + 212\n3   com.apple.CoreFoundation        0x00007fff84394aec __CFRunLoopRun + 1356\n4   com.apple.CoreFoundation        0x00007fff84394338 CFRunLoopRunSpecific + 296\n5   com.apple.AppKit                0x00007fff88936065 _NSEventThread + 149\n6   libsystem_pthread.dylib         0x00007fff82a0ec13 _pthread_body + 131\n7   libsystem_pthread.dylib         0x00007fff82a0eb90 _pthread_start + 168\n8   libsystem_pthread.dylib         0x00007fff82a0c375 thread_start + 13\nThread 3:\n0   libsystem_kernel.dylib          0x00007fff847b36de __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff82a0e729 _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff82a0c365 start_wqthread + 13\nThread 4:: Dispatch queue: com.apple.root.default-qos\n0   libsystem_kernel.dylib          0x00007fff847ad3c2 semaphore_wait_trap + 10\n1   libsystem_platform.dylib        0x00007fff8ca8f226 _os_semaphore_wait + 16\n2   libdispatch.dylib               0x00007fff91067995 _dispatch_barrier_sync_f_slow + 594\n3   com.hicknhacksoftware.MacPass   0x000000010606d8d7 __35-[MPDocument(Search) updateSearch:]_block_invoke + 184\n4   libdispatch.dylib               0x00007fff91064871 _dispatch_call_block_and_release + 12\n5   libdispatch.dylib               0x00007fff9105933f _dispatch_client_callout + 8\n6   libdispatch.dylib               0x00007fff9105d1cf _dispatch_root_queue_drain + 1890\n7   libdispatch.dylib               0x00007fff9105ca34 _dispatch_worker_thread3 + 91\n8   libsystem_pthread.dylib         0x00007fff82a0e68f _pthread_wqthread + 1129\n9   libsystem_pthread.dylib         0x00007fff82a0c365 start_wqthread + 13\nThread 5:\n0   libsystem_kernel.dylib          0x00007fff847b36de __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff82a0e729 _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff82a0c365 start_wqthread + 13\nThread 6:\n0   libsystem_kernel.dylib          0x00007fff847b36de __workq_kernreturn + 10\n1   libsystem_pthread.dylib         0x00007fff82a0e729 _pthread_wqthread + 1283\n2   libsystem_pthread.dylib         0x00007fff82a0c365 start_wqthread + 13\nThread 7:: Dispatch queue: NSCGSDisableUpdates\n0   libsystem_kernel.dylib          0x00007fff847ad386 mach_msg_trap + 10\n1   libsystem_kernel.dylib          0x00007fff847ac7c7 mach_msg + 55\n2   com.apple.CoreGraphics          0x00007fff81284b0b _CGSReenableUpdateForConnection + 92\n3   com.apple.CoreGraphics          0x00007fff812847e1 CGSReenableUpdateToken + 532\n4   libdispatch.dylib               0x00007fff91064871 _dispatch_call_block_and_release + 12\n5   libdispatch.dylib               0x00007fff9105933f _dispatch_client_callout + 8\n6   libdispatch.dylib               0x00007fff9105df6f _dispatch_queue_drain + 754\n7   libdispatch.dylib               0x00007fff9106463b _dispatch_queue_invoke + 549\n8   libdispatch.dylib               0x00007fff9105933f _dispatch_client_callout + 8\n9   libdispatch.dylib               0x00007fff9105d1cf _dispatch_root_queue_drain + 1890\n10  libdispatch.dylib               0x00007fff9105ca34 _dispatch_worker_thread3 + 91\n11  libsystem_pthread.dylib         0x00007fff82a0e68f _pthread_wqthread + 1129\n12  libsystem_pthread.dylib         0x00007fff82a0c365 start_wqthread + 13\nThread 8:\nThread 0 crashed with X86 Thread State (64-bit):\n  rax: 0x0000000000000000  rbx: 0x0000000000000006  rcx: 0x00007fff59bdbdf8  rdx: 0x0000000000000000\n  rdi: 0x000000000000160b  rsi: 0x0000000000000006  rbp: 0x00007fff59bdbe20  rsp: 0x00007fff59bdbdf8\n   r8: 0x0000000000000003   r9: 0x00007fff8af91a7c  r10: 0x0000000008000000  r11: 0x0000000000000206\n  r12: 0x00007fff59bdbf80  r13: 0x0000700000116d30  r14: 0x00007fff70cbc000  r15: 0x00007fff59bdbe60\n  rip: 0x00007fff847b3002  rfl: 0x0000000000000206  cr2: 0x00007fff72ada060\nLogical CPU:     0\nError Code:      0x02000148\nTrap Number:     133\nBinary Images:\n       0x106022000 -        0x1060a0fff +com.hicknhacksoftware.MacPass (0.6 - 12310)  /Applications/MacPass.app/Contents/MacOS/MacPass\n       0x10610b000 -        0x106156fff +com.hicknhacksoftware.KeePassKit (1.0.4 - 1230)  /Applications/MacPass.app/Contents/Frameworks/KeePassKit.framework/Versions/A/KeePassKit\n       0x106189000 -        0x1061c4fff +org.sparkle-project.Sparkle (1.13.1 git-124acdc\nadcf94f - 1.13.1) <172757B9-368E-32D4-9554-F09BB4F82FC5> /Applications/MacPass.app/Contents/Frameworks/Sparkle.framework/Versions/A/Sparkle\n       0x1061e9000 -        0x1061f7ff7 +com.hicknhacksoftware.HNHUi (1 - 1230) <0E53A05D-80A0-3238-9F70-51E997D0E344> /Applications/MacPass.app/Contents/Frameworks/HNHUi.framework/Versions/A/HNHUi\n       0x1096b9000 -        0x1096b9fe7 +cl_kernels (???)  cl_kernels\n       0x10bf81000 -        0x10bfecff7  com.apple.driver.AppleIntelBDWGraphicsMTLDriver (10.12.13 - 10.1.2) <1BE8B60E-CAA7-36CE-A645-F85AE94ED1B3> /System/Library/Extensions/AppleIntelBDWGraphicsMTLDriver.bundle/Contents/MacOS/AppleIntelBDWGraphicsMTLDriver\n       0x10c1ea000 -        0x10c1eaff1 +cl_kernels (???)  cl_kernels\n       0x10cc20000 -        0x10cc21ff5 +cl_kernels (???)  cl_kernels\n       0x1105ba000 -        0x1105bffff  libgermantok.dylib (17)  /usr/lib/libgermantok.dylib\n    0x7fff638a6000 -     0x7fff638dcfa7  dyld (360.18) <1A7F8274-FC32-3B86-9979-66B8F2B7B5E2> /usr/lib/dyld\n    0x7fff80ad4000 -     0x7fff80adffff  com.apple.AppSandbox (4.0 - 261.20.7) <0CA08EB7-D574-3E2F-A3AE-FEA80FF3F304> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox\n    0x7fff80ae0000 -     0x7fff80b90fe7  libvMisc.dylib (563.4) <621D84AA-C752-34EE-8B16-CF0C2DE722FA> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\n    0x7fff80b9e000 -     0x7fff80dabffb  libicucore.A.dylib (551.41)  /usr/lib/libicucore.A.dylib\n    0x7fff80daf000 -     0x7fff80ebefe7  libvDSP.dylib (563.4)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\n    0x7fff80ebf000 -     0x7fff80ed6fff  libmarisa.dylib (4)  /usr/lib/libmarisa.dylib\n    0x7fff80ed7000 -     0x7fff80ed9fff  com.apple.CoreDuetDebugLogging (1.0 - 1)  /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging\n    0x7fff8108c000 -     0x7fff81094fff  libGFXShared.dylib (12.0.40.6) <05770D51-DB02-3ACD-86EF-D3A475A83D4D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\n    0x7fff81123000 -     0x7fff81131fff  com.apple.IntlPreferences (2.0 - 192)  /System/Library/PrivateFrameworks/IntlPreferences.framework/Versions/A/IntlPreferences\n    0x7fff8114b000 -     0x7fff81224fff  com.apple.CoreMedia (1.0 - 1731.15.33) <6109D83B-4E0B-3DE2-9856-9FD80EA51CE0> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\n    0x7fff81225000 -     0x7fff82476fff  com.apple.CoreGraphics (1.600.0 - 948) <5C9D3150-55FF-3C12-806C-D74837E12B1A> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\n    0x7fff82a0b000 -     0x7fff82a14ff7  libsystem_pthread.dylib (138.10.4) <327CECD0-B881-3153-8FCC-4FD4818B7F16> /usr/lib/system/libsystem_pthread.dylib\n    0x7fff82a15000 -     0x7fff82a15fff  libOpenScriptingUtil.dylib (169) <5CE2080C-398C-34C2-8D65-B9C627AACA19> /usr/lib/libOpenScriptingUtil.dylib\n    0x7fff82a16000 -     0x7fff82a29fff  com.apple.CoreBluetooth (1.0 - 1)  /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\n    0x7fff82a35000 -     0x7fff82cb5ff3  com.apple.security (7.0 - 57337.20.44) <6D1EFB27-3B0F-39EE-B491-6A697A12E98A> /System/Library/Frameworks/Security.framework/Versions/A/Security\n    0x7fff82cb6000 -     0x7fff82d9cfef  unorm8_bgra.dylib (2.6.4.1)  /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib\n    0x7fff82e22000 -     0x7fff82e24ffb  libutil.dylib (43) <4C9BFE8B-563B-3EEA-A323-8F4F14E0A46C> /usr/lib/libutil.dylib\n    0x7fff832b9000 -     0x7fff832d2fff  com.apple.CFOpenDirectory (10.11 - 194)  /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\n    0x7fff832d3000 -     0x7fff8333dff7  com.apple.framework.CoreWLAN (11.0 - 1101.20) <6A535459-6A8A-3D60-986B-EE7ED833A9C3> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\n    0x7fff833b5000 -     0x7fff833c3fff  libxar.1.dylib (302) <03207F66-2C4A-3DBD-8D81-70F4C85903C4> /usr/lib/libxar.1.dylib\n    0x7fff842f8000 -     0x7fff8430cfff  com.apple.CoreDuetDaemonProtocol (1.0 - 1) <8D8A190B-3C08-3624-8DC6-E9EBE22BC3BB> /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol\n    0x7fff8430d000 -     0x7fff8431efff  libSparseBLAS.dylib (1159) <3C520738-8F54-36E4-B966-97D1F886F59E> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\n    0x7fff8431f000 -     0x7fff84324fff  com.apple.AssetCacheServices (14 - 14) <33685005-A92A-3006-97F5-FBF8530925B2> /System/Library/PrivateFrameworks/AssetCacheServices.framework/Versions/A/AssetCacheServices\n    0x7fff84325000 -     0x7fff8479bfff  com.apple.CoreFoundation (6.9 - 1256.14) <068D1BA9-3859-34C7-986A-97EDF739C5C8> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\n    0x7fff8479c000 -     0x7fff847bafff  libsystem_kernel.dylib (3248.20.55) <0E688457-4915-36DD-8798-5C2EDEE3F1A3> /usr/lib/system/libsystem_kernel.dylib\n    0x7fff847cf000 -     0x7fff84cf1fff  com.apple.QuartzComposer (5.1 - 334) <0A407B05-5CF5-3084-93EF-F4619BDEEF8B> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzComposer.framework/Versions/A/QuartzComposer\n    0x7fff84f42000 -     0x7fff84fcbff7  com.apple.PerformanceAnalysis (1.0 - 1) <67DE6CD9-AA72-3664-9594-0161D03D4919> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\n    0x7fff85232000 -     0x7fff852d2ff7  com.apple.Metadata (10.7.0 - 972.16) <98CA1355-3E2C-364C-9C4F-3CA286DB08A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\n    0x7fff852d3000 -     0x7fff85341ff7  com.apple.ApplicationServices.ATS (377 - 394.3) <66E581EE-67E2-39E9-97A7-0614F334B9B3> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\n    0x7fff85342000 -     0x7fff8534bfff  com.apple.icloud.FindMyDevice (1.0 - 1)  /System/Library/PrivateFrameworks/FindMyDevice.framework/Versions/A/FindMyDevice\n    0x7fff853ba000 -     0x7fff853ccfff  libsasl2.2.dylib (209) <02BF4226-23E9-34EC-A727-CF0E205395F8> /usr/lib/libsasl2.2.dylib\n    0x7fff85435000 -     0x7fff85435fff  com.apple.Carbon (154 - 157) <34263101-328D-3FE4-B212-14BD3CFF6965> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\n    0x7fff85447000 -     0x7fff85448ff3  com.apple.print.framework.Print (10.0 - 266)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\n    0x7fff85d7e000 -     0x7fff85d81ff7  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <2B3F04CE-3C7D-3F51-99F3-C7847D1E4277> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo\n    0x7fff85e55000 -     0x7fff85f79fff  libsqlite3.dylib (216.4) <280D67B8-F93D-3587-A146-19F36C817548> /usr/lib/libsqlite3.dylib\n    0x7fff85f7a000 -     0x7fff85f7dff7  libCoreFSCache.dylib (119.5)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\n    0x7fff85f7e000 -     0x7fff86025fff  com.apple.LanguageModeling (1.0 - 1)  /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\n    0x7fff86026000 -     0x7fff86029fff  com.apple.IOSurface (108.0.1 - 108.0.1) <7B05B27A-5CC4-30D4-8A10-ED444A2807A2> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\n    0x7fff8602a000 -     0x7fff86032ff7  libcldcpuengine.dylib (2.6.4.1)  /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib\n    0x7fff860a7000 -     0x7fff860a9fff  libCGXType.A.dylib (948)  /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib\n    0x7fff868df000 -     0x7fff86a29fc7  com.apple.coreui (2.1 - 365.2) <727C55D3-503A-3EC4-8A23-C984E320F65F> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\n    0x7fff86a2a000 -     0x7fff86a2cfff  libsystem_coreservices.dylib (19.2) <1B3F5AFC-FFCD-3ECB-8B9A-5538366FB20D> /usr/lib/system/libsystem_coreservices.dylib\n    0x7fff86bec000 -     0x7fff86c20ff7  com.apple.CoreVideo (1.8 - 191.2) <88D903C8-E608-320E-8ACD-11E5B3003C18> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\n    0x7fff86cb4000 -     0x7fff86cb6fff  libCVMSPluginSupport.dylib (12.0.40.6) <8E97A929-0E60-3F6D-ACF7-67F700BE2530> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\n    0x7fff86cb7000 -     0x7fff86cbbfff  com.apple.CommonPanels (1.2.6 - 96) <61E9D84F-435A-3C7B-A065-047B80775777> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\n    0x7fff86cbc000 -     0x7fff86f42ff7  com.apple.CFNetwork (760.2.6 - 760.2.6)  /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\n    0x7fff86f43000 -     0x7fff86f43fff  libmetal_timestamp.dylib (600.0.43.5)  /System/Library/PrivateFrameworks/GPUCompiler.framework/libmetal_timestamp.dylib\n    0x7fff86f44000 -     0x7fff86f55ff7  libz.1.dylib (61.20.1)  /usr/lib/libz.1.dylib\n    0x7fff86f56000 -     0x7fff86f85ff7  com.apple.securityinterface (10.0 - 55065.20.1)  /System/Library/Frameworks/SecurityInterface.framework/Versions/A/SecurityInterface\n    0x7fff86fdf000 -     0x7fff8715dfff  com.apple.UIFoundation (1.0 - 436.1) <8C254BB0-1DED-36A2-AAAF-786EB19CCE39> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation\n    0x7fff87161000 -     0x7fff8716aff7  com.apple.DisplayServicesFW (3.0 - 378)  /System/Library/PrivateFrameworks/DisplayServices.framework/Versions/A/DisplayServices\n    0x7fff8716b000 -     0x7fff87176fff  libGL.dylib (12.0.40.6) <3F719CC4-8024-33B5-A49D-15FAE1955A12> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\n    0x7fff87177000 -     0x7fff8717ffff  com.apple.frameworks.CoreDaemon (1.3 - 1.3)  /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon\n    0x7fff87448000 -     0x7fff87556ff3  com.apple.desktopservices (1.10 - 1.10) <0BAED9FA-EFA5-3DA0-8715-043FD2400B77> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\n    0x7fff87557000 -     0x7fff875bafff  libAVFAudio.dylib (161.2)  /System/Library/Frameworks/AVFoundation.framework/Versions/A/Resources/libAVFAudio.dylib\n    0x7fff87c16000 -     0x7fff87c2cff7  libLinearAlgebra.dylib (1159)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\n    0x7fff87c2d000 -     0x7fff87c2efff  libDiagnosticMessagesClient.dylib (100) <4243B6B4-21E9-355B-9C5A-95A216233B96> /usr/lib/libDiagnosticMessagesClient.dylib\n    0x7fff87c2f000 -     0x7fff87c32fff  libCoreVMClient.dylib (119.5)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\n    0x7fff87c36000 -     0x7fff87caafff  com.apple.framework.IOKit (2.0.2 - 1179.20.6)  /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\n    0x7fff87cab000 -     0x7fff87cbffe3  libCGInterfaces.dylib (317.9) <5079DE4F-3717-32FF-B76A-77F53236D17D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/Libraries/libCGInterfaces.dylib\n    0x7fff87d14000 -     0x7fff87da1dd7  com.apple.AppleJPEG (1.0 - 1) <9F0E8564-FCC4-33BE-9C6A-2BA926A33F6F> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\n    0x7fff88051000 -     0x7fff885a8fff  com.apple.MediaToolbox (1.0 - 1731.15.33) <16374746-DF5E-3103-994B-74CF151BD06A> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox\n    0x7fff88653000 -     0x7fff88659fff  com.apple.XPCService (2.0 - 1) <9A305622-14E1-3D9A-BE47-6524419BA58D> /System/Library/PrivateFrameworks/XPCService.framework/Versions/A/XPCService\n    0x7fff8865f000 -     0x7fff88662fff  libspindump.dylib (197.1) <78CD77B4-3653-35B7-B8E6-3F76BDD7F8B6> /usr/lib/libspindump.dylib\n    0x7fff88663000 -     0x7fff886d2fff  com.apple.SearchKit (1.4.0 - 1.4.0)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\n    0x7fff886d3000 -     0x7fff88760fff  libsystem_c.dylib (1082.20.4)  /usr/lib/system/libsystem_c.dylib\n    0x7fff88763000 -     0x7fff8878afff  com.apple.ChunkingLibrary (167 - 167) <508861C9-F5E6-343B-8DD0-D71DFE49ECFD> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\n    0x7fff8878b000 -     0x7fff88793fff  com.apple.CoreServices.FSEvents (1223.10.1 - 1223.10.1) <7F5B7A23-BC1D-3FA9-A9B8-D534F1E1979A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\n    0x7fff88794000 -     0x7fff88795ffb  libremovefile.dylib (41)  /usr/lib/system/libremovefile.dylib\n    0x7fff88796000 -     0x7fff887a1fff  com.apple.DirectoryService.Framework (10.11 - 194) <159606E0-F3AF-36B0-9744-4BFE1DA3EC74> /System/Library/Frameworks/DirectoryService.framework/Versions/A/DirectoryService\n    0x7fff887a2000 -     0x7fff887aeff7  com.apple.SpeechRecognitionCore (2.2.7 - 2.2.7) <8B6C0DB6-8744-3AEB-BD00-9FA6967E7125> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\n    0x7fff887af000 -     0x7fff887daff7  com.apple.AddressBook.ContactsFoundation (8.0 - 2137.1)  /System/Library/PrivateFrameworks/ContactsFoundation.framework/Versions/A/ContactsFoundation\n    0x7fff887db000 -     0x7fff887ddfff  com.apple.EFILogin (2.0 - 2) <38150198-DD7F-3C73-BCAA-C74BB376393A> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin\n    0x7fff887ed000 -     0x7fff89410ff7  com.apple.AppKit (6.9 - 1404.34)  /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\n    0x7fff894d1000 -     0x7fff89502fff  com.apple.GSS (4.0 - 2.0) <25DECD44-0905-3E53-9480-DE7BEB84DB83> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\n    0x7fff89520000 -     0x7fff89544fff  libJPEG.dylib (1442) <9616E8A5-60BA-3C70-8F37-A33055D227C8> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\n    0x7fff89574000 -     0x7fff895c9ff7  com.apple.AE (701 - 701)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\n    0x7fff895ca000 -     0x7fff895d0fff  com.apple.IOAccelerator (203.14 - 203.14)  /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\n    0x7fff895d1000 -     0x7fff895d4ff3  libCGXCoreImage.A.dylib (948) <16B364C4-57E5-39F3-B309-3EBB288ECEFC> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXCoreImage.A.dylib\n    0x7fff8a5e6000 -     0x7fff8a64dfff  com.apple.framework.CoreWiFi (11.0 - 1101.20)  /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi\n    0x7fff8a64e000 -     0x7fff8a64efff  com.apple.Cocoa (6.11 - 22) <0A634D46-B468-3CBC-B2A0-16C381C11BF2> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\n    0x7fff8a69b000 -     0x7fff8a712fe7  libcorecrypto.dylib (335.20.1)  /usr/lib/system/libcorecrypto.dylib\n    0x7fff8a8cc000 -     0x7fff8a8cfff7  libsystem_sandbox.dylib (460.20.9) <1C891336-1B25-365D-B43E-96D5B3BE66B0> /usr/lib/system/libsystem_sandbox.dylib\n    0x7fff8a8d0000 -     0x7fff8a8d3fff  com.apple.Mangrove (1.0 - 1) <7919AD18-0EDE-3408-A6AC-A9121B8D857F> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove\n    0x7fff8a8d9000 -     0x7fff8a8d9ff7  libkeymgr.dylib (28) <09397E01-6066-3179-A50C-2CE666FDA929> /usr/lib/system/libkeymgr.dylib\n    0x7fff8a8da000 -     0x7fff8a903ffb  libRIP.A.dylib (948) <96E8F983-A8BA-3B0F-9035-E09642A63F6E> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib\n    0x7fff8a979000 -     0x7fff8aaa5ff7  com.apple.CoreText (352.0 - 494.10) <9FD834B1-FF8E-3EB0-BB11-6E9120969086> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\n    0x7fff8aaa6000 -     0x7fff8aab7ff7  libsystem_trace.dylib (201.10.3)  /usr/lib/system/libsystem_trace.dylib\n    0x7fff8ab05000 -     0x7fff8ab47ff7  com.apple.Metal (55.2.8 - 55.2.8) <4EC5571C-8A19-3774-BDA0-CB15DB04D06A> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\n    0x7fff8ab48000 -     0x7fff8abb7fff  com.apple.datadetectorscore (7.0 - 460)  /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\n    0x7fff8ac25000 -     0x7fff8ac44ff7  com.apple.framework.Apple80211 (11.0 - 1110.33)  /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\n    0x7fff8ac59000 -     0x7fff8ac5affb  libSystem.B.dylib (1226.10.1) <54388DF0-3813-33E4-BE8D-7743A81ACF4D> /usr/lib/libSystem.B.dylib\n    0x7fff8ae7a000 -     0x7fff8ae96ff7  libsystem_malloc.dylib (67) <9EECAB18-F025-34C4-8E32-7EFFA6720EFC> /usr/lib/system/libsystem_malloc.dylib\n    0x7fff8aeb0000 -     0x7fff8aeb8ffb  libsystem_dnssd.dylib (625.20.4) <945B5FB1-DA91-3D45-A961-A8FAD53C1E7E> /usr/lib/system/libsystem_dnssd.dylib\n    0x7fff8aeb9000 -     0x7fff8aee2fff  libxpc.dylib (756.20.4) <61AB4610-9304-354C-9E9B-D57198AE9866> /usr/lib/system/libxpc.dylib\n    0x7fff8af6a000 -     0x7fff8af93fff  libc++abi.dylib (125)  /usr/lib/libc++abi.dylib\n    0x7fff8af94000 -     0x7fff8afc2ff7  com.apple.CoreServicesInternal (248.2 - 248.2) <7D0D2C65-C4C4-3FBD-89A7-12302EA444AA> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\n    0x7fff8afc3000 -     0x7fff8b325f3f  libobjc.A.dylib (680) <9F45830D-F1D5-3CDF-9461-1A5477ED7D1E> /usr/lib/libobjc.A.dylib\n    0x7fff8b33b000 -     0x7fff8b357ff3  libresolv.9.dylib (60)  /usr/lib/libresolv.9.dylib\n    0x7fff8b358000 -     0x7fff8b36eff7  libsystem_coretls.dylib (83.20.8) <30AF7134-6CA7-3582-B9D3-507D6ED19A88> /usr/lib/system/libsystem_coretls.dylib\n    0x7fff8b36f000 -     0x7fff8b44fff7  unorm8_rgba.dylib (2.6.4.1) <6970FC46-0D13-3614-929D-9504AB54C740> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib\n    0x7fff8b708000 -     0x7fff8b758ff7  com.apple.Symbolication (1.4 - 58044) <2EC9F04A-4370-39C8-8549-FC6411D87463> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\n    0x7fff8b85e000 -     0x7fff8b86cff7  libbz2.1.0.dylib (38) <28E54258-C0FE-38D4-AB76-1734CACCB344> /usr/lib/libbz2.1.0.dylib\n    0x7fff8b86d000 -     0x7fff8b91dfff  com.apple.backup.framework (1.7.2 - 1.7.2) <890AF1EE-CFC9-3DAB-B236-88E203B4ADBC> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\n    0x7fff8b91e000 -     0x7fff8b920ff7  com.apple.xpc.ServiceManagement (1.0 - 1) <3777FD15-B6F3-32A2-A8E3-3E8CE3B8D5E7> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\n    0x7fff8b921000 -     0x7fff8b92cff7  libChineseTokenizer.dylib (16) <998637AB-DC37-3A7C-A85C-F10FD98CAAD7> /usr/lib/libChineseTokenizer.dylib\n    0x7fff8b92d000 -     0x7fff8b935fff  com.apple.AppleSRP (5.0 - 1) <25775E90-1DBB-3BFA-B4B4-F8F262B9EC1F> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP\n    0x7fff8bb59000 -     0x7fff8bb60ff7  com.apple.phonenumbers (1.1.1 - 105)  /System/Library/PrivateFrameworks/PhoneNumbers.framework/Versions/A/PhoneNumbers\n    0x7fff8bb93000 -     0x7fff8bbe1fff  libcurl.4.dylib (90)  /usr/lib/libcurl.4.dylib\n    0x7fff8bc2d000 -     0x7fff8be3aff7  com.apple.CoreImage (11.2.0 - 366.2.7) <344F1067-5F52-3626-8F6C-2B678DEB80A1> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\n    0x7fff8c11b000 -     0x7fff8c138ff7  com.apple.AppleVPAFramework (2.1.2 - 2.1.2) <25691042-E51E-3A47-A908-E2F6D35451FC> /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA\n    0x7fff8c1a3000 -     0x7fff8c59ffff  libLAPACK.dylib (1159) <7618C270-D895-345C-B08B-102286A05A55> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\n    0x7fff8c620000 -     0x7fff8c638fd7  libcompression.dylib (25) <202CE8A7-3D5B-347A-BD22-F0CB589B29AF> /usr/lib/libcompression.dylib\n    0x7fff8c639000 -     0x7fff8c6f3fff  com.apple.DiscRecording (9.0.1 - 9010.4.3)  /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording\n    0x7fff8c6f4000 -     0x7fff8c7e4fff  libJP2.dylib (1442) <50DD1F07-6517-372B-8244-2AD19702385C> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\n    0x7fff8c853000 -     0x7fff8c8a5fff  com.apple.CloudDocs (1.0 - 383.5)  /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs\n    0x7fff8c8a6000 -     0x7fff8ca4cff7  com.apple.audio.toolbox.AudioToolbox (1.13 - 1.13)  /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\n    0x7fff8ca80000 -     0x7fff8ca8cff7  com.apple.OpenDirectory (10.11 - 194) <5409AC27-3B83-3F35-8EB5-51228B4604AE> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\n    0x7fff8ca8d000 -     0x7fff8ca95fe7  libsystem_platform.dylib (74.10.3)  /usr/lib/system/libsystem_platform.dylib\n    0x7fff8cac2000 -     0x7fff8cad5fff  com.apple.contacts.ContactsPersistence (1.0 - 2137.1) <71232F20-11BD-370D-9F43-F262BFE46C93> /System/Library/PrivateFrameworks/ContactsPersistence.framework/Versions/A/ContactsPersistence\n    0x7fff8cad6000 -     0x7fff8cc7dffb  com.apple.avfoundation (2.0 - 1046.9.2)  /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation\n    0x7fff8cca6000 -     0x7fff8ccb4fff  com.apple.ToneLibrary (1.0 - 1)  /System/Library/PrivateFrameworks/ToneLibrary.framework/Versions/A/ToneLibrary\n    0x7fff8ccb5000 -     0x7fff8cd11fff  libTIFF.dylib (1442) <28DF1565-3705-3ED3-B570-C9CB12376D2E> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\n    0x7fff8cd12000 -     0x7fff8ced8fff  com.apple.ImageIO.framework (3.3.0 - 1442) <1AE1EF1A-EA91-3453-A6F4-C11BD91B8D66> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n    0x7fff8cef4000 -     0x7fff8cf83fff  com.apple.CorePDF (4.0 - 4) <6147B89F-46D8-38B2-A7D0-C5AABCE35BC6> /System/Library/PrivateFrameworks/CorePDF.framework/Versions/A/CorePDF\n    0x7fff8cf93000 -     0x7fff8cfc2ffb  libsystem_m.dylib (3105) <26655445-CA97-321E-B221-801CB378D1AA> /usr/lib/system/libsystem_m.dylib\n    0x7fff8cfc3000 -     0x7fff8d004ff7  libGLU.dylib (12.0.40.6)  /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\n    0x7fff8d005000 -     0x7fff8d029fff  com.apple.MultitouchSupport.framework (304.10 - 304.10)  /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\n    0x7fff8d02a000 -     0x7fff8d068ff7  libGLImage.dylib (12.0.40.6) <7A41B04A-8282-3530-809F-FAC4AC953CD2> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\n    0x7fff8d069000 -     0x7fff8d0ddff3  com.apple.securityfoundation (6.0 - 55126) <943934A2-EC53-330F-BEB9-8A718A18F9FC> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\n    0x7fff8d0de000 -     0x7fff8d174fff  com.apple.ColorSync (4.9.0 - 4.9.0) <8BB8DF19-C24F-39F8-8B90-AD186D74587C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\n    0x7fff8d175000 -     0x7fff8d17dfff  com.apple.NetFS (6.0 - 4.0)  /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\n    0x7fff8d270000 -     0x7fff8d277ff7  libcompiler_rt.dylib (62)  /usr/lib/system/libcompiler_rt.dylib\n    0x7fff8d278000 -     0x7fff8d39dff7  com.apple.LaunchServices (728.6 - 728.6) <8658230B-5894-3244-BDBA-A6C9DD347219> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\n    0x7fff8d3b7000 -     0x7fff8d469fff  com.apple.cloudkit.CloudKit (481.8 - 481.8)  /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit\n    0x7fff8d665000 -     0x7fff8d74cff7  libcrypto.0.9.8.dylib (59)  /usr/lib/libcrypto.0.9.8.dylib\n    0x7fff8d75d000 -     0x7fff8d767fff  com.apple.NetAuth (6.0 - 6.0) <19E44307-6F9F-3DEC-8C1A-4685BC252A35> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\n    0x7fff8d768000 -     0x7fff8d771ff7  com.apple.CommonAuth (4.0 - 2.0)  /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\n    0x7fff8d777000 -     0x7fff8d7c3fff  com.apple.print.framework.PrintCore (11.2 - 472.2) <449D8AB5-7891-32D0-9DC5-C90FE10DC0BF> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\n    0x7fff8d7c4000 -     0x7fff8d7c7ffb  libScreenReader.dylib (425.102)  /usr/lib/libScreenReader.dylib\n    0x7fff8d7c8000 -     0x7fff8d92ffff  libBLAS.dylib (1159) <8C24B8BC-E7D9-386D-97C8-929728AFE10B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\n    0x7fff8d930000 -     0x7fff8d9bfff7  libCoreStorage.dylib (517.20.1)  /usr/lib/libCoreStorage.dylib\n    0x7fff8d9c0000 -     0x7fff8d9cfffb  com.apple.LangAnalysis (1.7.0 - 1.7.0) <0D1BCC13-76B9-3C19-85AA-D8DD8299F007> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\n    0x7fff8d9d3000 -     0x7fff8dd27ff7  com.apple.Foundation (6.9 - 1256.1) <66106CC9-9D97-3846-88D8-4BF6BB508296> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\n    0x7fff8e27d000 -     0x7fff8e29ffff  com.apple.IconServices (68.1 - 68.1) <3ECAA762-1193-3D76-A25F-7680DB3A957E> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\n    0x7fff8e2dc000 -     0x7fff8e5c1ff3  com.apple.CoreServices.CarbonCore (1136 - 1136)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\n    0x7fff8e5ef000 -     0x7fff8e5f1fff  com.apple.SecCodeWrapper (4.0 - 261.20.7)  /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper\n    0x7fff8e73a000 -     0x7fff8ea77ff3  com.apple.WebKit (11601 - 11601.3.9) <5B562B26-2D3A-3F0F-B374-0FE43BFB0872> /System/Library/Frameworks/WebKit.framework/Versions/A/WebKit\n    0x7fff8ea78000 -     0x7fff8ea7dfff  com.apple.MediaAccessibility (1.0 - 79)  /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility\n    0x7fff8eaec000 -     0x7fff8eaedfff  libsystem_blocks.dylib (65) <49D42329-7DE9-3413-92C3-A473A7E9CF35> /usr/lib/system/libsystem_blocks.dylib\n    0x7fff8eb12000 -     0x7fff8eb17ff3  libunwind.dylib (35.3) <124E0F05-2350-3774-A32C-7F5BF38EDE73> /usr/lib/system/libunwind.dylib\n    0x7fff8eb18000 -     0x7fff8eb21ff3  libsystem_notify.dylib (150.20.3) <243FADE1-255A-3B78-8033-F336CD64B817> /usr/lib/system/libsystem_notify.dylib\n    0x7fff8f3d3000 -     0x7fff8f3f2ff7  com.apple.contacts.vCard (1.0 - 2137.1) <41529BD9-1BCC-3A62-92BA-2A7110867355> /System/Library/PrivateFrameworks/vCard.framework/Versions/A/vCard\n    0x7fff8f455000 -     0x7fff8f45aff7  libheimdal-asn1.dylib (453.20.2)  /usr/lib/libheimdal-asn1.dylib\n    0x7fff8f45b000 -     0x7fff8f460fff  com.apple.ImageCapture (9.0 - 9.0) <33F7822F-1124-3D73-AF66-515EA32A4A47> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\n    0x7fff8f461000 -     0x7fff8f4befff  com.apple.CoreServices.OSServices (728.6 - 728.6)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\n    0x7fff8f4bf000 -     0x7fff8f4caff7  libcommonCrypto.dylib (60075.20.1) <766BC3F5-41F3-3315-BABC-72718A98EA92> /usr/lib/system/libcommonCrypto.dylib\n    0x7fff8f4cb000 -     0x7fff8f4e4ffb  com.apple.openscripting (1.7 - 169)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\n    0x7fff8f540000 -     0x7fff8f543ff7  com.apple.help (1.3.3 - 46) <62056D9B-A87C-3E4D-B4E2-7E1CDB74CE68> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\n    0x7fff8f57d000 -     0x7fff8f5c2ff3  libFontRegistry.dylib (155.1) <593CC743-3785-3CC5-A229-D3846C51E054> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\n    0x7fff8f5ca000 -     0x7fff8f5d8fff  com.apple.opengl (12.0.40 - 12.0.40) <4D469B19-F5B3-3A2F-93D5-31E3AA3B14BF> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\n    0x7fff8f630000 -     0x7fff8f65eff7  com.apple.DictionaryServices (1.2 - 250)  /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\n    0x7fff8f6e3000 -     0x7fff8f6e7fff  libcache.dylib (75) <6B245C0A-F3EA-383B-A542-5B0D0456A41B> /usr/lib/system/libcache.dylib\n    0x7fff8f9cf000 -     0x7fff8f9f6fff  com.apple.shortcut (2.16 - 93)  /System/Library/PrivateFrameworks/Shortcut.framework/Versions/A/Shortcut\n    0x7fff8f9fa000 -     0x7fff90ab9fff  com.apple.WebCore (11601 - 11601.3.8) <39580B20-B884-3D6C-8DE0-3FF7AD12A6CA> /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebCore.framework/Versions/A/WebCore\n    0x7fff90b4a000 -     0x7fff90b56fff  com.apple.HelpData (2.1.4 - 90) <3A533F58-9C3B-3341-A8F8-084C96BDB70D> /System/Library/PrivateFrameworks/HelpData.framework/Versions/A/HelpData\n    0x7fff90c08000 -     0x7fff90d63ffb  com.apple.WebKitLegacy (11601 - 11601.3.9)  /System/Library/Frameworks/WebKit.framework/Versions/A/Frameworks/WebKitLegacy.framework/Versions/A/WebKitLegacy\n    0x7fff90d64000 -     0x7fff90d6ffff  libkxld.dylib (3248.20.55) <3B8A19A8-7B41-3322-BDEC-9A2461E76423> /usr/lib/system/libkxld.dylib\n    0x7fff90deb000 -     0x7fff90e31ff7  libauto.dylib (186) <999E610F-41FC-32A3-ADCA-5EC049B65DFB> /usr/lib/libauto.dylib\n    0x7fff90e80000 -     0x7fff90e85ff7  libmacho.dylib (875.1)  /usr/lib/system/libmacho.dylib\n    0x7fff90f23000 -     0x7fff9101fff7  libFontParser.dylib (158.4)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\n    0x7fff91057000 -     0x7fff91084fff  libdispatch.dylib (501.20.1) <324C9189-2AF3-3356-847F-6F4CE1C6E901> /usr/lib/system/libdispatch.dylib\n    0x7fff9108b000 -     0x7fff91161ff7  com.apple.DiskImagesFramework (10.11.2 - 417.1) <4A510EE1-893E-38A8-AD09-5ACC9F2BE86F> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages\n    0x7fff91169000 -     0x7fff91184fff  com.apple.aps.framework (4.0 - 4.0) <894B1FD6-6EBE-302B-947B-D5813DABEDF0> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService\n    0x7fff91185000 -     0x7fff911d6ff7  com.apple.audio.CoreAudio (4.3.0 - 4.3.0)  /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\n    0x7fff911d7000 -     0x7fff911dbfff  libGIF.dylib (1442) <39FA0286-1616-3474-8215-7CD07109C9E5> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\n    0x7fff911e4000 -     0x7fff9155fffb  com.apple.VideoToolbox (1.0 - 1731.15.33) <33AED54A-87AE-330F-BAAD-FB8389C3E686> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\n    0x7fff91565000 -     0x7fff915b1ff7  com.apple.corelocation (1486.17 - 1615.38) <5AE891F7-ED25-3C6C-A8DD-5D702FB87DC7> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation\n    0x7fff915d9000 -     0x7fff91600fff  com.apple.ProtectedCloudStorage (1.0 - 1)  /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage\n    0x7fff9162a000 -     0x7fff9169efff  com.apple.Heimdal (4.0 - 2.0) <009F223D-B89B-376B-94F5-6D982CBEF771> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\n    0x7fff9169f000 -     0x7fff916a0fff  libsystem_secinit.dylib (20)  /usr/lib/system/libsystem_secinit.dylib\n    0x7fff916a1000 -     0x7fff91745fff  com.apple.Bluetooth (4.4.3 - 4.4.3f4)  /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\n    0x7fff9177b000 -     0x7fff91797fff  com.apple.GenerationalStorage (2.0 - 239)  /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\n    0x7fff91798000 -     0x7fff91a3eff7  com.apple.CoreData (120 - 641.3)  /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\n    0x7fff91a3f000 -     0x7fff91a41ff7  libquarantine.dylib (80) <163CF63A-7455-3D1F-AE57-8C4475A9204C> /usr/lib/system/libquarantine.dylib\n    0x7fff9219e000 -     0x7fff9219eff7  liblaunch.dylib (756.20.4)  /usr/lib/system/liblaunch.dylib\n    0x7fff9219f000 -     0x7fff921b4fff  com.apple.AppContainer (4.0 - 261.20.7) <30414623-E68F-31A1-9794-1C052391E900> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer\n    0x7fff921b5000 -     0x7fff922a4fff  libxml2.2.dylib (29.2)  /usr/lib/libxml2.2.dylib\n    0x7fff922a5000 -     0x7fff922f4ff7  com.apple.opencl (2.6.9 - 2.6.9)  /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\n    0x7fff922f5000 -     0x7fff92306fff  libcmph.dylib (6)  /usr/lib/libcmph.dylib\n    0x7fff9235e000 -     0x7fff92375fff  libsystem_asl.dylib (322) <3C2D3ACD-0DD1-337A-8247-44A910D67A65> /usr/lib/system/libsystem_asl.dylib\n    0x7fff92376000 -     0x7fff92461ff7  com.apple.QuickLookUIFramework (5.0 - 696.3) <8416C721-85D3-3F4A-9916-2CB4640BB0CB> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuickLookUI.framework/Versions/A/QuickLookUI\n    0x7fff92462000 -     0x7fff924b5ff7  libc++.1.dylib (120.1) <8FC3D139-8055-3498-9AC5-6467CB7F4D14> /usr/lib/libc++.1.dylib\n    0x7fff924c2000 -     0x7fff924f2ff7  libsandbox.1.dylib (460.20.9)  /usr/lib/libsandbox.1.dylib\n    0x7fff924f3000 -     0x7fff924f5ff7  com.apple.SafariServices.framework (11601 - 11601.3.9) <86B9C242-287E-3A40-9F3A-AABAE3538C17> /System/Library/PrivateFrameworks/SafariServices.framework/Versions/A/SafariServices\n    0x7fff92701000 -     0x7fff92702fff  com.apple.TrustEvaluationAgent (2.0 - 25) <0239494E-FEFE-39BC-9FC7-E251BA5128F1> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\n    0x7fff9273b000 -     0x7fff9273bff7  libunc.dylib (29) <1D0F8265-F026-3CBD-93D3-F8DF14FFCE68> /usr/lib/system/libunc.dylib\n    0x7fff9273c000 -     0x7fff92787ff7  com.apple.CoreMediaIO (703.0 - 4791) <7D342CFF-D074-3CAB-B76C-E1F878740AA6> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO\n    0x7fff92788000 -     0x7fff928cdfff  com.apple.QTKit (7.7.3 - 2943) <1477C5F3-63B2-386D-A911-481BEFAFEB58> /System/Library/Frameworks/QTKit.framework/Versions/A/QTKit\n    0x7fff92c7e000 -     0x7fff92cb8fff  com.apple.QD (3.12 - 302) <3F36A108-C557-353A-A3F7-80DDCB82BB37> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\n    0x7fff92cb9000 -     0x7fff92cbafff  liblangid.dylib (122) <9CC4F0D1-5C51-3B69-BC8F-EE3A51FD0822> /usr/lib/liblangid.dylib\n    0x7fff92cbb000 -     0x7fff93361ffb  com.apple.JavaScriptCore (11601 - 11601.3.7)  /System/Library/Frameworks/JavaScriptCore.framework/Versions/A/JavaScriptCore\n    0x7fff93382000 -     0x7fff9339cfff  com.apple.Kerberos (3.0 - 1) <836358DE-2731-3ACD-98E3-E5FA48917728> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\n    0x7fff9339d000 -     0x7fff933c8ffb  libarchive.2.dylib (33.20.2) <6C370A21-63FD-3A68-B4B3-5333F24B770B> /usr/lib/libarchive.2.dylib\n    0x7fff9343d000 -     0x7fff93489ff3  com.apple.HIServices (1.22 - 549) <14FB5BB6-8456-39F9-A694-8A1C12426880> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\n    0x7fff9348a000 -     0x7fff9348afff  com.apple.ApplicationServices (48 - 48)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\n    0x7fff9351e000 -     0x7fff9351efff  com.apple.CoreServices (728.6 - 728.6) <1FC9300C-6D3D-330C-829C-C8F094BC38C6> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\n    0x7fff9351f000 -     0x7fff937afff7  com.apple.RawCamera.bundle (6.18 - 828)  /System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera\n    0x7fff937ce000 -     0x7fff937cefff  com.apple.Accelerate (1.10 - Accelerate 1.10)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\n    0x7fff937cf000 -     0x7fff937d7fff  libMatch.1.dylib (27) <3AC0BFB8-7E69-3DBE-A175-7F3946FC4554> /usr/lib/libMatch.1.dylib\n    0x7fff937d8000 -     0x7fff937d8fff  com.apple.quartzframework (1.5 - 21) <5DC3D0D9-9E3F-3AA5-92F1-F229907A49B9> /System/Library/Frameworks/Quartz.framework/Versions/A/Quartz\n    0x7fff938ad000 -     0x7fff938b2fff  com.apple.TCC (1.0 - 1)  /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\n    0x7fff938b3000 -     0x7fff938bfff7  com.apple.speech.synthesis.framework (5.4.12 - 5.4.12)  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\n    0x7fff93938000 -     0x7fff93b43fff  libFosl_dynamic.dylib (16.24) <363B7CEE-B662-32F3-9D7B-245E64927C35> /usr/lib/libFosl_dynamic.dylib\n    0x7fff93b44000 -     0x7fff93b48fff  libpam.2.dylib (20)  /usr/lib/libpam.2.dylib\n    0x7fff93b4b000 -     0x7fff93bf6fff  com.apple.PDFKit (3.1 - 3.1) <4F470085-BBE3-3A75-AB79-430426F72CE4> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/PDFKit.framework/Versions/A/PDFKit\n    0x7fff93bff000 -     0x7fff93bfffff  com.apple.Accelerate.vecLib (3.10 - vecLib 3.10)  /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\n    0x7fff93c00000 -     0x7fff93c00fff  libenergytrace.dylib (10)  /usr/lib/libenergytrace.dylib\n    0x7fff93c5f000 -     0x7fff93cf4fff  com.apple.ink.framework (10.9 - 214) <6B573126-A6E9-357F-B36A-AA5BDC0BEAF8> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\n    0x7fff93d3e000 -     0x7fff93db4ff7  com.apple.MMCS (1.3 - 351) <13D01D37-66F0-30BB-AA7E-D1D348F738E3> /System/Library/PrivateFrameworks/MMCS.framework/Versions/A/MMCS\n    0x7fff93e16000 -     0x7fff93e1efff  libcopyfile.dylib (127)  /usr/lib/system/libcopyfile.dylib\n    0x7fff93e4c000 -     0x7fff93ed4fff  com.apple.CoreSymbolication (3.1 - 58048.1) <2DFAF855-0528-370D-B4B0-EE0236766D9D> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\n    0x7fff93f03000 -     0x7fff93f2cfff  libsystem_info.dylib (477.20.1) <6513635B-4ADE-3B45-BF63-ED7AC565B0C9> /usr/lib/system/libsystem_info.dylib\n    0x7fff93f4b000 -     0x7fff93f5bfff  libbsm.0.dylib (34) <7E14504C-A8B0-3574-B6EB-5D5FABC72926> /usr/lib/libbsm.0.dylib\n    0x7fff93f69000 -     0x7fff93f85ff7  libextension.dylib (78) <589FA312-F17C-3A8D-986F-FD995D0065D5> /usr/lib/libextension.dylib\n    0x7fff93fa0000 -     0x7fff9420dfff  com.apple.imageKit (2.6 - 932) <6738F065-3D55-3165-8D3E-33AA18D6E3EA> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/ImageKit.framework/Versions/A/ImageKit\n    0x7fff94227000 -     0x7fff94237ff3  com.apple.ProtocolBuffer (1 - 242) <127AF54F-615B-362A-A221-3E758C46A235> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\n    0x7fff94238000 -     0x7fff94610fef  com.apple.CoreAUC (214.0.0 - 214.0.0)  /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC\n    0x7fff94611000 -     0x7fff94613ff7  com.apple.securityhi (9.0 - 55006) <516B018C-177A-3FAD-8487-97B50FB67DD1> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\n    0x7fff94614000 -     0x7fff94616fff  com.apple.loginsupport (1.0 - 1) <9B2F5F9B-ED38-313F-B798-D2B667BCD6B5> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\n    0x7fff94617000 -     0x7fff94a88ff3  com.apple.GeoServices (1.0 - 1151.2.13.9) <52A8FBB6-267C-3371-A516-264572B5800F> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices\n    0x7fff94a89000 -     0x7fff94ae7fff  com.apple.SystemConfiguration (1.14 - 1.14)  /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\n    0x7fff94b1a000 -     0x7fff94b35ff7  libCRFSuite.dylib (34) <078B4CD8-6A8C-3067-B2BA-0C2A0BAB8AC3> /usr/lib/libCRFSuite.dylib\n    0x7fff94b43000 -     0x7fff94b67fff  com.apple.quartzfilters (1.10.0 - 1.10.0) <58FAFE0C-A2D8-3746-AC8F-BF553A7CDED7> /System/Library/Frameworks/Quartz.framework/Versions/A/Frameworks/QuartzFilters.framework/Versions/A/QuartzFilters\n    0x7fff94b68000 -     0x7fff94b73fff  libcsfde.dylib (517.20.1) <42376761-F1B3-3086-AFBC-231507582BBE> /usr/lib/libcsfde.dylib\n    0x7fff94b9e000 -     0x7fff94fccfff  com.apple.vision.FaceCore (3.3.1 - 3.3.1)  /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\n    0x7fff94fcd000 -     0x7fff94fe3fff  com.apple.CoreMediaAuthoring (2.2 - 953)  /System/Library/PrivateFrameworks/CoreMediaAuthoring.framework/Versions/A/CoreMediaAuthoring\n    0x7fff94fe4000 -     0x7fff952d9fff  com.apple.HIToolbox (2.1.1 - 807.2)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\n    0x7fff952e1000 -     0x7fff95333fff  com.apple.AppleVAFramework (5.0.32 - 5.0.32) <082B5F3A-6FB2-3444-9B84-F8675BFCE517> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\n    0x7fff95334000 -     0x7fff95364ff3  com.apple.CoreAVCHD (5.8.0 - 5800.4.2)  /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD\n    0x7fff95365000 -     0x7fff953c6ff7  libsystem_network.dylib (583.20.10) <1C0410F3-F66E-3B0D-B8AD-0D49AB15A529> /usr/lib/system/libsystem_network.dylib\n    0x7fff953c7000 -     0x7fff953faff7  com.apple.MediaKit (16 - 809)  /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit\n    0x7fff953fb000 -     0x7fff953feffb  libdyld.dylib (360.18) <5F3777A7-F07E-3D5F-BFA3-A920FF4170ED> /usr/lib/system/libdyld.dylib\n    0x7fff95427000 -     0x7fff9545eff7  com.apple.LDAPFramework (2.4.28 - 194.5) <79D981F2-F70C-3E47-B124-DC0C90D45563> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP\n    0x7fff9545f000 -     0x7fff954affff  libcups.2.dylib (435) <28A05475-9DBF-35EA-B218-3432B69EA18B> /usr/lib/libcups.2.dylib\n    0x7fff9554b000 -     0x7fff9563dff7  libiconv.2.dylib (44)  /usr/lib/libiconv.2.dylib\n    0x7fff956de000 -     0x7fff9577efff  com.apple.ViewBridge (159 - 159)  /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge\n    0x7fff9577f000 -     0x7fff95784fff  com.apple.DiskArbitration (2.7 - 2.7)  /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\n    0x7fff95833000 -     0x7fff95ac9fff  libmecabra.dylib (696.4) <0A1574F0-3222-3856-A1C6-D8BE20DC4C48> /usr/lib/libmecabra.dylib\n    0x7fff95aca000 -     0x7fff95b81ff7  com.apple.CoreDuet (1.0 - 1) <20BDA287-415A-385E-BCB5-934D165BDAA4> /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet\n    0x7fff95c6b000 -     0x7fff95eb7ff7  com.apple.AddressBook.framework (9.0 - 1679.4)  /System/Library/Frameworks/AddressBook.framework/Versions/A/AddressBook\n    0x7fff95f09000 -     0x7fff95f3aff7  libtidy.A.dylib (15.17) <03EF1071-8B43-3B41-9879-118FA27F89C5> /usr/lib/libtidy.A.dylib\n    0x7fff95f48000 -     0x7fff95f5dfff  com.apple.ToneKit (1.0 - 1) <298E6855-B818-3949-85ED-08CF12ACEE59> /System/Library/PrivateFrameworks/ToneKit.framework/Versions/A/ToneKit\n    0x7fff961b5000 -     0x7fff96207fff  com.apple.ImageCaptureCore (7.0 - 7.0) <68537DDB-383F-3D4D-8125-789053333B13> /System/Library/Frameworks/ImageCaptureCore.framework/Versions/A/ImageCaptureCore\n    0x7fff96214000 -     0x7fff9621aff7  com.apple.speech.recognition.framework (5.1.1 - 5.1.1)  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\n    0x7fff9621b000 -     0x7fff96260ff7  com.apple.coreservices.SharedFileList (24.4 - 24.5) <72156BE7-0804-3F90-9AF9-14C4739430C2> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\n    0x7fff9628e000 -     0x7fff96296fff  libsystem_networkextension.dylib (385.20.6)  /usr/lib/system/libsystem_networkextension.dylib\n    0x7fff962cb000 -     0x7fff962d6fff  com.apple.CrashReporterSupport (10.11 - 717) <474544AD-1199-3ECC-90E5-071847BA72C6> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\n    0x7fff962d8000 -     0x7fff962fdff7  libPng.dylib (1442)  /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\n    0x7fff9631c000 -     0x7fff9631eff7  libRadiance.dylib (1442) <1E42E394-4CD2-3E10-8591-9BB234829AC6> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\n    0x7fff9631f000 -     0x7fff96348ff7  libxslt.1.dylib (14)  /usr/lib/libxslt.1.dylib\n    0x7fff964f7000 -     0x7fff96526ffb  com.apple.datadetectors (5.0 - 308)  /System/Library/PrivateFrameworks/DataDetectors.framework/Versions/A/DataDetectors\n    0x7fff966d0000 -     0x7fff96a65fdb  com.apple.vImage (8.0 - 8.0) <4BAC9B6F-7482-3580-8787-AB0A5B4D331B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\n    0x7fff96c4d000 -     0x7fff96cadfff  com.apple.QuickLookFramework (5.0 - 696.3)  /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook\n    0x7fff96cb6000 -     0x7fff96cd0ff3  liblzma.5.dylib (10)  /usr/lib/liblzma.5.dylib\n    0x7fff96f15000 -     0x7fff96f17ff7  libsystem_configuration.dylib (802.20.7) <5FD79070-36CC-3D02-BEA7-BB5D2AE97D5D> /usr/lib/system/libsystem_configuration.dylib\n    0x7fff96f1a000 -     0x7fff96f54ff7  com.apple.DebugSymbols (132 - 132)  /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\n    0x7fff96f5d000 -     0x7fff96f7efff  com.apple.Sharing (442.9.1 - 442.9.1) <672DE6DF-98E0-30A4-BA25-44BDE188D0BE> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\n    0x7fff96f7f000 -     0x7fff9714dffb  com.apple.QuartzCore (1.11 - 410.14)  /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\n    0x7fff9714e000 -     0x7fff9714efff  com.apple.audio.units.AudioUnit (1.13 - 1.13)  /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\n    0x7fff971aa000 -     0x7fff971e2fff  com.apple.RemoteViewServices (2.0 - 99) <596153FD-3CB9-3FED-9D63-1B73B01AC6DB> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\nExternal Modification Summary:\n  Calls made by other processes targeting this process:\n    task_for_pid: 4\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by this process:\n    task_for_pid: 0\n    thread_create: 0\n    thread_set_state: 0\n  Calls made by all processes on this machine:\n    task_for_pid: 100382\n    thread_create: 0\n    thread_set_state: 0\nVM Region Summary:\nReadOnly portion of Libraries: Total=288.8M resident=0K(0%) swapped_out_or_unallocated=288.8M(100%)\nWritable regions: Total=182.4M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=182.4M(100%)\nVIRTUAL   REGION\nREGION TYPE                        SIZE    COUNT (non-coalesced) \n===========                     =======  ======= \nAccelerate.framework               256K        3 \nActivity Tracing                  2048K        2 \nCG backing stores                 12.4M        5 \nCG image                          1168K       82 \nCG raster data                      32K        3 \nCG shared images                   304K        8 \nCoreAnimation                     10.2M       92 \nCoreUI image data                 5388K       38 \nCoreUI image file                  192K        4 \nDispatch continuations            8192K        2 \nFoundation                          24K        3 \nImage IO                           432K       20 \nKernel Alloc Once                    8K        3 \nMALLOC                           114.2M       75 \nMALLOC guard page                   48K       10 \nMemory Tag 242                      12K        2 \nMemory Tag 251                      16K        2 \nOpenCL                              32K        5 \nProcess Corpse Info               2048K        2 \nSTACK GUARD                       56.0M        9 \nStack                             11.1M       11 \nVM_ALLOCATE                        108K       15 \n__DATA                            28.6M      271 \n__IMAGE                            528K        2 \n__LINKEDIT                        91.6M       12 \n__TEXT                           197.2M      281 \n__UNICODE                          552K        2 \nmapped file                       86.0M       33 \nshared memory                     16.3M        8 \n===========                     =======  ======= \nTOTAL                            644.5M      976 \nModel: MacBookPro12,1, BootROM MBP121.0167.B14, 2 processors, Intel Core i7, 3.1 GHz, 8 GB, SMC 2.28f7\nGraphics: Intel Iris Graphics 6100, Intel Iris Graphics 6100, Built-In\nMemory Module: BANK 0/DIMM0, 4 GB, DDR3, 1867 MHz, 0x80CE, 0x4B3445364533303445452D45474346000000\nMemory Module: BANK 1/DIMM0, 4 GB, DDR3, 1867 MHz, 0x80CE, 0x4B3445364533303445452D45474346000000\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x133), Broadcom BCM43xx 1.0 (7.21.94.136.1a1)\nBluetooth: Version 4.4.3f4 16616, 3 services, 27 devices, 1 incoming serial ports\nNetwork Service: Wi-Fi, AirPort, en0\nSerial ATA Device: APPLE SSD SM0512G, 500.28 GB\nUSB Device: USB 3.0 Bus\nUSB Device: Bluetooth USB Host Controller\nThunderbolt Bus: MacBook Pro, Apple Inc., 27.1\n. deleting the defaults worked for about 3 searches and then it crashed again. The entries in the groups still do not who up. I believe @d029940 is correct, my groups with one entry are displaying but all my groups with my than one entry are not showing at all.\n. @mstarke 0.6.1 fixed the problem. Thank you\n. ",
    "wty21cn": "+1\n. ",
    "alexbde": "I totally support this feature request. On macOs it's usual to hide windows by clicking on close button. MacPass is the only application I have to hide with CMD + H and it's quite annoying to type my 30+ password when I forget it x.x. I'm really looking forward to see a new release. Is there some chance of getting one in near future? :)\nCould you otherwise just release your current version and mark it as nightly? Looks like there are a bunch of people who would try it on own risk ;). @mstarke What do you think? :). I also experienced this behaviour with 0.7.3. Looks like it's fixed with latest continuous build. I'm on 0.7.3 (20180313160329-continuous).. Okay. Maybe it's only I haven't notice it since then ;). I have same behaviour with macOS 10.13.3 and MacPass 0.7.3 (20180313160329-continuous). Can also reproduce it with Chrome 65. Workaround is to exit fullscreen mode, perform autotype and enter fullscreen mode again :/. ",
    "blynx": "Also: Simply deleting an item doesnt trigger that \"file changed\" state thing - is this intended?\n. I tried the latest release now - (0.6.2)\nthe state gets saved now all the time the file gets locked. nice!\nBut deleting (and adding) a key-entry is not really recognized here.\n. ",
    "avkiller": "Same issue\n. ",
    "sebastianhofer": "No I don't want to move.\nHm, may be I forget something to do? I click the 'plus' symbol in Window Association and select one window from the drop down. Than I press 'cmd + s'.\n. Ok I solved the problem. It was the wrong database. I used an old *.kdb database. I generated a keepass2 database, exported my old entries and imported it there. Now I can save my target windows :-)\n. ",
    "vvoody": "Call for this feature! Thanks. Otherwise, I can't leave Kypass Companion.\n. ",
    "bz007": "Actually I have troubles on any URL I had tried. For me it looks like hot key is not working at all. I postponed this behaviour for future investigations and only yesterday I discovered the exceptions in logs. This is why I filled this bug. I am ready to make any tests you provide, I have xcode installed and even can recompile the binaries.\n. The last executing is here:\n\nNext step over rises exception.\nAnd there is the workaround, disable the \"Host match\" in options whatever it means.\n. Please make new binary because this well known issue is really critical and causes passwords may be lost.. ",
    "leonvers": "Yes, I konw that.\nNo, I don't want them to toggle back to dotted view. I want another lock when I press the eye button. So I need to insert my password again before viewing the password in plain text. It would feel a lot more secure. Do you understand?\n. Yeah, you're right. It would be too complicated.\nI guess I should just lock my database when I leave my computer alone.\nThanks for your answers! :)\n. ",
    "SCdF": "Hi! It's better, but still slow for that many entries, compared to something like KeepassX. Let me know if you want a video or more info (I probably have more keys now!). ",
    "chcao052": "Do you see any problem in my cmd history:\n 549  cd MacPass\n  550  git checkout 0.6.2-alpha\n  551  git submodule update --init --recursive\n  552  carthage bootstrap --platform Mac\n  553  ls\n  554  cd ..\n  555  ls\n  556  cd MacPassHTTP/\n  557  ls\n  558  xcodebuild \nHere is MacPass:\n$git status\nHEAD detached at 0.6.2-alpha\nnothing to commit, working directory clean\nHere is MacPassHTTP:\n$ git status\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nnothing to commit, working directory clean\n. What is the cmd for clean rebuild both MacPass and MacPassHTTP?\n. I open the project with Xcode  and  rebuild macpass, the problem go away. Please close the issue \n. ",
    "LiljebergXYZ": "Is there any reason the new KeePassKit API isn't used in the master branch yet? I see in Xcode is noted as version 0.6.2 however it seems to be behind on the KeePassKit API.\n. My mistake then, I assumed it was using a newer version from your message. Here's to hoping for an update (or time to update it myself). Thanks for the prompt reply!\n. ",
    "benjaminblack": "I store the database on my server running ownCloud, so that I can share it between multiple devices. I wanted to access the database from a locked-down Mac, on which I am unable to install the ownCloud client, but I can map an smb network shared folder.  OwnCloud runs as the Apache user, so for security I did not want to simply share the ownCloud folder directly.  So, I set up a shared folder on my server, and after setting appropriate ACL permissions, I first tried to create a symbolic link within the smb shared folder, to the kdbx file under the control of ownCloud, but MacPass reported it \"cannot open files of this type\" when I tried to open it. A hard link allowed MacPass to open the file, but saving it breaks the hard link.\n. ",
    "christopherowen": "99\n. ",
    "workflo": "Does not work for me, yet. The password field is focussed only occasionally. Can't figure out why it sometimes works and most of the time does not.. At least for me, the bug seems to be gone, now.\nIn my case Notes were not saved when I just hit Cmd+S Cmd+Q without explicitly unfocussing the text area before saving. With the current master it works :). ",
    "Ringelnatz": "I would prefer that the default focus is on the folder that was open when the files was saved. This is IMHO the default behaviour of the official Windows application.\n. ",
    "dflick": "I did the following:\n1. new entry + notes, save, exit -> start again, new entry but no notes\n2. edit this entry, add note, save, exit -> start again, check entry, no note\n3. BUT edit entry, add note, select another entry, save, exit -> start again, check entry, notes field is filled with my note\nWTF? :D\n/EDIT: another way is:\nnew entry + note, deselect this new entry (by clicking in blank space), save and exit. if you then restart the note is in notes field.\nreally strange?!\n. ",
    "fusenigk": "I can reproduce this bug too.\n. ",
    "tcz305": "I have the same issue.\nNotes are not always saved when I create a new note, save and quit. On app reopen the notes field is empty and I sometimes have to renter the note several times, save, and reopen for it to stick.\n. using 0.6.2, autotype only works on some sites, others it says no match.\nalso on the sites it work, most of them the autotype at first types gibberish or something else from my clipboard, have to go back and autotype again and it works the second time\n. ",
    "ierdnah": "I have the same issue. The new content added to \u201cNotes\u201d field from kdb databases it\u2019s not saved from version 0.6.\nIn version 0.5.2 saving new added content in \u201cnotes\u201d field works.\n. With latest version build from git the Notes field is readonly.\n. Which commit can be used for notes editing to work ?\n. Duplicate for https://github.com/mstarke/MacPass/issues/445\n. ",
    "achalddave": "Thank you for the quick fix! One note: It would be helpful if this were noted in the FAQs or even reported in the application itself, especially since the issue has been known and hasn't been fixed in a stable release for about a year. I have been losing notes for over a week and did not realize it until just now when I went back to look one up.. ",
    "FerretDave": "it happens every time for me, and if I try and view the URL myself, I get a\n'not found'  for your repo, but it works ok for Sparkle !\nand worth noting, that the error varies between a few different URLs each\ntime I run it:\nError Domain=NSURLErrorDomain Code=-1001 \"The operation couldn\u2019t be\ncompleted. (NSURLErrorDomain error -1001.)\" UserInfo=0x7fc18343b5d0\n{NSErrorFailingURLStringKey=\nhttps://api.github.com/repos/mstarke/HNHUi/releases/tags/1.0.1,\nNSUnderlyingError=0x7fc183635760 \"The operation couldn\u2019t be completed.\n(kCFErrorDomainCFNetwork error -1001.)\", NSErrorFailingURLKey=\nhttps://api.github.com/repos/mstarke/HNHUi/releases/tags/1.0.1}\nError Domain=NSURLErrorDomain Code=-1001 \"The operation couldn\u2019t be\ncompleted. (NSURLErrorDomain error -1001.)\" UserInfo=0x7fc18343b5d0\n{NSErrorFailingURLStringKey=\nhttps://api.github.com/repos/mstarke/HNHUi/releases/tags/1.0.1,\nNSUnderlyingError=0x7fc183635760 \"The operation couldn\u2019t be completed.\n(kCFErrorDomainCFNetwork error -1001.)\", NSErrorFailingURLKey=\nhttps://api.github.com/repos/mstarke/HNHUi/releases/tags/1.0.1}\nError Domain=NSURLErrorDomain Code=-1001 \"The operation couldn\u2019t be\ncompleted. (NSURLErrorDomain error -1001.)\" UserInfo=0x7f9a12f06300\n{NSErrorFailingURLStringKey=\nhttps://api.github.com/repos/sparkle-project/Sparkle/releases/tags/1.14.0,\nNSUnderlyingError=0x7f9a12c5fe50 \"The operation couldn\u2019t be completed.\n(kCFErrorDomainCFNetwork error -1001.)\", NSErrorFailingURLKey=\nhttps://api.github.com/repos/sparkle-project/Sparkle/releases/tags/1.14.0}\nError Domain=NSURLErrorDomain Code=-1005 \"The operation couldn\u2019t be\ncompleted. (NSURLErrorDomain error -1005.)\" UserInfo=0x7ff062d0b3b0\n{NSErrorFailingURLStringKey=\nhttps://api.github.com/repos/mstarke/HNHUi/releases/tags/1.0.1,\nNSErrorFailingURLKey=\nhttps://api.github.com/repos/mstarke/HNHUi/releases/tags/1.0.1,\n_kCFStreamErrorDomainKey=1, _kCFStreamErrorCodeKey=57,\nNSUnderlyingError=0x7ff062d0fa20 \"The operation couldn\u2019t be completed.\n(kCFErrorDomainCFNetwork error -1005.)\"}\n\ncurl\nhttps://api.github.com/repos/mstarke/KeePassKit/releases/tags/4406caed2050c0b5be911d66589647c205660f32\n{\n  \"message\": \"Not Found\",\n  \"documentation_url\": \"https://developer.github.com/v3\"\n}\ncurl https://api.github.com/repos/mstarke/HNHUi/releases/tags/1.0.1\n{\n  \"message\": \"Not Found\",\n  \"documentation_url\": \"https://developer.github.com/v3\"\n}\n\ncurl\nhttps://api.github.com/repos/sparkle-project/Sparkle/releases/tags/1.14.0\n|head\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time\n Current\n                                 Dload  Upload   Total   Spent    Left\n Speed\n100  4963  100  4963    0     0   8799      0 --:--:-- --:--:-- --:--:--\n 8799\n{\n  \"url\": \"\nhttps://api.github.com/repos/sparkle-project/Sparkle/releases/2791202\",\n  \"assets_url\": \"\nhttps://api.github.com/repos/sparkle-project/Sparkle/releases/2791202/assets\n\",\n  \"upload_url\": \"\nhttps://uploads.github.com/repos/sparkle-project/Sparkle/releases/2791202/assets{?name,label}\n\",\n  \"html_url\": \"\nhttps://github.com/sparkle-project/Sparkle/releases/tag/1.14.0\",\n  \"id\": 2791202,\n  \"tag_name\": \"1.14.0\",\n  \"target_commitish\": \"master\",\n  \"name\": \"\",\n  \"draft\": false,\nOn 4 April 2016 at 12:28, Michael Starke notifications@github.com wrote:\n\nJust checked. It's working for me so it might have been an hiccup on\nGitHub's end.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/447#issuecomment-205254095\n. Carthage 0.15.2 is the one I'm using, I'll try wiping out the install and\nreinstalling brew/carthage from scratch, to see if that makes any\ndifference.\n\nOn 4 April 2016 at 13:15, Michael Starke notifications@github.com wrote:\n\nI have no clue why the api doesn't work, I did not change anything at my\nend. The tag is there. I just tested with Carthage 0.15.2 and it works as\nwell. Fetches everything without an issue.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/447#issuecomment-205271513\n. Well, removing the MacPass dir, and carthage completely, and starting again, made no difference. that carthage bootstrap just doesn't seem to like my system (running on Yosemite). I've obviously got some connectivity as I can clone from github ok, just cannot boostrap with carthage. Is there a way to manually do what carthage does?\n\nI will give up trying to compile for now, how long till a new binary is released?\n\ngit clone https://github.com/mstarke/MacPass\nCloning into 'MacPass'...\nremote: Counting objects: 9884, done.\nremote: Total 9884 (delta 0), reused 0 (delta 0), pack-reused 9884\nReceiving objects: 100% (9884/9884), 21.77 MiB | 3.80 MiB/s, done.\nResolving deltas: 100% (6510/6510), done.\nChecking connectivity... done.\nChecking out files: 100% (663/663), done.\ncd MacPass\ngit submodule update --init --recursive\nSubmodule 'DDHotKey' (https://github.com/mstarke/DDHotKey.git) registered for path 'DDHotKey'\nSubmodule 'TransformerKit' (https://github.com/mattt/TransformerKit.git) registered for path 'TransformerKit'\nCloning into 'DDHotKey'...\nremote: Counting objects: 114, done.\nremote: Total 114 (delta 0), reused 0 (delta 0), pack-reused 114\nReceiving objects: 100% (114/114), 64.98 KiB | 0 bytes/s, done.\nResolving deltas: 100% (61/61), done.\nChecking connectivity... done.\nSubmodule path 'DDHotKey': checked out 'dfab50eb22782850ec836a92d56d16bdb6b5912a'\nCloning into 'TransformerKit'...\nremote: Counting objects: 417, done.\nremote: Total 417 (delta 0), reused 0 (delta 0), pack-reused 417\nReceiving objects: 100% (417/417), 80.68 KiB | 0 bytes/s, done.\nResolving deltas: 100% (238/238), done.\nChecking connectivity... done.\nSubmodule path 'TransformerKit': checked out '337c309a4cf49ddec8902fd6de6d08b2cf8bd95f'\ncarthage bootstrap --platform Mac\nError Domain=NSURLErrorDomain Code=-1005 \"The operation couldn\u2019t be completed. (NSURLErrorDomain error -1005.)\" UserInfo=0x7fcb21f15350 {NSErrorFailingURLStringKey=https://api.github.com/repos/mstarke/KeePassKit/releases/tags/4406caed2050c0b5be911d66589647c205660f32, NSErrorFailingURLKey=https://api.github.com/repos/mstarke/KeePassKit/releases/tags/4406caed2050c0b5be911d66589647c205660f32, _kCFStreamErrorDomainKey=1, _kCFStreamErrorCodeKey=57, NSUnderlyingError=0x7fcb21f154f0 \"The operation couldn\u2019t be completed. (kCFErrorDomainCFNetwork error -1005.)\"}\ncurl https://api.github.com/repos/mstarke/KeePassKit/releases/tags/4406caed2050c0b5be911d66589647c205660f32\n{\n  \"message\": \"Not Found\",\n  \"documentation_url\": \"https://developer.github.com/v3\"\n}\n. Just tried the .gitconfig changes noted in that carthage reference - that didn't make any difference I'm afraid, though I was never prompted for a password when I tried the git clone - then again, I'm not getting any bad credentials error anyway.\n. How about just pushing a binary out of the latest code ? ;-)\n. Like the colourisation, but would it not be simpler(for now) to just force the font for this field to be one of the fixed width clear fonts?. Or just have the installer run a prompt suggesting \"you should check and update any plugins to ensure compatibility\" ? and/or add a method for plugins to check for updates themselves, and add this to the main 'check for updates' option ?. Yes please, the character types defined should be considered a minimum, rather than optional.. Seconded, password requirements are generally defined as a minimum number of characters from each list, so if I indicate that a special character is 'allowed', I am generally doing so as it is required, and I always want at least one such character in my password (etc, for the other permutations). . \n",
    "magebarf": "Can add that while I still have not ruled out that it has something to do with sleep mode, an \"artificial sleep\", by using Sleep from the apple menu, does not seem to trigger it...\nCurrently have my process up and running with some breakpoints in place so I'll hopefully be able to determine tomorrow if its stopped working, and then on what level the breakpoints stop being triggered...\n. Some days in an things are still running nicely and breakpoints are triggered as expected.\nWill have to revert back to the released build and see if I can reproduce again. Don't know if running with debugger or the specific build type alters something here, so will do a test against baseline again.\n. I've currently switched my debug run to use a release build, so hopefully I can \"catch\" the issue soon (unless the addition of debuginfo and hooking a debugger is enough to keep it in balance, in which case I'm leaning towards some timing related issue).\nI've got breakpoints setup in 4 or 5 layers, so if it stops working we should at least find out if its confined to DDHotKey, or if its within MacPass itself...\n. The release build running under debugger had so far shown the issue...\nOne thing I do notice that definitely is a different behavior while running under the debugger though is the fact that the breakpoints makes XCode be the application in the foreground, which may or may not be part of why the issue does not show up.\nCurrently I'm back to running latest downloaded release to see if I once again can get the autotype to stop working...\n. Still no luck... Still get the overlay confirming success or failure each time... Unsure what conditions were met when it stopped working, but will try to figure it out...\n. Very possible cause on my end as well.\nCan't confirm this with 100% certainty, as I'm unaware of what the settings were way back when I reported, but I do remember tweaking those values sometime relatively close in time to hot keys stopping to work.\n\n12 aug. 2016 kl. 01:22 skrev ArwedSchmidt notifications@github.com:\nYeah, I can also confirm what bbinoy said. That's it!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Thanks for the pointers @mariosangiorgio \nThey led me to the core of the wrong entropy calculations as well, so i put up #451 to get a fix in place.\n. Joining the choir here!\nWill possibly have a look at it myself if I find the time.. I think that is great to have as a default setting!\n\nIn line with the use case I outlined above, not having to enter credentials in MiniKeePass when close by my home computer, I really would love a checkbox to configure the setting.\nThe main thing I guess is that the user is aware of the behavior.. ",
    "ArwedSchmidt": "I am unable to use that hotkey under any circumstances on my Yosemite 10.10.3. It worked only one or two times directly after installing it. Haven't been able to get to this to work again no matter what key was used. Rebooting doesn't change anything. Could there be an issue with the recording of keystrokes too?\n. Yeah, I can also confirm what bbinoy said. That's it! Note: Not all keys will work. But cmd + 1 finally worked for me.\n. Thanks for checking! I'm using Version 0.6.2 (12420) and toggling \"Include host for matches\" toggles between working and not working with same hotkey on 10.10.3 (Yosemite).\nMy settings are attached. Can I provide any additional information that may help to pin down the issue?\n\n\n\n\nCheers,\nManuel\n. ",
    "cdornfeldnj": "Just chiming in to report that I'm also seeing this bug on the 0.6.2 release. The global autotype hotkey worked once or twice after install, then stopped (it won't even display an overlay now). I tried changing the hotkey to a different key combination with no success. I've just started using MacPass so don't have any experience to compare with prior releases or development versions. OS X 10.11.5 here and I do use the Sleep function often, but even a cold restart doesn't allow me to use the autotype hotkey.\n(Also, big thanks for MacPass, which works great aside from this bug.)\n. ",
    "bbinoy": "Not sure if this is connected to the issue, but I just noticed this behaviour (global autotype doesn't respond anymore) when I activate \"Include Host for matches\" in Settings/Integration. It works when the first two checkboxes are checked, but stops working when ticking the third.\n. ",
    "schreined": "I experienced the same thing as bbinoy. Once I only had the first two boxes checked, it started working again!\n. I've ran into a similar issue, but is tied to using the Chrome Hangouts extension. If I have a Hangouts window open, autotype will never find a match. I close the chat windows, and it works! I've been able to replicate this multiple times.\n. ",
    "darnel": "I think this can be closed, duplicates #90.\n. ",
    "lfaoro": "I actually have the keyfile store on an encrypted filesystem on a usb stick, so unless the stick is in, there's no way to access it and the filesystem requires a password to access it.\nI've always used this system with KeepassX, is there any reason to enforce to not allow saving of the keyfile path unless the DB has a password also? Security wise I believe it's up to the user to decide.\n. ",
    "kgrossjo": "I've got 0.6.2 (12420).  I just checked for updates, it doesn't offer me any.\n. ",
    "jlargentaye": "Admittedly, this is because I'm using MacPass' password generator to generate a memorable password that I'll be typing in frequently, rather than something I'll store in MacPass.\n. Ah, thanks! :D\n. Thanks! I didn't know of the system-wide override possibility. I've now done that as a workaround.\n. Hi @graciano, 0.6.2 was released in Feb 2016, before this commit was made. You'd need to build from latest HEAD to get this.. ",
    "jarmitage": "Yeah, I guess I have a thing about closing windows and apps that I'm 'not using'!\nAre you sure? The reason I suggested it is that I know of apps that appear as menu items instead of on the dock, and when you click the menu item the first option is 'Show App' or 'Show Window' etc. For example (although based on Electron I think): https://qotoqot.com/qbserve/\n. Hey thanks didn't realise there was an update\nAnd yes, most of my crashes have come from using search and undo/redo\nI will post again if anything else happens. ",
    "neon64": "+1. I am currently running a temporary 'fix' that hides the dock icon by editing Info.plist:\n<key>LSUIElement</key>\n<true/>\nI then minimise the window and forget about it (letting MacPassHTTP do its work).\nFor me, the ultimate workflow would be\n1. When ChromeIPass/Passifox sees a login form, and can't connect to the server, it (somehow) automatically opens MacPass and prompts for my password.\n2. Then the window/dock icon is hidden until I double click on the MacPass app or search for it in Spotlight.\nPart 1 would require support from the browser extension and I'm not sure how to implement if browser extensions can even open native apps. Part 2 could be quite easily implemented and toggle in the preferences (use NSApp setActivationPolicy or something)\n. Would it be possible to extend this to actually open the app and focus it if it wasn't already? Or I guess that would be a job the the individual browser plugins, because if MacPass isn't open then they'd have nothing to communicate with.. ",
    "zam6ak": "OK It does work.\nI was specifying keyfile when in fact I only need a master pass.\nMy apologies for the noise.\n. ",
    "bellerofonte": "Sounds great! Thanks!\n. ",
    "tyhawkins": "I see according to https://github.com/mstarke/MacPass/wiki/Status the feature is known not working, but planned.  No reason to keep issue open until then.\n. ",
    "yantaq": "This is great. Thanks so much for doing such a great work.\n. ",
    "arkag": "Database seems to be working on KeePassDroid. I'll leave this open for now.\n. ",
    "shaharck": "Any work around for this issue? (getting the same on lastpass migration too) . ",
    "markschwarz": "I have the same issue when simply hitting \"Save\" (Cmd-S) after creating an entry, which is my most common update workflow day-to-day.  \nTo reproduce: \n1. Add new text in the notes area of an existing entry. \nI was entering 2FA codes, which are high-impact if you misplace them and need them many years from now!\n2. Hit Save.  Cmd-S.\n3. Close the file. \n4. Re-open the file and find the last entry you updated.\nExpected: Cmd-S saves new note data every time.\nActual: Cmd-S doesn't save new note data.  My most recent notes are not there.\nWorkaround: New note data is saved if you move to a second entry before saving.\n. When is this likely to be published as a compiled package, either on \"releases\" or through Sparkle/\"Check for Updates...\"?  I'd like to verify, but I don't have a full XCode setup on my machine.\n. ",
    "JohnTheodore": "You're right!\n. ",
    "gtrpkr": "It would also be nice if the data file would be saved twice as a backup incase the file gets damaged. I keep an old copy and two XML files which I backup after each session when I exit the program. Just another idea. \nThanks\nPaul Heinzman\n. Thank You I will try that. So far I have not found any issues with the\nprogram. \nPaul H. \nFrom:  Michael Starke notifications@github.com\nReply-To:  mstarke/MacPass\nreply+013a13ac2040394029a2e8e4c021a2b1dde8fed51a1cb73e92cf0000000113af1dfe9\n2a169ce09f248a1@reply.github.com\nDate:  Tuesday, July 26, 2016 at 7:47 AM\nTo:  mstarke/MacPass MacPass@noreply.github.com\nCc:  Paul Heinzman gtrpkr@earthlink.net, Author\nauthor@noreply.github.com\nSubject:  Re: [mstarke/MacPass] [feature request] Default Email for newly\ncreated Entries (#482)\nThere's a system in place for that, you can already create new entries based\non templates.\nIt has one flaw though, it does not generate a new password, this might be a\nuseful change in the future!\nCreate a group with entries you want to use as templates:\n https://cloud.githubusercontent.com/assets/58428/17138289/da12b268-533f-11\ne6-8bd0-08be743e62d6.png\nIf no template group is specified, you need to set one in the database:\n https://cloud.githubusercontent.com/assets/58428/17138139/274cd7c6-533f-11\ne6-90f8-6df1f2813cb1.png\nTemplate groups are configured in the advanced section:\n https://cloud.githubusercontent.com/assets/58428/17138299/e47b14fc-533f-11\ne6-98d4-89a1b475cc9c.png\nIf a template group is set, the entries under this group are available als\ntemplates for new entries:\n https://cloud.githubusercontent.com/assets/58428/17138147/2cbcca04-533f-11\ne6-8f79-71c080487085.png\n\u008b\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/482#issuecomment-235256602 , or\nmute the thread \nhttps://github.com/notifications/unsubscribe-auth/AToTrF5dKI20X7AGYutivnI5X\nHbr3xWKks5qZgH-gaJpZM4JSBpQ .\n. ",
    "Strangelovian": "You are welcome.\nThank you for writing this software\nLe lun. 1 ao\u00fbt 2016 09:06, Michael Starke notifications@github.com a\n\u00e9crit :\n\nThanks for the bug report. I'll try to fix this quickly.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/483#issuecomment-236504828,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ADAjGLq4AxckdgVainZ8UrXyWpApRPINks5qbZrmgaJpZM4JZS43\n.\n. Thank you for the fix.\n\nI updated, and I indeed confirm the whole AutoType tag is now kept with the keepass2 case.\nHowever, some nodes underneath AutoType are still lost / altered  after saving with macpass, as with the following example.\nBefore saving with macpass:\n<AutoType>\n    <Enabled>True</Enabled>\n    <DataTransferObfuscation>1</DataTransferObfuscation>\n    <DefaultSequence>{PASSWORD}</DefaultSequence>\n    <Association>\n        <Window>Changer le mot de passe - Battle.net - Mozilla Firefox</Window>\n        <KeystrokeSequence>{Password}</KeystrokeSequence>\n    </Association>\n</AutoType>\nAfter saving with macpass:\n<AutoType>\n    <Enabled>True</Enabled>\n    <DataTransferObfuscation>0</DataTransferObfuscation>\n</AutoType>\ni.e. DataTransferObfuscation value is changed to 0, DefaultSequence is deleted, Association node is deleted.\nAlso for:\n<Group>\n    <EnableAutoType>false</EnableAutoType>\n    <EnableSearching>false</EnableSearching>\n</Group>\nbecomes:\n<Group>\n    <EnableAutoType>null</EnableAutoType>\n    <EnableSearching>null</EnableSearching>\n</Group>\nLast one: all LocationChanged nodes are updated with the current date, whereas they previously held a past date different for each entry before saving.\nThat's pretty much it. I hope I listed the last remaining save discrepancies for you :+1: \n. ",
    "cornercase": "I am part way through implementing this feature.  I have added a menu bar icon and can selectively enable the menu bar and dock icons. @mstarke, feel free to assign this to me if you would like.  I'll hopefully have a merge request by early next week.  If there are any inputs on design or technical implementation details, let me know.\nI merge the proposed menu bar icon into the MacPassHTTP icon? \nProposed UI Changes\n\nAdd 2 check boxes to the General Settings Windows, both enabled by default\nShow Dock Icon\nShow Menu Bar Icon\nWhen user clicks menu bar icon...\nShow MacPass window if hidden\nHide MacPass if shown\n. I started working on the changes and then ran into a few roadblocks and got distracted by writing my thesis. \u00a0I am hoping to get back to the changes in a few weeks now that my life is starting to calm down a little bit, will keep you posted.\n\nOn October 23, 2017 at 2:14:22 AM, Michael Starke (notifications@github.com) wrote:\nThe core functionality is rather straight forward, but I do not know the impact it hast when interacting with MacPass' windows when the Dock icon is hidden. Have to run some tests. But I should be able to add this rather quickly. @cornercase seems to not have gone through with his changes or might have chosen to keep them private :)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n. ",
    "ericmoret": "It would be nice to add an option to unlock MacPass directly from the Menu Bar Icon.\n. ",
    "leksuss": "It would be great if this feature will be implemented. . ",
    "Alph2": "I couldn't agree more : would be a great feature. @cornercase Did you give up on adding it?. ",
    "splendidbits": "I just want to bump this - I'd love this feature. It's a bit annoying having to maintain the window state, or use the \"hide\" cludge to keep connected.. ",
    "georgesnow": "yeah this would be great feature. as the first post mentioned 1Password has global \"Show 1P\" it's also a keyboard shortcut (user configurable) but it also the same as selecting the menu bar icon. which would be value add to MacPass. \nthe focus should be the search field. that would make it easy to type for the entry you want. Then one step further you can trigger auto type for entry or just double click to copy password, which would hide MacPass.\nExample would be i connect to a SMB share or SFTP in Fetch/Cyberduck. \nPassword requested. Select the pw field. Use global keyboard shortcut or menubar icon to reveal MacPass. Focus lands in search. Find Entry. Trigger Autotype. \nThis resolves applications windows where the window doesn't have a name \"Global Autotype\" can match easily. (ex. \"item-0\" or weird ones like \"Dock Progress\" which i often get sadly :( RemoteDesktop and RemoteApps, iTerm, Fetch etc..) It also solves if you have multiple entries for window that can't be easily matched application or window. It makes it truly agnostic to the application at point.\n. THANK YOU @mstarke for adding this in 0.7.4! this is life changing. i can now move items easily between folders and databases! . oh yes, i noticed that. i can live with that since I have folder with all my saved icons. You have 2 options I used Shortcuts app to create a shortcut to reopen the file from iCloud  using MiniKeePass. This forced it download the newest copy and import it into the app and since I put in the shortcuts folder the preferences stayed in minikeeepass. It also worked with keepass Touch. However I finally bought kypass for $6 or whatever it was and use it with MacPass and sync in iCloud in kypass folder and works flawlessly. Then you also get auto fill option for iOS 12. . Forgot the other part you can use WiFi sync for the key file. I haven\u2019t done exhaustive testing. If you interest in the shortcut I made let me know. It insanely simple. To clarify I was testing using SFTP with kypas. I though it would download the key file locally on the iPhone instead of cloud with keepass. That would defeat the purpose of key file. However sadly doesn\u2019t work. it has to see and connect the SFTP server every time it wants to use the key file. I did request for the option of loading a local key file on iOS. \nAgreed with the closed source but I got stuck with wanting to work effectively and I believe paying was a better option.\nKeepass Touch is adding the auto fill as well (emailed and requested it) but again I think they are closed source. . there is a way to load the key file without it syncing. I heard back on the forums. you have to upload to your phone either using Remote File explorer or airdrop or something. (not very non-intuitive and still think there should a File picker option), but anyway.  Then select the open in option and pick KyPass. this saves it locally on the device. \n. https://strongboxsafe.com\nOpen source iOS keepass app. Supports iCloud and autofill\n he recently added support for keepass\nhttps://github.com/mmcguill/Strongbox\nThe developer is responsive and nice. @oehm-smith @mstarke MacPass for desktop is far more feature rich. The app started out by first supporting the pwsafe open source encryption. He added later and recently KeePass support. That being said I plan to stick with MacPass (on the macOS side), but use Strongbox for iOS. And it meets the other criteria @oehm-smith was looking for.\nI would also say according to the documentation if there are fields that you don't see displayed. they are untouched. its just he hasn't added support for them. The app respects the integrity of the data so it's still there you just can't see it in his app.\n. What about making the top entries collapsible? From the top of username to just past the generate button you have collapse button so you only see the title. And allows for the notes text window to be enlarged. Of course it would be nice to be persistent so if you leave that way it stays.\nOne other thought would be since you can widen the inspector. it would be nice to hide the database list in the view menu or with a keyboard shortcut. So when you do widen you can still see entries. So there could toggle view so when you need more entry space. There is list and entry view and a full view with database list, entry, and inspector.. I agree and also if you had an option to expose what global autotype tried to match. I noticed in the notifications it will tell you what seems to be the window name.\nAlthough sometimes I get weird ones like \u201citem-0\u201d but it works if I use it just for that app.\nAnd I found if I use it as tag in the entry. And set global auto type to match on tags. it works pretty well. The tags also are easier to span across entries and use multiple tags. Like work password that is used for 2 different applications. (Example: Iterm2 and fetch) . 4 or 5 word passwords would be nice similar to using the XKCD algorithm and can add the other special characters if needed.\nexample:\nCheckThisBlahOut\n. Global auto type mataches on window name not url. And depends which options you have selected in the preferences. I had the most luck using tags. And check that option off in preferences and add tag to the entry of \u201cGithub\u201d. @mstarke understood. I will refrain from encouraging others. I had noticed that with some websites what you are saying, which is how i ended up using tags. \nHowever, I will say for my situation I found tags worked better in almost all cases (I use it for applications like iTerm, MS Remote desktop). I could use the same tag across different logins and tags were easy to attach to an entry whereas window assc required some up lift.  and if i used multiple tags i could more easily narrow the parameters to get a close match or higher in the list. I would say it's not easy to get to work at first and it took some figuring out, but now it's a way simpler process and management when I add new entries now.. https://www.securityevaluators.com/casestudies/password-manager-hacking/\nI believe they are referring to this article. However, this is specific to windows. However, I am curious is macpass has similar issues on the Mac side. Of course I use both 1Password and Macpass.. awesome that did work! the only i did notice though. even if you have 2 or more databases open it only defaults to opening one of them not multiple databases on relaunching MacPass.\nis the intended the behavior?. not sure, i will have to download the continuous build and check. and hopefully  get back to you tomorrow.. i haven't used the continuous build in long time. I thought i read somewhere you have to uninstall standard release build before using the continuous. is that true and is anything else to flip between the two?\n. tested on the continuous build. same behavior. I opened 2 databases using tabs. first, both locked. quit MacPass re-opened only the first opened database displayed. Tried with both databases unlocked. Quit and re-opened same thing. Only the first open database loads. . i just tested on 0.7.4 same thing. it only re-open the left most tabbed database (or it might be the first). ok no worries. let know if there is something you want me to test. i can send you my settings as well if that would be helpful. \ni did confirm after upgrading that the setting is set to \"always\"\n\ndefaults read com.hicknhacksoftware.macpass \"AppleWindowTabbingMode\"\nalways. i tested as well on 0.7.4 macOS 10.14.3. and i am seeing edited\n\n\n. yup i did that and it seems to have resolved. one note: i also checked off previously \"don't show the message again\" and it seemed to have surpassed the dialog even though global auto type worked. and i hadn't removed it from the list in privacy settings yet.. i am also getting an issue where the Perform AutoType is greyed out. \ni have down arrow or select another entry before the button becomes available again. \nnormally you can just hit Enter with the first match highlighted.\n. ",
    "markushartmann": "I have the same bug an can reproduce it. Version 0.6.2 (12420), MacOSX 10.10.5\nThanks for this software. \n. ",
    "m-o-e": "MacPass always stores the database if it gets locked.\nThe lock mode is useless to me, I never lock MacPass.\nI never even look at MacPass. I just keep it open in the\nbackground and add passwords to it with the Chrome extension.\nConsequently all my changes must be persisted immediately \nor near immediately. I can not switch to MacPass and manually\nhit save every time I add a password. That's not how software\nworks in 2016.\nI don't care what MacPass has to do to realize this requirement.\nMy computer is fast. Rename the old db and save to a new file if\nthat's what it takes. \nHere is how I currently implement \"auto-save on system sleep\",\nvia keyboard maestro automation:\n\nPlease fix this in MacPass.\n. @mstarke Re lock-after-sleep. I'm aware of that setting.\nIt would require me to re-enter the (long) db password\nafter every sleep/wake cycle for no gain. That's why\nI had to resort to KM automation.\nI'm not belittling the work that went into MacPass,\nit's much appreciated. My tone results from the\nfrustration over the fact that a trivial feature\nwould prevent predictable loss of user data\nand broken expectations here.\nIt was one of those precious moments where you\nsit in front of your screen and think \"This didn't really just happen?\".\nAs seen on the issue tracker I'm not the first\nto run into this, and surely not the last.\nWhy not have an auto-save timer in the preferences\nthat fires a save if modified every n seconds while the\nwindow is out of focus (as to not annoy an active user\nwith intermittent beachballs)?\nI tried to emulate that with KM, but due to OSX constraints it\nhas to bring the window to the foreground to trigger a menu item...\n. Yup, my previous post also came out more harsh than intended,\nI apologize for that.\nHowever, I still think the better should not be the\nenemy of the good when critical user data is at stake. \nHaving triggers would be nice, but it should not\nstand in the way of preventing loss of passwords.\nRunning MacPass unlocked indefinitely may seem like an unusual\nmode, but it really is the only one that makes sense in conjunction\nwith the browser extension (which will otherwise just quietly fail\nwhen the database is locked).\nThe number of people using MacPass in this mode will probably only\ngo up, as the faith in closed source password managers declines\nwith every exploit[1].\n[1] https://labs.detectify.com/2016/07/27/how-i-made-lastpass-give-me-all-your-passwords/\n. ",
    "gloryluu": "Thank a lot for your supporting @thy1985.\n. ",
    "metbril": "I don't have Xcode installed, so cannot build my own binary (and don't know how to). How can I get the latest release (now and regularly afterwards) ? Anxious to see what has improved over the last months. I am aware that this is still alpha software.\n. ",
    "mbrucco": "I'm interested to have a newest release... I tried to compile sources... but it fails. I'm not an expert of Xcode.. Can you paste link, please?. ",
    "compuguy": "@alexbde I think that would be an acceptable compromise.. It seems to flush my clipboard after 30 seconds for me.. @lroellin You also need to build MacPassHTTP from source as well: https://github.com/MacPass/MacPassHTTP (and check off load unsecure plugins). . ",
    "dsowinski": "Please disregard this. I did some digging and turns out a combination of spaces and \"|\" in window title associations were causing MacPass to match wrong entry. Both entries are for the same application, just different hosts. After removing all spaces and non alphanumeric characters in both entries and replacing them with \"*\" it now matches them correctly. Thanks.\n. ",
    "miheerdew": "I am interested in working on this. Is there documentation on how to create plugins?\n. ",
    "yepher": "I am not a huge fan of native apps with webviews for the UI but in this case it might be a great solution. \nThe plugin language and UI definition could be a javascript file that runs in a webview. MacPas Could expose some custom hook points that call back into MacPas with the result of the generation. This would have the advantage of easy to extend the UI and a pretty extensive API for creating generation logic.\n. I would be open to implementing this if someone can offer a UX design for how it should look/feel.\nI was thinking it would be a different view but I could see some value of it just being integrated into the existing list/details views.. You are right Some of the HIBP API can be called only once every 1500 msec or so. There is a header in the API response that indicates when it can be called again so I don't think it will be much of an issue to process all the domains and data. I expect I will want to cache the results somehow that does not add some vulnerability (not sure where yet but for sure won't store passwords anywhere). Also as I understand the password API does not have a rate limit so that should not be an issue.\nI was thinking if the user has populated \"URL\" then the domain can be processed to give an indication if/when it has been compromised.\nI am pretty confident about how to implement the API and process the responses. I am not super familiar with how MacPass UI structure is laid out so that will take me a little bit to sort through. I was thinking another option is to show the background of a cell as RED or Orange if it is compromised. This could be instead of adding another column. Thoughts?\nI think there should probably also be a property to enable/disable the processing for this feature.\nOn initial review of the decryption process and document structure I am leaning towards kicking off the API calls around here: MPDocumentWindowController:: showPasswordInputWithMessage if the data is successfully decrypted.\nStop Gaps\n\npcdc is a nice tool where you can process your data that has been exported as XML.\nKeePass-Leak-Detector this is a KeePass plugin. I personally lean towards this being a core feature of MacPass rather than a plugin (mainly because I am not familiar with MacPass plugin architecture). I am not sure if it would be easy to do UX changes as a plugin in MacPass.\n\n. Thanks for the feedback. I will use _didUnlockDatabase as you suggest. Yes, definitely hope to make this KVO compliant to make the magic just sort of happen :)\nI've been using MacPass for years so least I can do to help out. I really appreciate your App.\n. ",
    "damien-list": "Ok, sounds fair for me to not support KDB files. \ud83d\ude04 \nKeep up the good work ! \ud83d\udc4d \n. ",
    "graciano": "Hi, I installed version 0.6.2 and this shortcut is not working for me. (I'm a new mac user, so I'm not sure if this should work by default). ",
    "valueff": "Thanks for the answer. I'll switch to passwords in Latin). Thank you. MacPass has support for unlocking the password database using the Touch ID? On the new MacBook Pro. Tell me please. Thank you.. Thank you for your reply. It will be very interesting.. ",
    "Nightmaren": "It is exactly as you describe. Unchecking the box fixed it. Thank you very much! I apologize for the inconvenience -- I'm still learning the ins and outs of mac :)\n. ",
    "yaoxinghuo": "@mstarke Sorry to bother you, yes, I build with your first commit and encountered the lock/unlock problem, I rebuild with your latest commit, it worked, so I delete my comment... Thanks for you time:)\n. ",
    "rkubik": "I don't see it remembering the key file after opening DB and locking on 10.11.\n\n. 0.6.2 alpha, binary release. \n\nThe domain/default pair of (/Users/user/Library/Preferences/com.hicknhacksoftware.MacPass, RememeberdKeysForDatabases) does not exist\n/Users/user/Library/Preferences/com.hicknhacksoftware.MacPass\n\nDoes exist, though.\n. ",
    "nuudles": "@rkubik I think there was a typo in that defaults key. It should be:\ndefaults read com.hicknhacksoftware.MacPass RememberKeyFilesForDatabases\n. Oh.... fun with typos!\n. @mstarke Touch Bar support only works when the application is active and in the foreground, unless you mean some sort pinned shortcut button that would instantiate the Autotype hotkey. In that case, I don't think we can yet create our own pinned icons. Developer support is limited to the active application area.\n. I'm honestly not sure. I haven't looked into the new Touch Bar stuff at all. I figured that the pinned icons were special Apple things that only Apple could do. Could be worth doing. I think Touch Bar exploration should be a different ticket though.\n. ",
    "mlazowik": "Duplicate of #77?. ",
    "tknerr": "same here, just to confirm the behaviour that @ojwm described in 0.6.2. @mstarke any ETA on a potential 0.7 release?. @mstarke status ping :-). ",
    "DeeeeLAN": "If I connect with a new browser, the keepasshttp dialog that creates a connection key also doesn't dismiss.\n. I have had good success with the app KeePass Touch, I imported the keyfile\nbefore I began using MacPass, however, so if it doesn\u2019t work with MacPass\u2019s\nkeyfile, it is likely an issue with how the file is formatted.\nOn April 3, 2018 at 7:51:05 AM, barylwires (notifications@github.com) wrote:\nHow do you guys who use MacPass as a password solution deal with password\ndemands on an iPhone? Do you avoid accessing password protected sites on\nyour phones? I tried exporting a keyfile from Dropbox into the iOS app\nMiniKeePass, not thinking it would actually work, so not being too\nsurprised that it didn't.\nI appreciate your work on MacPass! Any thoughts on iOS utility?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/MacPass/MacPass/issues/775, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AMR86ALIDSHyoRBD7svaf17uGf_dungYks5tk4xYgaJpZM4TFOUc\n.\n. ",
    "cipnt": "Owning a MBP with Touch ID and having tested the 1Password's implementation, I can confirm it would a cool thing to have in MacPass.\nI can only think of two ways this could potentially be implemented:\n1. the database key would be stored securely by the OS and deployed to decrypt the database whenever a correct fingerprint is detected\n2. the database is stored decrypted but access to it is temporarily locked requiring a valid fingerprint (this is the same implementation in Keepass2Android)\nBoth of these approaches would represent an exploitable security vulnerability, though sometimes we would trade some security over more convenience.. Brilliant news!\nIt does sound like a  potential security vulnerability to have the password stored in Keychain but, as I said before, sometimes we would trade some security over more convenience.\nFileVault would probably be recommended as an additional security to guard your Keychain and the user should be prompted to enable it when they chose to use TouchID in this way.\nGreat work L4grange!. Personally I prefer mnemonic passwords, but agree it would be nice to have multiple options (random characters, random dictionary words, mnemonic,, etc). Agree \u2013 consistency across platforms and clients would be ideal. ",
    "caesar": "This would be fantastic. I would hope for @cipnt's option 1 \u2013\u00a0storing the database key securely in the Keychain protected by TouchID. See https://developer.apple.com/library/content/samplecode/KeychainTouchID/Introduction/Intro.html.\n. @jessemx109 I don't think that's how the Secure Enclave works. It can only store cryptographic keys, and at that, only ones generated directly within the Secure Enclave. The key can then never be read from it; rather, it is instructed to perform cryptographic operations using the keys and return the result.\nFor MacPass's usage, I believe it would be necessary to store and retrieve the actual database key (password).. Great work @L4grange!\nJust one observation from me; I would like to be able to enable (or later disable) TouchID for my database without changing the password. This seems like an unintuitive way to do it. Could there be an option to enable it at the time of opening (decrypting) the database? Rather like a 'remember this password' option?. That sounds like a good solution, thanks!\n. @mstarke I agree with your logic about not supporting when an update is available for all machines running a certain version. BUT, please don't drop support for 10.10 yet, since for it that is not the case \u2013\u00a0it is the last update available for older-generation Macs. (Myself, I only migrated last-week from a machine for which 10.10 was the end of the line.). Great to see some progress here, thanks guys! I'm really looking forward to this.\nIncidentally, Keypass2Android's approach here might be worth considering. It has two options for using the fingerprint: either allow using it to actually unlock the database, which requires storing the password ('securely'), or only use fingerprint for 'quick unlock' - meaning that once the database is unlocked, the app 'locks' after a certain amount of time (but the database is still open in memory), and switching back to the app requires using the fingerprint.\nMight be interesting to have the same options in MacPass?. ",
    "jessemx109": "I would suggest storing the key in the secure enclave instead of the keychain. Here is the documentation for working with the secure enclave\nhttps://developer.apple.com/library/content/documentation/Security/Conceptual/CertKeyTrustProgGuide/SecureKeyGen.html. ",
    "L4grange": "Hello guys. I've been working on adding TouchID support to MacPass and I've got a version running (still needs some polishing on my side). Should I open a PR once it's ready?\nWhat I did:\n1. If the the device has TouchID ask the user if they want to save their DB password in the Keychain. This happens when the user changed the Master DB Password.\n\n\nIf they say yes, the DB password is saved in the keychain and the DB name is saved in a list of \"Touch ID enabled\" databases.\n\n\nWhen MacPass asks for a locked DB's password, if the DB is in the \"TouchID enabled\" databases, offer to unlocked with TouchID\n\n\nIf finger authentication is successful, get the password from the keychain and unlock the DB. (otherwise fallback to normal password input)\n\n\nP.S.: If the user changes the master password and says no to the \"Use TouchID dialog\", then any previously stored password for that database are removed.\nEdit: Created a PR here #638 Suggestions/corrections are very welcome!. I could add an option in the database settings once its decrypted to \"Enable Touch ID\" (and disable if its enabled) which would ask for your password and save it in the keychain etc. Once I solve some problems mstarke pointed out I'll add this feature :). I've made some changes (localized all strings, replaced try/catch blocks with NSErrors) and I'm trying to implement the DB's root UUID instead of name, which I also think is the right way to go. (I was not aware of it's existence before you mentioned it).\nThe only problem I'm facing if that I need access to the UUID while the DB is locked so I can check if it is in the list of TouchID enabled databases. However, [document.root.uuid UUIDString] returns nil when the database is locked (I'm accessing it in the MPPasswordInputController). Any ideas on how to get around this? Thanks for your suggestions and for making this great KeePass client :)\nP.S.: I'll look into the public DB metadata tomorrow, although if this metadata is written onto the DB file, and the user syncs the DB to multiple computers, then the \"is TouchID enabled\" for each database would not be valid on any other computer other than the one where the DB password is saved in the keychain (except if the keychain is synced with iCloud, but my implementation uses the local login keychain). Good observations. If you have any ideas about the root UUID let me know, otherwise I'll have to keep using the DB name, which is not the best choice. \nAbout using Swift: I'm most familiar with Swift and still not that fluent with ObjC but I can understand your concerns. The KeychainPasswordItem was a class I got from Apple's official examples in order to get this working as soon as possible. It should not be too hard for me to translate it.\nThanks for your other comments, I'll do some cleanup. Keep them coming, I'll commit any changes I make later today :). Hey sorry for keeping quiet for so long. I've been very busy with work lately so I did not have the time of looking properly into this. I've made some progress but I got stuck at translating UnsafeMutablePointer to objc.\nI could commit my unfinished file if you want, or you can do it yourself. Either way feel free to do it, since unfortunately I don't have the time right now.. Hey guys, sorry for being gone. Unfortunatelly, I do not have the time to finish this, but I will try to push what I've done in the next days. Not much more work should be needed, just a translation of the KeychainPasswordItem.swift file in objc, and removing any Swift leftovers. Keep in mind that my branch is really old (now) and there will be conflicts. I'll let you know when I push my changes. ",
    "r0bbie": "I currently use KeeWeb on macOS, and lack of TouchID unlock is one of my main frustrations. If MacPass supported this feature I'd definitely switch over. Fingers crossed for progress on this!. ",
    "SjamonDaal": "Any updates on this feature? Would love to start using this!. ",
    "NikolausDemmel": "+1 for drag-and-drop with multiple items. In particular in combination with #721 this can make things tedious.. Haha, I just did the same for half an hour... \ud83e\udd26\u200d\u2642\ufe0f . Thanks for the quick response.\n\nDeleting an entry in the search should simply remove to from the search list. If this isn't the case this is a regression.\n\nI delete with cmd+backspace in the search list. Sometimes the search list remains, with the item remaining and now being shown in \"Recycle bin\" in the \"group\" column. But sometimes even when for one item this just was the case, for the next the item list jumps back to showing all items.\nSo it seems it is a regression.\n\nBy moving you mean via drag an drop? This I need to look into.\n\nYes, I drag and drop 1 item into a different group. For this one it is similar to the deleting. Sometimes the search results stay and only the \"group\" column for that one item changes, but most times I end up with a view of all items again.\nP.S.: The quickest way I found to get back to the selection is cmd+f.\n. ",
    "gggchen": "If I use the Cmd + C system shortcut to copy, Macpass would NOT clear my clipboard.\nBut when I use the MacPass command Option + Cmd + C, Macpass would clear my clipboard, it is fine.. ",
    "bkolada": "Actually it could be better, my idea was a bit narrow. . @michaelblyons looks like it is. ",
    "braham-snyder": "appears to work for me--thank you!. ",
    "cheapsteak": "Ah, perfect, thanks!. ",
    "belaviyo": "Thanks for the reply.\n\nIf you turn the order around, you can get into your Github account, just use normal auto type\n\nThat's what I am doing right now. Still it is pretty tedious task when it comes to find serval passwords per day.  \n\nThis sounds more like the area for a dedicated browser plugin (like MacPassHTTP or something else).\n\nI might start working on a browser extension then. . @mstarke I was looking at the HTTP handlers that KeePassHTTP accepts from the extension side and noticed get-logins only accepts URL matching. Seems like there is an open issue to allow custom search as well https://github.com/pfn/keepasshttp/pull/227. I was wondering if this new handler will be supported by MacPass as well or not. ",
    "whitehat101": "Ah \"already implemented\" in an unreleased version. Should we expect 0.7 soon?. ",
    "fvzwieten": "Never mind. I found it in the pref's. My bad.. ",
    "luwadmin": "Michael, I too would like to aks you for this enhancement, because I am no friend of \"asterisk-itis\", either.  I am the only one in the world to use my computer. Nobody in the world is coming even close to peep over my shoulder, so why shouldn't I see my very own passwords in the clear? Makes no sense, does it? :)   Keep up the outstanding work, BTW. ",
    "mrglutton": "Ditto. There should be an option, just like in a KeePass.. ",
    "nigellh": "Yes please!!!!!. ",
    "m0yP": "Yes, I will; just waiting for your input. All files will be translated in this week.. All files are translated now.. Thanks! Please use my name, Moises Perez.. That's weird, because in my case it does not show when opening a file directly.. Mine's enabled, so it's doing its work correctly. I'm afraid it does not in @fnkr 's case.\n\n . I had the same thought when uploaded Spanish translation. I even uploaded twice thinking it got corrupted the first time.. Sure! Looks way cleaner for all of us. Which editor do you suggest?. ",
    "G4nda1f": "My apologies for the duplicate.  Before submitting, I did a search (apparently among the open cases) and didn't see anything that seemed like this issue.. ",
    "fooman": "Thanks for the quick response. I am currently not seeing any way to edit the Window Associations:\n\nTo me there seems no obvious way to add anything to that field, clicking, right-clicking or via some menu entry.\n\ncan you give me some more details on what app you try to use autotype on?\n\nI am trying to autotype into Chrome Version 55.0.2883.95 (64-bit). Ok did some further tests:\nUsing a new database with only a single entry with title matching the window title Global Autotype it works well. I get the pop up message \"Macpass Match!\" and I am logged in :-)\nUsing my existing kdbx2 database I run into trouble.\nFirst difference I now have multiple matches for this website which I believe is due to the now considered window associations which exist in the database:\nThe page is\nLogin | Xero Accounting Software \nbut it also matches this window association:\nLogin | Mailchimp\nSelecting the correct entry I can see the following happening:\nIt switches the window to Macpass (which didn't happen in the single entry database)\nWhen I switch back to Chrome I see a failed login, from what I can work out from the logged request it only entered the correct username but not the password (autotype sequence is the same throughout and a manual autotype works). Thanks @mstarke - that indeed clears up my inability to edit the window associations. Noticed that some commits in KeePassKit so will see if I can rebuild and try again.. I updated to 0.7.1 and it's working well for me. Thank you Michael.. ",
    "mnggh": "Very good. I'm looking forward for this feature. Maybe it is possible to be able to change the desired behavior as a setting, too. :)\nThank you very much!. Wow! Awesome!\nThanks for the update. Can't await the final version.. Anything i can help you with? Maybe try it and give feedback or anything?. ",
    "livelazily": "Maybe it duplicate with #495, close it. ",
    "timewasted": "Aha, it does indeed work again!  Perfect!. ",
    "dhumes0524": "I am not very skilled on reviewing the console, but when I try the save it shows 4 listings for \u2018macpass\u2019\n[cid:image001.png@01D27BA2.00E59510]\nAnd the only one that has any details to it is the highlighted one, and here are the details: [cid:image002.png@01D27BA2.00E59510]\nFrom: Michael Starke notifications@github.com\nReply-To: mstarke/MacPass reply@reply.github.com\nDate: Tuesday, January 31, 2017 at 9:01 AM\nTo: mstarke/MacPass MacPass@noreply.github.com\nCc: Derek Humes dhumes@kikocompany.com, Author author@noreply.github.com\nSubject: Re: [mstarke/MacPass] Intermittent - \"The Document could not be saved\" (#545)\nCan you take a look at the log (Console.app) to see if anything more substantial gets written there. I'll try to extend the loggin for writing to see why this might happen.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/mstarke/MacPass/issues/545#issuecomment-276370038, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYR0rP8EznBQnn1WSw2p8VeWVFaLekwyks5rXz6jgaJpZM4Lyqp4.\nKIKO Company\nDerek Humes\nIT Operations Manager\noffice  (330) 453-9187 x181\nmobile (330) 575-5263\nkikocompany.com\nConfidentiality Notice: This electronic mail may contain confidential \ninformation belonging to the sender, which is legally privileged. The \ninformation is intended only for the use of the individual(s) or entity \nnamed above. If you are not the recipient, you are hereby notified that \nany disclosure, copying, distribution or taking of any action in \nreliance upon the content of this electronic mail is strictly \nprohibited. If you have received this electronic mail in error, please \nforward to sender immediately. Thank you. [v042016]\n. Yes that appears so.  Also, for whatever reason, my console seems to be reporting differently this time.  Attached are the results inside of console from the time I open my database (9:14AM) through trying to save multiple times and failing (last one at 9:17AM)\nConsoleLog copy.txt\n. Build 12420\nFrom: Michael Starke notifications@github.com\nReply-To: mstarke/MacPass reply@reply.github.com\nDate: Tuesday, January 31, 2017 at 9:26 AM\nTo: mstarke/MacPass MacPass@noreply.github.com\nCc: Derek Humes dhumes@kikocompany.com, Author author@noreply.github.com\nSubject: Re: [mstarke/MacPass] Intermittent - \"The Document could not be saved\" (#545)\nCan you give me the build number of MacPass (it's listed in the about box in parenthesis after the version).\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/mstarke/MacPass/issues/545#issuecomment-276376665, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYR0rFESbsBDV3xVA_XT4FALeMhbQOABks5rX0SLgaJpZM4Lyqp4.\nKIKO Company\nDerek Humes\nIT Operations Manager\noffice  (330) 453-9187 x181\nmobile (330) 575-5263\nkikocompany.com\nConfidentiality Notice: This electronic mail may contain confidential \ninformation belonging to the sender, which is legally privileged. The \ninformation is intended only for the use of the individual(s) or entity \nnamed above. If you are not the recipient, you are hereby notified that \nany disclosure, copying, distribution or taking of any action in \nreliance upon the content of this electronic mail is strictly \nprohibited. If you have received this electronic mail in error, please \nforward to sender immediately. Thank you. [v042016]\n. Any other information I can get you? . My user directory is local.  The location of the database is a mounted network share.  Also the location of the keyfile is a mounted OneDrive folder.\nFrom: Michael Starke notifications@github.com\nReply-To: mstarke/MacPass reply@reply.github.com\nDate: Wednesday, February 1, 2017 at 5:19 AM\nTo: mstarke/MacPass MacPass@noreply.github.com\nCc: Derek Humes dhumes@kikocompany.com, Author author@noreply.github.com\nSubject: Re: [mstarke/MacPass] Intermittent - \"The Document could not be saved\" (#545)\nNot really, I'll need to take a look into this but it seems that MacPass actually loses the file connection. What bothers me is the read-only preferences. Do you use some net mounted user directory?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/mstarke/MacPass/issues/545#issuecomment-276621337, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYR0rH3pdfZnpEMbOPXC9jxo7NO8LG9iks5rYFwggaJpZM4Lyqp4.\nKIKO Company\nDerek Humes\nIT Operations Manager\noffice  (330) 453-9187 x181\nmobile (330) 575-5263\nkikocompany.com\nConfidentiality Notice: This electronic mail may contain confidential \ninformation belonging to the sender, which is legally privileged. The \ninformation is intended only for the use of the individual(s) or entity \nnamed above. If you are not the recipient, you are hereby notified that \nany disclosure, copying, distribution or taking of any action in \nreliance upon the content of this electronic mail is strictly \nprohibited. If you have received this electronic mail in error, please \nforward to sender immediately. Thank you. [v042016]\n. Moving my database off my my AFP mounted network share fixes the issue and it saves everytime, FYI.  This isn\u2019t ideal though because I want to have my database shared so that other members of the IT Dept are able to reach it.\nFrom: Michael Starke notifications@github.com\nReply-To: mstarke/MacPass reply@reply.github.com\nDate: Wednesday, February 1, 2017 at 5:19 AM\nTo: mstarke/MacPass MacPass@noreply.github.com\nCc: Derek Humes dhumes@kikocompany.com, Author author@noreply.github.com\nSubject: Re: [mstarke/MacPass] Intermittent - \"The Document could not be saved\" (#545)\nNot really, I'll need to take a look into this but it seems that MacPass actually loses the file connection. What bothers me is the read-only preferences. Do you use some net mounted user directory?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/mstarke/MacPass/issues/545#issuecomment-276621337, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AYR0rH3pdfZnpEMbOPXC9jxo7NO8LG9iks5rYFwggaJpZM4Lyqp4.\nKIKO Company\nDerek Humes\nIT Operations Manager\noffice  (330) 453-9187 x181\nmobile (330) 575-5263\nkikocompany.com\nConfidentiality Notice: This electronic mail may contain confidential \ninformation belonging to the sender, which is legally privileged. The \ninformation is intended only for the use of the individual(s) or entity \nnamed above. If you are not the recipient, you are hereby notified that \nany disclosure, copying, distribution or taking of any action in \nreliance upon the content of this electronic mail is strictly \nprohibited. If you have received this electronic mail in error, please \nforward to sender immediately. Thank you. [v042016]\n. ",
    "shastry": "I'm terribly sorry @mstarke. I posted in the wrong project! (It was meant for keepassxc).. ",
    "leszekeljasz": "I was just googling for slowness issue and found this bug report. I'm not sure if this is by design or a bug, but on my MCP 2015 it takes about 1-2s to unlock the DB. I've never experienced it before and I use various keepass apps on other systems (Windows, Linux, Android). I just tried KeePassX for Mac and it also unlocks instantly.\nJust downloaded the most recent build and it behaves exactly the same (1-2s delay). Is this expected?\nThanks,\nLeszek. Hi Michael,\nThanks for replying so fast, details below:\nMacPass version: Version 0.7 (20170926160901-continuous)\nEncryption: AES Rijandle\nKey derivation: AES, 6000 rounds\nDB file size: 170KB, I see I have gzip compression enabled in DB settings.\nDB file format is kbdx it's stored on local disk (standard Documents dir).\nI just created a new DB file in kbdx format and added one entry and MacPass\nopens it immediately. Looking at the DB settings and they are nearly the\nsame, more rounds for Key derivation: 50k.\nI'm not sure if 170KB is a lot for keepass DB, but I noticed when searching\nwith Cmd+F, I had a lot of backup entries, probably created by KeePassX. I\nhave ~ 200 regular entries in the DB, + ~1200 in backups folder, so total ~\n1500 entries. I just deleted the backups, the DB is 88KB now and opens\nfast, with very little (but noticeable) delay. The little delay I see now\nis perfectly acceptable for me. Thanks for your suggestions, this is much\nbetter now.\nLeszek\nOn 26 September 2017 at 20:25, Michael Starke notifications@github.com\nwrote:\n\nPlease specify most recent build. (About MacPass -> Version)\nThis is by no means by design. Could you take a look at the settings for\nyour encryption (AES, TwoFish, \u2026)? Do you use AES as key derivation? What\nis the number of rounds? Is the database file stored locally or on a\nnetwork drive? What is the size of the file?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/550#issuecomment-332290779,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGsHsZk1v7U3kJs6VunQjfwi7gkJTZ3-ks5smUGcgaJpZM4L7X_T\n.\n. I use KBDX. I also noticed that deleting an entry from my big DB takes about half a second, and scrolling stutters. Deleting is much faster after I remove the backups. None of this is a problem for me, I just figured it might be worth mentioning.\n\nThanks for great app BTW :-). What should I be looking for? Opening the DB or manipulating password entries, or...?\nI just tried with 20170928140923-continuous and compared it to 20170926160901-continuous (I still had it saved) as well as 0.6.2 (12420). I wasn't able to notice any difference between the two continuous builds when opening the DB file and I tried with two DB sizes: ~1500 entries and ~250. The 0.6.2 build is noticeably slower.. Changing to Argon2 does make a difference for opening the DB, but manipulating it... I'm not sure, it doesn't feel liek it. I used Argon2 with default settings: 2 rounds, 2 threads and 1M for memory. Are two rounds good enough?. What settings should I use? Last time I changed key derivation to Argon and\nit's been very fast when unlocking since then. Should I change it back to\nAES for testing?\nOn 10 October 2017 at 18:39, Michael Starke notifications@github.com\nwrote:\n\nThere are more optimisations present for date parsing in the current\ncontinuous build, can you test if this enhances the unlock delay?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/550#issuecomment-335534003,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AGsHsVY82BCWJwYF3LUiGfv2Pqsfg4qAks5sq53IgaJpZM4L7X_T\n.\n. I'm sorry I missed your previous reply...\n\nI'm back with AES encryption, 50k rounds.\nI just downloaded 0.7.3 and it somehow corrupted the DB file, or maybe it was a coincidence... I tried to open my DB with 0.7.3 and the app crashed with segmentation fault. I tried multiple times, same result, then I reverted to 0.7.0 and it couldn't open it either - although it was working fine last night. I restored from a backup and 0.7.3 works fine. So not sure what happened there.\n0.7 was indeed a bit faster, there is a small lag when opening the DB but it's acceptable. For big database it's slow (still faster than 0.6.2). After deleting the ~1200 backup entries I had in the DB, it's fast enough for me, almost instant. There is other issue that I discovered after using it for some time. I don't want to be picky, it's all good, but since we are in this thread I am just mentioning...\nSo I'm a shortcut fun, and since I have so many DB entries, I usually search for what I need with Cmf+F. So my typical usage looks like this:\n1. Open MacPass\n2. Enter DB pass\n3. Press Cmd+f to enter search box\nBut step 3 is not available immediately after the DB unlocks, I still have to wait another 0.5s or so... in this time, pressing Cmd+f only results in this search bar being shown:\n\nbut the cursor is not moving to the search box, so when I start typing, nothing happens. I have to press Cmd+f again. However, if I unlock the DB and wait for let's say 1s, and then press Cmd+f, it does open the search bar AND highlights the search box so I can start searching immediately.\nSo in summary: the DB unlocks fast, I can see the mac pass window displaying a list of entries in the DB, but the UI is not yet fully ready and Cmd+f shortcut does not work consistently.\nI know this is very little detail, I'm just a very heavy user and I notice this type of inconsistencies. I did not notice any improvements in this area between 0.7 and 0.7.3. I'mcurrently on 0.7.3.. ",
    "thor84no": "I've only come across this looking to see if there was a way to speed up the autotype because it's so slow, so I'd appreciate it if it was configurable as a global setting or something. There's certainly no need for a delay on my machine.. Thanks, I wasn't aware of that. I've just given it a try and attempted to update my autotype to use the \"PICKCHARS\" placeholder you mention, but it doesn't seem to be working as described in the KeePass documentation you linked. That might just be me misunderstanding it, but I rewrote the above sequence by:\n\nAdding the memorable word as a custom field named \"Memorable\".\nRewriting the above as: {TAB}{PICKCHARS:Memorable:ID=1,Count=1}{TAB}{PICKCHARS:Memorable:ID=2,Count=1}{TAB}{PICKCHARS:Memorable:ID=3,Count=1}\n\nAs per my reading of the KeePass documentation that should:\n\nPrompt me 3 times, allowing me to select a single character each time\nClose the window immediately upon clicking a single character\nIndex from 1\nPrint {TAB}{first selected character}{TAB}{second selected character}{TAB}{third selected character}\n\nWhat I'm seeing at the moment is:\n\nPrompts me 3 times, allowing me to select a single character each time (good)\nDoes not auto close after selecting one character (minor)\nIndexes from 0 (odd, but manageable)\nPrints the wrong characters as well as being different each time I run it. (bug?)\n\nHere's an example of outputs created by having the custom field \"Memorable\" with the string value \"teststring123\":\nSelecting 0, 1, 2; one run per line:\n```\n{TAB}TABe{TAB}s\n{TAB}TABee{TAB}s\n{TAB}TABeee{TAB}s\nIt continues like above...\n```\nSelecting 1, 2, 3; one run per line:\n```\nFirst run:\n{TAB}e{TAB}s{TAB}t # As expected!\n{TAB}e{TAB}s{TAB}t # As expected!\n{TAB}e{TAB}s{TAB}t # As expected!\n```\nSelecting 2, 3, 4; one run per line:\n```\n{TAB}s{TAB}TABs\n{TAB}s{TAB}TABss\n{TAB}s{TAB}TABsss\nIt continues like above...\n```\nI've written actual TAB characters as {TAB} above, note that the word \"TAB\" is also written out for no obvious reason.. According to the app that was with version 0.7.4 (20181201151215-continuous). Awesome. Let me know if there's anything I can do to help test it further.. Sorry, I've been away for the holidays. I'll try the latest version and see if I can recreate it at some point this week\u2014hopefully tomorrow.. I'm still seeing the same behaviour. I've made a minor change to my test just so it's easier to see what the expected result is; I've changed the auto type text to {TAB}{PICKCHARS:Memorable:ID=1,C=1,Hide=false}{TAB}{PICKCHARS:Memorable:ID=2,C=1,Hide=false}{TAB}{PICKCHARS:Memorable:ID=3,C=1,Hide=false} (I've added Hide=false, but otherwise it should be the same).\nThe indexes are now correct, but the printed text is not. One thing I've noticed is it only occurs if the {TAB} is in the autotype string. If I remove all instances of that it seems to work OK, but those are mandatory for the appropriate typing of this type of password. It's also still causing each iteration that messes up to modify the next one. This seems tied to the individual index rather than the combination, so if I choose 3,4,5 and 5 messes up, then doing 5,6,7 will include the messed up version of the character in the 5th position.. I've just tried it with your database and yes, I'm still having the same issue. Down to the sequence 2,3,4 working correctly, but almost all other combinations not working. Very odd. I'm on High Sierra (10.13.6) if that makes any difference.. ",
    "milla-online": "Dammned! Just found the cause after opening this issue. It\u00b4s a often reported problem and will be resolved in the next version. In the meanwhile just click into a other field so the \"notes\" field doesn\u00b4t have the focus anymore. Then you can save your kbdx file without loosing data.\nSorry for opening this unnecessary issue.. ",
    "lukx": "IMHO duplicate of #514. ",
    "mrudolf": "It seems even worse, MacPass does not even save group settings set in the application. For example if you set search to \"Exclude from search\", save, quit and restart, it is reset to \"Inherit Search Settings\". ",
    "ksb4ever": "There is another issue with this - if someting is in \"copy/paste\" buffer, autotype pastes it in username or password.. ",
    "paulrbts": "OK, think this may have been user error :-(\nIt's working now.. Sure.\nAs I said, I moved the kdbx file to a new location. Next time I opened MacPass: on the opening screen I chose the location for a keyfile, thinking it was the same as the kdbx (I was thinking of telling it to look for the new kdbx file location). It rejected the password on the basis that it and the keyfile were wrong/didn't match.\nBy selecting no keyfile, it accepted my password.. ",
    "fnkr": "\nCan both of you tell me what window restoration settings you're running?\n\n\"Reopen last Database after launch\" is disabled.\n. Here are my settings:\n\nI've tried it out and it seems like the \"Close windows when quitting an app\" setting causes this behaviour. If I disable it, it works and the \"Welcome to MacPass\" screen is not shown anymore (after closing and reopening MacPass through the Finder).\n\napplicationShouldHandleReopen\n_reopenLastDocument\n_applicationDidFinishRestoringWindows. I'm running the precompiled MacPass 0.6.2 binary.. \n",
    "ibrokemypie": "closing in favour of #565. ",
    "mat1010": "closing in favour of #565. ",
    "benwalch": "+1. ",
    "eskyto": "First of all, thank you for a great application. I have just started to use it.\nI can confirm that with version 0.7.3 (17830), if I lock the database without changing anything, then the .kdbx file is changed.. ",
    "Deuchnord": "Oh, I didn\u2019t know this feature of macOS\u2019s! Thanks!\nLooks like the menu isn\u2019t showing the correct shortcut after defining it, but it works like a charm :)\n\nLe 7 avr. 2017 \u00e0 09:06, Lifepillar notifications@github.com a \u00e9crit :\nYou may try System Preferences > Keyboard > Shortcuts > App Shortcuts, and define your keyboard shortcuts there.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/mstarke/MacPass/issues/571#issuecomment-292458865, or mute the thread https://github.com/notifications/unsubscribe-auth/AHP4icJ6c5yng-_aJtqoX-SSvXWFT30-ks5rteBugaJpZM4M2h3P.\n\n\n. ",
    "skyline75489": "Just out of curiosity, any idea whyLocalizable.strings is considered to be a \"binary file\" on Github?. Just found out #611 is discarded. Finally some decent diff. I'm so tired of these binary diff shit. Time to put an end to it.. ",
    "sepehr": "It just hit me in the face. Lost a few of my credentials which were saved in the notes field.. @mstarke No worries Michael, I managed to recover the data. A 0.6.3 release would be great though; I'm looking forward to it.\nThank you for the quick reply, the workaround and your awesome work on MacPass.. ",
    "sebw": "Why is this getting closed? All reported duplicates are closed too.\nAs @shivamb I'm running Version 0.6.2 (12420) but on High Sierra (10.13).\nAs long as there is not a 0.6.3 with a fix, I don't see why these bugs are closed.\nI just discovered this bug while trying to use 2 step auth backup codes for an account, only to realize they had never been saved.\n. This is no criticism. I'm just looking for an explanation and confirmation that MacPass got a patch for this critical issue.\nIn personal projects (not on Github) I mention bug reports in my patches/merge requests and they get closed automatically when the patch is merged. This is convenient and helps tracking how issues get resolved.\nIf the maintainer is not going to do that, people will keep reporting the same stuff over and over. It happened a couple of times for this issue, some people don't take time to look around for existing reports.. I did only to find at least 8 similar reports closed all marked duplicates and no mention of the patch or merge request, or release to come. It will be a waste of time for a one man project to go through triage.\nFor the sake of completeness and to help some people looking for information regarding this issue, these are the duplicates:\n445\n455\n463\n485\n552\n539\n544\n573. Yes, I saw that commit from over a year now. No stable release including that patch since then, and how many reports? You're missing my point.. Hey @mstarke no worries, I started using MacPass since seeing it gets mentioned on Hacker News every now and then. I'm checking for updates regularly and saw that no updates were available. The thing is, I lost a couple of notes, and see many other people in the same case.\nI didn't know MacPass was a one man project, I'm sure many people would be happy to contribute to documentation and working on more frequent bugfix releases, esp. since you get mentioned on HN regularly.\nWish I could help but I don't develop on Mac.. :)\nCheers. Your way of doing this is not the way of doing things of 95% of people who downloaded MacPass. I'm not going to go explain that to my gf. We are talking about data loss, which is a serious issue, while the app is saying there is no update for over a year.\nEven if the old buggy release is made unavailable, it is currently installed on thousands of computers and marked as up-to-date, and users have no clue of the issue and will lose data.\nAs I'm saying above, this project needs more frequent bugfix releases, and if @mstarke can't keep up, he should turn to the community. I don't know what is included in 0.7 that makes it delay so long, but I'm not going to explain how bugfixes and features should be implemented, I don't want you to feel talked down to.\nAnyway, I didn't intend offense towards the maintainer(s). My apologies if you felt offended.. ",
    "martinl": "I'm getting up to speed with latest changes in macOS smartcard support infrastructure. Do I underestand correctly that CryptoTokenKit API is a way forward for Sierra and best option for building support for Yubikey PIV in macOS?\nhttps://ludovicrousseau.blogspot.com.ee/2016/06/macos-sierra-and-cryptotokenkit-api.html\nhttps://developer.apple.com/reference/cryptotokenkit\nhttps://developer.apple.com/library/content/samplecode/PIVToken/Introduction/Intro.html\n. A few more references potentially relevant to the topic:\nCertificate, Key, and Trust Services Programming Guide\nhttps://developer.apple.com/library/content/documentation/Security/Conceptual/CertKeyTrustProgGuide/index.html#//apple_ref/doc/uid/TP40001358-CH218-SW1\nCertificate, Key, and Trust Services API Reference\nhttps://developer.apple.com/reference/security/certificate_key_and_trust_services\n. Just a quick update, I'm currently writing a spec and studying MacPass and KeePassKit source as time permits. First deliverable will be standalone Cert Key Manager application for creating and modifying Keepass MultiCertProvider kmx (xml) files. Apple documentation and examples for interfacing with CryptoTokenKit and Keychain are quite clear and I hope to have something usable to show after the weekend.. +1 for TOTP support. I'm currently investigating options for developing x509 certificates based master key provider which has a bit more moving parts. I think extending MacPass/KeePassKit to support TOTP would be a good example and starting point for more complex x509 implementation.. Also, I think that rumours about Objective-C being dead soon are greatly exaggerated :)\nI took this Stanford course a few years ago and it got me started really quickly (had previous C# and Java experience) https://itunes.apple.com/us/course/developing-ios-7-apps-for-iphone-and-ipad/id733644550\n. Hi,\nI saw some development tools report that Google File Stream file system does not support file locking, could this be the cause. ",
    "golbiga": "Has there been any movement on this implementation? It would be nice to be able to use a smartcard or PIV with MacPass.. ",
    "lroellin": "I built it from master and it still doesn't work unfortunately.... I tried that but I can't get it to compile. This really needs a new public release. It's great software but if it's not maintained...\nWhat could I do to help this? Unfortunately I don't know Objective-C or much about Mac development in general.... ",
    "amandamana": "The \"continuous\" downloads require OS X 10.10, and I'm running 10.8.5 which is apparently supported. I can run the latest releases of MacPass and MacPassHTTP, but they don't seem to work with chromeIPass, which is what I need for browser integration? So I need to try compiling the working versions myself on my Mountain Lion system? Having trouble with that because Carthage seems to require 10.10. I want to try this, but so frustrated..... OK, that's sad, but fair enough. Personally I don't care about animated drawers or whatever enticing UI trend is offered by a new API. I would suggest clarifying the system requirements shown here: https://mstarke.github.io/MacPass/\nI don't mind using old versions barring any critical security or corruption bugs. MacPass 0.6.2 appears to work and load MacPassHTTP 0.2.1\u2014I see a \"Server OK!\" menu under a little MacPass icon in the system menubar. Do you know what version of ChromeIPass works with these builds? When I press the Connect button of the browser extension to \"register and pair with KeePassHttp\" nothing happens. I've tried 2.8.1, 2.7.1, 2.6.8, and 2.6.7 versions of ChromeIPass. I also have the same null result with passafari 1.0beta2 (configured to localhost, port 19455).. Wow, thanks for taking the time. I'm not sure why I didn't notice this before, but a ChromeIPass connect request produces the following console log:\n2017-10-10 10:21:25.304 AM MacPass[3837]: -[NSConcreteData initWithBase64EncodedString:options:]: unrecognized selector sent to instance 0x7f9089c90af0\n. I'm sorry to report it doesn't load:\n2017-10-11 7:48:36.893 AM MacPass[5847]: Bunlde Loading Error The bundle \u201cMacPassHTTP\u201d couldn\u2019t be loaded. The bundle couldn\u2019t be loaded.\nChecking \"Load unsecure Plugins\" makes no difference.. I hope you don't run into any difficulties including the framework.. ",
    "elsesiy": "You're welcome \ud83d\udc4d . ",
    "gghose": "This is really weird..... Now I can't replicate the bug......... I have no\nexplanation. It was the binary 0.6.2. release, by the way.\nOn Fri, May 5, 2017 at 3:44 PM, Michael Starke notifications@github.com\nwrote:\n\nThe delete key is not associated with delte but \u2318+\u2190. Did you remapt the\nkeys?\nWhat Version of MacPass? Custom build or 0.6.2 binary release? I am unable\nto reproduce this behavoir with the current HEAD of develep\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/mstarke/MacPass/issues/581#issuecomment-299571098,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABUSvZuq2H3zo2SX4YvfRBXUdmvyD1Mgks5r24o2gaJpZM4NSQGt\n.\n. \n",
    "weslly": "\nAre you sure you want to learn a dying language like Objective-C?\n\nActually I would rather go with Swift but since MacPass code base is obj-c and I really want this feature, I guess I'll have to learn both \ud83d\ude01  \nBy the way, I did the same thing with C++/Qt and got this merged into KeepassXC, so here's how it would work: http://github.com/keepassxreboot/keepassxc/pull/519\n(It won't look exactly the same since I want everything to fit seamlessly in the current interface). ",
    "dennis-f": "This is awesome!! Thank you very much!. I updated the post. It's 0.6.2. Behaviour is still the same with continuous release version \ud83d\ude22 . You can follow with these Steps:\n\nopen macpass\nselect the database\nuncheck password\nchoose key file\nworks\ncmd + Q\nopen macpass again\ndatabase is selected\npassword is checked again\nselect field is empty > should contain last used key file\n\n. ahhh i see. i'm sorry for the inconvenience.. ",
    "tehabe": "Leave out the wording. Was just a suggestion. The issue I'm having is, that when I store WiFi passwords I can either create a custom field for SSID or use the username field. In Keepass2Android this isn't an issue because custom field are displayed combined with username and password.. ",
    "TimJDFletcher": "I am getting a similar error of duplicate attachment, in a relatively clean (3 months old) database.\nI think this maybe related to a previous issue around multiple layers of gzip on certain files.\nLooking at the files that I have which have been gzip'd multiple times I can see that the entry also has a history count of between 3 and 6.. I have a keepass DB with a mix of passwords and SSH keys (in pem format), I have previously been bitten by bug #590 meaning my PEM keys have multiple layers of gzip. \nOpening this file in KeepassXC I get the error of: \"Unable to open the database: Duplicate attachment attribute found.\"\nLooking at those entries they are showing a number of items in history in the UI and poking at an XML export I show a number of identical keys eg: <Key>Infrastructure.pem</Key>. These are layered inside an entry of the same name, I'm not sure if this is relevant here.. I'm using Version 0.6.2 (14480) built from source I have gzip compression enabled on the DB, I'll generate a new DB and test again to get a clearer bug report. In case anyone else has the problem I've written a short bash script that will loop over and decompress files exported from Keepass.\nhttps://gist.github.com/TimJDFletcher/6b4f81661573510ffaeb5036e8561dc0. ",
    "ilgio": "I open my DB (algoritm AES - 917KB)\n\ndatabase settings>security>change to argon2>OK\n\nFile>Save\nClose\nmy file DB now is 256KB\n\nNow I open DB, type the correct password and dont entry\n\n. Yes, I have attachments in my database.\nthe file jpg and png. when do you create a new release?. but it is released 6 day ago\n\n. perfect\nit work \nfine thx. \n\n. thx. ",
    "viereins": "Thanks a lot! Great application!!. ",
    "MattWeatherford": "Yes yes yes - great app - thanks for writing as a native Mac OS X application !\n. ",
    "goofy79": "this will be very nice . ",
    "owl70": "Problem exists in 0.6.2.\nWorks in 20170613-continuous.\n. ",
    "nick2585": "Thanks!!! I was bummed when I had to go back to KyPass companion!. Unfortunately the same problem is still occurring...\nProcess:               MacPass [7012]\nPath:                  /Applications/MacPass.app/Contents/MacOS/MacPass\nIdentifier:            com.hicknhacksoftware.MacPass\nVersion:               0.6.2 (20170617070636-continuous)\nCode Type:             X86-64 (Native)\nParent Process:        ??? [1]\nResponsible:           MacPass [7012]\nUser ID:               501\nDate/Time:             2017-06-19 11:09:47.783 -0500\nOS Version:            Mac OS X 10.12.5 (16F73)\nReport Version:        12\nAnonymous UUID:        F8C30E80-94C2-58DE-68CA-3596587D884C\nSleep/Wake UUID:       58EC0F83-C6AA-4052-97DB-4C50712EBB77\nTime Awake Since Boot: 10000 seconds\nTime Since Wake:       7500 seconds\nSystem Integrity Protection: enabled\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\nException Type:        EXC_CRASH (SIGABRT)\nException Codes:       0x0000000000000000, 0x0000000000000000\nException Note:        EXC_CORPSE_NOTIFY\nApplication Specific Information:\n*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'Controller cannot be nil'\nterminating with uncaught exception of type NSException\nabort() called. Yeah I will run the debug version if you supply it. Thanks!. Ok, it just started working now! thanks!. ",
    "ThomasSHA": "for completeness: the missing element was at least one of those: \n\nEntryTemplatesGroup\nEntryTemplatesGroupChanged\nLastSelectedGroup\nLastTopVisibleGroup\n\nWith them added, MacPass opens my files as well ;). ",
    "chrisrueger": "Both points are valid, but the 2. is my favourite. In KeepassX you could do Cmd+F and then just use the arrow keys (keyup, keydown) do instantly scroll to the item in the search results. \nIn Macpass you need to Cmd+F, then grab the mouse and click into the search result. That is too many steps. An all keyboard solution as described above would be great.. Ok, I understand the technical thinking behind it. But couldn't this be an option in the preferences? I personally do not care about those changes of the password container. As a user I just think it is a useful feature :)\nIs there maybe another technical way to solve this and avoid container change? \nCouldn't those statistics maybe be stored in a separate file, besides the actual container file? . > A preferences setting is an option. \n\ud83d\udc4d \n\nStoring the data outside the database is not ideal and defeats the purpose of a self-containing file. \n\nI suggested this, because if if this could be an option in preferences, it could be reasonable if this optional \"nice-to-have\" feature stores stuff in a different way (e.g. separate file with the same naming as the password container). It think of it like having a separate database for statistics. If you loose it , then statistics are gone. Fine. The passwords are more important anyway. \n\nMarking the changes as discardable will result in data loss since no autosave is issued and defeats the purpose of autosave (forget about saving you data, just use it).\n\nDon't know what that means, but sounds like a technical constraint you see in the code.\n\nI think the best way is to actually go with a checkbox in the preferences to \"save access dates and count on entries\" and default to no. \n\nSounds good.\n\nCombining this with autosave should give you the desired effect but no other client might adhere to this.\n\nOk. Maybe MacPass will just be the pioneer and others will follow :) I mean, LastPass and those web apps have Dashboards for this stuff where you can see several statistics about your passwords.\n\nAnother problem: What does count as access. My guess would be to count every use of auto-type as well as copying the password as an access. Everything else doesn't increment the count or update the date.\n\nExactly that's what I think too: \n\nevery use of auto-type\nas well as copying the password\n\nLast but not least, I just want to share some numbers to justify why I think this could be useful. With MacPass over the years I am currently managing about 150 passwords for personal stuff, around 200 for business. There are probably also some old, garbage and test-accounts too. But some statistics about it would help to clean up or spot weaknesses (e.g. \"You have 10 weak passwords\") easier instead of going manually over every password. Ok, I think I'm going a bit off-topic here, but you see my point I hope ;)\n. ",
    "easeev": "It would be also great if search via title will be automatically done while typing in the main window with the focus moving to the relevant item. Like in KeePass for Windows, for instance.. ",
    "lwy8": "thank you very much\nBut I will not compile the code, I can not give you a good translation of the document.. ",
    "fabstei": "A quick update: Setting the password does not prevent the information stored in \"Notes\" from disappearing.. I just tested it and can confirm that this seems to solve the issue.. ",
    "notoriousturtle": "Ah, should that maybe read \"Duplicates Entries\" then, as opposed to \"Duplicate Entry...\"?. Yeah, Autotype is working for me, at least in Chrome. I assume it only supports browsers?\nI'm running MacOS as my base OS, and commonly use a Windows, or another MacOS VM. It would be handy if Autotype worked in browsers inside those VMs, from the base OS if you know what I mean?\nIts not a feature I crucially want, and am not sure how much I'd use it, but figured it would be handy, and maybe more useful for others. . Ah, I didnt realise there were two different Autotypes. \nSounds like I just need to name my entries a bit cleaner to get Global Autotype to work. I quickly tested Autotype (not global) inside a VM running Windows, in Notepad. It did not print the password. It did print the username however. Have you tested this by any chance?. ",
    "jasonlyle88": "...I feel ashamed.\nAlso, thank you.. ",
    "jtagscherer": "I do have a Touch Bar device, so I could implement it and create a pull request. I just wanted to give a heads-up before doing so to verify that people like the interface before actually implementing it.. The edit button lets you actually modify the database. It brings up the three buttons you can see in the last mockup at the bottom which basically have the same functionality as the three buttons to the left in the default toolbar.\nSo if an entry or a group in the database is selected, you can use the edit buttons to add an entry or group in the context of the currently selected group or delete the selected item with the third button.. @purejava Thanks, I'm glad that you like it.\nI'm sorry, but I don't understand what exactly you mean with highlighted. All buttons on this level are of equal importance and can be accessed with one press since the Touch Bar is a touchscreen interface. This includes the autotype button.\nThe lock button is only blue because I chose to give it another colour as a bit of visual flair since it persists throughout all application contexts and represents the important state change of unlocking and locking the database.. Okay, now I understand and I agree. I just looked at the Human Interface Guidelines again a bit more closely and noticed two things:\n\nThe Touch Bar interface should resemble the physical keyboard, monochromatic colours are preferred. Especially buttons that are constantly visible shouldn't have distracting colours. Moreover, blue should be reserved for default controls. Looking at the other available buttons in this context, I don't think there is a clear default one. So I suggest simply removing the blue colour altogether.\nIn your edited mockup, you moved the autotype button to the right. However, I think that the two copy buttons and the autotype button are closely related since they all relate to the username and password of a single entry and should be left together. On top of that, the guidelines say that the \"left side of the app region works well for controls that persist across different modalities.\" Therefore, we should move the lock/unlock button to the very left.\n\nTaking both of these points into account, the layout could look something like this:\n\n\nWhat do you think?. ",
    "purejava": "I like the mockups very much and would like to suggest one change: on an unlocked database it seems reasonable to me to have Perform Autotype as the highlighted option as this probably gets pressed more often than the lock database button.\n\n. @Novanoid With highlighted I mean the blue buttons and I know that you can use them all, no matter what color they are. I understand that you allways have the blue one for locking/unlocking the database.\nBut, I am under the impression that the blue button on the Touch Bar among the others is some sort of default or \"pre selected button\". When I select empty trash on the trash bin e.g., there are two buttons on the Touch Bar: Empty trash (blue) and Cancel (grey). So the blue button seems some sort of most common operation that is possible at the moment. Locking and unlocking, for me, is some sort of way off as a common operation and that is why I suggest Perform Autotype instead.. @Novanoid I agree to your arguments.. ",
    "christianhuening": "well ok , will report is at false positive then. ",
    "Sec42": "I can't really use the continous build since it lacks MacPassHTTP. A quick lock/unlock test at least didn't crash.. No crashes on unlock occurred for me since then (and I have since upgraded to the new/current version), so I guess it should be closed.. Thanks for the pointer.\nFor the reference I got it to work with the following steps:\n\nfetch https://github.com/MacPass/MacPassHTTP/releases/download/continuous/MacPassHTTP-continuous.zip\nreplace the \"MacPassHTTP.mpplugin/\" folder in ~/Library/Application Support/MacPass/ with the contents of that ZIP\nenable the \"Load unsecure plugins\" setting\nrestart MacPass\n\nThanks. . ",
    "sn0wyfall": "You're the person who made most of the commits, right? So wouldn't you be the only one who knows about the changes \ud83d\ude04 . Good idea, but I am just a normal user :D. @mstarke The latest version fixed the annoying hang for me too. Thanks a lot!. ",
    "torkelsson": "I have hangs with the continuous-build MacPass on 10.12.6 sometimes. Will try to remember to post the crash report next time it happens.. ",
    "mwright-oss": "The colour coding would be a beautiful solution, but it's a fair bit of work to implement and it would fail when the end user can only display the password in a monochrome typeface which doesn't properly distinguish between letters.\nA simple and elegant solution would be to add an option to say simply:\nExclude Characters:  o 0 O i l | 1 L\nI would go as far as saying that this should be the default - how many times have we been unable to copy/paste the password and had to squint at it to try and try to guess what the letters are. Loss of a couple of bits of key space is a small price to pay. \nDanke!. Looks good. Try using #006600 for the green so the contrast is better when it's displayed on a white background. \nMono fonts are a good choice, my old Mac favourite from many years ago was Monaco. DejaVu Sans Mono is very good too.\nIt would be good to see the feature to Exclude Characters: o 0 O i l | 1 L  - we can't do much about existing passwords but it would be good to avoid generating random passwords with potentially ambiguous characters because not everyone is fortunate/smart enough to have clear typefaces to display it.. ",
    "MacPass-Travis": "Known issue fixed in continuous build. Since I am pushing creating a dedicated site for MacPass in front of me for ages this should be tackled with a dedicated project page.. What version are you using? 0.6.2. or the continuous build?. ",
    "neo-anderson": "@tflo Thanks for the KeepassXC tip! I wish there was an import csv option in MacPass too. Took me a while to figure out how to get all the data from LastPass into MacPass. I'd love this feature too. When I quit MacPass, my sync service starts syncing the file. I feel that this could cause sync issues when using MacPass in multiple computers. Unless implementing this feature would reduce security in some way, please consider adding it :) . @mstarke  I'm sorry. I tested again and found that it's not really due to quitting the app, but because I had enabled the option \"lock while idle\" to just 1 minute, which auto locks the app quickly and thus rewrites the db file. Sorry for the confusion. Would still love to have it not rewrite the file if nothing has changed unless it weakens security in some way.. ",
    "sebknzl": "Just discovered MacPass today, thanks a lot for the nice work!\nAbout CSV import, I've used this as a workaround:\n\nUse https://github.com/lifepillar/csv2keepassxml to convert the CSV to XML\nCreate a new database and import the XML\n\nOnce the database is saved, you can also merge it to an existing database.\n. ",
    "Luxas85": "Oh yes didn\u2019t I answered on bithub? Everything is fine now! Thank you! \nI just saved a file with the current windows version and opened it with macpass.\nThat worked fine.\nThank you.\n\nAm 22.08.2017 um 19:58 schrieb Michael Starke notifications@github.com:\nDid you find the time to test this again?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub https://github.com/mstarke/MacPass/issues/631#issuecomment-324104269, or mute the thread https://github.com/notifications/unsubscribe-auth/AdiuCg2JOeTLbkTqCErXumnNFFdLhwzYks5saxavgaJpZM4O1ZbT.\n\n\n. Problem solved by import to a new Windows Version of Keepass and than open this file with Macpass.\nThank you very much!\nkind regards\nFromTHEnewMACPASSuser \ud83d\udc4d . ",
    "koenpunt": "@mstarke I did indeed, because I realised I made the mistake of selecting the database for \"keyfile\", which obviously was incorrect.. ",
    "beatrupp": "How is having 26 running tests (the existing ones) worse than running no tests at all during continuous integration? . ",
    "wizard86pz": "Thanks @L4grange. I was going to make a new pull request before to find your one. I can't wait to see first steps inside the codes and to help in case of translations in italian and english if needed.. @L4grange no news about?. The issue just vanished. DB has not changed, hash has not changed (I saved it to monitor any change) and now it started to work again, no device reboot.. > Can you take a look at the log in Console.app? UI oddities sometimes are caused by assertions in the underlying code. If this happens again, please report it and if possible attach any logged output.\nI'll be happy to give you all logs you want, but I'll need a little more help to get the info you need from Console app.. @mstarke I've found a robust pattern to reproduce the issue:\n1. edit the kdbx file with iOS app (App Store link)\n2. the file edited will have the issue on your software.\nI use the kdbx file synced on cloud from iOS, macOS (your software), Windows 10 and Android  (Play Store link) and every cross-opening and cross-editing is ok among all the apps/OSs, but only if I edit the DB from the iOS app, your app has that issue.. > The issue just vanished. DB has not changed, hash has not changed (I saved it to monitor any change) and now it started to work again, no device reboot.\nHere was happening because I had edited the DB from Windows 10 app. Was ok reading it from your software after to have edited it on WIndows 10.. > Awesome to zero it in to Keepass Touch and MacPass. Can you try to test with a newly created database with the same settings as the one your having issues with? I'll try to get to test on my side too. It might be some edge case with attachments but I'll have to investigate.\nCreating a new DB from the iOS App, I can choose among 3 different DB type:\n- 1.x\n- 2.x\n- KDBX 4\n\nONLY if I create a DB from iOS with KDBX 4 type, your app fails in DB opening.\nI attach the DB created by iOS App here (NO LONGER AVAILABLE):\n- https://mega.nz/#!9ZwknS4B\n- decryption key: kvkxCRj_5USJT625Q36zvK3iNU_C2V8iTfgQFJFd5Ao\n- DB key: qwerty\nThe DB creation on iOS has no way to edit the DB encryption parameters, so I've left them as they are set:\n\nAbout last type (KDBX 4), here you can find some info about. What I can confirm you is that my DB has been created so much time ago in KeePass 1.x. During years, KeePass for Windows has been updated to 2.x and I've always continued to edit my DB with new versions of KeePass when available.\n. Hi @mstarke, still no update from nov/2018? I started to use the beta of your app, with already fixed issue :) But I cannot check the update availability for beta. So I'm here mainly for two questions:\n- do  you think you can give us a \"prevision\" about when a new stable release will reach us?\n- what about the self-check of update availability for beta branch?\nThanks in advance, as always.. ",
    "uwqwxing886": "@L4grange If you push up your latest work I can rebase and take over development of this feature.. For reference here is what the button looks like in 1Password.\n\nhttps://support.1password.com/getting-started-mac/#enlarge-passwords. > remove the buttons\nI might be misunderstanding that statement but from what I've seen people commonly use a password safe to store website passwords. When they want to log in to a website they open the corresponding entry to copy the password. A \"Copy to clipboard\" button would be a UX improvement.. ",
    "sicbb": "same here :/ macOS 10.13 and MacPass Version 0.6.2 (12420). ",
    "fzzr-": "Yes! Thanks! Issues are totally fixed.. ",
    "hintss": "sorry about that, but uh...yes, not sure how to interpret this.\n\n. ",
    "robbpriestley": "As far as I can tell, re-assigning shortcuts only works with main menu items. But when I was looking around trying to figure this out, I noticed you do have shortcuts to copy usernames and passwords. But they're hidden in a context menu. I guess I can live with the 3-key shortcuts but I'd really prefer 2-key ones for efficiency. And why not put them in the Edit menu?. I appreciate the time you're taking to communicate about this, and I am going to give MacPass a try, but FYI the Copy Username and Copy Password context menu items won't remap to new keyboard shortcuts, whereas main menu items will.. Thanks for the info. Good feature!. ",
    "bbyk": "I noticed that I had to restart MacPass for the remapping in System Preferences -> Keyboard -> Shortcuts to go into effect. That's probably by design.. ",
    "stevo-knievo": "Thank you for your quick reply @mstarke! Thanks for all your work and keep it up!!. ",
    "subic": "The website looks great! if you need any front end help in the future, I can assist :).. ",
    "eddiehu": "Just tried it with a new test database with the same settings. Created the database in KeePass, transferred to MacPass, created a test entry with title/username/password/URL, and tried to open file in KeePass. Gives me the following error:\n\nFailed to load the specified file!\nThe file is corrupted. Less data than expected could be read from the file.\n\nI'm also using a key file, if that's relevant.. Yeah.. Thanks for the info. I've restored a previous backup of my database. Does/will MacPass correctly save the database now, or should I use KeePass on Windows to add new entries for the time being?. ",
    "cyco": "Do you want me to add license headers?. Thanks for the feedback.\nI wanted to be able to easily choose a keyfile using only the keyboard, but NSPathControl can't be activated using public APIs (except for the private API you mentioned). Maybe i went a little too far with the timeout and open panel :)\nAs for the New submenu, i thought this was how the default apps did it. But now that i'm checking it it turns out to be inconsistent. Finder just lists all items, while iTunes uses a submenu. \n\n\n. ",
    "melloware": "Nice work!. ",
    "kevinpapst": "Thanks for your quick reply.\nSounds like good news. There will always be something on the list that needs some fixes before the next release ;-) I am happy that I found MacPass and totally fine using 0.6 so far. \nNo, cask doesn't work properly with rolling releases, but ping me here when you release the new verson and I am happy to upgrade the cask to the next version.. Yeah, I was desperately waiting for Drag & Drop through the homebrew install - great to see the release - Thanks!!!!!! \ud83d\udc4d . +1 \nThe last stable release is from November 2017 and 300 commits since then.\n@mstarke seems you like development more than releasing MacPass?! ;-). @mstarke Update went very smooth, I like the new dark mode.\nThanks for the release!. Weird feature ;-) but thanks for the info and sorry for the noise.. ",
    "AlexCharreteur": "Yes I built with the command \n\nxcodebuild build -configuration release -project MacPass.xcodeproj -scheme MacPass CODE_SIGNING_REQUIRED=NO NO_SPARKLE=NO_SPARKLE\n\nand I still have the error message. Problem solved ! I was not using the good xcodebuild, but an older... Thank you for your reactivity.. ",
    "subdriven": "@mstarke ... here is the end of that file. This is a fairly new Mac with very little on it so I don't have anything really customized. I did update to the latest OS though.\nCopyStringsFile /Users/subdriven/Library/Caches/org.carthage.CarthageKit/DerivedData/9.0.1_9A1004/Sparkle/1.18.1/Build/Intermediates.noindex/ArchiveIntermediates/Sparkle/IntermediateBuildFilesPath/UninstalledProducts/macosx/Autoupdate.app/Contents/Resources/zh_CN.lproj/Sparkle.strings Sparkle/zh_CN.lproj/Sparkle.strings\n    cd /Users/subdriven/MacPass/Carthage/Checkouts/Sparkle\n    builtin-copyStrings --validate --inputencoding utf-8 --outputencoding UTF-16 --outdir /Users/subdriven/Library/Caches/org.carthage.CarthageKit/DerivedData/9.0.1_9A1004/Sparkle/1.18.1/Build/Intermediates.noindex/ArchiveIntermediates/Sparkle/IntermediateBuildFilesPath/UninstalledProducts/macosx/Autoupdate.app/Contents/Resources/zh_CN.lproj -- Sparkle/zh_CN.lproj/Sparkle.strings\nCompileXIB Sparkle/SUStatus.xib\n    cd /Users/subdriven/MacPass/Carthage/Checkouts/Sparkle\n    export XCODE_DEVELOPER_USR_PATH=/Applications/Xcode.app/Contents/Developer/usr/bin/..\n    /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module Autoupdate --output-partial-info-plist /Users/subdriven/Library/Caches/org.carthage.CarthageKit/DerivedData/9.0.1_9A1004/Sparkle/1.18.1/Build/Intermediates.noindex/ArchiveIntermediates/Sparkle/IntermediateBuildFilesPath/Sparkle.build/Release/Autoupdate.build/SUStatus-PartialInfo.plist --auto-activate-custom-fonts --target-device mac --minimum-deployment-target 10.7 --output-format human-readable-text --compile /Users/subdriven/Library/Caches/org.carthage.CarthageKit/DerivedData/9.0.1_9A1004/Sparkle/1.18.1/Build/Intermediates.noindex/ArchiveIntermediates/Sparkle/IntermediateBuildFilesPath/UninstalledProducts/macosx/Autoupdate.app/Contents/Resources/SUStatus.nib /Users/subdriven/MacPass/Carthage/Checkouts/Sparkle/Sparkle/SUStatus.xib\n2017-10-30 09:58:18.358 ibtoold[10403:200093] [MT] DVTPlugInLoading: Failed to load code for plug-in com.apple.dt.IDE.IDEInterfaceBuilderCocoaTouchIntegration (/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework), error = Error Domain=NSCocoaErrorDomain Code=3587 \"dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found\" UserInfo={NSLocalizedFailureReason=The bundle is damaged or missing necessary resources., NSLocalizedRecoverySuggestion=Try reinstalling the bundle., NSFilePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, NSDebugDescription=dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found, NSBundlePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework, NSLocalizedDescription=The bundle \u201cIDEInterfaceBuilderCocoaTouchIntegration\u201d couldn\u2019t be loaded because it is damaged or missing necessary resources.}, dyldError = dlopen(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, 0): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found\n2017-10-30 09:58:18.359 ibtoold[10403:200093] [MT] DVTPlugInExtensionFaulting: Failed to fire fault for extension Xcode.InterfaceBuilderKit.CocoaTouchIntegration.Singletons: Error Domain=DVTPlugInErrorDomain Code=2 \"Loading a plug-in failed.\" UserInfo={DVTPlugInIdentifierErrorKey=com.apple.dt.IDE.IDEInterfaceBuilderCocoaTouchIntegration, DVTPlugInExecutablePathErrorKey=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, NSLocalizedRecoverySuggestion=The plug-in or one of its prerequisite plug-ins may be missing or damaged and may need to be reinstalled., DVTPlugInDYLDErrorMessageErrorKey=dlopen(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, 0): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found, NSLocalizedDescription=Loading a plug-in failed., NSFilePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework, NSLocalizedFailureReason=The plug-in \u201ccom.apple.dt.IDE.IDEInterfaceBuilderCocoaTouchIntegration\u201d at path \u201c/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework\u201d could not be loaded.  The plug-in or one of its prerequisite plug-ins may be missing or damaged., NSUnderlyingError=0x7fe397e1adc0 {Error Domain=NSCocoaErrorDomain Code=3587 \"dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found\" UserInfo={NSLocalizedFailureReason=The bundle is damaged or missing necessary resources., NSLocalizedRecoverySuggestion=Try reinstalling the bundle., NSFilePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, NSDebugDescription=dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found, NSBundlePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework, NSLocalizedDescription=The bundle \u201cIDEInterfaceBuilderCocoaTouchIntegration\u201d couldn\u2019t be loaded because it is damaged or missing necessary resources.}}}\n2017-10-30 09:58:18.362 ibtoold[10403:200093]  Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Error getting value for parameter key 'name' of extension 'Xcode.InterfaceBuilderKit.CocoaTouchIntegration.Singletons' in plug-in 'com.apple.dt.IDE.IDEInterfaceBuilderCocoaTouchIntegration''\n First throw call stack:\n(\n    0   CoreFoundation                      0x00007fff565840fb __exceptionPreprocess + 171\n    1   libobjc.A.dylib                     0x00007fff7ce72c76 objc_exception_throw + 48\n    2   DVTFoundation                       0x000000010a769aad -[DVTExtensionParameter valueForKey:error:] + 0\n    3   IDEInterfaceBuilderKit              0x0000000109ef9b4d -[IBScopedSingletonRegistry init] + 722\n    4   IDEInterfaceBuilderKit              0x0000000109ef9861 __43+[IBScopedSingletonRegistry sharedInstance]_block_invoke + 41\n    5   libdispatch.dylib                   0x00007fff7da27f64 _dispatch_client_callout + 8\n    6   libdispatch.dylib                   0x00007fff7da27f17 dispatch_once_f + 41\n    7   IDEInterfaceBuilderKit              0x0000000109ef9835 +[IBScopedSingletonRegistry sharedInstance] + 45\n    8   IDEInterfaceBuilderKit              0x0000000109d13689 -[IBInterfaceBuilderPlugin init] + 146\n    9   IDEInterfaceBuilderKit              0x0000000109d135dd +[IBInterfaceBuilderPlugin ide_initializeWithOptions:error:] + 34\n    10  IDEFoundation                       0x000000010b095bfe _IDEInitializeOnePlugInAndPrerequisites + 2324\n    11  IDEFoundation                       0x000000010b095505 _IDEInitializeOnePlugInAndPrerequisites + 539\n    12  IDEFoundation                       0x000000010b095505 _IDEInitializeOnePlugInAndPrerequisites + 539\n    13  IDEFoundation                       0x000000010b093bfa _IDEInitializePlugIns + 1604\n    14  IDEFoundation                       0x000000010b092fb1 IDEInitialize + 8547\n    15  ibtoold                             0x0000000109a0f5a9 ibtoold + 71081\n    16  ibtoold                             0x0000000109a0e724 ibtoold + 67364\n    17  libdyld.dylib                       0x00007fff7da61145 start + 1\n    18  ???                                 0x0000000000000015 0x0 + 21\n)\nlibc++abi.dylib: terminating with uncaught exception of type NSException\nCommand /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool failed with exit code 6. The tool may have crashed. Please file a bug report at http://bugreport.apple.com with the above output and attach any crash logs for ibtool, ibtoold, Xcode, and Interface Builder Cocoa Touch Tool created around the time of this failure. These logs can be found in ~/Library/Logs/DiagnosticReports or /Library/Logs/DiagnosticReports.\n ARCHIVE FAILED \nThe following build commands failed:\n    CompileXIB Sparkle/SUStatus.xib\n(1 failure)\n. I'm open to whatever suggestions you have to try to troubleshoot it.. Well, this worked for me as well. I'd never actually run the xcode program before. Doing so installed other items and the build worked. \nThanks for the tip, @mitchgu !\n. ",
    "mitchgu": "My carthage update also started failing on sparkle around the same time period (1-2 weeks ago) both on Sierra and High Sierra after pulling new commits from master. \n```\nCompileXIB Sparkle/SUStatus.xib\n    cd /Users/mitchgu/Code/MacPass/Carthage/Checkouts/Sparkle\n    export XCODE_DEVELOPER_USR_PATH=/Applications/Xcode.app/Contents/Developer/usr/bin/..\n    /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool --errors --warnings --notices --module Autoupdate --output-partial-info-plist /Users/mitchgu/Library/Caches/org.carthage.CarthageKit/DerivedData/9.1_9B55/Sparkle/1.18.1/Build/Intermediates.noindex/ArchiveIntermediates/Sparkle/IntermediateBuildFilesPath/Sparkle.build/Release/Autoupdate.build/SUStatus-PartialInfo.plist --auto-activate-custom-fonts --target-device mac --minimum-deployment-target 10.7 --output-format human-readable-text --compile /Users/mitchgu/Library/Caches/org.carthage.CarthageKit/DerivedData/9.1_9B55/Sparkle/1.18.1/Build/Intermediates.noindex/ArchiveIntermediates/Sparkle/IntermediateBuildFilesPath/UninstalledProducts/macosx/Autoupdate.app/Contents/Resources/SUStatus.nib /Users/mitchgu/Code/MacPass/Carthage/Checkouts/Sparkle/Sparkle/SUStatus.xib\n2017-11-05 16:14:41.061 ibtoold[9400:92418] [MT] DVTPlugInLoading: Failed to load code for plug-in com.apple.dt.IDE.IDEInterfaceBuilderCocoaTouchIntegration (/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework), error = Error Domain=NSCocoaErrorDomain Code=3587 \"dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found\" UserInfo={NSLocalizedFailureReason=The bundle is damaged or missing necessary resources., NSLocalizedRecoverySuggestion=Try reinstalling the bundle., NSFilePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, NSDebugDescription=dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found, NSBundlePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework, NSLocalizedDescription=The bundle \u201cIDEInterfaceBuilderCocoaTouchIntegration\u201d couldn\u2019t be loaded because it is damaged or missing necessary resources.}, dyldError = dlopen(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, 0): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found\n2017-11-05 16:14:41.061 ibtoold[9400:92418] [MT] DVTPlugInExtensionFaulting: Failed to fire fault for extension Xcode.InterfaceBuilderKit.iOSIntegration.Singletons: Error Domain=DVTPlugInErrorDomain Code=2 \"Loading a plug-in failed.\" UserInfo={DVTPlugInIdentifierErrorKey=com.apple.dt.IDE.IDEInterfaceBuilderCocoaTouchIntegration, DVTPlugInExecutablePathErrorKey=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, NSLocalizedRecoverySuggestion=The plug-in or one of its prerequisite plug-ins may be missing or damaged and may need to be reinstalled., DVTPlugInDYLDErrorMessageErrorKey=dlopen(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, 0): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found, NSLocalizedDescription=Loading a plug-in failed., NSFilePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework, NSLocalizedFailureReason=The plug-in \u201ccom.apple.dt.IDE.IDEInterfaceBuilderCocoaTouchIntegration\u201d at path \u201c/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework\u201d could not be loaded.  The plug-in or one of its prerequisite plug-ins may be missing or damaged., NSUnderlyingError=0x7f83a49c3300 {Error Domain=NSCocoaErrorDomain Code=3587 \"dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found\" UserInfo={NSLocalizedFailureReason=The bundle is damaged or missing necessary resources., NSLocalizedRecoverySuggestion=Try reinstalling the bundle., NSFilePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration, NSDebugDescription=dlopen_preflight(/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework/IDEInterfaceBuilderCocoaTouchIntegration): Library not loaded: /Library/Developer/PrivateFrameworks/CoreSimulator.framework/Versions/A/CoreSimulator\n  Referenced from: /Applications/Xcode.app/Contents/Developer/Library/PrivateFrameworks/SimulatorKit.framework/Versions/A/SimulatorKit\n  Reason: image not found, NSBundlePath=/Applications/Xcode.app/Contents/PlugIns/IDEInterfaceBuilderCocoaTouchIntegration.framework, NSLocalizedDescription=The bundle \u201cIDEInterfaceBuilderCocoaTouchIntegration\u201d couldn\u2019t be loaded because it is damaged or missing necessary resources.}}}\n2017-11-05 16:14:41.064 ibtoold[9400:92418]  Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Error getting value for parameter key 'name' of extension 'Xcode.InterfaceBuilderKit.iOSIntegration.Singletons' in plug-in 'com.apple.dt.IDE.IDEInterfaceBuilderiOSIntegration''\n First throw call stack:\n(\n    0   CoreFoundation                      0x00007fff51acf2fb __exceptionPreprocess + 171\n    1   libobjc.A.dylib                     0x00007fff7843cc76 objc_exception_throw + 48\n    2   DVTFoundation                       0x000000010c2624dd -[DVTExtensionParameter valueForKey:error:] + 0\n    3   IDEInterfaceBuilderKit              0x000000010b9eeab5 -[IBScopedSingletonRegistry init] + 722\n    4   IDEInterfaceBuilderKit              0x000000010b9ee7c9 __43+[IBScopedSingletonRegistry sharedInstance]_block_invoke + 41\n    5   libdispatch.dylib                   0x00007fff78ff1e88 _dispatch_client_callout + 8\n    6   libdispatch.dylib                   0x00007fff78ff1e3b dispatch_once_f + 41\n    7   IDEInterfaceBuilderKit              0x000000010b9ee79d +[IBScopedSingletonRegistry sharedInstance] + 45\n    8   IDEInterfaceBuilderKit              0x000000010b807175 -[IBInterfaceBuilderPlugin init] + 146\n    9   IDEInterfaceBuilderKit              0x000000010b8070c9 +[IBInterfaceBuilderPlugin ide_initializeWithOptions:error:] + 34\n    10  IDEFoundation                       0x000000010cb8bcd2 _IDEInitializeOnePlugInAndPrerequisites + 2324\n    11  IDEFoundation                       0x000000010cb8b5d9 _IDEInitializeOnePlugInAndPrerequisites + 539\n    12  IDEFoundation                       0x000000010cb8b5d9 _IDEInitializeOnePlugInAndPrerequisites + 539\n    13  IDEFoundation                       0x000000010cb89cce _IDEInitializePlugIns + 1604\n    14  IDEFoundation                       0x000000010cb89085 IDEInitialize + 8547\n    15  ibtoold                             0x000000010b502535 ibtoold + 70965\n    16  ibtoold                             0x000000010b5016b0 ibtoold + 67248\n    17  libdyld.dylib                       0x00007fff7902b145 start + 1\n)\nlibc++abi.dylib: terminating with uncaught exception of type NSException\nCommand /Applications/Xcode.app/Contents/Developer/usr/bin/ibtool failed with exit code 6. The tool may have crashed. Please file a bug report at http://bugreport.apple.com with the above output and attach any crash logs for ibtool, ibtoold, Xcode, and Interface Builder Cocoa Touch Tool created around the time of this failure. These logs can be found in ~/Library/Logs/DiagnosticReports or /Library/Logs/DiagnosticReports.\n ARCHIVE FAILED \nThe following build commands failed:\n    CompileXIB Sparkle/SUStatus.xib\n```. Derp, I think I had updated XCode from the Mac App Store, but hadn't opened the application itself since. When I opened it again to check if simulators were installed, it prompted me if I wanted to install supplementary resources that were missing (not exact wording), and after it did so the carthage update started working. From there MacPass builds painlessly. Thanks for the helpful pointer. . ",
    "ChESch": "Oh i didn't see that! Thank you very much. But is it possible to open new files in a tab by standard?. ",
    "Winter84": "A word of explanation. At the moment Kee only works with databases through KeePass itself. Running KeePass on a Mac is not especially pleasant. It runs under mono, but the interface is clunky, with hard to read typefaces and no cut and paste from the Mac environment, etc. So it is not good for any editing that the database needs. Being able to use the fine interface of MacPass would make it so much easier.. ",
    "Vadammt": "Can you give me support on Plugin development for MacPass - Like a basic project setup or point me to \"plugin development\" documenation?\nI searched through the MacPass and MacPassHTTP docs but couldn't find how to get started - so I'm investigating your (quite complex) MacPassHTTP structure (good work btw!).. Yes, it seems you're right. The issue seems to be connected to the .lock file.\nBut isn't it sufficient to store the new seeds after the database is saved (or didn't I get the meaning of your comment).. After testing for a while, I don't experience any \"wrong\" syncs.\nUsing MacPass 0.7.3. Which sync tool do you use? \nI'm using Seafile Client 6.0.7 for Mac and I created a seafile-ignore.txt in my seafile library KeePass (but I can't remember if this was the solution of my sync problem).\nseafile-ignore.txt:\n```\nIgnore KeePassXC lock files\n*.lock\n```\n. ",
    "Hiestaa": "Using MacPass Version 0.7.3 (17830) and MacPassHTTP Version 0.3, I still get the \"Plugin is not properly signed\" issue:\n\n\nThis happens on OSX El Capitan Version 10.11.6 (15G1611) (not sure if I should open a ticket for this problem?)\n. ",
    "eplanet": "I'm experiencing the same issue. And since I use a mechanism similar to Vadammt to store the file automatically, I always end up having a new version of MacPass database while having no modifications made to the content itself.\nI regularly use Keepass for Windows and various Keepass clients for Linux (KeepassX, KeepassXC, ...), that do not have the same problem: when no modifications are made to the database, the file remain untouched even after being locked.. I virtually never lock it manually but I have auto-lock enabled. I suppose you got it right, after trying both to auto-lock and manually lock, the file gets changed.\nI would love to have the fix you propose ;-). So I suppose it is solved by 4628c638a8eec65081cfc95106171b0e2fd79b6f anyway? \ud83d\udc4d . I don't agree, I have Version 0.7.3 (17830) installed, and the database still gets changed after locking. Would it be possible to reopen the issue? Thanks!. I'm using git actually. I know it's not ideal but that's the easiest for me :-D. Anyway, the local database file itself changes (ie, the *.kdbx file), the problem is not the lock file.. I'd love to have the fix ASAP. Thanks a lot for your dedication!. ",
    "maur": "Yeap, all good. With MacPassHTTP 0.3 works like a charm. Thanks.. ",
    "brucechen94539": "Followed the instruction and worked like a charm!. ",
    "vasilisvg": "Same issue here. My previous version was up-to-date. \nI took a look at the database settings but all Recommend key change options are ticked off.. Thanks for fixing this so quickly!. ",
    "timcooijmans": "Thank you for the fast analysis. I have disabled auto locking for now in 0.7.2 and will report back.. I've just updated to 0.7.3 via the automatic updater and the issue is solved. Thank you!. ",
    "daften": "To confirm: you're completely right. That works fine for me. Small bug in comparison to having to use parallels every time otherwise. :). Yes, but it's partly the user too. I'm expecting a lot from software nowadays and sometimes forget to look further for some patterns. So let's call this at least partially PEBCAK :P . ",
    "trimailov": "It works. \nFeel stupid now.\nThanks for the help.. ",
    "nickmalcolm": "Same here \ud83e\udd26\u200d\u2642\ufe0f\ud83e\udd26\u200d\u2642\ufe0f\nI've updated the Error Codes page in the wiki so that people don't have to dig through issues to find a fix. . ",
    "jeffderbyshire": "Ah Ha, thank you for informing me to RTFM :).  Is there any way to disable plugins, maybe give popup warning saying it won't work with new MacPass version?  Thanks.. ",
    "hugo4711": "Could you provide a Key-Shortcut for 'tab gathering'?. I managed to set up a short cut by myself using the 'keyboard' settings:\nShortcuts > App Shortcuts > + : Program 'Mac Pass', 'Merge all Windows', CMD+M\nI think apple should provide a shortcut.... ",
    "csaggo": "missed that thank you!. ",
    "lucaceccarini": "@restyler exact same experience for me. I'm also coming from KeePassX where I was being able to find and quickly copy-paste or just select another record by pressing cursor keys whilst the list maintains focus. I'm not using any integration utilities, so this enhancement would be nice for a happy use of MacPass.. ",
    "zipzit": "All of a sudden I'm seeing search weirdness in the MacPass tool.  In the past, I could search on any portion of an entry, and now the same search I've always used results in null.. \nI've used the search term \"thinko\" to discover the entry for TD Ameritrade.. (my entry includes the URL https://www.thinkorswim.com/t/innovation.html and the words thinkorswim contained in the notes for the entry.)  It looks like a recent update to MacPass restricts the search function somehow?  Am I doing this right? \nThis is not a UUID (Universally Unique Identifier) specific search issue, but a general comment on search function as currently released.... @mstarke You totally nailed it.. Somehow my default search tool was only using one obtuse data field.  All fixed. Apologies for delay in followup.\n. ",
    "erjiang": "I renamed the issue since obviously I don't expect it to \"work\" for all sites, but it was the addition of a blank icon that really threw me off.\nI also didn't realize that dragging an image file onto the icon was the UI for using a custom file. I would have expected a \"Open file...\" button next to \"Use Default Icon\". But honestly, if Download Icon didn't work, I just give up at that step and leave the icon as the default icon.. It looks like where you try creating the KPKIcon using with initWithImageData already checks if the object is nil, so I'm thinking something like the following would work:\ndiff --git a/KeePassKit/Core/KPKIcon.m b/KeePassKit/Core/KPKIcon.m\nindex 88cc8fd..04508cc 100644\n--- a/KeePassKit/Core/KPKIcon.m\n+++ b/KeePassKit/Core/KPKIcon.m\n@@ -64,6 +64,11 @@\n       _uuid = uuid;\n     }\n   }\n+  // if NSUIImage fails to understand data, then this KPKIcon should be nil as well\n+  if (!_image) {\n+    [self release];\n+    return nil;\n+  }\n   return self;\n }\nI don't know objc nor do I know how to compile all this, so I think it's best that someone else makes the PR.. ",
    "githubhohdorfnet": "For me deleting the ~/Library/Caches folder solved the problem.\nThanks a lot!. ",
    "smlgbl": "Deleting that folder did not help me. Any other suggestions?. Where do I get that verbose log?\nI don't have a link and I just deleted my ~/Library/Caches folder.\nMine just reads like this:\n\n2018-03-16 16:09:24.158 MacPass[60750:3355550] Looking for external plugins at /Users/samuel/Library/Application Support/MacPass.\n2018-03-16 16:09:24.158 MacPass[60750:3355550] Looking for internal plugins\n2018-03-16 16:09:24.158 MacPass[60750:3355550] No internal plugins found!\nobjc[60750]: Class FIFinderSyncExtensionHost is implemented in both /System/Library/PrivateFrameworks/FinderKit.framework/Versions/A/FinderKit (0x7fffa8988b68) and /System/Library/PrivateFrameworks/FileProvider.framework/OverrideBundles/FinderSyncCollaborationFileProviderOverride.bundle/Contents/MacOS/FinderSyncCollaborationFileProviderOverride (0x10f4d2cd8). One of the two will be used. Which one is undefined.\n\nThe app says:\n\nThe password and/or the keyfile is wrong (1017). \n",
    "phaus": "Oh\u2026\u00a0the problem was, that I had a ln -s link for my external user directory. Using the real directory itself, did solve the problem.. ",
    "MWeesenaar": "Added two minor comments. Furthermore good translation. \ud83d\udc4d . Aanbevolen*. Remove one ?. ",
    "aiolos": "Thanks, I pushed some fixes.. Thanks for pointing that out. I already found it a lot of work to find all the files and strings and manually change them. I will try the XLIFF way. (This is also the first time I'm really using XCode and macOS development). I close this PR, #715 is now the one to use.. I tried to combine both this PR and #713. When I import the XLIFF file also some strings will be removed. I don't think this is really a problem, since they are not used anyway.\nI also found some place where autolayout doesn't seem to work ok. I saw it last night, and don't have it available right now. I will show it later.. See #715 . Hi,\nI agree with using the conventions from Apple and Mozilla. It was not my intention to overwrite your changes, which I think are very good.\nHowever, it turns out that when the translations are done by XLIFF, a lot of changes are being made due to removed or changed variables. That's what happened in #715. (there are also lines just changed from position)\nWhen I checked out your branch and compiled the application using xcode, some texts didn't look translated in the application, which is probably due to changed variable names. @mstarke Can that be the case?\nSo I think we should approach this problem by using your translations and using XLIFF, so that when the strings are exported and imported again, they will stay right (otherwise this same problem will occur again). For now, I will compare my last commit in #715 and see what needs reverting.\nBtw: If you have any information about how to approach translations following the mentioned conventions, please feel free to update the information in the contribute.md file.\nEdit:\nI just added a new commit where I reverted the accidentally changed translations. I might have missed some of them, please add a comment on lines that are still wrong. . This PR and #714 are now open for a while. I would suggest to merge or close the PRs, because they can become outdated if other functionality is merged. \nAs stated before: this PR combines the good translations of #714 (the commits are still in there and accidental errors are reverted) and also makes use of the XLIFF method of translating.\nTranslations are not complete: not with this PR and not with #714, but already much better than before. \nAfter merging we can continue with translations and as such making MacPass better and better.. No problem, I just created this PR with the same intention (and closed #713). This PR is basically #714 but with the use of XLIFF import/export.. I fixed some translations that were removed and added a few more. If there is any missing translation left, let me know where in the interface that is. I clicked through the whole application and cannot find any missing translations right now.. ",
    "aeuae": "on a side note, pure note/text only could be useful as well (but I guess that's not in the scope/spec of the kbdx format.. ",
    "ryanthara": "Thank you @DominusExult for this good advice. Still working perfectly after this Finder operation. Same issue here with ForkLift or PathFinder. . ",
    "roblav96": "Well you sir have succeeded at making a great OSX version!\nThe undo/redo is hard to explain. I'm having difficulty finding a pattern that can be replicated.\nI came across another keyboard shortcut command bug. When the toolbar is toggled to hidden \u2325\u2318T and try to copy the username or password of the selected entry \u2325\u2318C it doesn't do anything. When the toolbar is toggled to visible, it works as expected. I honestly wouldn't loose any sleep over it, just thought I'd let ya know =]\n  . Also drag and drop multiple selected entry items into a group folder doesn't work :X. Ah yes of course! I'll take care of that for you right now. My apologies =]. ",
    "p4sI": "I can confirm this.. ",
    "marcelhuth": "Hi,\nthanks for your quick response. You're right, right click works but it took me some time to figure that out. It is a bit tricky to get it right, as the field is not editable (as you said), but for now it is working for me.\nThanks for your hard work with this cool application! Great to hear that there will be a better way for configuring the references \ud83d\udc4d . ",
    "sakebe": "I don't understand just moved these files to other location and everything works just well.\nSorry for this.. ",
    "jeanlaroche": "Thanks a bunch for looking into it! :). ",
    "xperimental": "Don't know if this helps, but the issue seems only to happen on the MacBook that I have already upgraded to macOS 10.13. On 10.12 it works fine using Chrome and MacPass 0.7.3.. ",
    "landon-hemsley": "I'm dealing with this issue also. MacOSX version 10.13.6. MacPass version 0.7.3. Google Chrome version 69.0.3497.100 (although chrome updates so regularly that I don't know if it even helps to put the chrome version). \nHopefully a fix comes soon!. ",
    "mathos77": "@mstarke Hi Michael,\nI have this issue all the time using the latest and greatest.\nIt does not seem to be related (for me at least) to Chrome or whatever, but 0.7.3 works like a charm, \nAll master-checkouts after that (which I tried) have never worked well for me.\nIn my case, mostly it also says it found a match for item-0 ....yet it does not auto-type anything....\nIf you want to collect some debugging, let me know.. ",
    "vaxo": "With Argon2 it took 4-5 sec.\nIs it safe to use Aragon2 for my primary database?. Thanks for the explanation. That's very helpful. I'll try to keep database smaller \ud83d\ude04 . ",
    "clobber": "Thank you!. ",
    "berliozz": "Try to access, but it deny.\n\nSorry, you do not have permission to access this resource:\nhttps://lokalise.co/project/771648395a8b4dff7aaf02.79702921/. \n",
    "walkabout17": "I made a few other tests. The exact problem is, that with autotype the username is shortened and consisting of stochastically (at least it looks like that) extracted or mixed characters. The password is filled out right with autotype!!!\nTwo examples:\nusername: kernharald -> autotype: ehrad, next try: 480216e40h2ra1d\nusername: 4802164021 -> autotypes: 81021, next try: 8810121021\nFor me, main correlation is, that I installed MacPass 0.7.3. after clean install of high sierra (10.13.3 (17D47)). After clean install I installed firefox (same version as before with sierra). In sierra I used the previous version of MacPass and everything worked well.\nNext step for me would be: export database, delete the old one db, make a new one and import the contents.\nThank you, Danke\nHarald\n\nAm 02.02.2018 um 11:06 schrieb Michael Starke notifications@github.com:\nYour title stated \"not working anymore\" since when did this happen? Does it correlate with a Firefox update or a MacPass update?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\n. 1. mark the entry in the open database\n2. shift cmd U to open the adress (is opened with firefox, my standard browser)\n3. go back to MacPass (mouse click on the window frame)\n4. ctrl cmd A to execute autotype\n\nAm 02.02.2018 um 13:00 schrieb Michael Starke notifications@github.com:\nThe database should not be the cause of the issue. Do you use global auto-type via a hot-key or do you invoke auto-type from MacPass?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\n. I guess it's not an issue with high sierra, because with safari autotype is working fine!\n\nAm 02.02.2018 um 13:01 schrieb Michael Starke notifications@github.com:\nAnd I'm still on 10.12 so this might be a 10.13 related issue.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\n. Thank you for the explanation and fast reaction!\n\nAm 03.02.2018 um 12:10 schrieb Michael Starke notifications@github.com:\nThank you for the clarification. The clipboard is supplied by a daemon in macOS and sometimes the key events to paste arrive before the clipboard is filled with the actual content. This might be an edge case for Firefox and it's UI. I'll have to replicate this in my end and try to come up with a fix. As a side note: the Autotype system needs a rewrite to move away from clipboard usage to simulate more key presses which might fix such problems as well but this is still far out.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\n. Seems like it's woking again:\nMacPass 0.7.3 (17830)\nmacOS 10.13.4 (17E199)\nFirefox 59.0.2 (64-Bit)\nAt the moment I'm not able to reproduce the issue!\n. ",
    "ahouse101": "Ah, that makes sense. Is difficult to fix? I could look into opening a pull request if there are higher priority issues. . I'll check it out tonight and take a look, I'm curious anyway. If I can fix it I'll open a PR.. ",
    "dpisano": "I have been able to do this for some time. It is just not that intuitive. It only works if you drop the item on the folder.. ",
    "hpellegrini": "I did a workaround thats work I installed LinCastor and with this program is possible to create URI Schemes and run a program or bash or Applescript.\nSo I installed and create a CMD:// URI Scheme and put to open a Applescript, on this applescript I put to URL_VALUE (all command after cmd://) to open Terminal and execute it.\nand on Macpass I changed default open program to Finder, so now is everething perfect my macpass is a strong tool who can execute programs, terminals, commands, etc. \n. ",
    "loru": "Hello,\nI am very for this issue. It seems that it depends on the system's language, you cannot change the language inside the software.\nThank you a lot.. ",
    "JohnGEyles": "I have Macpass workflow prefs set exactly as you show.\nChrome is already running.  I had Chrome set to \"open the new tab page\" but changed it to \"continue where you left off\" and it didn't help (although I haven't re-started Chrome).\nI installed Macpass on my 2009 MacPro running 10.11 (El Cap) and it works a little better there.    Opens the URL, but doesn't do the autotype.  I do not have 'global autotype' enabled.\nSo it seems it is a problem with 10.13.\n. FWIW, KeepassXC is exhibiting pretty much identical behavior.   On 10.13 Macbook Air: doesn't open a double-clicked URL at all.   On 10.11 Mac Pro: opens the double-clicked URL but doesn't do the autotype.   . Any hints why autotype is not working for me under 10.11 ?    Thanks for checking all this out.\n. I started a new issue for the '# in a URL' (and deleted the comment above).\nI couldn't quite follow the linked thread on the 10.13 issue; do we just have to wait for the 'radar' (whatever that is) to be dealt with ?    Is restarting Chrome every time there's an auto-update a temporary fix ?\n. Yes, I was using Chrome v63, restarted and it auto-updated to v64 (stable release channel was already  up to v64) and problem is solved.   Thanks.\nMy complaint about autotype was from a misapprehension about how it's supposed to work.   I thought I could double-click the URL and it'd open it and then type in the userid and password automatically (without my doing any action after double-clicking the URL).    But why couldn't it work this way ?. So now I'm getting this faulty behavior again: double-clicking the URL just opens an empty window.   I re-started Chrome as recently as yesterday, and have been running v64 since it seemed like this problem was resolved (previous comment, 8 days ago).    But when I check the version number, it shows v64 but also says \"Nearly up to date! Relaunch Google Chrome to finish updating.\"    Is it possible that even though Macpass was working with my currently-installed version of Chrome, it now doesn't work because there's apparently a newer version ?. So where does one find the version of MacPass that contains this fix ?    0.7.3 still seems to be the latest version.\n. Sorry, but I'm not sure what \"continuous\" means.   I assume it's a work in\nprogress until you're ready to release 0.8.   But I can't figure out where\nto find it.\nOn Tue, Mar 13, 2018 at 12:17 PM, Michael Starke notifications@github.com\nwrote:\n\nContinuous is done so you can grab that one.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/MacPass/MacPass/issues/743#issuecomment-372724608,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AOaVArMd65mDVWo8Czbt1X4jEbKlvcq-ks5td_EigaJpZM4SIvyy\n.\n. Ok, I've been warned.   As long as it doesn't broadcast each decrypted\npassword to Facebook each time ... :-)\n\nThanks for getting this fixed.   I've noticed a couple of other login URLs\nwith '#' in them.\nOn Tue, Mar 13, 2018 at 12:24 PM, Michael Starke notifications@github.com\nwrote:\n\nIt's a development snapshot. Unsigned and sometimes a bit more broken than\nthe release but most of the times better since it includes more bugfixes\nand more features :)\nTake a look here: https://github.com/MacPass/MacPass/releases\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/MacPass/MacPass/issues/743#issuecomment-372727225,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AOaVArtivmvazgvKGnOtTxFh2W7D3OVoks5td_K4gaJpZM4SIvyy\n.\n. \n",
    "sfiera": "The Chrome error sounds like https://crbug.com/777863 / rdar://35505509. I think that, according to that bug, there is a fix in Chrome v64. So:\n If you\u2019re using Chrome Stable (v63; you probably are), then you should be fine once v64 reaches stable (2-4 weeks from now, if I recall).\n Until then, restarting Chrome for updates should fix the problem.\n If you\u2019re using a prerelease version of Chrome (Beta, Dev, Canary), you should already have the fix.\n The fix is a workaround for an Apple bug (that\u2019s what \u201cradar\u201d bugs are). That will be fixed by OS X 10.13.4 at the earliest, but that shouldn\u2019t matter for you; Chrome should work fine before then.. I guess. I thought that the bug said that there was a workaround, and that the timing was right for v64. I must be wrong about one or both of those. In that case, I\u2019m not sure what the timeline for a fix is.. ",
    "sitsofe": "@mstarke I think the credit for this has to go to @sfiera rather than me :-). ",
    "btxtiger": "Sorry for my late reply.\nI have tested it on Firefox, Safari, Opera and Chrome again and now it works as expected. Don't know if the issue was a side effect of some other software or a patch was just applied on Chrome.. ",
    "Be8ung": "It would be indeed VERY fine to have the \"autotype\" button direct nebst to the \"action\" button on the title bar without the need of selecting the action-feature first (at least it would be great to have the possibility to add a custom button on the \"title\" bar).. ",
    "minusf": "thanks for the explanation, closing.\ni am not here to argue, but i am not sure that the expectation of cmd-c in programs dealing with abstract data structures (such as an \"entry\" in a password manager) is to copy the whole record, as it would be usable only to MacPass: for me cmd-c/cmd-v is about copying data between applications through the clipboard... a duplicate or clone custom action makes more sense to me, but that's just me.. we have to make a distinction between copy inside an app, and copy with the intention of crossing app boundaries. when you copy files in the finder, (normally) you invoke paste inside finder as well: application borders are not crossed.  but if you do cmd-c in the finder and cmd-v e.g. in terminal, surprise, you get the filename and not the file...\ni am not debating that the clipboard should be \"text only\".  but not all cmd-c operations involve the clipboard as such, and i mean the \"global\" clipboard.  inside my application i can make cmd-c copy anything i want wether that copied data can be interpreted outside my app or not..\nultimately, the point of MacPass is however to cross app boundaries and i think the keepassxc decision is the correct one.\nbut anyway, i tried the preferences approach and it does not seem to be working...\n\nmaybe it does not work for context menus?  no idea.\nin any case, if i can't change the shortcut, going back to keepassxc. muscle memory is strong.... ",
    "Avalarion": "For me the way with \"open\" would be a working solution, but I have never written OSX native Apps so I don't know how much work we are talking about or how I could support you here =/.. ",
    "ad019": "Thank you for your response. Looking forward to this feature.\n. ",
    "Zoidpilot": "Any updates or workarounds for this? I love the app so far, this is my only request. . ",
    "barylwires": "@mstarke Now that I've done it correctly, MiniKeePass works just fine. I'm learning, and didn't realize that the keyfile and the database are two different things. \nUnder INSTALLATION on the GitHub page, it says:\n\nA keyfile is useful if you have a database that you sync with something like Dropbox or Google Drive. You can put the database in the cloud, but keep a keyfile only on the devices you use (e.g. your phone, your laptop). Keyfiles do not change, and can be kept separate from the KeePass database.\n\nI used MacPass to create my database [filename.kdbx] and keyfile (plus password) [filename.key] and put them both in a folder inside Dropbox, which is how I could export them into MiniKeePass on my iPhone.\nHow can I get the keyfile to be on my phone by itself so that it is separated from my database in the cloud (Dropbox)?\nThanks.\n. @DominusExult Thanks. I appreciate the feedback!\n\n\nFirst Misconception. Not having the DB and the keyfile at the same spot makes good sense intuitively. I thought what that might look like could be: keep the keyfile in Dropbox and send the DB to iPhone, although I wasn't sure where it would wind up. Airdrop made the delivery easy. The DB wound up in MiniKeyPass (which, I guess was the only possible destination. What would happen if I didn't have MKP installed?) So then I thought MKP would ask where the keyfile was and I would point it to Dropbox. But of course, MKP wanted the keyfile onboard too, so I Airdropped that and now DB and keyfile are in MKP (again), all working just fine.\n\n\nSecond Misconception. I thought I'd have to safely store the DB and/or the keyfile in Dropbox (in different places) in order to provide functionality for MKP. But MKP won't work unless both files have been imported into it.\n\n\nNew Understanding? It is not necessary to have a copy of the DB and/or the keyfile in Dropbox (or some other safe cloud spot) in order for MKP to work. The utility of a safe cloud spot for the DB is keeping track of changes. The DB in MKP on my phone won't know about changes that I make to the DB on my Mac, but if my Mac/DB lives on a cloud, then I can delete the older MKP/DB and import the new version out of the cloud and be synced with fresh news.. \n\n",
    "cappert": "What about iCloud / iCloud Drive integration?. >This works as intended. \nI assume you mean technically? I didn't look into your translation workflow yet, I don't know if the translation was submitted incomplete or if those keys were added later.\nI'll try to translate the missing keys sometime but I still see it as an UX bug (I assume it's why you left the issue open). Looks like you need to install XCode to generate the XLIFF file before translating, I'm afraid I won't be able to update the translation, sorry.. First time doing this on MacOS so I'm not sure about the workflow.\nI'd just have to open the .xliff file in XLIFFTool (I downloaded from the App Store) and translate, then export the strings?. ",
    "bmp": "@cappert Works the same as Dropbox or Google Drive. I haven't found any difference.. This error occurs all the time, the file opens well in a different client.. @mstarke, I'm not sure what happened, but after I re-installed MacPass, the same combination is working! It was working fine in KeeWeb from the first attempt.\nThank you for helping out though.. This would be a great feature!. ",
    "mterron": "I can confirm this behaviour and the bug must be in the load of the icons as they show up fine in KeePass so they must saved correctly.. ",
    "mindeffects": "Perhaps \"AutoType\" could get a more \"consistent\" shortcut, because the CTRL-key is on different position when using a \"normal\" Mac keyboard or a laptop (\"bottom left\" and \"bottom left+1\").\nSince \"Open URL\" is SHFT+CMD+U and is often followed by \"AutoType\" it could perphaps be SHFT+CMD+A?!\nWould be easier to finger-handle because when both would be using SHIFT+CMD+... the fingers could stay where they already are.. I just tried to change the Autotype shortcut but it did not work. :-(\n\nMaybe the \"\u00fc\" needs to be masked/escaped?. ",
    "stadler": "I would also highly appreciate more intuitive shortcuts. The ones from Keepass work fine and are one key less.. ",
    "clnhlzmn": "Thanks for the info. It looks like the article on synchronization is talking about two database files. In the case that I'm opening my database from my cloud storage directly (not using master-slave) then the two databases we're referring to are the copy on disk and the copy in MacPass's memory? If that's the case then the synchronization performed by MacPass is the process that makes sure no data is lost from either the in memory copy or the on disk copy (in the event of a save or the on disk copy changing)?. Thank you very much. That answers all my questions.. ",
    "tallakt": "Im on version Version 0.7.3 (17830) btw.... Could you disable the menu and just have a copy to clipboard button?. ",
    "nopivnick": "\nThe error only occurs if multiple items with multiple attachments are present.\n\na .kdbx with multiple entries having only one attachment are unaffected?. fwiw, I did see the comment that MacPass does not support scripting but just thought I'd go on record articulating the request.. thanks for the response.\n\nMacPass currently supports a non-desctructive bi-directional sync.\n\njust to be sure: there's no way to trigger the sync via command line, correct?. ",
    "rmiller-sgntr": "@mstarke Any update on 0.7.4 release?. ",
    "0rvar": "Also, if the file is named .kdbx, it will be renamed to .kdbx.kdbx. I renamed my kdbx file from \".kdbx\" to \"passwords.kdbx\", and now it works.\nSo, it is not an isse for me any more, and I think it's a very unusual use-case to name the kdbx file as I did. . ",
    "chr0max": "Yes I also thought that, but on Keepass it works flawlessly. On Mac I have Mountain Duck and it works, but not without problems. Sometimes for example Macpass says \"the file is changed overwrite?\". But there is nothing changed, maybe Mountain Duck changed his cached version or so. (By the way, mountain duck connects on login too fast, before the internet connection is active and throws an error etc...). \nIs's not perfect and I presume that nearly every user today has multiple devices and is interested in an easy way to have access to his passwords without any bigger cloud solution with privacy issues. \nMaybe some sort of plugin system would be helpful and every user who need this functionality, could install it. After some time there could be a very interesting set of plugins. I know that this is a huge bunch of work, but MacPass is the best macclient I found and would deserve it. :-)\n. by the way, on iOS I have the same problem. There is no keepass client with ftp connection (at least I found no one) and I have to manually sync the files with a ftp client on the device. It's far from perfect. So Ifffff there would be a golden-5-star-ultra-awesome-multi-device-solution, it would include a iOS client in the big strategy password ecosystem.. ",
    "er3do": "fyi, The last time I was able to successfully build the dependencies on mac os 10.13.3. ",
    "na69an": "I also have this issue.\nEnv:\n- xcode: 9.4 (9F1027a)\n- os: 10.13.4\n- macports 2.5.0\n- carthage 0.29.0\n~/prj/MacPass $ carthage bootstrap --platform macOS\n Checking out HNHUi at \"1.4.2\"\n Checking out KeePassKit at \"1.12\"\n Checking out Sparkle at \"1.18.1\"\n xcodebuild output can be found in /var/folders/vm/966pgj1556z48k_wh7y6rchc0000gn/T/carthage-xcodebuild.IHsWwS.log\n Downloading Sparkle.framework binary at \"1.18.1\"\n Building scheme \"HNHUi\" in HNHUi.xcodeproj\n*** Building scheme \"KeePassKit macOS\" in KeePassKit.xcodeproj\nBuild Failed\n    Task failed with exit code 65:\n    /usr/bin/xcrun xcodebuild -project ~/prj/MacPass/Carthage/Checkouts/KeePassKit/KeePassKit.xcodeproj -scheme KeePassKit\\ macOS -configuration Release -derivedDataPath ~/Library/Caches/org.carthage.CarthageKit/DerivedData/9.4_9F1027a/KeePassKit/1.12 ONLY_ACTIVE_ARCH=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY= CARTHAGE=YES archive -archivePath /var/folders/vm/966pgj1556z48k_wh7y6rchc0000gn/T/KeePassKit SKIP_INSTALL=YES GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=NO CLANG_ENABLE_CODE_COVERAGE=NO STRIP_INSTALLED_PRODUCT=NO (launched in ~/prj/MacPass/Carthage/Checkouts/KeePassKit)\nThis usually indicates that project itself failed to compile. Please check the xcodebuild log for more details: /var/folders/vm/966pgj1556z48k_wh7y6rchc0000gn/T/carthage-xcodebuild.IHsWwS.log\n. ",
    "casmarrav": "I use search a lot, and it would really help to have a logical way to navigate from the search box to the result list. Or even just be able to press Cmd+Alt+C from the search box when only one result has been found.. ",
    "mauron85": "Maybe it has been changed already in master/continuous, but what I'm personally missing is navigation from search box to search result by simple hitting TAB once. Thank you for this awesome program btw.. Just compiled MacPass from source. Now it's possible to navigate quickly to search results by pressing ENTER key. That's definitely improvement. However I would prefer TAB key and leave ENTER for the search action. This will allow you to change search text without having to use mouse or CMD+F.\nSo it will work like this:\n\ntype text into search box\npress ENTER to initialise search.\nif you're happy with search result, you'll press TAB to navigate to the result result list\nif you're not happy with result you can adjust search text and press ENTER again\n\n. Yes, you're right. Realized how it works later on. It's almost perfect.\nStill would like to see TAB in addition to ENTER to move focus to the\nresult list. But understand that is just my preference.\nD\u0148a po 5. 11. 2018, 15:17 Michael Starke notifications@github.com\nnap\u00edsal(a):\n\n@mauron85 https://github.com/mauron85 Enter is never necessary for a\nsearch. Search happens at the moment you type anything. The only drawback\nnot pressing Enter is that the search term will not be added to the\nrecent searches list. The workflow you describe works sans Enter\n\nCmd + For click in the search box\ntype text in the search box\nif you're happy with search result, use Enteror use the arrow keys\n   to in the list\nyou can use all the keyboard shortcuts without ever leaving the\n   search box on the first entry in the results\n\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/MacPass/MacPass/issues/796#issuecomment-435890626,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAV8Gsx9h_gdnBgmKRCQaK40pakMzaBCks5usEhfgaJpZM4UMeUr\n.\n. \n",
    "error401de": "Hi @mstarke ,\nthanks for your answer!\nIs there any plan when 0.7.4 will be released?. ",
    "Ashok-Varma": "\nThanks\nHuge list of major changes. I hope AppStore gets better to support awesome apps \ud83d\udc4d . @yepher / @mstarke any update on this ?. \ud83d\udc4d . \n",
    "Fudge0952": "@mstarke as Mojave is now out of beta does that mean we can expect to see a dark theme update coming?. ",
    "bertoost": "Nice!! Should be released!!. ",
    "jaal2001": "That would lead to the point, that I have send and store files outside the users systems. That is what I call a bad idea.\nSaving to multiple locations could be i.e. local drive, USB stick, Home NAS. And when you choose to save into the cloud, this is the users decision. \nAnd I've seen failed TimeMachine backups (which does happen), so I won't trust a single point of failure.. In the end my request was not about the security trust issue, it was about backup locations. \nIn this case you do not have to rely on the time machine mechanism, you can define the backup locations on your own.. ",
    "dmqgit": "This would be great. I love MacPass - thank you for this great piece. U2F would be the way to nearly perfection.\nSo +1 for this request :D. ",
    "jonny0303": "I'm on public beta 9 now and tested it again. Seems to work now, so I will close this issue now with MacPass \ud83d\udc4d. ",
    "88-percent": "Great to hear. It is safe to use the latest continuous build, or do you recommend waiting until for the sha hashes for the official release?\n. Sorry for the delay in my reply. \nThanks so much for this. This makes me feel alot more comfortable with my decision to switch to MacPass!. ",
    "flat235": "whoops, excuse me, didn't to look into the OSX settings, I just assumed any shown notification would go into the history, my bad.\nSwitching notifications to only show once, but not to spam the history is all I need. . ",
    "FrankMittelbach": "arrg ... sorry for the noise then, but the plus/minus (not so little really) didn't show after installing the tool ... maybe a problem of the default window size, but for me it looked like:\n\nand only with your hint I realized that I can move the split so that it showed the buttons. And even then I initially stopped once the button showed without making it even bigger so that the edit box came up too.\nMaybe that should be prevented, though not sure how best (perhaps simply by telling in the documentation what you said above with the warning that based on window size they might be hidden).. ",
    "josmad": "Sorry completely forgot about this. I can try creating an example today/tomorrow.\nWill update.. ",
    "robertomoutinho": "Thank you.\nUsing MacPass 0.7.4 (20180711080712-continuous) with MacPassHTTP Continuous https://github.com/MacPass/MacPassHTTP/commit/4d423f8c514e18cc1eff67833aaaf13ed8c71013 worked.\nWill wait for the stable release (0.3.1) to update.\nThank you for your time and for MacPass.\n. ",
    "Neo23x0": "Ah, I used the \"continuous\" version https://github.com/MacPass/MacPass/releases/tag/continuous\nRestarted the App and suddenly macOS told me that it needed permissions:\n\nThat didn't happen the first time that I closed and restarted the App. \n\nAfter re-allowing the App in the Security & Privacy > Privacy > Accessibility section, the global auto-type works again as expected. \n. ",
    "alexjyong": "I haven't. I'll check that out.. Right next to the textbox containing the password. I've seen this on\nseveral web apps.\nOn Mon, Nov 12, 2018, 6:31 AM Michael Starke <notifications@github.com\nwrote:\n\nWhere do you think the button should live? In the toolbar? There's already\na context menu that holds that action. Additionally you can just select the\nentry, right click and then use copy password.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/MacPass/MacPass/issues/832#issuecomment-437847353,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFNhVLybvY_8sFe1dVvw9FXrnWiAnp6Mks5uuVwTgaJpZM4W61k4\n.\n. \n",
    "sogood2know": "It's great to hear, that you plan a readonly/edit behaviour. I always fear changing entries by accident when working at a fast pace. Once the cursor unintentionally was set in the password field while I was typing a search term, when I realized overwriting the password. No big deal because of the undo-function, but anyway a potential risk losing data.\nIn iOS Apps (i.e. kypass) readonly is set by default while tapping on the passphrase copies it to the clipboard. Nice feature for using keepass data \u2013\u00a0but eventually less comfortable to edit. I hope you'll find a good compromise. Perhaps copying is field specific, while an \"edit\" button opens the entire dataset for editing.. ",
    "pmhausen": "MacPass will open new files in tabs if the setting in System Preferences -> Dock is set to \"Always\". Unfortunately I don't want all applications to use tabs by default, only particular ones. Any chance you might reconsider this?\nKind regards,\nPatrick. Perfect! Thanks! :). As far as I know - and the linked Apple support document states the same - this only applies to menu commands. I could not find a menu entry for \"copy password to clipboard\" in MacPass ...\nKind regards,\nPatrick. It works if none of the intermediate directory names contains spaces. It doesn't in 0.7.4 but did in 0.7.3 when there are spaces in the names.\nKind regards, blazingly fast reaction! ;)\nPatrick\n. I would be perfectly happy if inserting %20 manually into the URL in MacPass would work ... IIRC KeepassXC needed this, too. If this helps to simplify your code?. ",
    "brampat": "+1 Awesome response time. ",
    "TofPlay": "@mstarke thanks for your reply \n\nDrag and Drop works only for single entries. So you can move them but only one by one. \n\nOk \ud83d\ude42\n\nAdding support for multiple selected entries is on the roadmap.\n\nExcellent \ud83d\udc4d \ud83d\ude42. ",
    "Sh4pe": "Okay, I\u2018ll give it a try. I\u2019m not yet sure how much time I can put into this, but I\u2019lol take a closer look \ud83d\ude42. ",
    "lambdaupb": "Thanks! That's perfekt.. whoops, cac974a30e4ccabdc6a4681fb00671fc3caca1d6 seems to be a related change.\nJust need a new continuous build release.. ",
    "Niko-CZ": "Most probably opened too much GitHub branches for Keepass)\nFor MacPass items with URL \"cmd://\" are working fine! Custom URL handler is taking the control and forwarding to related application.\nThank you for reply and sorry for disturbing.. ",
    "petri": "Thanks. It is quite a hassle to check out the code, set up and use Xcode and XLIFF tool for someone who just wants to contribute translations. Those steps rule out a lot (most) of potential translations. To attract translators and make it easier, how about using a translation service such as https://poeditor.com or https://www.transifex.com ? They offer free service for Open Source projects.. I've completed the Finnish translation in Lokalise to quite a high degree. So it could be used. I did not see a download button anywhere to try it out myself. I also tried building MacPass in XCode. Run into what I think is a dependency error; some necessary libraries MacPass uses are probably missing.\nHowever I am not sure whether the UI gives access to strings that should NOT be localized... ? For example should %#@characters@ or None be localized? . I cannot download the translations I added. I even installed the cli tool but seems I have no sufficient permissions. Can you please give my Lokalise account proper rights to download the translation so I can test it & make a PR.. ",
    "astingengo": "The + button just add the Window Title but I can't edit it. Sorry and thank you.. ",
    "ira-bv": "I would appreciate a paragraph on the wiki for the documentation of the merge feature. I sync the files between locations with NextCloud (a self-hosted FOSS alternative to Dropbox) and due to some problem the files got out of sync, so I have now a few new or updated entries on two different DB files which are 99% the same on the whole. I hoped the merge feature would basically open the other kdbx file, and merge in only the delta, and use the timestamps to pick the right renewed password. however as far as I can tell, it does not do anything, doesn't even ask me for the passphrase of the other kdbx. What Am I missing? Must I write out the DB in unecrypted XML before I'm able to do an import? if so, please document it.\nI also managed to open the kdbx files in multiple macpass tabs, but I saw no way to import the newer entries automatically. only by manually comparing each group (I have many) I'll find new keys, and even then, detecting password changes will be hard.. @mstarke tried that, looks like it did work, but somehow I missed it. Future feature idea: pop a window indicating success or fail, and list of additions and changes?. ",
    "droloff": "@mstarke I use the german localised version and there its called \"Ablage -> Synchronisieren\" - translated \"File -> Synchronize\" (just fixed my typo)\nI use a local version of the database to use it offline, or better with no connection to dropbox. And i have no idea what happens when two clients modify the local dropbox copy on record level and then reconnect to dropbox.\nOf cause you can open File A and merge B - after that open B and merge A. And so you have all new entries in both copies - but a two way sync would be a great feature for the user experience.\n . ",
    "mfriess2": "Cool, thanks and looking forward to it!. ",
    "mianos": "This seems to have come back, the continuous build now has black on grey again.. ",
    "takkk": "not anymore ;-)\ni'm waiting for the release, too. looking forward getting the fixes. thank you!. ",
    "carlos-sarmiento": "Any update on this? I'm having issues using my shared database because of #788 which was fixed in 0.7.4. ",
    "pchaussalet": "@mstarke any update on that contribution?. ",
    "vhschlenker": "Thank you for taking the time and looking through my code.\nAfter taking a closer look at the issue and examining the Human Interface Guidelines  I choose to remove the color for the button. That seems to be the preferred style.\nRegarding the topic of a single location, I discovered that you have all delegates in one folder, maybe the makeItemForIdentifier method could go there too with the methods to create the three types of buttons while the Controller itself has something like a map with the entries? I'll be looking into that.. I played a bit with the idea of a separate delegate, but I hit a road block while comparing it to the existing toolbar delegate.\nThe problem was how to correctly use and/or implement the actions/selectors, because I had always problems with the target set to \"self\" which was seen as the delegate and not the controller where the method from the selector was. Maybe you have a better idea?\nAnyway, extracting the creation to a helper class was a good idea, it looks far better. I would even go so far an assume that from a lines of code perspective, there is not much more to save with a operate delegate.. I hoped you ignored that \ud83d\ude04 .\nBut yeah, you are right that should be there.\nSo I looked a bit around, but I did not really found a way outside of manually creating the entries in the respective files (Localizable.strings).\nDo you use any form of tool?. So I used the localized strings for the labels and the customization labels and translated them to German, too.\nFor simplicity, I choose to use the same ones for the actual label and the customization label, because the meaning is pretty much the same.\nOne thing to consider would be to merge strings like \"COPY_PASSWORD\" and \"TOUCHBAR_COPY_PASSWORD\" since they mean the same. I did not merge them because the comment would need to be rewritten.. Sure, thanks for pointing that out. I somehow thought of it as a name.\nAlso, I made adjustments to the English translation as there is a favor to capitalize the second word.\nOne thing I noticed while going through the translations \"CHOOSE_FILE_BUTTON_TITLE\" does not seem to be existing in the translated strings?\nLooking at the issue #614 the last thing to do is highlight the \"show password\" button if the option is active. Currently, I can change its title at runtime, but I can not set it to be highlighted yet. Gist for this problem is here.. It's not the best solution, but the only one I found to be working.\nAnother Problem I found is that the touchbar buttons in the DocumentWindow getting to big with the long strings and so a few of the actions drop of.\nOn one hand one could just add them though editing the touchbar, on the other hand I could replace the edit button with this icon and the two copy buttons with a combination of an copy icon and the field and the autotype button could be replaced with the \"MPIconKeyboard\" icon. What do you think from a user experience view point?. ",
    "LeaveAirykson": "i started to use tags too for that purpose. Because almost half of the sites we use at work have dynamic or bad page titles.\nJust out of curiosity without judging: for what reason does macpass not check the url but only the page title?. ",
    "nalt": "@mstarke do you know of a favicon service that is dependable and has an open API?. ",
    "friedrichweise": "Implementing the behaviour by disallowing empty selections seems to be the proper solution. Thanks for the feedback.. ",
    "mouzzi": "~~~~\nSent with GitHawk. ",
    "sniesel": "Yes, is this only a Windows related problem or is the Mac software also affected?\nhttps://www.theregister.co.uk/2019/02/20/password_managers_security_bugs/\nhttps://www.golem.de/news/studie-passwortmanager-hinterlassen-passwoerter-im-arbeitsspeicher-1902-139537.html\nhttps://github.com/keepassxreboot/keepassxc/pull/2732. ",
    "sanderaarts": "I just noticed it works on some dbs but not all. I have two dbs, both on the same server. I have full access one that does show the 'edited' string and read/write access on the one that doesn't.\nAs far as I  remember it used to work on both. And I would expect that read/write access should be enough for this feature to work.. macOS: 10.14.3\nVersion 0.7.4\n2 dbs on same server, connected over smb:\ndb1.kdbx (read/write access, unlocking with keyfile): no edited state is shown\ndb2.kdbx (full access, db created by myself, unlocking with password): edited state is shown\nI've also created another db on the same server to test whether the type of unlocking makes a difference, but that doesn't seem to be the case:\ntest.kdbx (full access, unlocking with same keyfile): edited state is shown\n. ",
    "nicoa": "Since the PR author doesn't react I'll comment this. Eintr\u00e4ge would be the correct pluralised version. Singular is \"Eintrag\", \"Eintrage\" is neither plural nor singular and should be changed to one of them.. "
}