{
    "myell0w": "thanks for that, already merged! \nRegarding the SynthesizeSingleton-Warning: I was thinking about that, but just to make shure I understand that correctly: If MTStatusBarOverlay is used as intended (as a static library) that shouldn't make any problems, shouldn't it? But you are right, I guess most people using it will just copy the files over to there projects ...\n. done, thanks again!\n. done\n. Does anybody have an idea of how to solve this problem?\nI can set the overlay-size to the whole UIScreen-Bounds and only show stuff in the portion covering the status bar, but then no touches are transferred to the original targets because MTStatusBarOverlay consumes all the touches. When I set userInteractionEnabled to NO, no touches receive MTStatusBarOverlay. I somehow want to receive the touches on MTStatusBarOverlay and also forward them to the original target, w/o modifying/complicating the way the developer uses/integrates MTStatusBarOverlay in his own app (e.g. overriding sendEvent in the mainWindow).\n. thanks, I already thought about that too. Unfortunately I don't have much time at the moment to work on this, I would be very happy if you could add this functionality and send me a pull request.\n. Are you still experiencing this issue? I can't really reproduce it, maybe it's gone since then.\n. could you provide additional information (Crash Log, Setup, iOS version, ...), it doesn't crash if I copy your code into my sample project, it runs w/o problems.\nThanks!\n. I turned \"Stop on Objective-C exceptions\" on and it still doens't crash, could you upload another sample project with the latest version of MTStatusBarOverlay where this happens? By the way, thanks for testing things out!\n. you're right, thanks for pointing out. In my use-cases immediateMessages weren't supposed to be sent that frequently one after another. will fix that soon.\n. Fixed with Commit 85f77a5650bd867e0f8090f1005e3f4bbd2325dc\nImmediate Messages now won't get removed from the queue if they are already in it.\n. Added a property canRemoveImmediateMessagesFromQueue so that you can specify whether all immediate messages stay in the queue (and therefore get displayed - kinda like 'important' messages) or whether a new posted immediate message clears all messages in the queue\n. this code isn't used anymore in the newest version, should not happen anymore!\n. are you using the latest version? this bug should have been fixed with commit 0771b9f4c3327044568e\n@coneybeare: would be nice if you could share you implementation with custom background etc. with the rest of us\n. Merged, thanks.\n. This issue was finally fixed in f908a89c5f7108327120c103ee1ee09abc67a4b9, thank to @gekitz !\n. Thanks for pointing this out, fixed with commit 5a980fa32714ef3f0263. And thanks for the compliment - always appreciated :)\n. Thanks, merged. I currently also don't have much time, if I will find more time I will try to fix the rotation-bug.\n. Thanks for reporting, fixed with Commit 4399fe42ac3a3f857a21 .\nI introduced a new Macro IsIphoneEmulationMode to check that specific case.\n. This can easily be accomplished with current featureset. You can set a custom background image by setting property defaultStatusBarImage/defaultStatusBarImageShrinked to an image that suits your needs. Alternatively if you just need a solid background you can change the background-color of property statusBarBackgroundImageView. Also have a look at the top of the .m - file, there is a customization-section where you can change different colors easily.\n. Merged, thanks :)\n. Thanks again! I can't confirm your difference between dot- and parenthesis-notation or am I missing something?\nThe following works perfectly without crashing:\nNSString *string = nil;\nNSLog(@\"Length: %d\", string.length);\nNSLog(@\"Length: %d\", [string length]);\nAfaik dot notation is just syntactic sugar and leads exactly to the same result as parenthesis notation.\n. Of course you're right, fixed with Commit 6169e0836e92c83e6387b88dbe57e87ba4c3e538\nThanks!\n. That would be nice, but is currently not on my todo-list, anyone else having time :) ?\n. Thanks for that, but unfortunately this won't work because the selector updateUIForMessageType:duration: only calls hide when messageType == MTMessageTypeFinish. Will fix that when I'm back at a computer (which means in a few days :) )\n. Fixed it and merged you pull request, thanks!\n. This should be fixed now.\n. Thanks for noting, will add sth. to the project!\n. vguerci sent me a pull request, I hope this is fixed with commit 9112d00bf37f0d7e1bfa. Please reopen the issue, if it is not fixed! Thanks for reporting.\n. Thanks for that, merged it!\nRegarding the gdbinit-file: do I just have to put this file there or do I have to config something?\n. Thanks, I added your fix.\n. That's unfortunately not working in Landscape mode - I just tested it and wanted to merge the pull-request. Because of the current situation (App Rejections) I currently won't investigate in this issue. Thank's anyway, it works great in portrait-mode, so if anyone uses MTStatusBarOverlay just in portrait mode he can apply your commits!\n. Merged, thank you for participating!\n. you can just provide your own image instead of the encoded one. The images I use are taken directly from UIKit, extracted with the great UIKit-Artwork Extractor from 0xced: https://github.com/0xced/UIKit-Artwork-Extractor\n. I'm currently on vacation, will look into it when I'm back. Let me know if you found a solution in the meantime.\n. This should be fixed with commit c5e6436020e347772fde, at least for my test case. Please report if there is still a problem\n. Thanks, merged it!\n. I already noticed this but I am not sure what to do. I believe it's a bug i iOS 5 or the behaviour of UIActivityIndicatorView changed, I have to look at the iOS 5 docs. Anybody an idea?\n. There seem to be a few posts on the dev forums regarding this issue, but no answer yet. Let's hope it's a bug and gets fixed soon, otherwise we really have to roll our own activityIndicator - I experience this in other places too not related to MTStatusBarOverlay.\n. @GMR42 This solution is so simple that it's already brilliant again :) Not exactly what I was aiming for, but works like a charm as a simple workaround for what still seems like an undocumented behavior (=bug) in iOS 5. Will push this soon, including a conversion to ARC. Thanks a lot!\n. I don't plan on maintaining two different code-bases and I'm always on the side of new technology if it makes coding easier. Remember that you can mix and match ARC and non-ARC code without problems in your App, so this shouldn't be an issue (as long as you use Xcode 4.2 which is now out of beta).\nAm 13.10.2011 um 17:56 schrieb Matt Coneybeare:\n\nPlease make any conversion to ARC as a separate branch.\nOn Oct 13, 2011, at 11:50 AM, Matthias Tretterreply@reply.github.com wrote:\n\n@GMR42 This solution is so simple that it's already brilliant again :) Not exactly what I was aiming for, but works like a charm as a simple workaround for what still seems like an undocumented behavior (=bug) in iOS 5. Will push this soon, including a conversion to ARC. Thanks a lot!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/myell0w/MTStatusBarOverlay/issues/34#issuecomment-2396267\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/myell0w/MTStatusBarOverlay/issues/34#issuecomment-2396328\n. Thanks for reporting. Could you provide me with a minimal code snippet that shows this issue?\n\nAm 11.10.2011 um 15:58 schrieb haemi:\n\nSometimes if a \"hide\" comes pretty close to previous status message, the status message appears for a short time, then it's hidden (until now, everything as expected). After that, the previously shown status message is shown again and does not disappear again.\ncode to display:\n[[MTStatusBarOverlay sharedInstance] postImmediateMessage:message animated:YES];\ncode to hide:\n[[MTStatusBarOverlay sharedInstance] hide];\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/myell0w/MTStatusBarOverlay/issues/35\n. @coneybeare thanks for pointing to the solution. You have to link your target to the ARC-runtime under iOS 4, which can bet done by adding -fobjc-arc to \"other linker flags\".\n. @vguerci It's all in there\n. np :)\n. Hello Sarah!\n\nSorry for not responding for that long, but I'm pretty busy working on some stuff. I will need to take some time to look into this before I merge it, but I promise I will do :)\nThanks for contributing to my projects, always appreciated!\ncheers Matthias\n. Hy!\nThank you very much for your pull request. Is it possible (or in other words: are you willing to) re-send this pull request starting from the current version? I changed quite a few things style-wise (e.g. removed all iVars etc.) and fixed a critical bug recently, and I would rather not re-introduce the risk of re-introducing bugs. I would love to see this merged but I currently can't promise to find the time anytime soon to go through your pull request and change everything to match the newest version, so I would be more than happy if you could re-send it starting from the current HEAD.\nPlease let me know if you are willing to do so,\ncheers Matthias\n. any updates on this pull request? Would love to see this merged.\n. Can you provide sample code what you did to get this error?\nAre you on the latest commit?\n\ncheers Matthias\nAm 24.12.2011 um 13:27 schrieb Lucas Correa:\n\nHello, I really liked your project, more to test the example shown in git an error occurs. iOS5\n[self.historyTableView insertRowsAtIndexPaths: [NSArray arrayWithObject: newHistoryMessageIndexPath] withRowAnimation: UITableViewRowAnimationFade];\nAssertion failure in -[_UITableViewUpdateSupport _computeRowUpdates], /SourceCache/UIKit_Sim/UIKit-\n1912.3/UITableViewSupport.m:386\nTerminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Invalid table view update.  The application has requested an update to the table view that is inconsistent with the state provided by the data source.\nThank you.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/myell0w/MTStatusBarOverlay/issues/41\n. @biosli you were right, I slightly changed the logic of the history so the calculation wasn't right anymore, thanks for spotting!\n. I don't know for sure, but I suspect it depends on the reviewer, after all they are human beings too ;) kinda like a lottery, there are still apps getting approved using MTStatusBarOverlay while others get rejected.\n. the new Twitter app uses a similar overlay that Apple can't possibly have overlooked, it's really like a lottery game - unfortunately.\n. Thanks for reporting, should now be fixed.\n. Thank you, and sorry it took me so long to merge this pull request!\n. if you use this code directly the progress jumps to 1.0 before you can even notice it, the progress is meant to be set from some time-consuming method like a network request because the UI isn't updated when postMessage is called, but rather directly when the progress is set.\n. Thanks for reporting! Could you send me a quick pull-request fixing this issue?\n. Thank you for you effort, but I don't have interest in adding iOS 3.x support to MTStatusBarOverlay since it's already 2 major versions behind the current version.\n. Thanks :)\n. Hey! \nThank you for your contribution, looks good. I would like to merge this in, could you add the various forms of post(Immediate)InfoMessage s.t. it is similar to error/success messages? That means the different variants with various number of parameters that you have to specify.\nThanks!\n. That's not possible with MTStatusBarOverlay and not the design goal of it, but should be fairly easy to create on your own.\n. Thanks a lot, looks great!\n. Wow, thank you for your work and the amount of changes. I did at quick test and it looks very good overall, but I found a few bugs, so I'm afraid it will take me quite some time to do a detailed review and merge this in (probably partly), but I will do - hopefully soon! I can see what you're trying to achieve with the parameter \"key\", but I don't like that it complicates the API so I think I won't merge this part, but rather use the message itself as the key. That's not 100 % unique and there might be situations where this is a problem, but I still prefer it over the complicated API. Maybe I will find an elegant way to offer at least a solution to specify a custom key.\n. Sorry for the delay, I've pushed a new tag 0.9.1\n. Thanks, but no thanks.\n. Thanks!\n. Thanks!\n. Thanks!\n. \n",
    "steipete": "Thanks!\nWell, i guess many people will just copy the two files instead of having another static lib. (for two files copying is faster than having another xcode project with own settings, etc)\n. ",
    "vguerci": "Ah!  Tried first userInteractionEnabled...\nThen looked into issues, great that I found this one, that enlighted me, thanks :)\nI think I've got a pretty simple solution, not the best, but working.\nJust adjust the overlay height with the detail view height when showing/hiding it in\n- (void)setDetailViewHidden:(BOOL)hidden animated:(BOOL)animated\n(Who wants to tap on the 10px margin on sides anyway...)\n. That is just a way to put a global breakpoint across projects. ~/.gdbinit is the gdb configuration which is read by Xcode when debugging, it is a general tip not specially related to your statusbaroverlay, that way you'll catch any exception throwed before it is handled (or not), making debugging much easier.\n. @myell0w may I suggest to edit README to point that, since apparently -fobjc-arc just set on MTStatusOverlay.m is not enough. (has to be in other linked flags, otherwise that builds, but crash on iOS4)\n. @myell0w ah my bad, I missed the introduction, was expecting that point on step 3. thanks :)\n. ",
    "sphilipakis": "Actually the bug persists, it happens during the status show / hide animations. not only keys events are eaten but most of the touch events are too. stealing the firstResponder seems to be the right title for this issue :(\nwill test adding UIViewAnimationOptionAllowUserInteraction to the animation options and get back here with the results of my experiements :)\n. ",
    "DrBeak1": "I'm having this issue too - I couldn't figure things out until I finally contacted Apple support and they suggested I look for places where my key window is being taken over by another window -- MTStatusBarOverlay is a UIWindow class, so I'm guessing if you show a text input in your original key window, launch another window and make it key - UIResponder will now not work for your previous window unless you reset it to key ... does that make sense?\nI should also note that I have not been able to reproduce this issue -- I just have hundreds of users emailing me about the problem.\n. Why was this closed - did you find another solution? This is exactly the issue I'm still having. \n. thanks @adamdahan --- at this time I have no use whatsoever for the user to interact with the overlay, so wouldn't adding this to MTStatusBarOverlay work fine:\nruby\n-(BOOL)isKeyWindow\n{\n    return NO;\n}\n... ????\n. ",
    "yuklai": "I've been hitting this issue too. I found that whenever I can't type, the status bar overlay window object have become the key window. \n(lldb) po [[UIApplication sharedApplication] keyWindow]\n    $0 = 0x13057ca0 >\nMy solution is to add the following code to app delegate. This way whenever the keyboard is shown the main window is forced to be the key window.\n```\n[[NSNotificationCenter defaultCenter] addObserverForName:UIKeyboardWillShowNotification object:nil queue:[NSOperationQueue mainQueue] usingBlock:^(NSNotification *note) {\n[self.window makeKeyAndVisible];\n\n}];\n```\nHowever, I'm not sure if this would cause other side effects. \n. ",
    "krasnyk": "Crashes for me at line 687 while trying to invoke [self.messageQueue removeLastObject]. The reason is:\n *** -[NSMutableArray removeObjectAtIndex:]: index 0 beyond bounds for empty array.\nWhen I don't have switched on \"Stop on Objective-C exceptions\" the above exception is caught and ignored by CoreAnimation.\nThe stack trace is as follows:\n0  0x01a5b5a8 in objc_exception_throw\n1  0x018ffadf in -[**NSArrayM removeObjectAtIndex:]\n2  0x018fbbf7 in -[__NSArrayM removeLastObject]\n3  0x0011cf75 in __-[MTStatusBarOverlay showNextMessage]_block_invoke_4 at MTStatusBarOverlay.m:687\n4  0x0076b665 in -[UIViewAnimationState sendDelegateAnimationDidStop:finished:]\n5  0x0076b4f7 in -[UIViewAnimationState animationDidStop:finished:]\n6  0x011566cb in run_animation_callbacks\n7  0x01156589 in CA::timer_callback\n8  0x018e7fe3 in __CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION**\n9  0x018e9594 in __CFRunLoopDoTimer\n10 0x01845cc9 in __CFRunLoopRun\n11 0x01845240 in CFRunLoopRunSpecific\n12 0x01845161 in CFRunLoopRunInMode\n13 0x0211c268 in GSEventRunModal\n14 0x0211c32d in GSEventRun\n15 0x0074942e in UIApplicationMain\n16 0x000020ce in main at main.m:23\n. Could not reproduce in latest version (b2969135c24965a25da921ede03c84e176c842db)\n. Seems to be fixed in b2969135c24965a25da921ede03c84e176c842db\n. Seems to work in the latest version I tested (b2969135c24965a25da921ede03c84e176c842db)\n. Seems to work in latest version. I tested b2969135c24965a25da921ede03c84e176c842db.\n. ",
    "coneybeare": "I have also seen this, but it is sporadic. In my implementation, I have a custom background, and it makes it easier to spot that the frames origin, and perhaps the size is off when this happens.\n. Ya, this is a big issue. I delay mine right up until needed in my app and it still turns out horrible when the app is launched in landscape.\n. After trying to solve this the right way all day, I finally settled on just a hack that seems to work. If you forcefully set the orientation to portrait before the MTStatusBarOverlay initWithFrame: call, then set it back after it works. \n- (id)initWithFrame:(CGRect)frame {\n    UIInterfaceOrientation orient = [[UIApplication sharedApplication] statusBarOrientation];\n    if ((self = [super initWithFrame:frame])) {\n        [[UIApplication sharedApplication] setStatusBarOrientation:UIInterfaceOrientationPortrait animated:NO];\n        \u2026\n        \u2026\n        \u2026\n        [[UIApplication sharedApplication] setStatusBarOrientation:orient animated:NO];\n    }\n    return self;\n}\nThere is no visual glitch of the status bar or anything, but it still feels wrong.\n. You are right, i was mixing up ruby and obj-c in my head again.\n. It appears that a minimum size has been set, but I cannot find any documentation to back it up\u2026 I will keep searching. We might have to roll our own spinner using Core Animation\n. I have had a post on the apple dev forums for awhile now but no responses. Either it is something we are doing specifically to cause this to happen, or it is an obscure bug that doesn't affect many people. What do you want to do?\n https://devforums.apple.com/message/516516\n. I made a quick sample project to try to see what we could do to cause the spinner to change sizes but am coming up short. Here it is in case you want to give it a shot: http://cloud.coneybeare.net/9ds2\n. At least it isn't outside of the bounds. It certainly doesn't look as good as a 14x14 one, but I can live with it.\n. Please make any conversion to ARC as a separate branch.\nOn Oct 13, 2011, at 11:50 AM, Matthias Tretterreply@reply.github.com wrote:\n\n@GMR42 This solution is so simple that it's already brilliant again :) Not exactly what I was aiming for, but works like a charm as a simple workaround for what still seems like an undocumented behavior (=bug) in iOS 5. Will push this soon, including a conversion to ARC. Thanks a lot!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/myell0w/MTStatusBarOverlay/issues/34#issuecomment-2396267\n. @myell0w perhaps you can add to the readme how to integrate into a non-ARC project. I have added the -fobjc-arc compiler flag to the subproject compile sources entry ( http://cloud.coneybeare.net/BLP0 )  but I am still crashing with dyld: Symbol not found: _objc_retain\n\nEDIT: Nevermind, I figured out that the -fobjc-arc flag has to be set on the target, not the mainproject, subproject, subproject target or the subproject file\n. Here is how to do it: https://github.com/myell0w/MTStatusBarOverlay/issues/34#issuecomment-2548375\n. ",
    "grgcombs": "Yep, on an iPad there's a 50% chance the status bar overlay will appear in the incorrect device orientation.  I've also seen it where the bar is horizontal, but the text messages partially appear vertical within it (only 2 or 3 characters will show, vertically).\nUnfortunately, I can't get this to reproduce on the simulator and it seems to happen sporadically on the device.  I wonder if this has to do with it being face-up (makes it difficult to determine proper orientation?)\n. The fix for me was to move the first call that instantiates the MTStatusBarOverlay until after my view controllers are up and running in the UIWindow. ... If you instantiate the statusBarOverlay too soon, it basically get's tangled up in UIWindow's weird-ass orientation conversions ... UIWindow actually runs and draws everything assuming it's in portrait, even on the iPad ... it then transforms the orientation and drawing for the view controllers that attach to it, making them appear to be the correct side up, even though it's still handling it's own business in portrait only.... good times.\n. If I remember, it was my fault ... I just changed where the shared instance gets initiated ... either moving it earlier or later in the startup sequence.\n. ",
    "bluesuedesw": "Can't use this nifty tool in the iPad version of my app due to this issue. \nIf it is launched in LandscapeLeft, not only will the status bar overly not work as intended, but any posted messages will black out the entire screen with a super large progress indicator on the sim and device w/iOS 4.3. \n. ",
    "benjaminscott": "Could have sworn it went away for me - obviously I'd missed a postFinishMessage happening!\n. ",
    "nhusher": "Note: [MTStatusBarOverlay sharedInstance] will call the initialize function on whatever thread the method is first executed on. If your first call to sharedInstance is in a background thread, it will fail.\n. I added this with a category:\n```\n+(MTStatusBarOverlay *)threadSafeSharedInstance {\n  [self performSelectorOnMainThread:@selector(sharedInstance) withObject:nil waitUntilDone:YES];\nreturn [self sharedInstance];\n}\n```\nSeems to do the trick.\n. ",
    "newacct": "[[UIView class] respondsToSelector:@selector(animateWithDuration:animations:completion:)] can be written as [UIView respondsToSelector:@selector(animateWithDuration:animations:completion:)]\n. ",
    "GMR42": "Hi,\nNot exactly what you were looking for but something along the lines of \n[activityIndicatorView.layer setValue:[NSNumber numberWithFloat:0.8f] forKeyPath:@\"transform.scale\"];\nmight do the trick.\nHTH\nGareth\n. Matthias,\nNo problem - glad I could help.\nGareth\nOn 13 October 2011 16:50, Matthias Tretter \nreply@reply.github.comwrote:\n\n@GMR42 This solution is so simple that it's already brilliant again :) Not\nexactly what I was aiming for, but works like a charm as a simple workaround\nfor what still seems like an undocumented behavior (=bug) in iOS 5. Will\npush this soon, including a conversion to ARC. Thanks a lot!\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/myell0w/MTStatusBarOverlay/issues/34#issuecomment-2396267\n. \n",
    "qzc77": "dyld: Symbol not found: _objc_retain\n. @myell0w how to link my target to arc -runtime?\nadd libarc.dylib?\n. you have to add \"-fobjc-arc\" to \"Other Linker Flags\" of your project\nvery goog!!\n. ",
    "rileytestut": "Yes I'll be happy to do that :)\n. I still plan to finish it, but I've put it on hold to work on some of my projects. My implementation was not easy to port over, so I'd have to reimplement everything to make it fit the latest version.\nBut I'll get it done :)\n. ",
    "kkiran33": "I have integrated this nice class into my app but also faced with same issue and it came just using code given in ur description..\ncrash at this line\n[self.historyTableView insertRowsAtIndexPaths: [NSArray arrayWithObject: newHistoryMessageIndexPath] withRowAnimation\n. I have disabled history tableview to avoid the crash and it workded.\n. thanks. guys.\n. ",
    "zemariamm": "Same here (on Simulator - iOS 4.2 ) (really nice lib!)\nMy source code is the same as the example provided\n. ",
    "xuyunan": "// same issue when use UIStatusBarStyleDefault , not issue when use UIStatusBarStyleBlackOpaque\n[UIApplication sharedApplication].statusBarStyle = UIStatusBarStyleDefault;  \n```\nMTStatusBarOverlay *statusBar = [MTStatusBarOverlay sharedInstance];\n[statusBar postMessage:@\"11111111111111\" animated:YES];\n[statusBar postMessage:@\"22222222222222\" animated:YES];\n[statusBar postMessage:@\"33333333333333\" animated:YES];\n[statusBar postMessage:@\"44444444444444\" animated:YES];\n[statusBar postMessage:@\"55555555555555\" animated:YES];\n```\n. I care this issue very much\n. ",
    "biosli": "I think this crash by the  messageHistory count error.\nI changed the code as following:\n- (void)addMessageToHistory:(NSString *)message {\n  //....\nif (self.historyEnabled) {\n      NSIndexPath *newHistoryMessageIndexPath =\n              [NSIndexPath indexPathForRow: (self.messageHistory.count - 1) //Here sub 1~~~\n                                 inSection:0];\n [self setDetailViewHidden:self.detailViewHidden animated:YES];\n\n//....\n  }\n@myell0w do you mine that?\n. ",
    "bejo": "+1 Base CRM app was rejected a few days ago due to the HIG violation :(\n. It was only a temporal status bar :(\n. I talked about MTStatusBarOverlay with Apple reviewers at WWDC labs in June. They told me not to use it. Moreover, if there's an app in App Store that's using it then it's been just lucky and can be pulled out from App Store at any time.\n. Lottery is the keyword here :]\n. ",
    "arielcamus": "was it a temporal status bar or did you keep it there forever? I just want to show it for some seconds and then I'd like to hide it and show the original status bar again.\n. I know some approved apps using MTStatusBarOverlay. I assume it's safe to use it.\n. ",
    "igz": "Curious if anyone knows why certain apps are rejected for this feature, while others aren't. Viddy gets away with it; maybe it's because they're backed by celebrity $..\n. ",
    "horseshoe7": "has anyone pleaded with Apple to make a definitive decision on this?  Is there a way to ensure I can rely on such a feature?  Is it just a matter of how the status bar overlay looks?  I mean, I can keep the functionality and just get the designer to make it look less like an Apple component?\n. My bad.  I had 2 UIScrollView objects in the view hierarchy and if you don't ensure that one and only one has that property set to YES, then none of them work properly.\nInvalid bug.  Sorry.\n. ",
    "Loceo": "Apps that require location is most definitely going to be rejected since the location-arrow is concealed.\n. ",
    "mdestagnol": "If you take a closer look at the Twitter app, you'll see the notification is not displayed on top of the Status Bar.\nIt hides the Status bar from below, meaning the Status Bar is hidden by the app and the notification comes from the app. Not sure if it changes anything, but worth mentioning it.\n. ",
    "francissevilla": "Im planning to use this but if apple rejects apps using this are there any alternatives to it? \n. ",
    "LarryLee": "good luck to you.\n. ",
    "vinzenzweber": "We had no issues with our app regarding MTStatusBarOverlay, but as others mentioned, the reviewers are just humans and some apps might get rejected.\nbtw I am happy I read about those issues AFTER our app got approved ;)\n. ",
    "Baza207": "I was wondering, for people who got there apps rejected, were you just showing a simple message or more detailed thing like the drop down table? Also did you cover the status bar for long time?\n\"Don\u2019t create a custom status bar. Users depend on the consistency of the system-provided status bar. Although you might hide the status bar in your app, it\u2019s not appropriate to create custom UI that takes its place.\"\nI'm guessing this is the part of HIG that is being used to reject apps, but what if its not being used to emulate the status bar but just show a message for a little while?\nI know there are no correct or incorrect answers, just wanted to know people thoughts. :-)\n. ",
    "bmoweb": "+1 Base CRM app was rejected a few days ago due to the HIG violation :(\n. @thetylerhayes I think you are absolutely right about this, I liked the result using MTStatusBarOverlay, but I'll remove my app is for corporate use anyway. :-/\n. ",
    "thetylerhayes": "@bmoweb I think this is always going to be an issue unless Apple says it's OK to do. My app Slapshot was rejected about a month ago when I tried to do this too. I haven't submitted another release using MTStatusBarOverlay since then but I imagine it's like everyone in this thread has been saying: it really comes down to the reviewer. And I imagine your app's clout too \u2014\u00a0Twitter and Mailbox can get away with this because they're very popular apps that the app store reviewers themselves likely use personally, so they see the value of overtaking the status bar.\n. ",
    "hohl": "My app has been using MTStatusBarOverlay for months. Yesterday an update (poorly it's a critical bug fix) got rejected because of using MTStatusBarOverlay.\n. Yes, they rejected my app because of using this component.\nAm Dienstag, 5. November 2013 schrieb prolificmethods :\n\nDefiantly we would like to know if Apple is rejecting the use of this\ncontrol.. Anybody?\nOn Oct 30, 2013, at 10:09 AM, evertoncunha wrote:\n\nAny updates on this?\n\u2014\nReply to this email directly or view it on GitHub.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/myell0w/MTStatusBarOverlay/issues/43#issuecomment-27753106\n.\n. \n",
    "1b0t": "my App got rejected as well. For a quick fix i moved the statusbaroverlay to the bottom of the screen - that seems to be ok with apple.\nBut this is really not a lasting solution.\nCan you recommend any AppStore-Proof alternatives?\nIt's really too bad. This is a superb project!\n. no. the issue is the concept itself. It conflicts with the HIGs. It has\nnothing to do with iOS7 as well. You are not allowed to cover/overlay the\nStatusBar.\nHIGs:\n\"Don\u2019t create a custom status bar. Users depend on the consistency of the\nsystem-provided status bar. Although\nyou might hide the status bar in your app, it\u2019s not appropriate to create\ncustom UI that takes its place.\"\nThe Problem is that the enforcement on this policy is very lax. Many\npopular apps (like Mailbox or LastFM) are using this. And I know for a fact\nthat some Apps added this exact library with one of their recent updates.\nMy (former iOS6) App got rejected because i used it. I even filed an\nappeal. No chance. I moved the frame to the bottom of the screen for now.\nOn Tue, Jan 28, 2014 at 1:55 PM, ANTStorm notifications@github.com wrote:\n\nGot my app rejected because of MTStatusBar as well. I think the problem is\nwith iOS 7 and the fact, that MTStatusBar doesn't support matching\nbackground color to the current color of the status bar.\nMailbox app is still using the similar functionality and have their app in\nthe App Store, last time updated just few days ago.\nSo the issue is not the concept itself, but how it looks visually.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/myell0w/MTStatusBarOverlay/issues/43#issuecomment-33475551\n.\n. \n",
    "docterd": "Same story here...\n. ",
    "evertoncunha": "Any updates on this?\n. Commit f6e3104 fixed\n. ",
    "abrahamventura": "Defiantly we would like to know if Apple is rejecting the use of this control.. Anybody?\nOn Oct 30, 2013, at 10:09 AM, evertoncunha wrote:\n\nAny updates on this?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "antstorm": "Got my app rejected because of MTStatusBar as well. I think the problem is with iOS 7 and the fact, that MTStatusBar doesn't support matching background color to the current color of the status bar.\nMailbox app is still using the similar functionality and have their app in the App Store, last time updated just few days ago.\nSo the issue is not the concept itself, but how it looks visually.\n. ",
    "misterwell": "I was able to resolve this issue by modifying line 129 of MTStatusBarOverlay.m to:\n```\ndefine kFinishedFontSize   ([[[UIDevice currentDevice] systemVersion] floatValue] >= 5.1f) ? 12.f : 22.f\n```\nFor some reason it appears the font was changed in 5.1 to affect this, but the original size still holds true for versions prior to 5.1, which is why the macro now contains logic to detect this and adjust the font size appropriately.\nI'm not sure if this is the most efficient way to implement this, but at least this is a temporary workaround for people using the library until an official fix is committed.\n. ",
    "mobilehub": "I know the reason now,  the problem is in the \n- (void)setDetailViewHidden:(BOOL)hidden animated:(BOOL)animated {\ny = -(kMaxHistoryTableRowCount - MIN(self.messageHistory.count, kMaxHistoryTableRowCount)) * kHistoryTableRowHeight;\nthe MIN(self.messageHistory.count, kMaxHistoryTableRowCount) are not correct\nshould change to\nuint count = self.messageHistory.count;\nMIN(count, kMaxHistoryTableRowCount)\nI think the macro problem. \nBest Regards\n. ",
    "dwarfland": "no worries \u2014 glad i could help!\n. ",
    "jianfeng": "@myell0w Sent!  :)\n. ",
    "iNiKe": "Please just add this patch, because we use this in projects that still has support for older iOS versions.\nThanks! =)\n. ",
    "saiday": "It's my fault!\nI should done this the way you said! I will fix it soon.\n. ",
    "gemmakbarlow": "Just took a look & this is now fixed; recommend closing this issue! :)\n. ",
    "inamiy": "This feature has moved to more customizable library which works well with current MTStatusBarOverlay.\nhttps://github.com/inamiy/YITimeTracker\nSelf close!\n. ",
    "adamdahan": "@DrBeak1 You can use my comment above to solve the issue for you :) We used it in our app. But to be honest we ended up ditching this library and rolled out our own. So the above comment became obsolete for us but it will work for you.\n. @DrBeak1 Yup that would work fine :)\n. ",
    "ChrisOSX": "I added a bit in - (void)webViewDidFinishLoad:(UIWebView )webview which stalls the webView load until everything is done loading. So with this implemented, no more rapid fire \"Done\" messages. Heres what I used.\n- (void)webViewDidFinishLoad:(UIWebView )webview  {\n\nif (webview.isLoading)\n    return;\n\nNSLog(@\"Done!\" );\n[(PullToRefreshView *)[self.view viewWithTag:998] finishedLoading];\n[overlay postFinishMessage:@\"Done!\" duration:1 animated:YES];\n[UIApplication sharedApplication].networkActivityIndicatorVisible = NO;\n}\n/////\nUPDATE:\nThis method above does not work on 5.0 targeted devices. Any ideas?\n. ",
    "mengxy": "Really need iOS 7 support...\n. ",
    "devinfoley": "+1\n. ",
    "brendand": "Any work being done on this? Right now it's working fine for me, except that I'm using light status bar text, but when the overlay is put up, it changes it to dark. When the overlay dismisses, it doesn't go back to light anymore. No matter how I try to change the status bar style back to light, it won't change.\n. Have you come up with a fix for this?\n. Yes, it seems like the author has abandoned it.\n. ",
    "tonyxiao": "With new OS release coming out it will make MTStatusBarOverlay fairly unusable on most projects. Any idea how to fix this?\n. ",
    "diogobalseiro": "Commit f6e3104 actually fixed this issue for me. Not sure why this issue wasn't updated in any way, can you guys confirm?\n. ",
    "alexsorokoletov": "+1\n. ",
    "yoyokko": "iOS 7 an application is looking for the top most shown window (regarding to it's level) to access it's rootViewController to access methods like 'preferStatusBarHidden'.\nIf the overlay is hidden (not alpha = 0), setting rootViewController to nil is fine.\n. ",
    "ConfusedVorlon": "I got a recursive crash until applying this fix - please do merge it!\nIn my case, I think it was triggered by a simple UIActionSheet\n. ",
    "859988748": "the same happened to me when presenting an ImagePickController. get fixed by delegate.window.\n. ",
    "donholly": "+1 - podspec is out of date and points at 0.9.1 which is out of date and missing some fixes and warnings :)\n. ",
    "ImbellicusAnimo": "Same problem in my app. MTStatusBarOverlay.m\nMethod: (void)setStatusBarBackgroundForStyle:(UIStatusBarStyle)style\n. ",
    "aegerup": "What is the status on this? Im having the same problem.\n. ",
    "siddhantArora": "stretchableImageWithLeftCapWidth:  is depricate replace it with resizableImageWithCapInsets :\n. Use the following : [Fixed]\n// Images used as background when status bar style is Default\n        defaultStatusBarImage_ = [[UIImage imageWithData:MTStatusBarBackgroundImageData(NO)] retain];\n        defaultStatusBarImageShrinked_ = [[UIImage imageWithData:MTStatusBarBackgroundImageData(NO)] retain];\n. ",
    "SquaredTiki": "Also, is this project still maintained?\n. Not at present no. Will either work on a fix soon or move away from using MTStatusBarOverlay as it doesn't seem to be maintained as much anymore.\n. Submitted a pull request which should fix this, see #89. cc/ @brendand \n. @rumbeck Good point, I shall update the pull request.\n. @rumbeck @suhailrashidbhat Corrected that now.\n. ",
    "rumbeck": "You need to account for the native scale when using native bounds, such as:\n[UIScreen mainScreen].nativeBounds.size.width / [UIScreen mainScreen].nativeScale.\n[UIScreen mainScreen].nativeBounds.size.height / [UIScreen mainScreen].nativeScale.\nOtherwise, for iPads, while your location will be correct, your width won't be.\n. You need to account for the native scale when using native bounds, such as:\n[UIScreen mainScreen].nativeBounds.size.width / [UIScreen mainScreen].nativeScale.\n[UIScreen mainScreen].nativeBounds.size.height / [UIScreen mainScreen].nativeScale.\nOtherwise, for iPads, while your location will be correct, your width won't be.\n. ",
    "skumawat": "Hello, When we display message on status bar using MTStatusbaroverlay class then message doesn't display properly in portrait & landscape mode on iOS 9 devices. Its working fine on iOS 8 or lower devices.\n. Hello, When we display message on status bar using MTStatusbaroverlay class then message doesn't display properly in portrait & landscape mode on iOS 9 devices. Its working fine on iOS 8 or lower devices.\n. Any update regarding orientation issue on  iPad IOS 9?\n. When we display message on status bar using MTStatusbaroverlay class then message doesn't display properly in portrait & landscape mode on iOS 9 devices. Its working fine on iOS 8 or lower devices.\n\n\n\n. Any update regarding above issue?\n. Your provided solution is not  working fine when device orientation will be changed. Could you please provide us perfect solution?\nThanks.\n. ",
    "marianoa": "We are seeing the same issue with iOS 8.3 - @Art-Cube have you been able to find a solution?\nThanks.\n. Thanks for sharing that code. We tried with those changes and we are still seeing the issue. (the issue seems to happen only on the ipad version of the app). \n. ",
    "Art-Cube": "Yes, I found I needed a root view controller as such:\n@interface MTStatusBarViewController : UIViewController\n@end\n@implementation MTStatusBarViewController\n- (BOOL)shouldAutorotate {return YES;}\n- (NSUInteger)supportedInterfaceOrientation {return UIInterfaceOrientationMaskAll;}\n  @end\nand then in bottom of initWithFrame add as such:\n        self.rootViewController = [[[MTStatusBarViewController alloc] init] autorelease];\nRegards,Rob\nDate: Tue, 28 Apr 2015 12:30:51 -0700\nFrom: notifications@github.com\nTo: MTStatusBarOverlay@noreply.github.com\nCC: artcube@hotmail.com\nSubject: Re: [MTStatusBarOverlay] 8.3 problem (#94)\nWe are seeing the same issue with iOS 8.3 - @Art-Cube have you been able to find a solution?\nThanks.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi,\nI am using the status bar overlay to add an image to the status bar.  I used this 3rd party code because it handled rotation better than the other overlays I found.  I am not using much else and have hidden most of the other views.\nThat said, I found I needed to add my image view to the root vc and not to the window itself along with having a root vc which is the code I shared with you.\nHope this helps,Rob\nDate: Wed, 29 Apr 2015 12:23:26 -0700\nFrom: notifications@github.com\nTo: MTStatusBarOverlay@noreply.github.com\nCC: artcube@hotmail.com\nSubject: Re: [MTStatusBarOverlay] 8.3 problem (#94)\nThanks for sharing that code. We tried with those changes and we are still seeing the issue. (the issue seems to happen only on the ipad version of the app). \n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "nihilenz": "Hello, please try this change, it helps in my case:\nhttps://github.com/nihilenz/MTStatusBarOverlay/commit/565488e26fdca4b85b594ec6616de4b8fcc8bed1\n. Hello, please try this change, it helps in my case:\nnihilenz@565488e\n. ",
    "pilot34": "@nihilenz it helped, thx!\n. ",
    "Usipov": "@nihilenz\nAlso helped\nThanx!\n. @wmenge \nPlease close the issue\n. ",
    "timrossinfo": "@nihilenz This fix works great if the app is launched in portrait orientation, but appears to break if the app is launched in landscape.\n. ",
    "suhailrashidbhat": ":+1: \nThanks it worked! \n. :+1:  @rumbeck \n. ",
    "xiaoMingChina": "thanks\n. ",
    "Emmo213": "This helped but didn't completely fix my issue. Now the status bar will be shown correctly on iOS 6, 7, and 8, but on iOS 9 it is only shown on the iPad - it doesn't show on the iPod. \n. ",
    "shweta-techjini": "Thanks it helped me!! \n. ",
    "hlung": ":+1: cool! how did you managed to know that using -init: instead of -initWithFrame: will fix the black screen problem??\n. ",
    "shinoys222": "Is this issue fixed ?\n. ",
    "stanislaw": "This worked for me as well! @Slepter, I owe you a :beer: \n. ",
    "fraserscottmorrison": "Please pull this & update pod - thanks!\n. Although, in landscape on the iPad, this results in the bar appearing down the left side of the screen...\n. Message was for @myell0w, but he hasn't updated this library in over a year so I'm not too hopeful...\n. ",
    "Slepter": "Hi. What do you mean under \"pull this & update pod\"? If you are talking\nabout pull my changes into master branch, I can't help you, it's not my\ngithub. If you mean something else, please explain what I gotta do.\nBest regards, Alexander Shumeiko\n2015-10-23 6:07 GMT+03:00 Fraser notifications@github.com:\n\nPlease pull this & update pod - thanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/myell0w/MTStatusBarOverlay/pull/99#issuecomment-150439524\n.\n. \n",
    "rmassink": "This worked for me! Thanks @Slepter \ud83d\udc4d . ",
    "zzzunov": "@westlinkin Hi! Your solution isn't working when device orientation is changed. Can you provide another solution? Thanks.\n. ",
    "westlinkin": "@willingheart This works for iOS 9.0.x, not work for iOS 9.1 and above. I'm working on this.\n. ",
    "SwordJason": "@willingheart Please check this, Test on iOS 8 & iOS 9 iPad, iOS 9.3, it's working.\n. "
}