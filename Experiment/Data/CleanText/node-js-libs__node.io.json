{
    "renatovico": "An interesting thing:\nIf I comment is line, I generate one memory leak\n. ",
    "chriso": "The API is unclear on how to destroy a request..\nFor now, I've put in a check for each destroy (in v0.1.1-17). \nI'll put in a better fix once the final 0.3.1 API is out.\n-Chris\n. Hi Andrea,\nThanks. Firstly, make sure you're using the latest version of node.io (0.2.0-1) - I fixed the \"has no method 'filter'\" error in an earlier release. \nAs for the text method, it's probably a bit ambiguous at this stage, but the text method only grabs text from directly inside that tag, e.g. <h3>Hello <b>World</b></h3> will only return \"Hello\" if you select the H3 and use the item.text method. I have added another method to get around this of course.. use item.fulltext which also grabs the text from inside any children. I've tested this with repubblica.it (code is here).\nI'll update the documentation soon so it's a bit more obvious, but for now the comments in dom.js have a bit more info:\n* Getters:\n *     - innerHTML\n *     - rawtext - returns text immediately inside the selected element\n *     - rawfulltext - same as rawtext, but also includes text inside children / nested elements\n *     - text - rawtext trimmed, BR's replaced with \\n, and entities decoded\n *     - fulltext - rawfulltext trimmed, BR's replaced with \\n, and entities decoded\nThanks again,\nChris\n. I've updated the API. If you scroll down to the DOM selection / traversal section, it should provide some more information.\nLet me know if you have any more trouble.\n-Chris\n. Invalid.\n. node.io exits when either all of the input is consumed, or in the case of input: false, after one cycle of run(). Being asynchronous, node.io has a few ways of determining if run() was completed successfully, namely that either emit(), fail(), or skip() was called - i.e. these can only be called once per run() - any subsequent calls are ignored.\nIf you're scraping multiple pages (I assume from multiple getHtml requests), the correct way would be to have each URL as an element of input, or maybe have keywords as elements of input which you later build the URL from).\nThis example highlights the incorrect and correct way to make multiple requests\nThis is all assuming that node.io exits with OK: Job Complete. If not, it may be a bug. If you run node.io with the -g switch it will log each request that it makes - this may help you figure out what's going on.\nIf you want to send me the code privately (cohara87@gmail.com), I'd be happy to fix it for you.\n-Chris\n. Scraping examples are a bit scarce at the moment. I'm in the process of building the wiki https://github.com/chriso/node.io/wiki which will have more in depth tutorials and examples soon.\n. Make sure you're using the newest version of node.io - I recently fixed a bug where subsequent emit()'s were decrementing the internal counter. The latest version ignores these calls now. \nThe reason I don't issue a warning on calling emit, skip, fail after the thread is complete is because there are times when multiple calls are unavoidable. For example, a thread might timeout (and automatically call fail) from a setTimeout call outside of the main stack. I may issue a warning down the track when using the -g debug switch however.\n. Cron jobs need to have the full path of node.io specified - I think it's /usr/local/bin/node.io or maybe /usr/bin/node.io.\nI'd also recommend wrapping the command with nohup and & to make node.io more persistent (see: http://en.wikipedia.org/wiki/Nohup). Also you can use &> to redirect both stdout and stderr to import_log\nTry this:\n*/1 * * * * /usr/bin/nohup /usr/local/bin/node.io /home/myuname/code/project/import.js &> /home/myuname/code/project/import_log.log &\nThe other thing you could try is putting the following line into /home/myuname/code/project/import.sh\nnohup node.io import &> import_log.log &\n..and then in your crontab put:\n*/1 * * * * /bin/sh /home/myuname/code/project/import.sh\n. Let me know if it doesn't work\n. Running $ which node.io should give you the full path of node.io\n. Open up the actual node.io file in an editor and change the first line from\n```\n!/usr/bin/env node\n```\n..to:\n```\n!/usr/bin/env /usr/local/bin/node\n```\n..where /usr/local/bin/node is the path to your node app\n. Reinstall node.io with npm install node.io\nDownload this file and save it as helloworld.js, and then in the same directory run node.io -s helloworld\nDoes it output Hello World! ?\n. Hmm very strange. What node version were you going from => to? and do you know which dependencies were playing up? \nSince installation with npm is the only way to install node.io and npm installs all dependencies, there's no point checking whether they are installed or not on each node.io run. It seems like it could be a bug with npm/node..\n. Ah I see - when node.io require()'s the job it throws the same error when the job isn't found and/or when it doesn't compile properly. I've updated the error message to be a bit less ambiguous - thanks for your help.\n. What version of node are you using and what does ls ~/.node_modules say ? \nThe built-in modules from here should be installed to ~/.node_modules. I have a feeling that new versions of node may use ~/.node_libraries instead (I'm using v0.2.6 so can't confirm)..\nIf all else fails, download pagerank.coffee and put it in your cwd.\nHappy scraping!\n. strord is definitely defined in the file - something strange is going on. A reinstall will probably fix it -> reinstall coffee as well.\nnpm install coffee && npm install node.io\nYour pagerank.js file should look like this:\n```\n(function() {\n  var Pagerank, UsageDetails, nodeio, options, usage;\n  var hasProp = Object.prototype.hasOwnProperty, __extends = function(child, parent) {\n    for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; }\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor;\n    child.__super = parent.prototype;\n    return child;\n  }, bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n  usage = 'This module checks a URL\\'s Google pagerank (rate limits apply)\\n\\n   1. To find the pagerank of a URL:\\n       $ echo \"mastercard.com\" | node.io -s pagerank    \\n          => mastercard.com,7';\n  nodeio = require('node.io');\n  options = {\n    timeout: 10,\n    retries: 3\n  };\n  Pagerank = (function() {\n    function Pagerank() {\n      Pagerank.__super.constructor.apply(this, arguments);\n    }\n    extends(Pagerank, nodeio.JobClass);\n    Pagerank.prototype.run = function(input) {\n      var ch, url;\n      url = input;\n      if (url.indexOf('http://') === -1) {\n        url = 'http://' + url;\n      }\n      ch = '6' + GoogleCH(strord('info:' + url));\n      return this.get('http://www.google.com/search?client=navclient-auto&ch=' + ch + '&features=Rank&q=info:' + encodeURIComponent(url), __bind(function(err, data) {\n        var match;\n        if (err != null) {\n          return this.retry();\n        }\n        if (match = data.match(/Rank_1:1:(10|[0-9])/)) {\n          return this.emit(input + ',' + match[1]);\n        } else {\n          return this.emit(input + ',');\n        }\n      }, this));\n    };\n    return Pagerank;\n  })();\n  UsageDetails = (function() {\n    function UsageDetails() {\n      UsageDetails.__super.constructor.apply(this, arguments);\n    }\n    __extends(UsageDetails, nodeio.JobClass);\n    UsageDetails.prototype.input = function() {\n      this.status(usage);\n      return this.exit();\n    };\n    return UsageDetails;\n  })();\n  this[\"class\"] = Pagerank;\n  this.job = {\n    pagerank: new Pagerank(options),\n    help: new UsageDetails()\n  };\n// BEING CODE FOR GENERATING GOOGLE PAGERANK CHECKSUMS\n//----------------------------------------------------------------------------------------------\nfunction zF(a,b) {\n    var z = parseInt(80000000,16);\n    if (z & a) {\n        a = a>>1;\n        a &=~z;\n        a |= 0x40000000;\n        a = a>>(b-1);\n    } else {\n        a = a>>b;\n    }\n    return(a);\n}\nfunction mix(a,b,c) {\n    a-=b; a-=c; a^=(zF(c,13));\n    b-=c; b-=a; b^=(a<<8);\n    c-=a; c-=b; c^=(zF(b,13));\n    a-=b; a-=c; a^=(zF(c,12));\n    b-=c; b-=a; b^=(a<<16);\n    c-=a; c-=b; c^=(zF(b,5));\n    a-=b; a-=c; a^=(zF(c,3));\n    b-=c; b-=a; b^=(a<<10);\n    c-=a; c-=b; c^=(zF(b,15));\n    return (new Array((a),(b),(c)));\n}\nfunction GoogleCH(url,length) {\n    if(arguments.length == 1) length=url.length;\n    var a=0x9E3779B9, b=0x9E3779B9, c=0xE6359A60, k=0, len=length, mx=new Array();\n    while(len>=12) {\n        a+=(url[k+0]+(url[k+1]<<8)+(url[k+2]<<16)+(url[k+3]<<24));\n        b+=(url[k+4]+(url[k+5]<<8)+(url[k+6]<<16)+(url[k+7]<<24));\n        c+=(url[k+8]+(url[k+9]<<8)+(url[k+10]<<16)+(url[k+11]<<24));\n        mx=mix(a,b,c);\n        a=mx[0]; b=mx[1]; c=mx[2];\n        k+=12; len-=12;\n    }\n    c+=length;\n    switch(len) {\n        case 11: c+=url[k+10]<<24;\n        case 10: c+=url[k+9]<<16;\n        case 9:c+=url[k+8]<<8;\n        case 8:b+=(url[k+7]<<24);\n        case 7:b+=(url[k+6]<<16);\n        case 6:b+=(url[k+5]<<8);\n        case 5:b+=(url[k+4]);\n        case 4:a+=(url[k+3]<<24);\n        case 3:a+=(url[k+2]<<16);\n        case 2:a+=(url[k+1]<<8);\n        case 1:a+=(url[k+0]);\n    }\n    mx=mix(a,b,c);\n    if(mx[2]<0) {\n        return(0x100000000+mx[2]);\n    } else {\n        return(mx[2]);\n    }\n}\nfunction strord(string) {\n    var result=new Array();\n    for(i=0;i<string.length;i++){\n        result[i]=string[i].charCodeAt(0);\n    }\n    return(result);\n}\n//----------------------------------------------------------------------------------------------\n;\n}).call(this);\n``\n. Sorry -npm install coffeescript`\nIt's automatically installed with npm install node.io though.\n. Not your fault - it's just an ambiguous npm package name - it's npm install coffee-script. Try that, then run npm install node.io and then run coffee -v && node.io -v - it should say:\nCoffeeScript version 1.0.0\nINFO: v0.2.1-18\nNext try running echo \"mastercard.com\" | node.io -s pagerank - it should say:\nmastercard.com,8\n. Cool - let me know if you need any other help.\n. Hi John, thanks for the feedback. It seems that CoffeeScript inheritance is broken in a recent release - I'll look into it some more when I have time. As for node.io hello failing but node.io hello.coffee working.. have you got any other modules that may be conflicting with the call? When you run node.io <module> it looks for a .js file in the current dir, followed by a .coffee file, then it walks along the included paths (require.paths) looking for a match.\n. Hmm. Throw this in hello.js and run $ node.io -s hello\nvar nodeio = require('node.io');\nexports.job = new nodeio.Job({\n    input: false,\n    run: function () {\n        this.emit('Hello World!');\n    }\n});\nThen add this to hello.coffee and run the same thing\nnodeio = require 'node.io'\nclass Hello extends nodeio.JobClass\n    input: false\n    run: (num) -> @emit 'Hello World!'\n@job = new Hello()\nBoth should output \"Hello World!\"\nNow try running:\nnodeio = require 'node.io'\nclass Double extends nodeio.JobClass\n    input: [0,1,2]\n    run: (num) -> @emit num * 2\nclass Quad extends Double\n    run: (num) -> super num * 2\n@job = new Quad()\nIt should output 0,4,8\nDoes this work? Also, what version of CoffeeScript and Node.JS are you using? coffee -v && node -v\nTrying to require a CoffeeScript from within another .coffee file seems to fail - this definitely wasn't the case a little while ago - I haven't tested it with the latest version of CoffeeScript though..\n. Hi John, I think it's a 0.2.4 issue. I've only tested node.io with >= 0.2.5. Try upgrading to the latest stable and let me know how you go.. All of the tests are passing fine on 0.2.6\n. I'm closing this as resolved. Let me know if you still have issues\n. This has to do with the way npm/node resolves modules. You need to either modify your NODE_PATH to include the global install directory (probably /usr/local/lib) or you need to install node.io in the current working directory where you plan on running code that has require('node.io').\nTry running npm install node.io in the same directory that you're running the hello.js example.\n. if score is '\u2022' then continue should be if score is '&bull;' then continue - the assert() method throws an exception, so wrap it in a try...catch\n. it seems the entity & bull ; (no spaces) is being converted somewhere.. :)\n. another note, failures a fairly common occurrence when scraping large amounts of data - if a thread fails with assert, a 4xx or 5xx, etc, it automatically calls the fail() method if it's defined (see the bottom of this page for more info)\n. You could easily code this in yourself.. Something like this:\nvar seen_records = [];\nexports.job = new nodeio.Job({}, {\n    run: function () {\n        var self = this;\n        this.getHtml(url, function (err, $) {\n            //Handle errors and scrape here..\n            if (seen_records.indexOf(some_field) !== -1) {\n                self.skip();\n            } else {\n                seen_records.push(some_field);\n                self.emit(my_data); \n            }\n        });\n    }\n});\nAnother option is to write to a file and then use the inbuilt duplicates module to remove duplicates:\n$ node.io -s duplicates < input.txt > duplicates_removed.txt\nHappy scraping!\n. I was just looking for the missing parentheses and couldn't find it - didn't realise anyone could edit the wiki. Thanks though!\n. thanks - fixed in the latest release\n. Hey thanks, but I've purposely stayed away from HTTPS for the time being as the NodeJS API is constantly changing. The latest unstable release introduces a new dedicated https module require('https'); with the following usage. When the 0.3.x branch becomes stable I'll upgrade node.io to use http.request and https.request as per here and here.\n. Done! npm install node.io to get the latest version (0.2.4)\n. Hey, it's no doubt the version of node you're using (0.3.7-pre) - the node request API is constantly changing and I haven't tested it beyond the latest unstable release (0.3.6). It also looks like node.io(1) is pointing to an older version (0.2.1-15) even though you have the newest version installed. Try reinstalling node.io with npm install node.io.\n-Chris\n. Thanks. Added to v0.2.1-19\n. Hi, this was fixed recently - run npm update to get the latest version of node.io\ncreateClient hasn't been removed from the stable (0.2.x) API. It's being phased out in 0.3.x and will be fully deprecated by 0.4.x - in order to keep node.io working for the majority, I'll keep using createClient until the 0.3.x branch is stable. I'll also include the new require('https') interface - all of this should be soon.\n. Hi Paul, thanks for the feedback. I'm quite busy at the moment but will try and look into the problem ASAP. If the addition of && job.input.length > pull seems to help then keep using it - I'll investigate when I can. I've recently been contracted by a company to build a commercial scraping solution using node.io (and continue development of the framework) so expect some updates soon!\n. Try the latest version and see if it fixes it \n. Sorry for the delay in getting back to you. I can't seem to reproduce this bug: \n~/Documents$ node -v && coffee -v && node.io -v\n   v0.4.0\n   CoffeeScript version 1.0.1\n   INFO: v0.2.2-5\n~/Documents$ node.io -s hello.coffee\n   Hello World!\n~/Documents$\nTry reinstalling node.io and its dependencies using npm install node.io and let me know how that goes.\n. I'm closing this issue as resolved. Let me know if you're still having trouble\n. This is a problem with node-soupselect - I'll file a report with the creator, Harry. In the mean time, set the jsdom option to true as per here. This will use the alternative parser (JSDOM) and set jQuery as the selector engine. Let me know if you have any more trouble.\n. I've tested soupselect with $('html') and it works as expected:\nvar data = '<html><head></head><body></body></html>';\njob.parseHtml(data, function(err, $, data) {\n    if (err) throw err;\n    console.log($('html'));\n});\nWhich outputs:\n{ raw: 'html',\n  data: 'html',\n  type: 'tag',\n  name: 'html',\n  children: \n   [ { raw: 'head', data: 'head', type: 'tag', name: 'head' },\n     { raw: 'body', data: 'body', type: 'tag', name: 'body' },\n     each: [Function],\n     odd: [Function],\n     even: [Function],\n     first: [Function],\n     last: [Function],\n     filter: [Function],\n     has: [Function] ],\n  rawtext: [Getter],\n  text: [Getter],\n  striptags: [Getter],\n  fulltext: [Getter],\n  innerHTML: [Getter] }\nCan you obtain the actual HTML and send me a copy so I can test it? Instead of running this.getHtml(url, callback) just run this.get(url,function(err,data){console.log(data);}); and check that the <html> tag looks ok\n. I believe it's something that google has implemented lately to reduce bandwidth. If the html5 doctype is there (<!doctype html>) then the actual html tag (among others) isn't required. Read this and this for more info\n. Running with the --debug switch shows the problem:\n~/Documents$ node.io --debug businessweek\nDEBUG: Running job \"businessweek\"\nDEBUG: Running 1 worker..\nDEBUG: GET http://investing.businessweek.com/research/stocks/snapshot/snapshot.asp?capId=101648 (request 5109)\nDEBUG:   | GET /research/stocks/snapshot/snapshot.asp?capId=101648 HTTP/1.1\nDEBUG:   | Accept: */*\nDEBUG:   | Accept-charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\nDEBUG:   | User-agent: node.io\nDEBUG:   | Host: investing.businessweek.com\nDEBUG: 302 http://investing.businessweek.com/research/stocks/snapshot/snapshot.asp?capId=101648 (response 5109)\nDEBUG:   | Cache-control: private\nDEBUG:   | Connection: close\nDEBUG:   | Date: Fri, 18 Feb 2011 23:21:43 GMT\nDEBUG:   | Content-length: 171\nDEBUG:   | Content-type: text/html\nDEBUG:   | Expires: Fri, 18 Feb 2011 23:20:43 GMT\nDEBUG:   | Location: ../../stocks/private/snapshot.asp?privcapId=101648\nDEBUG:   | Server: Microsoft-IIS/6.0\nDEBUG:   | X-powered-by: ASP.NET\nDEBUG:   | P3p: CP=\"PHY ONL UNI PUR FIN COM NAV INT DEM STA HEA CUR ADM DEV OUR IND\"\nDEBUG:   | Set-cookie: 1663%5F0=C6B9BD543F8A83D13DCE7DE855B4F1B6; path=/\nThe request returns a 302 redirect to ../../stocks/private/snapshot.asp?privcapId=101648 and I haven't geared node.io to handle relative redirects. I'll post a fix soon thanks!\n. This is fixed in this commit and v0.2.2-6\n. So you're calling node.io from within your app? If so, you need to specify a callback to start() otherwise the default callback is used (which exits the process). Try:\n```\nvar nodeio = require('node.io'), \n    options = {timeout: 10},\n    job = require('my_job');\nnodeio.start(job, options, function (err, output) {\n    //Handle the error or output here..\n}, true);\n```\nSee this block of code for more info on the start() method.\n. This isn't so obvious from the documentation, but the first line should be: var job = require('./scrapeJob').job; \nIn node, requiring a module loads the exports object, so if your job is defined as exports.job then you need to say require('job').job.\nIn an update I'm going to make it so that you can just define jobs using this (while still being backwards compatible):\nthis = require('node.io').job({\n  options: {timeout: 10}\n  input: false,\n  run: function() {\n    var self = this;\n    this.getHTML(this.options.args[0], function(err, $){\n      var body = $('#mainBody').innerHTML;\n      self.emit(body);\n    });\n  }\n})\n. Just realised that I gave you the wrong advice in the previous post, sorry.\n. Hi Sam,\nIf your IP is getting blocked, distributing work across a few IPs will likely lead to the same result. I suggest looking at proxying your requests or using something like Amazon's elastic IP's with their EC2 service for changing your IP when it gets blocked.\nAs for distributing work, it's something I plan on implementing when I have some free time - that said, it may take a lot of work and I don't have a great deal of free time so there's no ETA. In the mean time I'd suggest using something like Redis or an RDBMS and instruct each slave to pull input from a common store/table. \nI have seen map-crowd-reduce - it's a cool project but I'm sure that distributing node.io work to the browser would raise some legal issues ;)\n-Chris\n. Should be working.\n. I haven't tested node.io with the latest RC of npm, but if you're getting module errors try installing the missing modules:\nsudo npm install htmlparser\nI'll get the latest npm and test it over the next few days\n. Sorry, forgot to update all htmlparser references when I removed the submodule in this commit.\nThis commit fixes the problem.\nsudo npm install node.io and it'll be working.\n. Not entirely sure as of yet. I've got a few ideas and have had some advice re using external libs like ZeroMQ, RabbitMQ. Development of node.io has always been based on my own needs - I haven't (as of yet) required any more performance than I squeeze out of a single box / node.io instance, so no plans on implementing this in the short term.\n. This will come in node.io-v2 sometime soon (separate repo)\n. Hey, you can use the undocumented wait option - the code is here - it just adds a delay (in seconds) between emitting and the thread ending.\nWhat's your use case? It's probably easiest to just implement the delay yourself.. Instead of calling this.emit() or skip/retry/etc, just call setTimeout(this.emit, seconds * 1000)\n. Thanks, fixed.\n@ttilley - I updated package.json 2 weeks ago in this commit to use the new preferGlobal op\n. neat, thanks\n. I've had to revert this - see this issue.\n. Strange. What version of NPM, Node.JS and node.io are you using?\nHave you tried reinstalling node.io?\nnpm < 1.0.0:\nsudo npm install node.io\nnpm >= 1.0.0\nsudo npm install -g node.io\n. Try running npm install node.io in the same directory as the job you're trying to run\n. As per the documentation:\nA thread is complete after: emit(), fail(), retry() or skip() has been called - any subsequent calls in the same thread are ignored.\nYou should collect all of the information you want to output and then emit it all at once.\n. That's because calls to getHtml are async. In your example this.emit(results) is called before results = \"inside google\";. The correct way of handling that case is to put emit into the inner most closure\n. @gabrielstuff same issue here regarding calling this.emit() multiple times within your run() method. You've got multiple requests firing off inside the each loop and the first one that returns calls this.emit() which marks the thread as complete - subsequent requests that return are ignored.\nFrom the wiki:\n```\nBeing asynchronous, node.io needs to be able to determine when each call to run() is complete:\nrun() is complete when either:\n\nemit(), fail(), retry() or skip() has been called - any subsequent calls in the same thread are ignored\nan option, such as timeout, causes the thread to automatically call one of the methods above\nrun() returns something other than null - in this case, the return value is emitted\n```\n\nYou've got a few options here, you can run each request and collect the results in array, and then emit() the array when the last request returns. There's async helper libraries that will help you with this logic but you need to manage concurrency yourself. \nThe other (IMO better) way of doing it is to collect the urls like you're doing in the each loop, but instead of firing off a request at that time, you can use this.add(url) to add the urls to the queue. Subsequent calls to run() the receive each url as an argument. Doing it this way means that node.io handles your concurrency for you.\nThis example should help:\njavascript\nexports.job = new nodeio.Job(options, {\n    input: [\n        { type: 'initial', url: 'http://www.societe.com/cgi-bin/mainsrch?champ=' + process.argv[1] }\n    ]\n    run: function(input) {\n        var self = this;\n        if (input.type === 'initial') {\n            this.getHtml(input.url, function (err, $) {\n                $('table.GlobalTable a.Blue12').each(function(index, el) {\n                    self.add({ type: 'subrequest', url: main_url + el.href });\n                });\n                this.skip();\n            });\n        } else {\n            this.getHtml(input.url, function (err, $) {\n                //Parse your subrequests here..\n                this.emit(...);\n            });\n        }\n    }\n});\n. @gabrielstuff try changing run: function() { to run: function(input) { and then use the input variable instead of self.assigned_input\n. Also you're misunderstanding how run() works - it's called for each of the subrequests individually (not for all of them), so it's safe to emit(output) instead of console.log'ing it. node.io will concat all of the results behind the scenes\n. Use the jsdom option to enable jsdom/jquery. jQuery is accessible through $\n. It seems that this pull request broke JSDOM integration.\nThis commit reverts the change. npm install -g node.io to install the latest version (0.3.1).\n. Hey, sorry for the delay in getting back to you. HTTP proxy support is 100% untested but I've made a few changes in 0.3.3. Try this:\ntest.js\n``` javascript\nvar nodeio = require('node.io');\nvar options = {\n    proxy: 'http://127.0.0.1:8080' //Your proxy host\n}\nexports.job = new nodeio.Job(options, {\n    input: false,\n    run: function () {\n        this.get('http://www.google.com/', function (err, data) {\n            this.emit(data);\n        });\n    }\n});\n```\nbash\nio --debug test.js\n. Hey sorry this has been dragging along, I don't have a great deal of time to test it. I tested a request through a proxy after this commit and it seemed to work correctly. Could you test it again and let me know how you go?\n. I've ported the entire request process to use mikeal/request as of v0.4.0. HTTP proxies are now 100% supported using the proxy option. Let me know if you have any issues.\n. Hey can you try this now?\ntest.js\n``` javascript\nvar nodeio = require('node.io');\nnodeio.JobProto.prototype.customfunc = function () {\n    console.log('in customfunc()');\n}\nexports.job = new nodeio.Job({\n    input: false,\n    run: function () {\n        this.customfunc();\n        this.emit();\n    }\n});\n```\nbash\n$ node.io test.js\nIt should output: in customfunc()\nIf you're looking to share methods between jobs, you might want to define a base job and then use job.extend(options, methods) rather than modifying the prototype of all jobs.\n. Are you still having any trouble?\n. To be honest, this is a design fail on my part. I was sick of typing first() every time I wanted a single element from a collection with only one item, so I added this shortcut - I knew it would come back to bite me at some stage! \nIn the mean time, you could use jQuery/sizzle as your selector engine by setting the jsdom option to true - I'm sure it's handled more elegantly.\nI'll have to think of a solution that's backwards compatible. \n. Hey @devjones. There's a few reasons why jQuery / JSDOM isn't the default:\n- It's slow spinning up a full instance of JSDOM for every page you want to scrape. Most of the time you just need to get a few pieces of information - you don't a full blown DOM to do that\n- Htmlparser can start to parse the page as it's received, while JSDOM doesn't parse it until the entire page has been received. When you're scraping a lot of data, this makes a significant difference to the memory usage and speed of node.io \n- I've added several convenience methods which make scraping easier.\nYou can do a lot of what you're describing with the default $ object, e.g. to use a custom context or find within another element, use $(selector [, context]);. JSDOM/jQuery is great if you need a full DOM or need complex / compound selectors, but IMO it's not worth the trade off in speed and memory usage.\n. Hey, you can use the nodeio.start() method defined here. Here's an example:\n``` javascript\nvar nodeio = require('node.io');\nvar options = {};\nvar myjob = new nodeio.Job(options, {\n    input: [1,2,3],\n    run: function (num) {\n        this.emit(num * 2);\n    }\n});\nnodeio.start(myjob, function (err, output) {\n    console.log(output); //[4,5,6]\n}, true);\n```\nThe scrape() is just a convenience method which creates a job with options timeout:10, auto_retry:true. You should have a look at this page to see how to create more powerful scraping jobs\n. The original error was due to this line. I didn't pick it up because I had jsdom installed globally! I've added jsdom as a required package in the latest release so this should be fixed.\nThe second bug should be fixed in this commit.\nLet me know if you still have any issues.\n. Hey, you can use the currently undocumented nodeio.start() method defined here. Here's an example:\n``` javascript\nvar nodeio = require('node.io');\nvar options = {};\nvar myjob = new nodeio.Job(options, {\n    input: [1,2,3],\n    run: function (num) {\n        this.emit(num * 2);\n    }\n});\nnodeio.start(myjob, function (err, output) {\n    console.log(output); //[4,5,6]\n}, true);\n```\nAlso note that nodeio.start() can take a path to a job as the first argument, e.g. nodeio.start('/path/to/job', callback, capture_output);\nrequire('node.io'); will work if node.io is installed locally or globally - if require() fails to find node.io, check require.paths vs. the installation dir or try installing it again.\n. Apologies - pre-NPMv1, global node modules were installed in the path. I've looked at how some other popular projects handle it and made some changes in 0.3.6 - this should fix any issues you're having.\n. Once again, let me know if you need any more help ;)\n. You don't need to return this.skip() to get the correct behaviour. What did you have outside of if (err) { .. } ? You may have been calling this.skip() and then evaluating something else, whereas return this.skip() returned immediately.\nThis example works as expected:\ntest.js\n``` javascript\nvar nodeio = require('node.io');\nexports.job = new nodeio.Job({timeout: 10, autoretry: true}, {\n    input: [\n        'http://www.google.com/'\n      , 'http://www.google.com/saidfasdfkhlasdjkfhl'\n      , 'http://www.google.com/'\n      , 'http://www.google.com/8s7dafasdlfhk3lajhlkjh'\n    ],\n    run: function (url) {\n        this.getHtml(url, function (err) {\n            if (err == 404) {\n                this.skip();\n            } else {\n                this.emit(url);\n            }\n        });\n    }\n});\n```\nbash\n$ io test.js\nhttp://www.google.com/\nhttp://www.google.com/\nOK: Job complete\n. @tarun1793 can you post a snippet of your scraping job? If you change getHtml to get in the example above it still works as expected\n. This is perfect thanks!\n. This is interesting and definitely useful. I'll have to think of a way of implementing it so it plays nice with the default selector engine (soupselect) - I don't think it can currently handle $('form select, form input[type!=submit], form input[type=submit]:first')\n. @zdwalter this would be handy feature but it's not something I have time to implement right now. If someone wants to have a stab at it I'll gladly accept a pull request, otherwise it's fairly low priority.\n. Perfect, thanks\n. Hey thanks. You can use the undocumented wait option (defined here) along with the max option to limit the number of concurrent requests. It's also trivial to wrap your emit/skip/etc in a setTimeout if you need more fine-grained control\n. Looks like your problem is sh: node-waf: not found.\nWhat does which node-waf say?\nAre you running npm with sudo?\n. You may have to reinstall node - node-waf should have been installed at the same time. Which version of node are you using?\n. Yeah I'd say reinstall - node-waf should definitely be there.\n. Try passing the player object as the second argument:\njavascript\n$('.playerNameAndInfo').each(function(player) {\n    thisPlayer = $('a', player);\n    output.push(thisPlayer.text);\n});\nthisPlayer will be an object rather than an array with one element.\n. Fixed in #48\n. Thanks!\n. Thanks!\n. Wrong library? I think you're looking for nowjs.com\n. You can catch the errors with simple try ... catch or with the new third argument to the $ object (thanks to @frederickcook).\nThe each issue with single vs. multiple items is covered here. The workaround is to either use jquery/jsdom or to remove these lines in your own build.\n. Looks like it might be an issue with the page you're parsing. Can you send me a snippet of the HTML? \n. I assume it's some sort of permission error, as the tests need to create a few test http servers on various ports so that the scraping methods can be tested.\nI have had this issue in the past (see my original workaround here), although I don't seem to have it anymore.\nI'm using:\nbash\n$ node -v && expresso -v\nv0.4.11\n0.8.1\n. Is this still an issue? Works for me in 0.6+\n. Perfect, thanks\n. Try piping the input in rather than relying on -i (buggy):\nhello.coffee\n``` coffeescript\nnodeio = require 'node.io'\nclass Hello extends nodeio.JobClass\n    run: (name) -> @emit 'Hello ' + name\n@class = Hello\n@job = new Hello()\n```\nRun with\nbash\n$ echo \"chris\" | node.io hello\nor \nbash\n$ node.io hello < names.txt\n. Thanks for finding these - I will likely port the entire request process over to use this library in the near future.\n. The request process now uses mikeal/request so these issues should be fixed. \n. I agree, the documentation could be better, but I haven't got enough free time to write up the extensive docs you're looking for. I'd suggest having a good read through what's there already - it covers the basics regarding input/output and some basic scraping. The only advice I can give is to split the tasks down into the smallest possible units. In the example you've provided, I'd probably write 3 or 4 separate scraping jobs that pull all of the URLs from a page, and then I'd pipe the output from each into the input of another, e.g. echo \"starturl.com\" | node.io job1 | node.io job2. If you follow this recipe then you don't have to worry about input or output (as STDIN/STDOUT is the default).\nRun npm install node.io in a directory and then try this as a boilerplate:\njavascript\nvar nodeio = require('node.io');\nexports.job = new nodeio.Job({ max: 10, timeout: 10 }, {\n    run: function (url) {\n        this.getHtml(url, function (err, $) {\n             //Use $ to find whatever you want to scrape\n             //If you're done, use this.emit()\n             //If you want to skip this page, use this.skip()\n             //If you need to dynamically add more input, use this.add(url)\n        });\n    }\n});\nAgain, read the wiki, it has a lot of useful information.\n. @st3phan it's primarily designed so that io can be piped between separate scripts however you can use \n``` javascript\nvar nodeio = require('node.io');\nvar options = {\n    timeout: 10\n  , silent: true\n};\nvar job1 = new nodeio.Job({\n    input: [ 1, 2, 3 ],\n    run: function (num) {\n        this.emit(num * 2);\n    }\n});\nvar job2 = new nodeio.Job({\n    run: function (num) {\n        this.emit(num * 2);\n    }\n});\nnodeio.start(job1, options, function (err, output) {\n    job2.input = output;\n    //The following undocumented call is used to parse the input value\n    //and convert it into a function which node.io can use:\n    job2.handleSpecialIO();\n    nodeio.start(job2, options, function (err) {\n        console.log(output); // => [4, 8, 12 ]\n    }, true);\n}, true);\n``\n. Currently there's no support for encodings other than those supported by Node ([UTF8 or Binary](http://nodejs.org/docs/v0.5.4/api/http.html#request.setEncoding)). You can try setting theencodingoption to _binary_ (see [this line](https://github.com/chriso/node.io/blob/master/lib/node.io/request.js#L322)) and then use the iconv library to interpret the ISO-8859-1 responses.\n. Hi, you can use your ownsetTimeoutwrappingemit,skip`, etc. to emulate a wait call.\nE.g.\njavascript\nvar self = this;\nsetTimeout(function () { \n    self.emit(/* something */);\n});\nHave a look at this identical issue\n. I've exposed the window object in node.io v0.3.9. Call this.window.close() before calling this.emit(), this.skip(), etc.\n. If there's multiple items matching the selector, you can use each() to iterate over all of them. Have a look at the API for some other helper methods.\nAs for finding the right selectors, you can use something like SelectorGadget although note that it might give you some strange pseudo-selectors (e.g. nth-child) which aren't supported by the default node.io selector engine. I just use Firefox or Chrome's Inspect Element tool to figure out which selectors to use. If in doubt, console.log is your friend ;)\n. It fully supports simple tag/class/id/attribute selectors, and nested versions of each:\njavascript\n$('a')\n$('a.foo')\n$('a#foo')\n$('a#foo.bar')\n$('a.foo.bar')\n$('p a')\n$('p.foo a.bar')\n$('input[type=text]')\n//etc\nIt also looks like there's some other attribute selectors here, although I haven't tested them.\n. There's a complete() method which is called at job completion. You can collect output each time output() is called and then handle in (or in your case, export to DB) in complete(). See this example which outputs [2,4,6]:\n``` javascript\nvar nodeio = require('node.io')\n  , output = []\nexports.job = new nodeio.Job({}, {\ninput: [1, 2, 3]\n\n, run: function (num) { return num * 2 }\n//Store output for later\n\n, output: function (elem) {\n        output = output.concat(elem)\n    }\n//complete() is used to add custom onComplete behaviour. The\n//callback is provided so that node.io knows when any (a)sync\n//behaviour is complete and it should continue\n\n, complete: function (callback) {\n        console.log(output)\n        callback()\n    }\n});\n``\n. This is fixed in the latestnode.io v0.4.1release\n. @bebraw @maxgilander should be fixed now\n. Not sure what's going on here, I'll have to have a look at the htmlparser code to see why the callback gets called multiple time. I'll merge this for now until I can figure out what's going on. Thanks\n. It was an octal vs decimal issue when setting write permissions. Fixed in0.4.3. Fixed as ofv0.4.4.skipshouldn't be called with any args, the issue was that it wasn't being called at all. Fixed in [this commit](https://github.com/chriso/node.io/commit/0084cbde7da1426a9e21164cdd5503329974dce2#diff-1) /v0.4.4. There was a bug where it would reportnot foundfor _myjob.js_ when actually one of the modulesrequire()`'d inside that file could not be found.\nIt's probably a case of not being able to find a local copy of node.io. Try running npm install node.io in the same directory as myjob.js. If it doesn't work, the latest version should at least give you a more accurate error message.\n. Sorry for the delay. Looks like you're calling get/post/getHtml/postHtml with incorrect arguments. Can you post your job or at least the line where you call one of those methods?\n. No probs :) let me know if you need any more help\n. return false will break out of the loop as of 0.4.7\n. I hacked together the web interface over a year ago when the node API and way modules were handled were very different. I'll have to have a look at upgrading this at some stage though. require.paths was removed a few months ago and so the only solution is to specify the module dir at the command line or default to the current directory.\n. Agreed. It's removed for now\n. It looks like Google has changed the way their client queries pagerank. You used to be able to get pagerank from\nhttp://www.google.com/search?client=navclient-auto&ch=<HASH>&features=Rank&q=info:<URL>\nYou could calculate the hash using this code which was available on the internet. I'll have to have a look out if there's a new way of obtaining pagerank.\n. It looks like both binaries linked properly when you installed node.io\n/usr/local/bin/io -> /usr/local/lib/node_modules/node.io/bin/io\n/usr/local/bin/node.io -> /usr/local/lib/node_modules/node.io/bin/node.io\nCan you type which node.io and ls -lah /usr/local/bin/node.io and tell me what it says? What operating system are you using? What actually happens when you try and run node.io ?\nMost of the documentation and wiki uses the node.io bin in examples so I'm reluctant to change it in just one place.\n. No problem ;)\n. Perfect thanks!\n. Thanks\n. You can use the complete method to add any (a)sync code you need executed on job completion, e.g. waiting for async output to complete.\nFrom the wiki:\njavascript\ncomplete: function(callback) {\n    console.log('Job complete.');\n    callback();\n}\n. Thanks ;)\n. Set the jsdom option to true to enable the jsdom parser. You may also need to set the external_resources option to true if the page you're scraping needs to load any <script> tags. After requesting the page you have access to the a window object and jQuery fn $. Have a look at this code\n. Great\n. I can't replicate this. Cookie tests are passing and the following script outputs the expected.\ncookies.php\nphp\n<?php var_dump($_COOKIE);\ntest.js\n``` javascript\nvar nodeio = require('node.io');\nexports.job = new nodeio.Job({}, {\n    input: false\n  , run: function () {\n        this.setCookie('foo', 'bar');\n        this.get('http://localhost/cookies.php', function(err, data) {\n            this.emit(data);\n        });\n    }\n});\n```\nbash\n~ $ node.io test   \narray(1) {\n  [\"foo\"]=>\n  string(3) \"bar\"\n}\n. You can also run a job using the method nodeio.start(job, options, callback, capture_output). Here's a basic example\n``` javascript\nvar nodeio = require('node.io')\n   , options = {};\nvar job = new nodeio.Job(options, {\n    input: false\n  , run: function () { this.emit('foo'); }\n});\nnodeio.start(job, options, function (err, output) {\n    console.log(output); // => [ foo ]\n}, true);\n```\nYou can then run this with node test.js.\nNode used to have a hard 1GB limit but I believe this was lifted a few months ago. It sounds like your process might be running into some other issue\n. No problems. I'd recommend using the default parser unless you need a full JS environment ;)\n. Unfortunately no, you'll need to parse the response to get the next url\n. I can't replicate this. Can run $ npm install node.io request and try again?\n. The latest version of node.io works with all stable versions since 0.4.0. Anything unstable (>= 0.7.0) is unsupported. \nThe require.paths call was removed from the library a while back. Try reinstalling the library with $ npm install node.io\n. Is this still an issue?\n. Thanks for spotting this. Fixed in the latest release\n. Hi Juho, getHtml is just a mashup of get and parseHtml. Try this\njavascript\nvar self = this;\nthis.read(file, function (err, data) {\n    self.parseHtml(data, function (err, $) {\n       //... \n    });\n});\n. Is this still an issue?\n. There's a few issues with the script. Firstly, you've got your main code in the input method rather than the run method. Secondly, you're calling callback twice, once at the end of the input and another when the asynchronous getHtml returns. Remember to only ever emit from the most nested callback.\nThis is the fixed version of your code\n``` javascript\nvar nodeio = require('node.io');\nvar reddit = \"http://www.reddit.com/\";\nvar options = {\n    timeout: 100,\n    max: 2,\n    retry: 5\n};\nvar myjob = new nodeio.Job(options, {\n    input: false,\n    run: function () {\n        var self = this;\n        this.getHtml(reddit, function (err, $) {\n            if (err) self.exit(err);\n            var titles = [];\n            $('a.title').each(function (title) {\n                titles.push(title.text);\n            });\n            this.emit(titles);\n        });\n    }\n});\nnodeio.start(myjob, function (err, titles) {\n    console.log(titles);\n}, true);\n```\n. You can access the response object like this:\n``` javascript\nthis.get('http://www.google.com/', function (err, body, headers, response) {\n    //...\n});\n//or\nthis.getHtml('http://www.google.com/', function (err, $, body, headers, response) {\n    //...\n});\n```\n. JSDOM errors are outside the scope of the library. You'll need to get in contact with the author of that library to fix the issue.\n/Users/chris/test.js:24\n    if (err) throw err;\n                   ^\nTypeError: needs a 'context' argument.\n    at Object.getGlobal (/Users/chris/node_modules/node.io/node_modules/jsdom/lib/jsdom/browser/index.js:26:21)\n    at Object.createWindow (/Users/chris/node_modules/node.io/node_modules/jsdom/lib/jsdom/browser/index.js:308:23)\n    at Object.windowAugmentation (/Users/chris/node_modules/node.io/node_modules/jsdom/lib/jsdom/browser/index.js:63:24)\n    at Object.parentWindow (/Users/chris/node_modules/node.io/node_modules/jsdom/lib/jsdom/browser/index.js:605:28)\n    at Object.<anonymous> (/Users/chris/node_modules/node.io/node_modules/jsdom/lib/jsdom.js:81:15)\n    at [object Object].parseHtml (/Users/chris/node_modules/node.io/lib/node.io/dom.js:59:101)\n    at [object Object].<anonymous> (/Users/chris/node_modules/node.io/lib/node.io/request.js:109:18)\n    at /Users/chris/node_modules/node.io/lib/node.io/request.js:217:25\n    at /Users/chris/node_modules/node.io/lib/node.io/request.js:349:13\n    at Request._callback (/Users/chris/node_modules/node.io/lib/node.io/request.js:359:13)\n. The request library kindly changed its API without warning which broke the streaming parser.\nFixed in fd07c193919cd6939d38f457342b5aeaeb4cf9fe / v0.4.9\n. Fixed in 0.4.9 / fd07c193919cd6939d38f457342b5aeaeb4cf9fe, see #93 for more info\n. FYI jsdom isn't the default parser in node.io, it uses the same parser and selector engine as cheerio. The layer on top in node.io is a collection of custom traversal methods built before cheerio was created. \nThe next version of node.io will include a better collection of functionality - similar to cheerio but with more focus on scraping rather than trying to be a drop-in replacement for jQuery.\n. It's a ridiculous default buried in the node.js source.\nEventEmitters have a setMaxListeners method allowing you to raise this number but the problem is that you often won't have access to EventEmitters buried in a dependency.\nI've submitted a patch to make the max globally configurable but it was shutdown because the EventEmitter api is \"closed\".\nThe only solution I can think of is terrible and shouldn't be used - patching a method from the EventEmitter prototype that you know will be called\njavascript\nvar EventEmitter = require('events').EventEmitter\n  , on = EventEmitter.prototype.on;\nEventEmitter.prototype.on = function () {\n    this._maxListeners = Infinity;\n    on.apply(this, arguments);\n};\n. Say something in the node.js ticket if you can. The more people that complain, the more likely they'll change it.\n. I'd suggest using a separate request library with stream support for this sort of task to prevent buffering the entire file in memory, e.g. mikeal/request. You can still use most of the functionality of node.io, just use this instead of the inbuilt this.get().\njavascript\nvar request = require('request');\nrequest('http://example.com/image.png').pipe(fs.createWriteStream('image.png'))\nYou could also look into raising the memory limit of V8. I think this is around the 1GB mark but is now configurable with a command line option. \n. Thanks. The request library node.io uses changes its API often. When I incorporated it originally this was the default behaviour :/\n. No, it's not an issue on that end, just a matter of locking in a version of request and watching out for changes.\n. The cursor approach to selecting rows seems to be mongo-specific. All other DB drivers I'm aware of (postgres, mysql, sqlite, etc.) take a completely different approach.\nI agree it can be difficult hooking up certain drivers to the input/output methods but keeping it generic and decoupled is my intention for now, especially considering you might hook up files, streams, in-memory queues, etc.\n. Which version are you using? I think this is an issue with the request library having a cookie jar turned on by default. This was turned off in 0.4.9-1.\nCookies should be sent on nested requests but not requests with different elements of input. They should definitely not persist across node.io jobs.\n. Set the jsdom and external_resources options to true to use JSDOM with jQuery instead of the default parser. The jQuery $ object is available as a getHtml argument. You also have access to a this.window object. You could use a window.onload, $(function () { /* ready */ }) or just a setTimeout to wait for the content to be loaded.\n. Sorry, $.ready won't work. Use the short form jquery ready:\njavascript\n$(function () {\n    //doc is ready\n});\n. The temporary file should be deleted on exit but I agree, this could be handled better\n. cheerio-soupselect / cheerio are already on the todo list but I'll leave this ticket open until they're in place\n. I hadn't heard of iced before today so I doubt the majority of users will have it available. If you want to use it instead of the coffee binary then you should use alias coffee=iced\n. Thanks, this looks better.\n. Can't seem to reproduce this? It is still an issue?\n. Fixed in the latest release.\n. Thanks\n. You can set the jsdom option to true to use jQuery instead of the default node-htmlparser / node-soupselect mashup. Note that this is generally slower because a full DOM instance needs to be spun up on every response.\n. This is actually a fairly common pattern. Try this\n``` javascript\nvar nodeio = require('./');\nvar page_numbers_on_page = {\n    1: [ '1', '2', '3', '4' ]\n  , 2: [ '1', '2', '3', '4' ]\n  , 3: [ '2', '3', '4', '5' ]\n  , 4: [ '3', '4', '5', '6' ]\n  , 5: [ '5', '6', '7', '8' ]\n  , 6: [ '6', '7', '8', '9' ]\n  , 7: [ '6', '7', '8', '9' ]\n  , 8: [ '6', '7', '8', '9' ]\n  , 9: [ '6', '7', '8', '9' ]\n};\nvar seen_pages = { 1: true };\nexports.Job = new nodeio.Job({}, {\n    input: ['1']\n  , run: function (page) {\n        var self = this;\n        //Simulate grabbing an overlapping array of page numbers from each page\n        page_numbers_on_page[page].forEach(function (page) {\n            //Add a page as input unless we've already seen it\n            if (!(page in seen_pages)) {\n                self.add(page);\n                seen_pages[page] = true;\n            }\n        });\n        this.emit('Loaded page ' + page);\n    }\n});\n```\nOutputs:\nbash\nLoaded page 1\nLoaded page 2\nLoaded page 3\nLoaded page 4\nLoaded page 5\nLoaded page 6\nLoaded page 7\nLoaded page 8\nLoaded page 9\nThe rationale for not including this functionality in the library is that a hash of already-seen input would continue to grow indefinitely. This isn't an issue for a smaller scraping job but scraping millions of pages and it becomes a problem.\n. Hi Jon,\nTo scrape a page behind a login you need to a) emulate a login request by doing exactly what the login form does, and then b) sending the resulting login/auth cookie to subsequent requests - this allows you to access the protected page.\nIn pseudo-code your run() method would look something like this\nIf we have a login cookie stored in some variable\n    Set the login cookie using `this.setCookie(name, value)`\n    *Scrape the protected page as you normally would\nElse, simulate a login\n    Send a post request to the same location as the login form\n        Once complete, grab the login cookie from the response headers\n        Save the cookie to an outer variable for subsequent calls to run()\n        *Scrape the protected page as you normally would\nI'd usually just use Firebug or the built-in Chrome developer tools to have a look at the request/response flow when logging in. Open one up, login as you normally would, and then you're after 3 things:\n1. The login field names, usually just some derivative of username and password. More complicated forms might bundle a nonce or some other security mechanism. You can get around these by actually scraping the login page before emulating a login.\n2. Check where the form POSTs to.\n3. Check which cookies are set in the login response\nGood luck!\n. @TheFuzzball as Jon said, the default selector engine is node-soupselect. It only supports a subset of the jQuery selectors you might be used to but it's significantly faster and less memory intensive than a full JSDOM instance per scraped page. Enable it with the jsdom: true just like Jon showed in the pastie snippet.\nAs for the jQuery question, I'm not entirely sure. You should be able to find the answer in the jQuery docs or on stackoverflow.com\n. Can you provide more of a use-case here or a snippet of what you're doing with the stream?\nGiving the job a unique ID based on options/name was so that separate nodes could split up input while running multiple jobs at the same time. Creating this identifier based on the current time introduces a race condition.\n. I'd say in this case that you should probably just pass in connection details rather than a connection object and then connect on first use, or just use a global connection object if you're only running a single job at a time\n. It looks like node.io didn't install properly, try reinstalling with npm install node.io.\n. JSDOM has some issues parsing certain documents - you'll have to open a ticket in that repo with a minimal test case. In the mean time you can try using the default parser and selector engine documented here\n. The third parameter to nodeio.start() is either true to capture output in the callback or false (default) to use the output method you've defined.\nTry this\njavascript\nnodeio.start(new nodeio.Job(jobOptions, job), function(err) {\n    if (err) throw err;\n});\n. You can only @emit once per call to run().\nFrom the wiki:\n```\nBeing asynchronous, node.io needs to be able to determine when each call to run() is complete:\nrun() is complete when either:\n\nemit(), fail(), retry() or skip() has been called - any subsequent calls in the same thread are ignored\nan option, such as timeout, causes the thread to automatically call one of the methods above\nrun() returns something other than null - in this case, the return value is emitted\n```\n\nCollect the results from your each loop in an array and then just emit the array.\n. Thanks for this. I implemented the opts parsing part of node.io before there were any libraries available to do it for you. I plan on bundling a dep in v2 which will use the standard getopt syntax.\n. You can use the nodeio.start(job, options, callback, capture output) function inside a script and then just run that script with the node-inspector.\nHere's an example of using start()\n``` javascript\nvar nodeio = require('node.io');\nvar job = new nodeio.Job({\n    input: [ 0, 1, 2 ],\n    run: function (num) {\n        this.emit(num * 2);\n    }\n});\nnodeio.start(job, { silent: true }, function (err, output) {\n    console.log(output);\n}, true);\n``\n. Not sure what advice to give here. All of the created objects related to jsdom are exposed to therun()` method so you'll need to look through it's documentation to find out how to reduce memory usage. jsdom is a bit of a memory hog from what I've heard - this is why it's not enabled by default. It does serve a purpose though - executing client-side JS and getting access to a proper selector engine (jQuery/sizzle) - so I don't plan on removing it.\nUsing cheerio has already been suggested (#103) and is TODO.\n. How are you calling the function? Make sure you provide a callback, as the default behaviour otherwise is to exit the process. \nHere's an example of running the same job indefinitely\n``` javascript\nvar nodeio = require('node.io')\n  , iterations = 1;\nvar job = new nodeio.Job({\n    input: [ 1 ],\n    run: function () {\n        this.emit('At iteration ' + (iterations++));\n    }\n});\n(function startJob() {\n    nodeio.start(job, { silent: true }, function (err, output) {\n        console.log(output);\n        process.nextTick(startJob);\n    }, true);\n})();\n``\n. IO requirements that don't fit with the provided convenience methods should be handled using a custominput()oroutput()` function. Here's an example of multiple output streams.\n``` javascript\nvar file1 = fs.createWriteStream('/path/to/file1')\n  , file2 = fs.createWriteStream('/path/to/file2');\nvar job = new nodeio.Job({\n    output: function (rows) {\n         file1.write(rows.join('\\n'));\n         file2.write(rows.join('\\n'));\n    }\n});\n```\nHave a look at the wiki for more information.\n. r nod\n. The URL is passed to the request library which is why file:// urls might not work.\nCan you post a minimal test case with parseHTML failing or at least some example code?\n. Note that jQuery has a different API to the default selector engine; text() is a function.\n$('h3 .search-results b').text.toLowerCase() should instead be $('h3 .search-results b').text().toLowerCase()\nRefer to the jQuery docs for more information\n. Ok I've had a better look at your code. This is outside the scope of the library but I'll help you with your code this one time.\nHere's what's wrong\n- You're calling nodeio.start() incorrectly - the function expects nodeio.start(job, options, callback, capture_output)\n- You're passing input to the job incorrectly - have a look at the example below to see how to do it\n- Your jQuery selector is incorrect, h3 .search-results b should have no space after h3 => h3.search-results b\n- $(selector) returns an array like result. You need to say $(selector).first() if you want only one of the matches\nHave a look at the jQuery and node.io documentation for more information.\nHere's a working version of your initial snippet\n``` javascript\nvar nodeio = require('node.io');\nvar options = {\n    timeout: 10\n  , jsdom: true\n};\nvar job = {\n    input: [ '0912341234' ],\n    run: function (input) {\n        var url = 'http://www.gigpark.com/?search=' + input + '&commit=Search&city';\n        console.log(url);\n        this.getHtml(url, function (err, $) {\n            var result = $('h3.search-results b').first().text().toLowerCase();\n            this.emit(result);\n        });\n    }\n}; \nnodeio.start(new nodeio.Job(options, job), {}, function (err, output) {\n    console.log(output);\n}, true);\n``\n. You're not checking ifgetHtml()` returns an error. Cleaning up your code a bit I can only reproduce the error when the request times out.\n``` javascript\nvar http = require('http')\n  , URL = require('url')\n  , nodeio = require('node.io')\n  , port = 8081;\nvar options = {\n    timeout: 30\n  , jsdom: true\n};\nfunction getResult(phone_number, callback) {\n    var job = new nodeio.Job(options, {\n        input: [ phone_number ],\n        run: function (input) {\n            var url = 'http://www.gigpark.com/?search=' + input + '&commit=Search&city';\n            this.getHtml(url, function (err, $) {\n                if (err) {\n                    return this.error(err);\n                }\n                var result = $('h3.search-results b').first().text().toLowerCase();\n                this.emit(result);\n            });\n        }\n    });\n    nodeio.start(job, { debug: true }, callback, true);\n}\nfunction serve() {\n    var serv = http.createServer(function(req, res) {\n        var url = URL.parse(req.url);\n        if (req.method == 'GET' && url.pathname == '/gigpark_search') {\n            getResult('foo', function (err, result) {\n                if (err) {\n                    res.statusCode = 500;\n                } else {\n                    res.statusCode = 200;\n                    res.write(JSON.stringify(result));\n                }\n                res.end();\n            });\n        } else {\n            res.statusCode = 404;\n            res.end();\n        }\n    });\n    serv.listen(port);\n}\nconsole.log('Starting server...');\nserve();\n``\n. Trythrow errinstead of ofconsole.logso you get a stack trace\n. Try reinstalling jquery =>npm install jquery. Can younpm ls`? You should get\n\u2514\u2500\u252c node.io@0.4.12\n  \u251c\u2500\u2500 coffee-script@1.4.0\n  \u251c\u2500\u2500 htmlparser@1.7.6\n  \u251c\u2500\u252c jquery@1.8.2\n  \u2502 \u251c\u2500\u2500 location@0.0.1\n  \u2502 \u251c\u2500\u2500 navigator@1.0.1\n  \u2502 \u2514\u2500\u2500 xmlhttprequest@1.4.2\n  \u251c\u2500\u252c jsdom@0.2.19\n  \u2502 \u251c\u2500\u252c contextify@0.1.3\n  \u2502 \u2502 \u2514\u2500\u2500 bindings@1.0.0\n  \u2502 \u251c\u2500\u2500 cssom@0.2.5\n  \u2502 \u2514\u2500\u2500 cssstyle@0.2.3\n  \u2514\u2500\u2500 request@2.9.202\n. No probs ;) good luck\n. I'll answer in the other ticket\n. node-gyp needs access to the node source and downloads it to ~/.node-gyp/<version> as necessary.\nTry running with sudo if you get a permissions error\n. It looks like the build succeeds so what's the problem?  Try running node.io -v to verify.\n. Looks like a bug in the request library  => (/Users/ms/CODE/NODE/node_modules/node.io/node_modules/request/forever.js:97)\nTry doing a fresh install of node.io\nbash\n$ rm -rf node_modules/node.io\n$ npm install node.io\n. node.io depends on request 2.9.202 for now. I'd say it's probably an issue with node v0.4.0 which is coming up on 2 years old. Any chance you could upgrade to 0.8?\n. Yep, you need to upgrade. The request library relies on require('https').Agent which was added in v0.6 I believe\n. The latest release v0.8.15 should be fine. If you get another issue then post a stack trace and I'll take a look.\nThe node.io code is compatible with node >= 0.4.0 but the dependencies seem to be relying on newer features since I last checked. I'll upgrade the package.json to reflect this.\n. Looks like a permissions problem. Try running with sudo\nbash\n$ sudo npm install -g node.io\n. Ah, sorry. Can you run npm install -g -ddd contextify and paste the result?\n. Ok. Can you now try\nbash\n$ rm -rf /usr/local/lib/node_modules/node.io\n$ sudo npm install -g -dd node.io\n. These three lines stick out\nnpm verb set uid from=0 to=-2\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nAfter researching the first line it looks like it might be a problem with your ~/.node-gyp directory. Try removing it and then reinstalling. npm should create the directory and install node-gyp for you if it doesn't exist.\nbash\n$ rm -rf ~/.node-gyp\n$ rm -rf /usr/local/lib/node_modules/node.io\n$ sudo npm install -g node.io\n. Not quite sure what the problem is. It looks like some combination of permissions and/or node-gyp not working, but these are the 3 lines that shouldn't be occurring\nnpm verb set uid from=0 to=-2\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nYou could remove affected dirs and try reinstalling node to see if it fixes the problem.\nbash\n$ rm -rf /usr/local/lib/node_modules ~/.node-gyp\nYou could also try creating a ticket with npm where @isaacs might be able to help you further.\n. It looks like node-gyp (a required part of the node platform) is failing to build the contextify extension which is used by one of the node.io deps.\ncontextify@0.1.3 install C:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\\jquery\\node_modules\\contextify\nnode-gyp rebuild\nC:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\\jquery\\node\nmodules\\contextify\\build\\contextify.vcxproj(18,3): error MSB4019: The imported\nproject \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path\nin the declaration is correct, and that the file exists on disk.\ngyp ERR! build error\ngyp ERR! stack Error: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\msbuild.exe failed with exit code: 1\nYou'll have to create an issue at either the node-gyp or npm for more help.\n. Errors thrown inside run() are caught and sent to fail() which allows you to emit different output. \nSyntax errors should really be filtered out, but for now you have two options\njavascript\nexports.job = new nodeio.Job({\n    input: false,\n    run: function () {\n        console.log(Util2.parseFloat('$123.00'));\n    }\n  , fail: function (input, err) {\n        // handle error here\n    }\n});\nor\njavascript\nexports.job = new nodeio.Job({\n    input: false,\n    run: function () {\n        try {\n            console.log(Util2.parseFloat('$123.00'));\n        } catch (e) {\n            //Handle the error here\n        }\n    }\n});\n. Why not change this\njavascript\nthis.getHtml('http://www.kiva.org/partners/' + partnerId,  function(err, $) {\n    //\n});\nto this\njavascript\nvar url = 'http://www.kiva.org/partners/' + partnerId;\nthis.getHtml(url,  function(err, $) {\n    console.log(url);\n});\nor am I missing something?\n. Ah, right. An IIFE is what you're after\njavascript\nvar self = this;\nfor (id in options.args[0]){\n    (function (partnerId) {\n        var url = 'http://www.kiva.org/partners/' + partnerId;\n        self.getHtml(url,  function(err, $) {\n            console.log(url);\n        });\n    })(options.args[0][id].id);\n    this.emit(0);\n}\n. Note that you can't call emit() more than once.\nWhy won't the following work?\njavascript\nvar titles = [];\n$('entry title').each(title) {\n    titles.push(title.text);\n});\nthis.emit(titles);\n. No problem. There's a lot of info available in the wiki\n. I can't help you without some sort of context here. result.fulltext returns a string, so replace should works as expected. Note that replace('<br />', '') will only replace the first occurrence. To replace all occurrences use replace(/<br \\/>/g, '')\n. You updated the global node.io but probably didn't update the local copy that your script uses when you require('node.io').\nTry running npm install node.io in the same directory as your hello.coffee.\nThe following command should output node.io@0.4.13 twice\nbash\n$ ( npm ls -gs && npm ls -s ) | grep node.io\n. Thanks. I've been wondering how to solve this issue.\n. There's no path.exists or fs.exists calls in the library but there might be a few in older dependencies.\n/tmp/node.io (air) $ grep -r 'path\\.exists' **/*.js\nnode_modules/coffee-script/lib/coffee-script/cake.js:  existsSync = fs.existsSync || path.existsSync;\nnode_modules/coffee-script/lib/coffee-script/command.js:  exists = fs.exists || path.exists;\nnode_modules/jquery/node_modules/contextify/node_modules/bindings/bindings.js:  , exists = fs.existsSync || path.existsSync\nnode_modules/jsdom/node_modules/contextify/node_modules/bindings/bindings.js:  , exists = fs.existsSync || path.existsSync\nTry removing node_modules and reinstalling with npm install\n. You'll need to update both the global node.io copy (for the cli tool), and the copy in your local node_modules directory (for when you require('node.io')).\nbash\n$ npm uninstall -g node.io && npm uninstall node.io\n$ npm install -g node.io && npm install node.io\nAgain, there's no path.exists calls anywhere in the library, and when I do a fresh install there's no calls in any of the dependencies either. \n. Yes, node.io can be used to implement this sort of summary. Node.io only provides the framework for scraping and parsing HTML; you'll need to write the higher-level parsing logic yourself.\n. Thanks for this. I've had similar issues before\n. Thanks\n. It was a bug introduced in 2d1a631769830cd148c38f27dbad13fc4614b077 and fixed in cddcb095bc2a32268e90b4b9add70be7674efd77. The latest version 0.5.1 includes the fix\n. You probably forgot to create the file save.js like it says to on the wiki page.\nWhen calling node.io foo the process will first look for a file called foo.js in the current working directory.\n. I need more information than what you've provided.\n- What url were you trying to scrape?\n- What's the stack trace?\n- Can you post your entire script?\n. If you've verified that the image urls are correct, you could try using a higher level request library such as mikeal/request and then piping the images directly to disk\n``` javascript\nvar request = require('request')\n  , fs = require('fs');\nvar output_stream = fs.createWriteStream('/path/to/output');\nrequest(image_url).pipe(output_stream);\n```\nThe node.js docs have more information => fs.createWriteStream\n. The development of features has always been based on my own needs. I haven't got time to add any extra features at this stage, especially not one as big as the distributed scraping, unless someone can sponsor the development.\n. The library provides the lower-level functionality required to make requests, parse HTML, handle qeueing, concurrency etc. The user is largely responsible for building scraping infrastructure on top of these lower-level constructs. Parsing and respecting robots.txt is one of those things that the user must account for.\n. This is likely a bug. The stream API has changed significantly since I wrote the library (which was somewhere around node v0.4)\n. It'll work if you leave out the input: false from the second job.\na.js\n``` javascript\nvar nodeio = require('node.io');\nexports.job = new nodeio.Job({\n    input: false,\n    run: function () {\n        this.emit('foo');\n    }\n});\n```\nb.js\n``` javascript\nvar nodeio = require('node.io');\nexports.job = new nodeio.Job({\n    run: function (input) {\n        this.emit(input + 'bar');\n    }\n});\n```\nResult:\nbash\n$ node.io --silent a | node.io b\nfoobar\nOK: Job complete\n. Thanks Mr. README Bot. This repo is no longer maintained, as noted in the README.\n. ",
    "afiore": "Thanks a lot Chris!\nI've updated my node.io installation and it works fine now!\nLook forward to playing more with Node.io and getting back to you with more feedback soon. \nCheers,\nA\n. ",
    "leei": "Got it.  Only one of emit, fail, or skip per run...\nThat was the key.  And since I was emitting multiple times per job, it must have been counting these and then exited as soon as it had enough, which was of course before it had processed all the pages...\nMaybe there's some way to warn the user when emit is submitted more than once per job...  Run emit() and then redefine it per job?\n. ",
    "sotonin": "Hmm. i've looked at both /usr/local/bin/node.io and /usr/bin/node.io and node.io is at neither location. very bizarre. i'll try your .sh suggestion\n. unfortunately the same issue with the sh method\nimport.sh: 1: node.io: not found\n:(\n. OK. we're getting closer now. after putting the full path in the .sh now it logs this\n/usr/bin/env: node: No such file or directory\n. OK. i've pretty much blown away everything i've done and tried to start fresh with node and node.io\nSomehow now i can't even get it to work the normal way (not in a cron).... the same old js scripts that used to work now give this.\nERROR: Failed to load job \"import.js\". Node.io accepts CoffeeScript and JS modules (.js/.coffee).\nive tried node v0.3.1 v0.3.2 and v0.3.3 all seem to behave the same. i was using v0.3.1 earlier so this is very odd\n. I got it working. It appears the reason it gave the ERROR: Failed to load job \"import.js\". Node.io accepts CoffeeScript and JS modules (.js/.coffee). is because i had forgotten to install some dependencies after reinstalling node\nafter using npm to install the required libraries it went away. not sure if thats a bug or not, as the error message is a little confusing.\nAll is well now. my cron appears to be working correctly now after the full reinstall\n. The dependency that bugged it up to give that message was \"mailer\" npm install mailer i believe. Obviously this is not a dependency of node.io just a require() i had in my .js file i was trying to run with node.io. After i installed that it recognized it as a js just fine. Been using 0.3.3 mostly. back and forth between 0.3.1 0.3.2 and 0.3.3 just trying to get things to play nice. using 0.3.3 right now successfully\n. ",
    "hemanth": "```\n\nls ~/.node_modules\ndigest.js      eval.js      resolve.js   word_count.js\nduplicates.js  pagerank.js  validate.js\nnode --version\nv0.2.6\n```\n\nWith pagerank.coffee in pwd :\nnode.js:63\n    throw e;\n    ^\nReferenceError: strord is not defined\n    at [object Object].run (/tmp/node.io/examples/pagerank_compiled.js:28:27)\n    at EventEmitter. (/usr/local/lib/node/.npm/node.io/0.2.1-15/package/lib/node.io/process_worker.js:254:28)\n    at EventEmitter.emit (events:28:17)\n    at Array. (/usr/local/lib/node/.npm/node.io/0.2.1-15/package/lib/node.io/process_worker.js:106:24)\n    at EventEmitter._tickCallback (node.js:55:22)\n    at node.js:773:9\n. >  npm install coffee\nnpm info it worked if it ends with ok\nnpm info using npm@0.2.15\nnpm info using node@v0.2.6\nnpm ERR! Error: 404 Not Found: coffee\nnpm ERR!     at IncomingMessage.<anonymous\n(/usr/local/lib/node/.npm/npm/0.2.15/package/lib/utils/registry/request.js:150:16)\n    npm ERR!     at IncomingMessage.emit (events:48:20)\n    npm ERR!     at HTTPParser.onMessageComplete (http:107:23)\n    npm ERR!     at Client.onData as ondata\n    npm ERR!     at IOWatcher.callback (net:494:29)\n    npm ERR!     at node.js:773:9\n    npm ERR! 404 \n    npm ERR! 404 Looks like 'coffee' is not in the npm registry.\n    npm ERR! 404 You should bug the author to publish it.\n    npm ERR! 404 Note that you can also install from a tarball or local folder.\n    npm ERR! 404\n    npm not ok\n. Sorry again, i think i have screwed up very badly :(\n  npm info it worked if it ends with ok\n  npm info using npm@0.2.15\n  npm info using node@v0.2.6\n  npm ERR! Error: 404 Not Found: coffeescript\n  npm ERR!     at IncomingMessage.<anonymous\n(/usr/local/lib/node/.npm/npm/0.2.15/package/lib/utils/registry/request.js:150:16) \n  npm ERR!     at IncomingMessage.emit (events:48:20)\n  npm ERR!     at HTTPParser.onMessageComplete (http:107:23)\n  npm ERR!     at Client.onData as ondata\n  npm ERR!     at IOWatcher.callback (net:494:29)\n  npm ERR!     at node.js:773:9\n  npm ERR! 404 \n  npm ERR! 404 Looks like 'coffeescript' is not in the npm registry.\n  npm ERR! 404 You should bug the author to publish it.\n  npm ERR! 404 Note that you can also install from a tarball or local folder.\n  npm ERR! 404\n  npm not ok\n. Worked! :) Kool! /me now looks for real parsing tricks :)\n. Sure - Will get productive with this first :) \n. ",
    "sergioeugenio": "Thanks chriso, a great help.\n. ",
    "astrofinch": "Do you think the CoffeeScript inheritance problem is most likely to be in CoffeeScript itself, in node.io, or in node.js?\nhello.coffee is the only file in the directory that matches the hello.* glob.\n. Your hello.js produces this error:\n\njohn-laptop :: ~/tmp \u00bb node.io -s hello.js\nERROR: This module expects input. Override the job's input method or call `node.io -i [INPUT] module`\n\nBoth your coffeescript files work properly.  Here are my versions:\n\njohn-laptop :: ~/tmp \u00bb coffee -v && node -v\nCoffeeScript version 0.9.6\nv0.2.4\n\nI'll look in to updating them presently.\n. Sorry for not responding.  You guessed correctly that upgrading node solved my issue.  Thanks a lot!  :)\n. ",
    "gabebw": "Er. Turns out I can edit the wiki, so never mind.\n. ",
    "paulrosania": "Now that 0.4.x is out, is there a chance we might get to see this soon?  Some of the pages I am scraping do automatic HTTPS redirects. :-(\n. Wow, that was fast! Thanks!!\n. ",
    "kevinetienne": "hi chriso, thanks for your quick answer, I've downgraded node to 0.3.5 and I could run through the examples. Sorry I didn't notice that my problem was related in some way to your answer to this pull request https://github.com/chriso/node.io/pull/12\n. ",
    "psmithuk": "Hi Chris, all looks good so far. I've run about a dozen or so tests of varying sizes and all have completed as hoped. Many thanks for looking at this, I'll let you know if I see any more issues with my testing.\n. ",
    "edasque": "Have you been able to fill in the bug with soupselect?\n. so I tried:\nvar url = 'http://www.google.com/search?q=node.io';\n```\nthis.getHtml(url,\nfunction(err, $) {\nconsole.log($('html'));\n\n}); \n```\nWhich failed because... that page doesn't have a  tag for some reason...\n. ",
    "jscheel": "I'm having some trouble with this. I have a job here: http://pastie.org/1656182\nI want to run it with my own error handling, so I do it like so: http://pastie.org/1656186\nBut, I get Object has no method 'getHTML' on my job when I run it. Any thoughts?\n. ",
    "estevaoam": "Same error here. :(\n. ",
    "kmiyashiro": "Yep, that works. npm 1.0 installs everything locally in the project folder by default now, that probably has something to do with it.\n. ",
    "tazercat": "I just went through the online instructions for installing node.js and node.io.  I get the same error even after installing htmlparser using npm.\nI'm amped about node.io, btw.  \nnpm version 0.3.18\nnode.io version 0.2.5-6\nnode version 0.4.6\nWhen run:\n\nvar nodeio = require('node.io');\nvar options = {timeout: 10};\nexports.job = new nodeio.Job(options, {\n    input: ['hello', 'foobar','weather'],\n    run: function (keyword) {\n        var self = this, results;\n        this.getHtml('http://www.google.com/search?q=' + encodeURIComponent(keyword), function (err, $) {\n            results = $('#resultStats').text.toLowerCase();\n            self.emit(keyword + ' has ' + results);\n        });\n    }\n});\n\nI get:\n\nnode.js:134\n        throw e; // process.nextTick error, or 'error' event on first tick\n        ^\nError: Cannot find module '../../vendor/htmlparser/lib/htmlparser'\n    at Function._resolveFilename (module.js:320:11)\n    at Function._load (module.js:266:25)\n    at require (module.js:348:19)\n    at [object Object].prepareHtmlparser (/Users/scott/node/lib/node/.npm/node.io/0.2.5-6/package/lib/node.io/dom.js:100:38)\n    at [object Object].getHtml (/Users/scott/node/lib/node/.npm/node.io/0.2.5-6/package/lib/node.io/request.js:95:14)\n    at [object Object].run (/Users/scott/Desktop/Projects/node/keywords.js:8:14)\n    at EventEmitter. (/Users/scott/node/lib/node/.npm/node.io/0.2.5-6/package/lib/node.io/process_worker.js:254:28)\n    at EventEmitter.emit (events.js:61:17)\n    at Array. (/Users/scott/node/lib/node/.npm/node.io/0.2.5-6/package/lib/node.io/process_worker.js:106:24)\n    at EventEmitter._tickCallback (node.js:126:26)\n\n. YEAAAHHHHH!!   Thank you!!\nOn Mon, Apr 18, 2011 at 1:54 PM, chriso \nreply@reply.github.comwrote:\n\nSorry, forgot to update all htmlparser references when I removed the\nsubmodule in this commit.\nThis commit\nfixes the problem.\nsudo npm install node.io and it'll be working.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/chriso/node.io/issues/23#comment_1023406\n. \n",
    "jonbros": "Hi, mind sharing some thoughts about how you plan to implement!? Thanks in advance.\n. ",
    "mantastrunce": "I'm crawling an RSS feed continuously and would like to use proper crawling etiquette.\nThank you, your implementation works just great.\n. ",
    "fuzzthink": "Correction, js version did work, just coffee didn't work.\ncoffeescript: 1.1.1\n. Got it, example missing:\n@class = SavePage\n@job = new SavePage()\nLeaving issue open so you update doc.  Also while you're at it, the -g option to install didn't work me..\n. ",
    "ttilley": "random and mostly unrelated aside: npm has a package.json attribute that states something should be installed globally unless told otherwise (as far as I understand it), and display a warning when installed locally. {\"preferGlobal\":true}\nhttps://github.com/isaacs/npm/blob/master/doc/json.md\n. ",
    "tchaymore": "Thanks!  I reinstalled and then had to rearrange my folders a bit but now it's working.\n. Now I'm not sure I remember.  I think I uninstalled everything (including\nNPM) and then made sure that I was installing everything in the same folder\nand it worked.  I think.\nOn Tue, Aug 23, 2011 at 5:01 AM, rvavruch \nreply@reply.github.comwrote:\n\nHi tchaymore, I'm having the same problem. Can you specify exactly what you\ndid to fix this?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/chriso/node.io/issues/28#issuecomment-1879122\n\n\nThomas Haymore\nStanford Law School\nStanford University, Management Science & Engineering\nTwitter: @tchaymore\n. ",
    "rvavruch": "Hi tchaymore, I'm having the same problem. Can you specify exactly what you did to fix this?\n. ",
    "madhums": "Ok, I am emitting it only once. But here, anything within the second getHtml method is not being executed, when I debug I can see the GET request for google.com but it never gets a response.\nvar nodeio = require('node.io'),\n     options = {timeout: 1000, max: 30, jsdom: false};\n\nexports.job = new nodeio.Job(options, {\n    input : ['CHI'],\n    run: function (keyword) {\n        outerThis = this;\n        this.getHtml('http://www.kayak.com/s/search/air/?l1=ATL&df=us1&ft=ow&d1=6/21/2011&l2='+keyword, function (err, $, data, headers) {\n            var results = 'outside google';\n\n            $('.flightresult').each(function(selector){\n                outerThis.getHtml('http://www.google.com/', function(err, $, data, headers) {\n                    results = \"inside google\";  // NOW THIS SHOULD BE SET\n                });\n            });\n            this.emit(results); // SHOULD OUTPUT \"inside google\"\n        });\n    }\n});\n. when I use jsdon : true option, I get $ is undefined. node.io version is 0.3.0, jquery version is 1.5.1 and jsdom version is 0.2.0. Do you have any idea why I am getting this error?\n. ok, i figured the problem.  After commenting out the below lines in lib/node.io/dom.js the timeout error stopped!\n\n    //window.onload = function() {\n        callback.apply(self, [null, $, data, headers, response]);\n    //}\n\ncan anyone throw some light?\n. ",
    "gabrielstuff": "Hello,\nI've been looking for test example about multiple call to getHTML. This is not clearly indicated. Thus, I'm getting totally wrong and non consitent data.\nI really would like to enjoy the power of node.io but nested query are a primer for me.\nPlease find the code bellow :\n```\nvar nodeio = require('node.io');\nvar main_url = 'http://www.societe.com';\nvar options = {\n    max: 20,\n    timeout: 20,\n    jsdom: true\n};\nexports.job = new nodeio.Job(options, {\n    input: false,\n    run: function() {\n        var arg = this.options.args[0];\n        this.getHtml('http://www.societe.com/cgi-bin/mainsrch?champ=' + encodeURIComponent(arg), function(err, $) {\n            //Handle any request / parsing errors\n            if (err) this.exit(err);\n        try {\n            var results_url = [],\n                results_name = [],\n                output = [],\n                siret = [],\n                ca_soc = [],\n                siege_soc = [],\n                matriculation = [],\n                categorie = [],\n                juridique = [],\n                ca_, ceo_ = [],\n                roi, innerEl = this;\n\n            $('table.GlobalTable a.Blue12').each(function(index, el) {\n                var url_ = main_url + el.href;\n                results_url.push(url_);\n                results_name.push($(el).text());\n\n                innerEl.getHtml(url_, function(err, $) {\n                    if (err) innerEl.exit(err);\n\n                    try {\n                        //roi = $('td#GreffeB td');\n                        $(\"td#GreffeB table table td\").each(function(index, el) {\n\n                            if ($(el).text().indexOf(\"SIRET\") != -1) {\n                                $(el).parent(\"tr\").children().each(function(index, el) {\n                                    if (index == 1) siret.push($(el).text().trim());\n                                });\n                            }\n                            if ($(el).text().indexOf(\"Capital social\") != -1) {\n                                $(el).parent(\"tr\").children().each(function(index, el) {\n                                    ca_soc.push($(el).text().trim());\n                                });\n                            }\n                            if ($(el).text().indexOf(\"ge social\") != -1) {\n                                $(el).parent(\"tr\").children().each(function(index, el) {\n                                    if (index == 1) siege_soc.push($(el).text().trim());\n                                });\n                            }\n                            if ($(el).text().indexOf(\"gorie\") != -1) { //for categorie\n                                $(el).parent(\"tr\").children().each(function(index, el) {\n                                    if (index == 1) categorie.push($(el).text().trim());\n                                });\n                            }\n                            if ($(el).text().indexOf(\"matriculation\") != -1) { //for categorie\n                                $(el).parent(\"tr\").children().each(function(index, el) {\n                                    if (index == 1) matriculation.push($(el).text().trim());\n                                });\n                            }\n                            if ($(el).text().indexOf(\"juridique\") != -1) { //for categorie\n                                $(el).parent(\"tr\").children().each(function(index, el) {\n                                    if (index == 1) juridique.push($(el).text().trim());\n                                });\n                            }\n                            //console.log($(el).text().trim());\n                        });\n                        for (var i = 0, len = results_name.length; i < len; i++) {\n                            output.push('[' + results_name[i] + '] ' + results_url[i] + \" | \" + siret[i] + \" | \" + ca_soc[i] + \" | \" + categorie[i]);\n                        }\n                        this.emit(output);\n                    } catch (err) {\n                        console.log(err);\n                    }\n                });\n            });\n        } catch (err) {\n            console.log(err);\n        }\n    });\n}\n\n});\n```\nI'm using jQuery to manipulate the dom.\nHope you could help. \nThanks !\n. Hello !\nAlmost fixed :+1: \nOnly thing I miss is the emit thing. Currently as Documentation stands emit close the connection and return everything.\nThing is that I have to parse all the subrequest... so I can not emit in one of the subrequest or I will loose the next data.\nThis code below print well in the console but of course I would prefer to scrap, order the data and put a nice CSV or anything...\nthanks !\nSee attached code : \n```\nvar nodeio = require('node.io');\nvar main_url = 'http://www.societe.com';\nvar options = {\n    max: 20,\n    timeout: 20,\n    jsdom: true\n};\nexports.job = new nodeio.Job(options, {\n    input: [{\n        type: 'initial',\n        url: main_url + '/cgi-bin/mainsrch?champ=' + encodeURIComponent(process.argv[3])\n    }],\n    run: function() {\n        var self = this;\n        var output = [];\n    if(self.assigned_input.type === 'initial') {\n        this.getHtml(self.assigned_input.url, function(err, $) {\n            //Handle any request / parsing errors\n            if(err) this.exit(err);\n            try {\n\n                $('table.GlobalTable a.Blue12').each(function(index, el) {\n                    var url_ = main_url + el.href;\n\n                    self.add({\n                        type: 'subrequest',\n                        url: main_url + el.href,\n                        name: $(el).text()\n                    });\n                    self.skip();\n                });\n            } catch(err) {\n                console.log(err);\n            }\n        });\n    } else {\n        //console.log(self.assigned_input.name);\n        this.getHtml(self.assigned_input.url, function(err, $) {\n\n            if(err) this.exit(err);\n\n            try {\n                var foundin = $('td:contains(\"Immatriculation\"):last');\n                var siret = \"\",\n                    ca_soc = \"\",\n                    siege_soc = \"\",\n                    matriculation = \"\",\n                    categorie = \"\",\n                    juridique = \"\",\n                    ca_ = \"\",\n                    ceo_ = [];\n\n                $($(foundin).parent().parent()).find('td').each(function(index, el) {\n                    if($(el).text().indexOf(\"SIRET\") != -1) {\n                        $(el).parent(\"tr\").children().each(function(index, el) {\n                            if(index == 1) {\n                                siret = $(el).text().trim();\n                            }\n                        });\n                    }\n                    if($(el).text().indexOf(\"Capital social\") != -1) {\n                        $(el).parent(\"tr\").children().each(function(index, el) {\n                            ca_soc = $(el).text().trim();\n                        });\n                    }\n                    if($(el).text().indexOf(\"ge social\") != -1) {\n                        $(el).parent(\"tr\").children().each(function(index, el) {\n                            if(index == 1) siege_soc = $(el).text().trim();\n                        });\n                    }\n                    if($(el).text().indexOf(\"gorie\") != -1) { //for categorie\n                        $(el).parent(\"tr\").children().each(function(index, el) {\n                            if(index == 1) categorie = $(el).text().trim();\n                        });\n                    }\n                    if($(el).text().indexOf(\"matriculation\") != -1) { //for categorie\n                        $(el).parent(\"tr\").children().each(function(index, el) {\n                            if(index == 1) matriculation = $(el).text().trim();\n                        });\n                    }\n                    if($(el).text().indexOf(\"juridique\") != -1) { //for categorie\n                        $(el).parent(\"tr\").children().each(function(index, el) {\n                            if(index == 1) juridique = $(el).text().trim();\n                        });\n                    }\n                });\n\n                var foundin = $('td:contains(\"Dirigeant\"):last');\n\n                foundin.children('table:first').find('td').each(function(index, el) {\n                    if(($(el).text().indexOf(\"ant\") != -1) || //G\u00e9rant\n                    ($(el).text().indexOf(\"ateur\") != -1) || //Administrateur\n                    ($(el).text().indexOf(\"DG\") != -1) || //DG\n                    ($(el).text().indexOf(\"dent\") != -1)) { // Pr\u00e9sident\n                        $(el).parent(\"tr\").children().each(function(index, el) {\n                            if(index == 1) {\n                                ceo_.push($(el).text().trim());\n                            }\n                        });\n                    }\n                });\n                output = \"[\" + $(\"h1\").text() + \"] \" + this.last.url + \" | \" + siret + \" | \" + ca_soc + \" | \" + categorie + \" \" + ceo_.join(\" \");\n                console.log(output);\n            } catch(err) {\n                console.log(err);\n            }\n        });\n    }\n}\n\n});\n``\n. It works fine, thanks ! \nBut this.emit(output) only return the first query that works. All the other are not returned.\nSorry for thefunction(input)` that I've forgot.\n. Hum, not sure I get it ? Are we suppose to get the correct character with node.io + v0.8.8 ?\nI got iso-8859-1 html scrap and it fails to retrieve correct character set.\nThanks !\n. ",
    "rvanrooy": "Hi Chris. Thank you so much for getting back to me. Unfortunately,\nthis didn't work for me.\nThanks for replying.\nOn Wed, Jun 22, 2011 at 12:52 PM, chriso\nreply@reply.github.com\nwrote:\n\nHey, sorry for the delay in getting back to you. HTTP proxy support is 100% untested but I've made a few changes in 0.3.3. Try this:\ntest.js\n``` javascript\nvar nodeio = require('node.io');\nvar options = {\n\u00a0 \u00a0proxy: 'http://127.0.0.1:8080'\n}\nexports.job = new nodeio.Job(options, {\n\u00a0 \u00a0input: false,\n\u00a0 \u00a0run: function () {\n\u00a0 \u00a0 \u00a0 \u00a0this.get('http://www.google.com/', function (err, data) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0this.emit(data);\n\u00a0 \u00a0 \u00a0 \u00a0});\n\u00a0 \u00a0}\n});\n```\nbash\nio --debug test.js\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/chriso/node.io/issues/32#issuecomment-1417233\n. This is the output from the code that chriso provided.\n\nDEBUG: Running 1 worker..\nDEBUG: GET http://localhost:3128/ (request 83632)\nDEBUG:   | GET / HTTP/1.1\nDEBUG:   | Accept: /\nDEBUG:   | Accept-charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\nDEBUG:   | User-agent: node.io\nDEBUG:   | Host: www.google.com\nDEBUG: ERR Request 83632 timed out (http://localhost:3128/)\nDEBUG: ERR Request 83632 failed with (undefined) Error: socket hang up\n(http://localhost:3128/)\nOK: Job complete\nI can curl through the proxy, and npm works through the proxy. When\nconnecting from home server (no proxy) it works fine. If you have any\nthoughts, would like to hear them.\nThanks,\nOn 14 July 2011 15:22, blup\nreply@reply.github.com\nwrote:\n\nI tested it yesterday with a public proxy and it seemed to work fine.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/chriso/node.io/issues/32#issuecomment-1571404\n. After this change, it works beautifully.\n\nThanks!\nOn 19 July 2011 13:45, chriso\nreply@reply.github.com\nwrote:\n\nHey sorry this has been dragging along, I don't have a great deal of time to test it. I tested a request through a proxy after this commit and it seemed to work correctly. Could you test it again and let me know how you go?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/chriso/node.io/issues/32#issuecomment-1606309\n. Hi Chriso.  I realize you don't have too much time, but just thought I'd raise an issue with the current implementation. It seems that only the first input value goes through the proxy, but subsequent inputs in the same job have the host rewritten so it tries to actually get the data from the proxy and not through the proxy. If I can figure out how to build node.io, I'll try have a look and see if I can figure it out myself.\n\nThanks\n-edit I mistakenly sent this from another account.\n. Just want to note that while v0.3.5 and v0.3.6 got the first request in the job through the proxy, but not subsequent ones, v0.3.7 does not allow any requests to get through correctly.\nI've tracked it to commit 7b602dfa5cd3b719e1600a6953cb842f7f8849c5, specifically line 290 in lib/node.io/request.js.\ncommenting it out once again allows the first request through the proxy. It still doesn't give me insight into what changes between the first request and the rest, but I'm still trying to figure that out.\nUpdate:\nafter doing some logging, It seems like there is a recursion or loop issue at play. I put a console.log on line 598 in request.js to output the value of urlhost in the function HttpProxy.\nIf I have 3 requests to google.com,\nThe first one (which works) outputs,\nHost: google.com\nThe second one:\nHost: google.com\nHost: localhost:3128\nThe third one:\nHost: google.com\nHost: localhost:3128\nHost: localhost:3128\nIt seems that for input n, the HttpProxy function is called n times.\nDoes anyone know where the looping comes from?\nThanks,\n. Seems to have fixed the issue. Thanks!\n. ",
    "blup": "I tested it yesterday with a public proxy and it seemed to work fine.\n. pbowyer, do you mind if i ask you you found this? thanks.\n. i can confirm what pbowyer said. i thought the proxy was working (blindly), but i just tested against a server of mine and with netstat i get my home IP, not the proxy i set up.\n. Doesnt \"-s, --silent (Hide console status messages)\" work for you?\n. ",
    "pbowyer": "I can confirm that the first request goes through the proxy, but following ones don't. Haven't spotted what the issue is in the source though!\n. blup: multiple tests with a local version of SQUID and also with Charles Proxy, monitoring where they go... but mostly because follow-up requests fail since they are querying the wrong URL. Debug mode shows the error, the proxies merely provide a view of what's happening.\n. When I console.log e, the exception message is \"Cannot find module 'jsdom'\" - yet it appears to be installed?\n. A follow-up: I got past this error by playing with which packages were installed locally and remotely, to end up with the following:\nbash\n$ npm list\n/Users/peter\n\u251c\u2500\u2500 coffee-script@1.1.1 \n\u251c\u2500\u2500 htmlparser@1.7.3 \n\u251c\u2500\u2500 jquery@1.6.2 \n\u251c\u2500\u252c jsdom@0.2.0 \n\u2502 \u251c\u2500\u2500 htmlparser@1.7.3 \n\u2502 \u2514\u2500\u2500 request@1.9.8 \n\u251c\u2500\u252c node.io@0.3.3 -> /usr/local/lib/node_modules/node.io\n\u2502 \u251c\u2500\u2500 coffee-script@1.1.1 \n\u2502 \u251c\u2500\u2500 htmlparser@1.7.3 \n\u2502 \u2514\u2500\u252c jquery@1.6.2 \n\u2502   \u2514\u2500\u252c jsdom@0.2.0 \n\u2502     \u2514\u2500\u2500 request@1.9.8 \n\u2514\u2500\u2500 request@1.9.8\nAnd\nbash\n$ npm list -g\n/usr/local/lib\n\u251c\u2500\u252c jsdom@0.2.0 \n\u2502 \u251c\u2500\u2500 htmlparser@1.7.3 \n\u2502 \u2514\u2500\u2500 request@1.9.8 \n\u251c\u2500\u252c node.io@0.3.3 \n\u2502 \u251c\u2500\u2500 coffee-script@1.1.1 \n\u2502 \u251c\u2500\u2500 htmlparser@1.7.3 \n\u2502 \u2514\u2500\u252c jquery@1.6.2 \n\u2502   \u2514\u2500\u252c jsdom@0.2.0 \n\u2502     \u2514\u2500\u2500 request@1.9.8 \n\u2514\u2500\u252c npm@1.0.15 \n  \u251c\u2500\u2500 abbrev@1.0.3 \n  \u251c\u2500\u2500 node-uuid@1.2.0 \n  \u251c\u2500\u2500 nopt@1.0.4 \n  \u2514\u2500\u2500 semver@1.0.7\nOnce that was fixed however I encountered a further issue - valid jQuery that would run in my browser wouldn't execute correctly and I had to rewrite my code. Specifically:\njavascript\n            $('.listing').each(function (i, listing) {\n                var project = {};\n                project.date = $('.date', listing);\n                projects.push(project);\n            });\nThe third line didn't work and had to be rewritten as project.date = $(listing).find('.date').text().trim();, in order to prevent the following error:\nbash\n$ node.io -g nuffield\nDEBUG: Running 1 worker..\nDEBUG: GET http://www.nuffieldtheatre.co.uk/events/category/C81/ (request 71623)\nDEBUG:   | GET /events/category/C81/ HTTP/1.1\nDEBUG:   | Accept: */*\nDEBUG:   | Accept-charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\nDEBUG:   | User-agent: node.io\nDEBUG:   | Host: www.nuffieldtheatre.co.uk\nDEBUG: 200 http://www.nuffieldtheatre.co.uk/events/category/C81/ (response 71623)\nDEBUG:   | Date: Sun, 17 Jul 2011 19:50:23 GMT\nDEBUG:   | Server: Apache/2.0.54\nDEBUG:   | X-powered-by: PHP/5.2.14\nDEBUG:   | Expires: Mon, 26 Jul 1997 05:00:00 GMT\nDEBUG:   | Pragma: no-cache\nDEBUG:   | Set-cookie: exp_last_visit=995597423; expires=Mon, 16-Jul-2012 19:50:23 GMT; path=/,exp_last_activity=1310957423; expires=Mon, 16-Jul-2012 19:50:23 GMT; path=/,exp_tracker=a%3A1%3A%7Bi%3A0%3Bs%3A21%3A%22%2Fevents%2Fcategory%2FC81%2F%22%3B%7D; path=/\nDEBUG:   | Last-modified: Sun, 17 Jul 2011 19:50:23 GMT\nDEBUG:   | Vary: Accept-Encoding\nDEBUG:   | Connection: close\nDEBUG:   | Transfer-encoding: chunked\nDEBUG:   | Content-type: text/html\n{ '0': \n   { _attributes: \n      { _nodes: {},\n        _nsStore: {},\n        length: 0,\n        _ownerDocument: [Object],\n        _readonly: false,\n        _parentNode: [Circular] },\n     _ownerDocument: \n      { _childNodes: [Object],\n        _ownerDocument: [Circular],\n        _attributes: [Object],\n        style: [Object],\n        _childrenList: [Object],\n        _childNodesList: [Object],\n        _tagName: '#document',\n        _nodeName: '#document',\n        _contentType: 'text/html',\n        _doctype: [Object],\n        _implementation: [Object],\n        _documentElement: [Object],\n        _ids: [Object],\n        _readonly: false,\n        _URL: '/usr/local/lib/node_modules/node.io/lib/node.io/dom.js',\n        _documentRoot: '/usr/local/lib/node_modules/node.io/lib/node.io',\n        _queue: [Object],\n        readyState: 'complete',\n        _version: 1337,\n        location: [Object],\n        _parentWindow: [Object] },\n     _childNodes: [ [Object] ],\n     style: { position: 'st\n/usr/local/lib/node_modules/node.io/node_modules/jquery/dist/node-jquery.js:92\n    userAgent = navigator.userAgent,\n                      ^\nTypeError: Cannot read property 'userAgent' of undefined\n    at /usr/local/lib/node_modules/node.io/node_modules/jquery/dist/node-jquery.js:92:23\n    at /usr/local/lib/node_modules/node.io/node_modules/jquery/dist/node-jquery.js:964:2\n    at Function.create (/usr/local/lib/node_modules/node.io/node_modules/jquery/dist/node-jquery.js:8996:2)\n    at /usr/local/lib/node_modules/node.io/lib/node.io/dom.js:61:37\n    at Object.<anonymous> (/Users/peter/Sites/nodeio/nuffield.js:27:32)\n    at Function.each (/usr/local/lib/node_modules/node.io/node_modules/jquery/dist/node-jquery.js:670:20)\n    at [object Object].each (/usr/local/lib/node_modules/node.io/node_modules/jquery/dist/node-jquery.js:288:17)\n    at [object Object].<anonymous> (/Users/peter/Sites/nodeio/nuffield.js:25:27)\n    at [object Object].parseHtml (/usr/local/lib/node_modules/node.io/lib/node.io/dom.js:66:18)\n    at [object Object].<anonymous> (/usr/local/lib/node_modules/node.io/lib/node.io/request.js:108:18)\nIt's a very strange error message to have, and I don't understand why this jQuery should cause it to happen.\n. Source code for the scraper @ https://gist.github.com/1088002\n. Thanks Chris! Much appreciated.\n. ",
    "phillro": "I believe I am experiencing this problem, but with on the first request as well as all subsequent ones:\nio --debug jobs/proxyTest2.js http://google.com/news\nDEBUG: Running 1 worker..\nDEBUG: GET http://192.168.2.1:8123/news (request 33381)\nDEBUG:   | GET /news HTTP/1.1\nDEBUG:   | Accept: /\nDEBUG:   | Accept-charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\nDEBUG:   | User-agent: node.io\nDEBUG:   | Host: google.com:8123\nDEBUG: 404 http://192.168.2.1:8123/news (response 33381)\nDEBUG:   | Connection: close\nDEBUG:   | Date: Fri, 07 Oct 2011 20:25:42 GMT\nDEBUG:   | Content-type: text/html\nDEBUG:   | Content-length: 435\nDEBUG:   | Expires: 0\nDEBUG:   | Cache-control: no-cache\nDEBUG:   | Pragma: no-cache\nDEBUG: ERR Request 33381 failed with code 404 (http://192.168.2.1:8123/news)\nERROR: 404\n. ",
    "kclay": "I was but just changed the way I'm creating the based methods, the problem was adding new methods to the extended Job would loose its scope since in process_worker.js a new Job instance is creating passing along a select number of functions (in the createInstance function).So when this happens the scope was being lost when calling \"this.\"\n. Sorry, after looking at the code I realized I needed to pass the input as an array.\n. ",
    "devjones": "Hey chris, i think you ought to make jquery selectors the default option.  This same issue tripped me up for quite a time last night and i can't think of any advantages that the current default has over jquery.  \nFurthermore, jquery selectors return a jquery object so I can do things like\nsections = $('.section');\n$.each(sections, function (i,sec) {\n  chi = $(sec).find('.child');\n})\nthose few lines of code would avoid a lot of workarounds i had to do for the current default.\n. To expand on my previous comment, the current default will often fail in a common scraping scenario:\nImagine you are scraping a page with 5 sections, where the sections contains a header and an author.  If one of the headers is missing from a section, then the current default selector fails.\nWith the current default, you'd have to do something like:\nheaders = $('.section .header');\nauthors = $('.section .author');\nAnd then you pray and hope that there is the same amount of headers as authors, otherwise your scraped data object will be mix-matched.\nThe code i put in the previous comment using jquery would avoid this problem, by iterating through each section individually, and doing a selector 'find' function on each section to find the children of each individual section.  It appears at first review that the current default selector engine does not have a 'find' or similar method to traverse through children.\n. To anyone with the same issue, it appears you need to call:\nreturn this.skip();\nto actually skip the scraping for the current page.  This is a bit different from emit, where you only need to do :\nthis.emit(data);\nCan be a bit tricky.  I'd recommend using similar syntax for both skip and emit to prevent confusion.\n. ",
    "derekdr": "Even if I didn't run the code from a separate node process started with the node *.js command (without node.io options that is) node.io would still kill the process.\n'quiet' might not be the most excellent choice of words, what I'm really asking for is a 'void' option for jobs. Or actually, just not shutting down the node.io (or node) process after a job is done.\n. Thanks! Just what I needed!\n. This might help you:\nhttps://github.com/chriso/node.io/issues/35\n. ",
    "tarun1793": "Facing the same problem, skip doesnt iterate over the next element in input array.\nWorks in run, but not in @post or @get, and yes, using a fat arrow function for @post, whereas @emit works\n. ",
    "zdwalter": "any update?\n. ",
    "krzysztofantczak": "I see that this comment exist since 2 years, but i'm not able to resist with answering on that... The thing is, that crawler without basic stuff as POST support when You thinking about real life crawlers are mandatory these days. Ok, if You have only fun with it, and You are scrapping some google results You're ok, but it can't work with some more advanced websites, where even internal navigation is based on POST requests. Is this project alive? Can we bring it to live if it's not? I can see some nice ideas here, but codebase seems to be outdated, and there is lack of really MUST HAVE features for any good crawler framework.\n. ",
    "ercu": "found a similar issue: https://github.com/chriso/node.io/pull/40\n. ",
    "odbol": "Thanks! Now documented!\nIt didn't quite fit for me since I don't always want to pause during a skip() so I took your advice and used setTimeout(). Will post that code soon...\n. ",
    "tayknight": "which node-waf  returns nothing, either regular user or sudo.\n. node v0.4.10\nnpm 1.0.22\n. Re-installation worked. Thanks for the quick help.\n. ",
    "frederickcook": "See https://github.com/chriso/node.io/pull/56 regarding errors.\nRegarding breaking .each, in jQuery, if no element is found with a given selector, [] is returned, a single element returns [element], and multiple returns [element1, element2]. Perhaps that would be a better convention? That would break a lot of code, though.\n. ",
    "ladariha": "Thanks a lot, that's what I needed.\n. ",
    "st3phan": "How would this work if I want to run my script from within another script? I can't seem to figure out how to use the output from job1 as input from job 2. Here's my code:\n``` javascript\nvar options = { timeout: 10 };\n\nvar job1 = new nodeio.Job({\n    input: ['www.domain.tld'],\n    run: function(url) {\n        var self = this;\n        this.getHtml(url, function (err, $) {\n            if (err) throw err;\n\n            var urls = [];\n            $('#links li').each(function(li) {\n                var url = $('a', li).attribs.href;\n                urls.push(url);\n            });\n\n            self.emit(urls);\n        });\n    }\n});\n\nvar job2 = new nodeio.Job({\n    // input: ???,\n    run: function(url) {\n        var self = this;\n        // save to database\n        self.emit(url);\n    }\n});\n\nsetInterval(function() {\n    nodeio.start(job1, options, function(err, output) {\n        // How do I use output as input for following job\n        nodeio.start(job2, options, function(err, output) {\n            console.log(output);\n        });\n    }, true);\n}, 10000)\n\n```\n. Great, thank you @chriso !\n. ",
    "davidlevy": "Should be     \nnodeio.start(job2, options, function (err, output) {\n        console.log(output); // => [4, 8, 12 ]\n    }, true);\nThanks !\n. ",
    "VAS": "@chriso : your example doesn't compile correctly. Gives: Cannot read property 'options' of undefined.\n. Thanks @chriso , sorry to see nodeio go, it has helped us a ton.\n. ",
    "creativetags": "I think the problem is I'm selecting more than one element and so it's creating an array instead of an object.\n. Thanks Chris. Is there a full list of supported selectors? Can't seem to find it on the node-soupselect page.\n. ",
    "bebraw": "+1. It would be awesome to have this fixed.\n. Awesome! Thanks. I think I know where I went wrong now. :)\n. ",
    "janarthananramar": "+1. It would be great if you can post some nested getHtml examples,  at the moment its not working.\n. ",
    "mhart": "Yeah, you can't parse multiple times using a handler without a reset in between: https://github.com/tautologistics/node-htmlparser/blob/master/lib/htmlparser.js#L656\n. ",
    "zgohr": "I have the fix, I'll make a pull request this afternoon\n. ",
    "amih": "Thanks!\nI did what you suggested and it still doesn't work, probably something with my setup... I hope it will be obvious to you - I'm clue less.\nI ran npm install node.io in the same directory, here is the output:\n\nnpm WARN cron@0.1.3 package.json: bugs['web'] should probably be bugs['url']\nnpm WARN htmlparser@1.7.3 package.json: bugs['web'] should probably be bugs['url']\nnpm WARN htmlparser@1.6.2 package.json: bugs['web'] should probably be bugs['url']\n\ncontextify@0.0.6 preinstall /home/ami/node_modules/node.io/node_modules/jsdom/node_modules/contextify\nnode-waf clean || true; node-waf configure build\n\nNothing to clean (project not configured)\nSetting srcdir to                        : /home/ami/node_modules/node.io/node_modules/jsdom/node_modules/contextify \nSetting blddir to                        : /home/ami/node_modules/node.io/node_modules/jsdom/node_modules/contextify/build \nChecking for program g++ or c++          : /usr/bin/g++ \nChecking for program cpp                 : /usr/bin/cpp \nChecking for program ar                  : /usr/bin/ar \nChecking for program ranlib              : /usr/bin/ranlib \nChecking for g++                         : ok\nChecking for node path                   : not found \nChecking for node prefix                 : ok /usr/local \n'configure' finished successfully (0.785s)\nWaf: Entering directory /home/ami/node_modules/node.io/node_modules/jsdom/node_modules/contextify/build'\n[1/2] cxx: src/contextify.cc -> build/Release/src/contextify_1.o\n[2/2] cxx_link: build/Release/src/contextify_1.o -> build/Release/contextify.node\nWaf: Leaving directory/home/ami/node_modules/node.io/node_modules/jsdom/node_modules/contextify/build'\n'build' finished successfully (3.435s)\nnpm WARN prefer global node.io@0.4.5 should be installed with -g\nnode.io@0.4.5 ../../node_modules/node.io \n\u251c\u2500\u2500 jquery@1.6.3\n\u251c\u2500\u2500 request@2.2.9\n\u251c\u2500\u2500 coffee-script@1.1.3\n\u251c\u2500\u2500 htmlparser@1.7.3\n\u2514\u2500\u2500 jsdom@0.2.10\n\nThen I tried ami@amihlaptop:~/dev/scraping$ node.io --debug myjob.js again and got:\n\nDEBUG: Attempting to load require('/home/ami/dev/scraping/myjob.js')\nDEBUG: Running 1 worker..\nnode.js:201\n        throw e; // process.nextTick error, or 'error' event on first tick\n              ^\nTypeError: Cannot call method 'match' of undefined\n    at [object Object].doRequest (/home/ami/local/node/lib/node_modules/node.io/lib/node.io/request.js:222:19)\n    at [object Object].get (/home/ami/local/node/lib/node_modules/node.io/lib/node.io/request.js:53:10)\n    at [object Object].run (/home/ami/dev/scraping/myjob.js:6:14)\n    at EventEmitter. (/home/ami/local/node/lib/node_modules/node.io/lib/node.io/process_worker.js:253:28)\n    at EventEmitter.emit (events.js:64:17)\n    at Array.0 (/home/ami/local/node/lib/node_modules/node.io/lib/node.io/process_worker.js:113:24)\n    at EventEmitter._tickCallback (node.js:192:40)\n\nThis is the directory's content:\n\nami@amihlaptop:~/dev/scraping$ ll\ntotal 12\ndrwxrwxr-x  2 ami ami 4096 2011-12-06 15:59 ./\ndrwxr-xr-x 17 ami ami 4096 2011-12-06 13:26 ../\n-rw-rw-r--  1 ami ami  334 2011-12-06 13:27 myjob.js\n. OMG! I'm so stupid!\nI ran the example without a required parameter - the url I want to scrape!!\nYour comment helped - I did call the get function without a required parameter.\n\nI just tested node.io --debug myjob.js http://google.com and it works perfectly.\nSorry to waste brain cycles...\nThanks anyway!\nThe job is from the tutorial:\n```var nodeio = require('node.io');\nexports.job = new nodeio.Job({\n    input: false,\n    run: function () {\n        var url = this.options.args[0];\n        this.get(url, function(err, data) {\n            if (err) {\n                this.exit(err);\n            } else {\n                this.emit(data);\n            }\n        });\n    }\n});\n\n. ",
    "snez": "+1\n. ",
    "crystalneth": "This is one of the first things mentioned under \"getting started\" and it's broken. Suggest at least removing it from the doc for now as it gives the impression something is terribly wrong when trying to \"get started.\"\n. ",
    "oncletom": "Hi,\nwhile looking on page_rankr, I found they were calling another URI: toolbarqueries.google.com.\nA change occured in early October '11; maybe it's related.\nAnyway, http://www.google.com/search?client=navclient-auto&ch=<HASH>&features=Rank&q=info:<URL> should be replaced with http://toolbarqueries.google.com/tbr?client=navclient-auto&ch=<HASH>&features=Rank&q=info:<URL> (also works in HTTPS).\nI submit you a pull request.\n. Well, you can dismiss this pull request: node.io is available from CLI\u2026 I may have not sleep enough I guess ;-)\nwhich node.io returns the expected result: /usr/local/bin/node.io.\nI am on OSX Lion.\nSorry.\n. ",
    "discoverpost": "chriso, could you explain how the window object selects elements, and how the $ which appears to be undefined, comes into play?\"\nEDIT: nevermind, i didnt pass the $ in function(err,$){}\n. ",
    "ababushkin": "Thanks for the example Chris.\nIt turns out that jsdom has a memory issue, which is what was causing my application to die :)\n. ",
    "wzrd-clss": "<meta http-equiv=\"refresh\" content=\"5;URL=/blah/blah.com\"\nwhen a page refreshes/redirects itself like this I have to manually follow the link. apparantly request.js has the same issue. https://github.com/mikeal/request/issues/92\nvar url = submitform.do?this=that;\nvar nextPage;\nthis.getHtml(url, function (err, $) {\n            $('meta[http-equiv=refresh]').each(function (j, a) {\n                nextPage = a.content.match(REgExp);//match a relative link in this attribute\n            });\n            url = \"www.aa.com/\" + nextPage;\n            this.getHtml(url, parsePage);\n        });\nif there is a cleaner way to nest the requests please let me know\n. ",
    "KyleAMathews": "I ran npm install -g node.io request and that worked! I think the problem was that request needed to be installed globally. Thanks!\n. ",
    "jamesduncombe": "Got issues with that here too. You're right, changing that line fixes it! Nice one!\n. Hi Chris,\nThanks for the quick reply. I checked out the node.js manual before posting but then hit a wall when I figured (as you said) that it's on a dependency so I can't use setMaxListeners().\nI'll put something in the node.js ticket.\nThanks for the solution too. I know it's not pretty but I might need to use it.\nCheers,\nJames\n. ",
    "lookfirst": "Right, I'm not questioning the parser, I'm questioning the available selector methods, of which cheerio is superior. ;-)\nI figured out a workaround... @get .... (err,data) => ... $ = cheerio.load(data)\n. ",
    "irony": "I understand, no problem. Do you want me to ask @Mikeal to merge this fix as well?\n. ",
    "jacobSingh": "I don't read coffee all that well, but I'm curious what all the cursor stuff is about.\nDoesn't\nc.find().skip(start).limit(num).toArray(function(err, results) {\n        if (results.length == 0) {\n          cb(false);\n        }\n        cb(results);\n      });\nWork okay for input?\nI do see one issue, which is that the last batch (if you're doing concurrent procs) doesn't count right, but that's a node.io issue I think.\n. ",
    "Robdr": "Sorry for the extremely late reply. In 0.4.10 the issue has been solved indeed!\n. ",
    "jonlong": "I'm currently testing $.ready(function(){}); inside of the run method and getting an Object ..... has no method 'ready in the process.  Is this related or am I simply configuring/calling something incorrectly?\nThanks!\n. Excellent, thank you!\n. Are you using the default selector engine (soupselect)?\nIf so, I believe it only supports the following:\n- type selectors\n- class selectors\n- id selectors\n- attribute selectors\n- descendant combinator\n(Reference)\nIn your job options, if you make sure to set jsdom: true you should be able to use jQuery's selector engine instead.\n. Looks like you might have the jsdom option in the wrong spot.  Try putting it in the actual job options, like this:  http://pastie.org/4360028\nAlso, for your other questions \u2014 you're right, someplace like stackoverflow.com is a better fit for this\u2014but I can answer the first.\nBasically, if you are using jQuery at this point (which you are if you're enabling jsdom), you would write that each method exactly as you would when using jQuery anywhere else.  In your example, you're expecting the element to be returned as a callback value, but that's not how the each method works.  Instead, you'd write it like this:\n$(\".some-items\").each(function() {\n    var header = $(this).find(\"h1\"),\n    paragraph = $(this).find(\"p\");\n});\nI replaced your filter methods with find methods, as they are closer to what you're trying to do syntax-wise here.  If you wanted to use the filter method, I think you would have to wrap your selection in a jQuery function like so:\n$(\"div\").filter( $(\"#unique\") )\nHave a look at the jQuery API docs\u2014I've found them to be extremely thorough and helpful: http://api.jquery.com/jQuery.each/\n. ",
    "kopertop": "This would be great to see cheerio added instead of JSDOM. I've had to switch everything away from getHtml, to just get() and then parse with cheerio myself.\n. ",
    "Akkuma": "Is alias coffee=iced user friendly though? If I tell users to clone my git and npm install that wouldn't exactly work for them. Forcing everything to use iced rather than coffee could potentially be unacceptable to a lot of people.\nI pointed out in the commit whether or not a user has iced doesn't impact node.io at all, since it falls through to using coffee. Would @jbergstroem 's suggestion of adding a command line argument be acceptable? I would think something like node.io -c/--compiler [iced, coco, or livescript (all are based on coffeescript)] could work quite nicely and not tie node.io to any specific compiler all while still defaulting to coffee.\n. ",
    "adamramadhan": "somehow it work. closing for now until i can reproduce this issue.\n. ",
    "xaevir": "change the selector to this:\nvar results = $('#subform_ctrl div').last().text.toLowerCase();\n. so far tried this process_master.js:\nmaster.on('addInput', function (input, dont_flatten) {\n    if (job.input.indexOf(input) !== -1) return  // added this line\n    if (!dont_flatten && input instanceof Array) {\n. ",
    "3even": "Danke!\n. ",
    "davidhooey": "What about basic authentication where forms are not used? Such as http://myusername:mypassword@mysite.com.\n. ",
    "LukeChannings": "Doesn't appear to be working, here's what I'm using so far: http://pastie.org/4359995, some other questions (this probably isn't the place):\n1. when looping over a set of fetched elements, how do you make a deeper selection on each item you're looping through?\nFor example:\n$(\".some-items\").each(function(item) {\n    // what I would expect:\n    var header = $(item).filter(\"h1\"),\n    paragraph = $(item).filter(\"p\")\n})\nI checked the docs but couldn't find anything on that topic.\n1. export XML on completed:\nI expected to be able to implement the completed method and just do something like:\nthis.write(\"output.xml\", document.toString({/* xmlbuilder options */}))\nThank you very much for your help :)\n. ",
    "laurentdebricon": "hi,\nno worries if you don't merge it :)\nbut for exemple I have a Postgres connection I want to pass to the job.\nAlso I am relaunching the same job every minute, but after the first launch of a job, there is job.output_streams.stdout , and so I can't do again nodeio.start(job) .\nCheers.\n. Hello,\nby reusing a job, I have this problem : (remember me ? https://github.com/chriso/node.io/pull/114#issuecomment-7769027 )\nI did what you told me, use globales.\nBut this line is still often failing :\nvar job_id = utils.crc32(JSON.stringify(job));    l.270 of processor.js\nbecause of job.output_streams which can't be stringified .\nhere is a screenpic of my debugger at that moment :\nhttp://i46.tinypic.com/2laatz6.png\nMaybe http://stackoverflow.com/questions/9577200/does-a-writestream-have-to-be-closed   ?\nCheers !\n. ",
    "marcoroest": "Cool i'll give that a try. Thanks for the quick response and this awesome project :)\n. ",
    "jedahan": "I tried adding this.window.close() as per instruction in https://github.com/chriso/node.io/issues/62 before my @emit but that did not fix the memory leak.\n. using cheerio, the memory leak is gone.\nso maybe remove support for jsdom, or figure out where to do window.close()? I had trouble figuring out where to do that.\n. ",
    "erfanimani": "@phillyDesignr did you manage to fix this?\n. ",
    "phillyDesignr": "nope, looks like this repo is no longer being maintained.\n. ",
    "zazabe": "A solution is to setup a local server with NodeJS and provide the content of your local files in the response. I'm doing this for unit tests.\n```\nvar http = require('http');\nvar fs = require('fs');\nvar nodeio = require('node.io');\nvar srv = http.createServer(function (req, res) {\n    fs.readFile(__dirname + req.url, { encoding: 'utf8', flag: 'r'}, function(err, data){\n        if(err){\n            throw err;\n        }  \n        res.writeHead(200, {'Content-Type': 'text/plain'});\n        res.end(data);\n    });\n});\nsrv.listen('223344'); \n...\nvar job = new nodeio.Job({\n    input: ['relative/path/to/this/local/file1.html', 'relative/path/to/this/local/file2.html',...],\n    run: function(filename){\n        this.postHtml('http://localhost:223344/' + filename, function(err, $, data, headers){\n            ...\n        });   \n    }     \n});\n...\nnodeio.start(job, function(){\n    srv.close();\n});\n```\nMy 2 cents solution ;) \nhope it can help !\n. I had other problem by removing the jar option within request.js file, responses from multiple requests were randomly permutated.\nTo solve this issue, in a 302 with cookie redirect, I have to set jar = request.jar():\nrequest.js in node.io, ~290:\n```\n...\n    //Set a request timeout?\n    if (this.options.timeout) {\n        self.cancel_timeout();\n        options.timeout = this.options.timeout * 1000;\n    }\n// change jar from \"false\" to a new jar instance\noptions.jar = request.jar();\n\nrequest(options, function (err, response, body) {\n\n...\n```\nHope it can help somebody or it can be fixed in node.io.\nIf I produce any side effect by doing this, please, tell me !\nThanks\n. Ok, I get it... it's about the instance_pool in process_worker.js.\nWhen a job is retried, the completed job is pushed in a list of terminated job, to keep them for a later use.\nWhen a job fail, if the fail function return a value or emit something, the job is also added to the instance_pool.\nThe bug appear when the last retry failed, the same job instance will be added 2 times into the pool. \nSo the same job can be reused at the same time, 2 times... and it produce the bug described above...\nbug fix in the pull request\n. ",
    "gfranko": "Nevermind I got my jobs to run via the command line using the start method.\n. ",
    "rowdyrabbit": "Hi,\nI've tried the code with the change you suggested, but I'm still getting the same error:\nvar results = $('h3 .search-results b').text().toLowerCase(); \n                 ^\nTypeError: undefined is not a function\nI'll post the entire app below, so you can run it yourself.\n. ``` javascript\nvar http = require('http'); \nvar URL = require('url'); \nvar nodeio = require('node.io'); \nvar port = 8081; \nvar gigParkSearchJobOptions = {timeout : 10, jsdom:true}; \nvar gigParkSearchJob = { \ninput: false, \nrun: function (keyword) { \n    var phone = this.options.args[0];\n\n this.getHtml(\"http://www.gigpark.com/?search=\" + phone + \"&commit=Search&city\", function (err, $) {\n\n   var results = $('h3 .search-results b').text().toLowerCase();\n\n   this.emit('Results found: ' + results);\n\n });\n\n} \n}; \n/* \n  * Main http serve method. \n  / \nfunction serve() { \n  var serv = http.createServer(function(req, res) {\n\n       var url = URL.parse(req.url);\n\n       if (req.method == 'GET' && url.pathname == '/gigpark_search') {\n\n            res.statusCode = 200;\n\n            //query looks like this: 'q=1234567890, so we split it.\n\n            var phoneNum = url.query.split('=')[1];\n\n            console.log('query is: ' + phoneNum);\n\n            nodeio.start(new nodeio.Job(gigParkSearchJobOptions, gigParkSearchJob), [phoneNum], function(err, output) {\n\n                 console.log('result is: ' + output);\n\n                 res.write(JSON.stringify(output));\n\n                 res.end();\n\n                 });\n\n       } else {\n\n            res.statusCode = 404;\n\n            res.end(\"Sorry, page not found.\");\n\n       }\n\n  }); \n  serv.listen(port);\n\n} \nconsole.log(\"Starting server...\"); \nserve(); \n```\nIt's a pretty rough piece of code, not well structured, I know, but I just copied it off the web to try out node.io to see if it'll do what I want. I really need to be able to use the jQuery selectors as I have a webpage that needs this jQuery selector in order to select the correct part of the DOM:\njavascript\n$('.timetable:eq(' +day_of_week_index+ ') tbody tr')\nI run the node server (which all lives in the one .js file called tester.js) like so:\n$ node --debug tester.js\nand I hit the URL which calls the node.io code like so:\nhttp://localhost:8081/gigpark_search?q=7788911331\nThat's when I get the $ not defined error, which to me looks like the option I'm passing through to use jsdom isn't working.\n. I realise that this works from the command line, the problem is that I can't get the node.io job to be called from within the node.js app with jquery, the above code works fine if I don't try to set jsdom:true in the options.\nAlso, with the input hard-coded like that, it won't work for my app, I need it to be passed through from the request parameter.\nThanks for taking a look at the code.\nThis is where I got the example from: http://tommytcchan.blogspot.com.au/2012_05_01_archive.html\nAll I want to do is make it work with jquery by setting jsdom:true in the options.\n. Updated the app to take into account all the changes you suggested, including the hard-coded input and still getting the 'undefined is not a function' error.\n``` javascript\n var http = require('http'); \n var URL = require('url'); \n var nodeio = require('node.io'); \n var port = 8081; \n var options = {timeout : 10, jsdom:true}; \nvar job = { \n   input: ['0912341234'], \n   run: function (input) { \n       console.log(\"phone is: \"+input);\n       this.getHtml(\"http://www.gigpark.com/?search=\" + input + \"&commit=Search&city\", function (err, $) { \n           var result = $('h3.search-results b').first().text().toLowerCase();\n                   this.emit(result);\n     }); \n   } \n }; \n/* \n  * Main http serve method. \n  / \n function serve() { \n      var serv = http.createServer(function(req, res) { \n           var url = URL.parse(req.url); \n           if (req.method == 'GET' && url.pathname == '/gigpark_search') { \n                res.statusCode = 200; \n                nodeio.start(new nodeio.Job(options, job), {}, function(err, output) {\n                     console.log('result is: ' + output); \n                     res.write(JSON.stringify(output)); \n                     res.end(); \n                     }, true); \n           } else { \n                res.statusCode = 404; \n                res.end(\"Sorry, page not found.\"); \n           } \n      }); \n      serv.listen(port); \n } \nconsole.log(\"Starting server...\"); \n serve();\n```\nCheers.\n. Ok, I've taken your code above and modified it, this works (without jsdom:true):\n``` javascript\nvar http = require('http')\n  , URL = require('url')\n  , nodeio = require('node.io')\n  , port = 8081;\nvar options = {\n    timeout: 30\n//  , jsdom: true  //comment this out when not using jsdom\n};\nfunction getResult(search_str, callback) {\n    var job = new nodeio.Job(options, {\n        input: [ search_str ],\n        run: function (input) {\n            var url = 'http://www.gigpark.com/?search=' + input + '&commit=Search&city';\n            this.getHtml(url, function (err, $) {\n                console.log(\"url: \"+url);\n                if (err != undefined) {\n                    console.log(\"error occurred: \"+err);\n                    return err;\n                }\n                console.log(\"got here\");\n//                var result = $('h3.search-results b').first().text().toLowerCase(); //use when jsdom:true property is set\n                var result = $('h3 .search-results b').first().text.toLowerCase(); //use when not using jsdom\n                console.log(result);\n                this.emit(result);\n            });\n        }\n    });\n    nodeio.start(job, { debug: true }, callback, true);\n}\nfunction serve() {\n    var serv = http.createServer(function(req, res) {\n        var url = URL.parse(req.url);\n        if (req.method == 'GET' && url.pathname == '/gigpark_search') {\n            getResult('hairdresser', function (err, result) {\n                console.log(result);\n                if (err) {\n                    res.statusCode = 500;\n                } else {\n                    res.statusCode = 200;\n                    res.write(JSON.stringify(result));\n                }\n                res.end();\n            });\n        } else {\n            res.statusCode = 404;\n            res.end();\n        }\n    });\n    serv.listen(port);\n}\nconsole.log('Starting server...');\nserve();\n```\nHowever this, with jsdom: true does not:\n``` javascript\nvar http = require('http')\n  , URL = require('url')\n  , nodeio = require('node.io')\n  , port = 8081;\nvar options = {\n    timeout: 30\n  , jsdom: true\n};\nfunction getResult(search_str, callback) {\n    var job = new nodeio.Job(options, {\n        input: [ search_str ],\n        run: function (input) {\n            var url = 'http://www.gigpark.com/?search=' + input + '&commit=Search&city';\n            this.getHtml(url, function (err, $) {\n                console.log(\"url: \"+url);\n                if (err != undefined) {\n                    console.log(\"error occurred: \"+err);\n                    return err;\n                }\n                console.log(\"got here\");\n                var result = $('h3.search-results b').first().text().toLowerCase();\n//                var result = $('h3 .search-results b').first().text.toLowerCase(); // for when not using jsdom\n                console.log(result);\n                this.emit(result);\n            });\n        }\n    });\n    nodeio.start(job, { debug: true }, callback, true);\n}\nfunction serve() {\n    var serv = http.createServer(function(req, res) {\n        var url = URL.parse(req.url);\n        if (req.method == 'GET' && url.pathname == '/gigpark_search') {\n            getResult('hairdresser', function (err, result) {\n                console.log(result);\n                if (err) {\n                    res.statusCode = 500;\n                } else {\n                    res.statusCode = 200;\n                    res.write(JSON.stringify(result));\n                }\n                res.end();\n            });\n        } else {\n            res.statusCode = 404;\n            res.end();\n        }\n    });\n    serv.listen(port);\n}\nconsole.log('Starting server...');\nserve();\n```\nHowever, notice that the output of the \njavascript\nconsole.log(\"error occurred: \"+err);\nlog statement is:\nerror occurred: TypeError: Cannot read property 'prototype' of undefined\n. Ok, here's my stack trace:\nurl: http://www.gigpark.com/?search=hairdresser&commit=Search&city\nerror occurred: TypeError: Cannot read property 'prototype' of undefined\n/Users/myhome/Documents/workspace/fitnessfirst/WebContent/tester.js:20\n                    throw err;\n                          ^\nTypeError: Cannot read property 'prototype' of undefined\n    at create (/Users/myhome/node_modules/node.io/node_modules/jquery/lib/node-jquery.js:10:26)\n    at /Users/myhome/node_modules/node.io/node_modules/jquery/lib/node-jquery.js:9471:18\n    at Object. (/Users/myhome/node_modules/node.io/node_modules/jquery/lib/node-jquery.js:9473:2)\n    at Module._compile (module.js:449:26)\n    at Object.Module._extensions..js (module.js:467:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:362:17)\n    at require (module.js:378:17)\n    at Job.parseHtml (/Users/myhome/node_modules/node.io/lib/node.io/dom.js:60:22)\n. Hmm, did that and still getting the same issue, here are some versions if it helps:\nnode -v = v0.8.14\nnpm -v = 1.1.65\njquery - A stupid-simple wrapper over jQuery for  Node.JS (server). Currently 1.7.2.\nEverything was installed via npm, and it's a fresh install of everything too, so should be picking up the latest packages.\n. Ok, it looks like this:\n/Users/myhome\n\u251c\u2500\u252c jquery@1.8.2\n\u2502 \u251c\u2500\u2500 htmlparser@1.7.6\n\u2502 \u251c\u2500\u2500 location@0.0.1\n\u2502 \u251c\u2500\u2500 navigator@1.0.1\n\u2502 \u2514\u2500\u2500 xmlhttprequest@1.4.2\n\u251c\u2500\u252c jsdom@0.2.19\n\u2502 \u251c\u2500\u252c contextify@0.1.3\n\u2502 \u2502 \u2514\u2500\u2500 bindings@1.0.0\n\u2502 \u251c\u2500\u2500 cssom@0.2.5\n\u2502 \u251c\u2500\u2500 cssstyle@0.2.3\n\u2502 \u251c\u2500\u2500 htmlparser@1.7.6\n\u2502 \u2514\u2500\u252c request@2.12.0\n\u2502   \u251c\u2500\u252c form-data@0.0.3\n\u2502   \u2502 \u251c\u2500\u2500 async@0.1.9\n\u2502   \u2502 \u2514\u2500\u252c combined-stream@0.0.3\n\u2502   \u2502   \u2514\u2500\u2500 delayed-stream@0.0.5\n\u2502   \u2514\u2500\u2500 mime@1.2.7\n\u251c\u2500\u252c node.io@0.4.12\n\u2502 \u251c\u2500\u2500 coffee-script@1.4.0\n\u2502 \u251c\u2500\u2500 htmlparser@1.7.6\n\u2502 \u251c\u2500\u252c jquery@1.8.2\n\u2502 \u2502 \u251c\u2500\u2500 location@0.0.1\n\u2502 \u2502 \u251c\u2500\u2500 navigator@1.0.1\n\u2502 \u2502 \u2514\u2500\u2500 xmlhttprequest@1.4.2\n\u2502 \u251c\u2500\u252c jsdom@0.2.19\n\u2502 \u2502 \u251c\u2500\u2500 cssom@0.2.5\n\u2502 \u2502 \u2514\u2500\u2500 cssstyle@0.2.3\n\u2502 \u2514\u2500\u2500 request@2.9.202\n\u251c\u2500\u252c phantom@0.3.5\n\u2502 \u251c\u2500\u252c dnode@0.9.12\n\u2502 \u2502 \u251c\u2500\u252c dnode-protocol@0.1.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 traverse@0.6.3\n\u2502 \u2502 \u251c\u2500\u2500 jsonify@0.0.0\n\u2502 \u2502 \u251c\u2500\u2500 lazy@1.0.8\n\u2502 \u2502 \u251c\u2500\u252c socket.io@0.8.6\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 policyfile@0.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 redis@0.6.7\n\u2502 \u2502 \u2514\u2500\u252c socket.io-client@0.8.6\n\u2502 \u2502   \u251c\u2500\u2500 uglify-js@1.0.6\n\u2502 \u2502   \u251c\u2500\u2500 websocket-client@1.0.0\n\u2502 \u2502   \u2514\u2500\u2500 xmlhttprequest@1.2.2\n\u2502 \u251c\u2500\u252c dnode-protocol@0.2.2\n\u2502 \u2502 \u251c\u2500\u2500 jsonify@0.0.0\n\u2502 \u2502 \u2514\u2500\u2500 traverse@0.6.3\n\u2502 \u2514\u2500\u252c express@3.0.3\n\u2502   \u251c\u2500\u2500 commander@0.6.1\n\u2502   \u251c\u2500\u252c connect@2.7.0\n\u2502   \u2502 \u251c\u2500\u2500 bytes@0.1.0\n\u2502   \u2502 \u251c\u2500\u2500 formidable@1.0.11\n\u2502   \u2502 \u251c\u2500\u2500 pause@0.0.1\n\u2502   \u2502 \u2514\u2500\u2500 qs@0.5.1\n\u2502   \u251c\u2500\u2500 cookie@0.0.5\n\u2502   \u251c\u2500\u2500 cookie-signature@0.0.1\n\u2502   \u251c\u2500\u2500 crc@0.2.0\n\u2502   \u251c\u2500\u2500 debug@0.7.0\n\u2502   \u251c\u2500\u2500 fresh@0.1.0\n\u2502   \u251c\u2500\u2500 methods@0.0.1\n\u2502   \u251c\u2500\u2500 mkdirp@0.3.3\n\u2502   \u251c\u2500\u2500 range-parser@0.0.4\n\u2502   \u2514\u2500\u252c send@0.1.0\n\u2502     \u2514\u2500\u2500 mime@1.2.6\n\u251c\u2500\u252c socket.io@0.8.7\n\u2502 \u251c\u2500\u2500 policyfile@0.0.4\n\u2502 \u251c\u2500\u2500 redis@0.6.7\n\u2502 \u2514\u2500\u252c socket.io-client@0.8.7\n\u2502   \u251c\u2500\u2500 uglify-js@1.0.6\n\u2502   \u251c\u2500\u2500 websocket-client@1.0.0\n\u2502   \u2514\u2500\u2500 xmlhttprequest@1.2.2\n\u2514\u2500\u252c socket.io-client@0.8.7\n  \u251c\u2500\u2500 uglify-js@1.0.6\n  \u251c\u2500\u2500 websocket-client@1.0.0\n  \u2514\u2500\u2500 xmlhttprequest@1.2.2\n. Ooh, ok, looks like contextify wasn't in my node.io jsdom install. I uninstalled node.io and jsdom and re-installed node.io, all seems to be working now!\nThanks so much for all your help, you rock :) \n. ",
    "singleseeker": "\nnode-gyp rebuild\n\ngyp WARN EACCES user \"root\" does not have permission to access the dev dir \"/Users/seeker/.node-gyp/0.8.1\"\ngyp WARN EACCES attempting to reinstall using temporary dev dir \"/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/.node-gyp\"\ngyp http GET http://nodejs.org/dist/v0.8.1/node-v0.8.1.tar.gz\ngyp http 200 http://nodejs.org/dist/v0.8.1/node-v0.8.1.tar.gz\n  CXX(target) Release/obj.target/contextify/src/contextify.o\n  SOLINK_MODULE(target) Release/contextify.node\n  SOLINK_MODULE(target) Release/contextify.node: Finished\n/usr/local/bin/io -> /usr/local/lib/node_modules/node.io/bin/io\n/usr/local/bin/node.io-web -> /usr/local/lib/node_modules/node.io/bin/node.io-web\n/usr/local/bin/node.io -> /usr/local/lib/node_modules/node.io/bin/node.io\nnode.io@0.4.12 /usr/local/lib/node_modules/node.io\n\u251c\u2500\u2500 request@2.9.202\n\u251c\u2500\u2500 coffee-script@1.4.0\n\u251c\u2500\u2500 htmlparser@1.7.6\n\u251c\u2500\u2500 jquery@1.8.2 (navigator@1.0.1, location@0.0.1, xmlhttprequest@1.4.2)\n\u2514\u2500\u2500 jsdom@0.2.19 (cssom@0.2.5, cssstyle@0.2.3, contextify@0.1.3)\ni donot konw if this will be work fine.\nyou know ,i inatall the node.io use \"sudo npm install -g node.io\",but still comes the permission pb.\n. sorry,i just install node.js used -g ,this is a wrong way,if i wanna to require \"node.io\",i should also,npm install node.io locally\n. ",
    "sononix": "tried that - no improvement - how can I change the version of the request package, at the moment \"request\": \"2.9.202\" is being used, current request is version 2.12.0 though is that compatible ?\nby the way Im using node v0.4.0 under an npm install and have node_modules being installed locally in a project rather than globally\n. is there a specific version of 0.8 - I was getting errors with both, and saw the node engine was given as \n\"engines\": { \"node\": \">=0.4.0\" }, in the package file \nso I thought it might work with 4 \n. works fine now tks \nM\n. ",
    "jpgninja": "Hey, thanks for getting back to me Chris.\nUnfortunately, that was run with sudo (top line shows the command I ran). Any other ideas? I know it's going to be something easy like that.\nI've also sudo su'd to root and ran it without the sudo command, to no avail.\n. You bet. Below I ran it (without sudo).\nHorts-MacBook-Pro:linkchecker hort$ npm install -g -ddd contextify\nnpm info it worked if it ends with ok\nnpm verb cli [ 'node',\nnpm verb cli   '/usr/local/bin/npm',\nnpm verb cli   'install',\nnpm verb cli   '-g',\nnpm verb cli   '-ddd',\nnpm verb cli   'contextify' ]\nnpm info using npm@1.1.69\nnpm info using node@v0.8.16\nnpm verb read json /usr/local/lib/package.json\nnpm verb read json /usr/local/lib/package.json\nnpm verb cache add [ 'contextify', null ]\nnpm sill cache add name=undefined spec=\"contextify\" args=[\"contextify\",null]\nnpm verb parsed url { pathname: 'contextify',\nnpm verb parsed url   path: 'contextify',\nnpm verb parsed url   href: 'contextify' }\nnpm sill lockFile e90e8b6a-contextify contextify\nnpm verb lock contextify /Users/hort/.npm/e90e8b6a-contextify.lock\nnpm sill lockFile e90e8b6a-contextify contextify\nnpm verb addNamed [ 'contextify', '' ]\nnpm verb addNamed [ null, '' ]\nnpm sill lockFile 902bbeb2-contextify contextify@\nnpm verb lock contextify@ /Users/hort/.npm/902bbeb2-contextify.lock\nnpm sill addNameRange { name: 'contextify', range: '', hasData: false }\nnpm verb url raw contextify\nnpm verb url resolving [ 'https://registry.npmjs.org/', './contextify' ]\nnpm verb url resolved https://registry.npmjs.org/contextify\nnpm info trying registry request attempt 1 at 22:34:11\nnpm verb etag \"QOE79Z9VM2IJW4KQC2YL8NML\"\nnpm http GET https://registry.npmjs.org/contextify\nnpm http 304 https://registry.npmjs.org/contextify\nnpm sill registry.get cb [ 304,\nnpm sill registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',\nnpm sill registry.get     etag: '\"QOE79Z9VM2IJW4KQC2YL8NML\"',\nnpm sill registry.get     date: 'Thu, 10 Jan 2013 03:32:50 GMT',\nnpm sill registry.get     'content-length': '0' } ]\nnpm verb etag contextify from cache\nnpm sill addNameRange number 2 { name: 'contextify', range: '', hasData: true }\nnpm sill addNameRange versions [ 'contextify',\nnpm sill addNameRange   [ '0.0.2',\nnpm sill addNameRange     '0.0.3',\nnpm sill addNameRange     '0.0.4',\nnpm sill addNameRange     '0.0.5',\nnpm sill addNameRange     '0.0.6',\nnpm sill addNameRange     '0.0.7',\nnpm sill addNameRange     '0.1.0',\nnpm sill addNameRange     '0.1.1',\nnpm sill addNameRange     '0.1.2',\nnpm sill addNameRange     '0.1.3' ] ]\nnpm verb addNamed [ 'contextify', '0.1.3' ]\nnpm verb addNamed [ '0.1.3', '0.1.3' ]\nnpm sill lockFile 7770d4b3-contextify-0-1-3 contextify@0.1.3\nnpm verb lock contextify@0.1.3 /Users/hort/.npm/7770d4b3-contextify-0-1-3.lock\nnpm verb read json /Users/hort/.npm/contextify/0.1.3/package/package.json\nnpm sill lockFile 7770d4b3-contextify-0-1-3 contextify@0.1.3\nnpm sill lockFile 902bbeb2-contextify contextify@\nnpm sill resolved [ { name: 'contextify',\nnpm sill resolved     version: '0.1.3',\nnpm sill resolved     description: 'Turn an object into a persistent execution context.',\nnpm sill resolved     author: { name: 'Brian McDaniel', email: 'brianmcd05@gmail.com' },\nnpm sill resolved     contributors: [ [Object] ],\nnpm sill resolved     keywords: [ 'context', 'vm' ],\nnpm sill resolved     repository: \nnpm sill resolved      { type: 'git',\nnpm sill resolved        url: 'https://github.com/brianmcd/contextify.git' },\nnpm sill resolved     main: './lib/contextify',\nnpm sill resolved     scripts: { test: 'nodeunit test/', install: 'node-gyp rebuild' },\nnpm sill resolved     engines: { node: '>=0.4.0' },\nnpm sill resolved     licenses: [ [Object] ],\nnpm sill resolved     dependencies: { bindings: '' },\nnpm sill resolved     devDependencies: { nodeunit: '>=0.5.x' },\nnpm sill resolved     gypfile: true,\nnpm sill resolved     readme: '# Contextify\\n\\nTurn an object into a V8 execution context.  A contextified object acts as the global \\'this\\' when executing scripts in its context.  Contextify adds 3 methods to the contextified object: run(code, filename), getGlobal(), and dispose().  The main difference between Contextify and Node\\'s vm methods is that Contextify allows asynchronous functions to continue executing in the Contextified object\\'s context.  See vm vs. Contextify below for more discussion.\\n\\n## Examples\\njavascript\\nvar Contextify = require(\\'contextify\\');\\nvar sandbox = { console : console, prop1 : \\'prop1\\'};\\nContextify(sandbox);\\nsandbox.run(\\'console.log(prop1);\\');\\nsandbox.dispose(); // free the resources allocated for the context.\\n\\n\\njavascript\\nvar sandbox = Contextify(); // returns an empty contextified object.\\nsandbox.run(\\'var x = 3;\\');\\nconsole.log(sandbox.x); // prints 3\\nsandbox.dispose();\\n\\n\\njavascript\\nvar sandbox = Contextify({setTimeout : setTimeout});\\nsandbox.run(\"setTimeout(function () { x = 3; }, 5);\");\\nconsole.log(sandbox.x); // prints undefined\\nsetTimeout(function () {\\n    console.log(sandbox.x); // prints 3\\n    sandbox.dispose();\\n}, 10);\\n\\n## Details\\n\\n__Contextify([sandbox])\\n\\n    sandbox - The object to contextify, which will be modified as described below\\n              If no sandbox is specified, an empty object will be allocated and used instead.\\n\\n    Returns the contextified object.  It doesn\\'t make a copy, so if you already have a reference\\n    to the sandbox, you don\\'t need to catch the return value.\\n\\nA Contextified object has 2 methods added to it:\\n\\n__run(code, [filename])\\n\\n    code - string containing JavaScript to execute\\n    filename  - an optional filename for debugging.\\n\\n    Runs the code in the Contextified object\\'s context.\\n\\n__getGlobal()__\\n\\nReturns the actual global object for the V8 context.  The global object is initialized with interceptors (discussed below) which forward accesses on it to the contextified object.  This means the contextified object acts like the global object in most cases.  Sometimes, though, you need to make a reference to the actual global object.\\n\\nFor example:\\n\\njavascript\\nvar window = Contextify({console : console});\\nwindow.window = window;\\nwindow.run(\"console.log(window === this);\");\\n// prints false.\\n\\n\\njavascript\\nvar window = Contextify({console : console});\\nwindow.window = window.getGlobal();\\nwindow.run(\"console.log(window === this);\");\\n// prints true\\n\\n\\nThe global object returned by getGlobal() can be treated like the contextified sandbox object, except that defining getters/setters will not work on it.  Define getters and setters on the actual sandbox object instead.\\n\\n__dispose()*\\n\\nFrees the memory allocated for the underlying V8 context.  If you don\\'t call this when you\\'re done, the V8 context memory will leak, as will the sandbox memory, since the context\\'s global stores a strong reference to the sandbox object.  You can still use your sandbox object after calling dispose(), but it\\'s unsafe to use a global previously returned from getGlobal().  run, getGlobal, and dispose will be removed from the sandbox object.\\n\\n## Install\\n\\n    npm install contextify\\n\\n## require(\\'vm\\') vs. Contextify\\n\\nNode\\'s vm functions (runInContext etc) work by copying the values from the sandbox object onto a context\\'s global object, executing the passed in script, then copying the results back.  This means that scripts that create asynchronous functions (using mechanisms like setTimeout) won\\'t have see the results of executing those functions, since the copying in/out only occurs during an explicit call to runInContext and friends.  \\n\\nContextify creates a V8 context, and uses interceptors (see: http://code.google.com/apis/v8/embed.html#interceptors) to forward global object accesses to the sandbox object.  This means there is no copying in or out, so asynchronous functions have the expected effect on the sandbox object.  \\n\\n## Tests\\n\\nTesting is done with nodeunit.  Run the tests with\\n\\n    nodeunit test/\\n\\nOutput: \\n\\n    OK: 92 assertions (27ms)\\n\\n\\n## Building\\n\\n    node-waf configure build\\n\\n## Acknowledgments\\n\\nInspiration taken from Assaf\\'s Zombie.js context solution: https://github.com/assaf/zombie\\n',\nnpm sill resolved     readmeFilename: 'README.md',\nnpm sill resolved     _id: 'contextify@0.1.3',\nnpm sill resolved     _from: 'contextify' } ]\nnpm info install contextify@0.1.3 into /usr/local/lib\nnpm info installOne contextify@0.1.3\nnpm verb from cache /Users/hort/.npm/contextify/0.1.3/package/package.json\nnpm info /usr/local/lib/node_modules/contextify unbuild\nnpm verb read json /usr/local/lib/node_modules/contextify/package.json\nnpm verb tar unpack /Users/hort/.npm/contextify/0.1.3/package.tgz\nnpm sill lockFile c62077d1-ocal-lib-node-modules-contextify /usr/local/lib/node_modules/contextify\nnpm verb lock /usr/local/lib/node_modules/contextify /Users/hort/.npm/c62077d1-ocal-lib-node-modules-contextify.lock\nnpm sill gunzTarPerm modes [ '755', '644' ]\nnpm ERR! Error: EACCES, mkdir '/usr/local/lib/node_modules/contextify'\nnpm ERR!  { [Error: EACCES, mkdir '/usr/local/lib/node_modules/contextify']\nnpm ERR!   errno: 3,\nnpm ERR!   code: 'EACCES',\nnpm ERR!   path: '/usr/local/lib/node_modules/contextify',\nnpm ERR!   fstream_type: 'Directory',\nnpm ERR!   fstream_path: '/usr/local/lib/node_modules/contextify',\nnpm ERR!   fstream_class: 'DirWriter',\nnpm ERR!   fstream_stack: \nnpm ERR!    [ 'DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)',\nnpm ERR!      '/usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53',\nnpm ERR!      'Object.oncomplete (fs.js:297:15)' ] }\nnpm ERR! \nnpm ERR! Please try running this command again as root/Administrator.\nnpm ERR! System Darwin 11.4.2\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"-g\" \"-ddd\" \"contextify\"\nnpm ERR! cwd /Users/hort/Work/_jpgninja/linkchecker\nnpm ERR! node -v v0.8.16\nnpm ERR! npm -v 1.1.69\nnpm ERR! path /usr/local/lib/node_modules/contextify\nnpm ERR! fstream_path /usr/local/lib/node_modules/contextify\nnpm ERR! fstream_type Directory\nnpm ERR! fstream_class DirWriter\nnpm ERR! code EACCES\nnpm ERR! errno 3\nnpm ERR! stack Error: EACCES, mkdir '/usr/local/lib/node_modules/contextify'\nnpm ERR! fstream_stack DirWriter._create (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/dir-writer.js:36:23)\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/mkdirp/index.js:37:53\nnpm ERR! fstream_stack Object.oncomplete (fs.js:297:15)\nnpm verb exit [ 3, true ]\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/hort/Work/_jpgninja/linkchecker/npm-debug.log\nnpm ERR! not ok code 0\nHorts-MacBook-Pro:linkchecker hort$\n. Incoming! \nHorts-MacBook-Pro:libs hort$ sudo npm install -g -dd node.io\nnpm info it worked if it ends with ok\nnpm verb cli [ 'node', '/usr/local/bin/npm', 'install', '-g', '-dd', 'node.io' ]\nnpm info using npm@1.1.69\nnpm info using node@v0.8.16\nnpm verb read json /usr/local/lib/package.json\nnpm verb read json /usr/local/lib/package.json\nnpm verb cache add [ 'node.io', null ]\nnpm verb parsed url { pathname: 'node.io', path: 'node.io', href: 'node.io' }\nnpm verb lock node.io /Users/hort/.npm/eddd5bf7-node-io.lock\nnpm verb addNamed [ 'node.io', '' ]\nnpm verb addNamed [ null, '' ]\nnpm verb lock node.io@ /Users/hort/.npm/55b835a3-node-io.lock\nnpm verb url raw node.io\nnpm verb url resolving [ 'https://registry.npmjs.org/', './node.io' ]\nnpm verb url resolved https://registry.npmjs.org/node.io\nnpm info trying registry request attempt 1 at 22:49:54\nnpm verb etag \"AUZ6PEJRMKD511S8B27YJ89A8\"\nnpm http GET https://registry.npmjs.org/node.io\nnpm http 304 https://registry.npmjs.org/node.io\nnpm verb etag node.io from cache\nnpm verb addNamed [ 'node.io', '0.4.12' ]\nnpm verb addNamed [ '0.4.12', '0.4.12' ]\nnpm verb lock node.io@0.4.12 /Users/hort/.npm/3daea05d-node-io-0-4-12.lock\nnpm verb read json /Users/hort/.npm/node.io/0.4.12/package/package.json\nnpm info install node.io@0.4.12 into /usr/local/lib\nnpm info installOne node.io@0.4.12\nnpm verb from cache /Users/hort/.npm/node.io/0.4.12/package/package.json\nnpm info /usr/local/lib/node_modules/node.io unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/package.json\nnpm verb tar unpack /Users/hort/.npm/node.io/0.4.12/package.tgz\nnpm verb lock /usr/local/lib/node_modules/node.io /Users/hort/.npm/3ba375c4-r-local-lib-node-modules-node-io.lock\nnpm verb read json /usr/local/lib/node_modules/node.io/package.json\nnpm info preinstall node.io@0.4.12\nnpm verb from cache /usr/local/lib/node_modules/node.io/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/package.json\nnpm verb readDependencies using package.json deps\nnpm verb cache add [ 'htmlparser@>= 1.7.3', null ]\nnpm verb parsed url { pathname: 'htmlparser@%3E=%201.7.3',\nnpm verb parsed url   path: 'htmlparser@%3E=%201.7.3',\nnpm verb parsed url   href: 'htmlparser@%3E=%201.7.3' }\nnpm verb parsed url { pathname: '%3E=%201.7.3',\nnpm verb parsed url   path: '%3E=%201.7.3',\nnpm verb parsed url   href: '%3E=%201.7.3' }\nnpm verb addNamed [ 'htmlparser', '>= 1.7.3' ]\nnpm verb addNamed [ null, '>=1.7.3' ]\nnpm verb lock htmlparser@>= 1.7.3 /Users/hort/.npm/7e2875fb-htmlparser-1-7-3.lock\nnpm verb cache add [ 'coffee-script@>= 0.9.5', null ]\nnpm verb parsed url { pathname: 'coffee-script@%3E=%200.9.5',\nnpm verb parsed url   path: 'coffee-script@%3E=%200.9.5',\nnpm verb parsed url   href: 'coffee-script@%3E=%200.9.5' }\nnpm verb parsed url { pathname: '%3E=%200.9.5',\nnpm verb parsed url   path: '%3E=%200.9.5',\nnpm verb parsed url   href: '%3E=%200.9.5' }\nnpm verb addNamed [ 'coffee-script', '>= 0.9.5' ]\nnpm verb addNamed [ null, '>=0.9.5' ]\nnpm verb lock coffee-script@>= 0.9.5 /Users/hort/.npm/894ba8de-coffee-script-0-9-5.lock\nnpm verb url raw htmlparser\nnpm verb url resolving [ 'https://registry.npmjs.org/', './htmlparser' ]\nnpm verb url resolved https://registry.npmjs.org/htmlparser\nnpm info trying registry request attempt 1 at 22:49:55\nnpm verb etag \"ELI06I893TB4HJRAA2O05LZK4\"\nnpm http GET https://registry.npmjs.org/htmlparser\nnpm verb url raw coffee-script\nnpm verb url resolving [ 'https://registry.npmjs.org/', './coffee-script' ]\nnpm verb url resolved https://registry.npmjs.org/coffee-script\nnpm info trying registry request attempt 1 at 22:49:55\nnpm verb etag \"D617DK98MTKWS5IUHB6FCI7HW\"\nnpm http GET https://registry.npmjs.org/coffee-script\nnpm verb cache add [ 'jquery@>= 1.4.4', null ]\nnpm verb parsed url { pathname: 'jquery@%3E=%201.4.4',\nnpm verb parsed url   path: 'jquery@%3E=%201.4.4',\nnpm verb parsed url   href: 'jquery@%3E=%201.4.4' }\nnpm verb parsed url { pathname: '%3E=%201.4.4',\nnpm verb parsed url   path: '%3E=%201.4.4',\nnpm verb parsed url   href: '%3E=%201.4.4' }\nnpm verb addNamed [ 'jquery', '>= 1.4.4' ]\nnpm verb addNamed [ null, '>=1.4.4' ]\nnpm verb lock jquery@>= 1.4.4 /Users/hort/.npm/59b94f22-jquery-1-4-4.lock\nnpm verb cache add [ 'jsdom@>= 0.2.0', null ]\nnpm verb parsed url { pathname: 'jsdom@%3E=%200.2.0',\nnpm verb parsed url   path: 'jsdom@%3E=%200.2.0',\nnpm verb parsed url   href: 'jsdom@%3E=%200.2.0' }\nnpm verb parsed url { pathname: '%3E=%200.2.0',\nnpm verb parsed url   path: '%3E=%200.2.0',\nnpm verb parsed url   href: '%3E=%200.2.0' }\nnpm verb addNamed [ 'jsdom', '>= 0.2.0' ]\nnpm verb addNamed [ null, '>=0.2.0' ]\nnpm verb lock jsdom@>= 0.2.0 /Users/hort/.npm/e06a6149-jsdom-0-2-0.lock\nnpm verb cache add [ 'request@2.9.202', null ]\nnpm verb parsed url { pathname: 'request@2.9.202',\nnpm verb parsed url   path: 'request@2.9.202',\nnpm verb parsed url   href: 'request@2.9.202' }\nnpm verb parsed url { pathname: '2.9.202', path: '2.9.202', href: '2.9.202' }\nnpm verb addNamed [ 'request', '2.9.202' ]\nnpm verb addNamed [ '2.9.202', '2.9.202' ]\nnpm verb lock request@2.9.202 /Users/hort/.npm/f7ac4bcd-request-2-9-202.lock\nnpm verb url raw jquery\nnpm verb url resolving [ 'https://registry.npmjs.org/', './jquery' ]\nnpm verb url resolved https://registry.npmjs.org/jquery\nnpm info trying registry request attempt 1 at 22:49:55\nnpm verb etag \"93IRG4YZ5EXI84I6I26LFHG50\"\nnpm http GET https://registry.npmjs.org/jquery\nnpm verb url raw jsdom\nnpm verb url resolving [ 'https://registry.npmjs.org/', './jsdom' ]\nnpm verb url resolved https://registry.npmjs.org/jsdom\nnpm info trying registry request attempt 1 at 22:49:55\nnpm verb etag \"A9MZ7P6V77AWDMMUEOXSKRERN\"\nnpm http GET https://registry.npmjs.org/jsdom\nnpm verb url raw request/2.9.202\nnpm verb url resolving [ 'https://registry.npmjs.org/', './request/2.9.202' ]\nnpm verb url resolved https://registry.npmjs.org/request/2.9.202\nnpm info trying registry request attempt 1 at 22:49:55\nnpm verb etag \"EPB3V2C4LFGGWU1V291YROJK5\"\nnpm http GET https://registry.npmjs.org/request/2.9.202\nnpm http 304 https://registry.npmjs.org/htmlparser\nnpm verb etag htmlparser from cache\nnpm http 304 https://registry.npmjs.org/coffee-script\nnpm verb etag coffee-script from cache\nnpm verb addNamed [ 'coffee-script', '1.4.0' ]\nnpm verb addNamed [ '1.4.0', '1.4.0' ]\nnpm verb lock coffee-script@1.4.0 /Users/hort/.npm/0c6dfe35-coffee-script-1-4-0.lock\nnpm verb addNamed [ 'htmlparser', '1.7.6' ]\nnpm verb addNamed [ '1.7.6', '1.7.6' ]\nnpm verb lock htmlparser@1.7.6 /Users/hort/.npm/1f8880a7-htmlparser-1-7-6.lock\nnpm verb read json /Users/hort/.npm/coffee-script/1.4.0/package/package.json\nnpm verb read json /Users/hort/.npm/htmlparser/1.7.6/package/package.json\nnpm http 304 https://registry.npmjs.org/request/2.9.202\nnpm verb etag request/2.9.202 from cache\nnpm http 304 https://registry.npmjs.org/jsdom\nnpm verb etag jsdom from cache\nnpm http 304 https://registry.npmjs.org/jquery\nnpm verb etag jquery from cache\nnpm verb read json /Users/hort/.npm/request/2.9.202/package/package.json\nnpm verb addNamed [ 'jsdom', '0.3.4' ]\nnpm verb addNamed [ '0.3.4', '0.3.4' ]\nnpm verb lock jsdom@0.3.4 /Users/hort/.npm/7b57c29a-jsdom-0-3-4.lock\nnpm verb addNamed [ 'jquery', '1.8.3' ]\nnpm verb addNamed [ '1.8.3', '1.8.3' ]\nnpm verb lock jquery@1.8.3 /Users/hort/.npm/c39883fe-jquery-1-8-3.lock\nnpm verb read json /Users/hort/.npm/jsdom/0.3.4/package/package.json\nnpm verb read json /Users/hort/.npm/jquery/1.8.3/package/package.json\nnpm info install coffee-script@1.4.0 into /usr/local/lib/node_modules/node.io\nnpm info install htmlparser@1.7.6 into /usr/local/lib/node_modules/node.io\nnpm info install request@2.9.202 into /usr/local/lib/node_modules/node.io\nnpm info install jsdom@0.3.4 into /usr/local/lib/node_modules/node.io\nnpm info install jquery@1.8.3 into /usr/local/lib/node_modules/node.io\nnpm info installOne coffee-script@1.4.0\nnpm info installOne htmlparser@1.7.6\nnpm info installOne request@2.9.202\nnpm info installOne jsdom@0.3.4\nnpm info installOne jquery@1.8.3\nnpm verb from cache /Users/hort/.npm/coffee-script/1.4.0/package/package.json\nnpm verb from cache /Users/hort/.npm/htmlparser/1.7.6/package/package.json\nnpm verb from cache /Users/hort/.npm/request/2.9.202/package/package.json\nnpm verb from cache /Users/hort/.npm/jsdom/0.3.4/package/package.json\nnpm verb from cache /Users/hort/.npm/jquery/1.8.3/package/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/coffee-script unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/coffee-script/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/htmlparser unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/htmlparser/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/request unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/request/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/package.json\nnpm verb tar unpack /Users/hort/.npm/coffee-script/1.4.0/package.tgz\nnpm verb tar unpack /Users/hort/.npm/htmlparser/1.7.6/package.tgz\nnpm verb tar unpack /Users/hort/.npm/request/2.9.202/package.tgz\nnpm verb tar unpack /Users/hort/.npm/jsdom/0.3.4/package.tgz\nnpm verb tar unpack /Users/hort/.npm/jquery/1.8.3/package.tgz\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/coffee-script /Users/hort/.npm/5e709819-de-io-node-modules-coffee-script.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/htmlparser /Users/hort/.npm/430809f6--node-io-node-modules-htmlparser.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/request /Users/hort/.npm/194084e2-les-node-io-node-modules-request.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jsdom /Users/hort/.npm/775d0e7e-dules-node-io-node-modules-jsdom.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery /Users/hort/.npm/be67b142-ules-node-io-node-modules-jquery.lock\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/request/package.json\nnpm info preinstall request@2.9.202\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/request/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/request/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/request\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/request\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/request/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules' ]\nnpm info linkStuff request@2.9.202\nnpm verb linkBins request@2.9.202\nnpm verb linkMans request@2.9.202\nnpm verb rebuildBundles request@2.9.202\nnpm info install request@2.9.202\nnpm info postinstall request@2.9.202\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/coffee-script/package.json\nnpm info preinstall coffee-script@1.4.0\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/coffee-script/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/coffee-script/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/coffee-script\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/coffee-script\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/coffee-script/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules' ]\nnpm info linkStuff coffee-script@1.4.0\nnpm verb linkBins coffee-script@1.4.0\nnpm verb link bins [ { coffee: './bin/coffee', cake: './bin/cake' },\nnpm verb link bins   '/usr/local/lib/node_modules/node.io/node_modules/.bin',\nnpm verb link bins   false ]\nnpm verb linkMans coffee-script@1.4.0\nnpm verb rebuildBundles coffee-script@1.4.0\nnpm info install coffee-script@1.4.0\nnpm info postinstall coffee-script@1.4.0\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/package.json\nnpm info preinstall jsdom@0.3.4\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/package.json\nnpm verb readDependencies using package.json deps\nnpm verb cache add [ 'nwmatcher@>=1.3.0', null ]\nnpm verb parsed url { pathname: 'nwmatcher@%3E=1.3.0',\nnpm verb parsed url   path: 'nwmatcher@%3E=1.3.0',\nnpm verb parsed url   href: 'nwmatcher@%3E=1.3.0' }\nnpm verb parsed url { pathname: '%3E=1.3.0', path: '%3E=1.3.0', href: '%3E=1.3.0' }\nnpm verb addNamed [ 'nwmatcher', '>=1.3.0' ]\nnpm verb addNamed [ null, '>=1.3.0' ]\nnpm verb lock nwmatcher@>=1.3.0 /Users/hort/.npm/8bc57da1-nwmatcher-1-3-0.lock\nnpm verb cache add [ 'cssom@0.2.x', null ]\nnpm verb parsed url { pathname: 'cssom@0.2.x',\nnpm verb parsed url   path: 'cssom@0.2.x',\nnpm verb parsed url   href: 'cssom@0.2.x' }\nnpm verb parsed url { pathname: '0.2.x', path: '0.2.x', href: '0.2.x' }\nnpm verb addNamed [ 'cssom', '0.2.x' ]\nnpm verb addNamed [ null, '>=0.2.0- <0.3.0-' ]\nnpm verb lock cssom@0.2.x /Users/hort/.npm/c83aab2e-cssom-0-2-x.lock\nnpm verb url raw nwmatcher\nnpm verb url resolving [ 'https://registry.npmjs.org/', './nwmatcher' ]\nnpm verb url resolved https://registry.npmjs.org/nwmatcher\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"F3CQ5VPM5WX708UHSDNIU8FRR\"\nnpm http GET https://registry.npmjs.org/nwmatcher\nnpm verb url raw cssom\nnpm verb url resolving [ 'https://registry.npmjs.org/', './cssom' ]\nnpm verb url resolved https://registry.npmjs.org/cssom\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"6JJRJ3CWIRNK80U0J9MKEK06Y\"\nnpm http GET https://registry.npmjs.org/cssom\nnpm verb cache add [ 'cssstyle@>=0.2.3', null ]\nnpm verb parsed url { pathname: 'cssstyle@%3E=0.2.3',\nnpm verb parsed url   path: 'cssstyle@%3E=0.2.3',\nnpm verb parsed url   href: 'cssstyle@%3E=0.2.3' }\nnpm verb parsed url { pathname: '%3E=0.2.3', path: '%3E=0.2.3', href: '%3E=0.2.3' }\nnpm verb addNamed [ 'cssstyle', '>=0.2.3' ]\nnpm verb addNamed [ null, '>=0.2.3' ]\nnpm verb lock cssstyle@>=0.2.3 /Users/hort/.npm/76808a6b-cssstyle-0-2-3.lock\nnpm verb cache add [ 'contextify@0.1.x', null ]\nnpm verb parsed url { pathname: 'contextify@0.1.x',\nnpm verb parsed url   path: 'contextify@0.1.x',\nnpm verb parsed url   href: 'contextify@0.1.x' }\nnpm verb parsed url { pathname: '0.1.x', path: '0.1.x', href: '0.1.x' }\nnpm verb addNamed [ 'contextify', '0.1.x' ]\nnpm verb addNamed [ null, '>=0.1.0- <0.2.0-' ]\nnpm verb lock contextify@0.1.x /Users/hort/.npm/fb83e208-contextify-0-1-x.lock\nnpm verb url raw cssstyle\nnpm verb url resolving [ 'https://registry.npmjs.org/', './cssstyle' ]\nnpm verb url resolved https://registry.npmjs.org/cssstyle\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"3HYFL7IVTQ080DNEUXZWUEHD6\"\nnpm http GET https://registry.npmjs.org/cssstyle\nnpm verb url raw contextify\nnpm verb url resolving [ 'https://registry.npmjs.org/', './contextify' ]\nnpm verb url resolved https://registry.npmjs.org/contextify\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"QOE79Z9VM2IJW4KQC2YL8NML\"\nnpm http GET https://registry.npmjs.org/contextify\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/package.json\nnpm info preinstall jquery@1.8.3\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/package.json\nnpm verb readDependencies using package.json deps\nnpm verb cache add [ 'location@0.0.1', null ]\nnpm verb parsed url { pathname: 'location@0.0.1',\nnpm verb parsed url   path: 'location@0.0.1',\nnpm verb parsed url   href: 'location@0.0.1' }\nnpm verb parsed url { pathname: '0.0.1', path: '0.0.1', href: '0.0.1' }\nnpm verb addNamed [ 'location', '0.0.1' ]\nnpm verb addNamed [ '0.0.1', '0.0.1' ]\nnpm verb lock location@0.0.1 /Users/hort/.npm/dc2323ed-location-0-0-1.lock\nnpm verb cache add [ 'navigator@~1.0.1', null ]\nnpm verb parsed url { pathname: 'navigator@~1.0.1',\nnpm verb parsed url   path: 'navigator@~1.0.1',\nnpm verb parsed url   href: 'navigator@~1.0.1' }\nnpm verb parsed url { pathname: '~1.0.1', path: '~1.0.1', href: '~1.0.1' }\nnpm verb addNamed [ 'navigator', '~1.0.1' ]\nnpm verb addNamed [ null, '>=1.0.1- <1.1.0-' ]\nnpm verb lock navigator@~1.0.1 /Users/hort/.npm/74cc156a-navigator-1-0-1.lock\nnpm verb cache add [ 'contextify@~0.1.3', null ]\nnpm verb parsed url { pathname: 'contextify@~0.1.3',\nnpm verb parsed url   path: 'contextify@~0.1.3',\nnpm verb parsed url   href: 'contextify@~0.1.3' }\nnpm verb parsed url { pathname: '~0.1.3', path: '~0.1.3', href: '~0.1.3' }\nnpm verb addNamed [ 'contextify', '~0.1.3' ]\nnpm verb addNamed [ null, '>=0.1.3- <0.2.0-' ]\nnpm verb lock contextify@~0.1.3 /Users/hort/.npm/6af1bfda-contextify-0-1-3.lock\nnpm verb cache add [ 'jsdom@~0.2.14', null ]\nnpm verb parsed url { pathname: 'jsdom@~0.2.14',\nnpm verb parsed url   path: 'jsdom@~0.2.14',\nnpm verb parsed url   href: 'jsdom@~0.2.14' }\nnpm verb parsed url { pathname: '~0.2.14', path: '~0.2.14', href: '~0.2.14' }\nnpm verb addNamed [ 'jsdom', '~0.2.14' ]\nnpm verb addNamed [ null, '>=0.2.14- <0.3.0-' ]\nnpm verb lock jsdom@~0.2.14 /Users/hort/.npm/dfb30512-jsdom-0-2-14.lock\nnpm verb cache add [ 'xmlhttprequest@~1.4.2', null ]\nnpm verb parsed url { pathname: 'xmlhttprequest@~1.4.2',\nnpm verb parsed url   path: 'xmlhttprequest@~1.4.2',\nnpm verb parsed url   href: 'xmlhttprequest@~1.4.2' }\nnpm verb parsed url { pathname: '~1.4.2', path: '~1.4.2', href: '~1.4.2' }\nnpm verb addNamed [ 'xmlhttprequest', '~1.4.2' ]\nnpm verb addNamed [ null, '>=1.4.2- <1.5.0-' ]\nnpm verb lock xmlhttprequest@~1.4.2 /Users/hort/.npm/5e92c166-xmlhttprequest-1-4-2.lock\nnpm verb url raw location/0.0.1\nnpm verb url resolving [ 'https://registry.npmjs.org/', './location/0.0.1' ]\nnpm verb url resolved https://registry.npmjs.org/location/0.0.1\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"8HT6W7EH3B2RG6SHUCIWIZYS8\"\nnpm http GET https://registry.npmjs.org/location/0.0.1\nnpm verb url raw contextify\nnpm verb url resolving [ 'https://registry.npmjs.org/', './contextify' ]\nnpm verb url resolved https://registry.npmjs.org/contextify\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"QOE79Z9VM2IJW4KQC2YL8NML\"\nnpm http GET https://registry.npmjs.org/contextify\nnpm verb url raw jsdom\nnpm verb url resolving [ 'https://registry.npmjs.org/', './jsdom' ]\nnpm verb url resolved https://registry.npmjs.org/jsdom\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"A9MZ7P6V77AWDMMUEOXSKRERN\"\nnpm http GET https://registry.npmjs.org/jsdom\nnpm verb url raw navigator\nnpm verb url resolving [ 'https://registry.npmjs.org/', './navigator' ]\nnpm verb url resolved https://registry.npmjs.org/navigator\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"AJTOQRVEO90FWLYQ7SKHHR4YS\"\nnpm http GET https://registry.npmjs.org/navigator\nnpm verb url raw xmlhttprequest\nnpm verb url resolving [ 'https://registry.npmjs.org/', './xmlhttprequest' ]\nnpm verb url resolved https://registry.npmjs.org/xmlhttprequest\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"17SWE6PW3LK2NC1DQ5CKS1XZR\"\nnpm http GET https://registry.npmjs.org/xmlhttprequest\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/htmlparser/package.json\nnpm info preinstall htmlparser@1.7.6\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/htmlparser/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/htmlparser/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/htmlparser\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/htmlparser\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/htmlparser/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules' ]\nnpm info linkStuff htmlparser@1.7.6\nnpm verb linkBins htmlparser@1.7.6\nnpm verb linkMans htmlparser@1.7.6\nnpm verb rebuildBundles htmlparser@1.7.6\nnpm info install htmlparser@1.7.6\nnpm info postinstall htmlparser@1.7.6\nnpm http 304 https://registry.npmjs.org/contextify\nnpm verb etag contextify from cache\nnpm http 304 https://registry.npmjs.org/cssom\nnpm verb etag cssom from cache\nnpm verb addNamed [ 'contextify', '0.1.3' ]\nnpm verb addNamed [ '0.1.3', '0.1.3' ]\nnpm verb lock contextify@0.1.3 /Users/hort/.npm/7770d4b3-contextify-0-1-3.lock\nnpm verb addNamed [ 'cssom', '0.2.5' ]\nnpm verb addNamed [ '0.2.5', '0.2.5' ]\nnpm verb lock cssom@0.2.5 /Users/hort/.npm/452affd3-cssom-0-2-5.lock\nnpm verb read json /Users/hort/.npm/contextify/0.1.3/package/package.json\nnpm verb read json /Users/hort/.npm/cssom/0.2.5/package/package.json\nnpm http 304 https://registry.npmjs.org/nwmatcher\nnpm verb etag nwmatcher from cache\nnpm http 304 https://registry.npmjs.org/cssstyle\nnpm verb etag cssstyle from cache\nnpm verb addNamed [ 'nwmatcher', '1.3.0' ]\nnpm verb addNamed [ '1.3.0', '1.3.0' ]\nnpm verb lock nwmatcher@1.3.0 /Users/hort/.npm/a146c133-nwmatcher-1-3-0.lock\nnpm verb addNamed [ 'cssstyle', '0.2.3' ]\nnpm verb addNamed [ '0.2.3', '0.2.3' ]\nnpm verb lock cssstyle@0.2.3 /Users/hort/.npm/8a9b7d6a-cssstyle-0-2-3.lock\nnpm verb read json /Users/hort/.npm/nwmatcher/1.3.0/package/package.json\nnpm verb read json /Users/hort/.npm/cssstyle/0.2.3/package/package.json\nnpm http 304 https://registry.npmjs.org/contextify\nnpm verb etag contextify from cache\nnpm WARN package.json nwmatcher@1.3.0 No README.md file found!\nnpm verb addNamed [ 'contextify', '0.1.3' ]\nnpm verb addNamed [ '0.1.3', '0.1.3' ]\nnpm verb lock contextify@0.1.3 /Users/hort/.npm/7770d4b3-contextify-0-1-3.lock\nnpm info install contextify@0.1.3 into /usr/local/lib/node_modules/node.io/node_modules/jsdom\nnpm info install cssom@0.2.5 into /usr/local/lib/node_modules/node.io/node_modules/jsdom\nnpm info install nwmatcher@1.3.0 into /usr/local/lib/node_modules/node.io/node_modules/jsdom\nnpm info install cssstyle@0.2.3 into /usr/local/lib/node_modules/node.io/node_modules/jsdom\nnpm info installOne contextify@0.1.3\nnpm info installOne cssom@0.2.5\nnpm info installOne nwmatcher@1.3.0\nnpm info installOne cssstyle@0.2.3\nnpm http 304 https://registry.npmjs.org/jsdom\nnpm verb etag jsdom from cache\nnpm verb from cache /Users/hort/.npm/contextify/0.1.3/package/package.json\nnpm verb from cache /Users/hort/.npm/cssom/0.2.5/package/package.json\nnpm verb from cache /Users/hort/.npm/nwmatcher/1.3.0/package/package.json\nnpm verb from cache /Users/hort/.npm/cssstyle/0.2.3/package/package.json\nnpm verb from cache /Users/hort/.npm/contextify/0.1.3/package/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm verb tar unpack /Users/hort/.npm/contextify/0.1.3/package.tgz\nnpm verb tar unpack /Users/hort/.npm/cssom/0.2.5/package.tgz\nnpm verb tar unpack /Users/hort/.npm/nwmatcher/1.3.0/package.tgz\nnpm verb tar unpack /Users/hort/.npm/cssstyle/0.2.3/package.tgz\nnpm verb addNamed [ 'jsdom', '0.2.19' ]\nnpm verb addNamed [ '0.2.19', '0.2.19' ]\nnpm verb lock jsdom@0.2.19 /Users/hort/.npm/37e839c1-jsdom-0-2-19.lock\nnpm verb read json /Users/hort/.npm/jsdom/0.2.19/package/package.json\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify /Users/hort/.npm/d4b3185e-es-jsdom-node-modules-contextify.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom /Users/hort/.npm/92a027cb-modules-jsdom-node-modules-cssom.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher /Users/hort/.npm/cf9f468f-les-jsdom-node-modules-nwmatcher.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle /Users/hort/.npm/0bd0b9a4-ules-jsdom-node-modules-cssstyle.lock\nnpm http 304 https://registry.npmjs.org/navigator\nnpm verb etag navigator from cache\nnpm http 304 https://registry.npmjs.org/xmlhttprequest\nnpm verb etag xmlhttprequest from cache\nnpm verb addNamed [ 'navigator', '1.0.1' ]\nnpm verb addNamed [ '1.0.1', '1.0.1' ]\nnpm verb lock navigator@1.0.1 /Users/hort/.npm/2f06f600-navigator-1-0-1.lock\nnpm verb addNamed [ 'xmlhttprequest', '1.4.2' ]\nnpm verb addNamed [ '1.4.2', '1.4.2' ]\nnpm verb lock xmlhttprequest@1.4.2 /Users/hort/.npm/55d2242a-xmlhttprequest-1-4-2.lock\nnpm http 304 https://registry.npmjs.org/location/0.0.1\nnpm verb etag location/0.0.1 from cache\nnpm verb read json /Users/hort/.npm/navigator/1.0.1/package/package.json\nnpm verb read json /Users/hort/.npm/xmlhttprequest/1.4.2/package/package.json\nnpm verb read json /Users/hort/.npm/location/0.0.1/package/package.json\nnpm info install contextify@0.1.3 into /usr/local/lib/node_modules/node.io/node_modules/jquery\nnpm info install jsdom@0.2.19 into /usr/local/lib/node_modules/node.io/node_modules/jquery\nnpm info install navigator@1.0.1 into /usr/local/lib/node_modules/node.io/node_modules/jquery\nnpm info install xmlhttprequest@1.4.2 into /usr/local/lib/node_modules/node.io/node_modules/jquery\nnpm info install location@0.0.1 into /usr/local/lib/node_modules/node.io/node_modules/jquery\nnpm info installOne contextify@0.1.3\nnpm info installOne jsdom@0.2.19\nnpm info installOne navigator@1.0.1\nnpm info installOne xmlhttprequest@1.4.2\nnpm info installOne location@0.0.1\nnpm verb from cache /Users/hort/.npm/contextify/0.1.3/package/package.json\nnpm verb from cache /Users/hort/.npm/jsdom/0.2.19/package/package.json\nnpm verb from cache /Users/hort/.npm/navigator/1.0.1/package/package.json\nnpm verb from cache /Users/hort/.npm/xmlhttprequest/1.4.2/package/package.json\nnpm verb from cache /Users/hort/.npm/location/0.0.1/package/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location/package.json\nnpm verb tar unpack /Users/hort/.npm/contextify/0.1.3/package.tgz\nnpm verb tar unpack /Users/hort/.npm/jsdom/0.2.19/package.tgz\nnpm verb tar unpack /Users/hort/.npm/navigator/1.0.1/package.tgz\nnpm verb tar unpack /Users/hort/.npm/xmlhttprequest/1.4.2/package.tgz\nnpm verb tar unpack /Users/hort/.npm/location/0.0.1/package.tgz\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify /Users/hort/.npm/3d3bc651-s-jquery-node-modules-contextify.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom /Users/hort/.npm/6b3f740b-odules-jquery-node-modules-jsdom.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator /Users/hort/.npm/0f740e75-es-jquery-node-modules-navigator.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest /Users/hort/.npm/955f3ff7-uery-node-modules-xmlhttprequest.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location /Users/hort/.npm/94dcb4b2-les-jquery-node-modules-location.lock\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator/package.json\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location/package.json\nnpm info preinstall navigator@1.0.1\nnpm info preinstall location@0.0.1\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator/package.json\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/navigator/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules' ]\nnpm info linkStuff navigator@1.0.1\nnpm verb linkBins navigator@1.0.1\nnpm verb linkMans navigator@1.0.1\nnpm verb rebuildBundles navigator@1.0.1\nnpm info install navigator@1.0.1\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/location/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules' ]\nnpm info linkStuff location@0.0.1\nnpm verb linkBins location@0.0.1\nnpm verb linkMans location@0.0.1\nnpm verb rebuildBundles location@0.0.1\nnpm info postinstall navigator@1.0.1\nnpm info install location@0.0.1\nnpm info postinstall location@0.0.1\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/package.json\nnpm info preinstall contextify@0.1.3\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/package.json\nnpm verb readDependencies using package.json deps\nnpm verb cache add [ 'bindings@', null ]\nnpm verb parsed url { pathname: 'bindings@',\nnpm verb parsed url   path: 'bindings@',\nnpm verb parsed url   href: 'bindings@' }\nnpm verb parsed url { pathname: '', path: '', href: '' }\nnpm verb addNamed [ 'bindings', '' ]\nnpm verb addNamed [ null, '' ]\nnpm verb lock bindings@ /Users/hort/.npm/a3858fc2-bindings.lock\nnpm verb url raw bindings\nnpm verb url resolving [ 'https://registry.npmjs.org/', './bindings' ]\nnpm verb url resolved https://registry.npmjs.org/bindings\nnpm info trying registry request attempt 1 at 22:49:56\nnpm verb etag \"64PA4SD751I7ZJ5D8J6WAIMVP\"\nnpm http GET https://registry.npmjs.org/bindings\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest/package.json\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom/package.json\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/package.json\nnpm info preinstall xmlhttprequest@1.4.2\nnpm info preinstall cssom@0.2.5\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest/package.json\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom/package.json\nnpm info preinstall contextify@0.1.3\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom/package.json\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/xmlhttprequest/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssom/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules' ]\nnpm info linkStuff xmlhttprequest@1.4.2\nnpm verb linkBins xmlhttprequest@1.4.2\nnpm verb linkMans xmlhttprequest@1.4.2\nnpm verb rebuildBundles xmlhttprequest@1.4.2\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules' ]\nnpm info linkStuff cssom@0.2.5\nnpm verb linkBins cssom@0.2.5\nnpm verb linkMans cssom@0.2.5\nnpm verb rebuildBundles cssom@0.2.5\nnpm info install xmlhttprequest@1.4.2\nnpm info install cssom@0.2.5\nnpm verb readDependencies using package.json deps\nnpm info postinstall xmlhttprequest@1.4.2\nnpm info postinstall cssom@0.2.5\nnpm verb cache add [ 'bindings@', null ]\nnpm verb parsed url { pathname: 'bindings@',\nnpm verb parsed url   path: 'bindings@',\nnpm verb parsed url   href: 'bindings@' }\nnpm verb parsed url { pathname: '', path: '', href: '' }\nnpm verb addNamed [ 'bindings', '*' ]\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/package.json\nnpm info preinstall jsdom@0.2.19\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/package.json\nnpm verb readDependencies using package.json deps\nnpm verb cache add [ 'cssom@0.2.x', null ]\nnpm verb parsed url { pathname: 'cssom@0.2.x',\nnpm verb parsed url   path: 'cssom@0.2.x',\nnpm verb parsed url   href: 'cssom@0.2.x' }\nnpm verb parsed url { pathname: '0.2.x', path: '0.2.x', href: '0.2.x' }\nnpm verb addNamed [ 'cssom', '0.2.x' ]\nnpm verb addNamed [ null, '>=0.2.0- <0.3.0-' ]\nnpm verb lock cssom@0.2.x /Users/hort/.npm/c83aab2e-cssom-0-2-x.lock\nnpm verb cache add [ 'cssstyle@>=0.2.3', null ]\nnpm verb parsed url { pathname: 'cssstyle@%3E=0.2.3',\nnpm verb parsed url   path: 'cssstyle@%3E=0.2.3',\nnpm verb parsed url   href: 'cssstyle@%3E=0.2.3' }\nnpm verb parsed url { pathname: '%3E=0.2.3', path: '%3E=0.2.3', href: '%3E=0.2.3' }\nnpm verb addNamed [ 'cssstyle', '>=0.2.3' ]\nnpm verb addNamed [ null, '>=0.2.3' ]\nnpm verb lock cssstyle@>=0.2.3 /Users/hort/.npm/76808a6b-cssstyle-0-2-3.lock\nnpm verb url raw cssom\nnpm verb url resolving [ 'https://registry.npmjs.org/', './cssom' ]\nnpm verb url resolved https://registry.npmjs.org/cssom\nnpm info trying registry request attempt 1 at 22:49:57\nnpm verb etag \"6JJRJ3CWIRNK80U0J9MKEK06Y\"\nnpm http GET https://registry.npmjs.org/cssom\nnpm verb url raw cssstyle\nnpm verb url resolving [ 'https://registry.npmjs.org/', './cssstyle' ]\nnpm verb url resolved https://registry.npmjs.org/cssstyle\nnpm info trying registry request attempt 1 at 22:49:57\nnpm verb etag \"3HYFL7IVTQ080DNEUXZWUEHD6\"\nnpm http GET https://registry.npmjs.org/cssstyle\nnpm http 304 https://registry.npmjs.org/bindings\nnpm verb etag bindings from cache\nnpm verb addNamed [ 'bindings', '1.0.0' ]\nnpm verb addNamed [ '1.0.0', '1.0.0' ]\nnpm verb lock bindings@1.0.0 /Users/hort/.npm/f01e5454-bindings-1-0-0.lock\nnpm verb read json /Users/hort/.npm/bindings/1.0.0/package/package.json\nnpm info install bindings@1.0.0 into /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify\nnpm info installOne bindings@1.0.0\nnpm info install bindings@1.0.0 into /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify\nnpm info installOne bindings@1.0.0\nnpm verb from cache /Users/hort/.npm/bindings/1.0.0/package/package.json\nnpm verb from cache /Users/hort/.npm/bindings/1.0.0/package/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings/package.json\nnpm verb tar unpack /Users/hort/.npm/bindings/1.0.0/package.tgz\nnpm verb tar unpack /Users/hort/.npm/bindings/1.0.0/package.tgz\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings /Users/hort/.npm/d4b40f40-contextify-node-modules-bindings.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings /Users/hort/.npm/3c9f6a6b-contextify-node-modules-bindings.lock\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings/package.json\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings/package.json\nnpm info preinstall bindings@1.0.0\nnpm info preinstall bindings@1.0.0\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings/package.json\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules/bindings/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules/bindings/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/node_modules' ]\nnpm info linkStuff bindings@1.0.0\nnpm verb linkBins bindings@1.0.0\nnpm verb linkMans bindings@1.0.0\nnpm verb rebuildBundles bindings@1.0.0\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/node_modules' ]\nnpm info linkStuff bindings@1.0.0\nnpm verb linkBins bindings@1.0.0\nnpm verb linkMans bindings@1.0.0\nnpm verb rebuildBundles bindings@1.0.0\nnpm info install bindings@1.0.0\nnpm info install bindings@1.0.0\nnpm info postinstall bindings@1.0.0\nnpm info postinstall bindings@1.0.0\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/package.json\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules' ]\nnpm info linkStuff contextify@0.1.3\nnpm verb linkBins contextify@0.1.3\nnpm verb linkMans contextify@0.1.3\nnpm verb rebuildBundles contextify@0.1.3\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules' ]\nnpm info linkStuff contextify@0.1.3\nnpm verb linkBins contextify@0.1.3\nnpm verb linkMans contextify@0.1.3\nnpm verb rebuildBundles contextify@0.1.3\nnpm verb rebuildBundles [ 'bindings' ]\nnpm info install contextify@0.1.3\nnpm verb rebuildBundles [ 'bindings' ]\nnpm info install contextify@0.1.3\nnpm verb unsafe-perm in lifecycle false\n\ncontextify@0.1.3 install /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify\nnode-gyp rebuild\n\nnpm verb set uid from=0 to=nobody\nnpm verb unsafe-perm in lifecycle false\n\ncontextify@0.1.3 install /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify\nnode-gyp rebuild\n\nnpm verb set uid from=0 to=nobody\nnpm verb set uid from=0 to=-2\nnpm verb set uid from=0 to=-2\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm info contextify@0.1.3 Failed to exec install script\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify unbuild\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify/package.json\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm info preuninstall contextify@0.1.3\nnpm info contextify@0.1.3 Failed to exec install script\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify unbuild\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify/package.json\nnpm info uninstall contextify@0.1.3\nnpm verb false,/usr/local/lib/node_modules,/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules unbuild contextify@0.1.3\nnpm info postuninstall contextify@0.1.3\nnpm WARN optional dep failed, continuing contextify@0.1.3\nnpm verb optional dep failed, continuing [ 'contextify@0.1.3',\nnpm verb optional dep failed, continuing   { [Error: contextify@0.1.3 install: node-gyp rebuild\nnpm verb optional dep failed, continuing   sh \"-c\" \"node-gyp rebuild\" failed with 127]\nnpm verb optional dep failed, continuing     code: 'ELIFECYCLE',\nnpm verb optional dep failed, continuing     pkgid: 'contextify@0.1.3',\nnpm verb optional dep failed, continuing     stage: 'install',\nnpm verb optional dep failed, continuing     script: 'node-gyp rebuild',\nnpm verb optional dep failed, continuing     pkgname: 'contextify' } ]\nnpm info preuninstall contextify@0.1.3\nnpm info uninstall contextify@0.1.3\nnpm verb false,/usr/local/lib/node_modules,/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules unbuild contextify@0.1.3\nnpm info postuninstall contextify@0.1.3\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery unbuild\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/package.json\nnpm info preuninstall jquery@1.8.3\nnpm info uninstall jquery@1.8.3\nnpm verb false,/usr/local/lib/node_modules,/usr/local/lib/node_modules/node.io/node_modules unbuild jquery@1.8.3\nnpm info postuninstall jquery@1.8.3\nnpm http 304 https://registry.npmjs.org/cssom\nnpm verb etag cssom from cache\nnpm verb addNamed [ 'cssom', '0.2.5' ]\nnpm verb addNamed [ '0.2.5', '0.2.5' ]\nnpm verb lock cssom@0.2.5 /Users/hort/.npm/452affd3-cssom-0-2-5.lock\nnpm verb from cache /Users/hort/.npm/cssom/0.2.5/package/package.json\nnpm http 304 https://registry.npmjs.org/cssstyle\nnpm verb etag cssstyle from cache\nnpm verb addNamed [ 'cssstyle', '0.2.3' ]\nnpm verb addNamed [ '0.2.3', '0.2.3' ]\nnpm verb lock cssstyle@0.2.3 /Users/hort/.npm/8a9b7d6a-cssstyle-0-2-3.lock\nnpm verb about to build /usr/local/lib/node_modules/node.io\nnpm info /usr/local/lib/node_modules/node.io unbuild\nnpm verb from cache /usr/local/lib/node_modules/node.io/package.json\nnpm info preuninstall node.io@0.4.12\nnpm verb from cache /Users/hort/.npm/cssstyle/0.2.3/package/package.json\nnpm info uninstall node.io@0.4.12\nnpm verb true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild node.io@0.4.12\nnpm verb /usr/local/bin,[object Object] binRoot\nnpm info postuninstall node.io@0.4.12\nnpm info install cssom@0.2.5 into /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom\nnpm info install cssstyle@0.2.3 into /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom\nnpm info installOne cssom@0.2.5\nnpm info installOne cssstyle@0.2.3\nnpm verb from cache /Users/hort/.npm/cssom/0.2.5/package/package.json\nnpm verb from cache /Users/hort/.npm/cssstyle/0.2.3/package/package.json\nnpm ERR! error rolling back Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties'\nnpm ERR! error rolling back  node.io@0.4.12 { [Error: ENOTEMPTY, rmdir '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties']\nnpm ERR! error rolling back   errno: 53,\nnpm ERR! error rolling back   code: 'ENOTEMPTY',\nnpm ERR! error rolling back   path: '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties' }\nnpm ERR! contextify@0.1.3 install: node-gyp rebuild\nnpm ERR! sh \"-c\" \"node-gyp rebuild\" failed with 127\nnpm ERR! \nnpm ERR! Failed at the contextify@0.1.3 install script.\nnpm ERR! This is most likely a problem with the contextify package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls contextify\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 11.4.2\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"-g\" \"-dd\" \"node.io\"\nnpm ERR! cwd /Users/hort/Work/libs\nnpm ERR! node -v v0.8.16\nnpm ERR! npm -v 1.1.69\nnpm ERR! code ELIFECYCLE\nnpm verb exit [ 1, true ]\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm verb tar unpack /Users/hort/.npm/cssom/0.2.5/package.tgz\nnpm verb tar unpack /Users/hort/.npm/cssstyle/0.2.3/package.tgz\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom /Users/hort/.npm/b36ee17e-modules-jsdom-node-modules-cssom.lock\nnpm verb lock /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle /Users/hort/.npm/2b3851a1-ules-jsdom-node-modules-cssstyle.lock\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom/package.json\nnpm info preinstall cssom@0.2.5\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssom/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules' ]\nnpm info linkStuff cssom@0.2.5\nnpm verb linkBins cssom@0.2.5\nnpm verb linkMans cssom@0.2.5\nnpm verb rebuildBundles cssom@0.2.5\nnpm info install cssom@0.2.5\nnpm info postinstall cssom@0.2.5\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle unbuild\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jsdom\nnpm info /usr/local/lib/node_modules/node.io/node_modules/jsdom unbuild\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/package.json\nnpm info preuninstall jsdom@0.3.4\nnpm info uninstall jsdom@0.3.4\nnpm verb false,/usr/local/lib/node_modules,/usr/local/lib/node_modules/node.io/node_modules unbuild jsdom@0.3.4\nnpm info postuninstall jsdom@0.3.4\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm info preinstall cssstyle@0.2.3\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules/cssstyle/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/node_modules' ]\nnpm info linkStuff cssstyle@0.2.3\nnpm verb linkBins cssstyle@0.2.3\nnpm verb linkMans cssstyle@0.2.3\nnpm verb rebuildBundles cssstyle@0.2.3\nnpm info install cssstyle@0.2.3\nnpm info postinstall cssstyle@0.2.3\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/jsdom/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules' ]\nnpm info linkStuff jsdom@0.2.19\nnpm verb linkBins jsdom@0.2.19\nnpm verb linkMans jsdom@0.2.19\nnpm verb rebuildBundles jsdom@0.2.19\nnpm verb rebuildBundles [ 'cssom', 'cssstyle' ]\nnpm info install jsdom@0.2.19\nnpm info postinstall jsdom@0.2.19\nnpm verb read json /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher/package.json\nnpm info preinstall nwmatcher@1.3.0\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher/package.json\nnpm verb readDependencies using package.json deps\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher/package.json\nnpm verb readDependencies using package.json deps\nnpm verb about to build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher\nnpm info build /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher\nnpm verb from cache /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/nwmatcher/package.json\nnpm verb linkStuff [ true,\nnpm verb linkStuff   '/usr/local/lib/node_modules',\nnpm verb linkStuff   false,\nnpm verb linkStuff   '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules' ]\nnpm info linkStuff nwmatcher@1.3.0\nnpm verb linkBins nwmatcher@1.3.0\nnpm verb linkMans nwmatcher@1.3.0\nnpm verb rebuildBundles nwmatcher@1.3.0\nnpm info install nwmatcher@1.3.0\nnpm info postinstall nwmatcher@1.3.0\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/hort/Work/libs/npm-debug.log\nnpm ERR! not ok code 0\nHorts-MacBook-Pro:libs hort$\n. Thanks for the persistence on this. I ran it and originally thought it worked, but saw a typo in the node.io install, which I flagged -d by accident instead of -g. So I reran them:\nHorts-MacBook-Pro:linkchecker hort$ rm -rf ~/.node-gyp\nHorts-MacBook-Pro:linkchecker hort$ sudo rm -rf /usr/local/lib/node_modules/node.io\nHorts-MacBook-Pro:linkchecker hort$ sudo npm install -g node.io\nnpm http GET https://registry.npmjs.org/node.io\nnpm http 304 https://registry.npmjs.org/node.io\nnpm http GET https://registry.npmjs.org/htmlparser\nnpm http GET https://registry.npmjs.org/coffee-script\nnpm http GET https://registry.npmjs.org/jquery\nnpm http GET https://registry.npmjs.org/request/2.9.202\nnpm http GET https://registry.npmjs.org/jsdom\nnpm http 304 https://registry.npmjs.org/htmlparser\nnpm http 304 https://registry.npmjs.org/jquery\nnpm http 304 https://registry.npmjs.org/coffee-script\nnpm http 304 https://registry.npmjs.org/request/2.9.202\nnpm http 304 https://registry.npmjs.org/jsdom\nnpm http GET https://registry.npmjs.org/nwmatcher\nnpm http GET https://registry.npmjs.org/cssom\nnpm http GET https://registry.npmjs.org/cssstyle\nnpm http GET https://registry.npmjs.org/contextify\nnpm http GET https://registry.npmjs.org/xmlhttprequest\nnpm http GET https://registry.npmjs.org/location/0.0.1\nnpm http GET https://registry.npmjs.org/jsdom\nnpm http GET https://registry.npmjs.org/navigator\nnpm http GET https://registry.npmjs.org/contextify\nnpm http 304 https://registry.npmjs.org/contextify\nnpm http 304 https://registry.npmjs.org/nwmatcher\nnpm http 304 https://registry.npmjs.org/cssstyle\nnpm WARN package.json nwmatcher@1.3.0 No README.md file found!\nnpm http 304 https://registry.npmjs.org/location/0.0.1\nnpm http 304 https://registry.npmjs.org/cssom\nnpm http 304 https://registry.npmjs.org/navigator\nnpm http 304 https://registry.npmjs.org/jsdom\nnpm http 304 https://registry.npmjs.org/contextify\nnpm http 304 https://registry.npmjs.org/xmlhttprequest\nnpm http GET https://registry.npmjs.org/bindings\nnpm http 304 https://registry.npmjs.org/bindings\n\ncontextify@0.1.3 install /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/contextify\nnode-gyp rebuild\ncontextify@0.1.3 install /usr/local/lib/node_modules/node.io/node_modules/jquery/node_modules/contextify\nnode-gyp rebuild\n\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied\nsh: node-gyp: command not found\nnpm WARN optional dep failed, continuing contextify@0.1.3\nnpm ERR! Error: ENOENT, chown '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties/webkitMarginBefore.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     http://github.com/isaacs/npm/issues\nnpm ERR! or email it to:\nnpm ERR!     npm-@googlegroups.com\nnpm ERR! System Darwin 11.4.2\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"-g\" \"node.io\"\nnpm ERR! cwd /Users/hort/Work/_jpgninja/linkchecker\nnpm ERR! node -v v0.8.16\nnpm ERR! npm -v 1.1.69\nnpm ERR! path /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties/webkitMarginBefore.js\nnpm ERR! fstream_path /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties/webkitMarginBefore.js\nnpm ERR! fstream_type File\nnpm ERR! fstream_class FileWriter\nnpm ERR! fstream_finish_call chown\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! fstream_stack Writer._finish (/usr/local/lib/node_modules/npm/node_modules/fstream/lib/writer.js:305:19)\nnpm ERR! fstream_stack /usr/local/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:218:7\nnpm ERR! fstream_stack Object.oncomplete (fs.js:297:15)\nnpm ERR! Error: ENOENT, open '/usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties/lineHeight.js'\nnpm ERR! If you need help, you may report this log at:\nnpm ERR!     http://github.com/isaacs/npm/issues\nnpm ERR! or email it to:\nnpm ERR!     npm-@googlegroups.com\nnpm ERR! System Darwin 11.4.2\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"-g\" \"node.io\"\nnpm ERR! cwd /Users/hort/Work/_jpgninja/linkchecker\nnpm ERR! node -v v0.8.16\nnpm ERR! npm -v 1.1.69\nnpm ERR! path /usr/local/lib/node_modules/node.io/node_modules/jsdom/node_modules/cssstyle/lib/properties/lineHeight.js\nnpm ERR! code ENOENT\nnpm ERR! errno 34\nnpm ERR! contextify@0.1.3 install: node-gyp rebuild\nnpm ERR! sh \"-c\" \"node-gyp rebuild\" failed with 127\nnpm ERR! \nnpm ERR! Failed at the contextify@0.1.3 install script.\nnpm ERR! This is most likely a problem with the contextify package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls contextify\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Darwin 11.4.2\nnpm ERR! command \"node\" \"/usr/local/bin/npm\" \"install\" \"-g\" \"node.io\"\nnpm ERR! cwd /Users/hort/Work/_jpgninja/linkchecker\nnpm ERR! node -v v0.8.16\nnpm ERR! npm -v 1.1.69\nnpm ERR! code ELIFECYCLE\nnpm http GET https://registry.npmjs.org/cssom\nnpm http GET https://registry.npmjs.org/cssstyle\nnpm http 304 https://registry.npmjs.org/cssom\nnpm http 304 https://registry.npmjs.org/cssstyle\nnpm ERR! \nnpm ERR! Additional logging details can be found in:\nnpm ERR!     /Users/hort/Work/_jpgninja/linkchecker/npm-debug.log\nnpm ERR! not ok code 0\nHorts-MacBook-Pro:linkchecker hort$\n. It's worth noting, that I had to run sudo for the second rm, otherwise it gives me a load of permission denied's.\nHorts-MacBook-Pro:linkchecker hort$ sudo rm -rf /usr/local/lib/node_modules/node.io\n. That was a mis-click, my [enter] finger got heavy as I was scouring the latest error message. I've been Googling today again hoping to sort it out.\nI feel like it could be something simple that I'm doing incorrectly since this is my first attempt at node.js, period. I have XCode with Command Line Tools installed, OSX, node, npm, is there something glaringly obvious that could be missing?\n. Removed all modules, then node, re-installed and got the same thing.\nCreated a ticket at npm in hopes that @isaacs has further info on what might be happening. I appreciate your help.\n. I have no idea what it was. I had all but given up until I saw your comment come in... I figured I'd give it another shot and got it working. No idea what changed, but here was the process I followed:\n- Uninstalled everything via these instructions http://stackoverflow.com/a/11178106\n- Re-installed nvm first (wasn't using it before)\n- Installed node through nvm\n- Installed node.io and tasted reddit pagerank example\nI didn't need to use sudo to install either, which was pretty cool. I dunno what changed but it's working now, let's get scraping! Thanks for hand-holding, you guys! :)\n. ",
    "imagreenplant": "I ran into a similar problem, though I'm unsure it will help you.   I was dusting off my old node stuff and installed the latest using nvm.  However, I hadn't changed over to the newer version (was still using 0.6.10). \nWhen I first tried to install when my node version was 0.6.10, it failed (not exactly the same as yours, but similar).\nWhen I uninstalled 0.6.10 using nvm and attempted to install node.io again, it worked just fine for me.\nHope this helps.  (Currently using v0.8.18)\n. ",
    "soccer10man": "installed python 27.. it passed the python error but still failing to build. maybe, node.io is not supported in windows 7?\nanyway, here is the output.\nC:\\Users\\mike>npm install -g node.io\nnpm http GET https://registry.npmjs.org/node.io\nnpm http 304 https://registry.npmjs.org/node.io\nnpm http GET https://registry.npmjs.org/htmlparser\nnpm http GET https://registry.npmjs.org/jquery\nnpm http GET https://registry.npmjs.org/coffee-script\nnpm http GET https://registry.npmjs.org/request/2.9.202\nnpm http GET https://registry.npmjs.org/jsdom\nnpm http 304 https://registry.npmjs.org/jquery\nnpm http 304 https://registry.npmjs.org/coffee-script\nnpm http 304 https://registry.npmjs.org/jsdom\nnpm http 304 https://registry.npmjs.org/htmlparser\nnpm http 304 https://registry.npmjs.org/request/2.9.202\nnpm http GET https://registry.npmjs.org/location/0.0.1\nnpm http GET https://registry.npmjs.org/xmlhttprequest\nnpm http GET https://registry.npmjs.org/navigator\nnpm http GET https://registry.npmjs.org/jsdom\nnpm http GET https://registry.npmjs.org/contextify\nnpm http GET https://registry.npmjs.org/cssom\nnpm http GET https://registry.npmjs.org/nwmatcher\nnpm http GET https://registry.npmjs.org/contextify\nnpm http GET https://registry.npmjs.org/cssstyle\nnpm http 304 https://registry.npmjs.org/navigator\nnpm http 304 https://registry.npmjs.org/xmlhttprequest\nnpm http 304 https://registry.npmjs.org/jsdom\nnpm http 304 https://registry.npmjs.org/contextify\nnpm http 304 https://registry.npmjs.org/location/0.0.1\nnpm http 304 https://registry.npmjs.org/cssom\nnpm http GET https://registry.npmjs.org/bindings\nnpm http 304 https://registry.npmjs.org/nwmatcher\nnpm WARN package.json nwmatcher@1.3.0 No README.md file found!\nnpm http 304 https://registry.npmjs.org/contextify\nnpm http 304 https://registry.npmjs.org/cssstyle\nnpm http GET https://registry.npmjs.org/cssstyle\nnpm http GET https://registry.npmjs.org/cssom\nnpm http 304 https://registry.npmjs.org/bindings\nnpm http 304 https://registry.npmjs.org/cssstyle\nnpm http 304 https://registry.npmjs.org/cssom\n\ncontextify@0.1.3 install C:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.i\no\\node_modules\\jsdom\\node_modules\\contextify\nnode-gyp rebuild\ncontextify@0.1.3 install C:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.i\no\\node_modules\\jquery\\node_modules\\contextify\nnode-gyp rebuild\n\nC:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\\jsdom\\node_m\nodules\\contextify>node \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\node-gyp-bi\nn....\\node_modules\\node-gyp\\bin\\node-gyp.js\" rebuild\nC:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\\jquery\\node_\nmodules\\contextify>node \"C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\node-gyp-b\nin....\\node_modules\\node-gyp\\bin\\node-gyp.js\" rebuild\nBuilding the projects in this solution one at a time. To enable parallel build,\nplease add the \"/m\" switch.\nBuilding the projects in this solution one at a time. To enable parallel build,\nplease add the \"/m\" switch.\nC:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\\jquery\\node\nmodules\\contextify\\build\\contextify.vcxproj(18,3): error MSB4019: The imported\n project \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path\nin the  declaration is correct, and that the file exists on disk.\ngyp ERR! build error\ngyp ERR! stack Error: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\msbuild.e\nxe failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Program Files\\nodejs\\node_modules\\\nnpm\\node_modules\\node-gyp\\lib\\build.js:255:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:99:17)\ngyp ERR! stack     at Process._handle.onexit (child_process.js:678:10)\ngyp ERR! System Windows_NT 6.1.7601\ngyp ERR! command \"node\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modu\nles\\node-gyp\\bin\\node-gyp.js\" \"rebuild\"\ngyp ERR! cwd C:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\n\\jquery\\node_modules\\contextify\ngyp ERR! node -v v0.8.17\ngyp ERR! node-gyp -v v0.8.2\ngyp ERR! not ok\nC:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\\jsdom\\node\nmodules\\contextify\\build\\contextify.vcxproj(18,3): error MSB4019: The imported\nproject \"C:\\Microsoft.Cpp.Default.props\" was not found. Confirm that the path i\nn the  declaration is correct, and that the file exists on disk.\ngyp ERR! build error\ngyp ERR! stack Error: C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\msbuild.e\nxe failed with exit code: 1\ngyp ERR! stack     at ChildProcess.onExit (C:\\Program Files\\nodejs\\node_modules\\\nnpm\\node_modules\\node-gyp\\lib\\build.js:255:23)\ngyp ERR! stack     at ChildProcess.EventEmitter.emit (events.js:99:17)\ngyp ERR! stack     at Process._handle.onexit (child_process.js:678:10)\ngyp ERR! System Windows_NT 6.1.7601\ngyp ERR! command \"node\" \"C:\\Program Files\\nodejs\\node_modules\\npm\\node_modu\nles\\node-gyp\\bin\\node-gyp.js\" \"rebuild\"\ngyp ERR! cwd C:\\Users\\mike\\AppData\\Roaming\\npm\\node_modules\\node.io\\node_modules\n\\jsdom\\node_modules\\contextify\ngyp ERR! node -v v0.8.17\ngyp ERR! node-gyp -v v0.8.2\ngyp ERR! not ok\nnpm WARN optional dep failed, continuing contextify@0.1.3\nnpm ERR! contextify@0.1.3 install: node-gyp rebuild\nnpm ERR! cmd \"/c\" \"node-gyp rebuild\" failed with 1\nnpm ERR!\nnpm ERR! Failed at the contextify@0.1.3 install script.\nnpm ERR! This is most likely a problem with the contextify package,\nnpm ERR! not with npm itself.\nnpm ERR! Tell the author that this fails on your system:\nnpm ERR!     node-gyp rebuild\nnpm ERR! You can get their info via:\nnpm ERR!     npm owner ls contextify\nnpm ERR! There is likely additional logging output above.\nnpm ERR! System Windows_NT 6.1.7601\nnpm ERR! command \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nod\nejs\\node_modules\\npm\\bin\\npm-cli.js\" \"install\" \"-g\" \"node.io\"\nnpm ERR! cwd C:\\Users\\mike\nnpm ERR! node -v v0.8.17\nnpm ERR! npm -v 1.2.0\nnpm ERR! code ELIFECYCLE\nnpm ERR!\nnpm ERR! Additional logging details can be found in:\nnpm ERR!     C:\\Users\\mike\\npm-debug.log\nnpm ERR! not ok code 0\nC:\\Users\\mike>\n. ",
    "xverges": "I was having the same issue doing \"npm install contextify\": it was caused by my environment.\nTo have node-gyp working on Windows7 64 you have to install, in the following order (as specified by the last item in the list)\n1. Visual Studio 2010\n2. Windows SDK 7.1\n3. Visual Studio 2010 SP1\n4. Visual C++ 2010 SP1 Compiler Update for the Windows SDK 7.1 \nYou can get the links from the readme in https://github.com/TooTallNate/node-gyp\n. ",
    "devasur": "Since each loop makes url to a new value, and since getHtml is async, by the time getHtml() returns to the callback it only has the last set value for url.  May be I am missing something basic.  Sorry, very newbie here.\n. Thanks Chris.  Some more learning for me.\n. ",
    "ttback": "didn't know about no emit() more than once. Would love to learn more.\nYour code worked for me, but I wanted to improve it to be var entries=[]\ninstead of end up with arrays of attributes of entries. After playing with it for a hour, I kinda figured it out myself now, by using the $('title', context) seems to work fine. Thanks for responding. :)\n. yea, there's a lot to learn, just want to get these basics working first for a quick demo. :)\nThis is by far the shortest amount of time required for me to make a scrapper work beside doing it through command line. Keep up the good work!\n. Exactly where I messed up, I forgot that in js, str.replace() is different from java, thank you!\n. ",
    "harrisj": "Oof. That was it! Sorry, but thanks for the prompt reply.\nOn Mar 18, 2013, at 6:45 PM, \"chriso\" notifications@github.com<mailto:notifications@github.com> wrote:\nYou updated the global node.io but probably didn't update the local copy that your script uses when you require('node.io').\nTry running npm install node.io in the same directory as your hello.coffee.\nBoth of the following commands should output node.io@0.4.13mailto:node.io@0.4.13\n$ npm ls -g 2>/dev/null | grep node.io\n$ npm ls 2>/dev/null | grep node.io\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/chriso/node.io/issues/141#issuecomment-15086970.\n. ",
    "pccowboy": "You are most welcome - I really appreciate node.io, so I am very happy to have been of some small help.\n. ",
    "vjpr": "I am installing globally.\nI tried npm install -g --force node.io but it did not fix it.\nI get the same message in other projects but it does not error, its just a\nwarning. Anything that could be causing it to error instead of warning? The\nonly difference I can see is that its globally installed.\nOn Sun, Apr 7, 2013 at 1:54 PM, chriso notifications@github.com wrote:\n\nThere's no path.exists or fs.exists calls in the library but there might\nbe a few in older dependencies.\n/tmp/node.io (air) $ grep -r 'path.exists' */.js\nnode_modules/coffee-script/lib/coffee-script/cake.js:  existsSync = fs.existsSync || path.existsSync;\nnode_modules/coffee-script/lib/coffee-script/command.js:  exists = fs.exists || path.exists;\nnode_modules/jquery/node_modules/contextify/node_modules/bindings/bindings.js:  , exists = fs.existsSync || path.existsSync\nnode_modules/jsdom/node_modules/contextify/node_modules/bindings/bindings.js:  , exists = fs.existsSync || path.existsSync\nTry removing node_modules and reinstalling with npm install\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/chriso/node.io/issues/145#issuecomment-16008998\n.\n. Okay. Must be a problem on my end then. Especially since I'm getting these messages in other modules.\n. \n",
    "oliland": "Pull request fail\n. ",
    "wildeyes": "Oh. Because of the way the command is presented, I thought it was a built-in one, Thanks!\n. Please try to post an http://sscce.org/.\nIf I could reproduce your problem, I could help you fix it.\n. ",
    "ryanwinchester": "I gave up on this one for a while. If I go back to it I will get all the info requested.\n. ",
    "ReadmeCritic": ":sweat_smile: \n. "
}