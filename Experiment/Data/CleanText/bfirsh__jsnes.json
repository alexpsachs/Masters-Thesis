{
    "jancborchardt": "Tested on Chrome and Firefox and works. This is great! Can you pull it in @bfirsh?\n. I can\u2019t reproduce this, everything works fine. Probably fixed.\n. If you mean having on-screen controls to be able to play on tablets, that would be really cool.\n. Thank you for everything else!\n. Yup. I added JSNES to Libre Projects by the way.\n. @josephlewis42 can you open a pull request then? :)\n. Tested on Chrome and Firefox and works. This is great! Can you pull it in @bfirsh?\n. I can\u2019t reproduce this, everything works fine. Probably fixed.\n. If you mean having on-screen controls to be able to play on tablets, that would be really cool.\n. Thank you for everything else!\n. Yup. I added JSNES to Libre Projects by the way.\n. @josephlewis42 can you open a pull request then? :)\n. ",
    "bfirsh": "Thanks both! This is obviously very out of date now, but I still want to add support for this. The UI for JSNES has moved to a new repository and I've created an issue for it: https://github.com/bfirsh/jsnes-web/issues/16. Ah, thanks, good catch!\n. If you are easily upset by unholy hacks, you may not want to look at this:\nhttps://github.com/bfirsh/jsnes/blob/master/source/jsnes-ie-hacks.vbscript\n. Thanks!\n. This looks awesome - thank you. I'm in the middle of my final exams at the moment, but I will take a look over it afterwards. :)\n. This is very out of date now, but feel free to submit again if you feel like updating it. :)\nFWIW, Uglify now compiles JSNES down to 20KB gzipped.. Wooot. Thanks @webdevbyjoss.\nNow live: https://fir.sh/projects/jsnes/\n. an attempt and some discussion: #20. Replacing with https://github.com/bfirsh/jsnes-web/issues/20. Meh.. Thanks! This is very out of date now, but I've created an issue here to keep track: https://github.com/bfirsh/jsnes-web/issues/19. Thanks!\n. Thanks again\n. :+1:\n. I've moved the web emulator to a different repository and created an issue for it. Thanks all for your input! https://github.com/bfirsh/jsnes-web/issues/18. This is probably because toJSON or fromJSON somewhere is missing some data.... fixed! https://github.com/bfirsh/jsnes/pull/50. @minimi Cherry-picked from your repo.\nhttps://github.com/bfirsh/jsnes/commit/116035bf505cc8f8908ef2370d53b366a4d7106f\nThanks!. Thanks! This is very out of date now but I've created an issue here to keep track: https://github.com/bfirsh/jsnes-web/issues/19. Thanks @joeheyming! It'd be great to get this supported properly, rather than it just be an experiment.\nI think at the very least, we should have some built in code that does browser detection, and if it is a mobile browser, attempts to add overlay controls. That can be in the main emulator -- I don't think it needs to be separate.\n@drakmail is the code in your fork good enough for a pull request?. The web stuff for the emulator is now in a separate repository, so I've moved this to here. :) https://github.com/bfirsh/jsnes-web/issues/20. Thanks!\n. It's live! https://github.com/bfirsh/fir.sh/commit/6b0dad623cd7f635fc19530654bc32f669a3f43a\n. Thanks! This is very out of date now, but I've created an issue here to keep track: https://github.com/bfirsh/jsnes-web/issues/19. Now fixed!. Thanks!\n. Thanks for this! There is lots of stuff wrong with drawing at the moment \u2013 I shall experiment with requestAnimationFrame to see if that helps.\n. Thanks!\n. btw @isharacomix - thanks for all the issues you've reported. I'm totally snowed under with work, but I've added you as a collaborator if you ever want to hack on things!\n. Did this cause a problem?\n. Will assume it did \u2013\u00a0thanks!\n. Looks reasonable to me. Thanks!. https://github.com/olahol/melody-jsnes :). Thanks!\n. Thanks! It's bfirsh. I just used a package.json to get Grunt setup, but perhaps it should be published on npm too...\n. I think I have access... it's showing up on my profile at least https://www.npmjs.org/~bfirsh\n. :tada: https://www.npmjs.com/package/jsnes. It's now on npm - is this enough, do you think?\nhttps://www.npmjs.com/package/jsnes. Thanks for this! Clear pixels is now done in a much simpler way in the new version: https://github.com/bfirsh/jsnes-web. Thanks @josephlewis42! I've now moved the web emulator to a different repository, so this is now out of date. I've created issues here: https://github.com/bfirsh/jsnes-web/issues/18 https://github.com/bfirsh/jsnes-web/issues/19\nFeel free to rebase on top of the new repository. Or, I will get to porting this over at some point. :)\nThanks again!. Thanks!\n. Nice! Will try this out this weekend - thanks. :)\n. I wonder if this would make sense to put in dynamicaudio. Then we would get a reusable API which let you write audio with flash fallback.\nAre there any limitations of the dynamicaudio API that means it can't live there?\n. Dupe of #47. Moved here https://github.com/bfirsh/jsnes-web/issues/19. Sound reasonable - thanks!. Now fixed in https://github.com/bfirsh/jsnes-web\nNot yet deployed to the website, though.. You might be interested in this. :) https://github.com/olahol/melody-jsnes. dynamicaudio.js uses webaudio, and only falls back on flash if it isn't supported.. Thanks for the contribution, though!. Nice. What is the browser support for this?. Excellent - SGTM. I'll pull it downstream into the new branches when I get some time. (You're welcome to too if you get to it before me. ;)\nThanks for the contribution! :sparkles:. Woohoo thanks! Yes I have tried several times to make this work over the past few years. Last time I looked this wasn't supported.\nBTW all new development for JSNES is happening in this branch and separate repo:\nhttps://github.com/bfirsh/jsnes/tree/split-out-ui\nhttps://github.com/bfirsh/jsnes-web\nI have already implemented this in jsnes-web.. Will merge for the time being so it works in the old version, at least. :)\nThank you! \ud83d\udc96 . What @MeteorKL said. :)\nThanks @MeteorKL !. Which ROM are you trying to load?. Nice thanks! I've afraid I've made some pretty major changes to the emulator, and the web stuff is now in a new repository. I've made an issue here to keep track and link off to the other implementations of this:\nhttps://github.com/bfirsh/jsnes-web/issues/19\nFeel free to rebase on top of the new repository. Or, at some point I'll get to it too. :)\nThanks again!. @dependabot rebase?. @dependabot rebase?. @hmarr FYI I have to close/open this to get @dependabot to rebase this!. Thanks! Looks like it still hasn't rebased.. sweet thanks!. ah thanks!\n. D'oh. Thank you.. Very cool, thank you! Do you think it'd be possible to get a test for this? That'd also double as a code example, as I see you've added and then removed. :). :+1: it looks like the gamegenie class can be easily unit tested, which would probably be sufficient. An integration test on a ROM would be great too, as you suggest. Thank you!. Thanks both! This is obviously very out of date now, but I still want to add support for this. The UI for JSNES has moved to a new repository and I've created an issue for it: https://github.com/bfirsh/jsnes-web/issues/16. Ah, thanks, good catch!\n. If you are easily upset by unholy hacks, you may not want to look at this:\nhttps://github.com/bfirsh/jsnes/blob/master/source/jsnes-ie-hacks.vbscript\n. Thanks!\n. This looks awesome - thank you. I'm in the middle of my final exams at the moment, but I will take a look over it afterwards. :)\n. This is very out of date now, but feel free to submit again if you feel like updating it. :)\nFWIW, Uglify now compiles JSNES down to 20KB gzipped.. Wooot. Thanks @webdevbyjoss.\nNow live: https://fir.sh/projects/jsnes/\n. an attempt and some discussion: #20. Replacing with https://github.com/bfirsh/jsnes-web/issues/20. Meh.. Thanks! This is very out of date now, but I've created an issue here to keep track: https://github.com/bfirsh/jsnes-web/issues/19. Thanks!\n. Thanks again\n. :+1:\n. I've moved the web emulator to a different repository and created an issue for it. Thanks all for your input! https://github.com/bfirsh/jsnes-web/issues/18. This is probably because toJSON or fromJSON somewhere is missing some data.... fixed! https://github.com/bfirsh/jsnes/pull/50. @minimi Cherry-picked from your repo.\nhttps://github.com/bfirsh/jsnes/commit/116035bf505cc8f8908ef2370d53b366a4d7106f\nThanks!. Thanks! This is very out of date now but I've created an issue here to keep track: https://github.com/bfirsh/jsnes-web/issues/19. Thanks @joeheyming! It'd be great to get this supported properly, rather than it just be an experiment.\nI think at the very least, we should have some built in code that does browser detection, and if it is a mobile browser, attempts to add overlay controls. That can be in the main emulator -- I don't think it needs to be separate.\n@drakmail is the code in your fork good enough for a pull request?. The web stuff for the emulator is now in a separate repository, so I've moved this to here. :) https://github.com/bfirsh/jsnes-web/issues/20. Thanks!\n. It's live! https://github.com/bfirsh/fir.sh/commit/6b0dad623cd7f635fc19530654bc32f669a3f43a\n. Thanks! This is very out of date now, but I've created an issue here to keep track: https://github.com/bfirsh/jsnes-web/issues/19. Now fixed!. Thanks!\n. Thanks for this! There is lots of stuff wrong with drawing at the moment \u2013 I shall experiment with requestAnimationFrame to see if that helps.\n. Thanks!\n. btw @isharacomix - thanks for all the issues you've reported. I'm totally snowed under with work, but I've added you as a collaborator if you ever want to hack on things!\n. Did this cause a problem?\n. Will assume it did \u2013\u00a0thanks!\n. Looks reasonable to me. Thanks!. https://github.com/olahol/melody-jsnes :). Thanks!\n. Thanks! It's bfirsh. I just used a package.json to get Grunt setup, but perhaps it should be published on npm too...\n. I think I have access... it's showing up on my profile at least https://www.npmjs.org/~bfirsh\n. :tada: https://www.npmjs.com/package/jsnes. It's now on npm - is this enough, do you think?\nhttps://www.npmjs.com/package/jsnes. Thanks for this! Clear pixels is now done in a much simpler way in the new version: https://github.com/bfirsh/jsnes-web. Thanks @josephlewis42! I've now moved the web emulator to a different repository, so this is now out of date. I've created issues here: https://github.com/bfirsh/jsnes-web/issues/18 https://github.com/bfirsh/jsnes-web/issues/19\nFeel free to rebase on top of the new repository. Or, I will get to porting this over at some point. :)\nThanks again!. Thanks!\n. Nice! Will try this out this weekend - thanks. :)\n. I wonder if this would make sense to put in dynamicaudio. Then we would get a reusable API which let you write audio with flash fallback.\nAre there any limitations of the dynamicaudio API that means it can't live there?\n. Dupe of #47. Moved here https://github.com/bfirsh/jsnes-web/issues/19. Sound reasonable - thanks!. Now fixed in https://github.com/bfirsh/jsnes-web\nNot yet deployed to the website, though.. You might be interested in this. :) https://github.com/olahol/melody-jsnes. dynamicaudio.js uses webaudio, and only falls back on flash if it isn't supported.. Thanks for the contribution, though!. Nice. What is the browser support for this?. Excellent - SGTM. I'll pull it downstream into the new branches when I get some time. (You're welcome to too if you get to it before me. ;)\nThanks for the contribution! :sparkles:. Woohoo thanks! Yes I have tried several times to make this work over the past few years. Last time I looked this wasn't supported.\nBTW all new development for JSNES is happening in this branch and separate repo:\nhttps://github.com/bfirsh/jsnes/tree/split-out-ui\nhttps://github.com/bfirsh/jsnes-web\nI have already implemented this in jsnes-web.. Will merge for the time being so it works in the old version, at least. :)\nThank you! \ud83d\udc96 . What @MeteorKL said. :)\nThanks @MeteorKL !. Which ROM are you trying to load?. Nice thanks! I've afraid I've made some pretty major changes to the emulator, and the web stuff is now in a new repository. I've made an issue here to keep track and link off to the other implementations of this:\nhttps://github.com/bfirsh/jsnes-web/issues/19\nFeel free to rebase on top of the new repository. Or, at some point I'll get to it too. :)\nThanks again!. @dependabot rebase?. @dependabot rebase?. @hmarr FYI I have to close/open this to get @dependabot to rebase this!. Thanks! Looks like it still hasn't rebased.. sweet thanks!. ah thanks!\n. D'oh. Thank you.. Very cool, thank you! Do you think it'd be possible to get a test for this? That'd also double as a code example, as I see you've added and then removed. :). :+1: it looks like the gamegenie class can be easily unit tested, which would probably be sufficient. An integration test on a ROM would be great too, as you suggest. Thank you!. ",
    "gmarty": "Oh, my bad. I tend to forget there are users still using IE :-)\n. Hi. Did you have a chance to review my pull request?\n. Oh, my bad. I tend to forget there are users still using IE :-)\n. Hi. Did you have a chance to review my pull request?\n. ",
    "ghost": "bfirsh and gmarty: I'm doing a GBA emulator in JS and I'm wondering once I get my code into GIT after I feel it's okay-sh, that you guys possibly take a look and even commit to if if you'd like.\nI'm also accepting commits and patches to the GBC emulator in JS I've already written.\n. You can also check out the XAudioJS lib that I originally did for my GBC emu so you can implement similar support in jsNES.\nIf you're wondering why I decided not to add a flash fallback for my GBC emu, because I wanted it to be completely non-plugin based.\n. Also, GameBoys have their own mappers called MBC, so specific mappings can be done by swapping out references  of the target handling functions in the memory array based on the cartridge mapper type.\nChaning to this way of reading and writing to memory probably made my emulator 40% faster instantly.\nAlso, see about using typed arrays for storing the memory values, since firefox added a 10% performance boost as well from that to the GameBoy Color emulator I did.\n. bfirsh and gmarty: I'm doing a GBA emulator in JS and I'm wondering once I get my code into GIT after I feel it's okay-sh, that you guys possibly take a look and even commit to if if you'd like.\nI'm also accepting commits and patches to the GBC emulator in JS I've already written.\n. You can also check out the XAudioJS lib that I originally did for my GBC emu so you can implement similar support in jsNES.\nIf you're wondering why I decided not to add a flash fallback for my GBC emu, because I wanted it to be completely non-plugin based.\n. Also, GameBoys have their own mappers called MBC, so specific mappings can be done by swapping out references  of the target handling functions in the memory array based on the cartridge mapper type.\nChaning to this way of reading and writing to memory probably made my emulator 40% faster instantly.\nAlso, see about using typed arrays for storing the memory values, since firefox added a 10% performance boost as well from that to the GameBoy Color emulator I did.\n. ",
    "richardanaya": "Wow, nice job! Google hyper optimizations =)\n. Wow, nice job! Google hyper optimizations =)\n. ",
    "bolinfest": "Is the webkit web audio more performant than the .swf? Enabling the sound in Chrome using the .swf seems to slow things down.\n. Is the webkit web audio more performant than the .swf? Enabling the sound in Chrome using the .swf seems to slow things down.\n. ",
    "Hoolean": "I get severe latency in sound when using the .swf sound in Chromium\n. Can confirm. Maybe the WebAudio API is now mature enough to use?\n. I get severe latency in sound when using the .swf sound in Chromium\n. Can confirm. Maybe the WebAudio API is now mature enough to use?\n. ",
    "davidmarkclements": "I've been experimenting with the WebAudio API and I have a PoC which gets the sound syncing correctly. \nHowever I'm struggling with sound quality, I'm pretty certain this is because I'm not correctly converting\nfrom Arrays of numbers between 0-255 (e.g. representing bytes, essentially the equivalent of Uint8Arrays) and Float32Arrays (which is what buffer.getChannelData returns).\nAlso the volume is super high, this can be easily adjusted by applying a ratio to the output, but we shouldn't have to do that. \nHere's my efforts so far (WARNING PUT VOLUME TO MINIMUM BEFORE TESTING): \nhttps://github.com/davidmarkclements/jsnes/commit/8a4a2244255114aa03d5da2ac0e54ddfb7aa1824#diff-478c5384d0b4a5ca4c1a8e27f9a68c08\nThe closest sound quality I could get is by passing samples array to Uint16Array, then passing the resulting ArrayBuffer into Float32Array, which is copied (using set) into the left and right channels there's probably a better way\nIt's quite likely that @bfirsh will know exactly how to convert to Float32Array but it seems like he's lost interest :( \n. One thought is that papu.js actually mixes the right and left channels together with bitwise ops, if we could figure how to untangle that, it might be easier (and .. actually much cooler) to send each channels audio seperately\n. EDIT this issue is essentially a duplicate of #7 \n\n\nsound is choppy in chrome because jsnes uses dynamicaudio.js which uses swf fallback in chrome\nsound probably doesn't work in firefox anymore because dynamicaudio.js uses mozWriteAudio which is deprecated\n\nI've been experimenting with the WebAudio API and I have a PoC which gets the sound syncing correctly. \nHowever I'm struggling with sound quality, I'm pretty certain this is because I'm not correctly converting\nfrom Arrays of numbers between 0-255 (e.g. representing bytes, essentially the equivalent of Uint8Arrays) and Float32Arrays (which is what buffer.getChannelData returns).\nAlso the volume is super high, this can be easily adjusted by applying a ratio to the output, but we shouldn't have to do that. \nHere's my efforts so far (WARNING PUT VOLUME TO MINIMUM BEFORE TESTING): \nhttps://github.com/davidmarkclements/jsnes/commit/8a4a2244255114aa03d5da2ac0e54ddfb7aa1824#diff-478c5384d0b4a5ca4c1a8e27f9a68c08\nThe closest sound quality I could get is by passing samples array to Uint16Array, then passing the resulting ArrayBuffer into Float32Array, which is copied (using set) into the left and right channels there's probably a better way\nIt's quite likely that @bfirsh will know exactly how to convert to Float32Array but it seems like he's lost interest :( \n. I've been experimenting with the WebAudio API and I have a PoC which gets the sound syncing correctly. \nHowever I'm struggling with sound quality, I'm pretty certain this is because I'm not correctly converting\nfrom Arrays of numbers between 0-255 (e.g. representing bytes, essentially the equivalent of Uint8Arrays) and Float32Arrays (which is what buffer.getChannelData returns).\nAlso the volume is super high, this can be easily adjusted by applying a ratio to the output, but we shouldn't have to do that. \nHere's my efforts so far (WARNING PUT VOLUME TO MINIMUM BEFORE TESTING): \nhttps://github.com/davidmarkclements/jsnes/commit/8a4a2244255114aa03d5da2ac0e54ddfb7aa1824#diff-478c5384d0b4a5ca4c1a8e27f9a68c08\nThe closest sound quality I could get is by passing samples array to Uint16Array, then passing the resulting ArrayBuffer into Float32Array, which is copied (using set) into the left and right channels there's probably a better way\nIt's quite likely that @bfirsh will know exactly how to convert to Float32Array but it seems like he's lost interest :( \n. One thought is that papu.js actually mixes the right and left channels together with bitwise ops, if we could figure how to untangle that, it might be easier (and .. actually much cooler) to send each channels audio seperately\n. EDIT this issue is essentially a duplicate of #7 \n\n\nsound is choppy in chrome because jsnes uses dynamicaudio.js which uses swf fallback in chrome\nsound probably doesn't work in firefox anymore because dynamicaudio.js uses mozWriteAudio which is deprecated\n\nI've been experimenting with the WebAudio API and I have a PoC which gets the sound syncing correctly. \nHowever I'm struggling with sound quality, I'm pretty certain this is because I'm not correctly converting\nfrom Arrays of numbers between 0-255 (e.g. representing bytes, essentially the equivalent of Uint8Arrays) and Float32Arrays (which is what buffer.getChannelData returns).\nAlso the volume is super high, this can be easily adjusted by applying a ratio to the output, but we shouldn't have to do that. \nHere's my efforts so far (WARNING PUT VOLUME TO MINIMUM BEFORE TESTING): \nhttps://github.com/davidmarkclements/jsnes/commit/8a4a2244255114aa03d5da2ac0e54ddfb7aa1824#diff-478c5384d0b4a5ca4c1a8e27f9a68c08\nThe closest sound quality I could get is by passing samples array to Uint16Array, then passing the resulting ArrayBuffer into Float32Array, which is copied (using set) into the left and right channels there's probably a better way\nIt's quite likely that @bfirsh will know exactly how to convert to Float32Array but it seems like he's lost interest :( \n. ",
    "webdevbyjoss": "hey guys, I think I've figured out the proper way to split the channels and get the crystal clear stereo sound via HTML5 Web Audio API. Check out here: https://github.com/bfirsh/jsnes/pull/45\n. now in dynamicaudio.js https://github.com/bfirsh/dynamicaudio.js/pull/7\n. @davidmarkclements just managed to do the convertion to Float32Array here https://github.com/bfirsh/jsnes/pull/45, resulting into sound identical to \"dynamicaudio\" one. \nWebAudio API now looks mature enough to be used by default.\n. moved the WebAudio support to dynamicaudio.js https://github.com/bfirsh/dynamicaudio.js/pull/7\n. Before merging this PR, I would address the TODO: and create the audio buffer right in papu.js, \nwith appropriate conversion to Int array for flash-fallback.\n. @wyatt8740 it is actually mono, my bad for naming this thing inproperly, sorry for that.\nIt just outputs the same staff into R & L channels\n. @bfirsh  that is brilliant idea, let me prepare the appropriate PR for https://github.com/bfirsh/dynamicaudio.js/ repo\n. @bfirsh here you are https://github.com/bfirsh/dynamicaudio.js/pull/7\nlet me know what do you think\n. hey guys, I think I've figured out the proper way to split the channels and get the crystal clear stereo sound via HTML5 Web Audio API. Check out here: https://github.com/bfirsh/jsnes/pull/45\n. now in dynamicaudio.js https://github.com/bfirsh/dynamicaudio.js/pull/7\n. @davidmarkclements just managed to do the convertion to Float32Array here https://github.com/bfirsh/jsnes/pull/45, resulting into sound identical to \"dynamicaudio\" one. \nWebAudio API now looks mature enough to be used by default.\n. moved the WebAudio support to dynamicaudio.js https://github.com/bfirsh/dynamicaudio.js/pull/7\n. Before merging this PR, I would address the TODO: and create the audio buffer right in papu.js, \nwith appropriate conversion to Int array for flash-fallback.\n. @wyatt8740 it is actually mono, my bad for naming this thing inproperly, sorry for that.\nIt just outputs the same staff into R & L channels\n. @bfirsh  that is brilliant idea, let me prepare the appropriate PR for https://github.com/bfirsh/dynamicaudio.js/ repo\n. @bfirsh here you are https://github.com/bfirsh/dynamicaudio.js/pull/7\nlet me know what do you think\n. ",
    "joeheyming": "sooooo, I did this, and it was verrrry slow\nwe need to do some serious performance optimizations to this library if we hope to get this to work on an ipad/ipod/android\n. Hey!  My hacks are clean :-)!  \nBut seriously, I wrote this so long ago, I probably would just rewrite it if I had time.. sooooo, I did this, and it was verrrry slow\nwe need to do some serious performance optimizations to this library if we hope to get this to work on an ipad/ipod/android\n. Hey!  My hacks are clean :-)!  \nBut seriously, I wrote this so long ago, I probably would just rewrite it if I had time.. ",
    "shadowbq": "+1\n. +1\n. ",
    "drakmail": "It is working, and it is pretty good. I'm get it working with nipple.js on my iPad mini retina with 60 FPS.\n. I'm used nipple.js in my private fork and it working awesome on iPad. It can solve problem with virtual joypad.\n. @bfirsh unfortunately the fork is full of dirty hacks \ud83d\ude05  Also I'm not sure that I could remember where was the fork hosted =/. @xueyin220807 no, I'm doesn't solve that problem =(\n. It is working, and it is pretty good. I'm get it working with nipple.js on my iPad mini retina with 60 FPS.\n. I'm used nipple.js in my private fork and it working awesome on iPad. It can solve problem with virtual joypad.\n. @bfirsh unfortunately the fork is full of dirty hacks \ud83d\ude05  Also I'm not sure that I could remember where was the fork hosted =/. @xueyin220807 no, I'm doesn't solve that problem =(\n. ",
    "jfktrey": "If there's still enough interest I could port the control pad I made for jfktrey/rgb-emulator. GameBoy Color and NES use the same control scheme, so it should be portable without any major modifications.\n. If there's still enough interest I could port the control pad I made for jfktrey/rgb-emulator. GameBoy Color and NES use the same control scheme, so it should be portable without any major modifications.\n. ",
    "matthewoates": "@joeheyming: Were you listening for the click event? That's delayed on touch devices. You'll want to listen for tapstart\n. @joeheyming: Were you listening for the click event? That's delayed on touch devices. You'll want to listen for tapstart\n. ",
    "JoeMeeks": "@haagaard Check out my implementation in Tecmo Touch for mobile browsers.\nhttp://joemeeks.net/tt17\n. @haagaard Check out my implementation in Tecmo Touch for mobile browsers.\nhttp://joemeeks.net/tt17\n. ",
    "omarduarte": "@bfirsh, I may be able to add this feature given a few hints on which parts of the code need to be changed. Any ideas?\n. @bfirsh, I may be able to add this feature given a few hints on which parts of the code need to be changed. Any ideas?\n. ",
    "josephlewis42": "I've got this working over in my repo at https://github.com/josephlewis42/jsnes\n. No problem, just did it!\nThe save is localstorage though rather than remotestorage.\n. I've got this working over in my repo at https://github.com/josephlewis42/jsnes\n. No problem, just did it!\nThe save is localstorage though rather than remotestorage.\n. ",
    "MeteorKL": "@josephlewis42 \nI found an error while testing the localstorage function.\nbelow \"apply\" should be replaced by \"call\" since s is a json object.\n\nJSNES.Mappers[4].prototype.fromJSON = function(s) {\n    JSNES.Mappers[0].prototype.fromJSON.apply(this, s);\n    ...\n}\n. I have done this by localStorage, hope this helps you. @oknoorap \nsave:\njs\ntry{\n    var saveData = JSON.stringify(nes.toJSON());\n    localStorage.setItem(romName, saveData);\n}catch(oException){\n    if(oException.name == 'QuotaExceededError'){\n        console.log('localStorage out of memory');\n        localStorage.clear();\n        localStorage.setItem(calcMD5(rompath), saveData);\n    }\n}\n\nload:\njs\nvar saveData = localStorage.getItem(romName);\nif( saveData == null ) {\n    console.log(\"nothing to load\");\n    return;\n}\nvar decodedData = JSON.parse(saveData);\nnes.fromJSON(decodedData);. Maybe you forgot to run nes.frame() after load state.\nOr perhaps bfirsh removed some related code from jsnes to jsnes-web.\nAnyway, I successed to do this with the old versions of jsnes\n. I don't quite understand this glitch should be a number (score when mario kill mushroom monster)\nDid you mean that score is not the same as the old one?\n. Did you mean that \nthe first graphics: after load\nthe second graphics: before load. Maybe you can stop the frame interval brefore save state, and continue it after load.\nI guess it is just because you still run the game after saving state.. It seems that the second graphics happens after the first graphics. It is pretty confusing and I have no idea about this.\nMaybe you can try another rom to see whether this happens again.. Interesting bug :)\nMaybe there are some mistakes in transforming data in localStorage. \nYou can compare the JSON string before saving state and after loading state \nby saving them to txt and using some tools like vimdiffer.. I'm also on the way to understanding jsnes's code. \nMaybe you can show your code to me by your Github or sending mail to me.. I implemented this function by setInterval and clearInterval and I wonder if there is an built-in solution\n@bfirsh \njs\nif (value==0x41) {\n    if (this.interval[i].X) {\n        clearInterval(this.interval[i].X);\n    }\n    this.interval[i].X = setInterval( () => {\n        this.state[i][this.keys.A] = 0x81 - this.state[i][this.keys.A];\n    }, 50);\n}\nelse if (value==0x40) {\n    clearInterval(this.interval[i].X);\n    this.state[i][this.keys.A] = 0x40;\n}. @valioba \nYou can find related code in ui.js\nIn line 69, we know that it loads a rom when you select a game.\nself.romSelect.change(function() {\n    self.loadROM();\n});\nIn line 187, we can see a function called loadROM, and we know that it gets the rom by ajax.\nYou can change \nurl: escape(self.romSelect.val()) \ninto \nurl: \"rom/the_nes_game_you_want_to_load.nes\" \nAlso, you need to add self.loadROM(); after Created UI\n(for example, you can add it between line 183 and line 184)\n. ah I found you made a mistake in readme.md after you update it\njs\nnes.buttonDown(0, jsnes.Controller.BUTTON_A);\nsince in nes.js the controllers are indexed from 1\njs\nthis.controllers = {\n  1: new Controller(),\n  2: new Controller(),\n};. I have done a similar work by a lazy way. \n\n\nThe server send all the rom names in one folder to the browser.\n\n\nThe browser trys to load the roms.\n\n\nIf the frame count of the game after some seconds is too low, this means the rom works bad, then I send the game's name to the server.\n\n\nThe server will move the rom to another folder.\n\n\nHope this helps you :)\nBy the way, how many roms do you have? Could you share them with me?. You can see the function writeFrame in ui.js in previous versions.. @josephlewis42 \nI found an error while testing the localstorage function.\nbelow \"apply\" should be replaced by \"call\" since s is a json object.\n\nJSNES.Mappers[4].prototype.fromJSON = function(s) {\n    JSNES.Mappers[0].prototype.fromJSON.apply(this, s);\n    ...\n}\n. I have done this by localStorage, hope this helps you. @oknoorap \nsave:\njs\ntry{\n    var saveData = JSON.stringify(nes.toJSON());\n    localStorage.setItem(romName, saveData);\n}catch(oException){\n    if(oException.name == 'QuotaExceededError'){\n        console.log('localStorage out of memory');\n        localStorage.clear();\n        localStorage.setItem(calcMD5(rompath), saveData);\n    }\n}\n\nload:\njs\nvar saveData = localStorage.getItem(romName);\nif( saveData == null ) {\n    console.log(\"nothing to load\");\n    return;\n}\nvar decodedData = JSON.parse(saveData);\nnes.fromJSON(decodedData);. Maybe you forgot to run nes.frame() after load state.\nOr perhaps bfirsh removed some related code from jsnes to jsnes-web.\nAnyway, I successed to do this with the old versions of jsnes\n. I don't quite understand this glitch should be a number (score when mario kill mushroom monster)\nDid you mean that score is not the same as the old one?\n. Did you mean that \nthe first graphics: after load\nthe second graphics: before load. Maybe you can stop the frame interval brefore save state, and continue it after load.\nI guess it is just because you still run the game after saving state.. It seems that the second graphics happens after the first graphics. It is pretty confusing and I have no idea about this.\nMaybe you can try another rom to see whether this happens again.. Interesting bug :)\nMaybe there are some mistakes in transforming data in localStorage. \nYou can compare the JSON string before saving state and after loading state \nby saving them to txt and using some tools like vimdiffer.. I'm also on the way to understanding jsnes's code. \nMaybe you can show your code to me by your Github or sending mail to me.. I implemented this function by setInterval and clearInterval and I wonder if there is an built-in solution\n@bfirsh \njs\nif (value==0x41) {\n    if (this.interval[i].X) {\n        clearInterval(this.interval[i].X);\n    }\n    this.interval[i].X = setInterval( () => {\n        this.state[i][this.keys.A] = 0x81 - this.state[i][this.keys.A];\n    }, 50);\n}\nelse if (value==0x40) {\n    clearInterval(this.interval[i].X);\n    this.state[i][this.keys.A] = 0x40;\n}. @valioba \nYou can find related code in ui.js\nIn line 69, we know that it loads a rom when you select a game.\nself.romSelect.change(function() {\n    self.loadROM();\n});\nIn line 187, we can see a function called loadROM, and we know that it gets the rom by ajax.\nYou can change \nurl: escape(self.romSelect.val()) \ninto \nurl: \"rom/the_nes_game_you_want_to_load.nes\" \nAlso, you need to add self.loadROM(); after Created UI\n(for example, you can add it between line 183 and line 184)\n. ah I found you made a mistake in readme.md after you update it\njs\nnes.buttonDown(0, jsnes.Controller.BUTTON_A);\nsince in nes.js the controllers are indexed from 1\njs\nthis.controllers = {\n  1: new Controller(),\n  2: new Controller(),\n};. I have done a similar work by a lazy way. \n\n\nThe server send all the rom names in one folder to the browser.\n\n\nThe browser trys to load the roms.\n\n\nIf the frame count of the game after some seconds is too low, this means the rom works bad, then I send the game's name to the server.\n\n\nThe server will move the rom to another folder.\n\n\nHope this helps you :)\nBy the way, how many roms do you have? Could you share them with me?. You can see the function writeFrame in ui.js in previous versions.. ",
    "oknoorap": "how to save and load state? any snippet here? @bfirsh . I just did that but doesn't works with jsnes-web, load state doesn't overwrite existing canvas. okay, will try, I'll post again when succeed. @MeteorKL: great, it's succeed (without nes.frame()). @MeteorKL After state loaded, I don't think that save state write bytes correctly, this glitch should be a number (score when mario kill mushroom monster) \n\n. This glitch graphics\n\nshould be a number (score)\n\n. yep, after load state there was glitchy graphics in the game. I do this.stop() or\nthis.frameTimer.stop();\nthis.speakers.stop();\nbefore save to local storage, it's still has glitch. Pacman doesn't have any trouble with graphics, but after load state, sounds are muted... \ud83d\ude04 . Mario 2 after load state \ud83d\ude04 \n\n. I've modify nes.js by encoding romData to base64 in toJSON function, and decodes back in fromJSON function, it should be the same data... and it's still buggy \ud83d\ude04 . may be it's related with Tile or ppu issue? can you help me \ud83d\ude2d  @MeteorKL, I want to submit PR but I'm too dumb to understand jsnes's code.... @bfirsh personally as developer I want to submit PR but it's too complicated to me to read low level code like yours, I'm sorry I just support you here, good luck, hope this issue will be solved \ud83d\ude04 . any news related to glitch issue?. how to save and load state? any snippet here? @bfirsh . I just did that but doesn't works with jsnes-web, load state doesn't overwrite existing canvas. okay, will try, I'll post again when succeed. @MeteorKL: great, it's succeed (without nes.frame()). @MeteorKL After state loaded, I don't think that save state write bytes correctly, this glitch should be a number (score when mario kill mushroom monster) \n\n. This glitch graphics\n\nshould be a number (score)\n\n. yep, after load state there was glitchy graphics in the game. I do this.stop() or\nthis.frameTimer.stop();\nthis.speakers.stop();\nbefore save to local storage, it's still has glitch. Pacman doesn't have any trouble with graphics, but after load state, sounds are muted... \ud83d\ude04 . Mario 2 after load state \ud83d\ude04 \n\n. I've modify nes.js by encoding romData to base64 in toJSON function, and decodes back in fromJSON function, it should be the same data... and it's still buggy \ud83d\ude04 . may be it's related with Tile or ppu issue? can you help me \ud83d\ude2d  @MeteorKL, I want to submit PR but I'm too dumb to understand jsnes's code.... @bfirsh personally as developer I want to submit PR but it's too complicated to me to read low level code like yours, I'm sorry I just support you here, good luck, hope this issue will be solved \ud83d\ude04 . any news related to glitch issue?. ",
    "workhorsy": "Nice!\nI was wondering when you were going to make a new release. Maybe I should have moved smb3 to the working list too.\n. This pull should fix that problem:\nhttp://github.com/bfirsh/jsnes/pull/26\n. Nice! I just tested this on Chrome and Firefox. It works, and removes the 3 second delay in the sound. Confirmed to work.\n. It should work on everything, including mobile. I originally wrote this patch in 2013, but forgot about it. I just tested it on Firefox, Chrome, Edge, and IE 11 to double check, and it worked.\nhttp://caniuse.com/#search=Uint8ClampedArray\nhttp://caniuse.com/#search=Uint32Array. Okay cool. I had seen the ui split repo, but not the jsnes-web one. . Nice!\nI was wondering when you were going to make a new release. Maybe I should have moved smb3 to the working list too.\n. This pull should fix that problem:\nhttp://github.com/bfirsh/jsnes/pull/26\n. Nice! I just tested this on Chrome and Firefox. It works, and removes the 3 second delay in the sound. Confirmed to work.\n. It should work on everything, including mobile. I originally wrote this patch in 2013, but forgot about it. I just tested it on Firefox, Chrome, Edge, and IE 11 to double check, and it worked.\nhttp://caniuse.com/#search=Uint8ClampedArray\nhttp://caniuse.com/#search=Uint32Array. Okay cool. I had seen the ui split repo, but not the jsnes-web one. . ",
    "Daniel-Griffiths": "Works great! \n. Works great! \n. ",
    "Reewz": "It's not a bug. Just AOROM(7) not supported.\nThe next lines implement partial support:\n```\nJSNES.Mappers[7].prototype = new JSNES.Mappers 0 ;\nJSNES.Mappers[7].prototype.write = function(address, value) {\n    if (address < 0x8000) {\n        JSNES.Mappers[0].prototype.write.apply(this, arguments);\n        return;\n    } else {\n        this.load32kRomBank(value & 7, 0x8000);\n    }\n}\n```\nbut I didn't understand the implementation single-sreen mirroring..\n. It's not a bug. Just AOROM(7) not supported.\nThe next lines implement partial support:\n```\nJSNES.Mappers[7].prototype = new JSNES.Mappers 0 ;\nJSNES.Mappers[7].prototype.write = function(address, value) {\n    if (address < 0x8000) {\n        JSNES.Mappers[0].prototype.write.apply(this, arguments);\n        return;\n    } else {\n        this.load32kRomBank(value & 7, 0x8000);\n    }\n}\n```\nbut I didn't understand the implementation single-sreen mirroring..\n. ",
    "220807": "\u4f60\u8fd9\u4e2a\u95ee\u9898\u6700\u540e\u89e3\u51b3\u4e86\u6ca1\u6709\uff1f\n. \u6211\u7528Ninja Gaiden\u4e5f\u662f\u7070\u8272\u80cc\u666f\n. \u4f60\u8fd9\u4e2a\u95ee\u9898\u6700\u540e\u89e3\u51b3\u4e86\u6ca1\u6709\uff1f\n. \u6211\u7528Ninja Gaiden\u4e5f\u662f\u7070\u8272\u80cc\u666f\n. ",
    "isharacomix": "Thanks! I'm not much of a javascript person, but I've been developing a web-based NES IDE and using JSNES to test my projects. As you can guess, I get into a lot of crazy edge cases. :)\n. Thanks! I'm not much of a javascript person, but I've been developing a web-based NES IDE and using JSNES to test my projects. As you can guess, I get into a lot of crazy edge cases. :)\n. ",
    "wmh": "Yes, it did. Now it works fine, thanks.\n. Yes, it did. Now it works fine, thanks.\n. ",
    "berctain": "ohh, Yes .. Multiplayer in different place is important for a webemu :)\n. ohh, Yes .. Multiplayer in different place is important for a webemu :)\n. ",
    "reggi": "I just added you and removed myself, it's not showing you as a \"Maintainer\" anymore. \nhttps://www.npmjs.org/package/jsnes\n\n@npmjs I just removed myself as owner from this package, It also removed the other owner. Now nobody has access https://www.npmjs.org/package/jsnes  #npm ontwitter\n\nBut you do show up here. Let me know if it's working.\nthomas@workstation:jsnes$ npm owner ls\nnpm info it worked if it ends with ok\nnpm info using npm@1.4.28\nnpm info using node@v0.10.32\nnpm info trying registry request attempt 1 at 10:52:25\nnpm http GET http://registry.npmjs.org/jsnes\nnpm http 304 http://registry.npmjs.org/jsnes\nbfirsh <ben@firshman.co.uk>\nnpm info ok\n. Can you confirm that you have access or run npm owner add bfirsh to see if you'll show as a maintainer https://www.npmjs.org/package/jsnes.\n. Woah, looks like I'm wrong here! jQuery does it this way too, using grunt!\nhttps://github.com/jquery/jquery#how-to-build-your-own-jquery\n. YES. I just added you and removed myself, it's not showing you as a \"Maintainer\" anymore. \nhttps://www.npmjs.org/package/jsnes\n\n@npmjs I just removed myself as owner from this package, It also removed the other owner. Now nobody has access https://www.npmjs.org/package/jsnes  #npm ontwitter\n\nBut you do show up here. Let me know if it's working.\nthomas@workstation:jsnes$ npm owner ls\nnpm info it worked if it ends with ok\nnpm info using npm@1.4.28\nnpm info using node@v0.10.32\nnpm info trying registry request attempt 1 at 10:52:25\nnpm http GET http://registry.npmjs.org/jsnes\nnpm http 304 http://registry.npmjs.org/jsnes\nbfirsh <ben@firshman.co.uk>\nnpm info ok\n. Can you confirm that you have access or run npm owner add bfirsh to see if you'll show as a maintainer https://www.npmjs.org/package/jsnes.\n. Woah, looks like I'm wrong here! jQuery does it this way too, using grunt!\nhttps://github.com/jquery/jquery#how-to-build-your-own-jquery\n. YES. ",
    "xueyin220807": "@drakmail :Did you solve it?\n. @bfirsh At this moment when I'm using jackal.nes I'm get just grey background:\n. Could you send it to me?\n. @drakmail :Did you solve it?\n. @bfirsh At this moment when I'm using jackal.nes I'm get just grey background:\n. Could you send it to me?\n. ",
    "stoneWeb": "@bfirsh me too, so how to solve that?. @bfirsh me too, so how to solve that?. ",
    "Venediktoff": "Tested on Chrome and Firefox - works well. At one point the framerate fropped to 3 fps, but I can't state it is related to this improvement. \nGood job, @webdevbyjoss !\n. Tested on Chrome and Firefox - works well. At one point the framerate fropped to 3 fps, but I can't state it is related to this improvement. \nGood job, @webdevbyjoss !\n. ",
    "wyatt8740": "This should really be mono - the NES is not a stereo console. Is there at least a way to switch it back to mono? I am aware the 2A03 has two channels internally, but they are never exposed on ANY NES or famicom console or arcade machine. They are always mixed down.\n. @webdevbyjoss Ah, okay. Probably should have actually looked at the code :\\\n. This should really be mono - the NES is not a stereo console. Is there at least a way to switch it back to mono? I am aware the 2A03 has two channels internally, but they are never exposed on ANY NES or famicom console or arcade machine. They are always mixed down.\n. @webdevbyjoss Ah, okay. Probably should have actually looked at the code :\\\n. ",
    "nosrevi": "I have a fix for this, may not be pretty but it does the job for me.\nhttps://github.com/bfirsh/jsnes/pull/50\n. I have a fix for this, may not be pretty but it does the job for me.\nhttps://github.com/bfirsh/jsnes/pull/50\n. ",
    "cacciatc": "Mapper 4 includes both MMC3 and MMC6. After a quick scan of the code, I am unsure if jsnes currently supports the 1KB internal PRG RAM for MMC6 which could be the source of your problems. \n(http://wiki.nesdev.com/w/index.php/MMC6)\n. Mapper 4 includes both MMC3 and MMC6. After a quick scan of the code, I am unsure if jsnes currently supports the 1KB internal PRG RAM for MMC6 which could be the source of your problems. \n(http://wiki.nesdev.com/w/index.php/MMC6)\n. ",
    "cowboybkit": "Hi, you have nice work with the touch interface. Could you please share it?. Hi, you have nice work with the touch interface. Could you please share it?. ",
    "billautomata": "misclick, meant to make it to my local fork\n. misclick, meant to make it to my local fork\n. ",
    "minimi": "Hello,\nPull requests with this mapper (CNROM Mapper[3]) was accepted 4 days. Seems the issue not actual at the moment ;). Hello,\nPull requests with this mapper (CNROM Mapper[3]) was accepted 4 days. Seems the issue not actual at the moment ;). ",
    "dependabot[bot]": "OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting @dependabot ignore this major version.\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.. Superseded by #81.. Superseded by #86.. Superseded by #87.. OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting @dependabot ignore this major version.\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.. Superseded by #81.. Superseded by #86.. Superseded by #87.. ",
    "greysteil": "Looks like a bug on the Dependabot side meant the update got lost. I'll dig into it.. Fixed. Sorry about that!. Looks like a bug on the Dependabot side meant the update got lost. I'll dig into it.. Fixed. Sorry about that!. ",
    "satoshinm": "Adding a real test is a good idea (maybe a code for the included Concentration Room rom), will see what I can do. Adding a real test is a good idea (maybe a code for the included Concentration Room rom), will see what I can do. "
}