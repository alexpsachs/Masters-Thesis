{
    "ghost": "by which I mean, when doing an xy line chart, the x and y axis end up with the same scale.  I think this issue only applies to this type of chart.\n. ",
    "mattetti": "could you write a failing spec for that please?\nThanks,\n- Matt\n. a patch would be super appreciated ;)\n. The best thing would be to write a quick failing spec to show what the problem is, I would be glad to fix it if I can easily reproduce the problem.\nThanks,\n- Matt\n. this is now fixed and available in 1.5 (sorry for the delay)\n. fixed\n. This is now fixed thanks to ghazel's help, update to 1.5 to have this feature working\n. fixed\n. merged in, please confirm it works as expected\n. fixed\n. This is still an issue with the new version, I'll look into it shortly\n. ecoment & jingta, in this specific case you have to define the axis range yourself:\ngraph = Gchart.line(:data => [17, 17, 11, 8, 2], \n                             :axis_with_labels => ['x', 'y'], \n                             :axis_labels => [['J', 'F', 'M', 'A', 'M']], \n                             :axis_range => [nil, [2,20,5]])\nthe first value is nil so the range is auto calculated then the second range (y) starts at 2 and goes up to 20 in steps of 5.\n. fixed\n. thanks, patch made but not available in 1.5.0 (will be in next release)\n. I cleaned up the code and I'm planning on a release soon.\n. 1.5.0 passes all specs under 1.9\n. not by default, you need to use the custom flag to pass the settings. Patch welcome.\n. closing for now\n. you need to use  the :axis_range => option and set the range yourself. Google Charts API doesn't support auto labeling of the y range from what I know.\n. confirmed, I need to look into it, feel free to send a patch tho.\n. This is now fixed in 1.5.3, please reopen if I got it wrong.\n. $ irb\n    >> require 'lib/gchart'\n    => true\n    >>  Gchart.sparkline(:legend => %w{foo bar baz})\n    => \"http://chart.apis.google.com/chart?chdl=foo|bar|baz&cht=ls&chs=300x200&chxr=0\"\nAre you sure you're on the latest version? 1.5.3\n- Matt\n. I also tried the gem:\n```\n$ irb\n\n\nrequire 'googlecharts'\n=> true\nGchart.sparkline(:legend => %w{foo bar baz})\n=> \"http://chart.apis.google.com/chart?chdl=foo|bar|baz&cht=ls&chs=300x200&chxr=0\"\n```\n. No worries, thanks for the report tho, much appreciated.\n. Valid bug and valid suggestions, however if the image is being called from within an html page it won't work.  guess we should add a check and a POST request when the file format is requested. \n\n\nCan you provide a patch by any chance?\n. Not currently, but I'm always glad to accept patches.\n. Could you please show me how @bar_data look like? It looks from the error message that the API is expecting another object type.\n. Glad to hear that!\n. yes, that will be fixed in 1.6.1\n. I was running the test suite against 1.9 and it was working. @aderyabin has been maintaining the gem, but looking at list of issues, he might need some help.\nI didn't see any bug reports about 1.9 and I was using this gem on a 1.9.1 project, can you please file reports explaining what the problem is, and what version of Ruby you are using?\nThanks\n. Could I ask you to submit a PR and make sure the specs are passing?\nOn Tue, Feb 21, 2012 at 1:31 PM, epinault-ttc <\nreply@reply.github.com\n\nwrote:\nAlso not sure what this jstize is trying to achieve, but if this is just\nto escape the params, the following seems to break too\nstring.gsub(' ', '+').gsub(/[|{|}|||\\|^|[|]|`|]/) {|c|\n\"%#{c[0].to_s(16).upcase}\"}\nArgumentError: wrong number of arguments(1 for 0)\n       from (irb):4:in `to_s'\nWhy not using CGI.escape directly on each of the param? or something like\nthis\n\ndef url_encode(data)\n                       if data.is_a?(Hash)\n                               encoded = {}\n                               data.each{|key,val| encoded[escape(key)] =\nescape(val)}\n                               encoded\n                       elsif data.is_a?(Array)\n                               data.map do |i|\n                                       i.split('&').map do |str|\n                                               str.split('=').map{|val|\nescape(val)}.join('=')\n                                       end.join('&')\n                               end.join('&')\n                       elsif data\n                               if  data.index('&') || data.index('=')\n                                       data.split('&').map do |str|\n                                               str.split('=').map{|val|\nescape(val)}.join('=')\n                                       end.join('&')\n                               else\n                                       escape(data)\n                               end\n                       end\n               end\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mattetti/googlecharts/issues/31#issuecomment-4089355\n. Andrey, let me know how I can help.\n\n-m\nSent from my iPhone\nOn Feb 21, 2012, at 18:38, Andrey Deryabinreply@reply.github.com wrote:\n\nI'll review all issues tomorrow. Also I would like to add Travis CI widget, but I need some help from Matt\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mattetti/googlecharts/issues/31#issuecomment-4096771\n. I applied your first 2 commits but the tasks are working great for me and I need them to push the gems. You need to have jeweler installed, it's not awesome, but i'm too lazy to change that :p\n\nThanks for the patch and the tests, I also pushed version 1.6.2 out there. \nLet me know if you are interested in getting commit access to the repo.\n- Matt\n. For some reason I never saw your reply, I just added you as a contributor :)\n. Sorry I'm not getting notifications for PRs and I'm not really using using gem anymore. Your changes look good, I'm merging them, let me know if you want to be added to the rubygems project to cut a release.\n. @zukunftsalick what's your username on rubygems, I can't seem to be able to find you\n. done, you now have write access to this repo and to publishing new gem builds! Thanks for maintaining this library.\n. ",
    "dejanstrbac": "Indeed, chds has a format of ds1_min, ds1_max, ds2_min, ds2_max on multiple sets, while it is now statically \"#{@min},#{@max}\". I'll see what I can do about it. \nGreat library mattetti!\n. ",
    "der-flo": "Ok, no problem, you'll get it until tomorrow.\nder_flo\n. Here you have a quick (failing) spec addition:\nhttp://gist.github.com/99988\nHere you have a somewhat hackish patch for legends:\nhttp://github.com/der-flo/googlecharts/commit/8004aeb6999cf9bcc40bfe38b42e0feaebeacee1\nIt should be applied in more places, perhaps you have a good idea.\nThanks and bye,\nder_flo\n. ",
    "ghazel": "The Hash method is implemented http://github.com/ghazel/googlecharts/tree\nI chose to leave axis_with_labels alone, since the API likes to leave data and axis separate.\n. This is fixed in http://github.com/ghazel/googlecharts/tree\n. This is fixed in http://github.com/ghazel/googlecharts/tree\n. This is fixed in http://github.com/ghazel/googlecharts/tree\n. ",
    "rab": "You can specify them \"directly\" like this:\n:new_markers => ['B,092F42,0,0,0',           # fill under line\n                 \"o,A1AF24,0,-1:-1:1,15,0\",  # Green circle on last point at 15px\n                 \"o,FFFFFF,0,-1:-1:1,8,0.1\", # white disc on last point at 8px\n                 ].join('|'),\nThere ought to be a better way, but this was the quickest when I had the same issue and dived into the code.\n-Rob\nNote: I'm using 1.6.0 and haven't looked at the version the original issue was opened for.\n. ",
    "ecoment": "I have another problem with the generation of the labels. If I create a line chart like this:\nGchart.line(:data => [17, 17, 11, 8, 2], :axis_with_labels => ['x', 'y'], :axis_labels => [['J', 'F', 'M', 'A', 'M']])\nit will produce a line chart like this:\nhttp://chart.apis.google.com/chart?chxl=0:|J|F|M|A|M&chxt=x,y&chd=s:99odH&cht=lc&chs=300x200&chxr=1,17,2\nAs you can see, the labels of y are in the wrong order while the data in the x axis are right. \n. ",
    "jingta": "i noticed the same issue with a bar chart starting in descending order. ascending order works fine.\n. ",
    "jgn": "awesome\n. ",
    "eggie5": "thanks for the reply -- I'll ponder it...\n. .\n. ",
    "miaout17": "I think it is because of axis index. I made a pull request\nhttp://github.com/mattetti/googlecharts/pull/29\nPlease check it :)\n. ",
    "x37v": "horizontal bar charts with data that is sorted in reverse gives garbage too:\nruby-1.9.2-p0 > Gchart.bar(:data => [123,50,1], :axis_labels => [[\"1\", \"50\", \"123\"]], :axis_with_labels => 'y', :orientation => 'horizontal')\n     => \"http://chart.apis.google.com/chart?chxl=0:|1|50|123&chxt=y&chd=s:9ZA&cht=bhs&chs=300x200&chxr=0,123,50,1\"\n. ",
    "lukeredpath": "As I mentioned on Twitter, I can confirm this is fixed in 1.5.3; I'm using bundled gems and hadn't reloaded Passenger so it was still picking up the old gem when I tried this (despite doing a bundle install). My bad.\n. ",
    "cgriego": "I have started working on a patch.\n. Patch complete with zero public interface changes. Specs pass.\nhttp://github.com/cgriego/googlecharts/commit/5b6d9908f7ded1baa12e6789c542e174c69fecac\nThere's a couple of other commits here for your consideration.\nhttp://github.com/cgriego/googlecharts/commits/file-post\n. ",
    "dgwmfo": "That would be a very nice feature to have...\n--Dean\n. Matt:\nI tried changing the column in my database from decimal (BigNum) to float. The error message persisted. [I rebooted my local server, just to be sure, same problem.]\nMy array contained nil values, so I figured that might be the real issue. I added code to initialize the array to the right size with zeros for every element. This time the error went away.\nSo it's working great now. I'm using pretty much all the options you show in your examples: text encoding, maxval, legends, axes, axis labels, I'm quite pleased with the results thus far.\nThanks!\nDean\n. ",
    "peterkovacs": "Created a pull request in #28\n. As far as I know it was never merged.  \nEdited: Ah, i screwed up when I made the issue.  so I created this one to include the pull request.\n. ",
    "hisham": "Was this checked in? I see issue #27 (which is the same as this issue) in the code's comments:\n```\nSee http://github.com/mattetti/googlecharts/issues#issue/27\nURI.escape( string ).gsub(\"%7C\", \"|\")\n```\n. ",
    "rafaelgonzalez": "By the way, you can still pass the legend arguments directly into the :custom field.\nIn this case, instead of this :\nGchart.pie_3d(:title => 'ruby_fu',\n              :size => '400x200',\n              :data => [10, 45, 45],\n              :legend => [\"DHH\", \"Rob\", \"Matt\"] )\n... you would do this :\nGchart.pie_3d(:title => 'ruby_fu',\n              :size => '400x200',\n              :data => [10, 45, 45],\n              :custom => \"chdl=DHH|Rob|Matt\" )\nBut a patch would still be welcome :)\n. ",
    "epinault": "Still looking for one? Clearly it does not work with Ruby 1.9 :(\n. I am using Ruby 1.9.2, googlechart 1.3.6\nand the following clearly fails\nGchart.line(:data => [0, 40, 10, 70, 20])\n=> \"http://chart.apis.google.com/chart?\"\nLooking into the query_builder now method are using symbols,not string\nso  \nYet even patching that is broken for some reason as the url does not work still \n\n\nGchart.line(:data => [0, 40, 10, 70, 20])\n=> \"http://chart.apis.google.com/chart?chd=s:AiI9R\"  \n\n\nYou get a 400...\n. ok here is how I monkey patched it to work\n\ndef query_builder(options=\"\")\n    query_params = instance_variables.map do |var|\n      case var\n      # Set the graph size\n      when '@width', :@width\n        set_size unless @width.nil? || @height.nil?\n      when '@type', :@type\n        set_type\n      when '@title', :@title\n        set_title unless @title.nil?\n      when '@legend', :@legend\n        set_legend unless @legend.nil?\n      when '@bg_color', :@bg_color\n        set_colors\n      when '@chart_color', :@chart_color\n        set_colors if @bg_color.nil?\n      when '@data', :@data\n        set_data unless @data == []\n      when '@bar_colors', :@bar_colors\n        set_bar_colors\n      when '@bar_width_and_spacing', :@bar_width_and_spacing\n        set_bar_width_and_spacing\n      when '@axis_with_labels', :@axis_with_labels\n        set_axis_with_labels\n      when '@axis_labels', :@axis_labels\n        set_axis_labels\n      when '@custom', :@custom\n        @custom\n      end\n    end.compact\n\n    # Use ampersand as default delimiter\n    unless options == :html\n      delimiter = '&'\n    # Escape ampersand for html image tags\n    else\n      delimiter = '&'\n    end\n\n    jstize(@@url + query_params.join(delimiter))\n  end\n\n. Also not sure what this jstize is trying to achieve, but if this is just to escape the params, the following seems to break too\nstring.gsub(' ', '+').gsub(/[|{|}|||\\|^|[|]|`|]/) {|c| \"%#{c[0].to_s(16).upcase}\"}\nArgumentError: wrong number of arguments(1 for 0)\n    from (irb):4:in `to_s'\nWhy not using CGI.escape directly on each of the param? or something like this\n\ndef url_encode(data)\n                        if data.is_a?(Hash)\n                                encoded = {}\n                                data.each{|key,val| encoded[escape(key)] = escape(val)}\n                                encoded\n                        elsif data.is_a?(Array)\n                                data.map do |i|\n                                        i.split('&').map do |str|\n                                                str.split('=').map{|val| escape(val)}.join('=')\n                                        end.join('&')\n                                end.join('&')\n                        elsif data\n                                if  data.index('&') || data.index('=')\n                                        data.split('&').map do |str|\n                                                str.split('=').map{|val| escape(val)}.join('=')\n                                        end.join('&')\n                                else\n                                        escape(data)\n                                end\n                        end\n                end\n\n                def escape(val)\n                        (val.blank?)? val : CGI.escape(val)\n                end\n\n\n\n. I ll do that later today then :) Now that I have it working , I need to get my real work done with it ;)\n. Just did a pull request with fixes\n. believe me, without my patch, it does not work in the gem 1.3.6.. So what latest version are you talking about? trunk? If that's so, please rebuild the gem and upgrade it. I looked into the code in 1.3.6 and there is no way i tis working... Method are using symbol and not strings.. \nAlso Themes.yml is gone from the gem ....which is a mistake as well (in 1.3.6 gem)\n. seems like my gemfile was locking it at 1.3.6.. or around that version .Let me try the 1.6 version and get back to you\n. ",
    "aderyabin": "I'll review all issues tomorrow. Also I would like to add Travis CI widget, but I need some help from Matt\n. @epinault-ttc . I tried with ruby 1.9.2 and googlecharts 1.6.8 and it works. I think you have to update googlecharts to last version. Please let me know if you have any problems.\n. Yes, probably problem in your Gemfile, because 1.6.8 was deployed to RubyGems.org year ago\n. Well, it works at ruby 1.9.2 and I close this issue.\n. As for commit access, it will be great. I promise clean and working code\n. Can you show changes on examples?\n. Thanks, Joel\n. I think that is not a problem, its a feature. Look at this code https://github.com/mattetti/googlecharts/blob/master/lib/gchart.rb#L500 \n. It's a part of interactive google charts based on js. Unfortunately, this gem doesn't support interactive charts\n. Merged!\n. String.tr() is a method from ruby 1.9.3. I think we have to be more careful and use gsub because it works on ruby 1.8.x\n. merged\n. Merged  with come fixes. Thanks for your commit.\n. This commit create some syntax error /googlecharts/spec/../lib/gchart.rb:746: syntax error, unexpected $end, expecting kEND (SyntaxError)\n. Also, please look at this http://travis-ci.org/#!/aderyabin/googlecharts . Googlecharts works well with ruby 1.9\n. Thanks for issue\n. I didn't find this change in documentation. Please add test(s) for your commit.\nAlso this code Gchart.bar( :data => [[-10], [100]], :encoding  => 'text', :horizontal => true, :min_value => -20, :max_value => 100, :axis_with_labels => 'x', :bar_colors =>['FD9A3B', '4BC7DC']) generates bars with different colors\n. @chrismar035 Thanks!\n. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u044d\u0442\u043e\u0442 \u0432\u043e\u043f\u0440\u043e\u0441 \u043b\u0435\u0436\u0438\u0442 \u0437\u0430 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e \u043c\u043e\u0435\u0433\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u044f.\n. ",
    "peterhellberg": "Do you have a reason for using p136 over p180?\nRVM recently removed the support for installing p136 so I tested the following in p180:\nGchart.line(:data => [0, 40, 10, 70, 20])\nResulting image\n\n. ",
    "markus": "With this code:\nGchart.line(:data => [[nil, 500, 425], [425, 600, nil]], :axis_with_labels => ['x'], :axis_labels => [[1, 2, 3]])\nI expect a chart where the labels 1, 2 and 3 are evenly spaced on the x-axis.\n. I pushed a test for it, but I don't know if my test makes sense because I think there are many ways to get evenly spaced labels.\n. ",
    "joel": "Thanks for your gem!\n. ",
    "marshallshen": "I changed String.tr to gsub in commit 4b0c4ad.\n. Old pull request contains repetitive code merges, will create a new pull request.\n. ",
    "kathgironpe": "There should probably be a test to check whether the URL is working or not. Can you add? I can merge this to master but I got advice from Matt that any changes should have some tests. \n. @adamjonas Looks good. Think this should be merged. \n. Have to check why build is failing. \n. @mockdeep shouldn't you be checking if data set is empty before using Gchart? \n. @mockdeep it's a rare case but agree about proper error handling. \n. ",
    "speednoisemovement": "After further investigation, looks like this only affects some version of Chrome.  Withdrawing this.\n. ",
    "rubymaniac": "I am closing this pull request because I have to investigate further and (as you've said) write some tests. I wasn't talking about changing the colors in same stacked bars (this works as you've pointed out) but changing the colors in different bars does not work. For example check this out\nruby\nGchart.bar(data: [100,200], horizontal: true, bar_colors: ['cccccc','b3e092'], title: \"test\", title_size: \"12\", legend: ['first','second'], size: '260x100', encoding: 'text')\nThis does not produce two different colors. Try this now\nruby\nGchart.bar(data: [100,200], horizontal: true, bar_colors: ['cccccc','b3e092'].join(\"|\"), title: \"test\", title_size: \"12\", legend: ['first','second'], size: '260x100', encoding: 'text')\nand see that it does produces different colors in different bars.\nTo sum up what we need here is to check if the data is a 2D array and keep the current format of the bar colors else if data is an 1D array join the colors with |\n. ",
    "NaumanZahid": "bar_colors: 'FF0000,00FF00,0000FF'\nThis worked for me though.\n. ",
    "tspangler": "Ancient question, ancient API, but thanks for the tip. Works great. :+1: \n. ",
    "bengreville": "Issue resolved: needed to do a bit of data manipulation before generating the graph. As a reference for anyone with this problem in the future, add nulls to the data sets you want shortened until it equals the largest data set in your array. For example:\n[[17, 28, 49, 59, 62], [24, 40, 52, 63, nil]] \nOR \n[[17, 28, 49, 59, 62], [24, 40, 52, 63, nil], [15, 64, nil, nil, nil]]\n. ",
    "adamjonas": "Thanks @katgironpe!\n. ",
    "Chuongv": "Per https://en.wikipedia.org/wiki/RubyForge\nLooks like it was shut down. Does anyone know where the docs were ever moved?\nThe only doc I can find is by running \"gem server\" and going to the local host to access the documentation. Not sure if the docs on there are up to date though.\n. So your expectation is that it returns an empty graph? Or an error?\n. ",
    "michaelmior": "I just added the project on RubyDoc.info. This is automatically generated from the source code.\n. ",
    "mockdeep": "@katgironpe It doesn't seem like the role of the library to make that decision for users. If I pass an empty data set to the Google Charts API, it returns a blank graph, which is fine for my purposes. At the very least, a meaningful error message would be helpful.\n. I think the ideal situation for me would be for it just to return an empty graph. It's fairly common in the dev environment and in tests to have empty graphs, so it would be nice just to render it transparently instead of having to handle the error case.\n. ",
    "Seven0711": "\u8bf7\u95ee\u4f7f\u7528Google chart\u8981\u5f15\u5165\u54ea\u4e9b\u6587\u4ef6\uff0c\u53bb\u54ea\u91cc\u4e0b\u8f7d\uff1f\n. ",
    "zukunftsalick": "@mattetti any feedback on this?\nthanks\n. @mattetti thanks. Yes, it would be lovely if you can fit this in the gem's next release.\ncheers,\n. @mattetti it's the same username as here (zukunftsalick)\n. cheers @jfields \n. Can you share your code snippet? @return-null \n. I guess you might be having a different size on the data parameter. Check the following example below which worked fine:\nGchart.bar( :data => [[1,2,4,67,100,41,234],[45,23,67,12,67,300, 250], [12,13,2,5,17,12,22], [52,13,2,15,71,132,92]], \n            :title => 'SD Ruby Fu level', \n            :legend => ['matt','patrick', 'tim', 'marc'], \n            :bg => {:color => '76A4FB', :type => 'gradient'}, \n            :bar_colors => ['ff0000','00ff00','aa00ff','99FF00'])\nYou can check the graph at http://chart.apis.google.com/chart?chco=ff0000,00ff00,aa00ff,99FF00&chf=bg,lg,0,76A4FB,0,ffffff,1&chd=s:AAAGKEY,ECGBGfZ,BBAABBC,FBABHNJ&chdl=matt|patrick|tim|marck&chtt=SD+Ruby+Fu+level&cht=bvs&chs=300x200&chxr=0,1,234|1,45,300|2,12,22|3,52,132\n. @return-null I would suggest you ask those questions on stackoverflow :kissing_heart: \n. @Deekor \nyes. it works.\neg:\nhttp://chart.apis.google.com/chart?chtt=title\\nsubtitle&chs=300x200&cht=lc&chd=t:10,5.2,4,45,78\n\n. they look stacked for me. What do you want to achieve? Can you show something visual?\n. Now I got it.  \nPlease set the parameter :orientation => 'horizontal' to get the bars non-stacked.\nhope that works for you @harikesh11492 \nYou can check the specs that cover this case at https://github.com/mattetti/googlecharts/blob/d316458ad177369d5deda5d16513bd3d2e06478d/spec/gchart_spec.rb#L308\nURL: http://chart.apis.google.com/chart?chco=FF0000,00FF00&chd=s:uPEf,PfuB&cht=bhs&chs=300x200&chxr=0,300,300|1,100,300\n. look at the method bar_presentation on https://github.com/mattetti/googlecharts/blob/master/lib/gchart.rb#L136\nthere's no stacked parameter there since a refactor in 2012 so what I did was to set :grouped => true and then I get the graph you want. \ncode:\nGchart.bar(:data => [[300, 100, 30, 200], [100, 200, 300, 10]], :bar_colors => 'FF0000,00FF00', :grouped => true)\ngraph:\n\n. Feel free to go ahead. Be aware that the google charts API this gem uses is deprecated.\n. hmm build is failing, Have you taken a look?\n. ",
    "jfields": "Added a basic spec.  Care to merge?\n. ",
    "return-null": "Here's the code:\n            my_chart_url = Gchart.send(\n                chart_type,\n                :size => size, \n                :title => title,\n                :bg => bg, \n                :legend => legend, \n                :data => data, \n                chart_colors.to_sym => colours\n            )\nIt doesn't matter if it to literally say bar_colors = [\"52642e\",\"7f999c\",\"ebe749\",\"d67234\",\"e1dfe7\",\"ebea96\",\"d2462b\"]\nThe effect is the same. But it may be submitting it to Google correctly. Here's part of a URL generated:\nhttp://chart.apis.google.com/chart?chco=81284a,b2884f,d61e49,32e2fa,a78811,8ca43c,f66980&....\nI can't actually see the what the issue is. This might be a problem/change with Google's API?\n. Ah, I realized my issue. I passed a simple array of 7 values for the data, which I had hoped to assign a different color for each, as each is a count for a different person: \n[4, 10, 57, 39, 6, 58, 8]\nI passed 7  hex color codes, and 7 users for the legend. But I guess it is not supported to just assign a different color to each bar if there is only one value for that bar?\n. ",
    "harikesh11492": "Thanks for looking into it.\nI was following the steps given in https://matt.aimonetti.net/googlecharts/ \nI was trying to create the unstacked bar chart \n\nBut for :stacked=> true and :stacked=>false i was getting the below chart\n\nAs you can see in my previous comment , both stacked and unstacked giving me same output (is stacked output)\nhttp://chart.apis.google.com/chart?chco=FF0000,00FF00&chd=s:uPEf,PfuB&cht=bvs&chs=300x200&chxr=0,300,300%7C1,100,300\n. @zukunftsalick : I want to create the the vertical chart with unstacked way like the below one \n\nfor which i used the code \nGchart.bar(:data => [[300, 100, 30, 200], [100, 200, 300, 10]], \n           :bar_colors => 'FF0000,00FF00',\n           :stacked => false )\nWith orientation change also i am still getting the stacked chart with horizontal orientation(which is not what i need)\nhttp://chart.apis.google.com/chart?chco=FF0000,00FF00&chd=s:uPEf,PfuB&cht=bhs&chs=300x200&chxr=0,300,300%7C1,100,300\n\n. Thanks for the code.It fixed my issue \nIt seems the documentation https://matt.aimonetti.net/googlecharts/ has was of older gem versions\n. ",
    "davidcornu": "Gem::InstallError: rake requires Ruby version >= 1.9.3.\n. @brchristian yeah build failure is unrelated. I attempted to fix it in https://github.com/mattetti/googlecharts/pull/83 but not too sure what's going on.\n. Not quite sure what's going on here:\n$ ruby --version\nruby 1.9.3p551 (2014-11-13 revision 48407) [x86_64-linux]\n$ rvm --version\nrvm 1.26.10 (1.26.10) by Wayne E. Seguin <wayneeseguin@gmail.com>, Michal Papis <mpapis@gmail.com> [https://rvm.io/]\n$ bundle --version\nBundler version 1.7.6\n$ gem --version\n2.5.1\n10.68s$ bundle install --jobs=3 --retry=3\nFetching gem metadata from http://rubygems.org/...........\nResolving dependencies...\nInstalling diff-lcs 1.2.5\nNoMethodError: undefined method `spec' for nil:NilClass\nInstalling rake 11.1.2\nAn error occurred while installing googlecharts (1.6.12), and Bundler cannot\ncontinue.\nMake sure that `gem install googlecharts -v '1.6.12'` succeeds before bundling.\nThe command \"eval bundle install --jobs=3 --retry=3\" failed. Retrying, 2 of 3.\n. ",
    "brchristian": "@davidcornu @zukunftsalick Was looking for just this, as this issue just came up for me in a project. Happy to help if I can be of use. Seems to me like the build failure is unrelated to these changes, but not sure.\n. "
}