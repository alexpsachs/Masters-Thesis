{
    "HansPinckaers": "Thanks, should be a small fix. Will fix it when i have time.\n. Pull request accepted.\n. Maybe we should try to async launch the animation on the mainthread using GCD? (dispatch_async etc.). Maybe this will resolve the interfering. \nThis seems to be fixed in iOS5 thought, can't reproduce it.\nI like the animation, so want to work around this bug if possible.\n. Awesome. Thanks!\n. Thanks!\n. Thanks :) weird bug thought.\n. Thanks!\n. I'm sorry this is my fault, I only glanced at the code before clicking \"merge pull request\" . I will look into it tomorrow. Thanks for your comment!\n. Thanks! :)\n. Thanks, but if you override drawRect anyway we shouldn't use a UILabel, we should draw a string in the drawRect via CoreGraphics.\n. Thanks, but I don't know yet what to do with this. ARC support seems ok, but it won't build when a project doesn't support ARC. Maybe a different branch?\n. I don't really like subprojects, if you're using this class you should just import the class files into your project. I will mention in the README that the project is not yet ARC-supported and that you should add -fno-objc-arc as a compiler flag for the files.\n. I added this functionality a while back. Please test it. Thanks for your input!\n. Thanks, this means that the delegate method for height changed doesn't get called when using cut/copy/paste. \nI don't have much time, maybe you can find a solution? Just listen to cut/copy/paste actions and call the delegate. \nHans\nOn Thursday 12 April 2012 at 01:04, mofolo wrote:\n\nThere seems to be a problem when you cut all text from the GrowingTextView or paste large amounts of text into an empty GrowingTextView. The images can explain it a little better:\nWhen Pasting into empty TextView\n\nAs you can see, the UIBarButtonItem gets affected in a weird way. \nWhen Cutting or Clearing the field to empty\n\nSame deal here, the UIBarButtonItem gets pushed below the Toolbar's view.\n**When you enter text normally, paste into a non empty textView, or if not all characters are cut/cleared\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/HansPinckaers/GrowingTextView/issues/14\n. It's weird, but not a bug of GrowingTextView, so I'm closing this issue. Thanks for your report.\n. if minLines and maxLines are the same it won't grow right?\n. Yeah, you're right. It's time to switch to ARC. Thanks!\n. Nice commits, thanks!\n. Thanks \n. If people want this kind of functionality I think they should directly manipulate the internal UITextView. Providing a bridge to all the UITextView methods is kinda impossible :)\n. Used your implementation. Thanks!\n. Thanks!\n. Good implementation, but I don't like that if you don't set a placeholder, the UILabel is still initialized. Maybe we could initialize the placeholder UILabel when you set the placeholder NSString from the first time.\n. Added another placeholder implementation.\n. Thanks!\n. @eliburke you're right. I picked one :)\n. This has been fixed now. Please test with the latest code.\n. Thanks for reporting!\n. Can maybe someone give me an example podspec that could work? Or, if you have time; open a pull req?\n. Will this work?:\n\nPod::Spec.new do |s|\n  s.name         = \"HPGrowingTextView\"\n  s.version      = \"0.0.1\"\n  s.summary      = \"Multi-line/Autoresizing UITextView similar to SMS-app.\"\n  s.description  = \"An UITextView which grows/shrinks with the text and starts scrolling when the content reaches a certain number of lines.\"\n  s.homepage     = \"https://github.com/HansPinckaers/GrowingTextView\"\n  s.license      = { :type => 'MIT', :file => 'LICENSE.txt' }\n  s.author       = { \"Hans Pinckaers\" => \"hans.pinckaers@gmail.com\" }\n  s.source       = { :git => \"https://github.com/HansPinckaers/GrowingTextView.git\", :commit => \"80b463825808759145080eb66e8fa045ace0bdf6\" }\n  s.platform     = :ios\n  s.source_files = 'Classes', 'class/**/*.{h,m}'\n  s.requires_arc = true\nend\n. Hi @erswelljustin, the class lets a normal UITextView to fonts, and asks the UITextView how large it should be. Maybe you can change the line-height defines in your custom font?\n. Why is this needed? Deleting seems to work fine.\n. Well I was deleting with backspace.\n. Awesome, I will check when I have time. But a pull request would certainly help :)\n. @johnpaulmanoza any updates on the pull req?\n. This should have been fixed now with @johnpaulmanoza pull req and a contentOffset behavior fix.\n. Just checked on GM, works on my device :)\n. Are you sure that you are up to date? Because the building for iOS6 is also fixed.\n. This should be fixed now. Thanks @dim1014 !\n. I want to wait for iOS7 support before we call it version 1.0\n. I will do some commits after this to really fix all the issues.\n. Will fix.\n. Delegate is unsafe_unretained iirc, hence it won't retain the delegate object. Delegate is not nil here, it is a pointer to an object you already released. So it doesn't exist anymore. You can use the zombies template with Instruments to debug this fairly easy. \nHans\n. What goes wrong with storyboard?\n. Yeah, that one is not really needed. Thanks!\n. True that. Thanks!\n. I set the release tag to 1.0.1, the podspec now points to this tag.\nThanks!\n. Hi @jacksonpan I saw that problem too. The problem is in drawRect from internalTextView.\n. Yes. Instead of:\nobjc\n[placeholder drawInRect:CGRectMake(8.0f, 8.0f, self.frame.size.width - 16.0f, self.frame.size.height - 16.0f) withFont:self.font]\nin https://github.com/HansPinckaers/GrowingTextView/blob/master/class/HPTextViewInternal.m#L106\nTry:\nobjc\n[placeholder drawInRect:CGRectMake(8.0f, 8.0f, self.frame.size.width - 16.0f, self.frame.size.height - 16.0f) withFont:self.font lineBreakMode:UILineBreakModeTailTruncation alignment:UITextAlignmentLeft]\n. When done could you open a pull req?\n. Thanks!\n. Thanks!\n. @raladdin If that works reliably could you make a pull req?\n. maxHeight of zero shouldn't be the default anyway. \n. But this is a valid pull req, so will merge. Thanks!\n. I should uncomment that line..\n. No this library isn't iOS 7 explicitly :)\n. Hi @ApalapA thanks for the pull req, one problem though: where is the placeholder color getting set for iOS7?\n. Seems fine, thanks!\n. This is because the placeholder will span multiple lines when it is too big. More of a feature than a bug. Or am I missing something?\n. Very nice, thanks!\n. Thanks!\n. Yes, you can change the code in the example to not reposition the textview. It should grow downwards.\n. Did you try the solution in the SO post? \n. Awesome! However does this also effect text rendering?\n. Ok nice! Thanks for this fix this irritated me.\n. Looks very cool, however what happens if you want to compile this on base sdk 6?\n. Correct sir!\n. Really? There is a if ([self.placeholder respondsToSelector:@selector(drawInRect:withAttributes:)]) around it. Very strange\n. ",
    "auibrian": "Joe, I've updated my branch to address this issue. You can try from there or wait to see if Hans accepts the pull request.\n. Is this reproducible in the simulator or device only? So far I cannot reproduce using the simulator and my branch which uses ios4 style animations (block based). pdenney, if possible, could you test using my branch and see if you or your team can still reproduce the issue?\n. Agree. Not entirely sure what I was thinking when I wrote that. I would actually go further and state that the entire if can be removed and the code can just use block based animations only. The entire point of that section was to support pre iOS 4.0 devices which is no longer necessary.\n. ",
    "pdenney": "It is only reproducible on the device. However, it does appear that your change fixed the issue. Not because of the block-based call but because of the options used on the animation. If I turn off all options on the animation I can reproduce the issue on a 4.3.5 build with no problem but with them turned on, it doesn't happen.  Looks like you solved the issue :)\n. ",
    "SRandazzo": "Also steps to reproduce to make it clear:\nCreate a UIScrollView, set the content size to a number larger then the screen height\nAdd a growingTextView in viewDidLoad at the bottom of the scrollview (off screen). \ncall setText: on the textView. The scrollView will scroll to it automatically.\nI believe the auto-scroll desired behavior is to scroll to the textView only when it becomes the first responder.\n. @HansPinckaers thanks for fixing in you latest commits! just went to resolve my self and was wondering why it wasn't crashing anymore :-0\nIf the newer methods offer something that fixes iOS 7 behavior we can certainly add them back using run time checks, but if there is no benefit might not be worth implementing now\nThanks for fixing, going to close this issue out as it was it fixed here: https://github.com/HansPinckaers/GrowingTextView/commit/c61f6e807c34b6c55d33d7eecc121bf30263116c \n. ",
    "dkharrat": "I think this pull request broke the scrolling behavior (see issue #12). Regardless, I don't think this is the right fix for a rotation issue. Instead, the autoresizeMask is what should be used to readjust the layout when rotation occurs. Also, calling the textViewDidChange:  selector in layoutSubviews is very inefficient, as it gets called on every scroll change. Without this commit, issue #12 is fixed and I don't see any layout issue when rotation occurs (I have the autoresizeMask set properly).\nCan this commit be reverted, please? It needs to be more thoroughly tested first, and it's not the right fix anyways.\n. I'm also seeing this issue on iOS 4.0. The scroll and bounce don't seem to work properly.\n. As I commented there, the commit for pull request #7 is what seems to have broke the scrolling/bouncing behavior. This issue can be closed when that commit is reverted.\n. By the way, one use case where I needed to adjust the maxHeight is in landscape mode when a navigation bar exists, where the visible area is not very large (fits around 4 lines or so). I wanted the text field's height to occupy all the available area when the textField height grows to the max.\n. ",
    "rantav": "yeah, I agree, as noted, I shamelessly copied from that suggested\nsolution...\nperhaps it's beter to add a UILabel in initWithFrame and forget about\ndrawRect\nOn Wed, Feb 1, 2012 at 9:48 AM, Hans Pinckaers <\nreply@reply.github.com\n\nwrote:\nThanks, but if you override drawRect anyway we shouldn't use a UILabel, we\nshould draw a string in the drawRect via CoreGraphics.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/HansPinckaers/GrowingTextView/pull/9#issuecomment-3754971\n\n\n/Ran\nhttp://tavory.com\n. ",
    "gwynne": "ARC mode can be turned on and off on a per-file basis, and using the standalone project as a subproject (the intended use scenario) makes it a moot point, as it'll be compiled as a separate target. The same amount of (minimal) effort is involved in making it work either way - see the updated example project :).\n. ",
    "mofolo": "I though the same too, but really, the delegate is returning the correct height when copying and pasting.\nI ended up making my own UIButton and Putting it into the Toolbar, that solved the problem for me, but it still doesn't work with UIBarButtons. \n. ",
    "alain57": "i close this request...\n timothyarmes solution is better ;) \n. ",
    "gtmtg": "To make the first letter of each sentence capitalized - textView.internalTextView.autocapitalizationType = UITextAutocapitalizationTypeSentences;\nTo turn off autocorrect - textView.internalTextView.autocorrectionType = UITextAutocorrectionTypeNo;\n. ",
    "DPigpen": "Thanks you. i done!\n. ",
    "jonasman": "great!\n. not working here also. Do I need to change something? i had an old version \n. i also pulled the latest it works on the example, but not on my project. I was wondering if i need to change some setting. I will try to debug/dig more later\n. OK i found the issue.\nPreviously the maxNumberOfLines was set to 3 in the init method but now it is commented out.\n textField.maxNumberOfLines = 3; Solves the problem :)\n. Did you fix it? Looks like the problem is after resizing the control with a placeholder\n. ok i fixed it:\nadd this to the HPGrowingTextView.m  commonInitialiser:\ninternalTextView.contentMode = UIViewContentModeRedraw;\n. ",
    "chapados": "Thanks for the feedback. That's a good suggestion. I will change it so that the UILabel is lazily initialized when a placeholder string is set for the first time.\n. ",
    "toddvernon": "Same problem.  If I set the width twice, first with a width less than 500 and then set the width to a wider width it works.\n. ",
    "eliburke": "Hans, \nThere are multiple pull requests and personal forks to add a placeholder string; could you pick one that you like so we can standardize on it?\n. I'd suggest you look at https://github.com/jessesquires/JSQMessagesViewController \nIt's very active and modern. I'm trying to find time to switch over myself.\n. ",
    "mglidden": "The contentSize in HPTextViewInternal never gets updated. I believe this is a bug in iOS7 \u2013 if you search the Apple developer forum for \"uitextview content size\" you'll find a handful of other posts with the same issue.\nIt's probably best to wait a while longer and hope the iOS bug gets fixed.\n. ",
    "alexdd55": "UITextView resizes now automatically, if you select \"use autolayout\" and constraints are set correctly.\nIts kind of confusing in the beginning, but works for me.\nI only tried it with a text that came from a webservice, i did not try it with typing... but maybe it helps anyway ;)\n. shaikhtariq11 \nset the contraints so that the teh distance is set to an element about/before and after. like distance to the content view and maybe scrolling to \"off\" (depends on the usage you have). \nthat helped me to elimate the problem with recalculating the size.\nto set this properly you might need the the current version of xcode (DP6) all previous version are telling you problem with constraints verywhere and do not solve the problem properly.\ni hope this will help a little bit with your issue :)\n. don't set a height, because then it will be fixed in the height.\ni can not provide any sample code, because its all done in the interface builder.\ni just did a lot of try and error with constraints.\nto be honest, the constraints thing is stil confuses me and sometimes i just reset all contraints and start from scratch du keep it clean.\n. ",
    "shaikhtariq11": "alexdd55 can u please give me trick to do the same.\n.  from three side which is upper, left and right side i set fixed constraints(not for lower).  i had a problem with height constraints height is not increasing with its contents from xib only i don't want to code for that. or can u please send me the sample code at my email id i.e. shaikh.tariq11@gmail.com\n. ",
    "agquick": "Or really, it looks like the spec at https://github.com/CocoaPods/Specs/blob/master/HPGrowingTextView/0.0.1/HPGrowingTextView.podspec is outdated.\n. Thanks. Using that pod syntax is good enough for me for now.\n. If master stays relatively stable, could we just point the pod spec at the\nmaster branch? That way you won't have to constantly re-update.\nSent from my iPhone\nOn Aug 12, 2013, at 5:11 PM, mouhcine notifications@github.com wrote:\nHere's the documentation on how to create it. There is even a command that\nwould test it.\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/HansPinckaers/GrowingTextView/issues/35#issuecomment-22525730\n.\n. ",
    "mouhcine": "Until @HansPinckaers adds a tag, it's not possible to add a new spec on CocoaPods repo.\nI have the same problem as I need to use the placeholder API. For now the only solution is to specify the last commit in the podfile \n\npod 'HPGrowingTextView', :git => 'https://github.com/HansPinckaers/GrowingTextView.git', :commit => '80b4638258'\n. Here's the documentation on how to create it. There is even a command that would test it.\nhttp://docs.cocoapods.org/specification.html\n\nThe main issue is that you should make tags in order for anyone to add the spec to cocoa pods/specs (a thing that anyone can do, but not tags on your repo)\n. If you don't have time to create the pod spec, just add a tag (for instance 0.1.0 and I'll make a pull request.\n. ",
    "Farranco": "Then it must have been a particular issue in my view hierarchy. Without it there was no delete option after selecting text.\n. Deleting with backspace is fine. However, in my case I have another item lower down in the responder chain (a book entry) that will  respond to delete. The delete option is then presented to the user but acts on the whole item instead of the selected text as expected. Hence I added the delete method to GrowingTextView to capture that message. I understand this is particular to my own project and you might not desire the delete option in GrowingTextView. But I thought it might be useful to others as it's presents a bug in this case that is easy to overlook.\n\n. ",
    "johnpaulmanoza": "I got same problem.\n. Issue has been fix from the link above. Thanks @adamkmccarthy.\n. Okay I will.\n. Just did @HansPinckaers. Sorry for some delays I almost forgotten it.\n. Hey, there is a method called boundingRectWithSize:options:context from NSAttributedString. You can use that though. \n. ",
    "seankellycs": "I'm running into this same issue. Has anyone found out a fix yet?\n. ",
    "joeharby": "Love this plugin, but I'm getting the same issue in iOS 7.\n. It works for me on iOS 6 & 7.\n. ",
    "PlayDevelop": "+1 on this problem.\n. ",
    "wcrtr": "+1 looking into why this is happening...\n. ",
    "ghost": "Folks - FYI it is against the Apple policy to discuss pre-release software on the public Internet. I recommend we shift discussion to the Apple Developer Forums, where there is a thread on this topic if you search for HPGrowingTextView, along with some progress toward a solution.\n. ",
    "adamkmccarthy": "No internal or pre release APIs have been discussed here. It is most likely a fix will be pushed by the owner or a contributor and no discussion will need to take place. iOS 7 itself is in the public domain, apple acknowledge this through their own website. All that has happened here is that it's presence has been admitted, nothing more.\nThanks for letting us know this component is being discussed there though. Do you have a link to the topic?\n. For anyone curious, the thread referred to above is here. Dev credentials required of course. https://devforums.apple.com/message/872745#872745\n. ",
    "octopepper": "It look like it is not fix. I just download current version (with @johnpaulmanoza pull req inside) and it change nothing for iOS7 devices and does not run on iOS6 devices.\niOS6 fixes is easy, add a respond to selector, but I'm still without multi-line in iOS7.\nDo I am the only one ? I will continue to look what is the issue for me.\n. Monday is better to work well. I take care to really download the master last version, and everything work well.\n@jonasman you just have to download the last version, and replace your old HPGrowing... files by the new one. Should be working fine on iOS 6 and 7.\n. ",
    "badMatters": "@jonasman I had a similar problem to you. Friday I updated my working copies with the latest version but it made no difference on my devices. I found that when I cleaned my project and deleted it from my devices when I built and tested on the phone it worked. Both on 4G run the ios7GM and on a 3GS running 6.1. Don't know if that helps.\n. ",
    "DimaVartanian": "I am going to submit a pull request with an updated podfile and tag instructions.\n. ",
    "ShaiBer": "Hey, thanks for the fix.\nI'm depending on it for my project as well.\nWhen are you going to merge it into main branch?\n. ",
    "vernon99": "Thanks! Tried to use zombies, but it didn't help, I haven't find any. This bug is so rare, I'm not sure even how to reproduce. So for now I've just added checks \"if (delegate)\", I think it makes sense and suggest to use it in the main branch as well.\n. ",
    "jacksonpan": "i set the placeholder, when view will appear, i take it becomeFirstResponder, then the placeholder text is stretched.\nPlease help me fix it, thanks.\n. Oh, OK, and now is there way to fix it?\n. no, i try it, but problem still,\ni need your help to fix it, please\n. ",
    "vleango": "a little update:\nWhen selecting All, and deleting all text, the HPGrowingTextView is no longer scrollable (even with dismissing the keyboard and becomingFirstResponder). This makes sense, since it's not a multi-lined textview at present. However, when text is pasted back in, it is still not scrolling\n. took me a while to figure it out.\nWhat I did was reset the scrolling in: \ngrowingTextView didChangeHeight:(float)height;\n. growingTextView didChangeHeight:(float)height; was working for the simulator, but I found:\ngrowingTextViewDidChange\nto be working for both the simulator and device\n. ",
    "kejinlu": "How to reset the scrolling\uff1f\n. I think this is a bug\n. @HansPinckaers\n. iOS7 With XCode5\n. ",
    "schemers": "I just ran into the same issue. reproducible in the growing text example project by pasting about 8-9 lines of text (enough lines to be higher than max height), like:\n1\\n\n2\\n\n...\n8\\n\npasting that causes most of 7 and 8 to be clipped.\nI came up with a fix by starting with scrollEnabled = YES in commentInitializer, as well as setting it to YES in \n- (BOOL)textView:shouldChangeTextInRange:replacementText:\nadditionally, I had to add same \"scoll to caret\" logic in growDidStop, otherwise the caret would sometimes be wrong.\nstill doing some testing to make sure everything else is working, but that seems to fix it (at least inside my app, I haven't tested inside of sample app yet).\nneed to set scrollEnabled = YES only on iOS7, causes bad things on iOS6.\n. unfortunately it doesn't seem reliable, going to try and explore other routes. It definitely feels related to other issues people have reported (an Apple Developer forums) wrt to scrollEnabled = NO causing clipping issues, etc. \n. ",
    "K-Be": "Next lines:\n else{\n            textToMeasure = [[NSMutableAttributedString alloc] initWithString:internalTextView.text];\n            [textToMeasure addAttribute:NSFontAttributeName value:internalTextView.font range:NSMakeRange(0, textToMeasure.length)];\n        }\n. I've had same issue :(. \nIt happen after setAttributedText: was called.\n. I have found problem in my code:\n``` ObjC\nCGPoint contentOffset = _textInputView.growTextView.internalTextView.contentOffset;\n[_textInputView.growTextView.internalTextView setScrollEnabled:NO];\n_textInputView.attributedText = attributedText;\n/\nsome code ....\n/\n_textInputView.growTextView.internalTextView.contentOffset = contentOffset;\n[_textInputView.growTextView.internalTextView setScrollEnabled:YES];\n```\nSave and restore content offset is needed only in iOS6. I have changed code to:\nObjC\nCGPoint contentOffset = _textInputView.growTextView.internalTextView.contentOffset;\n        if (!isIOS7)\n        {\n            [_textInputView.growTextView.internalTextView setScrollEnabled:NO];\n        }\n        _textInputView.attributedText = attributedText;\n/*\nsome code ...\n*/\n        if (!isIOS7)\n        {\n            _textInputView.growTextView.internalTextView.contentOffset = contentOffset;\n            [_textInputView.growTextView.internalTextView setScrollEnabled:YES];\n        }\nIt's solved problems with scroll in IOS7\n. ",
    "nycom83": "This merge breaks the compatibility with iOS 6.x\n. My app supports iOS 6.x and 7.0\nSo, in my project, __IPHONE_OS_VERSION_MAX_ALLOWED is equal to 70000.\nThe following code will be compiled and executed, even on ios 6\n[placeholder drawInRect:CGRectMake(8.0f, 8.0f, self.frame.size.width - 16.0f, self.frame.size.height - 16.0f)\n                 withAttributes:@{NSFontAttributeName: self.font, NSForegroundColorAttributeName: placeholderColor}];\n. ",
    "dav": "Huh, the #if __IPHONE_OS_VERSION_MAX_ALLOWED < 70000 doesn't work as expected with 6.x?\nI admit I didn't try it (and can't right now) but didn't expect that to fail....\n. Ah, I see. so there needs to be a runtime check. Sorry about that.\nI guess either it needs to be a runtime check in addition to the compile check, or else use a pragma to disable to deprecation warning.\n. ",
    "raladdin": "I have the same issue\n. I think it's caused by changing the frame of the textview while scrolling is disabled.\nI added this in -(void)resizeTextView:(NSInteger)newSizeH in HPGrowingTextView.m:\n//At the very beginning:\nBOOL originalValue = internalTextView.scrollEnabled;\ninternalTextView.scrollEnabled = YES;\n//At the very end:\ninternalTextView.scrollEnabled = originalValue;\nI also noticed that when the view is not scrollable by default, there are some issues. I'm looking into it now, but for now I'm just setting internalTextView.scrollEnabled = YES; in the -(void)commonInitialiser in HPGrowingTextView.m.\n. It does! I'm new to github but I will look into it and try to do it in the next 12 hours.\n. Hmm after further investigation it looks like this solves the problem only as long as the user has entered something. In other words, pasting something larger than maxHeight is still buggy with this fix when this is the first thing the user does after loading the view. I haven't been able to track it down further yet.\n. ",
    "talkmithilesh": "Hey \nin HPGrowingTextView.m file\nuncomment this line  [self setMaxNumberOfLines:3];\nIts issue with maxHeight variable, its value become zero when you start editing ... \n. ",
    "cielpy": "i'm a git  newbie,i want pull this commit,how to do?\n. hi @HansPinckaers ,thank you for your great project,and I'm a Chinese programmer,my issue, when the placeholder like this \"\u56de\u590dqqqqqqq11111111111111111\",the Chinese \u56de\u590d appear and English \"qqqqqqq11111111111111111\" disappear.\nand when you add linebreaks parameter\uff0chere will show \"\u56de\u590dqqqqqqq11111111111...\"\n. #60 #63  had fix this bug.\n. ",
    "hanishabsigh": "Hey @HansPinckaers! Thanks for the great library. For iOS 7 I set the placeholder color property within the attributes of drawInRect:WithAttributes: function like so:  \"NSForegroundColorAttributeName:self.placeholderColor\".  The attributes are the same attributes used with a NSAttributedString. From my admittedly limited testing so far it has work as expected.  The only thing I think can be added is the ability to also change the placeholderColor property.\n. ",
    "dzenbot": "+1\n. ",
    "rokemoon": "Sorry, you can reproduce this in ios 7.\n. ",
    "mahboud": "Typing in a single character after the paste will correct the issue.  (Not a fix but maybe it will provide a clue)\n. ",
    "proxi": "I have seen a similar issue on iOS7. The culprit is line #415:\ninternalTextViewFrame.size.width = internalTextView.contentSize.width;\nwhich is different width than one set in layoutSubviews (line #133):\nr.size.width = self.bounds.size.width - contentInset.left - contentInset.right;\n. ",
    "vamsi2r": "Issue still exists. In iOS7 if I'm pasting text which more than the maximum height of the TextView, Its scrolling to last but one line. But it should scroll to last line.\n. ",
    "agnat": "Nope. Text rendering is unaffected by the content mode setting. I guess CoreText just does the right thing. Here are two screenshots, one taken in portrait one in landscape orientation:\n\n\n. ",
    "gzucm": "Lastest code, but still crash.\n*** Terminating app due to uncaught exception 'NSInvalidArgumentException',reason: '-[__NSArrayM drawInRect:withAttributes:]: unrecognized selector sent to instance 0x17f00870'\nMaybe growingTextView.delegate didn't set nil when the class's owner dealloc.\n. ",
    "eanagel": "I'm coming up on another project where I'm going to need to customize copy/paste and would love to get this merged in. Hans it looks like it's been a while ;) Any idea when you will be able to spend a little time merging stuff in? Is there another fork that is being actively developed?\n. ",
    "eincs": "+1 to this PR\n. ",
    "matehat": "Nope, it fixes things for iOS 7.1. iOS 7.0 still shows the bug. Still searching for a fix ...\n. ",
    "rex-remind101": "fix https://github.com/HansPinckaers/GrowingTextView/pull/93\n. ",
    "zoyag": "Agree. Just now I ran the demo and find that it never go into the \"if\" branch. Replace with respondsToSelector: is OK.\n. ",
    "manumenzella": "Hi @kazukiotsuka ! I am trying your fix but I'm still getting issues when running in a 64-bit environment. Particularly, when inputting several new lines until de textview has \"overflowed\" and then entering some text. The textview flickers. Can you recreate the issue?\nIt only happens when running in a 64-bit environment, and when building universal binaries.\nThank you!\n. ",
    "radhakrishnapai": "HI @kazukiotsuka. I find a similar issue when running in a 64 bit environment, as mentioned by @manumenzella. After flooding the textview when I press return or erase, the textView starts flickering. Please do look into this.\n. ",
    "rajatk": "i'm seeing this issue. It's especially prominent when using in tableviewcell. on reload, the textview shows  top part for a quick second then jumps to bottom.\n. ",
    "HaloZero": "If you want a quick fix, you can turn off animation. \n. I don't believe so, are you still getting the bug?\n. ",
    "Shahar2k5": "@HaloZero , i turned the animation off like that:\n    messageField.animateHeightChange = NO; //turns off animation\nbut still....\nanything else i need to do?\nTx.\n. Yeah,  still  the same. \nOn the simulator,  work OK. \nOn the iPad the bug exist. \n. ",
    "tsaisean": "I found this issue on iPhone6/6+, too.\nThe HPTextViewInternal.contentSize.height behaves strangely.\n. ",
    "truculent": "fix this method  with :\n```\n   - (CGFloat)measureHeight\n   {\n      if ([self respondsToSelector:@selector(snapshotViewAfterScreenUpdates:)])\n      {\n        // This is the code for iOS 7. contentSize no longer returns the correct value, so\n        // we have to calculate it.\n        //\n        // This is partly borrowed from HPGrowingTextView, but I've replaced the\n        // magic fudge factors with the calculated values (having worked out where\n        // they came from)\n    CGRect frame = self.internalTextView.bounds;\n\n    // Take account of the padding added around the text.\n\n    UIEdgeInsets textContainerInsets = self.internalTextView.textContainerInset;\n    UIEdgeInsets contentInsets = self.internalTextView.contentInset;\n\n    CGFloat leftRightPadding = textContainerInsets.left + textContainerInsets.right + self.internalTextView.textContainer.lineFragmentPadding * 2 + contentInsets.left + contentInsets.right;\n    CGFloat topBottomPadding = textContainerInsets.top + textContainerInsets.bottom + contentInsets.top + contentInsets.bottom;\n\n    frame.size.width -= leftRightPadding;\n    frame.size.height -= topBottomPadding;\n\n    NSString *textToMeasure = self.internalTextView.text;\n    if ([textToMeasure hasSuffix:@\"\\n\"])\n    {\n        textToMeasure = [NSString stringWithFormat:@\"%@-\", self.internalTextView.text];\n    }\n\n    // NSString class method: boundingRectWithSize:options:attributes:context is\n    // available only on ios7.0 sdk.\n\n    NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc] init];\n    [paragraphStyle setLineBreakMode:NSLineBreakByWordWrapping];\n\n    NSDictionary *attributes = @{ NSFontAttributeName: self.font, NSParagraphStyleAttributeName : paragraphStyle };\n\n    CGRect size = [textToMeasure boundingRectWithSize:CGSizeMake(CGRectGetWidth(frame), MAXFLOAT)\n                                              options:NSStringDrawingUsesLineFragmentOrigin\n                                           attributes:attributes\n                                              context:nil];\n\n    CGFloat measuredHeight = ceilf(CGRectGetHeight(size) + topBottomPadding);\n    return measuredHeight;\n   }\n   else\n   {\n       return self.internalTextView.contentSize.height;\n   }\n\n}\n```\n. ",
    "ThimonSistermans": "thx truculent!  Great fix. \n. ",
    "albertgh": "objc\nCGRect rect = CGRectMake(8.0f, 8.0f, self.frame.size.width - 16.0f, self.frame.size.height - 16.0f);\nNSDictionary *attribute =\n[NSDictionary dictionaryWithObjectsAndKeys:self.font, NSFontAttributeName, nil];\n[self.placeholder drawInRect:rect withAttributes:attribute];\n. ",
    "Lyn55": "I have the same problem~~\n. ",
    "Friend-LGA": "I think it is simulator bug. I have the same problem in many different apps. Some times keyboard appear, sometimes not.\n. ",
    "chanrathaly": "Go to simulator menu Hardware -> Keyboard -> Toggle software keyboard. This way solved my problem.\n. ",
    "seltsam42": "I really like HP's solution, however with Auto Layout, there is a much simpler way I would highly recommend. Take a look at this: https://github.com/adam-siton/AUIAutoGrowingTextView\n. ",
    "Elmundo": "@seltsam42 Thank you. I will check this out.\n. ",
    "whooperlove": "great fix!\n. ",
    "hiteshvarmora": "Paste this code in refreshHeight method.\n1                 [self resizeTextView:newSizeH];\n2\n3                if ([delegate respondsToSelector:@selector(growingTextView:didChangeHeight:)]) {\n4                    [delegate growingTextView:self didChangeHeight:newSizeH];\n5                }\nabove this line, \n                  internalTextView.scrollEnabled = YES;\nin if condition..\nit should work, i tested in iOS 8.\n. ",
    "Michael-iOSer": "@hiteshvarmora Thanks for your reply! It works!\n. ",
    "mmrobert": "i found if set contentInset.left and contentInset.right to zero, the textview flicking (moving right and left) is gone, some could explain why?\n. ",
    "proxyblue": "In GrowingTextViewAppDelegate.m - replace:\n[window addSubview:viewController.view];\nwith this:\nwindow.rootViewController = viewController;\n. ",
    "lrettig": "This is a total lifesaver. Sometime between iOS7 and iOS10, I just noticed, after the growing text view expands from one line to multiple, the text on the final line became invisible. This fixes the issue. Thanks @luoqisheng!\n. ",
    "sohanshrooms": "Set Minimum height of the text view.\nself.textView.minHeight = 25\n. ",
    "manujbahl": "sorry it was something wrong in my code..  never mind. "
}