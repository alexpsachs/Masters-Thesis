{
    "emmenko": "I'm keeping the work here #2 \n. @gaearon it doesn't seem to work as you suggested here\n\nMaybe you want to take a look by yourself first?\n. Damn it, I better go to sleep then! \nThanks for the fix :) :+1: \n. I would wait for 1.0 and see what we have in the library.\n. Will adjust a couple of things, but thanks! \n. @bvleur @gaearon thanks!\n. Hey, thanks!\nWell, I'm not sure if deployment to Heroku should be part of this example. What is exactly the problem that you're having?\n. Hmm, first of all I wouldn't use npm start, this is meant to be used for development.\nYou should build your bundle with npm run dist and serve it from a static http server.\nFrom what I see the error says eslint: not found, which makes me think it's not installed. Try running NODE_ENV=test npm i, which will install the devDependencies (if NODE_ENV is set to production it will install only the dependencies).\nPS: why do you want to deploy to heroku?\n. Cool, thanks! \nWell, the only thing to know is that the custom selectors are basically variables... \nThe rest is usual css :)\n. @keyanzhang wow, thanks! LGTM :+1: \nShould we wait for a stable 1.0 API before merging it? \n. @keyanzhang here we go redux-1.0.\nThanks again for your contribution!\n. Thanks!\n. Hey, thanks but I should be thanking you guys for your amazing work!\nWell, to be honest I haven't got much time yet to play around with the 1.0. I mean I've been following the changes and new features etc, but I didn't actually tried them out.\nMy idea of this repo was also to showcase those cool features step-by-step, in combination with redux. For example the next thing I wanted to do was login using onEnter hook.\nSo I can't tell you much at the moment, when I'm gonna go a bit deeper into the code I can give you more feedback.\nIn the meantime you can read some threads in the redux repo, talking about integration with RR.\nhttps://github.com/gaearon/redux/issues/227#issuecomment-119237073\nhttps://github.com/gaearon/redux/issues/177\n. @keyanzhang btw, I'm not 100% sure using immutable-js in this example is really necessary... \n. I actually never really implemented an isomorphic app with React. \nI suggest you look at the other examples, some of them are isomorphic, or universal :)\nOr if you feel like providing a PR for this example, you're welcome!\n. Yeah, I'm working on login workflow with the alpha version. Will create a separate PR for the RC. \nThanks btw, the new API looks really promising!\n. @jonaswindey sorry, being awfully busy lately. The latest changes are in the https://github.com/emmenko/redux-react-router-async-example/pull/11 PR, will try to wrap them up and merge it in the next days. \n. Cool, looks good, thanks! :+1: \n. You're right that they seem to be identical, however I don't see any subscribers_count field in the API response. Where did you find this?\n. Ooh ok, I was looking at the user stargazers :)\nPerfect, many thanks!!\n. FWI: I had to hide the field in the user stargazers page since it's not present in the response. \n. Hey, basically when you use react-router and you have a route like /users/:id, where id can change, you want to fetch the new user every time the url param changes.\nSo you need something like componentDidUpdate which checks if props changed and eventually fetch new data. So you would need that for each component that does data fetching. \nThe decorators basically abstract this logic allowing you to just specify in a clean and nice way the params that you are interested in and what kind of actions you want to trigger.\njs\n@fetchOnUpdate([ 'username', 'repo' ], (params, actions) => {\n  const { username, repo } = params\n  actions.fetchRepo({ username, repo })\n  actions.fetchRepoStargazers({ username, repo })\n})\nThis means:\n- check username and repo params and get their values from this.props.params (RR)\n- call the callback function with those params and the actions which were passed from the smart component\n- whenever params change the callback function is called, causing new data to be fetched\nHope this answer your question :)\n. It's on my TODO list :)\nAfter finishing #11 I'll start writing some documentation. I think first JSDoc, then some kind of tutorial guide (not sure about the blog post though).\n. The async basically stands for data fetching, meaning that this example deals with that. Many examples usually don't have that (e.g.: todo mvc) which is not very useful when most of the real applications fetch data from APIs.\n. Thanks but the binding is already done by ::. \nSee https://github.com/zenparsing/es-function-bind\nIs it not working?\n. Ok :)\n\nThanks for the great skeleton project by the way!\n\nGlad it helps! ;)\n\nAny reason why you don't use the connect() method to bind store and router when initializing the Application component\n\nHmm, not sure I understand what you mean...\n. Good points, will try to answer them tonight (currently quite busy with work) :)\nThanks!\n. > In your Login component the store and router are part of this.context.\nWell, since I have to transition I need the router, which can only be accessed via context. About the store I access it also via context because it's much easier to get the dispatch method. Otherwise I would have to connect the Login component and get dispatch as a prop, but in the login case it's not really necessary (at least as it is now). \nThis might also change with the new upcoming API for connect.\nIn general, try to avoid using context if it's not really necessary.\n\nAlso, any reason why you use a constructor to bind this in lib/components/github/Explore.js and not the :: syntax?\n\nYou're right, it's not consistent.\n\nBut as a beginner it is hard to see which variations are due to \"work in progress\" and which ones have an underlying reason...\n\nI know, I actually wanted to merge the login branch (need some more cleanup) and add JSDoc or comments to explain some of the choices. Unfortunately I'm extremely busy with work atm, I hope to find some time soon.\nHope this answer your question, otherwise feel free to ask more :)\n. Thanks!\n. Merged, thanks!\n. Nice, thanks a lot!! :+1: \n. Yep, that is something I've been meaning to try. \nHave you successfully used it already?\n. That would be great, thanks! :)\n. Thanks :+1: \n. Fixed, thanks!\n. Yeah, I think it happens whenever you change something in the index.js file. I can try to find a solution for that...\n. @jonaswindey I've kept now index.js very simple so that it doesn't get easily hot reloaded, hence the warning is gone if you update for example the locales.\n\n@gaearon thanks for the tip. I'm not sure how to use it though as it's used here and I'm not sure how should I replace it.\nIf I do it this way and I try to change something nothing actually re-renders although I can see in the console that it's updated...\n``` diff\ndiff --git lib/Root.js lib/Root.js\nindex 8d61fc3..409e56d 100644\n--- lib/Root.js\n+++ lib/Root.js\n@@ -9,7 +9,7 @@ import configureStore from './utils/configure-store'\n import * as storage from './persistence/storage'\n import * as components from './components'\n import * as constants from './constants'\n-import * as i18n from './i18n'\n+// import * as i18n from './i18n'\nconst {\n   About,\n@@ -34,6 +34,11 @@ const initialState = {\nexport const store = configureStore(initialState)\n+let i18n = require('./i18n')\n+module.hot.accept('./i18n', () => {\n+  i18n = require('./i18n')\n+})\n+\n function getRootChildren (props) {\n   const intlData = {\n     locale: props.application.locale,\n```\n\nCan you give me an hint maybe how it needs to be done correctly? Thanks!\n. So this file is basically a Store enhancer that allows to combine multiple stores like a middleware.\nIn my case I just want to \"enhance\" the dispatch function in order to do something whenever an action is dispatched. As you can see I save some information from the store in localstorage. \nIt's just a simple use case for a store enhancer. You might not need to use it, but can be quite useful for such use cases. The devtools also use store enhancers.\nI hope this answers your question :)\nPS: I need to provide some jsdoc anyway (ref #18)\n. @neverfox fixed, thanks for the notice!\n. Will do it as soon as I have some time. Any PR is welcomed of course ;)\n. That's in my todo list, haven't got time to implement it yet :)\n. Thanks!\nOne thing to adjust regarding the owner context\n- you don't need bind anymore\n  https://github.com/emmenko/redux-react-router-async-example/blob/master/lib/Root.js#L44\n. Just renderRoutes(props.history) :)\n. :+1: \nCan you confirm that everything works fine? Then I can merge :)\n. Fix the lint, then it's good to merge (just tested it locally). \n. :+1:  thanks for the PR!\n. Glad it helps! :)\nWhat do you mean by removing it? At the end it's just defined in 2 places:\n- the components (the default messages)\n- the root to wrap the app with the Intl component\nI understand that i18n support is not always required but when it is, it's not always easy to set it up. With this I just want to provide an example how you can do that, together with redux.\nThis example app is meant to showcasing different scenarios that you might find in a web application and how they play nice together. \nIf you don't need i18n simply ignore those parts, it should be pretty easy.\nHope this helps :)\n. Cool!\nIf you need any more help just ask ;)\n. Nice catch, thanks!\n. Thanks!\n. Thanks for reporting this!\n. Thanks for fixing it!\n. I can't find this problem. Are you still getting this error?\n. I can reproduce it after reinstalling all deps, I must have got an older version of eslint. Thanks for the PR!\n. Yeah, I haven't got time to implement this, but I wanted to have a script (similar to this) that parses the xml file and output the i18n javascript file.\nI hope to provide it soon (I also need it in my company), in the meantime manual copy / paste ;)\n. Looks like safari is the only browser missing the Intl API, thus needs to be polyfill.\nSee:\n- http://formatjs.io/guides/runtime-environments/#client\n- https://github.com/andyearnshaw/Intl.js\n. > There is a lot of value in this repo and I really appreciate the time you took to help the community with sharing this codebase. Kudos for that.\nReally glad to hear that, thanks!\n\nI think though, this is an opinionated project, not a minimal example in the likes of the redux docs, that are very minimal and try to be less opinionated.\n\nYes, it's not meant to be one of those \"boilerplates\" but a real application with opinionated use cases. There are different reasons for that, one is that those examples are usually \"easy\" to understand but at the same time \"too easy\" for a real world use case (e.g.: who the hell needs a counter app when an application usually needs to do API calls and so on). In my opinion there is always something missing in those \"general\" examples. \nWhat I'm trying to do here is to provide a real-world scenario with different use cases / functionalities that usually apply to such applications and to demonstrate how they play well together.\n\nThe Readme already explains some decisions, which I think is very nice. But I would suggest a bit more explanation.\nIt's easier for people already familiar with all this technologies to reason and learn from this repo, but beginners would probably have a hard time understanding all of it. A bit of documentation might be the only thing it needs, or maybe extracting a minimal example on a different repo might be a good idea too.\n\nYes, this is currently lacking a bit, and when I find some time I want to provide comments / documentation about decisions and so on. Refs #18 \n\nOnce more, please don't take this negatively. I really appreciate the project and it was very valuable to me. It is just some things to think about if you intend to work a bit more on this repo.\n\nNot at all :) Feedback is always good! And yes, like I said I'll add documentation which is something I've been meaning to do from the beginning.\n\nYou can also save the JSON output and upload to the visual analyzer here: http://webpack.github.io/analyse/ It might be a bit overwhelming tho.\n\nCool, didn't know about that. Thanks!\n\nHope this answer your questions, and thanks again for the feedback!! :+1: \n. @PrimozRome I hope to finally provide some documentation any time soon. And other useful use cases for a more complex application. Stay tuned. \nIn the meantime, just ask any question if you have troubles ;)\n. There is already a script for that ;)\nnpm run start:devtools\n. Oh, you are using windows? I don't know how it works there, sorry. It could be that the command with the env variable doesn't work the same...\n. Thanks!! (I'm not a native german speaker) ;)\n. Hey, sorry for the late answer.\nWell, to be honest I didn't do any IE compatibility support. Some problems are definitely related to the lack of IE support of ES6 features  (e.g.: class inheritance, static properties, ...).\nFor now I don't have any plans on providing IE support, definitely not < IE10 anyway. \nIf you do need to support that, I recommend for starters not to use classes and static properties, and use the stable stage features of babel.\nYou can also see here the current state of ES6 compatible features. https://kangax.github.io/compat-table/es6/\n. The i18n files are js files, not json ;)\nAnd yes, if you want to import json files you need a json loader for webpack.\nHope this helps you :)\n. Make sure you have an index.js in your i18n folder which exports the single language files. Then import * from './i18n' should work.\nhttps://github.com/emmenko/redux-react-router-async-example/blob/babel-6/lib/i18n/index.js\n. @juanda99 basically it's how @revolunet said ;)\n\nI can't get the meaning of actionHandlers, where is it from?\n\nTo explain it a bit more, reducers are functions that return a (new) state given some actions. Usually you probably do that with a switch case by checking the action.type. But you can also use a simple hash map with the action type as the key. This is what actionHandlers are and createReducer does (it's function composition).\nAs for the name \"actionHandlers\", as it implies it handles actions :)\n\nNo action creators?\n\nOn the other hand, action creators are functions that will eventually trigger an action, which will be then handled by the reducers.\n\nWhat's the meaning of the underscore parameter _?\n\nIt's meant to be a placeholder since the argument it's not used in the related case, as you are interested in the second argument. But this is rather a personal choice, if it's less confusing to you simply declare the arguments with names as usual.\nHope this helps you further ;)\n. Well, react components are basically functions that you call with some props and you get something back. So when the component renders, it doesn't know anything about data fetching and that it needs to \"wait for something\". This means you always have to rely on the data that you get via props.\nIn your case yes, you can check this.props.data and not render the child component. Then when you fetch the data and the state is updated, the component will re-render with the new props.\nDoes that help you? :)\n. :+1:\n. Hmm, not sure. I see you are using windows and node 5 + npm 3. Haven't tested with those yet.\nIf you can, could you try it with node 0.12 + npm 2.14 ? Just to be sure it works on windows. I'll try with a different version of node.\n. Hey, glad that helps ;)\nFirst of all I think we need to clarify the \"traditional store\" meaning. If you mean a store a-la Flux, well you don't need / have those in Redux.\nIn Redux you have basically a state object for the entire application. You can consider this as your \"store\". Whenever you dispatch an action, the reducer functions that you have mapped for each action will return a \"new state\" object with the related changes. You don't mutate anything in Redux.\nIf you haven't I would really recommend to really through all of the Redux documentation, it's worth it!\nhttp://rackt.org/redux/index.html\nIn this app I have a 2 state objects: application and github. \nhttps://github.com/emmenko/redux-react-router-async-example/blob/master/lib/reducers/index.js\nThe Redux state (or store) will then be something like { application: {...}, github: {...} }\nThe application state object will have then a shape described here\nhttps://github.com/emmenko/redux-react-router-async-example/blob/master/lib/reducers/application.js#L4-L14\nYou see that there is a locale key, which gets updated when I dispatch the LOCALE_SWITCHED action.\nIn this example I'm using localStorage to persist the application state so that when I reload the page, the application starts with my previous state.\nI hope this helps you a bit further ;)\n. Thx :)\n. Yes, I have another simple script to read the translated .xliff file and outputs a JSON as key-value.\n``` js\n'use strict'\nconst fs = require('fs')\nconst xml2js = require('xml2js')\nconst parseString = xml2js.parseString\nconst chunks = []\nconst hashMap = {}\nprocess.stdin.on('data', chunk => chunks.push(chunk))\nprocess.stdin.on('end', () => {\n  const str = Buffer.concat(chunks).toString()\nparseString(str, (error, result) => {\n    if (error) throw error\nresult.xliff.file[0].unit.forEach(unit => {\n  hashMap[unit.$.id] = unit.segment[0].target[0]\n})\n\nprocess.stdout.write(JSON.stringify(hashMap, null, 2) + '\\n')\n\n})\n})\n```\nExample:\n``` xml\n\n\n<unit id=\"welcome\">\n  <notes><note>A welcome message.</note></notes>\n  <segment state=\"translated\">\n    <source><![CDATA[Welcome]]></source>\n    <target><![CDATA[Wilkommen]]></target>\n  </segment>\n</unit>\n\n<unit id=\"login\">\n  <notes><note>The label for the login button</note></notes>\n  <segment state=\"translated\">\n    <source><![CDATA[Login]]></source>\n    <target><![CDATA[Einloggen]]></target>\n  </segment>\n</unit>\n\n\n\n```\nbash\n$ node scripts/XliffToJSON.js < de.xliff\n{\n  \"welcome\": \"Wilkommen\",\n  \"login\": \"Einloggen\"\n}\nThen just copy / paste it into your <lang>.js file (or improve the script to write directly to a file ;) )\n. The only concern I have is relying on internal library structure. I would generally be careful, especially since examples should try to show good practices.\n@gaearon what do you think?\n. Space before the bracket Component {\n. ",
    "gaearon": "Two things were missing:\n- react-hot inside loaders to actually handle hot reloading\n- I moved history creating to index.js so it's only created once\n. Thanks!\n. I agree we don't need Immutable in this example.\n. js\nmodule.hot.accept('./i18n', () => {\n  let i18n = require('./i18n');\n  // do something with the new version to re-render\n});\n. You don\u2019t need either, why not just use React Router directly?\n. (I wouldn\u2019t suggest redux-router at all, and you only want react-router-redux if you want DevTools support.)\n. > I was waffling for a while because of this caveat regarding router state in mapStateToProps (we have components deep in the tree that need to access location state). But I figure I can still use withRouter in that context and stop worrying about it.\nExactly.\n. This should be done outside render. It's fine to place this before the Root definition.\n. I don't have a strong opinion here. We're going to slightly tweak API before 1.0 anyway.\n. Leftover?\n. ",
    "timdoes": "Hi thanks for the response. I am curious if you know a quick fix for deploying to Heroku (or a resource that would help). If not, please do not spend any time on this :)\nJust in case, here are the example site and logs.\nhttps://starter-redux.herokuapp.com/\nstarter-redux-react-router-async(master) > heroku logs --tail\n2015-07-06T18:31:17.614201+00:00 app[web.1]: npm ERR! \n2015-07-06T18:31:17.614050+00:00 app[web.1]: npm ERR! Exit status 1\n2015-07-06T18:31:17.614352+00:00 app[web.1]: npm ERR! Failed at the redux-react-router-async-example@0.0.1 start script 'npm run build && node server.js'.\n2015-07-06T18:31:17.614740+00:00 app[web.1]: npm ERR! This is most likely a problem with the redux-react-router-async-example package,\n2015-07-06T18:31:17.614876+00:00 app[web.1]: npm ERR! not with npm itself.\n2015-07-06T18:31:17.615310+00:00 app[web.1]: npm ERR! You can get their info via:\n2015-07-06T18:31:17.615001+00:00 app[web.1]: npm ERR! Tell the author that this fails on your system:\n2015-07-06T18:31:17.615181+00:00 app[web.1]: npm ERR!     npm run build && node server.js\n2015-07-06T18:31:17.615451+00:00 app[web.1]: npm ERR!     npm owner ls redux-react-router-async-example\n2015-07-06T18:31:17.618365+00:00 app[web.1]: \n2015-07-06T18:31:17.615594+00:00 app[web.1]: npm ERR! There is likely additional logging output above.\n2015-07-06T18:31:18.380538+00:00 heroku[web.1]: State changed from starting to crashed\n2015-07-06T18:31:18.381806+00:00 heroku[web.1]: State changed from crashed to starting\n2015-07-06T18:31:18.366789+00:00 heroku[web.1]: Process exited with status 1\n2015-07-06T18:31:21.400577+00:00 heroku[web.1]: Starting process with command `npm start`\n2015-07-06T18:31:23.336414+00:00 app[web.1]: Detected 512 MB available memory, 512 MB limit per process (WEB_MEMORY)\n2015-07-06T18:31:23.336490+00:00 app[web.1]: Recommending WEB_CONCURRENCY=1\n2015-07-06T18:31:24.058506+00:00 app[web.1]: \n2015-07-06T18:31:24.058515+00:00 app[web.1]: \n2015-07-06T18:31:24.058511+00:00 app[web.1]: > redux-react-router-async-example@0.0.1 start /app\n2015-07-06T18:31:24.058513+00:00 app[web.1]: > npm run build && node server.js\n2015-07-06T18:31:24.833193+00:00 app[web.1]: > redux-react-router-async-example@0.0.1 build /app\n2015-07-06T18:31:24.833197+00:00 app[web.1]: > npm run clean && npm run lint && webpack\n2015-07-06T18:31:24.833198+00:00 app[web.1]: \n2015-07-06T18:31:24.833185+00:00 app[web.1]: \n2015-07-06T18:31:25.892303+00:00 app[web.1]: \n2015-07-06T18:31:25.892308+00:00 app[web.1]: > redux-react-router-async-example@0.0.1 clean /app\n2015-07-06T18:31:25.892311+00:00 app[web.1]: \n2015-07-06T18:31:25.892310+00:00 app[web.1]: > rm -rf dist\n2015-07-06T18:31:26.833574+00:00 app[web.1]: \n2015-07-06T18:31:26.839849+00:00 app[web.1]: npm ERR! node v0.12.6\n2015-07-06T18:31:26.839618+00:00 app[web.1]: npm ERR! argv \"/app/.heroku/node/bin/node\" \"/app/.heroku/node/bin/npm\" \"run\" \"lint\"\n2015-07-06T18:31:26.840349+00:00 app[web.1]: npm ERR! npm  v2.11.2\n2015-07-06T18:31:26.803715+00:00 app[web.1]: \n2015-07-06T18:31:26.841049+00:00 app[web.1]: npm ERR! errno ENOENT\n2015-07-06T18:31:26.803719+00:00 app[web.1]: > redux-react-router-async-example@0.0.1 lint /app\n2015-07-06T18:31:26.803721+00:00 app[web.1]: > eslint lib\n2015-07-06T18:31:26.873405+00:00 app[web.1]: npm ERR! Linux 3.13.0-49-generic\n2015-07-06T18:31:26.840664+00:00 app[web.1]: npm ERR! file sh\n2015-07-06T18:31:26.842275+00:00 app[web.1]: npm ERR! Failed at the redux-react-router-async-example@0.0.1 lint script 'eslint lib'.\n2015-07-06T18:31:26.803723+00:00 app[web.1]: \n2015-07-06T18:31:26.842467+00:00 app[web.1]: npm ERR! This is most likely a problem with the redux-react-router-async-example package,\n2015-07-06T18:31:26.839076+00:00 app[web.1]: npm ERR! Linux 3.13.0-49-generic\n2015-07-06T18:31:26.825949+00:00 app[web.1]: sh: 1: eslint: not found\n2015-07-06T18:31:26.841641+00:00 app[web.1]: npm ERR! redux-react-router-async-example@0.0.1 lint: `eslint lib`\n2015-07-06T18:31:26.841778+00:00 app[web.1]: npm ERR! spawn ENOENT\n2015-07-06T18:31:26.843262+00:00 app[web.1]: npm ERR!     npm owner ls redux-react-router-async-example\n2015-07-06T18:31:26.840847+00:00 app[web.1]: npm ERR! code ELIFECYCLE\n2015-07-06T18:31:26.841254+00:00 app[web.1]: npm ERR! syscall spawn\n2015-07-06T18:31:26.874408+00:00 app[web.1]: npm ERR! node v0.12.6\n2015-07-06T18:31:26.875376+00:00 app[web.1]: npm ERR! \n2015-07-06T18:31:26.903870+00:00 app[web.1]: npm ERR! argv \"/app/.heroku/node/bin/node\" \"/app/.heroku/node/bin/npm\" \"start\"\n2015-07-06T18:31:26.842009+00:00 app[web.1]: npm ERR! \n2015-07-06T18:31:26.846584+00:00 app[web.1]: \n2015-07-06T18:31:26.874952+00:00 app[web.1]: npm ERR! redux-react-router-async-example@0.0.1 build: `npm run clean && npm run lint && webpack`\n2015-07-06T18:31:26.904878+00:00 app[web.1]: npm ERR! code ELIFECYCLE\n2015-07-06T18:31:26.874774+00:00 app[web.1]: npm ERR! code ELIFECYCLE\n2015-07-06T18:31:26.875640+00:00 app[web.1]: npm ERR! Failed at the redux-react-router-async-example@0.0.1 build script 'npm run clean && npm run lint && webpack'.\n2015-07-06T18:31:26.897930+00:00 app[web.1]: \n2015-07-06T18:31:26.874597+00:00 app[web.1]: npm ERR! npm  v2.11.2\n2015-07-06T18:31:26.875096+00:00 app[web.1]: npm ERR! Exit status 1\n2015-07-06T18:31:26.881296+00:00 app[web.1]: npm ERR!     /app/npm-debug.log\n2015-07-06T18:31:26.842640+00:00 app[web.1]: npm ERR! not with npm itself.\n2015-07-06T18:31:26.842793+00:00 app[web.1]: npm ERR! Tell the author that this fails on your system:\n2015-07-06T18:31:26.843440+00:00 app[web.1]: npm ERR! There is likely additional logging output above.\n2015-07-06T18:31:26.876503+00:00 app[web.1]: npm ERR! not with npm itself.\n2015-07-06T18:31:26.842922+00:00 app[web.1]: npm ERR!     eslint lib\n2015-07-06T18:31:26.843096+00:00 app[web.1]: npm ERR! You can get their info via:\n2015-07-06T18:31:26.846850+00:00 app[web.1]: npm ERR! Please include the following file with any support request:\n2015-07-06T18:31:26.880900+00:00 app[web.1]: \n2015-07-06T18:31:26.876062+00:00 app[web.1]: npm ERR! This is most likely a problem with the redux-react-router-async-example package,\n2015-07-06T18:31:26.905976+00:00 app[web.1]: npm ERR! Tell the author that this fails on your system:\n2015-07-06T18:31:26.906316+00:00 app[web.1]: npm ERR! You can get their info via:\n2015-07-06T18:31:26.881169+00:00 app[web.1]: npm ERR! Please include the following file with any support request:\n2015-07-06T18:31:26.904578+00:00 app[web.1]: npm ERR! npm  v2.11.2\n2015-07-06T18:31:26.906450+00:00 app[web.1]: npm ERR!     npm owner ls redux-react-router-async-example\n2015-07-06T18:31:26.904127+00:00 app[web.1]: npm ERR! node v0.12.6\n2015-07-06T18:31:26.905193+00:00 app[web.1]: npm ERR! Exit status 1\n2015-07-06T18:31:26.905360+00:00 app[web.1]: npm ERR! \n2015-07-06T18:31:26.905509+00:00 app[web.1]: npm ERR! Failed at the redux-react-router-async-example@0.0.1 start script 'npm run build && node server.js'.\n2015-07-06T18:31:26.905836+00:00 app[web.1]: npm ERR! not with npm itself.\n2015-07-06T18:31:26.846982+00:00 app[web.1]: npm ERR!     /app/npm-debug.log\n2015-07-06T18:31:26.876792+00:00 app[web.1]: npm ERR! Tell the author that this fails on your system:\n2015-07-06T18:31:26.909617+00:00 app[web.1]: \n2015-07-06T18:31:26.867835+00:00 app[web.1]: \n2015-07-06T18:31:26.903321+00:00 app[web.1]: npm ERR! Linux 3.13.0-49-generic\n2015-07-06T18:31:26.877201+00:00 app[web.1]: npm ERR! You can get their info via:\n2015-07-06T18:31:26.910151+00:00 app[web.1]: npm ERR!     /app/npm-debug.log\n2015-07-06T18:31:26.905699+00:00 app[web.1]: npm ERR! This is most likely a problem with the redux-react-router-async-example package,\n2015-07-06T18:31:26.906183+00:00 app[web.1]: npm ERR!     npm run build && node server.js\n2015-07-06T18:31:26.877471+00:00 app[web.1]: npm ERR! There is likely additional logging output above.\n2015-07-06T18:31:26.905055+00:00 app[web.1]: npm ERR! redux-react-router-async-example@0.0.1 start: `npm run build && node server.js`\n2015-07-06T18:31:26.906594+00:00 app[web.1]: npm ERR! There is likely additional logging output above.\n2015-07-06T18:31:26.873921+00:00 app[web.1]: npm ERR! argv \"/app/.heroku/node/bin/node\" \"/app/.heroku/node/bin/npm\" \"run\" \"build\"\n2015-07-06T18:31:26.876971+00:00 app[web.1]: npm ERR!     npm run clean && npm run lint && webpack\n2015-07-06T18:31:26.877298+00:00 app[web.1]: npm ERR!     npm owner ls redux-react-router-async-example\n2015-07-06T18:31:26.910002+00:00 app[web.1]: npm ERR! Please include the following file with any support request:\n2015-07-06T18:31:27.720057+00:00 heroku[web.1]: State changed from starting to crashed\n2015-07-06T18:31:27.709584+00:00 heroku[web.1]: Process exited with status 1\n2015-07-06T18:31:41.605450+00:00 heroku[router]: at=error code=H10 desc=\"App crashed\" method=GET path=\"/\" host=starter-redux.herokuapp.com request_id=a76c7b37-85f6-45fb-945f-b91e801b1688 fwd=\"68.224.233.116\" dyno= connect= service= status=503 bytes=\n2015-07-06T18:31:41.898377+00:00 heroku[router]: at=error code=H10 desc=\"App crashed\" method=GET path=\"/favicon.ico\" host=starter-redux.herokuapp.com request_id=6683582d-3050-4f86-9d27-6d9bb0df9bf7 fwd=\"68.224.233.116\" dyno= connect= service= status=503 bytes=\n. Heroku just seems like a great place to test server-side deployment and metrics for free/cheap.\nnpm start is there free dyno so I can just chain my scripts to that command. I will mess with it for a bit and will post a solution once I find it.\nDo you have a recommendation other than Heroku?\n. I ended up taking your advice and serving to a static http server with Digital Ocean instead of deploying to Heroku. Thank you for this boilerplate as well as the help.\n. ",
    "ganarajpr": ":+1: \nHappy to help with this. Once I figure out the css-next syntax :)\n. ",
    "catamphetamine": "@everyone\nFYI https://github.com/halt-hammerzeit/react-styling\n. Ok, now I get it\n. ",
    "mydearxym": "@emmenko  writing  inline styles is too strange , consider:  css-module\n. thanks @emmenko \ni just try to make my project simple and small ..\nbut when i replace all the defineMessages with plain text and change my Root.js parts like this\n``` javascript\n  // const rootChildren = [\n  //   \n  //     {renderRoutes()}\n  //   \n  // ]\nconst rootChildren = [\n    \n      {renderRoutes()}\n    \n  ]\n```\ni still get this error in my browser: \n`` javascript\n[React Intl] Could not find requiredintlobject.IntlProvider` needs to exist in the component ancestry. --------  utils.js?79e7:69 \nUncaught TypeError: Cannot read property 'formatMessage' of undefined   ----- message.js?2bc1\n```\n. sorry i missed a  file , thinks for the hint @emmenko \n. @emmenko  you are welcome\n. @emmenko   thanks for reply , helps me a lot !\n. ",
    "keyz": "My pleasure!\n. Hi @emmenko and @gaearon,\nThanks for reviewing this! It makes sense to not adding Immutable.js to the example. Please check the latest commit.\n. Upgraded to 1.0.0-rc. Thanks for your work, @gaearon!\n. fixed. also removed react-pure-render.\n. ",
    "mjackson": "Thanks for the pointers @emmenko! It looks like @acdlite is playing around with our 1.0 API over at https://github.com/acdlite/redux-react-router, so I'm going to follow up on Redux integration there. Again, thanks for your work on this! I hope we can get the integration working really well soon :)\n. ",
    "cissourab": "Please share if any one implemented isomorphic/universal sample using this application.\n. ",
    "jonaswindey": "Any news on this, emmenko?\n. I'm adding it to my project right now. Will keep you updated or propose a pull request.\n. ",
    "calesce": "https://api.github.com/repos/emmenko/redux-react-router-async-example\nNotice how \"stargazers_count\" and \"watchers_count\", then \"subscribers_count\" at the bottom. I'll need to dig into why the other repos didn't have that property.\n. yeah good idea, there's more consistency that way.\n. ",
    "jmcrthrs": "\nyou want to fetch the new user every time the url param changes.\n\nI've just added Redux to my application and moved my data fetching logic from componentDidMount/componentWillReceiveProps to a Redux action.  I've been researching the best to dispatch actions when the URL updates from navigation/someone deep linking. \nFirst I used react-router-redux to listen to history changes, and then dispatch actions based on the URL using a switch.\nThis seems to work, and I really like that all data updates live outside of the react components. This way the components are never required to initiate data fetching; it's all handled by Redux. This feels like a good separation of concern. My view layer doesn't have to worry about dispatching anything when the URL changes.\nAfter reading that react-router-redux was only intended to ensure URL updates are included in the Redux store for Time Travel via DevTools, I decided to do some more research.\nThis is probably my favourite solution so far (storing URL in a Redux store and observing changes using RxJS): \nhttps://github.com/reactjs/redux/issues/227#issuecomment-119237073\nI'm interested if you would still use your fetchOnUpdate HOC solution today, or have you found any alternative solutions to this problem that you prefer?\n. ",
    "djindjic": "thanks\n. ",
    "vincent-dm": "My bad... I removed the :: when adopting your code to my ESLint standards, as it was marked as an error. Wasn't aware that I caused the problem this way.\nAny reason why you don't use the connect() method to bind store and router when initializing the Application component? (as in the Redux todo-example).\nThanks for the great skeleton project by the way!\n. I'm very new to Redux/React, so it is probably something I'm missing. But I am trying to reconcile the differences between your app and the examples on the Redux 1.0 documentation.\nIn your Login component the store and router are part of this.context.\nIn the Redux todo-example, they are bound to this.props. (See containers/App.js at http://gaearon.github.io/redux/docs/basics/ExampleTodoList.html)\n. Also, any reason why you use a constructor to bind this in lib/components/github/Explore.js and not the :: syntax?\nI understand that this branch is not really published and it's logical that there are inconsistencies. But as a beginner it is hard to see which variations are due to \"work in progress\" and which ones have an underlying reason...\n. great; looking forward to it!\n. ",
    "seethroughtrees": "np.  thanks for the boilerplate!\n. ",
    "wwayne": "Ok, I think I get you : )\nFor those who also unclear about what { dispatch() {} } is, this is an ES6 feature:\n{ dispatch() {} } = { dispatch: function() {} } \nAnyway, Thanks :+1: \n. ",
    "eyala-stratoscale": "I issued PR for that  : \nhttps://github.com/emmenko/redux-react-router-async-example/pull/35\n. I'm looking through v0.14 docs, couldn't find anything regarding it.\nWhat should this line be instead of :  {renderRoutes.bind(null, props.history)}  ?\n. Updated, have a look\n. Hey,\nWhen I checked it yesterday it seemed ok, but I'm quite new to this and\ndon't know your code.\nIt's better that you have a look when you have time.\nOn Thu, Oct 15, 2015 at 3:37 PM, Nicola Molinari notifications@github.com\nwrote:\n\n[image: :+1:]\nCan you confirm that everything works fine? Then I can merge :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/emmenko/redux-react-router-async-example/pull/35#issuecomment-148372757\n.\n. fixed\n\nOn Thu, Oct 15, 2015 at 3:45 PM, Nicola Molinari notifications@github.com\nwrote:\n\nFix the lint, then it's good to merge (just tested it locally).\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/emmenko/redux-react-router-async-example/pull/35#issuecomment-148374373\n.\n. you welcome, thanks for the repo\n. \n",
    "jagare": "Thank you for an awesome example and a rapid merge!\n. Prego :-)\n. ",
    "shalomeir": "I have to fix to npm start this example program.\n. @emmenko I got it. This example is very helpful for our project. I'm very appreciated for sharing this program. Also I'll wait for your implementation about this. Thanks!\n. ",
    "irae": "Thanks for the fix and inside information on inner workings\n. React Router was updated and shipped 2.0 this week. I think this project might be outdated. Apart from that, the Router integration was missing from the Redux official documentation. Redux compatibility was one of the goals of React Router update, as stated on the changelog, so I believe there might been waiting for this.\nI am glad this project was useful for @PrimozRome, but the reason this is all overwhelming is precisely why, IMHO, it's better to have more minimal examples out there and this one clearly documented as a full project boilerplate. \n@PrimozRome,  you are migrating from PHP to NodeJS and React precisely at a point that the whole Javascript/Node/React/Ember community are talking about \"build tools fatigue\", and you can get a gist of the discussion here. I highly recommend you to start small. I have a fairly good experience in bootstrapping this kind of environment, but the truth is: You only need it when you need it. I suggest, that you follow the following path:\n1. Familiarize yourself with Node and NPM, only use it for server, go with the lowest denominator Javascript features, pick the browser with worst Javascript support you are required to cover and that's the baseline. Don't jump on the ES6/7/2015/2016 saga right away. It is not needed, it is an improvement for whoever is already familiar with everything.\n2. Use React and other libraries as a global on front-end, go without Flux/Redux if you think that's challenging, roll your own stuff and you will be fine.\n3. Use a Makefile if you are familiar with that to concatenate your files and minify it using whatever command line tool you already know. If you don't know Makefiles learn Grunt or Gulp instead.\n4. When you have everything rocking, feeling good, safe about the above steps, choose one of the following and learn: Transpiring code with Babel, browser packaging (browserify, webpack, rollup), Flux/Redux and keep only once you get some of those start following JS news and bleeding edge stuff.\n. ",
    "PrimozRome": "I am about to re-write a large scale \"admin\" app with React/Redux. I am now on the learning curve on how to structure the whole app, which development tools to use and how to setup the entire workflow. It's a very mind-blobing process if you are new to this React/Redux thing. I used to develop \"standard\" PHP web application for about 15 years and now switching to this bandwagon.\nI found your project and I think it's the most complete resource from where to begin from. I have tried many other starter packages and boilerplates and as you mention \"counter\" and \"fuel calculator\" apps do not help me understand much on how to structure a full blown SPA application. I will learn from you and I am greatly appreciate for putting this together.\nI do wish there was a little better documentation for everything as currently I don't even know what is what and where the application code execution \"starts\". But I can understand how much time needs to be put into this... Still very glad I found this, will make my life much easier.\nAlso what I would suggest for future versions is to include some tools for better development workflow. I found this React-slingshot boilerplate a good example of nice modern workflow https://github.com/coryhouse/react-slingshot. It uses Browsersync and react-transform-hmr for hot reloading and lightweight webserver. Both are very useful development tools. \n. @emmenko thanks! I am sure I will have plenty of questions :), but first I need to read plenty of docs before I start asking some questions that make sense :). \n. @irae thank you for your suggestion. I think it makes a lot of sense what you said and the steps you have suggested. I will take that for granted. I have read that blog post on Medium - had a good lough and I think the guy is point on. I tried numerous starter packages and since I am new to all this ecosystem it is a huge mind-f**k to me. My head literally hurts from all the tools, modules, packages, configurations, ES6 that these starter projects use. It's very hard to get started.\nOur app is a large scale enterprise app with a big relational database behind. It is made mainly with PHP and jQuery and was developed for the need of our company business process. We get very nice feedbacks from our partners/suppliers/friends and also a lot of \"we need this\" requests for this app. We saw opportunity here and we are now making a spinoff company which will make product out of this. I am the product/technical manager for development and I am currently making design decisions.\nApp will not be rewritten in NodeJS. PHP backend will stay (Laravel) but will be rewritten to function like a  restful API. So at list most of the backend business logic, models and stuff will stay the same and will not needed to be rewritten. \nThe front-end of app is my biggest concern. We want to rewrite the front-end and make SPA application that will communicate with our backend API written in PHP. First I was thinking Angular but there is just to much of code needed to be written in Angular (controller, models, views, directives, ...) and things get messy quickly. I was looking at Angular 2 as well but I don't think it's ready yet so I left that behind as well. The strong point of Angular is that it gives you clear direction on how to write SPA application.\nThen I jumped on this React bandwagon since it gets a lot of attention from development community recently but it is really really hard because literally I don't know how to setup a project, what tools I need and what is the right way to go! That's why I find this starter package useful. It literally has the elements I need - authentication, authorisation, pages, backend data calls. So I am thinking this might help me figure out how to rewrite my front-end SPA. I am now looking at the code for a day but still haven't figure out what's happening and most importantly why is something made like it is. I need a lot of reading and teaching.\nI am also reviewing VueJS which I like a lot from the first look. Looks a lot easier to understand then React/Redux, so I still haven't 100% decided yet what to use. I am in evaluation phase now and will probably be here for the next month until I get a good understanding and feeling of what I am doing. \n. ",
    "marekn22": "I should mention that I tried it. I got the following error:\n....\n'DEVTOOLS' is not recognized as an internal or external command,\noperable program or batch file.\nnpm ERR! Windows_NT 6.1.7601\nnpm ERR! argv \"C:\\Program Files\\nodejs\\node.exe\" \"C:\\Program Files\\nodejs\\\nnode_modules\\npm\\bin\\npm-cli.js\" \"run\" \"start:devtools\"\nnpm ERR! node v4.2.2\nnpm ERR! npm  v2.14.7\nnpm ERR! code ELIFECYCLE\nnpm ERR! redux-react-router-async-example@0.0.1 start:devtools: npm run build &\n& DEVTOOLS=true node server.js\nnpm ERR! Exit status 1\n. ",
    "mattdell": "@emmenko did your app.min.js file increase or decrease after this? \nMine seems to have increased by 140kb and I was hoping this upgrade would result in a smaller file size.\n. I've replaced the logger with redux-logger and I no longer see this.\nhttps://github.com/evgenyrodionov/redux-logger\n. @cemarguvanli, just remove the ternary.\nconst createHistory = createBrowserHistory\n. ",
    "juanda99": "Uuups, jsfiles yes. But import * not working as in your code. Maybe is an option in the transpiler... using babel6 \n. It was due to a plugin. I reported the issue, thank you\nhttps://github.com/59naga/babel-plugin-add-module-exports/issues/20\n. ",
    "revolunet": "from my undestanding : action creators trigger action handlers which are \"state reducers\"\nthe underscore is just a placeholder, by default its (state, action)\n. Thanks for crystal-clear explanation :+1:\n. ",
    "sirrodgepodge": "Thank you for your quick response, yes Redux seems very intriguing, your app is helping me understand it quite a bit :)\n. ",
    "sjmas": "I'm wondering the same thing. Some insight would be really helpful. redux-router's README has a comparison sections with some caveats, but ultimately says its advisable to use react-router-redux without really explaining why.\n. ",
    "brettdh": "I'm making the same evaluation right now and having the same difficulty.\nI get the sense (possibly from something @gaearon wrote somewhere) that one big reason is that redux-router is not as well maintained. This twitter search is all I could find right now, though even the message from just that seems pretty clear (if unelaborated). Having the docs described in this issue will be a big help, I hope.\n@yanivefraim the issue you link to actually discusses using redux-react-router, which became redux-router. There was also once redux-simple-router, which became react-router-redux.\n. Thanks @gaearon. I'm assuming you meant react-router-redux above (since that was the link target). This conversation was quite helpful for me in piecing this together. DevTools support does seem quite useful.\nI was waffling for a while because of this caveat regarding router state in mapStateToProps (we have components deep in the tree that need to access location state). But I figure I can still use withRouter in that context and stop worrying about it.\n. ",
    "yanivefraim": "Thanks for the insights!\n@gaearon - I would like to cease the opportunity and ask a (somehow related) question about Redux/React/Router. I already asked it here but did not get a proper answer...\nIn short:\nIt seems really strange to me that Redux state persists across page navigations (even that we are talking about single page application, I don't really see the difference). I think the while navigating to a url application state must be clean. And I can show several examples about problems with keeping state between navigations:\n- User fills a form, and navigating to another page. When he navigates to this page again - do you want him to see the leftovers of what he had before? If not, you will have to take care of it manually.\n- When a user navigates directly to a page inside your app (not from home page, lets say the user directly types a.html/page1/bla in his browser), is it reasonable that he would get a different results then a user navigating to same address  from a different page (because he has different state...)\nI would really love to hear your opinion about this. \nThanks!\nYaniv\n. ",
    "kybarg": "@abhirathore2006 see stargazers section\n. "
}