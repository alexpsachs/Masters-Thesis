{
    "bramp": "Thanks qur2 for your feedback. I'm going to break this into three issues.\n1) Fix Makefile on mac #2\n2) Better documentation for setup / Example page #3\n3) Remove the use of underscore, or adapt it to be lodash compatible. #4\n. WONTFIX. This is a bug in Uglify that has been fixed mbostock/UglifyJS2@f83aca6\n. Thanks for the fix. I've tried out the make process on two of my friends Mac's, and both times it worked without the need for a temporary file. One problem we did encounter is before uglifyjs was installed it left an invalid file on the file system that caused problems when we installed uglifyjs. When we did a make clean the problem disappeared.\nSo, would you be so kind to try again with the existing Makefile, but this time running \"make clean\" before \"make\". I see no good reason why a temp file is needed.\n. Thanks for your help qur2. I'm going to close this as WONTFIX. It's a bug in Ugilify, that has been fixed.\n. Will do, blocked on https://github.com/bramp/js-sequence-diagrams/issues/35\n. I have considered other kinds of diagrams, flow diagrams, ER diagrams. However, the biggest issue I see is that laying the diagram out in a sensible way is harder. With Sequence diagrams it is easy, as each new actor is placed to the right, and each new sequence is placed at the bottom. With a ER diagram, where does each entity go? A automatic placement might not be as nice as a manual placement.\nEither way, this is certainly something I will think about in the future.\n. I was not aware of PlantUML, but I will try and keep my syntax as close to their as possible. At the moment it looks like we are pretty similar.\n. Hey Pangratz, looking good thanks!\nI've never used grunt, so I don't know if this is the best approach or not. But it certainly removes the \"gem install jspp\" dependency that bugged me. Feel free to keep making changes, but I'm going to spend a day or so looking at grunt before I merge.\n. Hey pangratz, so I've checked out your gruntfile, and I'm now wondering if this is better than plain Makefile.\nPros of Grunt:\n- Handles build dependencies\n- Replaces jspp\nCons of Grunt:\n- Gruntfile is 88 lines, vs 38 lines of Makefile\n- No incremental builds (Makefile only runs the tasks it needs to)\nI'm now leaning towards the Makefile, and maybe adapting it to use npm for build deps, and come up with a better replacement for jspp.\n. Thanks for this pull request, but I'm going to close it. The Makefile solution works great, it is clean and simple, and now uses npm for all build dependencies.\n. felixcriv, can you give me a example of the code that isn't working for you?\n. I created a canvg.html test file in af152d76eccd8740c05d7a578968ade29e94dd85 and I am unable to reproduce your issue.\nIf you are still having the issue can you try my test file, and report what browser/os/etc you are on.\n. Alexis, you are correct it should be dashed and open. I will investigate.\nOn Mar 25, 2013 1:06 AM, \"Alexis Daboville\" notifications@github.com\nwrote:\n\nAccording to the grammarhttps://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison,\n-->> is a valid \"operator\". It is rendered as a non-dashed line w/ an\nopen arrow. Though it seems undocumented it should be rendered as a *\ndashed* line w/ an open arrow (according to the grammar once again).\nPretty cool stuff otherwise, well done ;).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/12\n.\n. -->> should draw what you want, but there might be a bug stopping that ATM (#12).\n. Closed as dup of #12 \n. I made some minor updates, and are released with v1.0.3. thanks!\n. Fixed by dc70b70c957682cf9113ef253d25771d053ed5f9\n. Hey,\n\nThe site is using https://github.com/phaistonian/SVGInnerHTML to allow it to export the SVG. The code I use on the site looks like:\n``` javascript\n        download_link.click(function(ev) {\n          var svg = diagram_div.find('svg')[0];\n          var width = parseInt(svg.width.baseVal.value);\n          var height = parseInt(svg.height.baseVal.value);\n          var data = editor.getValue();\n          var xml = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\"><![CDATA[' + data + ']]>' + svg.innerHTML + '';\n      var a = $(this);\n      a.attr(\"download\", \"diagram.svg\"); // TODO I could put title here\n      a.attr(\"href\", \"data:image/svg+xml,\" + encodeURIComponent(xml));\n    });\n\n```\n. Awesome thanks. I used it as the based, and added a few extra things: https://github.com/bramp/js-sequence-diagrams/commit/e35b863c2aeb56bd9ef463a9bea288d87e9ee252\n. Dup of #12, which has already been fixed.\n. Ah, I think the tests have been broken after I moved some files around. I will fix later. FYI the tests only checked the grammar parser.\n. I have begun to add QUnit tests: https://github.com/bramp/js-sequence-diagrams/commit/86fc4b6aa7284a43d1b18140a55b55750b8947cf At the moment the QUnit tests aren't automated, but will be soon.\nThe old \"make test\" wasn't very complete, or using any kind of testing framework. I'll leave this issue open until I automate QUnit, which might depend on pull request https://github.com/bramp/js-sequence-diagrams/pull/10\n. ok all fixed now.\n. At the moment you should be able to do:\nnote left of Alice Line1\\nLine2\\nLine3\nHowever, \nnote left of Alice \nLine1\nLine2\nLine3\nend note\nis also nice. I will look at adding.\n. ``` javascript\nvar diagram = Diagram.parse('...');\nconsole.log(diagram.title);\ndiagram.drawSVG('diagram');\n```\n. I will consider other types of UML diagrams. However, Sequence diagrams are by far the easiest to draw. Did you have a particle type of UML diagram you wanted?\n. Closing as dup of #42 \n. That's certainly a cool feature, but not one I think belongs in this\nproject.\nI'd imagine a new project could be built, that exported a textual diagram\nfrom code, and then my sequence diagram JavaScript could render it.\nOn Apr 2, 2013 8:38 AM, \"Chris Kimpton\" notifications@github.com wrote:\n\nFor example,\nactor.y      = offsetY;\nactor.height = height;\nthis.draw_text_box(actor, actor.name, ACTOR_MARGIN, ACTOR_PADDING, this._font);\nWould produce a sequence diagram roughly equivalent to\nthis->actor: y\nthis->actor: height\nthis->this: draw_text_box\nObviously this means being able to parse multiple languages... Java,\nJavascript, Ruby, C# etc...\nWould be great to be able to copy/paste code into the webpage to see how\nthe interactions look... long term, would be great to have the feature\nbuilt into the IDE, \"view as sequence diagram\"\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/26\n.\n. Yes, it could be possible to plugin a new parser. In fact at the moment you\ncan see it's a two step process:\n\njavascript\nvar diagram = Diagram.parse($this.text());\ndiagram.drawSVG(this, options);\nYou could replace that first step with a custom parser, and as long as it\nmakes a valid Diagram object, we are all good.\nAndrew\nOn 2 April 2013 10:22, Chris Kimpton notifications@github.com wrote:\n\nGood point :)\nWould it be feasible/make sense to plugin in alternate parsers/jison\nconfigs so that it could be done in one step?\nAlthough I can see that probably wont work - so perhaps a way of going\nfrom one parsed language to another - which is what you're suggesting, I\nguess :)\nThanks,\nChris\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/26#issuecomment-15777947\n.\n. The syntax flows what websequencediagrams.com uses and is a lot simpler and intuitive than  Mscgen.\n\nSo for the moment I have no plans to change. Now that's not to say a new parser couldn't be written and reuse the drawing code.\n. So for example:\nA->B: Visit www.google.com\n?\nI could do that quite easily I think.\n. Fixed by https://github.com/bramp/js-sequence-diagrams/commit/d447637553a3f82f9631f7ab133ab0a74b72d224\n. Thanks Dave,\nThis has been fixed by https://github.com/bramp/js-sequence-diagrams/commit/c2a40fc3f43933e209ed51fd8f825745abba4073 . I believe it's a bug in Raphael, as the display bug doesn't occur using the version of Raphael from git.\nEither way, I've changed some of the text displaying code to work around the issue.\nthanks\n. That seems a reasonable request. I couldn't find a list on yUML for what are valid options. I could perhaps assume it is valid CSS, and style it appropriately.\nI will consider this for a future release. thanks\n. Yes, I eventually plan to add more syntax to the language, time permitting.\nPull requests welcome :-)\nOn Apr 17, 2013 6:49 AM, \"rjp\" notifications@github.com wrote:\n\nParticularly alt / opt / loop?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/32\n.\n. Hey de-coy.\n\nGood catch. I'd rather not move the Grammar into the global scope. I had a quick look at the jison source code, and I think I can make it output strict code. Failing that I'll merge your pull.\nthanks\n. I fixed this upstream with https://github.com/zaach/jison-lex/pull/5\nAs soon as a new version of jison is released I'll bump the required version, then the Grammar will pass the \"use strict\" tests.\n. Not accepting, as this was fixed by fixing jison to output strict javascript.\n. I am all for the CSS approach, however, because I'm using Rapha\u00ebl this is not possible. Rapha\u00ebl outputs either SVG or VML (on Internet Explorer). The later doesn't support styling with CSS.\nI think the long term solution is for me to drop Rapha\u00ebl and use a pure SVG solution. I think Rapha\u00ebl was a poor choice on my part as I keep getting blocked by it.\n. I've tried to structure the code to make that possible. For example: HandRapha\u00eblTheme extends Rapha\u00eblTheme which extends BaseTheme.\nYou can create a new SomethingTheme that extends BaseTheme. Then all the drawing code can go into the draw_line/draw_rect methods, and it should just work. I don't think there is any Raphael specific code in the BaseTheme.\n. Awesome, I will look as soon as I can.\nOn May 31, 2013 5:55 PM, \"de-coy\" notifications@github.com wrote:\n\nOK, initial version using svg.js is working on a fork.\nCurrent issues:\n- no line styles\n- no arrow heads\n- no css classes\nBramp can you take a look and see if you agree it's on the right track\nbefore I push on further?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-18773737\n.\n. @de-coy I've had a look at what you are doing, and it's certainly on the right track. I think the game plan here is to finish your svg.js version, and then I'll make js-sequence-diagram support both Raphael and svg.js, but make svg.js the default. Then in future we can support CSS styles, etc.\n. @rahulsom based on a quick look at @de-coy code, I think he is still missing some features. As such I don't think his svg.js version is production ready.\n. Ok since v2.0 we use Snap.svg, which allows styling via CSS! https://github.com/bramp/js-sequence-diagrams#styling\n\nI think this can now be closed.\n. Added https://github.com/cdnjs/cdnjs/pull/1316\n. I've published version 1.0.4 to cdnjs now, it's minified and has the map file. https://github.com/cdnjs/cdnjs/pull/1557\n. It's a bug, and one that is already fixed just not releases.\n. Fixed by 27c7a2b4fcb7b3366b9e371fde18911e08b13054\n. Good suggestion Rick. However, I'd like to keep things simple and the intention of the line to be spelt out. This also allows that syntax to be used for something else in the future.\n. No support at the moment, but I plan to add it!\n. @adrai, that is very cool! I'll add it to a list of related apps in my readme.\n. I've just added a related section in 4c64e16f366367939aa667ab396c02ed1dfef806 \n. This is a feature I plan to add, but I'm closing as this is a duplicate of issue #41 \n. I think your webserver is serving the JS with the wrong charset headers.\nThis is because I'm using an accented character in one of my class names. Either you fix your webserver, change the tag to say charset=... or I stop using funny characters in my class names.\nI'll most likely do the later.\n. This has been fixed in 6912c48502176b99c1b7b44ef9348fd2bd031526\n. Thanks\n. Saving as PNG is a little tricky. As the SVG is generated client side, the browser has to save the SVG as a PNG. A year ago when I last tried, I had mixed success getting this to work. I will revisit.\n. What you are doing seems pretty cool, but I'm not sure where the problem lies. As you point out Adobe seems to be at fault, so perhaps the rasterize.js is at fault in it's conversation from svg to pdf?\n. Did you ever dig deeper into this problem? or find a solution? If not I'm going to close this bug in a few days.\n. Closing, feel free to reopen if the problem persists.\n. Fixed by https://github.com/cdnjs/cdnjs/commit/e3d38d4b6b9bd74f2897696ad61335e282d0f598\n. Sounds a good idea. I will look into getting the project uploaded there.\n. Now available in bower, and sites page updated to explain/demo this.\n. Parallel flows, and other more complex signals will be supported eventually. (loops, if/else, etc).\n. Thanks for reporting the issue. I am unable to reproduce this issue, and I didn't see any red flags in the log file.\nI'm going to close, but feel free to reopen if you continue to experience the issue.\n. @kapilt I don't understand your bug report. Did you file this under the wrong project? This is for js-sequence-diagrams, we have no CLI commands that print out help.\n. getPrototypeOf is coming from jison that generates the grammar. I will file a bug with them, but until then that stackoverflow post lists ways to work around this (with polyfilling)\n. The bug on jison is here: https://github.com/zaach/jison/issues/194\nand according to latest browser share data, IE8 makes up ~16% of the population.\n. Thanks for the report, and thanks for the grammar fix @jonasfj.\nThis was inadvertently fixed in 16f8ec957e0de19eb1a15432697207a0b87fda3b, and I have added a unit test (8f598c6) to ensure this doesn't happen again.\n. Thanks!\n. Will do ASAP! Sorry just haven't had the time to stay ontop of this\nproject.\nOn Apr 9, 2014 7:44 AM, \"V\u00edtor Avelino\" notifications@github.com wrote:\n\n@bramp https://github.com/bramp, can you give an opinion about this? If\nit needs to get better and how can I improve it or if it's not necessary.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/pull/61#issuecomment-39954413\n.\n. After being shamed that it's taken me a year, I've merged this, and made other changes. I'll be pushing a version to bower shortly.\n. Awesome, thanks for the link.\n. I would still like this, but it's not high on my TODO list right now, as I've mostly worked around many of the limitations of Raphael.\n. Ok, decided we should migrate to snapsvg.io, mainly because StefRave@ submitted a pull request with part of the work done: https://github.com/bramp/js-sequence-diagrams/pull/125\n\nI will close this, and track the migration work in #127\n. I think it would indeed be possible. I'll add it as a TODO.\n. Awesome. I was concerned that putting the diagram in a URL would make it\nhard to read/write, but this looks very easy!\nWhat server side tech did you use? Willing to open source? :-)\nOn Apr 19, 2014 9:10 PM, \"Brent Smyth\" notifications@github.com wrote:\n\nSo I got this working, you can see it in action in this screenshot of Mou\nthe markdown editor...\nhttps://www.dropbox.com/s/gbwn32u825qik69/Screenshot%202014-04-19%2020.15.17.png\nI'm going to get this up to http://get-diagrams.com. I think this Jison\napproach would be great for all types of diagrams that help explain a\nconcept. ER diagrams and venn diagrams come to mind.\nI stuck it all up here: https://github.com/freesurface/get-diagrams\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/64#issuecomment-40885112\n.\n. Looks like a few people have made solutions to this bug. Closing as no further action is going to be taken by this project.\n. Thanks for the report. This was fixed by @magnars in 4c06a396a0077ee2ba58b329fa24b6046254aaee. This should be rolled out in the latest version.\n. Sorry for not investigating this earlier. I seem unable to reproduce this issue myself, and I have since updated to the latest version of jquery.\n\nI'm going to close this bug, but feel free to reopen if the issue is persisting.\n. This javascript library is aimed at developers, so the instructions are geared towards them.\nTo run it locally, you'll need to get a HTML page, embed the code listed in the usage section, and then load that page via a local webserver. These are all steps that require some kind of knowledge. If you want, you can use the demo site: https://github.com/bramp/js-sequence-diagrams/tree/gh-pages to help you.\nHowever, you should be able to run this from your laptop, as long as you have a Internet connection, by going to http://bramp.github.io/js-sequence-diagrams/\n. Thanks. This has been resolved via another commit.\n. Thanks PeterDaveHello, I'll close this issue.\n. Thanks @magnars \n. Thanks for the suggestion ComFreek. I had a similar request in #10 asking for a Grunt build file. I would be happy to evaluate Gulp (patches welcome), but it would have to provide value over Make.\nI don't know enough about Gulp, but for me to consider switching to it, it has to be as simple as Make, handle incremental builds, and provide all the other features Make does today. The ability to have a full JS stack + cross platform builds is certainly valuable, but of all the support emails I received, I've never had one about not being able to build on Windows. (That's not to say there isn't someone out there really trying hard to build on Windows :))\nLet me investigate Gulp, and get back to you.\n. This is cool, but I avoided merging as it introduces a new syntax that I'm unsure about supporting in the future. For example, we currently use Raphael that generates VML in IE, and SVG elsewhere. I'd rather change to something like svg.io dropping old IE support. Then we can use the styling native to SVG.\n. In 15b7916fd8d047e8f31f4ed956ebe01a19c54180 I've forced all build tools (jison/jshint/etc) to the latest versions, and fixed whatever needing fixing. Not only did Jison rename grammar to parser, but it now produces non-strict output, which meant I had to do this hack: 0a3c4e0c05c1150bafaa827b8743c90372b1d34a\nSo for now this is resolved. Thanks all for debugging.\n.  Thanks @benweet for this work. Sorry for not reviewing sooner! I've made some changes which has broken this pull request.\nHowever, I have some questions/comments\n1) I've pinned the jison version to the latest now (via the package.json)\n2) I'm unsure of the use case you describe only needing diagram-grammar.js and sequence-diagram.js, and I might have inadvertently broken that as I changed how the final file is built. Could you expand more why you would need this? I consider these files temp files that I don't want checked in.\n3) I would be very happy to include the AMD improvements, but again my changes might have broken this. I personally don't use AMD, but I might investigate and add myself if you no longer have time.\n. Thanks for the report. This has now been fixed.\n. Not right now. You could create the diagram, export as SVG and alter with a\nvector editing software.\nThere is a ticket and a branch where someone added colour and style\ninformation, but I have not merged those changes yet.\nOn Oct 13, 2014 1:26 AM, \"bing yuen\" notifications@github.com wrote:\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/issues/79.\n. Doh!, silly mistake. Thanks for the fix.\n. That is correct. An actor is defined as [^\\->:\\n,]+, that is one or more characters except ->:\\n,. I could try and get creative with parsing, so that : could be somewhere within the name except at the end, however it might just get tricky.\n\nI understand how that would be inconvenient for object diagrams, but right now I don't have a good solution. I'm happy to consider alternatives, but will close this ticket until one is suggested.\n. Any reason?\n. We currently use:\njavascript\n_.all\n _.isFinite\n_.extend\n_.each\n_.defaults\nWe could write our own alternatives, or refactor the code, however I would like to understand this requirement before I do that. If it matters, we also support lodash, in addition to underscore.\nI'm going to close this issue, but feel free to reopen if you are still interested.\n. Thanks for your feedback. For now I'm going to close this, as I'm not going to fix it.\nHowever, incase this comes up again in the future, perhaps and alternative is I could include both Raphael and Underscore directly into sequence-diagram.js. This would mean the user would no longer need to include them as dependencies, but of course at the cost of increasing the sequence-diagram.js file size.\n. Thanks for the report. I have taken steps to correct this. Already the map is correctly reported within the minified file. Next I'm ensuring that cdnjs has a copy of the map (which currently they do not). Once cdnjs updates I'll close this bug.\n. Fixed by https://github.com/cdnjs/cdnjs/commit/e3d38d4b6b9bd74f2897696ad61335e282d0f598\n. # starts a comment, such as\nA->B: something # TODO fill in more information\nI'm not sure what a good solution to this would be. We could escape the #, such as #, or we could say comments must be the first thing on the line. I'm open to other suggestions, but I think limiting comments to being the only thing on the line might be the best solution. Assuming you are ok that actors can't begin with a #?\n. thanks!\n. Hi praveenscience,\nI'm unsure what problem you are having. Are you saying that your code does not correctly render?\nIf you want to add new syntax, you'll have to change a few different things.\nFirstly, you will have to change the grammar.jison to support the new \"branch\" syntax. As part of that you'll have to change the .jison and diagram.js to store that certain signals are now within a branch. I suggest you do something similar to how a Note is added.\nFinally you will have to change the rendering part of the diagram, in sequence-diagram.js. Code similar to what you have may work, but I would suggest using the draw_rect, draw_line, etc methods, as they will handle the styling of the line, etc.\n. Would you be willing to update the grammer tests?\nAndrew\nOn Jan 20, 2015 12:47 AM, \"David N. Welton\" notifications@github.com\nwrote:\n\nFixes #84 https://github.com/bramp/js-sequence-diagrams/issues/84\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/bramp/js-sequence-diagrams/pull/89\nCommit Summary\n- Allow hashes: # in messages. Comments must be on a line by themselves\nFile Changes\n- M src/grammar.jison\n  https://github.com/bramp/js-sequence-diagrams/pull/89/files#diff-0\n  (2)\nPatch Links:\n- https://github.com/bramp/js-sequence-diagrams/pull/89.patch\n- https://github.com/bramp/js-sequence-diagrams/pull/89.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/pull/89.\n. This is a good idea, but I think I would leave this to jQuery to do. Something like this would work:\n\njavascript\n$.get( \"sequence.txt\", function( data ) {\n  $( \".diagram\" ).html( data );\n  $(\".diagram\").sequenceDiagram({theme: 'hand'});\n});\nSince I think this is easy enough outside the framework, I'm going to close as won't fix.\n. Sorry, I don't quite understand the issue. I see the following image:\n\nIt has 7 participants, none of which are duplicated.\n. I'm still not understanding. Would you be able to provide a screenshot? I used http://bramp.github.io/js-sequence-diagrams/ to create that diagram.\n. Thanks for the additional input. For all the examples I see the correct diagram :/ I tried on a Mac Chrome 40, and Linux Chrome, both were correct. @ktsaou which browser/os are you using? I don't have time right now, I will try and investigate later, and try other browsers.\n. awesome, so I think a trim() somewhere will help! If I get a chance I will see where, and create a unit test to ensure this doesn't creep in.\n. So I'm pretty sure this is a Windows newline issue. (I'm surprised no one on Windows has noticed this earlier!)\nThe following test currently fails:\njavascript\n    assertSingleActor(Diagram.parse(\"Participant A\\nNote left of A: Hello\"), \"A\");\n    assertSingleActor(Diagram.parse(\"Participant A\\r\\nNote left of A: Hello\"), \"A\");\n. Thanks, I've since fixed this by defaulting everything to https.\n. Thanks, I fixed the tooling in 1a4454f4b078c77, and I will push a new version to cloudflare shortly.\n. Fixed by https://github.com/cdnjs/cdnjs/commit/e3d38d4b6b9bd74f2897696ad61335e282d0f598\n. Which browser, OS and versions are you using? This just worked correctly for me on Chrome 42 on Mac\n. wjam@, would you be able to provide me a minimal working example of this error? (http://sscce.org/) Thanks.\n. Thanks Will. I will investigate.\nOn 12 May 2015 1:26 am, \"Will May\" notifications@github.com wrote:\n\nI've just created a test case\nhttps://github.com/wjam/js-sequence-diagram-issue-99 and it's as\nminimal as I can make it. I've also noticed that while Chrome doesn't\ndisplay the same error, it does display all of the content squashed up.\nIt appears as though the combination of using Reveal.js with\njs-sequence-diagrams and JQuery plus having three sequence diagrams plus\nhaving three slides after the diagrams causes the bug!\nIf you replace JQuery with standard JavaScript then the problem disappears.\nIf you remove one of the slides after the diagrams then the problem\ndisappears.\nIf you remove one of the diagrams then the problem disappears.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/issues/99#issuecomment-101186470\n.\n. Fixed in 15b7916fd8d047e8f31f4ed956ebe01a19c54180, and noted that other projects had a similar issue: https://github.com/zaach/jison/issues/243\n. oh, but there is one lasting issue, that jison does not produce strict javascript output anymore. I reported the issue here https://github.com/zaach/jison/issues/285 This should not be a problem as our minifier stripes out the non-strict portions.\n. If I understand you correctly, I think you just need to flip your arrows.\n\nInstead of C<-B, write B->C.\n. Would you show me the resulting image with your change. I would like to\nunderstand what you were trying to achieve.\nThanks\n. Hey @suhyunjeon that 2nd diagram doesn't look quite right. The 180 Ringing arrow is going in the wrong direction, acording to your text.\nEither way, I think you just need to rework your text to always have arrows pointing right. For example:\n192.168.12.154->192.168.13.223: INVITE SDP\n192.168.13.223->192.168.13.224: INVITE SDP\n192.168.13.223->192.168.13.224: 180 Ringing\n192.168.13.224->192.168.13.223: 180 Ringing\n192.168.12.154->192.168.13.223: 180 Ringing\n192.168.12.42->192.168.13.223: 200 OK\n192.168.13.223->192.168.13.224: 200 OK\n192.168.13.224->192.168.13.223: 200 OK\nmakes:\n\nwhich has arrows going both left and right in the image.\n. Hey @ctzurcanu you need to sudo gem install jspp, instructions available https://github.com/bramp/js-sequence-diagrams#build-requirements\n. No problem. I've created #113 to alert you (with instructions on how to fix) if jspp is missing.\n. In fact, I found a way to get rid of jspp, and use a standard npm tools. Meaning Make will just install everything it needs. 73b6dc8e392a9562b88f1f4faea285435e481adb\n. in 73b6dc8e392a9562b88f1f4faea285435e481adb we removed the use of jspp.\n. hey @johannes-jansson check out https://github.com/bramp/js-sequence-diagrams/blob/gh-pages/index.html#L202 it shows how the download button works.\nYou should be able to do something similar to fetch the SVG as a string.\nHowever, I'm not sure I would want to add a \"getSVGString\" method to the interface, as I want to be agnostic to it being SVG or whatever.\n. I've been tempted for a while to replace Raphael with svg.js or similar, I just haven't got around to it.\nWhat CSS/jQuery class tags were you thinking about adding? It's worth mentioning that Raphael actually generates VML or SVG, depending on browser, and if it generates VML, than CSS/etc doesn't work.\n. Oh thanks, that's a great bug report.\nI guess there are two issues here,\n1) The hand/simple box drawing is inconsistent with each other,\n2) I most likely assume the note is listed in participant order. A simple\nsort should fix that.\nPatches and tests welcome, or I will look at this sometime at the weekend.\n. All tests pass (but sadly that doesn't check visual layout), and visually checked myself. It looks good.\n. I wrote a simple test, and checked, these are the characters within the hand drawn font:\n\nAdditionally, I replaced the ttf fonts with otf versions, that contained slightly more glyphs. Still not all you requested, but they just aren't in the otf files.\n. Thanks for the issue.\nYou can see on the font's original site: http://www.dafont.com/daniel.font?text=%5C%2F that the bold font (which I'm using) seems to also have \\ wrong :(\nI'll see what I can do about fixing that.\n. I can't reproduce this on Chrome or Firefox. It might have been fixed in 16f8ec957e0de19eb1a15432 Could you confirm it still occurs using the latest checked in code?\n. This has long since been fixed in code, and on the demo site.. Very nice! I quickly scanned the change, but going to wait until the weekend to fully review/pull.\nI fully want to do this migration, but some quick comments/concerns (off the top of my head)\n1) I would like to make the loading of the hand drawn font seamless. So no work for the user other than having the font in the right path.\n2) Is it possible to put your snap.svg work into a separate theme, so Rapheal and snap can coexist? I don't know what my migration plan is, but is it possible to offer both for a while?\n3) I will do a major version bump after I pull this change.\n. I've pulled your code into a new branch, and started hacking on it. There are some inconsitances with the old vs new rendering. I'm also refactoring this so there is a RaphaelTheme and a SnapTheme. It was quite easy to keep both, without duplicating code. This is mainly useful so I can easily compare old to new (to check for regressions). I'll update you shortly.\n. I've pulled this into a new SVG branch: https://github.com/bramp/js-sequence-diagrams/tree/svg and started to heavily refactor to allow both Raphael and Snapsvg at the same (if you so wish). I had to cleanup some of this new snapsvg code to match the existing API correctly (for example, snapsvg assumed the container was a SVG, where previous Raphael accepted div/td/etc). Still a work in progress, but getting there. I will close this PR, and track the work in #127\n. We are on bower, is that not sufficient for your use case? To be honest I\nnever quite understood the need for both npm and bower, as they have a lot\nof overlap.\n. I actually have a package on npm (for a different project). I can\ninvestigate adding this as well.\n. Always happy to receive pull requests. We support underscore or lodash. We\nonly use their functions in a handful of places, but it just made the code\nneater.\n. Sorry, not abandoned, i'm just really really slow at making progress.\n. Very cool. I hope we haven't duplicated much effort, as I had 90% completed\nmy version of the changes in the svg branch.\nAnyway I am travelling right now, but I will take a look ASAP!\nOn 11 May 2016 12:19 a.m., \"Wael Damra\" notifications@github.com wrote:\n\nHere\u2019s my stab at a Snap SVG version. The demo html file works in Chrome\nand Edge where I tested, with the js file and font file in the same\ndirectory, and access to CDNs for SnapSVG/Underscore/jQuery.\nThe js file combines the code from src/diagram.js and\nsrc/sequence-diagram.js. I commented out the JISON parsing part while\nworking on this, demo data is loaded inside the html file.\nSee readme file for change log. I kept the program structure intact,\nRaphael-specific calls can be un-commented to create a combined\nRaphael/Snap SVG version with additional logic if you like. Hope this helps\nwith the progress, nice tool by the way.\ndiagram.zip\nhttps://github.com/bramp/js-sequence-diagrams/files/258263/diagram.zip\n[image: diagram]\nhttps://cloud.githubusercontent.com/assets/19277382/15165293/5769c3ac-16da-11e6-81c9-ba4b3bc73537.png\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/issues/127#issuecomment-218319920\n. wdamra@ Just got back from my travels, and realised you didn't send this as a pull request. Would you be able to do so? It'll make it easier to review and accept any changes.\n. With v2 we now use Snap.svg or Raphael, with Raphael to be phased out.. Would forward and back slashes work?\n\nA->B: Normal\nA/>B: Angled up\nA\\>B: Angled down\nNot very pretty, but the simplest I could think of just now.\n. The svg branch is in a state of brokenness.  I would like all tests to be run with a combination of Raphael and snapsvg. The snap mock was broken, but this looks like a simple fix.\n. Awesome addition. I've added a few suggestions to the changes.. With v2 we now use Snap.svg or Raphael, with Raphael to be phased out.. JSON is its own language, which was designed for a particular purpose. The sequence diagram language was designed to be easy, simple, and human readable for this purpose alone. \nIt has some good properties, for example, even without converting to SVG, it is easy to understand the following diagram:\nA->B: Send a message\nB->A: Responses\nI don't know what a JSON version would like like, but it wouldn't be as human readable.\n. ha awesome. Merged. Thanks.\n. This whitespace issue should no longer be a problem. It was fixed months ago. I'm going to reopen this bug until I double check.\n. Ok this was indeed fixed.. Thanks for the work.\nNot sure why the tests are now broken, Travis was able to build them previously. You should just type 'make', and it fetches all dependencies, builds, checks for lint errors, and runs tests.\nAnyway, not near my computer right now, so I will review shortly.\n. Thanks!, but we are actually \"BSD-2-Clause\", if you can change I'll happily pull the request. https://spdx.org/licenses/BSD-2-Clause\n. Thanks!\n. This looks good. Thanks for the change, and sorry for the delay!\n. Would you add some tests for the new oval syntax.\nAlso if I read this correctly, if I prefix the actor name with o- then it becomes a oval. I wonder if that is the most obvious/sensible way to do this.\n. You branch has conflicts. Can you rebase from master, so I can merge.\nI will look over the code more, but I want to think more about this if this is the right syntax to be using.\n. Thanks for the feedback. I've actually reworked the wobble a little, capping how much it can wobble. Going over text should no longer be a problem:\n\n. This will happen in the 2.0 release. (No ETA on when that will be)\n. Ok this should be possible now that v2 is released.\njavascript\ndiagram.drawSVG(container, {\n  'theme': 'hand', \n  'font-size': 72,\n});. Very cool! Thanks.\n. Very cool. Do you have an example of how simple fails?\n. I don't have access to the plugin on discourse, but I can't reproduce this myself. \n\n I've since released a new version of the library, so if this still occurs after upgrading, then please reopen.. Yes, I am aware and apologise that loading the hand drawn font is terribly slow.  This is a limitation in the Raphael.js library I use for generating the SVG. So that Raphael can maintain it's compatibility with VML (for IE), it includes the font as a vector within the SVG.\nI'm currently working on 2.0 of js-sequence-diagrams[1] that moves to the snap.svg library. This drops the legacy VML support, and allows the SVG to be styled with CSS, and use standard fonts.\n[1] https://github.com/bramp/js-sequence-diagrams/tree/svg\n. ok js-sequence-diagram 2.0 is now out, and the font can be specified via normal CSS.. Sounds good to me. Changing the syntax should be easy as it is covered in\nunit tests (which you should add to).\n. \"@bramp Do you have any preferences when it comes to code style, esp with regard to line length?\" no real preference, but keep it reasonable <80-120 ish.\nHowever, please run make lint as that should catch most of the things I care about.\n. Awesome, a quick glance and things look good! I need to find some time to properly review. However quick comment, 'executionSpecification' seems long, can we just drop the word specification or spec everywhere. I think without it out is still easy to read and understand the code.\n. I'm confused a little at what it means for level to be > 1. Would you show me an example where you mix different levels.\n. Sorry for the delay here. You say \"Lodash 1.8.3 \" but your example shows \"lodash.js/4.13.1/lodash.min.js\". Anyway I now test against Lodash 4.17.x, and after a few fixes ebb8987325d6d49287c8672f9b94aae90b03ca01 it all seems to work. Please wait for a v2.0.2 release.. This was fixed in b4e52445, it just hasn't been released yet....\n. I might not understand your question, but you can do the following:\n``` javascript\nvar text = \"Title: Here is a title\\nA->B: Normal line\";\n//or\nvar text = \"Title: Here is a title\\n\" + \n           \"A->B: Normal line\\n\";\n// or (with ECMAScript 6 - ES6):\nvar text = Title: Here is a title\nA->B: Normal line\n// and then use text\nvar diagram = Diagram.parse(text);\n```\nor if using \n. It works on the site, because the string javascript receives contains a \"\\n\". You should be able to change your example to work:\njavascript\n var d = Diagram.parse(\n   \"Andrew->China: Says Hello\\n\" +\n   \"Note right of China: China thinks\\\\n about it\\n\" +\n   \"China-->Andrew: How are you?\\n\" +\n   \"Andrew->>China: I am good thanks!\"\n  );. Ok, I've rolled out v2.0 based on Snap.svg. I haven't looked to see if that would work purely outside a browser, but I suspect it will (with perhaps some minor changes).. I'm confused what was causing this. I can't reproduce this outside of stackedit. For example, on the demo site: https://bramp.github.io/js-sequence-diagrams/ nothing is transparent by default. \n\n I suspect the issue here is stackedit has made some change to break this. Feel free to reopen if you can provide a sample page to reproduce this issue.. Thanks for the heads up!. Thanks!. Thanks. I've now rolled out support for snap.svg, and deprecated the use of Raphael (in part because they disappeared from the Internet).. Sorry for the slow reply!\nYes, that grammar looks fine to me. Please go ahead and update grammar.jison and add some tests\n(the grammar.ebnf is used for drawing this diagram only)\n. Thanks!. ETOOMANYFEATUREREQUESTS\n1)  You can already place notes over multiple participants, for example:\nA->B: 1\nB->C: 2\nNote over A,C: This will cover lines A, B and C.\nHowever, if you didn't know the order of the participants, I could see how you may not know that B was in the middle of C. So I think it might be far to allow A,B,C and ensure it covers all of them.\n2) Yes opts would be cool, and there is already a feature request for them #160\n3) Sounds a reasonable idea, but right now the generated SVGs are not interactive, but could be. Sounds low priority right now.\nI welcome patches if you feel up to adding any of these features.. Very nice idea. Should we use \"actorVistor\" instead of \"actor0\"? I guess number based has fewer pitfalls.\nI wonder if the CSS nth select would have worked without your change, for example:\n.actor rect:nth-child(1), .actor path:nth-child(1) {\n    fill: #f9f;\n}\nWell either way I'll review your changes shortly.. I have not considered making a VSCODE extension, mainly because I don't use visual studio. However I welcome others contributing one. There have been plugins writing for other tools, such as JIRA and Confluence.. Excellent @andrewdonkin I'll happily accept this! Would you mind resolving the issues that hound bot found.. Nice test, it worked. But I'm sadly going to reject :). I don't have a Windows machine to test on, so I won't be able to investigate. If anyone else is willing to take a look, and propose a solution, that'll be great!. Hopefully you resolved this on your own. If not feel free to reopen.. Looks good to me. Would you drop the changes to the files under dist. Those would be autogenerated from the files in src at the next release.. Thanks qur2 for your feedback. I'm going to break this into three issues.\n1) Fix Makefile on mac #2\n2) Better documentation for setup / Example page #3\n3) Remove the use of underscore, or adapt it to be lodash compatible. #4\n. WONTFIX. This is a bug in Uglify that has been fixed mbostock/UglifyJS2@f83aca6\n. Thanks for the fix. I've tried out the make process on two of my friends Mac's, and both times it worked without the need for a temporary file. One problem we did encounter is before uglifyjs was installed it left an invalid file on the file system that caused problems when we installed uglifyjs. When we did a make clean the problem disappeared.\nSo, would you be so kind to try again with the existing Makefile, but this time running \"make clean\" before \"make\". I see no good reason why a temp file is needed.\n. Thanks for your help qur2. I'm going to close this as WONTFIX. It's a bug in Ugilify, that has been fixed.\n. Will do, blocked on https://github.com/bramp/js-sequence-diagrams/issues/35\n. I have considered other kinds of diagrams, flow diagrams, ER diagrams. However, the biggest issue I see is that laying the diagram out in a sensible way is harder. With Sequence diagrams it is easy, as each new actor is placed to the right, and each new sequence is placed at the bottom. With a ER diagram, where does each entity go? A automatic placement might not be as nice as a manual placement.\nEither way, this is certainly something I will think about in the future.\n. I was not aware of PlantUML, but I will try and keep my syntax as close to their as possible. At the moment it looks like we are pretty similar.\n. Hey Pangratz, looking good thanks!\nI've never used grunt, so I don't know if this is the best approach or not. But it certainly removes the \"gem install jspp\" dependency that bugged me. Feel free to keep making changes, but I'm going to spend a day or so looking at grunt before I merge.\n. Hey pangratz, so I've checked out your gruntfile, and I'm now wondering if this is better than plain Makefile.\nPros of Grunt:\n- Handles build dependencies\n- Replaces jspp\nCons of Grunt:\n- Gruntfile is 88 lines, vs 38 lines of Makefile\n- No incremental builds (Makefile only runs the tasks it needs to)\nI'm now leaning towards the Makefile, and maybe adapting it to use npm for build deps, and come up with a better replacement for jspp.\n. Thanks for this pull request, but I'm going to close it. The Makefile solution works great, it is clean and simple, and now uses npm for all build dependencies.\n. felixcriv, can you give me a example of the code that isn't working for you?\n. I created a canvg.html test file in af152d76eccd8740c05d7a578968ade29e94dd85 and I am unable to reproduce your issue.\nIf you are still having the issue can you try my test file, and report what browser/os/etc you are on.\n. Alexis, you are correct it should be dashed and open. I will investigate.\nOn Mar 25, 2013 1:06 AM, \"Alexis Daboville\" notifications@github.com\nwrote:\n\nAccording to the grammarhttps://github.com/bramp/js-sequence-diagrams/blob/master/src/grammar.jison,\n-->> is a valid \"operator\". It is rendered as a non-dashed line w/ an\nopen arrow. Though it seems undocumented it should be rendered as a *\ndashed* line w/ an open arrow (according to the grammar once again).\nPretty cool stuff otherwise, well done ;).\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/12\n.\n. -->> should draw what you want, but there might be a bug stopping that ATM (#12).\n. Closed as dup of #12 \n. I made some minor updates, and are released with v1.0.3. thanks!\n. Fixed by dc70b70c957682cf9113ef253d25771d053ed5f9\n. Hey,\n\nThe site is using https://github.com/phaistonian/SVGInnerHTML to allow it to export the SVG. The code I use on the site looks like:\n``` javascript\n        download_link.click(function(ev) {\n          var svg = diagram_div.find('svg')[0];\n          var width = parseInt(svg.width.baseVal.value);\n          var height = parseInt(svg.height.baseVal.value);\n          var data = editor.getValue();\n          var xml = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\"><![CDATA[' + data + ']]>' + svg.innerHTML + '';\n      var a = $(this);\n      a.attr(\"download\", \"diagram.svg\"); // TODO I could put title here\n      a.attr(\"href\", \"data:image/svg+xml,\" + encodeURIComponent(xml));\n    });\n\n```\n. Awesome thanks. I used it as the based, and added a few extra things: https://github.com/bramp/js-sequence-diagrams/commit/e35b863c2aeb56bd9ef463a9bea288d87e9ee252\n. Dup of #12, which has already been fixed.\n. Ah, I think the tests have been broken after I moved some files around. I will fix later. FYI the tests only checked the grammar parser.\n. I have begun to add QUnit tests: https://github.com/bramp/js-sequence-diagrams/commit/86fc4b6aa7284a43d1b18140a55b55750b8947cf At the moment the QUnit tests aren't automated, but will be soon.\nThe old \"make test\" wasn't very complete, or using any kind of testing framework. I'll leave this issue open until I automate QUnit, which might depend on pull request https://github.com/bramp/js-sequence-diagrams/pull/10\n. ok all fixed now.\n. At the moment you should be able to do:\nnote left of Alice Line1\\nLine2\\nLine3\nHowever, \nnote left of Alice \nLine1\nLine2\nLine3\nend note\nis also nice. I will look at adding.\n. ``` javascript\nvar diagram = Diagram.parse('...');\nconsole.log(diagram.title);\ndiagram.drawSVG('diagram');\n```\n. I will consider other types of UML diagrams. However, Sequence diagrams are by far the easiest to draw. Did you have a particle type of UML diagram you wanted?\n. Closing as dup of #42 \n. That's certainly a cool feature, but not one I think belongs in this\nproject.\nI'd imagine a new project could be built, that exported a textual diagram\nfrom code, and then my sequence diagram JavaScript could render it.\nOn Apr 2, 2013 8:38 AM, \"Chris Kimpton\" notifications@github.com wrote:\n\nFor example,\nactor.y      = offsetY;\nactor.height = height;\nthis.draw_text_box(actor, actor.name, ACTOR_MARGIN, ACTOR_PADDING, this._font);\nWould produce a sequence diagram roughly equivalent to\nthis->actor: y\nthis->actor: height\nthis->this: draw_text_box\nObviously this means being able to parse multiple languages... Java,\nJavascript, Ruby, C# etc...\nWould be great to be able to copy/paste code into the webpage to see how\nthe interactions look... long term, would be great to have the feature\nbuilt into the IDE, \"view as sequence diagram\"\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/26\n.\n. Yes, it could be possible to plugin a new parser. In fact at the moment you\ncan see it's a two step process:\n\njavascript\nvar diagram = Diagram.parse($this.text());\ndiagram.drawSVG(this, options);\nYou could replace that first step with a custom parser, and as long as it\nmakes a valid Diagram object, we are all good.\nAndrew\nOn 2 April 2013 10:22, Chris Kimpton notifications@github.com wrote:\n\nGood point :)\nWould it be feasible/make sense to plugin in alternate parsers/jison\nconfigs so that it could be done in one step?\nAlthough I can see that probably wont work - so perhaps a way of going\nfrom one parsed language to another - which is what you're suggesting, I\nguess :)\nThanks,\nChris\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/26#issuecomment-15777947\n.\n. The syntax flows what websequencediagrams.com uses and is a lot simpler and intuitive than  Mscgen.\n\nSo for the moment I have no plans to change. Now that's not to say a new parser couldn't be written and reuse the drawing code.\n. So for example:\nA->B: Visit www.google.com\n?\nI could do that quite easily I think.\n. Fixed by https://github.com/bramp/js-sequence-diagrams/commit/d447637553a3f82f9631f7ab133ab0a74b72d224\n. Thanks Dave,\nThis has been fixed by https://github.com/bramp/js-sequence-diagrams/commit/c2a40fc3f43933e209ed51fd8f825745abba4073 . I believe it's a bug in Raphael, as the display bug doesn't occur using the version of Raphael from git.\nEither way, I've changed some of the text displaying code to work around the issue.\nthanks\n. That seems a reasonable request. I couldn't find a list on yUML for what are valid options. I could perhaps assume it is valid CSS, and style it appropriately.\nI will consider this for a future release. thanks\n. Yes, I eventually plan to add more syntax to the language, time permitting.\nPull requests welcome :-)\nOn Apr 17, 2013 6:49 AM, \"rjp\" notifications@github.com wrote:\n\nParticularly alt / opt / loop?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/32\n.\n. Hey de-coy.\n\nGood catch. I'd rather not move the Grammar into the global scope. I had a quick look at the jison source code, and I think I can make it output strict code. Failing that I'll merge your pull.\nthanks\n. I fixed this upstream with https://github.com/zaach/jison-lex/pull/5\nAs soon as a new version of jison is released I'll bump the required version, then the Grammar will pass the \"use strict\" tests.\n. Not accepting, as this was fixed by fixing jison to output strict javascript.\n. I am all for the CSS approach, however, because I'm using Rapha\u00ebl this is not possible. Rapha\u00ebl outputs either SVG or VML (on Internet Explorer). The later doesn't support styling with CSS.\nI think the long term solution is for me to drop Rapha\u00ebl and use a pure SVG solution. I think Rapha\u00ebl was a poor choice on my part as I keep getting blocked by it.\n. I've tried to structure the code to make that possible. For example: HandRapha\u00eblTheme extends Rapha\u00eblTheme which extends BaseTheme.\nYou can create a new SomethingTheme that extends BaseTheme. Then all the drawing code can go into the draw_line/draw_rect methods, and it should just work. I don't think there is any Raphael specific code in the BaseTheme.\n. Awesome, I will look as soon as I can.\nOn May 31, 2013 5:55 PM, \"de-coy\" notifications@github.com wrote:\n\nOK, initial version using svg.js is working on a fork.\nCurrent issues:\n- no line styles\n- no arrow heads\n- no css classes\nBramp can you take a look and see if you agree it's on the right track\nbefore I push on further?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-18773737\n.\n. @de-coy I've had a look at what you are doing, and it's certainly on the right track. I think the game plan here is to finish your svg.js version, and then I'll make js-sequence-diagram support both Raphael and svg.js, but make svg.js the default. Then in future we can support CSS styles, etc.\n. @rahulsom based on a quick look at @de-coy code, I think he is still missing some features. As such I don't think his svg.js version is production ready.\n. Ok since v2.0 we use Snap.svg, which allows styling via CSS! https://github.com/bramp/js-sequence-diagrams#styling\n\nI think this can now be closed.\n. Added https://github.com/cdnjs/cdnjs/pull/1316\n. I've published version 1.0.4 to cdnjs now, it's minified and has the map file. https://github.com/cdnjs/cdnjs/pull/1557\n. It's a bug, and one that is already fixed just not releases.\n. Fixed by 27c7a2b4fcb7b3366b9e371fde18911e08b13054\n. Good suggestion Rick. However, I'd like to keep things simple and the intention of the line to be spelt out. This also allows that syntax to be used for something else in the future.\n. No support at the moment, but I plan to add it!\n. @adrai, that is very cool! I'll add it to a list of related apps in my readme.\n. I've just added a related section in 4c64e16f366367939aa667ab396c02ed1dfef806 \n. This is a feature I plan to add, but I'm closing as this is a duplicate of issue #41 \n. I think your webserver is serving the JS with the wrong charset headers.\nThis is because I'm using an accented character in one of my class names. Either you fix your webserver, change the tag to say charset=... or I stop using funny characters in my class names.\nI'll most likely do the later.\n. This has been fixed in 6912c48502176b99c1b7b44ef9348fd2bd031526\n. Thanks\n. Saving as PNG is a little tricky. As the SVG is generated client side, the browser has to save the SVG as a PNG. A year ago when I last tried, I had mixed success getting this to work. I will revisit.\n. What you are doing seems pretty cool, but I'm not sure where the problem lies. As you point out Adobe seems to be at fault, so perhaps the rasterize.js is at fault in it's conversation from svg to pdf?\n. Did you ever dig deeper into this problem? or find a solution? If not I'm going to close this bug in a few days.\n. Closing, feel free to reopen if the problem persists.\n. Fixed by https://github.com/cdnjs/cdnjs/commit/e3d38d4b6b9bd74f2897696ad61335e282d0f598\n. Sounds a good idea. I will look into getting the project uploaded there.\n. Now available in bower, and sites page updated to explain/demo this.\n. Parallel flows, and other more complex signals will be supported eventually. (loops, if/else, etc).\n. Thanks for reporting the issue. I am unable to reproduce this issue, and I didn't see any red flags in the log file.\nI'm going to close, but feel free to reopen if you continue to experience the issue.\n. @kapilt I don't understand your bug report. Did you file this under the wrong project? This is for js-sequence-diagrams, we have no CLI commands that print out help.\n. getPrototypeOf is coming from jison that generates the grammar. I will file a bug with them, but until then that stackoverflow post lists ways to work around this (with polyfilling)\n. The bug on jison is here: https://github.com/zaach/jison/issues/194\nand according to latest browser share data, IE8 makes up ~16% of the population.\n. Thanks for the report, and thanks for the grammar fix @jonasfj.\nThis was inadvertently fixed in 16f8ec957e0de19eb1a15432697207a0b87fda3b, and I have added a unit test (8f598c6) to ensure this doesn't happen again.\n. Thanks!\n. Will do ASAP! Sorry just haven't had the time to stay ontop of this\nproject.\nOn Apr 9, 2014 7:44 AM, \"V\u00edtor Avelino\" notifications@github.com wrote:\n\n@bramp https://github.com/bramp, can you give an opinion about this? If\nit needs to get better and how can I improve it or if it's not necessary.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/pull/61#issuecomment-39954413\n.\n. After being shamed that it's taken me a year, I've merged this, and made other changes. I'll be pushing a version to bower shortly.\n. Awesome, thanks for the link.\n. I would still like this, but it's not high on my TODO list right now, as I've mostly worked around many of the limitations of Raphael.\n. Ok, decided we should migrate to snapsvg.io, mainly because StefRave@ submitted a pull request with part of the work done: https://github.com/bramp/js-sequence-diagrams/pull/125\n\nI will close this, and track the migration work in #127\n. I think it would indeed be possible. I'll add it as a TODO.\n. Awesome. I was concerned that putting the diagram in a URL would make it\nhard to read/write, but this looks very easy!\nWhat server side tech did you use? Willing to open source? :-)\nOn Apr 19, 2014 9:10 PM, \"Brent Smyth\" notifications@github.com wrote:\n\nSo I got this working, you can see it in action in this screenshot of Mou\nthe markdown editor...\nhttps://www.dropbox.com/s/gbwn32u825qik69/Screenshot%202014-04-19%2020.15.17.png\nI'm going to get this up to http://get-diagrams.com. I think this Jison\napproach would be great for all types of diagrams that help explain a\nconcept. ER diagrams and venn diagrams come to mind.\nI stuck it all up here: https://github.com/freesurface/get-diagrams\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/64#issuecomment-40885112\n.\n. Looks like a few people have made solutions to this bug. Closing as no further action is going to be taken by this project.\n. Thanks for the report. This was fixed by @magnars in 4c06a396a0077ee2ba58b329fa24b6046254aaee. This should be rolled out in the latest version.\n. Sorry for not investigating this earlier. I seem unable to reproduce this issue myself, and I have since updated to the latest version of jquery.\n\nI'm going to close this bug, but feel free to reopen if the issue is persisting.\n. This javascript library is aimed at developers, so the instructions are geared towards them.\nTo run it locally, you'll need to get a HTML page, embed the code listed in the usage section, and then load that page via a local webserver. These are all steps that require some kind of knowledge. If you want, you can use the demo site: https://github.com/bramp/js-sequence-diagrams/tree/gh-pages to help you.\nHowever, you should be able to run this from your laptop, as long as you have a Internet connection, by going to http://bramp.github.io/js-sequence-diagrams/\n. Thanks. This has been resolved via another commit.\n. Thanks PeterDaveHello, I'll close this issue.\n. Thanks @magnars \n. Thanks for the suggestion ComFreek. I had a similar request in #10 asking for a Grunt build file. I would be happy to evaluate Gulp (patches welcome), but it would have to provide value over Make.\nI don't know enough about Gulp, but for me to consider switching to it, it has to be as simple as Make, handle incremental builds, and provide all the other features Make does today. The ability to have a full JS stack + cross platform builds is certainly valuable, but of all the support emails I received, I've never had one about not being able to build on Windows. (That's not to say there isn't someone out there really trying hard to build on Windows :))\nLet me investigate Gulp, and get back to you.\n. This is cool, but I avoided merging as it introduces a new syntax that I'm unsure about supporting in the future. For example, we currently use Raphael that generates VML in IE, and SVG elsewhere. I'd rather change to something like svg.io dropping old IE support. Then we can use the styling native to SVG.\n. In 15b7916fd8d047e8f31f4ed956ebe01a19c54180 I've forced all build tools (jison/jshint/etc) to the latest versions, and fixed whatever needing fixing. Not only did Jison rename grammar to parser, but it now produces non-strict output, which meant I had to do this hack: 0a3c4e0c05c1150bafaa827b8743c90372b1d34a\nSo for now this is resolved. Thanks all for debugging.\n.  Thanks @benweet for this work. Sorry for not reviewing sooner! I've made some changes which has broken this pull request.\nHowever, I have some questions/comments\n1) I've pinned the jison version to the latest now (via the package.json)\n2) I'm unsure of the use case you describe only needing diagram-grammar.js and sequence-diagram.js, and I might have inadvertently broken that as I changed how the final file is built. Could you expand more why you would need this? I consider these files temp files that I don't want checked in.\n3) I would be very happy to include the AMD improvements, but again my changes might have broken this. I personally don't use AMD, but I might investigate and add myself if you no longer have time.\n. Thanks for the report. This has now been fixed.\n. Not right now. You could create the diagram, export as SVG and alter with a\nvector editing software.\nThere is a ticket and a branch where someone added colour and style\ninformation, but I have not merged those changes yet.\nOn Oct 13, 2014 1:26 AM, \"bing yuen\" notifications@github.com wrote:\n\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/issues/79.\n. Doh!, silly mistake. Thanks for the fix.\n. That is correct. An actor is defined as [^\\->:\\n,]+, that is one or more characters except ->:\\n,. I could try and get creative with parsing, so that : could be somewhere within the name except at the end, however it might just get tricky.\n\nI understand how that would be inconvenient for object diagrams, but right now I don't have a good solution. I'm happy to consider alternatives, but will close this ticket until one is suggested.\n. Any reason?\n. We currently use:\njavascript\n_.all\n _.isFinite\n_.extend\n_.each\n_.defaults\nWe could write our own alternatives, or refactor the code, however I would like to understand this requirement before I do that. If it matters, we also support lodash, in addition to underscore.\nI'm going to close this issue, but feel free to reopen if you are still interested.\n. Thanks for your feedback. For now I'm going to close this, as I'm not going to fix it.\nHowever, incase this comes up again in the future, perhaps and alternative is I could include both Raphael and Underscore directly into sequence-diagram.js. This would mean the user would no longer need to include them as dependencies, but of course at the cost of increasing the sequence-diagram.js file size.\n. Thanks for the report. I have taken steps to correct this. Already the map is correctly reported within the minified file. Next I'm ensuring that cdnjs has a copy of the map (which currently they do not). Once cdnjs updates I'll close this bug.\n. Fixed by https://github.com/cdnjs/cdnjs/commit/e3d38d4b6b9bd74f2897696ad61335e282d0f598\n. # starts a comment, such as\nA->B: something # TODO fill in more information\nI'm not sure what a good solution to this would be. We could escape the #, such as #, or we could say comments must be the first thing on the line. I'm open to other suggestions, but I think limiting comments to being the only thing on the line might be the best solution. Assuming you are ok that actors can't begin with a #?\n. thanks!\n. Hi praveenscience,\nI'm unsure what problem you are having. Are you saying that your code does not correctly render?\nIf you want to add new syntax, you'll have to change a few different things.\nFirstly, you will have to change the grammar.jison to support the new \"branch\" syntax. As part of that you'll have to change the .jison and diagram.js to store that certain signals are now within a branch. I suggest you do something similar to how a Note is added.\nFinally you will have to change the rendering part of the diagram, in sequence-diagram.js. Code similar to what you have may work, but I would suggest using the draw_rect, draw_line, etc methods, as they will handle the styling of the line, etc.\n. Would you be willing to update the grammer tests?\nAndrew\nOn Jan 20, 2015 12:47 AM, \"David N. Welton\" notifications@github.com\nwrote:\n\nFixes #84 https://github.com/bramp/js-sequence-diagrams/issues/84\nYou can view, comment on, or merge this pull request online at:\nhttps://github.com/bramp/js-sequence-diagrams/pull/89\nCommit Summary\n- Allow hashes: # in messages. Comments must be on a line by themselves\nFile Changes\n- M src/grammar.jison\n  https://github.com/bramp/js-sequence-diagrams/pull/89/files#diff-0\n  (2)\nPatch Links:\n- https://github.com/bramp/js-sequence-diagrams/pull/89.patch\n- https://github.com/bramp/js-sequence-diagrams/pull/89.diff\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/pull/89.\n. This is a good idea, but I think I would leave this to jQuery to do. Something like this would work:\n\njavascript\n$.get( \"sequence.txt\", function( data ) {\n  $( \".diagram\" ).html( data );\n  $(\".diagram\").sequenceDiagram({theme: 'hand'});\n});\nSince I think this is easy enough outside the framework, I'm going to close as won't fix.\n. Sorry, I don't quite understand the issue. I see the following image:\n\nIt has 7 participants, none of which are duplicated.\n. I'm still not understanding. Would you be able to provide a screenshot? I used http://bramp.github.io/js-sequence-diagrams/ to create that diagram.\n. Thanks for the additional input. For all the examples I see the correct diagram :/ I tried on a Mac Chrome 40, and Linux Chrome, both were correct. @ktsaou which browser/os are you using? I don't have time right now, I will try and investigate later, and try other browsers.\n. awesome, so I think a trim() somewhere will help! If I get a chance I will see where, and create a unit test to ensure this doesn't creep in.\n. So I'm pretty sure this is a Windows newline issue. (I'm surprised no one on Windows has noticed this earlier!)\nThe following test currently fails:\njavascript\n    assertSingleActor(Diagram.parse(\"Participant A\\nNote left of A: Hello\"), \"A\");\n    assertSingleActor(Diagram.parse(\"Participant A\\r\\nNote left of A: Hello\"), \"A\");\n. Thanks, I've since fixed this by defaulting everything to https.\n. Thanks, I fixed the tooling in 1a4454f4b078c77, and I will push a new version to cloudflare shortly.\n. Fixed by https://github.com/cdnjs/cdnjs/commit/e3d38d4b6b9bd74f2897696ad61335e282d0f598\n. Which browser, OS and versions are you using? This just worked correctly for me on Chrome 42 on Mac\n. wjam@, would you be able to provide me a minimal working example of this error? (http://sscce.org/) Thanks.\n. Thanks Will. I will investigate.\nOn 12 May 2015 1:26 am, \"Will May\" notifications@github.com wrote:\n\nI've just created a test case\nhttps://github.com/wjam/js-sequence-diagram-issue-99 and it's as\nminimal as I can make it. I've also noticed that while Chrome doesn't\ndisplay the same error, it does display all of the content squashed up.\nIt appears as though the combination of using Reveal.js with\njs-sequence-diagrams and JQuery plus having three sequence diagrams plus\nhaving three slides after the diagrams causes the bug!\nIf you replace JQuery with standard JavaScript then the problem disappears.\nIf you remove one of the slides after the diagrams then the problem\ndisappears.\nIf you remove one of the diagrams then the problem disappears.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/issues/99#issuecomment-101186470\n.\n. Fixed in 15b7916fd8d047e8f31f4ed956ebe01a19c54180, and noted that other projects had a similar issue: https://github.com/zaach/jison/issues/243\n. oh, but there is one lasting issue, that jison does not produce strict javascript output anymore. I reported the issue here https://github.com/zaach/jison/issues/285 This should not be a problem as our minifier stripes out the non-strict portions.\n. If I understand you correctly, I think you just need to flip your arrows.\n\nInstead of C<-B, write B->C.\n. Would you show me the resulting image with your change. I would like to\nunderstand what you were trying to achieve.\nThanks\n. Hey @suhyunjeon that 2nd diagram doesn't look quite right. The 180 Ringing arrow is going in the wrong direction, acording to your text.\nEither way, I think you just need to rework your text to always have arrows pointing right. For example:\n192.168.12.154->192.168.13.223: INVITE SDP\n192.168.13.223->192.168.13.224: INVITE SDP\n192.168.13.223->192.168.13.224: 180 Ringing\n192.168.13.224->192.168.13.223: 180 Ringing\n192.168.12.154->192.168.13.223: 180 Ringing\n192.168.12.42->192.168.13.223: 200 OK\n192.168.13.223->192.168.13.224: 200 OK\n192.168.13.224->192.168.13.223: 200 OK\nmakes:\n\nwhich has arrows going both left and right in the image.\n. Hey @ctzurcanu you need to sudo gem install jspp, instructions available https://github.com/bramp/js-sequence-diagrams#build-requirements\n. No problem. I've created #113 to alert you (with instructions on how to fix) if jspp is missing.\n. In fact, I found a way to get rid of jspp, and use a standard npm tools. Meaning Make will just install everything it needs. 73b6dc8e392a9562b88f1f4faea285435e481adb\n. in 73b6dc8e392a9562b88f1f4faea285435e481adb we removed the use of jspp.\n. hey @johannes-jansson check out https://github.com/bramp/js-sequence-diagrams/blob/gh-pages/index.html#L202 it shows how the download button works.\nYou should be able to do something similar to fetch the SVG as a string.\nHowever, I'm not sure I would want to add a \"getSVGString\" method to the interface, as I want to be agnostic to it being SVG or whatever.\n. I've been tempted for a while to replace Raphael with svg.js or similar, I just haven't got around to it.\nWhat CSS/jQuery class tags were you thinking about adding? It's worth mentioning that Raphael actually generates VML or SVG, depending on browser, and if it generates VML, than CSS/etc doesn't work.\n. Oh thanks, that's a great bug report.\nI guess there are two issues here,\n1) The hand/simple box drawing is inconsistent with each other,\n2) I most likely assume the note is listed in participant order. A simple\nsort should fix that.\nPatches and tests welcome, or I will look at this sometime at the weekend.\n. All tests pass (but sadly that doesn't check visual layout), and visually checked myself. It looks good.\n. I wrote a simple test, and checked, these are the characters within the hand drawn font:\n\nAdditionally, I replaced the ttf fonts with otf versions, that contained slightly more glyphs. Still not all you requested, but they just aren't in the otf files.\n. Thanks for the issue.\nYou can see on the font's original site: http://www.dafont.com/daniel.font?text=%5C%2F that the bold font (which I'm using) seems to also have \\ wrong :(\nI'll see what I can do about fixing that.\n. I can't reproduce this on Chrome or Firefox. It might have been fixed in 16f8ec957e0de19eb1a15432 Could you confirm it still occurs using the latest checked in code?\n. This has long since been fixed in code, and on the demo site.. Very nice! I quickly scanned the change, but going to wait until the weekend to fully review/pull.\nI fully want to do this migration, but some quick comments/concerns (off the top of my head)\n1) I would like to make the loading of the hand drawn font seamless. So no work for the user other than having the font in the right path.\n2) Is it possible to put your snap.svg work into a separate theme, so Rapheal and snap can coexist? I don't know what my migration plan is, but is it possible to offer both for a while?\n3) I will do a major version bump after I pull this change.\n. I've pulled your code into a new branch, and started hacking on it. There are some inconsitances with the old vs new rendering. I'm also refactoring this so there is a RaphaelTheme and a SnapTheme. It was quite easy to keep both, without duplicating code. This is mainly useful so I can easily compare old to new (to check for regressions). I'll update you shortly.\n. I've pulled this into a new SVG branch: https://github.com/bramp/js-sequence-diagrams/tree/svg and started to heavily refactor to allow both Raphael and Snapsvg at the same (if you so wish). I had to cleanup some of this new snapsvg code to match the existing API correctly (for example, snapsvg assumed the container was a SVG, where previous Raphael accepted div/td/etc). Still a work in progress, but getting there. I will close this PR, and track the work in #127\n. We are on bower, is that not sufficient for your use case? To be honest I\nnever quite understood the need for both npm and bower, as they have a lot\nof overlap.\n. I actually have a package on npm (for a different project). I can\ninvestigate adding this as well.\n. Always happy to receive pull requests. We support underscore or lodash. We\nonly use their functions in a handful of places, but it just made the code\nneater.\n. Sorry, not abandoned, i'm just really really slow at making progress.\n. Very cool. I hope we haven't duplicated much effort, as I had 90% completed\nmy version of the changes in the svg branch.\nAnyway I am travelling right now, but I will take a look ASAP!\nOn 11 May 2016 12:19 a.m., \"Wael Damra\" notifications@github.com wrote:\n\nHere\u2019s my stab at a Snap SVG version. The demo html file works in Chrome\nand Edge where I tested, with the js file and font file in the same\ndirectory, and access to CDNs for SnapSVG/Underscore/jQuery.\nThe js file combines the code from src/diagram.js and\nsrc/sequence-diagram.js. I commented out the JISON parsing part while\nworking on this, demo data is loaded inside the html file.\nSee readme file for change log. I kept the program structure intact,\nRaphael-specific calls can be un-commented to create a combined\nRaphael/Snap SVG version with additional logic if you like. Hope this helps\nwith the progress, nice tool by the way.\ndiagram.zip\nhttps://github.com/bramp/js-sequence-diagrams/files/258263/diagram.zip\n[image: diagram]\nhttps://cloud.githubusercontent.com/assets/19277382/15165293/5769c3ac-16da-11e6-81c9-ba4b3bc73537.png\n\u2014\nYou are receiving this because you were assigned.\nReply to this email directly or view it on GitHub\nhttps://github.com/bramp/js-sequence-diagrams/issues/127#issuecomment-218319920\n. wdamra@ Just got back from my travels, and realised you didn't send this as a pull request. Would you be able to do so? It'll make it easier to review and accept any changes.\n. With v2 we now use Snap.svg or Raphael, with Raphael to be phased out.. Would forward and back slashes work?\n\nA->B: Normal\nA/>B: Angled up\nA\\>B: Angled down\nNot very pretty, but the simplest I could think of just now.\n. The svg branch is in a state of brokenness.  I would like all tests to be run with a combination of Raphael and snapsvg. The snap mock was broken, but this looks like a simple fix.\n. Awesome addition. I've added a few suggestions to the changes.. With v2 we now use Snap.svg or Raphael, with Raphael to be phased out.. JSON is its own language, which was designed for a particular purpose. The sequence diagram language was designed to be easy, simple, and human readable for this purpose alone. \nIt has some good properties, for example, even without converting to SVG, it is easy to understand the following diagram:\nA->B: Send a message\nB->A: Responses\nI don't know what a JSON version would like like, but it wouldn't be as human readable.\n. ha awesome. Merged. Thanks.\n. This whitespace issue should no longer be a problem. It was fixed months ago. I'm going to reopen this bug until I double check.\n. Ok this was indeed fixed.. Thanks for the work.\nNot sure why the tests are now broken, Travis was able to build them previously. You should just type 'make', and it fetches all dependencies, builds, checks for lint errors, and runs tests.\nAnyway, not near my computer right now, so I will review shortly.\n. Thanks!, but we are actually \"BSD-2-Clause\", if you can change I'll happily pull the request. https://spdx.org/licenses/BSD-2-Clause\n. Thanks!\n. This looks good. Thanks for the change, and sorry for the delay!\n. Would you add some tests for the new oval syntax.\nAlso if I read this correctly, if I prefix the actor name with o- then it becomes a oval. I wonder if that is the most obvious/sensible way to do this.\n. You branch has conflicts. Can you rebase from master, so I can merge.\nI will look over the code more, but I want to think more about this if this is the right syntax to be using.\n. Thanks for the feedback. I've actually reworked the wobble a little, capping how much it can wobble. Going over text should no longer be a problem:\n\n. This will happen in the 2.0 release. (No ETA on when that will be)\n. Ok this should be possible now that v2 is released.\njavascript\ndiagram.drawSVG(container, {\n  'theme': 'hand', \n  'font-size': 72,\n});. Very cool! Thanks.\n. Very cool. Do you have an example of how simple fails?\n. I don't have access to the plugin on discourse, but I can't reproduce this myself. \n\n I've since released a new version of the library, so if this still occurs after upgrading, then please reopen.. Yes, I am aware and apologise that loading the hand drawn font is terribly slow.  This is a limitation in the Raphael.js library I use for generating the SVG. So that Raphael can maintain it's compatibility with VML (for IE), it includes the font as a vector within the SVG.\nI'm currently working on 2.0 of js-sequence-diagrams[1] that moves to the snap.svg library. This drops the legacy VML support, and allows the SVG to be styled with CSS, and use standard fonts.\n[1] https://github.com/bramp/js-sequence-diagrams/tree/svg\n. ok js-sequence-diagram 2.0 is now out, and the font can be specified via normal CSS.. Sounds good to me. Changing the syntax should be easy as it is covered in\nunit tests (which you should add to).\n. \"@bramp Do you have any preferences when it comes to code style, esp with regard to line length?\" no real preference, but keep it reasonable <80-120 ish.\nHowever, please run make lint as that should catch most of the things I care about.\n. Awesome, a quick glance and things look good! I need to find some time to properly review. However quick comment, 'executionSpecification' seems long, can we just drop the word specification or spec everywhere. I think without it out is still easy to read and understand the code.\n. I'm confused a little at what it means for level to be > 1. Would you show me an example where you mix different levels.\n. Sorry for the delay here. You say \"Lodash 1.8.3 \" but your example shows \"lodash.js/4.13.1/lodash.min.js\". Anyway I now test against Lodash 4.17.x, and after a few fixes ebb8987325d6d49287c8672f9b94aae90b03ca01 it all seems to work. Please wait for a v2.0.2 release.. This was fixed in b4e52445, it just hasn't been released yet....\n. I might not understand your question, but you can do the following:\n``` javascript\nvar text = \"Title: Here is a title\\nA->B: Normal line\";\n//or\nvar text = \"Title: Here is a title\\n\" + \n           \"A->B: Normal line\\n\";\n// or (with ECMAScript 6 - ES6):\nvar text = Title: Here is a title\nA->B: Normal line\n// and then use text\nvar diagram = Diagram.parse(text);\n```\nor if using \n. It works on the site, because the string javascript receives contains a \"\\n\". You should be able to change your example to work:\njavascript\n var d = Diagram.parse(\n   \"Andrew->China: Says Hello\\n\" +\n   \"Note right of China: China thinks\\\\n about it\\n\" +\n   \"China-->Andrew: How are you?\\n\" +\n   \"Andrew->>China: I am good thanks!\"\n  );. Ok, I've rolled out v2.0 based on Snap.svg. I haven't looked to see if that would work purely outside a browser, but I suspect it will (with perhaps some minor changes).. I'm confused what was causing this. I can't reproduce this outside of stackedit. For example, on the demo site: https://bramp.github.io/js-sequence-diagrams/ nothing is transparent by default. \n\n I suspect the issue here is stackedit has made some change to break this. Feel free to reopen if you can provide a sample page to reproduce this issue.. Thanks for the heads up!. Thanks!. Thanks. I've now rolled out support for snap.svg, and deprecated the use of Raphael (in part because they disappeared from the Internet).. Sorry for the slow reply!\nYes, that grammar looks fine to me. Please go ahead and update grammar.jison and add some tests\n(the grammar.ebnf is used for drawing this diagram only)\n. Thanks!. ETOOMANYFEATUREREQUESTS\n1)  You can already place notes over multiple participants, for example:\nA->B: 1\nB->C: 2\nNote over A,C: This will cover lines A, B and C.\nHowever, if you didn't know the order of the participants, I could see how you may not know that B was in the middle of C. So I think it might be far to allow A,B,C and ensure it covers all of them.\n2) Yes opts would be cool, and there is already a feature request for them #160\n3) Sounds a reasonable idea, but right now the generated SVGs are not interactive, but could be. Sounds low priority right now.\nI welcome patches if you feel up to adding any of these features.. Very nice idea. Should we use \"actorVistor\" instead of \"actor0\"? I guess number based has fewer pitfalls.\nI wonder if the CSS nth select would have worked without your change, for example:\n.actor rect:nth-child(1), .actor path:nth-child(1) {\n    fill: #f9f;\n}\nWell either way I'll review your changes shortly.. I have not considered making a VSCODE extension, mainly because I don't use visual studio. However I welcome others contributing one. There have been plugins writing for other tools, such as JIRA and Confluence.. Excellent @andrewdonkin I'll happily accept this! Would you mind resolving the issues that hound bot found.. Nice test, it worked. But I'm sadly going to reject :). I don't have a Windows machine to test on, so I won't be able to investigate. If anyone else is willing to take a look, and propose a solution, that'll be great!. Hopefully you resolved this on your own. If not feel free to reopen.. Looks good to me. Would you drop the changes to the files under dist. Those would be autogenerated from the files in src at the next release.. ",
    "qur2": "Will definitely try. Now.\n. Nope, still failing. I'm not familiar with ruby stuff but if it can help, I'm using the system (not homebrewed) ruby.\nHere is my bash output:\n``` bash\njs-sequence-diagrams (master)\u2191\n$ make clean\nrm sequence-diagram-min.js grammar.js\nrm: sequence-diagram-min.js: No such file or directory\nmake: *** [clean] Error 1\njs-sequence-diagrams (master)\u2191\n$ make\njison src/grammar.jison\njspp src/sequence-diagram.js | \\\n        uglifyjs -o sequence-diagram-min.js -c --comments\nWARN: ERROR: Unexpected token eof \u00abundefined\u00bb, expected punc \u00ab(\u00bb [-:462,6]\n/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:199\n    throw new JS_Parse_Error(message, line, col, pos);\n          ^\nError\n    at new JS_Parse_Error (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:185:18)\n    at js_error (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:199:11)\n    at croak (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:630:9)\n    at token_error (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:638:9)\n    at expect_token (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:651:9)\n    at expect (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:654:36)\n    at parenthesised (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:668:9)\n    at if_ (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:921:20)\n    at /usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:758:24\n    at /usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:677:24\n/Library/Ruby/Gems/1.8/gems/jspp-1.2.0/bin/jspp:32:in write': Broken pipe (Errno::EPIPE)\n    from /Library/Ruby/Gems/1.8/gems/jspp-1.2.0/bin/jspp:32:inprint'\n    from /Library/Ruby/Gems/1.8/gems/jspp-1.2.0/bin/jspp:32\n    from /usr/bin/jspp:19:in `load'\n    from /usr/bin/jspp:19\nmake: *** [sequence-diagram-min.js] Error 8\n```\n. Just found on https://github.com/mbostock/UglifyJS2/commit/f83aca65b75a93dd030b80c7b6c3f76456c32a81 that this should be fixed though.\n. This is not yet in the version npm installed, I need to get this change and I guess it will be alright.\n. Just my two cents: having a stack full of js tools makes the project easier to get started with. Relying on grunt also helps to easily build a full project around.\nLastly, if I'm not mistaken, grunt brings some explicit and external steps rather than file inclusion hidden in some comment as jspp does.\n. +1\n. Will definitely try. Now.\n. Nope, still failing. I'm not familiar with ruby stuff but if it can help, I'm using the system (not homebrewed) ruby.\nHere is my bash output:\n``` bash\njs-sequence-diagrams (master)\u2191\n$ make clean\nrm sequence-diagram-min.js grammar.js\nrm: sequence-diagram-min.js: No such file or directory\nmake: *** [clean] Error 1\njs-sequence-diagrams (master)\u2191\n$ make\njison src/grammar.jison\njspp src/sequence-diagram.js | \\\n        uglifyjs -o sequence-diagram-min.js -c --comments\nWARN: ERROR: Unexpected token eof \u00abundefined\u00bb, expected punc \u00ab(\u00bb [-:462,6]\n/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:199\n    throw new JS_Parse_Error(message, line, col, pos);\n          ^\nError\n    at new JS_Parse_Error (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:185:18)\n    at js_error (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:199:11)\n    at croak (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:630:9)\n    at token_error (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:638:9)\n    at expect_token (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:651:9)\n    at expect (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:654:36)\n    at parenthesised (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:668:9)\n    at if_ (/usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:921:20)\n    at /usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:758:24\n    at /usr/local/share/npm/lib/node_modules/uglify-js/lib/parse.js:677:24\n/Library/Ruby/Gems/1.8/gems/jspp-1.2.0/bin/jspp:32:in write': Broken pipe (Errno::EPIPE)\n    from /Library/Ruby/Gems/1.8/gems/jspp-1.2.0/bin/jspp:32:inprint'\n    from /Library/Ruby/Gems/1.8/gems/jspp-1.2.0/bin/jspp:32\n    from /usr/bin/jspp:19:in `load'\n    from /usr/bin/jspp:19\nmake: *** [sequence-diagram-min.js] Error 8\n```\n. Just found on https://github.com/mbostock/UglifyJS2/commit/f83aca65b75a93dd030b80c7b6c3f76456c32a81 that this should be fixed though.\n. This is not yet in the version npm installed, I need to get this change and I guess it will be alright.\n. Just my two cents: having a stack full of js tools makes the project easier to get started with. Relying on grunt also helps to easily build a full project around.\nLastly, if I'm not mistaken, grunt brings some explicit and external steps rather than file inclusion hidden in some comment as jspp does.\n. +1\n. ",
    "pangratz": "I'll let you know when I think the work is done :wink: \nCheers.\n. Alright, with the latest commit 88c6aff the whole Makefile functionality should be ported to Grunt.js. Though the content of the Makefile-version and Grunt.js-version of the generated sequence-diagram-min.js is not equal, using either version in the test/test.html results in the same output of the sequence diagram. I specified the same parameters for Uglify.js, but somehow the output still differs. Are you OK with that or should I further investigate why there is a difference? I suspect it might have to do something with the comments.\nI also thought of further cleaning up the codebase. What do you think of creating a dist directory which will contain the generated files, and hereby also create a un-minified version sequence-diagram.js?\n. I think the main stuff which should be covered by this PR has been done: the Makefile (and the jspp gem dependency) has been replaced by Grunt.js. I've updated the instructions in the README on how to build this library.\nThe last commit 8ca5210 introduces the output of the un-minified version of sequence-diagram.js. I don't know if this is desired. Maybe I should add this feature via a separate PR so you can decide on this separately... :pensive:\n. About the lines in the Gruntfile: I am sure it can be further decreased. I have started using Grunt.js in the last weeks and it feels like a very handy tool for building JS stuff, but I'm sure there is potential for improving the file.\nAbout the incremental builds, maybe there is a way to configure the tasks so they are only executed when preconditions are met or not. But I think that creating the lib from a fresh, clean state is not too expensive.\n. I'll let you know when I think the work is done :wink: \nCheers.\n. Alright, with the latest commit 88c6aff the whole Makefile functionality should be ported to Grunt.js. Though the content of the Makefile-version and Grunt.js-version of the generated sequence-diagram-min.js is not equal, using either version in the test/test.html results in the same output of the sequence diagram. I specified the same parameters for Uglify.js, but somehow the output still differs. Are you OK with that or should I further investigate why there is a difference? I suspect it might have to do something with the comments.\nI also thought of further cleaning up the codebase. What do you think of creating a dist directory which will contain the generated files, and hereby also create a un-minified version sequence-diagram.js?\n. I think the main stuff which should be covered by this PR has been done: the Makefile (and the jspp gem dependency) has been replaced by Grunt.js. I've updated the instructions in the README on how to build this library.\nThe last commit 8ca5210 introduces the output of the un-minified version of sequence-diagram.js. I don't know if this is desired. Maybe I should add this feature via a separate PR so you can decide on this separately... :pensive:\n. About the lines in the Gruntfile: I am sure it can be further decreased. I have started using Grunt.js in the last weeks and it feels like a very handy tool for building JS stuff, but I'm sure there is potential for improving the file.\nAbout the incremental builds, maybe there is a way to configure the tasks so they are only executed when preconditions are met or not. But I think that creating the lib from a fresh, clean state is not too expensive.\n. ",
    "darth10": "+1 \n. +1 \n. ",
    "felixcriv": "javascript\nvar data = document.getElementById('diagram').childNodes[0]; //svg data\nvar s = new XMLSerializer();\nvar str = s.serializeToString(data); //convert SVG code to string\ncanvg(document.getElementById('canvas'), str); //drawing the svg on the canvas\n. javascript\nvar data = document.getElementById('diagram').childNodes[0]; //svg data\nvar s = new XMLSerializer();\nvar str = s.serializeToString(data); //convert SVG code to string\ncanvg(document.getElementById('canvas'), str); //drawing the svg on the canvas\n. ",
    "Fintan": "+1\n. +1\n. ",
    "yusufnb": "+1\n. +1\nOne syntax could be:\nA -> B: Some text [www.text-links-to.com] # Comment text in tool tip\nThanks for this awesome tool. \n. +1\n. +1\nOne syntax could be:\nA -> B: Some text [www.text-links-to.com] # Comment text in tool tip\nThanks for this awesome tool. \n. ",
    "sbnb": "Looks like my request fits here. I love the sequence diagrams, but so far have been using it on your demo site, and saving the files via 'download as svg' button. Today I set it up locally from the 'usage' instructions, and can get diagrams to render ok, but can't figure how to save them as SVG images. No big deal, as I can just copy the text onto your site for that, but would be nice if you get around to it.\nGreat work, thanks!\n. Cheers, that works.\n. Looks like my request fits here. I love the sequence diagrams, but so far have been using it on your demo site, and saving the files via 'download as svg' button. Today I set it up locally from the 'usage' instructions, and can get diagrams to render ok, but can't figure how to save them as SVG images. No big deal, as I can just copy the text onto your site for that, but would be nice if you get around to it.\nGreat work, thanks!\n. Cheers, that works.\n. ",
    "erikdahlstrom": "I'd recommend that you don't put that <source> element directly into the svg output. I think wrapping it in a <desc> or <metadata> would be better (see https://svgwg.org/svg2-draft/struct.html#UnknownElement for why).\n. I'd recommend that you don't put that <source> element directly into the svg output. I think wrapping it in a <desc> or <metadata> would be better (see https://svgwg.org/svg2-draft/struct.html#UnknownElement for why).\n. ",
    "rngtng": "cool, yes I 'play' a bit with the grammar parser so getting those fixed would be great ;)\n. cool, yes I 'play' a bit with the grammar parser so getting those fixed would be great ;)\n. ",
    "gitgrimbo": "I think the multi-line signals need checking as well. I get overlap when I try it.\n<pre class=\"sequence-diagram\">\nAndrew->China: this\\nis\\na\\nmultiline\\narrow\n</pre>\nFirefox 17\n\nIE 7\n\nChrome 25\n\n. Thanks, I found that particular commit just after submitting! I was going to delete this issue, but I can leave it if preferable.\n. This is looking more like an issue with Adobe Reader.\nPDF fails to display correctly:\n\nAdobe Reader 9.4.5.236\nAdobe Reader 11.0.03.37\n\nPDF displays correctly:\n\nFirefox 22.0\nFirefox 23.0\nChrome 25.0.1364.97 m\nChrome 28.0.1500.95 m\nFoxit Reader 5.3.1.0606\nhttp://www.pdfonlinereader.com\n. FYI, rasterize.js doesn't do much apart from invoke phantomjs to render the web page as a PDF: https://github.com/ariya/phantomjs/blob/master/examples/rasterize.js.\n\nThis is on the back-burner for me at the moment, but I'll keep investigating in the background.\n. Hi, for further supporting evidence, I have just pasted the code from #issue-55494348 to http://bramp.github.io/js-sequence-diagrams/ and get the same duplication of participants.  Chrome 35 on Win 7.\n. Also using the site, the following:\nparticipant A\nparticipant B\nparticipant C\nA->C: hello\nA->B: hello\nrenders as:\n\n. Diagram.prototype.getActor - the for (i in actors) code gives me the following.  So looks like a rogue CR.\n```\n\nalias\n\"C\"\nactors[i].alias\n\"C\n\"\nactors[i].alias.charCodeAt(0)\n67\nactors[i].alias.charCodeAt(1)\n13\nactors[i].alias.charCodeAt(2)\nNaN\nalias.charCodeAt(0)\n67\nalias.charCodeAt(1)\nNaN\n```\n. I think the multi-line signals need checking as well. I get overlap when I try it.\n\n<pre class=\"sequence-diagram\">\nAndrew->China: this\\nis\\na\\nmultiline\\narrow\n</pre>\nFirefox 17\n\nIE 7\n\nChrome 25\n\n. Thanks, I found that particular commit just after submitting! I was going to delete this issue, but I can leave it if preferable.\n. This is looking more like an issue with Adobe Reader.\nPDF fails to display correctly:\n\nAdobe Reader 9.4.5.236\nAdobe Reader 11.0.03.37\n\nPDF displays correctly:\n\nFirefox 22.0\nFirefox 23.0\nChrome 25.0.1364.97 m\nChrome 28.0.1500.95 m\nFoxit Reader 5.3.1.0606\nhttp://www.pdfonlinereader.com\n. FYI, rasterize.js doesn't do much apart from invoke phantomjs to render the web page as a PDF: https://github.com/ariya/phantomjs/blob/master/examples/rasterize.js.\n\nThis is on the back-burner for me at the moment, but I'll keep investigating in the background.\n. Hi, for further supporting evidence, I have just pasted the code from #issue-55494348 to http://bramp.github.io/js-sequence-diagrams/ and get the same duplication of participants.  Chrome 35 on Win 7.\n. Also using the site, the following:\nparticipant A\nparticipant B\nparticipant C\nA->C: hello\nA->B: hello\nrenders as:\n\n. Diagram.prototype.getActor - the for (i in actors) code gives me the following.  So looks like a rogue CR.\n```\n\nalias\n\"C\"\nactors[i].alias\n\"C\n\"\nactors[i].alias.charCodeAt(0)\n67\nactors[i].alias.charCodeAt(1)\n13\nactors[i].alias.charCodeAt(2)\nNaN\nalias.charCodeAt(0)\n67\nalias.charCodeAt(1)\nNaN\n```\n. \n",
    "andreans": "I think you have to make a use case diagram and class diagram after sequence diagram. . ;) very nice project brother\n. I think you have to make a use case diagram and class diagram after sequence diagram. . ;) very nice project brother\n. ",
    "kimptoc": "Good point  :)\nWould it be feasible/make sense to plugin in alternate parsers/jison configs so that it could be done in one step?\nAlthough I can see that probably wont work - so perhaps a way of going from one parsed language to another - which is what you're suggesting, I guess  :)\nThanks,\nChris\n. Cool - thanks.\n. Good point  :)\nWould it be feasible/make sense to plugin in alternate parsers/jison configs so that it could be done in one step?\nAlthough I can see that probably wont work - so perhaps a way of going from one parsed language to another - which is what you're suggesting, I guess  :)\nThanks,\nChris\n. Cool - thanks.\n. ",
    "jupe": "Yes, that could be syntax for example. But more suitable might be that link are \"hidden\" to text.. Also A and B could be links as well..\ne.g. \n    A: link for A [www.source-a.com]\n    B: link for B [www.source-b.com]\n    A->B: visit here[www.google.com]\n. Yes, that could be syntax for example. But more suitable might be that link are \"hidden\" to text.. Also A and B could be links as well..\ne.g. \n    A: link for A [www.source-a.com]\n    B: link for B [www.source-b.com]\n    A->B: visit here[www.google.com]\n. ",
    "smeijer": "If implementing this, it should be great if we can bind more than just a link. For example not opening a url, but executing some javascript (to show a lightbox or something like that).\n. If implementing this, it should be great if we can bind more than just a link. For example not opening a url, but executing some javascript (to show a lightbox or something like that).\n. ",
    "brandonstark": "+1\nI would like to link from the svg to the corresponding message in my log file in the same page.\n. +1\nPerhaps just allow color selection for text and color selection for arrows\n. +1\nI would like to link from the svg to the corresponding message in my log file in the same page.\n. +1\nPerhaps just allow color selection for text and color selection for arrows\n. ",
    "winfinit": "Should it be then extended to actually custom attr's? (http://raphaeljs.com/reference.html#Element.attr)\nso syntax for links would be: \na->b: some text [href=\"http://example.com\"]\nthat way we will cover colors and more, so i was thinking that we can extend that to all of the elements:\ntitle, message, participant, actor, note\n. well, you could put javascript in href, in SVG it would translate to anchor tag essentially, where you can add javascript like so:\nhtml\nhref=\"javascript:alert(\"hello\")\nhtml would be tricky, since output is SVG, it has its own markup (http://www.w3.org/TR/SVG/)\n. i have implementation that takes advantage or svg parameters, however implementation is hacky... (i didn't modify lexer), so i can work on a proper implementation if we can agree that we can try to match DOTs implementation of attributes:\nDOT\nTitle: Foo Bar [href=\"http://example.com\", fill=\"red\"]\nParticipant A [href=\"http://example.com\", fill=\"red\"]\nA->B: Login [href=\"http://example.com\", fill=\"red\"]\nNote right of B: foo bar  [href=\"http://example.com\", fill=\"red\"]\n. pull request was submitted for this issue: https://github.com/bramp/js-sequence-diagrams/pull/74\n. simplest way to get a PNG, is to port SVG to canvas, and then from canvas element get data image, and assign that to either img or a\ni found an issue with this approach, and that is probably you had a mixed success, raphael.js doesn't produce valid SVG at times, if xlink namespaces are used, and in this case xlink:href is used quite a lot when relationships/signals are created.\nhopefully next version of raphael will resolve that, there is a pull request to fix this particular issue.\nquestion is weather js-sequence-diagram wants to pull as part of the project all of the dependencies that are used to create PNG (similar how raphael.js and others are pulled), or do we just want to address this as part of the documentation?\nexample uses canvg.js and patched version of raphael.js\nbelow example can be previewed with all of the proper dependencies  here on jsfiddle\n``` html\n<!DOCTYPE html>\n[if lt IE 7]>      <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\"> <![endif]\n[if IE 7]>         <html class=\"no-js lt-ie9 lt-ie8\"> <![endif]\n[if IE 8]>         <html class=\"no-js lt-ie9\"> <![endif]\n[if gt IE 8]><!\n\n<![endif]\n\n\n\n    <script type=\"text/javascript\" src=\"http://canvg.googlecode.com/svn/trunk/rgbcolor.js\"></script>\n    <script type=\"text/javascript\" src=\"http://canvg.googlecode.com/svn/trunk/StackBlur.js\"></script>\n    <script type=\"text/javascript\" src=\"http://canvg.googlecode.com/svn/trunk/canvg.js\"></script>\n    <script src=\"jquery.min.js\"></script>\n    <script src=\"lodash.min.js\"></script>\n    <script src=\"raphael-min.js\"></script>\n    <script src=\"../build/sequence-diagram-min.js\"></script>\n\n</head>\n<body>\n\n    <table border=\"1\">\n        <thead>\n            <th>SVG</th>\n            <th>PNG</th>\n            <th>Anchor</th>\n        </thead>\n        <tbody>\n            <tr>\n                <td><div id=\"svgWrapper\"></div></td>\n                <td><img id=\"myPNG\"></img></td>\n                <td><a id=\"uriToPNG\"></a></td>\n            </tr>\n        </tbody>\n    </table>\n\n    <script>\n        $(document).ready(function() {\n            // set svgWrapper content to blank\n            $(\"#svgWrapper\").html('');\n            var diagram = Diagram.parse( \n                    \"Title: Sample Diagram\\nA->B: message\"\n            );\n            // draw SVG inside element with id of svgWrapper\n            diagram.drawSVG('svgWrapper', {\n                theme : 'hand'\n            });\n\n            // select container that is wraping SVG\n            var container = $('#svgWrapper');\n            // tring selected SVG\n            var content = container.html().trim();\n            // create canvas element\n            var canvas = document.createElement(\"canvas\");\n            // transform and add SVG content to canvas\n            canvg(canvas, content);\n\n            // get data for image in the canvas\n            var theImage = canvas.toDataURL('image/png');\n\n            // add to anchor a href of produced data\n            $('#uriToPNG').attr({\n                'href' : theImage,\n                'download' : \"image.png\",\n            }).text(\"click here to download (chrome,firefox, opera)\");\n\n            // add PNG to img element\n            $('#myPNG').attr('src', theImage);\n\n        });\n\n    </script>\n</body>\n\n\n```\n. that example producing a broken image for me actually in safari.\n. @ComFreek \nit looks like opera, safari (ios+osx), chrome are working, so browsers that support SVG. i just ran provided jsfiddle through browserstack, and it seems that everything rendered as expected.\n. hello, this is addressed by this pull request:\nhttps://github.com/bramp/js-sequence-diagrams/pull/74\n. looking at this further, maybe it makes sense to sync attribute names more to graphviz attribute names instead of raphael.js, that way we can address issue #31 also (i.e. connector color, actor color, etc ...)?\ngraphviz aattributes (http://www.graphviz.org/doc/info/attrs.html)\n. i've committed new changes that will permit one to control colors of actors, actor strokes, signal colors, note, and font color via attribute names from graphviz\n. Bruce,\nis this still an issue for you, or version of jison was a final issue?\n. Hello, if i am not mistaken latest official release is 31, are you using nightly build? issue doesnt happen for me on osx with firefox 31.\n. Should it be then extended to actually custom attr's? (http://raphaeljs.com/reference.html#Element.attr)\nso syntax for links would be: \na->b: some text [href=\"http://example.com\"]\nthat way we will cover colors and more, so i was thinking that we can extend that to all of the elements:\ntitle, message, participant, actor, note\n. well, you could put javascript in href, in SVG it would translate to anchor tag essentially, where you can add javascript like so:\nhtml\nhref=\"javascript:alert(\"hello\")\nhtml would be tricky, since output is SVG, it has its own markup (http://www.w3.org/TR/SVG/)\n. i have implementation that takes advantage or svg parameters, however implementation is hacky... (i didn't modify lexer), so i can work on a proper implementation if we can agree that we can try to match DOTs implementation of attributes:\nDOT\nTitle: Foo Bar [href=\"http://example.com\", fill=\"red\"]\nParticipant A [href=\"http://example.com\", fill=\"red\"]\nA->B: Login [href=\"http://example.com\", fill=\"red\"]\nNote right of B: foo bar  [href=\"http://example.com\", fill=\"red\"]\n. pull request was submitted for this issue: https://github.com/bramp/js-sequence-diagrams/pull/74\n. simplest way to get a PNG, is to port SVG to canvas, and then from canvas element get data image, and assign that to either img or a\ni found an issue with this approach, and that is probably you had a mixed success, raphael.js doesn't produce valid SVG at times, if xlink namespaces are used, and in this case xlink:href is used quite a lot when relationships/signals are created.\nhopefully next version of raphael will resolve that, there is a pull request to fix this particular issue.\nquestion is weather js-sequence-diagram wants to pull as part of the project all of the dependencies that are used to create PNG (similar how raphael.js and others are pulled), or do we just want to address this as part of the documentation?\nexample uses canvg.js and patched version of raphael.js\nbelow example can be previewed with all of the proper dependencies  here on jsfiddle\n``` html\n<!DOCTYPE html>\n[if lt IE 7]>      <html class=\"no-js lt-ie9 lt-ie8 lt-ie7\"> <![endif]\n[if IE 7]>         <html class=\"no-js lt-ie9 lt-ie8\"> <![endif]\n[if IE 8]>         <html class=\"no-js lt-ie9\"> <![endif]\n[if gt IE 8]><!\n\n<![endif]\n\n\n\n    <script type=\"text/javascript\" src=\"http://canvg.googlecode.com/svn/trunk/rgbcolor.js\"></script>\n    <script type=\"text/javascript\" src=\"http://canvg.googlecode.com/svn/trunk/StackBlur.js\"></script>\n    <script type=\"text/javascript\" src=\"http://canvg.googlecode.com/svn/trunk/canvg.js\"></script>\n    <script src=\"jquery.min.js\"></script>\n    <script src=\"lodash.min.js\"></script>\n    <script src=\"raphael-min.js\"></script>\n    <script src=\"../build/sequence-diagram-min.js\"></script>\n\n</head>\n<body>\n\n    <table border=\"1\">\n        <thead>\n            <th>SVG</th>\n            <th>PNG</th>\n            <th>Anchor</th>\n        </thead>\n        <tbody>\n            <tr>\n                <td><div id=\"svgWrapper\"></div></td>\n                <td><img id=\"myPNG\"></img></td>\n                <td><a id=\"uriToPNG\"></a></td>\n            </tr>\n        </tbody>\n    </table>\n\n    <script>\n        $(document).ready(function() {\n            // set svgWrapper content to blank\n            $(\"#svgWrapper\").html('');\n            var diagram = Diagram.parse( \n                    \"Title: Sample Diagram\\nA->B: message\"\n            );\n            // draw SVG inside element with id of svgWrapper\n            diagram.drawSVG('svgWrapper', {\n                theme : 'hand'\n            });\n\n            // select container that is wraping SVG\n            var container = $('#svgWrapper');\n            // tring selected SVG\n            var content = container.html().trim();\n            // create canvas element\n            var canvas = document.createElement(\"canvas\");\n            // transform and add SVG content to canvas\n            canvg(canvas, content);\n\n            // get data for image in the canvas\n            var theImage = canvas.toDataURL('image/png');\n\n            // add to anchor a href of produced data\n            $('#uriToPNG').attr({\n                'href' : theImage,\n                'download' : \"image.png\",\n            }).text(\"click here to download (chrome,firefox, opera)\");\n\n            // add PNG to img element\n            $('#myPNG').attr('src', theImage);\n\n        });\n\n    </script>\n</body>\n\n\n```\n. that example producing a broken image for me actually in safari.\n. @ComFreek \nit looks like opera, safari (ios+osx), chrome are working, so browsers that support SVG. i just ran provided jsfiddle through browserstack, and it seems that everything rendered as expected.\n. hello, this is addressed by this pull request:\nhttps://github.com/bramp/js-sequence-diagrams/pull/74\n. looking at this further, maybe it makes sense to sync attribute names more to graphviz attribute names instead of raphael.js, that way we can address issue #31 also (i.e. connector color, actor color, etc ...)?\ngraphviz aattributes (http://www.graphviz.org/doc/info/attrs.html)\n. i've committed new changes that will permit one to control colors of actors, actor strokes, signal colors, note, and font color via attribute names from graphviz\n. Bruce,\nis this still an issue for you, or version of jison was a final issue?\n. Hello, if i am not mistaken latest official release is 31, are you using nightly build? issue doesnt happen for me on osx with firefox 31.\n. ",
    "ComFreek": "I second @smeijer's opinion, it would be very nice to enter custom HTML or JavaScript.\n. @winfinit foreignObject makes this possible :) However, collisions between diagram parts and HTML couldn't be detected, I suppose.\n. There is an even simpler approach:\n1. Extract the SVG source code from the <svg> element. svg.outerHTML works (at least in Chrome).\n2. Load the source code (as a data URI) into an <image> element.\n   At this stage you can already right-click and select \"Save image\" in Chrome.\n3. Load the image data using canvas2dContext.drawImage(img, 0, 0) into a canvas.\n4. Save the canvas data as a PNG using canvas.toDataURL(\"image/png\").\njsFiddle demo: http://jsfiddle.net/0ktjqm9t/3/ (directly visiting http://jsfiddle.net/0ktjqm9t/3/show will show the data URI in the address bar in Chrome)\nCaveats:\n- Doesn't work in IE (tested with v11) due to some syntax errors. They probably come from the SVG document. Chrome is (apparently) less restrictive.\n- There was once a bug in Webkit which disallowed canvas export after importing a data URI, see StackOverflow: \"Accessing the SVG data through JavaScript\"\n- The image is cropped in the above demo. I don't know why.\n- (At least) Chrome needs the following attribute on the root <svg> element:\n``` xml\n\n Supplying some more attributes I found on MDN seems reasonable to me \n\n```\n. @winfinit \nIt definitely needs investigating. What is the browser compatibility like in your solution? I can't find information on that topic on canvg's Google Code website.\n. That sounds nice!\nUnfortunately - as I just tried - it doesn't work in IE 11 on Win 8.1:\nFile: show\nHTML1503: Unexpected start tag.\nFile: show, Line: 93, Column: 9\nHTML1512: Unmatched end tag.\nFile: show, Line: 100, Column: 33\nSCRIPT5022: SyntaxError\nFile: canvg.js, Line: 145, Column: 5\nThe line from canvg.js:\njavascript\nelse if (window.DOMParser)\n{\n    var parser = new DOMParser();\n    return parser.parseFromString(xml, 'text/xml');\n}\nIt seems that the SVG is ill-formed.\n. Thanks for your answer.\n- Incremental builds are possible by watching files for changes and performing certain actions. See also:\n  - https://www.npmjs.org/package/gulp (header Incremental Builds)\n  - https://github.com/gulpjs/gulp/blob/master/docs/recipes/incremental-builds-with-concatenate.md\n- Which features of Make do you consider mandatory?\n- One feature, which Grunt lacks, is the ability to pipe results of tasks, i.e. no temporary files are needed. For example you wouldn't need to create build/diagram-grammar.js anymore. You could directly pipe the result of jspp (as long as there is a Gulp plugin) to UglifyJS.\nI didn't have the time yet to dig deeper into Gulp, but I would certainly help porting the Makefile to Gulp as good as I can.\n. @bramp I've created a simple Gulpfile: https://github.com/ComFreek/js-sequence-diagrams (git clone ..., npm install, gulp [watch]). It does not do all things the Makefile did, but building, deploying and watching is already possible.\nWhat do you think?\n. @bruriaP My fork is far behind this upstream repository, 117 commits to be precise. I would recommend building with the Makefile, see the first comment in this thread.. :+1: \n. I second @smeijer's opinion, it would be very nice to enter custom HTML or JavaScript.\n. @winfinit foreignObject makes this possible :) However, collisions between diagram parts and HTML couldn't be detected, I suppose.\n. There is an even simpler approach:\n1. Extract the SVG source code from the <svg> element. svg.outerHTML works (at least in Chrome).\n2. Load the source code (as a data URI) into an <image> element.\n   At this stage you can already right-click and select \"Save image\" in Chrome.\n3. Load the image data using canvas2dContext.drawImage(img, 0, 0) into a canvas.\n4. Save the canvas data as a PNG using canvas.toDataURL(\"image/png\").\njsFiddle demo: http://jsfiddle.net/0ktjqm9t/3/ (directly visiting http://jsfiddle.net/0ktjqm9t/3/show will show the data URI in the address bar in Chrome)\nCaveats:\n- Doesn't work in IE (tested with v11) due to some syntax errors. They probably come from the SVG document. Chrome is (apparently) less restrictive.\n- There was once a bug in Webkit which disallowed canvas export after importing a data URI, see StackOverflow: \"Accessing the SVG data through JavaScript\"\n- The image is cropped in the above demo. I don't know why.\n- (At least) Chrome needs the following attribute on the root <svg> element:\n``` xml\n\n Supplying some more attributes I found on MDN seems reasonable to me \n\n```\n. @winfinit \nIt definitely needs investigating. What is the browser compatibility like in your solution? I can't find information on that topic on canvg's Google Code website.\n. That sounds nice!\nUnfortunately - as I just tried - it doesn't work in IE 11 on Win 8.1:\nFile: show\nHTML1503: Unexpected start tag.\nFile: show, Line: 93, Column: 9\nHTML1512: Unmatched end tag.\nFile: show, Line: 100, Column: 33\nSCRIPT5022: SyntaxError\nFile: canvg.js, Line: 145, Column: 5\nThe line from canvg.js:\njavascript\nelse if (window.DOMParser)\n{\n    var parser = new DOMParser();\n    return parser.parseFromString(xml, 'text/xml');\n}\nIt seems that the SVG is ill-formed.\n. Thanks for your answer.\n- Incremental builds are possible by watching files for changes and performing certain actions. See also:\n  - https://www.npmjs.org/package/gulp (header Incremental Builds)\n  - https://github.com/gulpjs/gulp/blob/master/docs/recipes/incremental-builds-with-concatenate.md\n- Which features of Make do you consider mandatory?\n- One feature, which Grunt lacks, is the ability to pipe results of tasks, i.e. no temporary files are needed. For example you wouldn't need to create build/diagram-grammar.js anymore. You could directly pipe the result of jspp (as long as there is a Gulp plugin) to UglifyJS.\nI didn't have the time yet to dig deeper into Gulp, but I would certainly help porting the Makefile to Gulp as good as I can.\n. @bramp I've created a simple Gulpfile: https://github.com/ComFreek/js-sequence-diagrams (git clone ..., npm install, gulp [watch]). It does not do all things the Makefile did, but building, deploying and watching is already possible.\nWhat do you think?\n. @bruriaP My fork is far behind this upstream repository, 117 commits to be precise. I would recommend building with the Makefile, see the first comment in this thread.. :+1: \n. ",
    "rahulsom": "+1\n. +1\n. Any idea when this will be merged? Or is @de-coy's branch stable enough to be used in production?\n. +1\n. +1\n. Any idea when this will be merged? Or is @de-coy's branch stable enough to be used in production?\n. ",
    "de-coy": "ok, found the problem...\ngrammar.js is not \"strict safe\" but it is imported into the scope of the anonymous function in diagram.js which is set to \"use strict\" - this works fine with individual files because grammar is actually declared as a global variable and is accessible anywhere.\nThe quickest way I can see to fix this is to move the jspp import directive to the top of the diagram.js file before the anonymous function is declared. This declares grammar globally again and things work well enough for now.\nI'm not sure if declaring grammar globally is the right way to go but I can't see an alternative yet, any suggestions welcome.\n. Great stuff, a much better solution.\nOn Sunday, May 19, 2013, Andrew Brampton wrote:\n\nI fixed this upstream with zaach/jison-lex#5https://github.com/zaach/jison-lex/issues/5\nAs soon as a new version of jison is released I'll bump the required\nversion, then the Grammar will pass the \"use strict\" tests.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/33#issuecomment-18120715\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. I've started looking to see if there's a way to abstract the drawing\nlibrary from the code to make it easier to swap new libraries in and out.\nI've not got very far yet but would appreciate your thoughts on this\napproach.\nOn Sunday, May 19, 2013, Andrew Brampton wrote:\n\nI am all for the CSS approach, however, because I'm using Rapha\u00ebl this is\nnot possible. Rapha\u00ebl outputs either SVG or VML (on Internet Explorer). The\nlater doesn't support styling with CSS.\nI think the long term solution is for me to drop Rapha\u00ebl and use a pure\nSVG solution. I think Rapha\u00ebl was a poor choice on my part as I keep\ngetting blocked by it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-18120780\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. Ok, great, I'll take a look.\nOn Sunday, May 19, 2013, Andrew Brampton wrote:\n\nI've tried to structure the code to make that possible. For example:\nHandRapha\u00eblTheme extends Rapha\u00eblTheme which extends BaseTheme.\nYou can create a new SomethingTheme that extends BaseTheme. Then all the\ndrawing code can go into the draw_line/draw_rect methods, and it should\njust work. I don't think there is any Raphael specific code in the\nBaseTheme.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-18122036\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. OK, initial version using svg.js is working on a fork.\nCurrent issues:\n- no line styles\n- no arrow heads\n- no css classes\nBramp can you take a look and see if you agree it's on the right track before I push on further?\n. It is definitely not suitable for Production and I'm struggling to fit in\nany work on it due to family commitments. I'll see if I can fit some time\nin over the next couple of weeks...\nOn Tuesday, August 27, 2013, Andrew Brampton wrote:\n\n@rahulsom https://github.com/rahulsom based on a quick look at @de-coyhttps://github.com/de-coycode, I think he is still missing some features. As such I don't think his\nsvg.js version is production ready.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-23352821\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. ok, found the problem...\ngrammar.js is not \"strict safe\" but it is imported into the scope of the anonymous function in diagram.js which is set to \"use strict\" - this works fine with individual files because grammar is actually declared as a global variable and is accessible anywhere.\nThe quickest way I can see to fix this is to move the jspp import directive to the top of the diagram.js file before the anonymous function is declared. This declares grammar globally again and things work well enough for now.\nI'm not sure if declaring grammar globally is the right way to go but I can't see an alternative yet, any suggestions welcome.\n. Great stuff, a much better solution.\nOn Sunday, May 19, 2013, Andrew Brampton wrote:\n\nI fixed this upstream with zaach/jison-lex#5https://github.com/zaach/jison-lex/issues/5\nAs soon as a new version of jison is released I'll bump the required\nversion, then the Grammar will pass the \"use strict\" tests.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/33#issuecomment-18120715\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. I've started looking to see if there's a way to abstract the drawing\nlibrary from the code to make it easier to swap new libraries in and out.\nI've not got very far yet but would appreciate your thoughts on this\napproach.\nOn Sunday, May 19, 2013, Andrew Brampton wrote:\n\nI am all for the CSS approach, however, because I'm using Rapha\u00ebl this is\nnot possible. Rapha\u00ebl outputs either SVG or VML (on Internet Explorer). The\nlater doesn't support styling with CSS.\nI think the long term solution is for me to drop Rapha\u00ebl and use a pure\nSVG solution. I think Rapha\u00ebl was a poor choice on my part as I keep\ngetting blocked by it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-18120780\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. Ok, great, I'll take a look.\nOn Sunday, May 19, 2013, Andrew Brampton wrote:\n\nI've tried to structure the code to make that possible. For example:\nHandRapha\u00eblTheme extends Rapha\u00eblTheme which extends BaseTheme.\nYou can create a new SomethingTheme that extends BaseTheme. Then all the\ndrawing code can go into the draw_line/draw_rect methods, and it should\njust work. I don't think there is any Raphael specific code in the\nBaseTheme.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-18122036\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. OK, initial version using svg.js is working on a fork.\nCurrent issues:\n- no line styles\n- no arrow heads\n- no css classes\nBramp can you take a look and see if you agree it's on the right track before I push on further?\n. It is definitely not suitable for Production and I'm struggling to fit in\nany work on it due to family commitments. I'll see if I can fit some time\nin over the next couple of weeks...\nOn Tuesday, August 27, 2013, Andrew Brampton wrote:\n\n@rahulsom https://github.com/rahulsom based on a quick look at @de-coyhttps://github.com/de-coycode, I think he is still missing some features. As such I don't think his\nsvg.js version is production ready.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/bramp/js-sequence-diagrams/issues/35#issuecomment-23352821\n.\n\n\ndmgcoyle@gmail.com\n07718 159 544\n. ",
    "zaach": "@bramp thanks, you fix has been published\n. @bramp thanks, you fix has been published\n. ",
    "benweet": "Is there a way to access BaseTheme without modifying sequence-diagram.js? Basically I just want to customize the font as Rapha\u00eblTheme does, but outside the lib.\n. Is there a way to access BaseTheme without modifying sequence-diagram.js? Basically I just want to customize the font as Rapha\u00eblTheme does, but outside the lib.\n. ",
    "mjw": "The version on cdnjs appears to be src/sequence-diagram.js rather than build/sequence-diagram-min.js and so is missing diagram.js deps - possibly done before commit a335393?\n. The version on cdnjs appears to be src/sequence-diagram.js rather than build/sequence-diagram-min.js and so is missing diagram.js deps - possibly done before commit a335393?\n. ",
    "ovinn": "Glad the quick fix was in someway helpful. Thanks for fixing and the app!\n. Glad the quick fix was in someway helpful. Thanks for fixing and the app!\n. ",
    "adrai": "I thought such things could be better displayed with a flowchart :-) http://adrai.github.io/flowchart.js/\n. Would be great, thanks @bramp \n. @bramp I want to reference your list but unfortunately I don't find it... :-(\n. I thought such things could be better displayed with a flowchart :-) http://adrai.github.io/flowchart.js/\n. Would be great, thanks @bramp \n. @bramp I want to reference your list but unfortunately I don't find it... :-(\n. ",
    "yesnault": ":+1:  !!!\n. +1\n.  :+1:  !!!\n. +1\n. ",
    "tiagoboldt": "+1. This project is pretty useful. Supporting class diagrams would mate it even better! \nSyntax could be wiki style:\n\n# Users\n * id: Int\n * name: String\n * age: Int\n\n# Books\n * id: Int\n * name: String\n * owner: Int -> Users.id\n\n\n. Ping! Has anyone reconsidered this? . +1. This project is pretty useful. Supporting class diagrams would mate it even better! \nSyntax could be wiki style:\n\n# Users\n * id: Int\n * name: String\n * age: Int\n\n# Books\n * id: Int\n * name: String\n * owner: Int -> Users.id\n\n\n. Ping! Has anyone reconsidered this? . ",
    "alexandre-mbm": ":+1: \n. :+1: \n. :+1: \n. :+1: \n. ",
    "Jellyfrog": ":+1: \n. :+1: \n. ",
    "manbearwiz": "Another option for syntax is yUML used by yUML and Scruffy\n[Customer|-forname:string;surname:string|doShiz()]<>-orders*>[Order]\n[Order]++-0..*>[LineItem]\n[Order]-[note:Aggregate root{bg:wheat}]\n\n. Another option for syntax is yUML used by yUML and Scruffy\n[Customer|-forname:string;surname:string|doShiz()]<>-orders*>[Order]\n[Order]++-0..*>[LineItem]\n[Order]-[note:Aggregate root{bg:wheat}]\n\n. ",
    "bachirelkhoury": "+100 for a Class diagram.\nthat would be an awesome addition!\nCould be a separate project. call it js-class-diagrams and will still be better than everything else out there.\n. +100 for a Class diagram.\nthat would be an awesome addition!\nCould be a separate project. call it js-class-diagrams and will still be better than everything else out there.\n. ",
    "aguynamedben": "@bramp Cool, FWIW, I'm opening a local HTML file in Chrome using OS X's Finder.  No web server involved.  That is probably causing the difference.  This was my use case because I'm making a one-off sequence diagram for a presentation, so I didn't go through the trouble to setup a web server for it, and just decided to use HTML/JS file in a directory.\nIt looks good, though, so thanks for that!\n-Ben\n. @bramp Cool, FWIW, I'm opening a local HTML file in Chrome using OS X's Finder.  No web server involved.  That is probably causing the difference.  This was my use case because I'm making a one-off sequence diagram for a presentation, so I didn't go through the trouble to setup a web server for it, and just decided to use HTML/JS file in a directory.\nIt looks good, though, so thanks for that!\n-Ben\n. ",
    "rex": "@bramp - Just so you know, the current CDNJS version of this file (hosted here) still has the invalid character in it. Snippet follows:\njs\nRapha\u00c3\u00ablTheme=function(diagram){this.init(diagram)};_.extend(Rapha\u00c3\u00ablTheme.prototype\n,BaseTheme.prototype,{init_font:function(){this._font={\"font-size\":16,\n\"font-family\":\"Andale Mono, monospace\"}}});var HandRapha\u00c3\u00ablTheme=function(diagram)\n{this.init(diagram)};_.extend(HandRapha\u00c3\u00ablTheme.prototype,\nBaseTheme.prototype,{init_font:function(){this._font={\"font-\nJust so you know :) I'm going to use the JS from the link you provided at raw.githubusercontent.com for now, but let me know if I can be any more help!\ncc @aguynamedben \n. @bramp - Just so you know, the current CDNJS version of this file (hosted here) still has the invalid character in it. Snippet follows:\njs\nRapha\u00c3\u00ablTheme=function(diagram){this.init(diagram)};_.extend(Rapha\u00c3\u00ablTheme.prototype\n,BaseTheme.prototype,{init_font:function(){this._font={\"font-size\":16,\n\"font-family\":\"Andale Mono, monospace\"}}});var HandRapha\u00c3\u00ablTheme=function(diagram)\n{this.init(diagram)};_.extend(HandRapha\u00c3\u00ablTheme.prototype,\nBaseTheme.prototype,{init_font:function(){this._font={\"font-\nJust so you know :) I'm going to use the JS from the link you provided at raw.githubusercontent.com for now, but let me know if I can be any more help!\ncc @aguynamedben \n. ",
    "jdmichal": "This problem appears to have propagated to the CDN-JS server also for version 1.0.4.\nhttp://cdnjs.com/libraries/js-sequence-diagrams/\n. This problem appears to have propagated to the CDN-JS server also for version 1.0.4.\nhttp://cdnjs.com/libraries/js-sequence-diagrams/\n. ",
    "ghguy": "Just search and replace all occurences of \"Rapha\u00eblTheme\" with \"RaphaelTheme\" and it will work :)\nGood luck!\n. Just search and replace all occurences of \"Rapha\u00eblTheme\" with \"RaphaelTheme\" and it will work :)\nGood luck!\n. ",
    "josdejong": "Thanks for figuring this out. \n@bramp, I hope this will be fixed in the library itself?\n. Thanks for figuring this out. \n@bramp, I hope this will be fixed in the library itself?\n. ",
    "ivanov": ":cake: for @josdejong for filing this and @ghguy for providing the fix. I just spent 45 minutes trying to figure out what I could possibly be doing wrong and why the website demo works, but the local version doesn't. I hope @bramp fixes this in the repo\n. :cake: for @josdejong for filing this and @ghguy for providing the fix. I just spent 45 minutes trying to figure out what I could possibly be doing wrong and why the website demo works, but the local version doesn't. I hope @bramp fixes this in the repo\n. ",
    "vitoravelino": ":+1: \n. @bramp, can you give an opinion about this? If it needs to get better and how can I improve it or if it's not necessary.\n. No worries! Take your time. :-)\n. Thanks @howardroark!\n. :+1: \n. @bramp, can you give an opinion about this? If it needs to get better and how can I improve it or if it's not necessary.\n. No worries! Take your time. :-)\n. Thanks @howardroark!\n. ",
    "kapilt": "wow, sorry about that totally wrong place/project.\n. wow, sorry about that totally wrong place/project.\n. ",
    "ulike": "rect.attr('fill','#99CCCC');\n. $(line[0]).css('cursor','pointer');\n$(line[0]).click(function(e){\n});\n. rect.attr('fill','#99CCCC');\n. $(line[0]).css('cursor','pointer');\n$(line[0]).click(function(e){\n});\n. ",
    "jonasfj": "Wow, this is really a gotcha...\nThe fix is in src/grammar.jison, change line 26 from:\n[^\\->:\\n,]+ return 'ACTOR';\nTo [^\\->:\\n,]*[^\\->:\\n,\\s]+ return 'ACTOR';\nThat requires exactly one non-whitespace character at the end of the actor terminal. But still allows the actor name to contain spaces. \n. Wow, this is really a gotcha...\nThe fix is in src/grammar.jison, change line 26 from:\n[^\\->:\\n,]+ return 'ACTOR';\nTo [^\\->:\\n,]*[^\\->:\\n,\\s]+ return 'ACTOR';\nThat requires exactly one non-whitespace character at the end of the actor terminal. But still allows the actor name to contain spaces. \n. ",
    "crabmusket": "Thanks, I never got around to diving into the code to make a pull-request for this!\n. Thanks, I never got around to diving into the code to make a pull-request for this!\n. ",
    "howardroark": "This looks very complete. Nice work!\n. I second this... As it relates to what I was thinking! bramp/js-sequence-diagrams#64\n. Hey @schrepfler ... Try compiling phantomjs v2. I have had a lot of success with more advanced html5 stuff using that. I'll see if I can drag up the binary I made...\n. So I got this working, you can see it in action in this screenshot of Mou the markdown editor...\nhttps://www.dropbox.com/s/gbwn32u825qik69/Screenshot%202014-04-19%2020.15.17.png\nI'm going to get this up to http://get-diagrams.com.  I think this Jison approach would be great for all types of diagrams that help explain a concept.  ER diagrams and venn diagrams come to mind.\nI stuck it all up here: https://github.com/freesurface/get-diagrams\n. It's all here https://github.com/freesurface/get-diagrams  \nPretty rough right now.  It's two Flask applications. The app.py file is the side that takes the GET parameter and passes it to the phantomjs binary along with a url to the second Flask application.  The second application renders the json blob as a string and executes the javascript within the webkit render engine.  The First application gets passed a base64 string from the second application and returns it as a png document. \nIf you have vagrant and virtualbox installed you can run it pretty easily.  Just make sure to bridge to your local network. You will also need to run bower to bring in all the dependencies. \nThere is still one bug though... For some reason single hyphens don't end up generating solid lines.  I have not been able to figure out the root cause yet.\n. I'm thinking that the processing part which involves phantomjs would be better as a Celery task queue.  Rather than the current double Flask app situation going on right now.  I'm going to think on that after I get this running on a production server.  Off the bat I will just run both with Gunicorn behind nginx.\n. So it's all up on a server now and running well.  All you need is vagrant and virtualbox to run the application if you want to play around.  All of the configuration is taken care of with Salt.  Some work still needs to be done to properly crop the rendered PNG.  There is also a bug related to single hyphens.  I'm not sure if it's related to URI encoding or phantomjs or webkit...\nOther than that, it's snappy enough for a first go. It's also really handy with github's write/preview functionality. Also, github caches each unique URL so that is a very nice bonus.\n![sequence](http://get-diagrams.com/sequence?json=[\n    \"Andrew-->China: Says Hello\",\n    \"Note right of China: China is thinks about it\",\n    \"China-->Andrew: How are you?\",\n    \"Andrew-->>China: I am goodie thanks!\"\n    ])\n\n. Great link! I will have to play with this a bunch. We are about to kick off a project that could learn a lot from this project. I love when stuff is open-source:) PageDown also...mmmmuah!\nI personally can only write properly in vim, my brain is just stuck that way now.\nHere is the project if you are curious, just about to start describing it in detail...\nhttps://github.com/freesurface/writers-git\nThis inspired me to think about how cool it would be to run git in the browser and build up a history without even needing a server.  Once asm.js gets rolling it will be totally doable I bet!\n. Hey @SeanHood ! Yeah I took it down because it was a bit wonky.  Though I was thinking it could be reimplemented with this... https://github.com/kevva/screenshot-stream\nBasically just need to make a static page that grabs JSON from a get param and renders the diagram (can be hosted anywhere, like GitHub pages).  Then build a super simple service that passes that URL to screenshot-stream and returns the image data as the response.  Since GitHub automatically caches images to a CDN you won't ever really need to store the file.  If you needed to store the file you could add an extra step to upload it to AWS S3 or something.. On second thought... since all this project does it turn a text sequence into svg(xml)... it should be able to run via node and exchange a sequence for svg without the need for an intermediate browser step.  That would be orders of magnitude more efficient.\nThough Raphel depends heavily on the DOM existing... so that may not be so simple.  The node module jsdom could help.. @bramp In the website version the \"china\" example seems to manage to get a line break into the \"note\".  I find if I try to do that while dividing lines with line breaks like above it breaks...\nWorks\nvar d = Diagram.parse(\n   \"Andrew->China: Says Hello\\n\" +\n   \"Note right of China: China thinks about it\\n\" +\n   \"China-->Andrew: How are you?\\n\" +\n   \"Andrew->>China: I am good thanks!\"\n  );\nDoesn't\nvar d = Diagram.parse(\n   \"Andrew->China: Says Hello\\n\" +\n   \"Note right of China: China thinks\\n about it\\n\" +\n   \"China-->Andrew: How are you?\\n\" +\n   \"Andrew->>China: I am good thanks!\"\n  );\nAny thoughts?  Thanks!. Ahhh right makes sense!  Thanks!\nCheck out this working proof of concept... https://howardroark.github.io/get-sequence-diagrams/ :). I modified the syntax slightly and now new line translate quite well... https://howardroark.github.io/get-diagram/\n![](https://get-diagram.herokuapp.com/sequence?\n    Andrew->China: Says Hello;\n    Note right of China: China thinks\\n about it;\n    China-->Andrew: How are you?;\n    Andrew->>China: I am good thanks!;\n). This looks very complete. Nice work!\n. I second this... As it relates to what I was thinking! bramp/js-sequence-diagrams#64\n. Hey @schrepfler ... Try compiling phantomjs v2. I have had a lot of success with more advanced html5 stuff using that. I'll see if I can drag up the binary I made...\n. So I got this working, you can see it in action in this screenshot of Mou the markdown editor...\nhttps://www.dropbox.com/s/gbwn32u825qik69/Screenshot%202014-04-19%2020.15.17.png\nI'm going to get this up to http://get-diagrams.com.  I think this Jison approach would be great for all types of diagrams that help explain a concept.  ER diagrams and venn diagrams come to mind.\nI stuck it all up here: https://github.com/freesurface/get-diagrams\n. It's all here https://github.com/freesurface/get-diagrams  \nPretty rough right now.  It's two Flask applications. The app.py file is the side that takes the GET parameter and passes it to the phantomjs binary along with a url to the second Flask application.  The second application renders the json blob as a string and executes the javascript within the webkit render engine.  The First application gets passed a base64 string from the second application and returns it as a png document. \nIf you have vagrant and virtualbox installed you can run it pretty easily.  Just make sure to bridge to your local network. You will also need to run bower to bring in all the dependencies. \nThere is still one bug though... For some reason single hyphens don't end up generating solid lines.  I have not been able to figure out the root cause yet.\n. I'm thinking that the processing part which involves phantomjs would be better as a Celery task queue.  Rather than the current double Flask app situation going on right now.  I'm going to think on that after I get this running on a production server.  Off the bat I will just run both with Gunicorn behind nginx.\n. So it's all up on a server now and running well.  All you need is vagrant and virtualbox to run the application if you want to play around.  All of the configuration is taken care of with Salt.  Some work still needs to be done to properly crop the rendered PNG.  There is also a bug related to single hyphens.  I'm not sure if it's related to URI encoding or phantomjs or webkit...\nOther than that, it's snappy enough for a first go. It's also really handy with github's write/preview functionality. Also, github caches each unique URL so that is a very nice bonus.\n![sequence](http://get-diagrams.com/sequence?json=[\n    \"Andrew-->China: Says Hello\",\n    \"Note right of China: China is thinks about it\",\n    \"China-->Andrew: How are you?\",\n    \"Andrew-->>China: I am goodie thanks!\"\n    ])\n\n. Great link! I will have to play with this a bunch. We are about to kick off a project that could learn a lot from this project. I love when stuff is open-source:) PageDown also...mmmmuah!\nI personally can only write properly in vim, my brain is just stuck that way now.\nHere is the project if you are curious, just about to start describing it in detail...\nhttps://github.com/freesurface/writers-git\nThis inspired me to think about how cool it would be to run git in the browser and build up a history without even needing a server.  Once asm.js gets rolling it will be totally doable I bet!\n. Hey @SeanHood ! Yeah I took it down because it was a bit wonky.  Though I was thinking it could be reimplemented with this... https://github.com/kevva/screenshot-stream\nBasically just need to make a static page that grabs JSON from a get param and renders the diagram (can be hosted anywhere, like GitHub pages).  Then build a super simple service that passes that URL to screenshot-stream and returns the image data as the response.  Since GitHub automatically caches images to a CDN you won't ever really need to store the file.  If you needed to store the file you could add an extra step to upload it to AWS S3 or something.. On second thought... since all this project does it turn a text sequence into svg(xml)... it should be able to run via node and exchange a sequence for svg without the need for an intermediate browser step.  That would be orders of magnitude more efficient.\nThough Raphel depends heavily on the DOM existing... so that may not be so simple.  The node module jsdom could help.. @bramp In the website version the \"china\" example seems to manage to get a line break into the \"note\".  I find if I try to do that while dividing lines with line breaks like above it breaks...\nWorks\nvar d = Diagram.parse(\n   \"Andrew->China: Says Hello\\n\" +\n   \"Note right of China: China thinks about it\\n\" +\n   \"China-->Andrew: How are you?\\n\" +\n   \"Andrew->>China: I am good thanks!\"\n  );\nDoesn't\nvar d = Diagram.parse(\n   \"Andrew->China: Says Hello\\n\" +\n   \"Note right of China: China thinks\\n about it\\n\" +\n   \"China-->Andrew: How are you?\\n\" +\n   \"Andrew->>China: I am good thanks!\"\n  );\nAny thoughts?  Thanks!. Ahhh right makes sense!  Thanks!\nCheck out this working proof of concept... https://howardroark.github.io/get-sequence-diagrams/ :). I modified the syntax slightly and now new line translate quite well... https://howardroark.github.io/get-diagram/\n![](https://get-diagram.herokuapp.com/sequence?\n    Andrew->China: Says Hello;\n    Note right of China: China thinks\\n about it;\n    China-->Andrew: How are you?;\n    Andrew->>China: I am good thanks!;\n). ",
    "SAprelov": "1 year)\n. 1 year)\n. ",
    "schrepfler": "Is this still on the table? Any chance someone might pick up and port this?\n. I'm working on this: https://github.com/schrepfler/sequence-diagram-generator \nUnfortunately there's an underlying issue with SVG phantomjs rendering of the wavy full line, I've submitted this upstream, if interested I'll send you the ticket.\n. I tried rendering one of the svg based forks, it seems the wavy full lines get properly rendered now so I'll be waiting for the final release to make a refresh of the library.\n. My project is more/less usable now with the bump to snapsvg, no more issues with the un-renderable arrow. If anyone would like to give it a try and to iron out the quirks that would be great.. Nice effort @StefRave!\n. The suspension is killing us!\n\n. The progress on this seems to have stopped. Any hope of it getting picked up?\n. I don't think it's abandoned.\n. What happened with this effort, it would still be a great move I think.. This can be closed now.. This can be closed now.. Let's see if the move to snapsvg will help (if/when.). Is this still on the table? Any chance someone might pick up and port this?\n. I'm working on this: https://github.com/schrepfler/sequence-diagram-generator \nUnfortunately there's an underlying issue with SVG phantomjs rendering of the wavy full line, I've submitted this upstream, if interested I'll send you the ticket.\n. I tried rendering one of the svg based forks, it seems the wavy full lines get properly rendered now so I'll be waiting for the final release to make a refresh of the library.\n. My project is more/less usable now with the bump to snapsvg, no more issues with the un-renderable arrow. If anyone would like to give it a try and to iron out the quirks that would be great.. Nice effort @StefRave!\n. The suspension is killing us!\n\n. The progress on this seems to have stopped. Any hope of it getting picked up?\n. I don't think it's abandoned.\n. What happened with this effort, it would still be a great move I think.. This can be closed now.. This can be closed now.. Let's see if the move to snapsvg will help (if/when.). ",
    "ctzurcanu": "an even better choice IMO: svg.js\n. I'm sorry I did not read that with more attention. It built.\n. kudos! I will try to modify your lib to use svg.js instead of raphael. hope to bring you the good news soon.\n. an even better choice IMO: svg.js\n. I'm sorry I did not read that with more attention. It built.\n. kudos! I will try to modify your lib to use svg.js instead of raphael. hope to bring you the good news soon.\n. ",
    "elf-pavlik": ":+1: npm package & CLI\n. :+1: npm package & CLI\n. ",
    "ainthek": "\n1 on this\n. - 1 on this\n. \n",
    "nexcvon": "Try this: https://stackedit-beta.herokuapp.com\n. Try this: https://stackedit-beta.herokuapp.com\n. ",
    "SeanHood": "@howardroark This get-diagrams implementation sounds exactly what I'm looking for but all of the links are dead. Is the source hosted elsewhere?. @howardroark This get-diagrams implementation sounds exactly what I'm looking for but all of the links are dead. Is the source hosted elsewhere?. ",
    "ghost": "found the place where font-size was set to 16\n. Sorry about that! Wrong repo!. found the place where font-size was set to 16\n. Sorry about that! Wrong repo!. ",
    "devsnd": "No biggie. Better Nate than Lever. :+1: \n. No biggie. Better Nate than Lever. :+1: \n. ",
    "ooii": "Thanks for your reply.\nI'll use right now the first link to have it running locally.\n. Sorry for not providing this information: osx and safari. On chrome, it works well. However, it used to work perfectly with safari.\n. Thanks for your reply.\nI'll use right now the first link to have it running locally.\n. Sorry for not providing this information: osx and safari. On chrome, it works well. However, it used to work perfectly with safari.\n. ",
    "PeterDaveHello": "refer to cdnjs/cdnjs#3504, seems there is no need, please feel free to close this issue, I don't know if the collaborators/owners already know this issue report and have decide to do something or not, so I'll leave it as opened for a while.\n. refer to cdnjs/cdnjs#3504, seems there is no need, please feel free to close this issue, I don't know if the collaborators/owners already know this issue report and have decide to do something or not, so I'll leave it as opened for a while.\n. ",
    "bruriaP": "how can i run it in window\n. D:\\diagramgulp>gulp build\n[12:00:58] Using gulpfile D:\\diagramgulp\\gulpfile.js\n[12:00:58] Starting 'build'...\nevents.js:160\n      throw er; // Unhandled 'error' event\n      ^\nError: Parse error on line 1:\n(function () {  \"use\n-^\nExpecting '%%', 'START', 'LEX_BLOCK', 'ACTION', 'OPTIONS', 'PARSE_PARAM', 'LEFT', 'RIGHT', 'NONASSOC', got 'ID'\n    at Object.parseError (D:\\diagramgulp\\node_modules\\ebnf-parser\\parser.js:211:15)\n    at Object.parse (D:\\diagramgulp\\node_modules\\ebnf-parser\\parser.js:269:22)\n    at Object.parse (D:\\diagramgulp\\node_modules\\ebnf-parser\\ebnf-parser.js:5:55)\n    at Jison_Generator [as constructor] (D:\\diagramgulp\\node_modules\\jison\\lib\\jison.js:83:30)\n    at (anonymous function) [as constructor] (D:\\diagramgulp\\node_modules\\jison\\lib\\util\\typal.js:23:28)\n    at new o.constructor (D:\\diagramgulp\\node_modules\\jison\\lib\\util\\typal.js:77:70)\n    at new Jison_Generator (D:\\diagramgulp\\node_modules\\jison\\lib\\jison.js:1906:20)\n    at DestroyableTransform._transform (D:\\diagramgulp\\node_modules\\gulp-jison\\index.js:24:44)\n    at DestroyableTransform.Transform._read (D:\\diagramgulp\\node_modules\\gulp-jison\\node_modules\\readable-stream\\lib_stream_transform.js:184:10)\n    at DestroyableTransform.Transform._write (D:\\diagramgulp\\node_modules\\gulp-jison\\node_modules\\readable-stream\\lib_stream_transform.js:172:12)\n. its not working\n. how can i run it in window\n. D:\\diagramgulp>gulp build\n[12:00:58] Using gulpfile D:\\diagramgulp\\gulpfile.js\n[12:00:58] Starting 'build'...\nevents.js:160\n      throw er; // Unhandled 'error' event\n      ^\nError: Parse error on line 1:\n(function () {  \"use\n-^\nExpecting '%%', 'START', 'LEX_BLOCK', 'ACTION', 'OPTIONS', 'PARSE_PARAM', 'LEFT', 'RIGHT', 'NONASSOC', got 'ID'\n    at Object.parseError (D:\\diagramgulp\\node_modules\\ebnf-parser\\parser.js:211:15)\n    at Object.parse (D:\\diagramgulp\\node_modules\\ebnf-parser\\parser.js:269:22)\n    at Object.parse (D:\\diagramgulp\\node_modules\\ebnf-parser\\ebnf-parser.js:5:55)\n    at Jison_Generator [as constructor] (D:\\diagramgulp\\node_modules\\jison\\lib\\jison.js:83:30)\n    at (anonymous function) [as constructor] (D:\\diagramgulp\\node_modules\\jison\\lib\\util\\typal.js:23:28)\n    at new o.constructor (D:\\diagramgulp\\node_modules\\jison\\lib\\util\\typal.js:77:70)\n    at new Jison_Generator (D:\\diagramgulp\\node_modules\\jison\\lib\\jison.js:1906:20)\n    at DestroyableTransform._transform (D:\\diagramgulp\\node_modules\\gulp-jison\\index.js:24:44)\n    at DestroyableTransform.Transform._read (D:\\diagramgulp\\node_modules\\gulp-jison\\node_modules\\readable-stream\\lib_stream_transform.js:184:10)\n    at DestroyableTransform.Transform._write (D:\\diagramgulp\\node_modules\\gulp-jison\\node_modules\\readable-stream\\lib_stream_transform.js:172:12)\n. its not working\n. ",
    "riaan53": "This looks fantastic! Any chance for a merge?\n. This looks fantastic! Any chance for a merge?\n. ",
    "Restuta": "@bramp are you going to merge this neat PR? @winfinit thanks for that. \n. @bramp are you going to merge this neat PR? @winfinit thanks for that. \n. ",
    "RoryBecker": "I'm very interested in this sort of functionality. \nMight I observe that MS have dropped support for IE7, IE8 and IE10 (On all platforms) and IE9 (on anything other than Vista or Server 2008) as of today. Perhaps this helps pave the way for \"Dropping old IE support\"\n. I'm very interested in this sort of functionality. \nMight I observe that MS have dropped support for IE7, IE8 and IE10 (On all platforms) and IE9 (on anything other than Vista or Server 2008) as of today. Perhaps this helps pave the way for \"Dropping old IE support\"\n. ",
    "CaptainQuirk": "Hi there,\nI would love to see this coming up in a future release.\nIf you plan on dropping vml support, you could start by preventing your lib to work if launched in IE lte 9. It would allow this feature to be integrated while you get to replace the rendering engine.\nThanks in advance !. I don't think Raphaeljs that serves as the rendering engine can work outside a browser. You should check diagrams. Hi there,\nI would love to see this coming up in a future release.\nIf you plan on dropping vml support, you could start by preventing your lib to work if launched in IE lte 9. It would allow this feature to be integrated while you get to replace the rendering engine.\nThanks in advance !. I don't think Raphaeljs that serves as the rendering engine can work outside a browser. You should check diagrams. ",
    "bruciebruce": "I am also having this issue.  My built file is very different from the one that Andrew has built.  I have attached a screenshot from chrome.  Using ruby 1.8.7 with ubuntu 14.04.\n\n. Also, noticed that my built file starts very different from Andrew's file.  His file starts with a (!) exclamation mark.  Mine does not.  (I also have it formatted for debugging, but you see that the first character is different is not (!).\n\n. Okay, so this ! comes from:\nhttps://www.npmjs.org/package/uglifyjs\nnegate-iife (default !beautify) -- prefer negation, rather than parens, for \"Immediately-Called Function Expressions\". This defaults to true when beautification is off, and false if beautification is on; pass it manually to force a value.\nI cannot force this switch in the Makefile.  Can someone please give me the syntax for forcing the !\nso that I can come close to making the file from the build script?\nThanks!\n. Thought this was a jScript error (executing on windows), so I put this on the same ubuntu w/ apache2\nand am getting the same errors:\n--------------- start of messages -------------\nUse of getPreventDefault() is deprecated.  Use defaultPrevented instead. new.html\nGET http://localhost/new.html [HTTP/1.1 200 OK 0ms]\nGET https://fonts.googleapis.com/css [HTTP/1.1 200 OK 55ms]\nGET http://localhost/css/style.css [HTTP/1.1 404 Not Found 2ms]\nGET http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js [HTTP/1.1 304 Not Modified 51ms]\nGET http://localhost/ace.js [HTTP/1.1 200 OK 43ms]\nGET http://localhost/underscore-min.js [HTTP/1.1 200 OK 21ms]\nGET http://localhost/raphael-min.js [HTTP/1.1 200 OK 32ms]\nGET http://localhost/sequence-diagram-min.js [HTTP/1.1 200 OK 32ms]\nGET http://localhost/svginnerhtml.min.js [HTTP/1.1 200 OK 21ms]\nSyntaxError: Using //@ to indicate sourceMappingURL pragmas is deprecated. Use //# instead jquery.min.js:4\nError: http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js is being assigned a //# sourceMappingURL, but already has one\nError: http://localhost/underscore-min.js is being assigned a //# sourceMappingURL, but already has one\nError: http://localhost/sequence-diagram-min.js is being assigned a //# sourceMappingURL, but already has one\nReferenceError: grammar is not defined sequence-diagram-min.js:6\nGET http://www.google-analytics.com/ga.js [HTTP/1.1 304 Not Modified 32ms]\nReferenceError: Diagram is not defined new.html:110\nGET http://localhost/theme-crimson_editor.js [HTTP/1.1 200 OK 0ms]\nGET http://localhost/mode-asciidoc.js [HTTP/1.1 200 OK 0ms]\nReferenceError: define is not defined theme-crimson_editor.js:1\nTypeError: a is null ace.js:1\nReferenceError: define is not defined mode-asciidoc.js:1\nTypeError: a is null ace.js:1\nGET http://www.google-analytics.com/__utm.gif [HTTP/1.1 200 OK 16ms]\n--------------- end of messages --------------\n. Here is my config:\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# nvm use v0.10.26\nNow using node v0.10.26\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# npm update\nnpm http GET https://registry.npmjs.org/underscore\nnpm http GET https://registry.npmjs.org/raphael\nnpm http GET https://registry.npmjs.org//\nnpm http GET https://registry.npmjs.org/jison\nnpm http GET https://registry.npmjs.org/jshint\nnpm http GET https://registry.npmjs.org/uglify-js\nnpm http 304 https://registry.npmjs.org/underscore\nnpm http 200 https://registry.npmjs.org//\nnpm http 304 https://registry.npmjs.org/jshint\nnpm http 304 https://registry.npmjs.org/uglify-js\nnpm http 304 https://registry.npmjs.org/jison\nnpm http 304 https://registry.npmjs.org/raphael\nnpm http GET https://registry.npmjs.org/underscore/1.4.4\nnpm http GET https://registry.npmjs.org/jshint/2.0.1\nnpm http GET https://registry.npmjs.org/uglify-js/2.3.6\nnpm http GET https://registry.npmjs.org/jison/0.4.6\nnpm http 304 https://registry.npmjs.org/uglify-js/2.3.6\nnpm http 304 https://registry.npmjs.org/jison/0.4.6\nnpm http 304 https://registry.npmjs.org/underscore/1.4.4\nnpm http 304 https://registry.npmjs.org/jshint/2.0.1\nunderscore@1.4.4 node_modules/underscore\neve@0.4.1 node_modules/raphael/node_modules/eve\nnpm http GET https://registry.npmjs.org/ebnf-parser\nnpm http GET https://registry.npmjs.org/escodegen/0.0.21\nnpm http GET https://registry.npmjs.org/esprima\nnpm http GET https://registry.npmjs.org/lex-parser\nnpm http GET https://registry.npmjs.org/nomnom/1.5.2\nnpm http GET https://registry.npmjs.org/jison-lex\nnpm http GET https://registry.npmjs.org/cjson\nnpm http GET https://registry.npmjs.org/JSONSelect/0.4.0\nnpm http 304 https://registry.npmjs.org/esprima\nnpm http GET https://registry.npmjs.org/async\nnpm http GET https://registry.npmjs.org/source-map\nnpm http 304 https://registry.npmjs.org/lex-parser\nnpm http GET https://registry.npmjs.org/optimist\nnpm http 304 https://registry.npmjs.org/escodegen/0.0.21\nnpm http 304 https://registry.npmjs.org/ebnf-parser\nnpm http 304 https://registry.npmjs.org/async\nnpm http 304 https://registry.npmjs.org/source-map\nnpm http 304 https://registry.npmjs.org/cjson\nnpm http 304 https://registry.npmjs.org/optimist\nnpm http 304 https://registry.npmjs.org/jison-lex\nnpm http 304 https://registry.npmjs.org/JSONSelect/0.4.0\nnpm http 304 https://registry.npmjs.org/nomnom/1.5.2\nnpm http GET https://registry.npmjs.org/wordwrap\nnpm http 304 https://registry.npmjs.org/wordwrap\nnpm http GET https://registry.npmjs.org/colors\nnpm http 304 https://registry.npmjs.org/colors\nnpm http GET https://registry.npmjs.org/amdefine\nnpm http GET https://registry.npmjs.org/estraverse\nnpm http 304 https://registry.npmjs.org/amdefine\nnpm http 304 https://registry.npmjs.org/estraverse\nuglify-js@2.3.6 node_modules/uglify-js\n\u251c\u2500\u2500 async@0.2.10\n\u251c\u2500\u2500 optimist@0.3.7 (wordwrap@0.0.2)\n\u2514\u2500\u2500 source-map@0.1.38 (amdefine@0.1.0)\njison@0.4.6 node_modules/jison\n\u251c\u2500\u2500 cjson@0.2.1\n\u251c\u2500\u2500 jison-lex@0.2.1\n\u251c\u2500\u2500 lex-parser@0.1.4\n\u251c\u2500\u2500 ebnf-parser@0.1.10\n\u251c\u2500\u2500 nomnom@1.5.2 (colors@0.5.1, underscore@1.1.7)\n\u251c\u2500\u2500 JSONSelect@0.4.0\n\u251c\u2500\u2500 escodegen@0.0.21 (estraverse@0.0.4, source-map@0.1.38)\n\u2514\u2500\u2500 esprima@1.0.4\nnpm http GET https://registry.npmjs.org/shelljs\nnpm http GET https://registry.npmjs.org/cli\nnpm http GET https://registry.npmjs.org/minimatch\nnpm http GET https://registry.npmjs.org/console-browserify\nnpm http 304 https://registry.npmjs.org/cli\nnpm http 304 https://registry.npmjs.org/shelljs\nnpm http 304 https://registry.npmjs.org/console-browserify\nnpm http 304 https://registry.npmjs.org/minimatch\nnpm http GET https://registry.npmjs.org/lru-cache\nnpm http GET https://registry.npmjs.org/sigmund\nnpm http GET https://registry.npmjs.org/glob\nnpm http 304 https://registry.npmjs.org/lru-cache\nnpm http 304 https://registry.npmjs.org/sigmund\nnpm http 304 https://registry.npmjs.org/glob\nnpm http GET https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/once\nnpm http GET https://registry.npmjs.org/graceful-fs\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/once\nnpm http 304 https://registry.npmjs.org/graceful-fs\njshint@2.0.1 node_modules/jshint\n\u251c\u2500\u2500 console-browserify@0.1.6\n\u251c\u2500\u2500 minimatch@0.4.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 shelljs@0.1.4\n\u2514\u2500\u2500 cli@0.4.5 (glob@4.0.5)\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# \nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# jison -V\n0.4.15\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# uglifyjs -V\nuglify-js 2.4.15\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# jshint -v\njshint v2.5.4\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# node -v\nv0.10.26\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# \n. Roman,\nIt was the jison version that was the problem.  Now that I am using the same version that you are I do not have problems.\nThank you for helping me!\n-Bruce\nOn Friday, August 29, 2014 8:44 PM, Roman Jurkov notifications@github.com wrote:\nBruce,\nis this still an issue for you, or version of jison was a final issue?\n\u2014\nReply to this email directly or view it on GitHub.\n. root@bruce-VirtualBox:/devel/js-sequence/sql-diagrams# jison -V\n0.4.13\nRoman helped me to solve this.\n. # jison -V\n0.4.13\nOn Thursday, September 4, 2014 10:56 AM, jasonarcala-nliven notifications@github.com wrote:\nthis is my config\n$ npm version                                                        [9:12:52]\n{ http_parser: '1.0',\nnode: '0.10.31',\nv8: '3.14.5.9',\nares: '1.9.0-DEV',\nuv: '0.10.28',\nzlib: '1.2.3',a\nmodules: '11',\nopenssl: '1.0.1i',\nnpm: '1.4.25',\n'js-sequence-diagrams': '1.0.3' }\n$ gem -v                                                             [9:18:39]\n2.0.14\n$ uglifyjs -V                                                        [9:20:14]\nuglify-js 2.4.15\n$ jison -V                                                           [9:20:51]\n0.4.15\n$ jshint -v                                                          [9:22:33]\njshint v2.5.5\n$ nvm ls                                                                                                                                              [10:42:20]\nv0.10.13\n->  v0.10.26\nv0.11.13\n\u2014\nReply to this email directly or view it on GitHub.\n. I am also having this issue.  My built file is very different from the one that Andrew has built.  I have attached a screenshot from chrome.  Using ruby 1.8.7 with ubuntu 14.04.\n\n. Also, noticed that my built file starts very different from Andrew's file.  His file starts with a (!) exclamation mark.  Mine does not.  (I also have it formatted for debugging, but you see that the first character is different is not (!).\n\n. Okay, so this ! comes from:\nhttps://www.npmjs.org/package/uglifyjs\nnegate-iife (default !beautify) -- prefer negation, rather than parens, for \"Immediately-Called Function Expressions\". This defaults to true when beautification is off, and false if beautification is on; pass it manually to force a value.\nI cannot force this switch in the Makefile.  Can someone please give me the syntax for forcing the !\nso that I can come close to making the file from the build script?\nThanks!\n. Thought this was a jScript error (executing on windows), so I put this on the same ubuntu w/ apache2\nand am getting the same errors:\n--------------- start of messages -------------\nUse of getPreventDefault() is deprecated.  Use defaultPrevented instead. new.html\nGET http://localhost/new.html [HTTP/1.1 200 OK 0ms]\nGET https://fonts.googleapis.com/css [HTTP/1.1 200 OK 55ms]\nGET http://localhost/css/style.css [HTTP/1.1 404 Not Found 2ms]\nGET http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js [HTTP/1.1 304 Not Modified 51ms]\nGET http://localhost/ace.js [HTTP/1.1 200 OK 43ms]\nGET http://localhost/underscore-min.js [HTTP/1.1 200 OK 21ms]\nGET http://localhost/raphael-min.js [HTTP/1.1 200 OK 32ms]\nGET http://localhost/sequence-diagram-min.js [HTTP/1.1 200 OK 32ms]\nGET http://localhost/svginnerhtml.min.js [HTTP/1.1 200 OK 21ms]\nSyntaxError: Using //@ to indicate sourceMappingURL pragmas is deprecated. Use //# instead jquery.min.js:4\nError: http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js is being assigned a //# sourceMappingURL, but already has one\nError: http://localhost/underscore-min.js is being assigned a //# sourceMappingURL, but already has one\nError: http://localhost/sequence-diagram-min.js is being assigned a //# sourceMappingURL, but already has one\nReferenceError: grammar is not defined sequence-diagram-min.js:6\nGET http://www.google-analytics.com/ga.js [HTTP/1.1 304 Not Modified 32ms]\nReferenceError: Diagram is not defined new.html:110\nGET http://localhost/theme-crimson_editor.js [HTTP/1.1 200 OK 0ms]\nGET http://localhost/mode-asciidoc.js [HTTP/1.1 200 OK 0ms]\nReferenceError: define is not defined theme-crimson_editor.js:1\nTypeError: a is null ace.js:1\nReferenceError: define is not defined mode-asciidoc.js:1\nTypeError: a is null ace.js:1\nGET http://www.google-analytics.com/__utm.gif [HTTP/1.1 200 OK 16ms]\n--------------- end of messages --------------\n. Here is my config:\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# nvm use v0.10.26\nNow using node v0.10.26\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# npm update\nnpm http GET https://registry.npmjs.org/underscore\nnpm http GET https://registry.npmjs.org/raphael\nnpm http GET https://registry.npmjs.org//\nnpm http GET https://registry.npmjs.org/jison\nnpm http GET https://registry.npmjs.org/jshint\nnpm http GET https://registry.npmjs.org/uglify-js\nnpm http 304 https://registry.npmjs.org/underscore\nnpm http 200 https://registry.npmjs.org//\nnpm http 304 https://registry.npmjs.org/jshint\nnpm http 304 https://registry.npmjs.org/uglify-js\nnpm http 304 https://registry.npmjs.org/jison\nnpm http 304 https://registry.npmjs.org/raphael\nnpm http GET https://registry.npmjs.org/underscore/1.4.4\nnpm http GET https://registry.npmjs.org/jshint/2.0.1\nnpm http GET https://registry.npmjs.org/uglify-js/2.3.6\nnpm http GET https://registry.npmjs.org/jison/0.4.6\nnpm http 304 https://registry.npmjs.org/uglify-js/2.3.6\nnpm http 304 https://registry.npmjs.org/jison/0.4.6\nnpm http 304 https://registry.npmjs.org/underscore/1.4.4\nnpm http 304 https://registry.npmjs.org/jshint/2.0.1\nunderscore@1.4.4 node_modules/underscore\neve@0.4.1 node_modules/raphael/node_modules/eve\nnpm http GET https://registry.npmjs.org/ebnf-parser\nnpm http GET https://registry.npmjs.org/escodegen/0.0.21\nnpm http GET https://registry.npmjs.org/esprima\nnpm http GET https://registry.npmjs.org/lex-parser\nnpm http GET https://registry.npmjs.org/nomnom/1.5.2\nnpm http GET https://registry.npmjs.org/jison-lex\nnpm http GET https://registry.npmjs.org/cjson\nnpm http GET https://registry.npmjs.org/JSONSelect/0.4.0\nnpm http 304 https://registry.npmjs.org/esprima\nnpm http GET https://registry.npmjs.org/async\nnpm http GET https://registry.npmjs.org/source-map\nnpm http 304 https://registry.npmjs.org/lex-parser\nnpm http GET https://registry.npmjs.org/optimist\nnpm http 304 https://registry.npmjs.org/escodegen/0.0.21\nnpm http 304 https://registry.npmjs.org/ebnf-parser\nnpm http 304 https://registry.npmjs.org/async\nnpm http 304 https://registry.npmjs.org/source-map\nnpm http 304 https://registry.npmjs.org/cjson\nnpm http 304 https://registry.npmjs.org/optimist\nnpm http 304 https://registry.npmjs.org/jison-lex\nnpm http 304 https://registry.npmjs.org/JSONSelect/0.4.0\nnpm http 304 https://registry.npmjs.org/nomnom/1.5.2\nnpm http GET https://registry.npmjs.org/wordwrap\nnpm http 304 https://registry.npmjs.org/wordwrap\nnpm http GET https://registry.npmjs.org/colors\nnpm http 304 https://registry.npmjs.org/colors\nnpm http GET https://registry.npmjs.org/amdefine\nnpm http GET https://registry.npmjs.org/estraverse\nnpm http 304 https://registry.npmjs.org/amdefine\nnpm http 304 https://registry.npmjs.org/estraverse\nuglify-js@2.3.6 node_modules/uglify-js\n\u251c\u2500\u2500 async@0.2.10\n\u251c\u2500\u2500 optimist@0.3.7 (wordwrap@0.0.2)\n\u2514\u2500\u2500 source-map@0.1.38 (amdefine@0.1.0)\njison@0.4.6 node_modules/jison\n\u251c\u2500\u2500 cjson@0.2.1\n\u251c\u2500\u2500 jison-lex@0.2.1\n\u251c\u2500\u2500 lex-parser@0.1.4\n\u251c\u2500\u2500 ebnf-parser@0.1.10\n\u251c\u2500\u2500 nomnom@1.5.2 (colors@0.5.1, underscore@1.1.7)\n\u251c\u2500\u2500 JSONSelect@0.4.0\n\u251c\u2500\u2500 escodegen@0.0.21 (estraverse@0.0.4, source-map@0.1.38)\n\u2514\u2500\u2500 esprima@1.0.4\nnpm http GET https://registry.npmjs.org/shelljs\nnpm http GET https://registry.npmjs.org/cli\nnpm http GET https://registry.npmjs.org/minimatch\nnpm http GET https://registry.npmjs.org/console-browserify\nnpm http 304 https://registry.npmjs.org/cli\nnpm http 304 https://registry.npmjs.org/shelljs\nnpm http 304 https://registry.npmjs.org/console-browserify\nnpm http 304 https://registry.npmjs.org/minimatch\nnpm http GET https://registry.npmjs.org/lru-cache\nnpm http GET https://registry.npmjs.org/sigmund\nnpm http GET https://registry.npmjs.org/glob\nnpm http 304 https://registry.npmjs.org/lru-cache\nnpm http 304 https://registry.npmjs.org/sigmund\nnpm http 304 https://registry.npmjs.org/glob\nnpm http GET https://registry.npmjs.org/inherits\nnpm http GET https://registry.npmjs.org/once\nnpm http GET https://registry.npmjs.org/graceful-fs\nnpm http 304 https://registry.npmjs.org/inherits\nnpm http 304 https://registry.npmjs.org/once\nnpm http 304 https://registry.npmjs.org/graceful-fs\njshint@2.0.1 node_modules/jshint\n\u251c\u2500\u2500 console-browserify@0.1.6\n\u251c\u2500\u2500 minimatch@0.4.0 (sigmund@1.0.0, lru-cache@2.5.0)\n\u251c\u2500\u2500 shelljs@0.1.4\n\u2514\u2500\u2500 cli@0.4.5 (glob@4.0.5)\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# \nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# jison -V\n0.4.15\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# uglifyjs -V\nuglify-js 2.4.15\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# jshint -v\njshint v2.5.4\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# node -v\nv0.10.26\nroot@bruce-VirtualBox:/devel/js-sequence/js-sequence-diagrams-master# \n. Roman,\nIt was the jison version that was the problem.  Now that I am using the same version that you are I do not have problems.\nThank you for helping me!\n-Bruce\nOn Friday, August 29, 2014 8:44 PM, Roman Jurkov notifications@github.com wrote:\nBruce,\nis this still an issue for you, or version of jison was a final issue?\n\u2014\nReply to this email directly or view it on GitHub.\n. root@bruce-VirtualBox:/devel/js-sequence/sql-diagrams# jison -V\n0.4.13\nRoman helped me to solve this.\n. # jison -V\n0.4.13\nOn Thursday, September 4, 2014 10:56 AM, jasonarcala-nliven notifications@github.com wrote:\nthis is my config\n$ npm version                                                        [9:12:52]\n{ http_parser: '1.0',\nnode: '0.10.31',\nv8: '3.14.5.9',\nares: '1.9.0-DEV',\nuv: '0.10.28',\nzlib: '1.2.3',a\nmodules: '11',\nopenssl: '1.0.1i',\nnpm: '1.4.25',\n'js-sequence-diagrams': '1.0.3' }\n$ gem -v                                                             [9:18:39]\n2.0.14\n$ uglifyjs -V                                                        [9:20:14]\nuglify-js 2.4.15\n$ jison -V                                                           [9:20:51]\n0.4.15\n$ jshint -v                                                          [9:22:33]\njshint v2.5.5\n$ nvm ls                                                                                                                                              [10:42:20]\nv0.10.13\n->  v0.10.26\nv0.11.13\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "jasonarcala-nliven": "which version of jison did you end up using to resolve your problem? I'm having the same issue.\n. this is my config\n$ npm version                                                        [9:12:52]\n{ http_parser: '1.0',\n  node: '0.10.31',\n  v8: '3.14.5.9',\n  ares: '1.9.0-DEV',\n  uv: '0.10.28',\n  zlib: '1.2.3',a\n  modules: '11',\n  openssl: '1.0.1i',\n  npm: '1.4.25',\n  'js-sequence-diagrams': '1.0.3' }\n$ gem -v                                                             [9:18:39]\n2.0.14\n$ uglifyjs -V                                                        [9:20:14]\nuglify-js 2.4.15\n$ jison -V                                                           [9:20:51]\n0.4.15\n$ jshint -v                                                          [9:22:33]\njshint v2.5.5\n$ nvm ls                                                                                                                                              [10:42:20]\n    v0.10.13\n->  v0.10.26\n    v0.11.13\n. try using jison 0.4.13 and jshint 2.5.10\n. which version of jison did you end up using to resolve your problem? I'm having the same issue.\n. this is my config\n$ npm version                                                        [9:12:52]\n{ http_parser: '1.0',\n  node: '0.10.31',\n  v8: '3.14.5.9',\n  ares: '1.9.0-DEV',\n  uv: '0.10.28',\n  zlib: '1.2.3',a\n  modules: '11',\n  openssl: '1.0.1i',\n  npm: '1.4.25',\n  'js-sequence-diagrams': '1.0.3' }\n$ gem -v                                                             [9:18:39]\n2.0.14\n$ uglifyjs -V                                                        [9:20:14]\nuglify-js 2.4.15\n$ jison -V                                                           [9:20:51]\n0.4.15\n$ jshint -v                                                          [9:22:33]\njshint v2.5.5\n$ nvm ls                                                                                                                                              [10:42:20]\n    v0.10.13\n->  v0.10.26\n    v0.11.13\n. try using jison 0.4.13 and jshint 2.5.10\n. ",
    "davidw": "I'm seeing this with\njison 0.4.15\njshint v2.5.11\nuglify-js 2.4.16\n. @jasonarcala-nliven thanks, that works!  Not very nice that those guys have broken their API's in point releases.\n. @bramp having either comments on a line to themselves, or being able to quote them would work for me.  Awesome bit of code, by the way - I'm using it to make diagrams of Erlang process interections!\n. Sure, I'll give it a go: how does one run them?  make test doesn't seem to do anything.\n. I'm seeing this with\njison 0.4.15\njshint v2.5.11\nuglify-js 2.4.16\n. @jasonarcala-nliven thanks, that works!  Not very nice that those guys have broken their API's in point releases.\n. @bramp having either comments on a line to themselves, or being able to quote them would work for me.  Awesome bit of code, by the way - I'm using it to make diagrams of Erlang process interections!\n. Sure, I'll give it a go: how does one run them?  make test doesn't seem to do anything.\n. ",
    "mozfreddyb": "I re-tested on a clean profile with Aurora (33) and Nightly (34). And I did not see this on either.\nThe breakage may be related to one of my many add-ons (NoScript, ABP, RefControl etc.).\nIf nobody objects I'd suggest we close this.\n. I re-tested on a clean profile with Aurora (33) and Nightly (34). And I did not see this on either.\nThe breakage may be related to one of my many add-ons (NoScript, ABP, RefControl etc.).\nIf nobody objects I'd suggest we close this.\n. ",
    "bennyn": "@foolyb: This fork supports colors:\n- https://github.com/winfinit/js-sequence-diagrams\n. It also doesn't work if you try to write the hash mark with an HTML entity like:\nhtml\n<div id=\"diagram\">\n  A->B: /rest/&#35;{id}/call\n</div>\n. Hi @bramp, thanks for your reply and Happy New Year!\nIn my case A->B: /rest/#{id}/call the hash sign is not a comment. It's part of the value / text and refers to a markup expression. So it would be nice if the hash tag will be escaped so that it will show up in the rendered diagram.\n. @foolyb: This fork supports colors:\n- https://github.com/winfinit/js-sequence-diagrams\n. It also doesn't work if you try to write the hash mark with an HTML entity like:\nhtml\n<div id=\"diagram\">\n  A->B: /rest/&#35;{id}/call\n</div>\n. Hi @bramp, thanks for your reply and Happy New Year!\nIn my case A->B: /rest/#{id}/call the hash sign is not a comment. It's part of the value / text and refers to a markup expression. So it would be nice if the hash tag will be escaped so that it will show up in the rendered diagram.\n. ",
    "foolyb": "@bennyn thanks\n. @bennyn thanks\n. ",
    "lipis": "Yes, maybe it's not worth to remove it.. But the idea is to use as less dependencies as possible, so in order to include this project, we don't need force ourselves to include underscore, lodash, jQuery, etc.. Of course if the project is heavily depending on something like Rapha\u00ebl, for sure.\nThe choice is yours :) It's a cool project.. keep it up!\n. Yes, maybe it's not worth to remove it.. But the idea is to use as less dependencies as possible, so in order to include this project, we don't need force ourselves to include underscore, lodash, jQuery, etc.. Of course if the project is heavily depending on something like Rapha\u00ebl, for sure.\nThe choice is yours :) It's a cool project.. keep it up!\n. ",
    "abishekrsrikaanth": ":+1: \n. :+1: \n. ",
    "praveenscience": "Yes, Andrew.\nI don't know how to include that piece to the diagram. Yeah, I will try as you have explained. If any help is needed, can you please guide me? Thanks in advance.\nCheers,\nPraveen\n. Yes, Andrew.\nI don't know how to include that piece to the diagram. Yeah, I will try as you have explained. If any help is needed, can you please guide me? Thanks in advance.\nCheers,\nPraveen\n. ",
    "cyChop": "Just an afterthought: returning the paper after drawing the SVG would leave these options available.\nTo do it the hard way, here is a skeleton of something that worked on your gh-page:\n``` css\nwrapper { height: 200px; width: 200px; }\nwrapper svg { height: 100%; width: 100%; }\n```\njavascript\n$('#demo .diagram').append($('<div>', { id: 'wrapper'}).append($('#demo .diagram svg').remove()));\nvar svg = $('#wrapper svg');\n// attr() breaks the case, and viewBox and preserveAspectRatio seem to be case-sensitive\nsvg.get(0).setAttribute('viewBox', '0 0 ' + svg.attr('width') + ' ' + svg.attr('height'));\nsvg.get(0).setAttribute('preserveAspectRatio', 'xMidYMid');\nStill, less elegant than doing it natively.\nThanks for the great library otherwise!\n. Just an afterthought: returning the paper after drawing the SVG would leave these options available.\nTo do it the hard way, here is a skeleton of something that worked on your gh-page:\n``` css\nwrapper { height: 200px; width: 200px; }\nwrapper svg { height: 100%; width: 100%; }\n```\njavascript\n$('#demo .diagram').append($('<div>', { id: 'wrapper'}).append($('#demo .diagram svg').remove()));\nvar svg = $('#wrapper svg');\n// attr() breaks the case, and viewBox and preserveAspectRatio seem to be case-sensitive\nsvg.get(0).setAttribute('viewBox', '0 0 ' + svg.attr('width') + ' ' + svg.attr('height'));\nsvg.get(0).setAttribute('preserveAspectRatio', 'xMidYMid');\nStill, less elegant than doing it natively.\nThanks for the great library otherwise!\n. ",
    "jackycute": "I think this issue is very important.\nThis will provide ability to make svg diagram responsive natively!. I think this issue is very important.\nThis will provide ability to make svg diagram responsive natively!. ",
    "ktsaou": "But the site shows them twice.\nProbably there is an old version at the site?\n. of course. Here it is...\n\n. and handwritten:\n\n. As you can see the participants CRM and CustomerCare appear twice.\n. I run Chrome Version 40.0.2214.93 m on Windows 8.1\nI confirm that on Firefox 35.0.1 the issue does not exist.\nThanks\n. But the site shows them twice.\nProbably there is an old version at the site?\n. of course. Here it is...\n\n. and handwritten:\n\n. As you can see the participants CRM and CustomerCare appear twice.\n. I run Chrome Version 40.0.2214.93 m on Windows 8.1\nI confirm that on Firefox 35.0.1 the issue does not exist.\nThanks\n. ",
    "krysalead": "Thanks I will update accordingly\n. Thanks I will update accordingly\n. ",
    "streamich": "What's the easiest hack, to be able to use <base/> tag AND js-sequence-diagrams on one page?\n. Here is my quick and dirty fix:\njavascript\n$el.sequenceDiagram({theme: 'simple'});\nvar $path = $el.find(\"path\");\nif($path.length) {\n    $path.each(function(i, el) {\n        var $el = $(el);\n        var attr = $el.attr(\"marker-end\");\n        if(attr) {\n            $el.attr(\"marker-end\", \"url(\" + window.location.href + attr.substr(4));\n        }\n    });\n}\n. Actually, previous solution worked in Chrome, but did not work in Firefox.\nAnyways, here is a better solution, that should work in all browsers:\njavascript\n$el.sequenceDiagram({theme: 'simple'});\nvar url = \"data:image/svg+xml;utf8,\" + encodeURIComponent($el.html());\n$el.html(\"\").append($(\"<img>\").attr(\"src\", url));\n. What's the easiest hack, to be able to use <base/> tag AND js-sequence-diagrams on one page?\n. Here is my quick and dirty fix:\njavascript\n$el.sequenceDiagram({theme: 'simple'});\nvar $path = $el.find(\"path\");\nif($path.length) {\n    $path.each(function(i, el) {\n        var $el = $(el);\n        var attr = $el.attr(\"marker-end\");\n        if(attr) {\n            $el.attr(\"marker-end\", \"url(\" + window.location.href + attr.substr(4));\n        }\n    });\n}\n. Actually, previous solution worked in Chrome, but did not work in Firefox.\nAnyways, here is a better solution, that should work in all browsers:\njavascript\n$el.sequenceDiagram({theme: 'simple'});\nvar url = \"data:image/svg+xml;utf8,\" + encodeURIComponent($el.html());\n$el.html(\"\").append($(\"<img>\").attr(\"src\", url));\n. ",
    "wjam": "I've just created a test case and it's as minimal as I can make it. I've also noticed that while Chrome doesn't display the same error, it does display all of the content squashed up.\nIt appears as though the combination of using Reveal.js with js-sequence-diagrams and JQuery plus having three sequence diagrams plus having three slides after the diagrams causes the bug!\nIf you replace JQuery with standard JavaScript then the problem disappears.\nIf you remove one of the slides after the diagrams then the problem disappears.\nIf you remove one of the diagrams then the problem disappears.\n. Updated the test case to remove dependency on JQuery\n. I've just created a test case and it's as minimal as I can make it. I've also noticed that while Chrome doesn't display the same error, it does display all of the content squashed up.\nIt appears as though the combination of using Reveal.js with js-sequence-diagrams and JQuery plus having three sequence diagrams plus having three slides after the diagrams causes the bug!\nIf you replace JQuery with standard JavaScript then the problem disappears.\nIf you remove one of the slides after the diagrams then the problem disappears.\nIf you remove one of the diagrams then the problem disappears.\n. Updated the test case to remove dependency on JQuery\n. ",
    "eueung": "I got the same issue when integrating this with remark.js\nBut this happens only when I use {theme: 'simple'}. Using {theme: 'hand'}, everything is ok. The issue might be related with theme initialization.\n. I got the same issue when integrating this with remark.js\nBut this happens only when I use {theme: 'simple'}. Using {theme: 'hand'}, everything is ok. The issue might be related with theme initialization.\n. ",
    "jbe456": "I'm having the same issue when switching the theme to simple, whereas hand works fine. I'm having the same issue when switching the theme to simple, whereas hand works fine. ",
    "soswow": "Why do you think it should be as part of the diagram syntax? It feels to me it is something belong to how you draw it, which means draw API:\njavascript\ndiagram.drawSVG(\"diagram\", {theme: 'hand', scale: 0.5});\n. Why do you think it should be as part of the diagram syntax? It feels to me it is something belong to how you draw it, which means draw API:\njavascript\ndiagram.drawSVG(\"diagram\", {theme: 'hand', scale: 0.5});\n. ",
    "suhyunjeon": "Hello @bramp. Thank you for your reply.\nIt is same to result. I changed source code from sequence-diagram-min.js. \nDiagram.prototype.getActor = function(alias, name) {\n        alias = alias.replace(\"<\", \"\");\n        alias = alias.trim();\nIt solved problem. \n. OK.\n//////////////// Before ////////////////\n\n//////////////// After ////////////////\n\n. I was upload wrong result pic. It it right yours.\nAnyway it need to modify code( sequence-diagram-min.js) what I want to do. \n. Hello @bramp. Thank you for your reply.\nIt is same to result. I changed source code from sequence-diagram-min.js. \nDiagram.prototype.getActor = function(alias, name) {\n        alias = alias.replace(\"<\", \"\");\n        alias = alias.trim();\nIt solved problem. \n. OK.\n//////////////// Before ////////////////\n\n//////////////// After ////////////////\n\n. I was upload wrong result pic. It it right yours.\nAnyway it need to modify code( sequence-diagram-min.js) what I want to do. \n. ",
    "hgezim": "Good to know that Chrome works at least. \n. Good to know that Chrome works at least. \n. ",
    "johannes-jansson": "Thanks for a quick reply @bramp it sure made things more clear. However, I chose to go another way. My objective was to add CSS/jQuery class tags into the svg document by editing it as a string. I have now decided to add this functionality to draw_actor, draw_signal etc instead with the Element.node.setAttribute method from Raphael. \nIs this something that you would be interested in adding? If so I'll put some effort into it, and I'll create a new issue where we can discuss how it should be implemented in a pretty way.\n. Wow, I never noticed that. Thanks for the heads up! I'll add some code to check Raphael.type. \nI want to add low level tags like textbox and bottomactor, but also higher-level tags like title, actor, note and signal. I thought about using SVG grouping but found that it isn't supported in Raphael. It is in svg.js though... \nI'll probably go ahead and add the code for Raphael to my fork for now, since I need it for a product release in late July. Let me know if you'd be interested in adding it, and feel free to give me some directions on how you would prefer it to be implemented if that would be the case. \n. Thanks for a quick reply @bramp it sure made things more clear. However, I chose to go another way. My objective was to add CSS/jQuery class tags into the svg document by editing it as a string. I have now decided to add this functionality to draw_actor, draw_signal etc instead with the Element.node.setAttribute method from Raphael. \nIs this something that you would be interested in adding? If so I'll put some effort into it, and I'll create a new issue where we can discuss how it should be implemented in a pretty way.\n. Wow, I never noticed that. Thanks for the heads up! I'll add some code to check Raphael.type. \nI want to add low level tags like textbox and bottomactor, but also higher-level tags like title, actor, note and signal. I thought about using SVG grouping but found that it isn't supported in Raphael. It is in svg.js though... \nI'll probably go ahead and add the code for Raphael to my fork for now, since I need it for a product release in late July. Let me know if you'd be interested in adding it, and feel free to give me some directions on how you would prefer it to be implemented if that would be the case. \n. ",
    "workroomprds": "I've got a fix on its way...\n. Ah. Haven't written checks for this yet. Can confirm that it doesn't break the existing tests, and that the box is 1) consistent width in hand drawn and 2) present in simple. Works on my machine (ha).\n. I've got a fix on its way...\n. Ah. Haven't written checks for this yet. Can confirm that it doesn't break the existing tests, and that the box is 1) consistent width in hand drawn and 2) present in simple. Works on my machine (ha).\n. ",
    "gdw2": "I noticed this today too!  Interesting bug.\nIn chrome it would fail if I pasted it in the demo, but if I typed it, it would work fine.\n. I noticed this today too!  Interesting bug.\nIn chrome it would fail if I pasted it in the demo, but if I typed it, it would work fine.\n. ",
    "ashsearle": "Hi Andrew,\nIt certainly looks like you fixed this in the master, but your demo site still shows the bug because it's running from the gh-pages branch.\n. Hi Andrew,\nIt certainly looks like you fixed this in the master, but your demo site still shows the bug because it's running from the gh-pages branch.\n. ",
    "DanielSperry": ":+1: \n. :+1: \n. ",
    "StefRave": "No hurry, I don't have any time to do anything the next week\n1) I understand, and agree. I could not find a quick solution a short amount of time, but it should be possible.\n2) It is possible, but I am not sure if it is worth the hassle. Having to maintain Raphael & Snap.SVG in one codebase can be a challenge. Putting 1.x on a branch will keep code more clean and allow more innovation.\n3) I think a is a good solution. Maintain the Raphael version for a while and focus on new features for the SVG version. I think we can make upgrading to the new version easy, but I don't know how this will affect old browser support. Probably >=IE9 will be possible.\n. I thought my in my first commit, the rendering of SVG was performed when the font was loaded. Only I forgot that I added the Font to the windows font store. This caused the Daniel font to load quickly on my PC.\nThe current solution adds an invisible div tag to the DOM. On the window.load event, the font will have been loaded. This will probably also mean that WebFontLoader is probably not needed anymore. I will check that some other time.\nThe current version uses an embedded stylesheet, which is possible to be overridden in the web page. What do you think of this solution?\nThe current solution still needs:    <style type=\"text/css\">@font-face { font-family: 'Daniel'; font-style: normal; font-weight: normal; src: local('Daniel'), url('../fonts/daniel/daniel.otf') format('opentype'); } </style> in the html page.\n- We could embed this also in the embedded SGV stylesheet, but it will be a problem with the url.\n- We could embed the complete font in base64 in the embedded stylesheet (like http://blog.patdavid.net/2012/08/embedding-fonts-with-css-and-base64.html). This is the only solution which completely backwards compatible, but will blow up the SVG. However, the Rapha\u00ebl SVG \"hand\" files where also huge, because each letter was rendered using path.\nWhat do you think is the way to go?\n. Closed, because font rendering is supported in version 2. This pull request is based on pull request #128\n. Hi, I reimplemented this feature again on version 2.\nThis feature adds the original line numbers in the sourcefile to the SVG like:\n<g data-lineno=\"3\" class=\"signal \">\nThis makes it possible to implement interaction between sequence diagram and editor.\nAs an example: https://stefrave.github.io/js-sequence-diagrams/\nWhen a node in the sequence diagram is clicked the cursor moves to the correct line in the editor. The current line being edited is highlighted in the sequence diagram.\n. No hurry, I don't have any time to do anything the next week\n1) I understand, and agree. I could not find a quick solution a short amount of time, but it should be possible.\n2) It is possible, but I am not sure if it is worth the hassle. Having to maintain Raphael & Snap.SVG in one codebase can be a challenge. Putting 1.x on a branch will keep code more clean and allow more innovation.\n3) I think a is a good solution. Maintain the Raphael version for a while and focus on new features for the SVG version. I think we can make upgrading to the new version easy, but I don't know how this will affect old browser support. Probably >=IE9 will be possible.\n. I thought my in my first commit, the rendering of SVG was performed when the font was loaded. Only I forgot that I added the Font to the windows font store. This caused the Daniel font to load quickly on my PC.\nThe current solution adds an invisible div tag to the DOM. On the window.load event, the font will have been loaded. This will probably also mean that WebFontLoader is probably not needed anymore. I will check that some other time.\nThe current version uses an embedded stylesheet, which is possible to be overridden in the web page. What do you think of this solution?\nThe current solution still needs:    <style type=\"text/css\">@font-face { font-family: 'Daniel'; font-style: normal; font-weight: normal; src: local('Daniel'), url('../fonts/daniel/daniel.otf') format('opentype'); } </style> in the html page.\n- We could embed this also in the embedded SGV stylesheet, but it will be a problem with the url.\n- We could embed the complete font in base64 in the embedded stylesheet (like http://blog.patdavid.net/2012/08/embedding-fonts-with-css-and-base64.html). This is the only solution which completely backwards compatible, but will blow up the SVG. However, the Rapha\u00ebl SVG \"hand\" files where also huge, because each letter was rendered using path.\nWhat do you think is the way to go?\n. Closed, because font rendering is supported in version 2. This pull request is based on pull request #128\n. Hi, I reimplemented this feature again on version 2.\nThis feature adds the original line numbers in the sourcefile to the SVG like:\n<g data-lineno=\"3\" class=\"signal \">\nThis makes it possible to implement interaction between sequence diagram and editor.\nAs an example: https://stefrave.github.io/js-sequence-diagrams/\nWhen a node in the sequence diagram is clicked the cursor moves to the correct line in the editor. The current line being edited is highlighted in the sequence diagram.\n. ",
    "blakeembrey": "@bramp Honestly, I haven't seen the need either and I avoid using Bower - which probably answers the question :smile: Not sure what would be involved with it, but I imagine it should be fairly straightforward. Without NPM I have to copy and paste code and dependencies and use globals.\n. Sweet, thanks :+1: Looking forward to giving it a go.\nOn a controversial side note, is it possible to remove underscore from the project? It's normally a pretty big/unnecessary dependency. I can do a PR for either of these if you need a hand or don't have the time.\n. @bramp Honestly, I haven't seen the need either and I avoid using Bower - which probably answers the question :smile: Not sure what would be involved with it, but I imagine it should be fairly straightforward. Without NPM I have to copy and paste code and dependencies and use globals.\n. Sweet, thanks :+1: Looking forward to giving it a go.\nOn a controversial side note, is it possible to remove underscore from the project? It's normally a pretty big/unnecessary dependency. I can do a PR for either of these if you need a hand or don't have the time.\n. ",
    "sergeyt": "FYI I've started a PR #146 that could help to solve this issue.\n. @bramp this PR is ready to merge, please consider to merge it and publish the package on npm.\n. @wollnyst thanks for tip about dev-mode, fixed!\n. FYI I've started a PR #146 that could help to solve this issue.\n. @bramp this PR is ready to merge, please consider to merge it and publish the package on npm.\n. @wollnyst thanks for tip about dev-mode, fixed!\n. ",
    "pfarrell": "I'm thinking of doing a theme on my fork but if Snap is a reality, I'd rather hold off for it.\nHas this enhancement been abandoned?\n. I'm thinking of doing a theme on my fork but if Snap is a reality, I'd rather hold off for it.\nHas this enhancement been abandoned?\n. ",
    "wdamra": "Here\u2019s my stab at a Snap SVG version. The demo html file works in Chrome and Edge where I tested, with the js file and font file in the same directory, and access to CDNs for SnapSVG/Underscore/jQuery. \nThe js file combines the code from src/diagram.js and src/sequence-diagram.js. I commented out the JISON parsing part while working on this, demo data is loaded inside the html file. \nSee readme file for change log. I kept the program structure intact, Raphael-specific calls can be un-commented to create a combined Raphael/Snap SVG version with additional logic if you like. Hope this helps with the progress, nice tool by the way. \ndiagram.zip\n\n. Here\u2019s my stab at a Snap SVG version. The demo html file works in Chrome and Edge where I tested, with the js file and font file in the same directory, and access to CDNs for SnapSVG/Underscore/jQuery. \nThe js file combines the code from src/diagram.js and src/sequence-diagram.js. I commented out the JISON parsing part while working on this, demo data is loaded inside the html file. \nSee readme file for change log. I kept the program structure intact, Raphael-specific calls can be un-commented to create a combined Raphael/Snap SVG version with additional logic if you like. Hope this helps with the progress, nice tool by the way. \ndiagram.zip\n\n. ",
    "raboof": "Thanks for the quick reply. That is actually an interesting proposal - though extending it to the other 3 arrow types (A\\\\>B, A\\>>B, A\\\\>>B) seems a bit nasty.\nAn alternative might be to keep the existing arrows but allow annotations specifying how many lines to 'drop' (where a 'drop' of 0 would be a horizontal line). This would also fairly naturally support diagrams like the first one at https://w3.cs.jmu.edu/bernstdh/Web/CS460/study-aids/exam2-sample.php: \n(...)\nT->R [drop = 1]: F3\nR->T [drop = 4]: ACK 4\nT->R [drop = 1]: F4\nT->R [drop = 1]: F5\nThis could be made more readable by allowing to set a 'default drop' at the top of the file, and set that to '1' if you're drawing these kinds of diagrams.\n. Ah, looks like the attributes are added at the end of the line in #74. \nSo representing https://w3.cs.jmu.edu/bernstdh/Web/CS460/study-aids/exam2-sample.php as:\ndefault-drop = 1\n(...)\nT->R: F3\nR->T: ACK 4 [drop = 4]\nT->R: F4\nT->R: F5\n. A->B: Trigger broadcast\nB->A: Broadcast message\n=B->C: Broadcast message\n=Note right of C: Yay\nB->A: Ack broadcast\n\n. You mean this diagram is ambiguous because it could also be interpreted to mean A and C sent 'broadcast' messages to each other? I suppose that makes sense - but might be something for a separate PR/issue. #129 would be an alternative way to remove this ambiguity.\n. Ah yes, that's a more realistic example of the same ambiguity indeed :).\n. Thanks for the quick reply. That is actually an interesting proposal - though extending it to the other 3 arrow types (A\\\\>B, A\\>>B, A\\\\>>B) seems a bit nasty.\nAn alternative might be to keep the existing arrows but allow annotations specifying how many lines to 'drop' (where a 'drop' of 0 would be a horizontal line). This would also fairly naturally support diagrams like the first one at https://w3.cs.jmu.edu/bernstdh/Web/CS460/study-aids/exam2-sample.php: \n(...)\nT->R [drop = 1]: F3\nR->T [drop = 4]: ACK 4\nT->R [drop = 1]: F4\nT->R [drop = 1]: F5\nThis could be made more readable by allowing to set a 'default drop' at the top of the file, and set that to '1' if you're drawing these kinds of diagrams.\n. Ah, looks like the attributes are added at the end of the line in #74. \nSo representing https://w3.cs.jmu.edu/bernstdh/Web/CS460/study-aids/exam2-sample.php as:\ndefault-drop = 1\n(...)\nT->R: F3\nR->T: ACK 4 [drop = 4]\nT->R: F4\nT->R: F5\n. A->B: Trigger broadcast\nB->A: Broadcast message\n=B->C: Broadcast message\n=Note right of C: Yay\nB->A: Ack broadcast\n\n. You mean this diagram is ambiguous because it could also be interpreted to mean A and C sent 'broadcast' messages to each other? I suppose that makes sense - but might be something for a separate PR/issue. #129 would be an alternative way to remove this ambiguity.\n. Ah yes, that's a more realistic example of the same ambiguity indeed :).\n. ",
    "zagor": "Yes, I would love this too. I need to describe a system with broadcast messages, and have been unable to find ANY sequance diagram drawing tool that support it.\nJust a minor comment about the prototype: There needs to be a marker on the vertical line of the sender, to show who sent the message.\n. I mean if there was a fourth actor D, and B sent to A and D, there would be no visual indication that B sent the message rather than C.\n. Yes, I would love this too. I need to describe a system with broadcast messages, and have been unable to find ANY sequance diagram drawing tool that support it.\nJust a minor comment about the prototype: There needs to be a marker on the vertical line of the sender, to show who sent the message.\n. I mean if there was a fourth actor D, and B sent to A and D, there would be no visual indication that B sent the message rather than C.\n. ",
    "ensonic": "+1 I was looking for  a way to have concurrent notes. At least those are not ambigous.\nMaybe the start of a line can have a small dot.\n. +1 I was looking for  a way to have concurrent notes. At least those are not ambigous.\nMaybe the start of a line can have a small dot.\n. ",
    "deftdawg": "About the only way that could be any cooler, would be if when you clicked on a word, it jumped you to that word in the line too...   Awesome stuff though!\n. @StefRave We are not worthy! \ud83e\udd23  Amazing stuff!. About the only way that could be any cooler, would be if when you clicked on a word, it jumped you to that word in the line too...   Awesome stuff though!\n. @StefRave We are not worthy! \ud83e\udd23  Amazing stuff!. ",
    "jessechoward": "The language/syntax is a perfect match for this as it is both syntactically easy and very human readable. Maybe an export as JSON might be what the OP is looking for but I am not sure of the advantages if any there.\n(edit) - a few minutes late. js-sequence-diagrams is super useful btw. All it is missing is an export as image (png,jpeg,bmp,...) function as this is not exactly trivial but very well done!\n. The language/syntax is a perfect match for this as it is both syntactically easy and very human readable. Maybe an export as JSON might be what the OP is looking for but I am not sure of the advantages if any there.\n(edit) - a few minutes late. js-sequence-diagrams is super useful btw. All it is missing is an export as image (png,jpeg,bmp,...) function as this is not exactly trivial but very well done!\n. ",
    "GomesNayagam": "perfect, as the web embrace more and more towards JSON, i personally feel JSON can be a better choice for any DSL as we usually had xml. But yours is super simple for this use case. But if i wanted to persist in a JSON store, this could be a little tricky. BTW Good Work. \n. perfect, as the web embrace more and more towards JSON, i personally feel JSON can be a better choice for any DSL as we usually had xml. But yours is super simple for this use case. But if i wanted to persist in a JSON store, this could be a little tricky. BTW Good Work. \n. ",
    "janhieber": "OK, i removed the whitespace in the last line, now it works :P\n. OK, i removed the whitespace in the last line, now it works :P\n. ",
    "eloyesp": "Fixed. I double checked which license it was, then typed it wrong.\n. @bramp any thoughts on it?\n. Fixed. I double checked which license it was, then typed it wrong.\n. @bramp any thoughts on it?\n. ",
    "imrefazekas": "I also extended the grammar to able to express special actors drawn with ellipse.\n. Also if I read this correctly, if I prefix the actor name with o- then it becomes a oval ---- yes. I use it to make differentiate actors dealing with internal communication or external as well. Whether they possess  interface open to the public...\nThe signal came from the world of UML actually or at least has a good association with the connected circle of UML. :)\nI do the tests asap....\n. Test added.\n. Done, hopefully the correct way...\n. I was wondering if we could introduce some syntax to add stereotypes in some way ...\n. Changed the prefix to () to mark it as circle. And I also introduced <> to mark it as rhombus.\nBetter fitting syntax I think...\n. I also extended the grammar to able to express special actors drawn with ellipse.\n. Also if I read this correctly, if I prefix the actor name with o- then it becomes a oval ---- yes. I use it to make differentiate actors dealing with internal communication or external as well. Whether they possess  interface open to the public...\nThe signal came from the world of UML actually or at least has a good association with the connected circle of UML. :)\nI do the tests asap....\n. Test added.\n. Done, hopefully the correct way...\n. I was wondering if we could introduce some syntax to add stereotypes in some way ...\n. Changed the prefix to () to mark it as circle. And I also introduced <> to mark it as rhombus.\nBetter fitting syntax I think...\n. ",
    "ntotten": "I would like to see this as well. Both removing the dependency and adding npm.\n. I would like to see this as well. Both removing the dependency and adding npm.\n. ",
    "wollnyst": "I agree. Very nice, modern setup.\nSmall addition, in devserver.js the static middleware must be placed after the webpack-middleware.\nOtherwise you'll break up dev-mode, if there's a build\\sequence-diagram.js on the disk. \nSo put\napp.use(express.static(process.cwd()));\nafter:\n```\napp.use(require('webpack-dev-middleware')(compiler, {\n    noInfo: true,\n    publicPath: config.output.publicPath,\n}));\napp.use(require('webpack-hot-middleware')(compiler));\n```\n. I agree. Very nice, modern setup.\nSmall addition, in devserver.js the static middleware must be placed after the webpack-middleware.\nOtherwise you'll break up dev-mode, if there's a build\\sequence-diagram.js on the disk. \nSo put\napp.use(express.static(process.cwd()));\nafter:\n```\napp.use(require('webpack-dev-middleware')(compiler, {\n    noInfo: true,\n    publicPath: config.output.publicPath,\n}));\napp.use(require('webpack-hot-middleware')(compiler));\n```\n. ",
    "dcousens": "\ninclude fixes of issues for latest lodash 4.0\n\nWould be great if you included this PR agnostic of the other changes, ref https://github.com/bramp/js-sequence-diagrams/issues/158\n. Kind of defeats the point though\n. Thanks @bramp,  looking back,  I have no idea where 1.8.3 came from.\nThanks for the hard work. :+1: . @bramp great to hear :)\n. > include fixes of issues for latest lodash 4.0\nWould be great if you included this PR agnostic of the other changes, ref https://github.com/bramp/js-sequence-diagrams/issues/158\n. Kind of defeats the point though\n. Thanks @bramp,  looking back,  I have no idea where 1.8.3 came from.\nThanks for the hard work. :+1: . @bramp great to hear :)\n. ",
    "mnot": "In Raphael.fn.wobble, try a lower divisor; e.g.,\nvar wobble = Math.sqrt( (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 30;\ninstead of \nvar wobble = Math.sqrt( (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 15;\n. No worries, thanks!\n. In Raphael.fn.wobble, try a lower divisor; e.g.,\nvar wobble = Math.sqrt( (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 30;\ninstead of \nvar wobble = Math.sqrt( (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)) / 15;\n. No worries, thanks!\n. ",
    "Charius": "whoa, thanks for your answer! Will check that soon!. whoa, thanks for your answer! Will check that soon!. ",
    "nskerl": "I did manage to implement this plugin in Discourse.\nYou can find it here:  https://github.com/nskerl/discourse-sequence-diagram\nI couldn't get \"simple\" theme to work, so its hard coded to \"hand.\"  If anyone has an idea as to why simple would render so much differently please let me know.\n. Yea, check this out. I dont know enough about Discourse's internals to debug this, but I am curious what, if anything, is different between these two themes that might cause this? The dimensions between the two are totally different.\n\n. I did manage to implement this plugin in Discourse.\nYou can find it here:  https://github.com/nskerl/discourse-sequence-diagram\nI couldn't get \"simple\" theme to work, so its hard coded to \"hand.\"  If anyone has an idea as to why simple would render so much differently please let me know.\n. Yea, check this out. I dont know enough about Discourse's internals to debug this, but I am curious what, if anything, is different between these two themes that might cause this? The dimensions between the two are totally different.\n\n. ",
    "pkanthi": "Great. What would be the expected release timeline for js-sequence-diagrams 2.0?\n. Great. What would be the expected release timeline for js-sequence-diagrams 2.0?\n. ",
    "gasparch": "It is SVG, we can put JS handlers over it, no? It will require some classes on elements, tho. It is SVG, we can put JS handlers over it, no? It will require some classes on elements, tho. ",
    "Andrew-Dunn": "I'm currently working on an implementation of this using my proposed syntax. I may do a simpler enhancement to learn the codebase before attempting it though. (probably won't)\n. Progress so far, the following code generates the given sequence diagram:\nBob->+Alice: Say \"Hello\".\n+Alice->-Alice: Process salutation.\n-Alice->+Bob: Say \"Goodbye\".\nnote right of Bob: Reflect on life\n\nTODO\n- [x] Offset signal start and end x co-ords based on execution specification depth\n- [x] Offset self signal based on execution spec depth\n- [x] Defer signal drawing to after execution specifications (at the moment my implementation uses the y positions calculated during signal drawing).\n- [x] Write unit tests\n- [x] Refactor\n@bramp Do you have any preferences when it comes to code style, esp with regard to line length?\n. Unit/regression tests written. All that's left is to fix this rendering bug related to self signals that both end and begin an ExecutionSpecification, as well as bringing the code up to scratch for a PR.\n\n. Issue discussion here: #156 \n. Can do! Don't review this until I've done that, I've found some more avenues for refactoring.\n. @bramp Good to go!\nAlso, I added an error message for the issue described in the main pull-request post.\n. ```\nparticipant Actor\nnote right of Actor: This actor does not currently have an execution in progress, so level = -1\nActor->+Actor: Increase level\nnote right of Actor: An execution has started, so level = 0\nActor->+Actor: Increase level\nnote right of Actor: The level of execution nesting has increased, so level = 1\nActor->-Actor: Decrease level\nnote right of Actor: level = 0\nActor->-Actor: Decrease level\nnote right of Actor: The execution has ended, so we are back at -1\n```\n. Made some changes addressing your comments.\n. Hey, @bramp just a friendly ping to see the progress of this review?\nCheers!\n. I'm currently working on an implementation of this using my proposed syntax. I may do a simpler enhancement to learn the codebase before attempting it though. (probably won't)\n. Progress so far, the following code generates the given sequence diagram:\nBob->+Alice: Say \"Hello\".\n+Alice->-Alice: Process salutation.\n-Alice->+Bob: Say \"Goodbye\".\nnote right of Bob: Reflect on life\n\nTODO\n- [x] Offset signal start and end x co-ords based on execution specification depth\n- [x] Offset self signal based on execution spec depth\n- [x] Defer signal drawing to after execution specifications (at the moment my implementation uses the y positions calculated during signal drawing).\n- [x] Write unit tests\n- [x] Refactor\n@bramp Do you have any preferences when it comes to code style, esp with regard to line length?\n. Unit/regression tests written. All that's left is to fix this rendering bug related to self signals that both end and begin an ExecutionSpecification, as well as bringing the code up to scratch for a PR.\n\n. Issue discussion here: #156 \n. Can do! Don't review this until I've done that, I've found some more avenues for refactoring.\n. @bramp Good to go!\nAlso, I added an error message for the issue described in the main pull-request post.\n. ```\nparticipant Actor\nnote right of Actor: This actor does not currently have an execution in progress, so level = -1\nActor->+Actor: Increase level\nnote right of Actor: An execution has started, so level = 0\nActor->+Actor: Increase level\nnote right of Actor: The level of execution nesting has increased, so level = 1\nActor->-Actor: Decrease level\nnote right of Actor: level = 0\nActor->-Actor: Decrease level\nnote right of Actor: The execution has ended, so we are back at -1\n```\n. Made some changes addressing your comments.\n. Hey, @bramp just a friendly ping to see the progress of this review?\nCheers!\n. ",
    "JoelOnGithub": "If you load this one as well, it works:\nhttps://bramp.github.io/js-sequence-diagrams/js/underscore-min.js\n. If you load this one as well, it works:\nhttps://bramp.github.io/js-sequence-diagrams/js/underscore-min.js\n. ",
    "QHose": "Hi,\nI use meteor 1.3, and also when I load your suggested module, I still get the error \nTypeError: Cannot read property '_actors_height' of undefined\n    at sequence-diagram-min.js:7\n    at arrayEach (modules.js?hash=a266233\u2026:7137)\n    at Function.forEach (modules.js?hash=a266233\u2026:15225)\n    at HandRaphaelTheme.layout (sequence-diagram-min.js:7)\n    at HandRaphaelTheme.draw (sequence-diagram-min.js:7)\n    at Diagram.drawSVG (sequence-diagram-min.js:7)\n    at HTMLDivElement.<anonymous> (sequence-diagram-min.js:7)\n    at Function.each (jquery.js:384)\n    at jQuery.each (jquery.js:136)\n    at jQuery.undefined.$.fn.sequenceDiagram (sequence-diagram-min.js:7)\nmy code\n```\nimport { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport '/imports/ui/UIHelpers';\nimport { APILogs } from '/imports/api/APILogs';\nimport '/imports/ui/external/raphael-min';\nimport '/imports/ui/external/sequence-diagram-min';\nimport '/imports/ui/external/underscore-min';\nTemplate.APILogs.onRendered(function() {\n    $(\".diagram\").sequenceDiagram({theme: 'hand'});\n});\n```\nhtml\n<div class=\"row\">\n            <h3 class=\"ui header\">            \n                Sequence diagram</h3>\n            <p>In this schema you will see the flow from the user requesting the demo page, though the source code of this demo platform to Qlik Sense and back</p>\n            <div class=\"diagram\">Andrew->China: Says Hello Note right of China: China thinks\\nabout it China-->Andrew: How are you? Andrew->>China: I am good thanks!</div>\n        </div>\n. Also see https://forums.meteor.com/t/sequence-diagram-in-meteor-cannot-read-property--actors-height-of-undefined/27956/6\n. Hi,\nI use meteor 1.3, and also when I load your suggested module, I still get the error \nTypeError: Cannot read property '_actors_height' of undefined\n    at sequence-diagram-min.js:7\n    at arrayEach (modules.js?hash=a266233\u2026:7137)\n    at Function.forEach (modules.js?hash=a266233\u2026:15225)\n    at HandRaphaelTheme.layout (sequence-diagram-min.js:7)\n    at HandRaphaelTheme.draw (sequence-diagram-min.js:7)\n    at Diagram.drawSVG (sequence-diagram-min.js:7)\n    at HTMLDivElement.<anonymous> (sequence-diagram-min.js:7)\n    at Function.each (jquery.js:384)\n    at jQuery.each (jquery.js:136)\n    at jQuery.undefined.$.fn.sequenceDiagram (sequence-diagram-min.js:7)\nmy code\n```\nimport { Template } from 'meteor/templating';\nimport { Session } from 'meteor/session';\nimport '/imports/ui/UIHelpers';\nimport { APILogs } from '/imports/api/APILogs';\nimport '/imports/ui/external/raphael-min';\nimport '/imports/ui/external/sequence-diagram-min';\nimport '/imports/ui/external/underscore-min';\nTemplate.APILogs.onRendered(function() {\n    $(\".diagram\").sequenceDiagram({theme: 'hand'});\n});\n```\nhtml\n<div class=\"row\">\n            <h3 class=\"ui header\">            \n                Sequence diagram</h3>\n            <p>In this schema you will see the flow from the user requesting the demo page, though the source code of this demo platform to Qlik Sense and back</p>\n            <div class=\"diagram\">Andrew->China: Says Hello Note right of China: China thinks\\nabout it China-->Andrew: How are you? Andrew->>China: I am good thanks!</div>\n        </div>\n. Also see https://forums.meteor.com/t/sequence-diagram-in-meteor-cannot-read-property--actors-height-of-undefined/27956/6\n. ",
    "l1x": "Thanks!\n. Thanks!\n. ",
    "Redsandro": "@bramp you are right. I don't remember where/how I noticed it upstream. I can't see the behavior on the example page.\nI updated the original issue with StackEdit @ https://github.com/benweet/stackedit/issues/1021\nUnfortunately, StackEdit is no longer being developed.. @bramp you are right. I don't remember where/how I noticed it upstream. I can't see the behavior on the example page.\nI updated the original issue with StackEdit @ https://github.com/benweet/stackedit/issues/1021\nUnfortunately, StackEdit is no longer being developed.. ",
    "sander76": "Found it. Need to use \\n (double backslash).. Found it. Need to use \\n (double backslash).. ",
    "beaugunderson": "I should note I'm using the snap-specific version of 2.0.1 with the default theme and the default font (Andale mono).. I should note I'm using the snap-specific version of 2.0.1 with the default theme and the default font (Andale mono).. ",
    "kawikao": "I couldn't get .actor:nth-child() or .actor:nth-of-type() to work but I did get it to work with group. One nice side-effect is it's possible to address each box seperately (e.g. top and bottom of the same actor). The downside is having to set both boxes.\nUses group\ng:nth-of-type(2) rect\nOr a more specific call to group.class\ng.actor:nth-of-type(2) rect. I couldn't get .actor:nth-child() or .actor:nth-of-type() to work but I did get it to work with group. One nice side-effect is it's possible to address each box seperately (e.g. top and bottom of the same actor). The downside is having to set both boxes.\nUses group\ng:nth-of-type(2) rect\nOr a more specific call to group.class\ng.actor:nth-of-type(2) rect. ",
    "AleksandarDev": "@yagupta https://marketplace.visualstudio.com/items?itemName=AleksandarDev.vscode-sequence-diagrams\nDisclaimer - I'm the extension author. @yagupta https://marketplace.visualstudio.com/items?itemName=AleksandarDev.vscode-sequence-diagrams\nDisclaimer - I'm the extension author. ",
    "andrewdonkin": "Done.  I'd squash them if I could.  Didn't know what I was doing but there are no console errors and the bot has shut up.\n. Done.  I'd squash them if I could.  Didn't know what I was doing but there are no console errors and the bot has shut up.\n. ",
    "aphilpotts": "I will look into it, see if I can propose a solution. To elaborate, the issue is in here:\n```\n        download_link.click(function(ev) {\n          var svg = diagram_div.find('svg')[0];\n          var width = parseInt(svg.width.baseVal.value);\n          var height = parseInt(svg.height.baseVal.value);\n          var data = editor.getValue();\n          var xml = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\"><![CDATA[' + data + ']]>' + svg.innerHTML + '';\n      var a = $(this);\n      a.attr(\"download\", \"diagram.svg\"); // TODO I could put title here\n      a.attr(\"href\", \"data:image/svg+xml,\" + encodeURIComponent(xml));\n    });\n\n```\nThis code was interesting to me, I had not seen the technique before, but is seems, OK, on click you add a data url to be downloaded, but in Edge, this leads to a lockup and a spinning donut.\nI will see if I can get some attention from the Edge guys... will keep you posted\n. By the way, two of the links on the web site are dead, not that it really seems to matter, but I was in the debugger anyway.\nHTTP404: NOT FOUND - The server has not found anything matching the requested URI (Uniform Resource Identifier).\n(XHR)GET - https://bramp.github.io/js-sequence-diagrams/js/sequence-diagram-snap.js\nHTTP404: NOT FOUND - The server has not found anything matching the requested URI (Uniform Resource Identifier).\n(XHR)GET - https://bramp.github.io/js-sequence-diagrams/js/underscore-min.map\n. This works in edge, and elsewhere, pretty sure it can be repurposed, it has the disadvantage that the actual link does not appear until the button is clicked...\nhttp://html5-demos.appspot.com/static/a.download.html\n\nthe only other options I could think of is to use a future and then calling click. I will look into it, see if I can propose a solution. To elaborate, the issue is in here:\n```\n        download_link.click(function(ev) {\n          var svg = diagram_div.find('svg')[0];\n          var width = parseInt(svg.width.baseVal.value);\n          var height = parseInt(svg.height.baseVal.value);\n          var data = editor.getValue();\n          var xml = '<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\" \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\"><![CDATA[' + data + ']]>' + svg.innerHTML + '';\n      var a = $(this);\n      a.attr(\"download\", \"diagram.svg\"); // TODO I could put title here\n      a.attr(\"href\", \"data:image/svg+xml,\" + encodeURIComponent(xml));\n    });\n\n```\nThis code was interesting to me, I had not seen the technique before, but is seems, OK, on click you add a data url to be downloaded, but in Edge, this leads to a lockup and a spinning donut.\nI will see if I can get some attention from the Edge guys... will keep you posted\n. By the way, two of the links on the web site are dead, not that it really seems to matter, but I was in the debugger anyway.\nHTTP404: NOT FOUND - The server has not found anything matching the requested URI (Uniform Resource Identifier).\n(XHR)GET - https://bramp.github.io/js-sequence-diagrams/js/sequence-diagram-snap.js\nHTTP404: NOT FOUND - The server has not found anything matching the requested URI (Uniform Resource Identifier).\n(XHR)GET - https://bramp.github.io/js-sequence-diagrams/js/underscore-min.map\n. This works in edge, and elsewhere, pretty sure it can be repurposed, it has the disadvantage that the actual link does not appear until the button is clicked...\nhttp://html5-demos.appspot.com/static/a.download.html\n\nthe only other options I could think of is to use a future and then calling click. "
}