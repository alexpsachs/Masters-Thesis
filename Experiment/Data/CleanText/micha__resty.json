{
    "micha": "How do you mean \"overlap\"?\n. Oh yeah, I forgot about those. I've never used them, really. I'll leave the issue open for now and see what people think. Thanks!\n. Fixed now. Thanks!\n. Thanks, I'm looking into it. If you have any suggestions please feel free to comment here.\n. Good suggestion, thank you. I added a header block in there.\n. Awesome, thanks! Much better now. Patch applied.\n. Cool, merging this into master. Thanks!\n. To use it with https connections you can just set the URI base to an https URI, like this:\n$ . ~/bin/resty\n    $ resty https://www.google.com\n    https://www.google.com*\n    $ GET /\n    ...\n. I updated the README.\n. Thanks, got it!\n. Okay, there you go...\n. No problem. I added all the rest of the verbs, too.\n. Ah. That was a bug. It should work correctly (as in the README) now. Thanks!\n. Thanks! Looks good. Your changes are merged into master now.\n. Thanks! You're right about that. I merged your version into master. I don't remember why I did it that way.\n. Hmm. I like it. The existing behavior isn't very convenient if you're POSTing with null data a lot. And I don't think your changes will be a big deal for people. After all, if you want to just type the data in when doing a POST you can always do something like \ncat | POST /Test\nwhich is fine as far as I'm concerned. I think I'll merge you in and if anyone complains we can rethink how to fix it. Thanks!\n. Got it. Version 1.3 has the fix. Thanks!\n. Hmm. Strange behavior. I'm not sure what to make of it. I did a little test here: micha/resty@fea541b619c6cdee921de68139bdf46415f3f9a6\nI get the following output in zsh:\nmicha@eels:resty% GET / -H asdf\ncurlopt[1] => '-H'\ncurlopt[1] == '-'\ncurlopt[2] => 'asdf'\ncurlopt[2] == 'a'\ncurlopt[@] == '-asdf'\nExpected output (in bash it seems to work fine):\nmicha@eels:resty (test)$ GET / -H asdf\ncurlopt[1] => '-H'\ncurlopt[1] == '-H'\ncurlopt[2] => 'asdf'\ncurlopt[2] == 'asdf'\ncurlopt[@] == ' -H asdf'\nDo you have any idea what could cause this?\n. I think zsh is splitting \"$i\" on characters for some reason, or something. Very weird behavior.\n. Okay, I think we got it now. Version 1.4 has the fix.\n. Excellent, I will close this issue.\n. RFC 2616 doesn't seem to be very specific about whether a message body can be included in a GET request or not. To me this means that you might want to send the data in the message body sometime. I agree that it would be better not needing the -G, defaulting to sending parameters in the query string, but it would be a complication to implement this.\nSomething that I have been meaning to take a look at is mixing query string and message body parameters in the same request. Currently you have to choose one or the other for each request. I'd like to be able to do like\nPOST /Blah '{foo: \"bar\"}' -d arg=val\nto get\n```\nPOST /Blah?arg=val HTTP/1.1\nUser-Agent: curl/7.18.2 (x86_64-pc-linux-gnu) libcurl/7.18.2 OpenSSL/0.9.8g zlib/1.2.3.3 libidn/1.8 libssh2/0.18\nHost: localhost:9090\nAccept: /\nContent-Length: 14\nContent-Type: application/x-www-form-urlencoded\n{foo:\"bar\"}\n@-  \n```\n. It would be possible to use another option, like -Q or something (I don't remember which letters are available--curl takes up most of the alphabet in options already), and then do some fancy footwork and insert -G only if -Q isn't specified, or something like that.\n. Sure. You can set a config file that adds default options on a per host/method basis. Check out the \"Per-Host/Per-Method Curl Configuration Files\" section of the README file.\n(If you just want to know how to pass options to curl then it's easy, you just specify them on the command line, see the README)\n. Thinking about it a little more, I added the capability to specify curl options when you call the resty command to set the host/uri base. Subsequent requests (GET/POST/etc) will have those options automatically added. This is not on a per-method basis though---the options are added for all methods. To get per-method options you would want to do the config file thing as above. Have a look at the \"Default Curl Options\" section of the README.\n. Okay, that was a bug. It should now be fixed. Can you try v1.7, please? Thanks!\n. That was a bug. It should be fixed now. Try v1.6 and see if that works for you. Thanks!\n. Hi Benjamin,\nThanks, glad you find it useful! I think you can do what you want (sending query parameters with the request) by using the curl options -d foo=bar along with -G. The -d option causes curl to send the parameter foo with the value bar, but by default it sends it in the body of the request, as content-type application/x-www-form-urlencoded. Adding the -G option removes this behavior and causes curl to send the parameters in the uri query part.\nExample:\nbash\n$ resty localhost:9090\nhttp://localhost:9090*\n$ DELETE /posts/3 -d param1=value1 -d param2=value2 -G\n{ \"status\": \"OK\" }\n$ cat newpost.json | PUT /posts/3 -d foo=bar -G \n{ \"status\": \"OK\" }\nThe reason you need to use the -d option is because resty will urlencode the uri you specify on the command line.\nThe documentation is not clear and I have had a number of people ask me about this. Do you have any recommendations about how I could improve the docs?\nRegards,\nMicha\n. Ah. I see I spoke too soon. I will think about this and see if I can come up with a fix. The problem is with sending data in both the query string and the body in the same request.\n. OK. So the only way I know to send a request with both a query string and data in the request body via curl is like this:\nbash\n echo '{\"asdf\":\"foo\"}' |curl --raw -T . -d foo=bar -G http://localhost:9090/asdf/\nThat uploads the data with content-encoding = chunked, though, and you can only send the upload stuff via stdin or a file. You can't just put it on the command line. Unfortunately, the way resty manipulates the data prior to applying the command line args to curl makes it so you can't use -T with resty at the moment. I can probably work it in, but the interface needs to be carefully considered I think, so as not to overly complicate things or introduce incompatibilities with curl's command line interface. What do you think?\nAnother possibility is to disable url encoding of the path, and then just type the path as /asdf?foo=bar&baz=baf.\nThe more I think about it, the more I like your -q option.\n. The only problem with -q would be that it would shadow the curl option, but that option to curl does not expect an argument, and it must be the first one, so maybe it would work. So if you use -q \"foo=bar&baz=baf\" it would add the query string, but -q alone would be passed to curl...\nThe reason for the url encoding business was for working with Persevere, because you often need to put json queries in the url, and they often contain characters like question marks and ampersands etc.\n. I added a -Q option which disables url encoding. Would that work for you? So you can do:\nbash\n$ resty http://127.0.0.1:5984 \nhttp://127.0.0.1:5984*\n$ PUT '/albums/6e1295ed6c29495e54cc05947f18c8af/artwork.jpg?rev=2-2739352689' @image.jpg -Q -v -H 'Content-Type: image/jpg'\n{\"status\" : \"fine\"}\nIf you wanted to always add the -Q option you could add it (or any other options you will want to use for all requests) to the resty command, and it will be added to all subsequent GET, PUT, etc requests until the next time you run resty.\n. I also added your -q option:\nbash\n$ cat myfile.json | PUT /the/path -q 'param=value&other=something'\n{ \"status\": \"ok\" }\n. I'll take a look at this, thanks.\n. Fixed, thanks!\n. I can't replicate this behavior. Closing the ticket.\n. Awesome, thanks! I had a little bit of a dilemma thinking about people who have an XDB environment but already are using a .resty config dir, but I think an update to the README should be sufficient. I think people can manually copy the directories if they really want to.\n. Should be fixed now, thanks for letting me know!\n. Have you looked at the Per-Host/Per-Method Curl Configuration Files section of the docs? I think that would do what you want...\nAlso, any options you specify on the command line when you call resty itself are saved, so for instance:\nbash\n~$ resty www.example.com -Q\nhttp://www.example.com*\n~$ GET /jane?rev=1    # makes a GET request with -Q resty option\n. I'd like to have an intuitive way to set default arguments on the fly, but i'm not exactly sure how to do it. One way would be to allow something like:\nbash\n~$ resty -q rev=1\nwhere resty would know that -q is not a valid hostname and instead set those arguments for the rest of the session. But what would you do when you want to remove an argument? What about multiple arguments, like -H 'accept: foo' -H 'content-type: bar'?\n. No, you're right, you do need the -Q option, but I was pointing out the config files you can use to specify default resty options, including -Q.\n. Yes. There are two ways to specify default options. The first way is to specify them on the command line when you call resty itself, like this:\n~$ resty http://example.com -Q\nThis sets the -Q option for all requests for the rest of the session.\nThe other way is with a config file. For this example you'd create a file ~/.resty/example.com with the following contents:\nGET -Q\nPOST -Q\nPUT -Q\nDELETE -Q\nHEAD -Q\nOPTIONS -Q\nThis would add the -Q option to all GET, POST, PUT, DELETE, etc. requests to the example.com domain.\n. Oh, dang. It's not doing what I thought it was doing. I'll make it work correctly now :)\n. I chose -Q because it's not an option you'd use in curl if you're doing http stuff, so there really isn't overlap there. The weird part about it is that resty will correctly memoize curl options, but not resty options. This is because of the ad-hoc way it handles the command line options. I didn't want to use getopt there because that would mean adding in the curl optstring, basically. I didn't want to make it that rigid. I think I can make it work though, if the persistent options are passed to the resty command.\n. Sorry, I've been holding my nose to the grindstone lately with deadlines and whatnot. If you have any suggestions I'd be happy to merge your changes in, otherwise I'll try to work something out next week.\n. Have you tried the -u curl option?\nFrom the manpage of curl(1):\n```\n   -u/--user \n          Specify the user name and password to use for server authentication. Overrides -n/--netrc\n          and --netrc-optional.\n      If  you  just  give the user name (without entering a colon) curl will prompt for a pass\u2010\n      word.\n\n      If you use an SSPI-enabled curl binary and do NTLM authentication, you can force curl  to\n      pick  up  the  user name and password from your environment by simply specifying a single\n      colon with this option: \"-u :\".\n\n      If this option is used several times, the last one will be used.\n\n```\n. If you do something like\nGET / -u my-user-name\nyou will be prompted for your password, and echoing is off when you type it in. You won't see a prompt, though, so just type in your password and press enter. The request will be made with the correct Authorization headers.\nCheck it out:\n$ resty\nhttp://adzerk.com*\n```\n$ GET / -u foo -v > /dev/null\nEnter host password for user 'foo':\n  malformed\n Closing connection -1\n  malformed\n Closing connection -1\n Hostname was NOT found in DNS cache\n   Trying 23.21.234.186...\n Connected to adzerk.com (23.21.234.186) port 80 (#0)\n Server auth using Basic with user 'foo'\n\nGET / HTTP/1.1\nAuthorization: Basic Zm9vOmFzZGY=\nUser-Agent: curl/7.35.0\nHost: adzerk.com\nAccept: /\n< HTTP/1.1 200 OK\n< Accept-Ranges: bytes\n< Age: 0\n< Content-Type: text/html\n< Date: Mon, 09 Mar 2015 14:12:00 GMT\n< ETag: \"84a43226c049f733bdb5afac4e12891b\"\n< Last-Modified: Fri, 06 Mar 2015 16:25:14 GMT\n Server nginx/1.6.2 is not blacklisted\n< Server: nginx/1.6.2\n< Via: 1.1 varnish\n< x-amz-id-2: oyWbSKQo+/rKc8JiHoddzu5zwR0k83y28O7FDl1EIE/MSotQjg2aZsvxbnoLKih0\n< x-amz-meta-s3cmd-attrs: uid:1000/gname:ubuntu/uname:ubuntu/gid:1000/mode:33204/mtime:1425658798/atime:1425057357/md5:84a43226c049f733bdb5afac4e12891b/ctime:1425658798\n< x-amz-request-id: 3A2C921084EDE333\n< X-Varnish: 904944050\n< Content-Length: 12828\n< Connection: keep-alive\n< \n{ [data not shown]\n Connection #0 to host adzerk.com left intact\n```\n. Hey @frioux, that looks really awesome! Excellent work! Let me know if I can help with your project. I've been crazy busy lately and don't use zsh very often.\n. Thanks for the patch! Sorry it took so ridiculously long. I'm back now though.\n. That is not good, looks like a bug. I will investigate. Thanks for opening the issue!\n. \n",
    "kron4eg": "I have libwww-perl package installed, which has at least two executables /usr/bin/GET and /usr/bin/POST, when you define your GET and POST, those old became overridden.\nBut \u0430fter some reflection, I think this is not a big problem :)\nPlease close issue if you think it's invalid.\n. ",
    "ericmoritz": "Wow Thanks! \n. Awesome.  That's great.  Thanks for some a useful tool.\n. ",
    "eproxus": "Awesome. Thanks!\n. I can confirm the same behaviour on my setup:\n$ GET / -H asdf \ncurlopt[1] => '-H'\ncurlopt[1] == '-'\ncurlopt[2] => 'asdf'\ncurlopt[2] == 'a'\ncurlopt[@] == '-asdf'\nMy zsh-fu ends here, though.\n. Yup, that works! Thanks a bunch!\n. Yeah, and curl doesn't really allow -G again to cancel a GET, or any flag that forces a POST.\n. I think it is okay to keep it as it is, since knowing curl will allow you to do whatever you want. Right now it gives you no surprises which is always nice. :-)\n. Works!\n. Fixed! Thanks!\n. Would appreciate this being merged. Currently the output is:\nsh\n$ GET /json\ngrep: app: Is a directory\ngrep: config: Is a directory\ngrep: coverage: Is a directory\ngrep: db: Is a directory\ngrep: deploy: Is a directory\ngrep: doc: Is a directory\ngrep: lib: Is a directory\ngrep: log: Is a directory\ngrep: public: Is a directory\ngrep: script: Is a directory\ngrep: servlet: Is a directory\ngrep: test: Is a directory\ngrep: tmp: Is a directory\ngrep: vendor: Is a directory\ngrep: xml: Is a directory\n{}\n$\nWhich in my opinion makes the tool unusable.\n. ",
    "gudmundur": "Thanks to you too! I can keep on using resty now. :) Yay.\n. ",
    "BigBlueHat": "The first thing I tried was putting the query string directly with the URL, until I realized that URL's were automagically encoded. The auto-encoding is a nice feature, but I wonder if it could be narrowed a bit to avoid standard URL components (at least in their expected places. The -q option would be a fairly simple work around if strategic URL encoding is overkill or overly complex.\nOff to play with Resty some more. :)\n. Oh, and forgot to mention (fwiw) this bit of curl from CouchDB: The Definitive Guide:\ncurl -vX PUT http://127.0.0.1:5984/albums/6e1295ed6c29495e54cc05947f18c8af/artwork.jpg?rev=2-2739352689 --data-binary @artwork.jpg -H \"Content-Type: image/jpg\"\n. Micha, you rock! Just tested them both, and they work fabulously! The choice to add both options was a great idea.\nResty's not a core part of my toolkit, so I look forward to staying in touch.\nAgain, great (and speedy) work, Micha!\n. ",
    "dikshaSahni": "Is it possible to send Query params with PUT request in Java Rest API?. ",
    "AdrieanKhisbe": "@DevDik What Java rest api are you talking about, \nyou're probably looking for https://github.com/beders/Resty :). Has been implemented in a similar via than host defined options via the resty special host :). 3.0 is gonna land soon, closing the issue. This is a feature \n\nIf the path parameter is not provided on the command line, resty will just use the last path it was provided with.\n\nI'm gonna see if it's possible to disable it has a feature for 3.0. there is now the feature to disable it. > Yo Dowg\nThanks for the patch.\nNow with the option --dry-run you can output the command that us given to curl.\nFor supporting Not sure I want to hack around for this very specific edge case. But if you came out with a solution I would welcome a PR with pleasure. :)\nBy the way Sorry for the long answer time :/. @coffeencoke Sorry for the late answer. (very late I should say)\nthat's a strange error indeed. what I would say is that it's happening because you call resty GET with an host:\nI'll say that\n$ resty http://localhost:3000\n$ GET /users/user003/skills/7385140.json\nwould do the job. @coffeencoke closing the issue, feel free to reopen it if needed :). I didn't have any problem trying it on zsh 5.0.2, but have no idea if it comes from change in zsh, or changes that occur on resty\n. closing to do lack of activity. Hey @gv0tch0, I know it's a bit late, but could you provide us your traces?\n. closing so far because no details provided.. Hey @3rdmartini , could you provide us the script as @mkonecny suggest so that we can reproduce :)\nthanks\n. closing due to no activity. (I'm unpiling the issues, sorry for the very late answer)\nI first label a bug, but on second read it almost seems like a feature request.\nDo you want OPTIONS with no options to return the list of Allowed Methods?\nsomething like this:\n$ OPTIONS\nHEAD, OPTIONS, GET\n. Okey dokey.\nThanks for your input \u263a. @jayyvis I retest your query with the new dry run feature and it seams to be working normaly:\n```\n\nresty https://api.hipchat.com/v2 -H \"Content-Type: application/json\" -q \"auth_token=ASD\"\nhttps://api.hipchat.com/v2*\nGET / --dry-run\ncurl -sLv '' -X GET -b \"/Users/abecchis/.resty/c/api.hipchat.com\" -c \"/Users/abecchis/.resty/c/api.hipchat.com\" -H Content-Type:\\ application/json -q auth_token=ASD \"https://api.hipchat.com/v2/\"\nPOST / --dry-run\ncurl -sLv '' -X POST -b \"/Users/abecchis/.resty/c/api.hipchat.com\" -c \"/Users/abecchis/.resty/c/api.hipchat.com\" -H Content-Type:\\ application/json -q auth_token=ASD \"https://api.hipchat.com/v2/\"\n```\n\nHave you tried with latest version?\n(sorry for the late answer ::/). The next major version will no longer hide curl error when hapenning.  cf 4187af8\nAnd It's gonna ship soon :). Reading SO comments, make sense to me to enable to do this with resty.\nThen one could be able to send a body if I need and I server user it.\nWhat is your mind on this?\n(If okey, I'll add this feature)\n. Next major version of resty will support it. (implemented in the refactor branch)\nOtherwise for use case like , it's better I think to make use of the Header than a payload.\n. @rhlsthrm It would need me to refresh and complete the refactor I started two years ago.\nbut this may happens :). this should normally land with #50 pr. Major update on my PR, here is a recap:\nThese many commits consist in setting up a test suite that is run on travis.\nThese test are run on zsh and bash, both on linux and osx. \nSome modifications to the code had to be made to be working.\nMany commits due to try and error process. Status of the build can be see there:\nhttps://travis-ci.org/AdrieanKhisbe/resty/builds. @all ( @micha @soyo42 )\nJust rebased it, and I'm about to merge it in beta, see how it behaves, and then realease at last a v3.0 version. @here @micha \nI'm about to merge and make a release candidate version. @micha about to restart working on resty, \nand first step, it's the TEST!!\nWas considering using cucumber, aruba (and probably sinatra) to rewrite the integration test, and have it more easily run on travis.\n(so that I just have to adapt the syntax)\nSide effect, we could maybe release resty from gem \nwhat do you think about this?\n. cf: https://github.com/AdrieanKhisbe/resty/tree/test-with-cucumber\n- https://travis-ci.org/AdrieanKhisbe/resty :)\n. done in refactor branch, will be shipped with 3.0. Done in c4c739e with --xml --json flag. done in refactor branch, will be shipped as expected with the 3.0 release. hey @amitaibu, did you get an error?\nYou should try to code protect the subcommand: VAR=\"$(GET /foo)\".\nTell me if it fix your problem\n. Hello @amitaibu.\nJust the fix the missing trailing \", with an ammend, and I'll cherry-pick it :)\n. can you squash your commit with a intreactive rebase\n(in case, here is how to do it: http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html) \n:)\n. Just cherry picked your commit. :)\n. Good idea, will do.\nwas already considering adding --json flag as alias of  `-H 'Content-type: application/json'``\nNot that you can place -H 'Content-type: application/json' in your config file so you don't have to precise it over and other.\n. @akhyrul haha, comming soon. :)\nI restarted to hack around. Trying to reset up the test infrastructure before to go forward: cf https://github.com/AdrieanKhisbe/resty/tree/test-with-cucumber\n. I intended to do it, once I complete the major release.\nsorry for the delay. Done in c4c739e, will land with the very soon 3.0 release.\nA --json with set both Accept and Content-Type to json\nclosing the issue.. done in current-refactor branch. will be shipped with 3.0. done in #50 that is to be landing soon. @claytondukes a PR would ve preferable :)\n(sorry for the late answer). closing, help section to be included in the 3.0. @micha, I would go for MIT Licence, any objection?\n. request timeout, let's go for MIT\n. Seems good to me!\n. @ramstein74 does it answer the question?\nif so we shall close =). closing since no output, and answer given. thanks @aars ! :)\n. Refactor has been sleeping for some time, and I start reviving few days ago.\nWhat's hindering now Is the test transition. I'm waiting this to complete refactor and ensure we don't have regression.\nI was thinking going to use cucumber and aruba, so have to use this https://github.com/cucumber/aruba/pull/323\n. > Is the refactor branch currently useable?\nNo Idea. I don't remember in which state I left it.\nJQ is a killer feature, I add it in mind\n. Your more than welcome to collaborate ! :)\n. Hello @aars. :)\nI just saw you forked form my repo. \nI have been uquite busy at work and OSS lately, \nBut now that aruba is updated, the test can now be reworked.\nfeel free to contact me on my gitter ;)\n. Hey @aars,\nI restarted working on resty, and refresh my refactor.\nyou can see the state there on the #50 PR\nYour input is more than welcome! \n. @soyo42 Just merged your fix. \ncan you test it and confirm it work? :)\nthen closing the issue. you're welcome :). @josdotso After verification this is possible.\nAt the end of the script that load the functions, resty is called with all his arguments:\nresty \"$@\" >/dev/null 2>&1. (shall I close the issue?). Hey @josdotso, sorry for the late answer\nthe failure is normal. The resty command loock if XDG_CONFIG_HOME is set to something. Since it's not, the set -u will cause failure you are having.. @josdotso \nAnything else?\nShall i close the issue?. What do you mean by \n\nThere should be an option to set as curl\n\nDo you mean the possibility to set user agent? \nIf so you can use the same option than curl, resty will forward it.. Noted. Might do this in the coming days. @roele In progress: https://github.com/Homebrew/homebrew-core/pull/18857#partial-pull-merging :). @roele Done and available on brew\nannounced on reddit: https://www.reddit.com/r/commandline/comments/7a4wq6/new_release_of_the_rest_client_resty/. Thanks @extremeshok, I also applied the shellcheck recommandations in the #50 PR, that is to be landing soon.. @jean I just solved it, will be ship with the major release. It seems you are using master, now 3.0 (I can tell because of the resty-call).\nWhat is your prezto config?. Hello @vidstige, thanks for your report.\nWhich version of resty are you using, and how did you install it?\n(I'm personnaly using a mac and don't have a problem with that)\nHave you tried on newer version of bash? (v4). there is a missing quote: \nshould be VAR=\"$(GET /some/request)\"\n. yes. not this one I would say.  if $1 is \"\". indeed, but using rather the -E flag\nsimplified it a lot!\nthanks for the suggestion. damn. was a difference between sed version. . the flag is not needed in fact. :). ",
    "bbeck": "Does it do what I want?  My understanding from looking at the resty source code is that it's resty doing the url encoding not curl.  It's the handling of the -Q option which seems to execute something like:\n[ -z \"$quote\" ] && _path=$(echo \"$_path\"|sed 's/%/%25/g;s/\\[/%5B/g;s/\\]/%5D/g;s/|/%7C/g;s/\\$/%24/g;s/&/%26/g;s/+/%2B/g;s/,/%2C/g;s/:/%3A/g;s/;/%3B/g;s/=/%3D/g;s/?/%3F/g;s/@/%40/g;s/ /%20/g;s/#/%23/g;s/{/%7B/g;s/}/%7D/g;s/\\\\/%5C/g;s/\\^/%5E/g;s/~/%7E/g;s/`/%60/g')\n. My $0.02 says that if you run the resty command you're reconfiguring resty to operate differently.  You already have that paradigm today with the way everyone uses it.\n```\n~$ resty 'http://localhost:8080'\nhttp://localhost:8080*\n~$ GET /jane\n\n~$ resty 'http://localhost:8081'\nhttp://localhost:8081*  # Just lost the binding to localhost:8080\n```\nSo why not follow the same paradigm with resty options?\n```\n~$ resty -Q 'http://localhost:8080'\nhttp://localhost:8080* -Q\n~$ GET '/people?name=jane'   # makes a GET request to http://localhost:8080/people?name=jane (no quoting)\n...\n~$ resty 'http://localhost:8080'\nhttp://localhost:8080*\n~$ GET '/people?name=jane'   # makes a GET request to http://localhost:8080/people%3Fname%3Djane (with quoting)\n\n```\n. Wait, I can specify -Q in a configuration file that resty will read?  Which configuration file is that?  I don't see any of that in the resty code.\n. It's not working how you thought it was because resty is passing those options to curl right?  How are you going to distinguish between resty options and curl options especially considering some of them overlap (-Q for example)?\nOne possibility could be to allow resty options before the base URI and curl options after the base URI (like they currently must be).  It definitely isn't ideal, but I don't know of a better way.\n. Gotcha, makes total sense to me.  I look forward to getting to use it. :)\n. Hi Micha, was just wondering if you've had any time have a look at this anymore?  Is there some way I can help you?\n. ",
    "mdi": "This happens with a leading slash also.\n. ",
    "stigkj": "Could be done by having resty ask for a uid/password.\n. ",
    "frioux": "This could probably done with a plugin that WrapsCurlCommand in my fork: https://github.com/frioux/app-adenosine-prefab\nYou could have it prompt the user for the password.\n. duplicate\n. Actually this gets MUCH weirder; here's some even more interesting output. \n```\nwanderlust [546] ~/code/drinkup \u00abmaster\u00b9\u00bb <255> $ curl http://localhost:5000/drinks/data/3 | pp\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   475  100   475    0     0  24612      0 --:--:-- --:--:-- --:--:-- 26388\n{\n   \"source\" : null,\n   \"variant_of_drink\" : \"Cuba Libre\",\n   \"name\" : \"Frewba Libre\",\n   \"ingredients\" : [\n      {\n         \"unit\" : \"ounce\",\n         \"amount\" : 4,\n         \"name\" : \"Coca Cola\"\n      },\n      {\n         \"unit\" : \"ounce\",\n         \"amount\" : 2,\n         \"notes\" : \"I recommend using either Myers's Original Dark Jamaican Rum, or skip the vanilla extract and use the excellent black Kraken Rum.\",\n         \"name\" : \"Dark Rum\"\n      },\n      {\n         \"unit\" : \"ounce\",\n         \"amount\" : 1,\n         \"name\" : \"Lime Juice\"\n      },\n      {\n         \"name\" : \"Vanilla Extract\",\n         \"arbitrary_amount\" : \"3 drops\"\n      }\n   ],\n   \"description\" : \"A Delicious beverage of my own design\"\n}\nwanderlust [547] ~/code/drinkup \u00abmaster\u00b9\u00bb $ resty\nhttp://localhost:5000*\nwanderlust [548] ~/code/drinkup \u00abmaster\u00b9\u00bb $ GET /drinks/data/3\n \n\n\n\n\n\n\n  \n\n\n\n\n\nOferta sprzeda\u017cy domeny file.pl (file)\n\n\n\n\n\nPremium.pl - Najwi\u0119ksza polska gie\u0142da domen internetowych. Najni\u017csze ceny przed\u0142u\u017cenia. Nie zastanawiaj si\u0119 - przenie\u015b do nas domeny ju\u017c dzi\u015b!\nhttps://premium.pl/\n\n\n\nAukcji: 2 277\nOfert: 76 908\nSprzeda\u017cy: 23 945\n\n\n\n\n\n\n\n\u00a0\n\n\nPami\u0119taj 14 dni\n\n\u00a0\n \u00a0\n\n\n\n\n \n\n\n\n\npremium.pl - gie\u0142da domen\n\n\n\n\n\n\n<label><a href=\"https://premium.pl/account/select.html\">Za\u0142\u00f3\u017c nowe<br/> konto</a></label>\n\n\n\n\n\n\n\n<label><a href=\"https://premium.pl/checkdomain.html\">Utw\u00f3rz<br/> domen\u0119</a></label>\n\n\n\n\n\n\n<label><a href=\"https://premium.pl/docatch.html\">Przechwy\u0107<br/> domen\u0119</a></label>\n\n\n\n\n\n\n<label><a href=\"https://premium.pl/dotransfer.html\">Transfer do<br/> konta</a></label>\n\n\n\n\n\n\n<label><a href=\"https://premium.pl/tekst/kupdomene.html\">Kup<br/> domen\u0119</a></label>\n\n\n\n\n\n\n\n<label><a href=\"https://premium.pl/pomoc.html\">Potrzebujesz<br/> pomocy?</a></label>\n\n\n\n\n\n\n<label><a href=\"https://premium.pl/dashboard.html\">Pe\u0142ne<br/> menu</a></label>\n\n\n\n\n\n\n\n\n\n\n\nAukcje domen\n\n\nGie\u0142da domen\n\n\nTanie domeny\n\n\nNarz\u0119dzia\n\n\nNewsletter\n\n\nCennik\n\n\nFacebook\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWszystkie\n(2279) \n\nLast Minute\n(90) \n\nPrzechwycone\n(41) \n\nZ ofertami\n(61) \n\nNajnowsze\n\n\nKo\u0144cz\u0105ce si\u0119\n\n\n\nJak kupi\u0107 domen\u0119?\n\n\n\n\n\n\n\n    <script type=\"text/javascript\" src=\"https://premium.pl/view215/js/auction-view.js\"></script>\n\n<div   class=\"contentbox\"\n\n<div   class=\"contentbox-top\"\n<div   class=\"contentbox-top-left\"\n<div   class=\"contentbox-top-right\"\n<div   class=\"contentbox-top-center\"\n\n <div   class=\"contentbox-middle\"\n<div   class=\"contentbox-middle-left\"\n<div   class=\"contentbox-middle-right\"\n<div   class=\"contentbox-middle-center\"\n<div   class=\"contentbox-in\"\n\n    <div itemscope=\"itemscope\" itemtype=\"http://schema.org/Product\" class=\"product auction-view\">\n\n\n\n\n\n\n\n\n  Oferta dotyczy domeny:\n  \nfile.pl\n\n\n\n\n\nDodaj do obserwowanych\n\n\n\n\n\u00a0\n\n\n      <form action=\"https://premium.pl/auction/forsale/append/?id=1079105\" method=\"post\" id=\"auction-bidform\">\n\n\nPLNbrutto\n\nPLNPLN1\n$USD0,2944\n\u20acEUR0,233\n0\n\n\n\n\n\n Wpisz maksymaln\u0105 kwot\u0119, a system b\u0119dzie licytowa\u0142 za Ciebie. \n\u00a0\n\n        <!--\n $(document).ready(function () {\n $('.auction-bid-input').attr('defaultValue', $('.auction-bid-input').val());\n\n $('.input-activator').click(function (e) {\n e.preventDefault();\n $(this).next().focus();\n $(this).remove();\n });\n $('.auction-bid-input').click(function (e) {\n $(this).select();\n\n setTimeout(ref(this, function () {\n $(this).select();\n }), 50);\n });\n $('.auction-bid-input').focus(function (e) {\n $(this).select();\n });\n $('.auction-bid-input').keyup(function (e) {\n if ($(this).attr('defaultValue') != $(this).val()) {\n $(this).removeClass('grey');\n } else {\n $(this).addClass('grey');\n }\n });\n });\n        -->\n\n     <div >\n\n\n\nPLNbrutto\n\nPLNPLN1\n$USD0,2944\n\u20acEUR0,233\n0\n\n\n\n\n\u00a0\n\n\nPLNbrutto\n\nPLNPLN1\n$USD0,2944\n\u20acEUR0,233\n0\n\n\n\n    <div>&nbsp;</div>\n\n\n\n\n\n\n\n\n  Cena wywo\u0142awcza:\n\n        \n\n\n\n\n15 900 PLN (brutto)\n        \n\n\n        Rozliczenie z nabywc\u0105:\n\n\n\nZapytaj sprzedaj\u0105cego\n\n\n\n        Sprzedaj\u0105cy:\n         \n\u00a0 \u00a0\n \u00a0\n \u00a0 \u00a0 \n\n\nPiotrK\n\n\n\n\n Zobacz profil\n\n\n\n Obserwuj domen\u0119\n\n\n\n Obserwuj u\u017cytkownika\n\n\n\n Kontakt ze sprzedaj\u0105cym\n\n\n\n\nZobacz wszystkie oferty\n\n\n\n\nWy\u015bwietle\u0144 na li\u015bcie:\n\n1880\n\n\nOdwiedzin oferty:\n\n1610\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\nJak wygl\u0105da proces negocjacji?\n\n\n\n\n\nJak otrzyma\u0107 faktur\u0119 za zakup?\n\n\n\n\n\nZapytaj o mo\u017cliwo\u015b\u0107 dzier\u017cawy\n\n\n\n\n\nZapytaj o mo\u017cliwo\u015b\u0107 zakupu na raty\n\n\n\n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\u00a0\n\n\n\n\n Pole\u0107 znajomemu \n\n\n\nTwoje imi\u0119:\n\n \n \n\u00a0\nTw\u00f3j adres e-mail:\n\n \n \n\u00a0\nAdres e-mail znajomego:\n\n \n \n\u00a0\nDodatkowa wiadomo\u015b\u0107:\n\n Polecam aukcj\u0119 domeny: https://premium.pl/file.pl    \n \n\u00a0\n\n\n\n\n\n\n\n\n\n    <div>&nbsp;</div>\n\n    <div class=\"table-nw\"></div>\n    <div class=\"table-ne\"></div>\n\n    <div class=\"auction-box auction-tagsbox\">\n\n\n Tagi \n\n\nfile\n\n\ndomeny z ruchem\n\n\nwyr\u00f3\u017cnione\n\n\n4 literowe\n\n\n\n\n    <div class=\"table-sw\"></div>\n    <div class=\"table-se\"></div>\n\n    <div>&nbsp;</div>\n\n\n\n\n\n\n\n  Parametry domeny  \n\n     <div>\n\n\n     <div class=\"left\"><img class=\"mid\" src=\"https://premium.pl/view215/img/auction/icon/cr_date.png\" alt=\"\" /> <span class=\"mid\">Data rejestracji domeny:</span></div>\n\n\n\n Data wyga\u015bni\u0119cia domeny:\n\n    <div id=\"additional-domain-info341236159\" style=\"display:none\">\n\n\n\n\n UWAGA! Poni\u017csze dane s\u0142u\u017c\u0105 jedynie celom informacyjnym i mog\u0105 si\u0119 r\u00f3\u017cni\u0107 od faktycznych. Serwis nie odpowiada za aktualno\u015b\u0107 tych informacji. \n\n\n\nGoogle - strony\n\n\n2    \n\n\n\nArchive.org\n\n\n2001-03-09    \n\n    <div class=\"clear\"></div>\n\n     <div style=\"padding: 5px;\">[ <a href=\"#\" onclick=\"$(this).parent().hide(); $('#additional-domain-info341236159').show(); return false\" class=\"grey\">zobacz wi\u0119cej</a> ]</div>\n     <div class=\"clear\"></div>\n\n\n\n\n\n\n\n\n\n\n\n    </div></div></div></div></div>\n\n<div   class=\"contentbox-bottom\"\n\n<div   class=\"contentbox-bottom-left\"\n<div   class=\"contentbox-bottom-right\"\n<div   class=\"contentbox-bottom-center\"\n\n\n\n\n\n\n\n\n\n \u00a9 2010-2012 premium.pl - Gie\u0142da Domen |\n Wszystkie prawa zastrze\u017cone. \n\nDlaczego my? |\n Prezentacja |\n O nas |\n Cennik |\n Regulamin |\n Kontakt |\n Mapa strony |\n Dla medi\u00f3w\n\n\n\n\n &lt;!--</p>\n<p>var _gaq = _gaq || [];\n _gaq.push(['_setAccount', 'UA-1695735-8']);\n _gaq.push(['_trackPageview']);\n _gaq.push(['_setCustomVar', 1, 'UserId', '1', 2]);</p>\n<p>_gaq.push(['_trackEvent', 'Domena na gie\u0142dzie', 'Widok']);</p>\n<p>(function() {\n var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;\n ga.src = 'https://ssl.google-analytics.com/ga.js';\n var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);\n })();</p>\n<p>--&gt;\n \n\n &lt;!--\n var auction_stars_hint = null;</p>\n<p>$(document).ready(function () {\n var d = $('<div style=\"display: hidden; position: absolute;\"></div>');\n d.addClass('info-hint');\n d.hide();\n d.html('<div class=\"hint-arrow\"></div><div class=\"help\">Ocena u\u017cytkownika jest obliczana na podstawie liczby sprzedanych i kupionych domen na gie\u0142dzie,<br/> liczby nieop\u0142aconych aukcji, daty rejestracji oraz innych czynnik\u00f3w wp\u0142ywaj\u0105cych na wiarygodno\u015b\u0107 u\u017cytkownika.'+\n '<br/>Hierarchia ocen: '\n + '<span><img src=\"https://premium.pl/view215/img/_old/star-green.png\" alt=\"\" class=\"mid\" /></span> &lt; <span><img src=\"https://premium.pl/view215/img/_old/star-blue.png\" alt=\"\" class=\"mid\" /></span> &lt; <span><img src=\"https://premium.pl/view215/img/_old/star-red.png\" alt=\"\" class=\"mid\" /></span> &lt; <span><img src=\"https://premium.pl/view215/img/_old/star-purple.png\" alt=\"\" class=\"mid\" /></span>' +\n ' - ka\u017cdy kolor od jednej do trzech gwiazdek.'+\n '<br/>Gwiazdka czarna (<span><img src=\"https://premium.pl/view215/img/_old/star-black.png\" alt=\"\" class=\"mid\" /></span>) oznacza u\u017cytkownika, kt\u00f3ry nie op\u0142aci\u0142 znacznej cz\u0119\u015bci zakupionych domen.' +\n '</div>');</p>\n<p>d.appendTo($('body'));</p>\n<p>$('.stars').click(function (e) {\n auction_stars_hint.show();\n auction_stars_hint.css('left', e.pageX + 'px');\n auction_stars_hint.css('top', e.pageY + 'px');\n return false;\n });</p>\n<p>$(document).click(function (e) {\n auction_stars_hint.hide();\n });</p>\n<p>auction_stars_hint = d;\n });\n --&gt;\n \n\n{\"source\":null,\"variant_of_drink\":\"Cuba Libre\",\"ingredients\":[{\"amount\":4,\"unit\":\"ounce\",\"name\":\"Coca Cola\"},{\"amount\":2,\"unit\":\"ounce\",\"notes\":\"I recommend using either Myers's Original Dark Jamaican Rum, or skip the vanilla extract and use the excellent black Kraken Rum.\",\"name\":\"Dark Rum\"},{\"amount\":1,\"unit\":\"ounce\",\"name\":\"Lime Juice\"},{\"name\":\"Vanilla Extract\",\"arbitrary_amount\":\"3 drops\"}],\"name\":\"Frewba Libre\",\"description\":\"A Delicious beverage of my own design\"}\n```\n. I forked resty to solve this bug; also added a plugin infrastructure: https://github.com/frioux/app-adenosine-prefab\n. solved in https://github.com/frioux/app-adenosine-prefab\n. solved in https://github.com/frioux/app-adenosine-prefab\n. I forked resty to solve this bug; also added a plugin infrastructure: https://github.com/frioux/app-adenosine-prefab\n. I think my fork should be faster since it has way fewer forks, try it out: https://github.com/frioux/app-adenosine-prefab\n. ",
    "d1rk": "hey @micha since the version from @frioux is a complete rewrite and/or includes a rename, do you actually think about fixing the zsh-issue in resty?\n. ",
    "gv0tch0": "thanks @frioux. i'll give adenosine a spin soon.\n. ",
    "rgrinberg": "+1\n. ",
    "mkonecny": "Would be helpful if you posted the script.\n. Instead of using -k why not use --cacert and point to your self-signed certificate??\n. Judging from this SO thread, it appears to be allowed, but ignored.\nhttp://stackoverflow.com/questions/299628/is-an-entity-body-allowed-for-an-http-delete-request\n. ",
    "robsonpeixoto": "I'll close it. Thinking more about it, IMO the current solution is ok.\nThe headers are enough!. ",
    "eddiewebb": "I guess the point is one needs to know the problem (which resty is swallowing) in order to use either argument as a solution\n. ",
    "rhlsthrm": "I would like to use this functionality as well. Can this be released?. ",
    "igorgere": "Great, I also needed PATCH, it would be nice if Resty would add supprot for it. For now I'll delete mu fork and reffer to Zsolt's.\n. ",
    "kevinsearle": "This isn't really an appropriate place for that.\n. ",
    "amitaibu": "Worked, thanks. Closed in favor of #55\n. @micha rebased and ready for review\n. @AdrieanKhisbe sorry, didn't understand your comment.\n. Pushed a fix.\n. sure - wasn't sure you wanted it squashed. sec :)\n. Ready for review :)\nDo I get bonus points for doing this, eventough I don't actually use resty? :wink: \n. ",
    "akhy": "+1 for --json\n. ",
    "dimitriye98": "Same\n. ",
    "exaroth": "Same here, i think it has something to do width zsh shell, as when sourcing the file under bash it doesnt give the same error (OSX El Captain here)\n. ",
    "akadaedalus": "It has something to do with \"$()\" command subtitution and embedded newlines.  I was able to fix it by putting it all in one line.  If resty doesn't work with stock zsh, then it should be fixed.  I've got a few zsh modules loaded and am not sure if they're causing the problem.  My \"git diff\" of resty:\n```\ndiff --git a/resty b/resty\nindex 87fbed4..8fce400 100755\n--- a/resty\n+++ b/resty\n@@ -29,8 +29,7 @@ function resty() {\n   host=\"$datadir/host\"\n   cookies=\"$datadir/c\"\n   method=\"$1\"; [[ $# > 0 ]] && shift\n-  h2t=$((exec 2>&-; (which lynx >/dev/null && echo lynx -stdin -dump) \\\n-                || which html2text || which cat) |tail -n 1)\n+  h2t=$((exec 2>&-; (which lynx >/dev/null && echo lynx -stdin -dump) || which html2text || which cat) |tail -n 1)\n   editor=$((exec 2>&-; which \"$EDITOR\" || which vim || echo \"vi\") |tail -n 1)\n[ \"${method#P}\" != \"$method\" ] || [ \"$method\" = \"TRACE\" ] && wantdata=\"yes\"\n@@ -82,11 +81,7 @@ function resty() {\n       [ -n \"$dat\" ] && opt=\"--data-binary\"\n       [ \"$method\" = \"HEAD\" ] && opt=\"-I\" && raw=\"yes\"\n       [ -f \"$confdir/$domain\" ] && eval \"args2=( $(cat \"$confdir/$domain\" 2>/dev/null |sed 's/^ *//' |grep ^$method |cut -b $((${#method}+2))-) )\"\n-      res=$((((curl -sLv $opt \"$dat\" -X $method \\\n-              -b \"$cookies/$domain\" -c \"$cookies/$domain\" \\\n-              \"${args2[@]}\" \"${curlopt2[@]}\" \"${curlopt[@]}\" \"$_path$query\" \\\n-        |sed 's/^/OUT /' && echo) 3>&2 2>&1 1>&3) \\\n-        |sed 's/^/ERR /' && echo) 2>&1)\n+      res=$((((curl -sLv $opt \"$dat\" -X $method -b \"$cookies/$domain\" -c \"$cookies/$domain\" \"${args2[@]}\" \"${curlopt2[@]}\" \"${curlopt[@]}\" \"$_path$query\" |sed 's/^/OUT /' && echo) 3>&2 2>&1 1>&3) |sed 's/^/ERR /' && echo) 2>&1)\n       out=$(echo \"$res\" |sed '/^OUT /s/^....//p; d')\n       err=$(echo \"$res\" |sed '/^ERR /s/^....//p; d')\n       ret=$(echo \"$err\" |sed \\\n```\n. ",
    "soyo42": "I guess there is a fair chance that resty works under cygwin or msys.\n. Fix in #67.\n. Hi Adriean,\nI confirm - it works now. Thank you.. Just spotted a typo: \"holers\" was probably meant to be \"holders\".\n. I guess this condition is always true\n. I guess this condition is always true\n. I believe this form can be greatly simplified by using \ncurl command 2> >(sed -r 's/^/ERR /') > >(sed -r 's/^/OUT /')\n. ",
    "goposky": "It works but u need to have a bunch of non-default cygwin commands installed such as curl, etc..\n. ",
    "aars": "No prob! I really like this tool. How is the refactor going? Can I help? I'd like to add some features like a default command-to-pipe to, jq for example to always format/color json. Maybe even set output-command by content-type header. Also displaying the status-code on an empty response body would be nice.\n. Is the refactor branch currently useable?\n. Will do!\n. Cool! I'll have a look asap (tonight or tomorrow).. ",
    "jtojnar": "Since resty is expected to be run sourced, it would be nice if it could run in a \u201cstrict mode\u201d. You can use ${XDG_CONFIG_HOME:-} syntax to make it work.. ",
    "00dani": "Odd, which shell are you using? I'm on MacOS, which uses case-insensitive filenames, and those commands still aren't colliding for me in Zsh. Perhaps there's case insensitivity in Bash that's mucking things up?. Hmm, mine is also Mac OS Extended (Journaled), since I'm told a lot of stuff breaks if you try to use the case sensitive version. So we should be seeing the same behaviour. I just tried loading resty into Bash to see if anything changed, and it still seems to work just fine:\nshellsession\n$ source ~/.cache/zsh/zplugin/plugins/micha---resty/resty\n$ resty https://httpbin.org\nhttps://httpbin.org*\n$ PATCH /patch\n{\n  \"args\": {},\n  \"data\": \"\",\n  \"files\": {},\n  \"form\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"curl/7.51.0\"\n  },\n  \"json\": null,\n  \"origin\": \"220.233.83.30\",\n  \"url\": \"https://httpbin.org/patch\"\n}\n$ patch # this gave an error because i didn't give it a real patch file, but it ran the right program!\naa\npatch: **** Only garbage was found in the patch input.. Those binaries are definitely available, yep:\nshellsession\n$ source ~/.cache/zsh/zplugin/plugins/micha---resty/resty\n$ which -a PATCH\n/usr/bin/PATCH\n$ which -a TRACE\n/usr/bin/TRACE\nbash-3.2$ resty https://httpbin.org\nhttps://httpbin.org*\nbash-3.2$ PATCH /patch\n{\n  \"args\": {},\n  \"data\": \"\",\n  \"files\": {},\n  \"form\": {},\n  \"headers\": {\n    \"Accept\": \"*/*\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"curl/7.51.0\"\n  },\n  \"json\": null,\n  \"origin\": \"220.233.83.30\",\n  \"url\": \"https://httpbin.org/patch\"\n}\nI guess the which command in Bash doesn't consider shell functions? The functions are still available and work fine though.\nMeanwhile, if I do the same thing in Zsh, I can see both the function and command versions.\n```shellsession\n$ which -a PATCH\nPATCH () {\n    resty PATCH \"$@\"\n}\n/usr/bin/PATCH\n$ which -a TRACE\nTRACE () {\n    resty TRACE \"$@\"\n}\n/usr/bin/TRACE\n$ PATCH /patch\n{\n  \"args\": {},\n  \"data\": \"\",\n  \"files\": {},\n  \"form\": {},\n  \"headers\": {\n    \"Accept\": \"/\",\n    \"Host\": \"httpbin.org\",\n    \"User-Agent\": \"curl/7.51.0\"\n  },\n  \"json\": null,\n  \"origin\": \"220.233.83.30\",\n  \"url\": \"https://httpbin.org/patch\"\n}\n$ patch --version\npatch 2.5.8\nCopyright (C) 1988 Larry Wall\nCopyright (C) 2002 Free Software Foundation, Inc.\nThis program comes with NO WARRANTY, to the extent permitted by law.\nYou may redistribute copies of this program\nunder the terms of the GNU General Public License.\nFor more information about these matters, see the file named COPYING.\nwritten by Larry Wall and Paul Eggert\n``\nIs it possible that it's just thewhichcommand that's giving incorrect info on your system? Does actually invokingPATCH /patchorpatch --version` work?. ",
    "roele": "Looks like this depends on how the disk is formatted according to http://apple.stackexchange.com/questions/22297/is-bash-in-osx-case-insensitive. \nIn my case it's standard Mac OS Extended (Journaled) which is case preserving but NOT case sensitive.. The issue reproduces for me no matter what shell i use. It would also clash with TRACE for me. \nAre these binaries even available on your system? \n$ which patch\n/usr/bin/patch\n$ which trace\n/usr/bin/trace\nI'm not sure if these come by default or with the Command Line Tools. It might also worth be mentioning that i use brew with bash and coreutils installed.. It's definitely clashing, following command shows the version of /usr/bin/patch instead of the verbose output of a PATCH request.\n```\n$ PATCH /patch -v\npatch 2.5.8\nCopyright (C) 1988 Larry Wall\nCopyright (C) 2002 Free Software Foundation, Inc.\nThis program comes with NO WARRANTY, to the extent permitted by law.\nYou may redistribute copies of this program\nunder the terms of the GNU General Public License.\nFor more information about these matters, see the file named COPYING.\n``\nInvokingPATCH /patchsimply blocks as/usr/bin/patch`expects options.\nI also tried following options with no luck\n removing bash, coreutils from brew which resets the bash to the version 3.2\n removing .bash_profile to ensure no setting or other script is causing the behaviour\nFor now it seems the only way is to resort to plain cURL for these methods.. Surprisingly TRACE did not clash and worked as expected which led me to finally diff the latest version of resty with the one on my machine (installed via brew as well). Turns out the PATCH function is not available on the version i use, which explains the behaviour.\nConclusion is that if you install resty via brew ensure to use the HEAD version.\nbrew install --HEAD resty\nThanks for your help @00dani!. ",
    "pedroxs": "My config for prezto. I just updated from remote and still getting same error.. Hey @AdrieanKhisbe where you able to take a look into this? Do have any tips or point me in a direction where I could debug this on my machine?. @belak thanks for the help, I edited resty with your suggestion and it is working now! :+1: \nI will submit a PR with my changes so we may close this and related issue I opened on prezto repo.. Updated to add support for HTTP/2 . Well if that's the case I can revert the HTTP/2 commit and wait for this to merge before opening another PR. Is this repo abandoned? It's been a full year already.. ",
    "belak": "I believe this is related to the noclobber option we set in prezto. \nThis can be overridden on a case by case basis by using >| rather than simply >, or locally disabling the setting (which isn't as easy to do if you're trying to support both bash and zsh). I'm not a collaborator on this repo, but for anyone interested in the relevant portions of the docs, here they are:\n\nhttp://zsh.sourceforge.net/Doc/Release/Redirection.html\n  \"Same as >, except that the file is truncated to zero length if it exists, even if CLOBBER is unset.\"\nhttps://www.gnu.org/software/bash/manual/html_node/Redirections.html\n  \"If the redirection operator is \u2018>|\u2019, or the redirection operator is \u2018>\u2019 and the noclobber option is not enabled, the redirection is attempted even if the file named by word exists.\". \n",
    "vidstige": "Cannot reproduce on my new mac anymore, works fine now. I installed it by curling the file, if I remember correctly.. ",
    "komapa": "Any chance to get this merged?. The -p is redundant or you can remove the mkdir call above. What you have now is the safest though.. This is the relevant part. ",
    "broerman": "Try to expand aliases in the shell.\nThis works for me.\n#!/bin/bash\nshopt -s expand_aliases\n\nBernd. "
}