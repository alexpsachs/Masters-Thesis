{
    "rigoneri": "I'm going to merge this manually since there might be some conflicts...\n. This pull request has all your info in it which shouldn't be pulled in... \n. Hey Garry! I'll pull this in once you got Syte on your website... I don't want the link pointing to a site that doesn't use Syte, sam did the same thing :)\n. Hey http://defaude.info is not using Syte, could you let me know when it's out there so I can pull this one in. Thanks!\n. Thanks! I had fixed this on old branch but forgot to merge it in... \n. Hey just make sure to pull the Github fixes to your Syte... Thanks!\n. Hey, just fyi github shutdown their v2 api so make sure you pull the latest changes so you can integrate with v3. Thanks\n. Hmm that's strange... Make sure you copy and pasted the client_id, and client_secret correctly. Also make sure that GITHUB_OAUTH_ENABLED is set to True, If you got the access token back double check the access token was copy and pasted correctly. This message usually shows when the access token is wrong. Thanks!\n. Cool... Ok. Are you running this locally (127.0.0.1:8000)? Or are you running this in heroku? If it's heroku the callback url in github should be http://eveiga.herokuapp.com/github/auth,\nIf it's locally make sure that the DEPLOYMENT_MODE is pointing to 'dev' so the SITE_ROOT_URI is set to the local url and so the redirect_uri paramater is the same as the one saved in github (127.0.0.1:8000)\nThanks!\n. Did you redeploy statics? Probably bump up to 1.1\n. Cool, np! Btw just a suggestion you should always bump up the COMRESS_REVISION_NUMBER so it creates statics files with new names... That way it doesn't uses the browser cached ones and people don't have to force reload to see the difference. Thanks!\n. Hey http://manavo.com is not using Syte, could you let me know when it's out there so I can pull this one in. Thanks!\n. Good work! Thanks\n. Nice catch!! Thanks!!\n. Btw I had to rename the github template... since it's been cached...\n. Hey I can't merge this pull request in, you made to much changes. I'll take care of adding your picture and link. Also you should not have committed your secrets to github, other people can see it use it. I recommend you changing them. Thanks!!\n. What's the url the your Syte is deployed?\n. Cool thanks!! \n. Thanks! But I'm not sure how you pull request is any different from what I already got. Btw! Thanks for the node fork, could you let me know once you got it all ready so I can update the readme pointing to it. Thanks!\n. I'm going to merge this manually since your pull request has a lot of personal changes...\n. Thanks for this! Btw, I made some adjustments if you want to check it out...\n. Hey ericmartindale.com is not using Syte. Could you let me know once it's up so I can merge this pull request. Thanks!\n. Closing this for now, please ropen when you have ericmartindale.com using Syte. Thanks!\n. Hey http://www.paulyarrow.com is not using Syte yet, could you let me know when it does so I can merge this in. Thanks!\n. Closing this for now, please ropen when you have paulyarrow.com using Syte. Thanks!!\n. Hey Thanks for this! However I'm not going to merge this in just yet. A big part of Syte is not having to rely on a database, if we start getting more people interested I will do so, for now I'm thinking about adding a note on the doc that points to your branch.\nOnce again thanks for doing this! Do you have a version of a Syte using your database implementation anywhere?\n- Rigo\n. Thanks!! This is looking great!! I do have a last.fm account and will try it out... I might make some organization adjustments to make it easy for people to integrate with other services and will manually merge this in. \n. Thanks for doing this! I really appreciate it....\n. Btw... I cleaned up & reorganized views.py and links.js...\n. hmmm... why did you remove the https from the jquery url? why not even http?\n. Hey http://claytonferris.com is not using Syte. Could you let me know once it's using so I can merge this pull request. Thanks!\n. Thanks for this... I was in lazy mode yesterday and endup just making all views_* I'll pull this in later this evening.... \nIf you want to do the PEP8 changes go for it, the only one I strongly deslike is the maximum line length (79 chars). To me it makes the code ugly and harder to read... So if you could leave that one alone I would appreciate it :) \n. Once again! Thanks for doing this!\n. Look at you go! Thanks :)\n. Hmm... I appreciate the work on this but I've never actually heard of Ohloh... I wonder how many people would actually benefit from this pull request... Does anybody else uses Ohloh?\n. Hey http://tomclaus.be is not using syte... Could you ping me when it's ready to go so I can pull this in... Thanks!\n. I'm a little confused of how this can be added to Syte... Most of Syte's integration are consumer products...\n. Stack Exchange integration is now available thanks to this pull request: https://github.com/rigoneri/syte/pull/168\nI''ll manually add your info....\n. Sorry I haven't had time to look at this... Maybe this weekend. Thanks for all the work!\n. I think it's all set! Thanks for the great work!!!\n. Hey decided not to take the change of the foursquare address... Thanks for the help!\n. Thanks!\n. I usually just need your picture and the changeset on README.md but I can manually merge it in.... However Jayhughes.co not working yet so once it does I'll do it... Thanks!\n. Closing this for now... let me know when you have it ready...\n. cool!\n. I was just looking into this... Thanks @gkoo and @eventh!!!\n. What's your website url? Could you also add that to README? Thanks\n. Awesome thanks!\n. ????\n. I'm going to merge this manually since there might be some conflicts...\n. This pull request has all your info in it which shouldn't be pulled in... \n. Hey Garry! I'll pull this in once you got Syte on your website... I don't want the link pointing to a site that doesn't use Syte, sam did the same thing :)\n. Hey http://defaude.info is not using Syte, could you let me know when it's out there so I can pull this one in. Thanks!\n. Thanks! I had fixed this on old branch but forgot to merge it in... \n. Hey just make sure to pull the Github fixes to your Syte... Thanks!\n. Hey, just fyi github shutdown their v2 api so make sure you pull the latest changes so you can integrate with v3. Thanks\n. Hmm that's strange... Make sure you copy and pasted the client_id, and client_secret correctly. Also make sure that GITHUB_OAUTH_ENABLED is set to True, If you got the access token back double check the access token was copy and pasted correctly. This message usually shows when the access token is wrong. Thanks!\n. Cool... Ok. Are you running this locally (127.0.0.1:8000)? Or are you running this in heroku? If it's heroku the callback url in github should be http://eveiga.herokuapp.com/github/auth,\nIf it's locally make sure that the DEPLOYMENT_MODE is pointing to 'dev' so the SITE_ROOT_URI is set to the local url and so the redirect_uri paramater is the same as the one saved in github (127.0.0.1:8000)\nThanks!\n. Did you redeploy statics? Probably bump up to 1.1\n. Cool, np! Btw just a suggestion you should always bump up the COMRESS_REVISION_NUMBER so it creates statics files with new names... That way it doesn't uses the browser cached ones and people don't have to force reload to see the difference. Thanks!\n. Hey http://manavo.com is not using Syte, could you let me know when it's out there so I can pull this one in. Thanks!\n. Good work! Thanks\n. Nice catch!! Thanks!!\n. Btw I had to rename the github template... since it's been cached...\n. Hey I can't merge this pull request in, you made to much changes. I'll take care of adding your picture and link. Also you should not have committed your secrets to github, other people can see it use it. I recommend you changing them. Thanks!!\n. What's the url the your Syte is deployed?\n. Cool thanks!! \n. Thanks! But I'm not sure how you pull request is any different from what I already got. Btw! Thanks for the node fork, could you let me know once you got it all ready so I can update the readme pointing to it. Thanks!\n. I'm going to merge this manually since your pull request has a lot of personal changes...\n. Thanks for this! Btw, I made some adjustments if you want to check it out...\n. Hey ericmartindale.com is not using Syte. Could you let me know once it's up so I can merge this pull request. Thanks!\n. Closing this for now, please ropen when you have ericmartindale.com using Syte. Thanks!\n. Hey http://www.paulyarrow.com is not using Syte yet, could you let me know when it does so I can merge this in. Thanks!\n. Closing this for now, please ropen when you have paulyarrow.com using Syte. Thanks!!\n. Hey Thanks for this! However I'm not going to merge this in just yet. A big part of Syte is not having to rely on a database, if we start getting more people interested I will do so, for now I'm thinking about adding a note on the doc that points to your branch.\nOnce again thanks for doing this! Do you have a version of a Syte using your database implementation anywhere?\n- Rigo\n. Thanks!! This is looking great!! I do have a last.fm account and will try it out... I might make some organization adjustments to make it easy for people to integrate with other services and will manually merge this in. \n. Thanks for doing this! I really appreciate it....\n. Btw... I cleaned up & reorganized views.py and links.js...\n. hmmm... why did you remove the https from the jquery url? why not even http?\n. Hey http://claytonferris.com is not using Syte. Could you let me know once it's using so I can merge this pull request. Thanks!\n. Thanks for this... I was in lazy mode yesterday and endup just making all views_* I'll pull this in later this evening.... \nIf you want to do the PEP8 changes go for it, the only one I strongly deslike is the maximum line length (79 chars). To me it makes the code ugly and harder to read... So if you could leave that one alone I would appreciate it :) \n. Once again! Thanks for doing this!\n. Look at you go! Thanks :)\n. Hmm... I appreciate the work on this but I've never actually heard of Ohloh... I wonder how many people would actually benefit from this pull request... Does anybody else uses Ohloh?\n. Hey http://tomclaus.be is not using syte... Could you ping me when it's ready to go so I can pull this in... Thanks!\n. I'm a little confused of how this can be added to Syte... Most of Syte's integration are consumer products...\n. Stack Exchange integration is now available thanks to this pull request: https://github.com/rigoneri/syte/pull/168\nI''ll manually add your info....\n. Sorry I haven't had time to look at this... Maybe this weekend. Thanks for all the work!\n. I think it's all set! Thanks for the great work!!!\n. Hey decided not to take the change of the foursquare address... Thanks for the help!\n. Thanks!\n. I usually just need your picture and the changeset on README.md but I can manually merge it in.... However Jayhughes.co not working yet so once it does I'll do it... Thanks!\n. Closing this for now... let me know when you have it ready...\n. cool!\n. I was just looking into this... Thanks @gkoo and @eventh!!!\n. What's your website url? Could you also add that to README? Thanks\n. Awesome thanks!\n. ????\n. ",
    "garrypolley": "It's up now.  But the amazon micros are performing as well as I payed for them to. \n. Sqlite is also not scalable.  If it were to be used over a long period of time it would not work well.  If a db is to be used I recommend postgres, heroku lets you do it for free anyway.  Local stuff with Django uses sqlite because it's easy for testing, not for real time deployments. \n.  Some info on sqlite that shows some good use cases.  Most small, low traffic websites would be okay, but with a personal website images, music, files are often uploaded. These may take up a lot of space, arguably you could place these on the file system and not the db though.  SQlite stores all information in one static file and has a hard 2TB limit.\nIn my opinion max hard limits on the overall database means it doesn't scale well (or at all).   Also, one process change at a time is a deal breaker for me.  Thanks for the brash comment though.\n. It's up now.  But the amazon micros are performing as well as I payed for them to. \n. Sqlite is also not scalable.  If it were to be used over a long period of time it would not work well.  If a db is to be used I recommend postgres, heroku lets you do it for free anyway.  Local stuff with Django uses sqlite because it's easy for testing, not for real time deployments. \n.  Some info on sqlite that shows some good use cases.  Most small, low traffic websites would be okay, but with a personal website images, music, files are often uploaded. These may take up a lot of space, arguably you could place these on the file system and not the db though.  SQlite stores all information in one static file and has a hard 2TB limit.\nIn my opinion max hard limits on the overall database means it doesn't scale well (or at all).   Also, one process change at a time is a deal breaker for me.  Thanks for the brash comment though.\n. ",
    "franciscolourenco": "Oops, didn't notice trailing whitespace cleanup. \nLet me know if I should get rid of it.\n. Oops, didn't notice trailing whitespace cleanup. \nLet me know if I should get rid of it.\n. ",
    "Shizmob": "Website in in deployment...\n. What I learned today: committing after a pull request automatically adds to that request. Auth keys invalidated.\n. App deployed successfully on http://aureax.\u2256\u203f\u2256.ws\n. That's http://aureax.xn--hwg34fba.ws for browsers that can't handle IDNs.\n. Website in in deployment...\n. What I learned today: committing after a pull request automatically adds to that request. Auth keys invalidated.\n. App deployed successfully on http://aureax.\u2256\u203f\u2256.ws\n. That's http://aureax.xn--hwg34fba.ws for browsers that can't handle IDNs.\n. ",
    "defaude": "Hi,\nyeah I'm pretty occupied with my regular job these days so it might be a little while until I manage to set it up - but I wanted to make sure to claim my beloved ff8000 :D\nThanks for this awesome project!!\n. Hey :) I'll close this pull request for now and send in a newer one soon ;)\n. Hi,\nyeah I'm pretty occupied with my regular job these days so it might be a little while until I manage to set it up - but I wanted to make sure to claim my beloved ff8000 :D\nThanks for this awesome project!!\n. Hey :) I'll close this pull request for now and send in a newer one soon ;)\n. ",
    "EvilFaeton": "Yeap, thanks, recently pull fixes for github. \n. Yeap, thanks, recently pull fixes for github. \n. ",
    "eveiga": "Hey,\nThanks a lot for syte and for the tip regarding github oauth v3.\nI've made the changes following your guide but without success. After registering my new application and inserting the client_ID and client_SECRET,  I go to the provided URL (http://127.0.0.1:8000/github/auth) but the only thing I'm receiving from the request is this JSON:\n{\"repos\": {\"message\": \"Bad credentials\"}, \"user\": {\"message\": \"Bad credentials\"}}\nDo you have any idea what it might be?\nBest Regards,\n. You'r right, OAUTH wasn't enabled.. \nEither way, when I click in the Allow button it remains on the same page :/\nHere goes some info\nGithub application\nURL: http://eveiga.herokuapp.com\nCallbackUrl: http://127.0.0.1:8000/github/auth\nRunserver output:\n[13/Jun/2012 08:46:28] \"GET /github/auth?error=redirect_uri_mismatch HTTP/1.1\" 302 0\nThis is the redirect_uri on the query string:\nredirect_uri=http://eveiga.herokuapp.com/github/auth/\nIf I change this arg to http://127.0.0.1:8000/github/auth the page is properly redirected after clicking the allow button, but I receive this error message \"Unable to get Access Token redirect_uri_mismatch\"\nAny ideas? :/\nBest regards\n. Done! I was in pro mode :)\nBest regards!\n. You'r gonna kill me man :/ Now it wont work on production:\nSo, after a successful \"local deploy\" I've: \nset the \nGITHUB_OAUTH_ENABLED to False \nDEPLOYMENT_MODE to 'pro'. \nchange the\nCallback URL to http://eveiga.herokuapp.com/github/auth\nPushed to heroku but no  success, still timeout on github link..\nAm I missing something?\n. Yeah, it was missing the statics, I'm not used to the compression :)\nIt's done! Thanks again for your patience.\nBest Regards,\n. Hey,\nThanks a lot for syte and for the tip regarding github oauth v3.\nI've made the changes following your guide but without success. After registering my new application and inserting the client_ID and client_SECRET,  I go to the provided URL (http://127.0.0.1:8000/github/auth) but the only thing I'm receiving from the request is this JSON:\n{\"repos\": {\"message\": \"Bad credentials\"}, \"user\": {\"message\": \"Bad credentials\"}}\nDo you have any idea what it might be?\nBest Regards,\n. You'r right, OAUTH wasn't enabled.. \nEither way, when I click in the Allow button it remains on the same page :/\nHere goes some info\nGithub application\nURL: http://eveiga.herokuapp.com\nCallbackUrl: http://127.0.0.1:8000/github/auth\nRunserver output:\n[13/Jun/2012 08:46:28] \"GET /github/auth?error=redirect_uri_mismatch HTTP/1.1\" 302 0\nThis is the redirect_uri on the query string:\nredirect_uri=http://eveiga.herokuapp.com/github/auth/\nIf I change this arg to http://127.0.0.1:8000/github/auth the page is properly redirected after clicking the allow button, but I receive this error message \"Unable to get Access Token redirect_uri_mismatch\"\nAny ideas? :/\nBest regards\n. Done! I was in pro mode :)\nBest regards!\n. You'r gonna kill me man :/ Now it wont work on production:\nSo, after a successful \"local deploy\" I've: \nset the \nGITHUB_OAUTH_ENABLED to False \nDEPLOYMENT_MODE to 'pro'. \nchange the\nCallback URL to http://eveiga.herokuapp.com/github/auth\nPushed to heroku but no  success, still timeout on github link..\nAm I missing something?\n. Yeah, it was missing the statics, I'm not used to the compression :)\nIt's done! Thanks again for your patience.\nBest Regards,\n. ",
    "manavo": "Hey! Sorry, was still configuring it locally and hadn't put it up on Heroku! Have put it up now! (still configuring the integrations, but it's visible now)\n. 206 is on master (readme file) and this one is for the gh-pages branch!\n. Realised after i did the pull request that I forgot to rebase and all the merge commits got included :-(\n. Hey! Sorry, was still configuring it locally and hadn't put it up on Heroku! Have put it up now! (still configuring the integrations, but it's visible now)\n. 206 is on master (readme file) and this one is for the gh-pages branch!\n. Realised after i did the pull request that I forgot to rebase and all the merge commits got included :-(\n. ",
    "href": "Works for me :)\n. I will thanks, I really went for quick and dirty anyway :)\n. Works for me :)\n. I will thanks, I really went for quick and dirty anyway :)\n. ",
    "ytspar": "Sorry about that, should have mentioned: yurytsukerman.com\n. Sorry about that, should have mentioned: yurytsukerman.com\n. ",
    "davidsivocha": "Forgot to add the URL patterns for serving the actual files. Amended and added.\n. Oh and if you are interested, I saw that you mentioned you wanted to see a fork written in Node. So I'm having a bash at that one: https://github.com/davidsivocha/syte/tree/node\n. I certainly will let you know as soon as my Node fork is ready. \n. Had to remake due to a huge conflict merge error I managed to create\nNew fork for my node-js build can now be found here: https://github.com/davidsivocha/syte/tree/node-js\nWork in progress at the moment. But I finally got proper branching sorted out, with upstream merges for the master so I can see any changes that come in on the Python build so I can start writing them into my node version.\nOh the issues we encounter when we get new PCs\n. Excellent, I have a couple of commits I need to push through when I get the chance, that lay out the base framework for the settings and the url structure. Using Hogan.js for templating built on ExpressJS for web framework.\n. Forgot to add the URL patterns for serving the actual files. Amended and added.\n. Oh and if you are interested, I saw that you mentioned you wanted to see a fork written in Node. So I'm having a bash at that one: https://github.com/davidsivocha/syte/tree/node\n. I certainly will let you know as soon as my Node fork is ready. \n. Had to remake due to a huge conflict merge error I managed to create\nNew fork for my node-js build can now be found here: https://github.com/davidsivocha/syte/tree/node-js\nWork in progress at the moment. But I finally got proper branching sorted out, with upstream merges for the master so I can see any changes that come in on the Python build so I can start writing them into my node version.\nOh the issues we encounter when we get new PCs\n. Excellent, I have a couple of commits I need to push through when I get the chance, that lay out the base framework for the settings and the url structure. Using Hogan.js for templating built on ExpressJS for web framework.\n. ",
    "ghost": "@davidsivocha  what happened to ur fork? :)\n. haha.. yeah I also got a new PC recently.. took me a load amount of time to get it working properly again.\nWhenever I have time, I'll try to help you on that branch!\nCheers!\n. +1\nTotally awesome job. This should be rolled in, IMO.\nI also noticed this behavior (which was probably not introduced by this pull request):\nIf you open the StackOverflow view, close it and open it again, then all instances of creation_date are rendered as 'a few seconds ago' instead of what they were the first time the View loaded. This behavior is probably due to line 39, where the Object is being modified directly:\nt.creation_date = moment.unix(t.creation_date).fromNow();\nThe next time the view loads t.creation_date is the timestamp of the last time the user opened that View.\nTo avoid this, I'm just assigning it to a new property:\nt.time_ago = moment.unix(t.creation_date).fromNow();\nThen in the template, line 36:\n<strong>{{ timeline_type }} {{ time_ago }}</strong>\nMaybe that should be rolled into this patch as well--what do you think @rigoneri?\n. @davidsivocha  what happened to ur fork? :)\n. haha.. yeah I also got a new PC recently.. took me a load amount of time to get it working properly again.\nWhenever I have time, I'll try to help you on that branch!\nCheers!\n. +1\nTotally awesome job. This should be rolled in, IMO.\nI also noticed this behavior (which was probably not introduced by this pull request):\nIf you open the StackOverflow view, close it and open it again, then all instances of creation_date are rendered as 'a few seconds ago' instead of what they were the first time the View loaded. This behavior is probably due to line 39, where the Object is being modified directly:\nt.creation_date = moment.unix(t.creation_date).fromNow();\nThe next time the view loads t.creation_date is the timestamp of the last time the user opened that View.\nTo avoid this, I'm just assigning it to a new property:\nt.time_ago = moment.unix(t.creation_date).fromNow();\nThen in the template, line 36:\n<strong>{{ timeline_type }} {{ time_ago }}</strong>\nMaybe that should be rolled into this patch as well--what do you think @rigoneri?\n. ",
    "orf": "Not yet, I was going to see if you merged this and then set one up - however now I think there are some additions I will do before setting a demo up. I understand about the database part, but perhaps making it use a Sqlite database file by default would be more suitable? Sqlite3 ships with python by default, is only a single file and doesn't require an additional service to query it so its very very lightweight.\n. \"Sqlite is also not scalable\"\nThat's a pretty ridiculous thing to say in this context. Yeah, it won't scale to a thousand transactions a second like Postgres might but we are talking about a personal blog site.\nIts 1 post per row, and SQlite can easily handle tens of thousand of rows (and more, but I have never used it with such workloads). It would take you 27 years of posting once a day to get to 10,000 rows and even need to consider using a database like Postgresql or Mysql. Its read speeds are blazing fast (near that of 'direct' IO to a flat file) and concurrency isn't really an issue here (or though it handles that fine).\nSqlite3 is the perfect choice for this workload - small, compact and greatly reduced overhead. I use it with simple and it works just fine. Please use your brain and do some research before making such statements.\n. You should never store static files like images, music or files in a database - BLOB's are a bad bad thing. You store them on the file system because that's what a file system is for. It also means they can be served by nginx or some other high performance webserver.\nAlso I don't know where you got your information from but the sqlite documentation clearly states the max size of a Sqlite database is 140 terrabytes (65536 pages). One process change at a time is generally enough, blog's are by nature read intensive and don't need a high write throughput.\n. Not yet, I was going to see if you merged this and then set one up - however now I think there are some additions I will do before setting a demo up. I understand about the database part, but perhaps making it use a Sqlite database file by default would be more suitable? Sqlite3 ships with python by default, is only a single file and doesn't require an additional service to query it so its very very lightweight.\n. \"Sqlite is also not scalable\"\nThat's a pretty ridiculous thing to say in this context. Yeah, it won't scale to a thousand transactions a second like Postgres might but we are talking about a personal blog site.\nIts 1 post per row, and SQlite can easily handle tens of thousand of rows (and more, but I have never used it with such workloads). It would take you 27 years of posting once a day to get to 10,000 rows and even need to consider using a database like Postgresql or Mysql. Its read speeds are blazing fast (near that of 'direct' IO to a flat file) and concurrency isn't really an issue here (or though it handles that fine).\nSqlite3 is the perfect choice for this workload - small, compact and greatly reduced overhead. I use it with simple and it works just fine. Please use your brain and do some research before making such statements.\n. You should never store static files like images, music or files in a database - BLOB's are a bad bad thing. You store them on the file system because that's what a file system is for. It also means they can be served by nginx or some other high performance webserver.\nAlso I don't know where you got your information from but the sqlite documentation clearly states the max size of a Sqlite database is 140 terrabytes (65536 pages). One process change at a time is generally enough, blog's are by nature read intensive and don't need a high write throughput.\n. ",
    "durden": "I've added support for local posts via Markdown files instead of a database.  You can just write markdown files, place them in the 'articles' directory and your ready to go.  No other real configuration on the server-side necessary.\nYou can check it out here, https://github.com/durden/syte/tree/logr_integration.\n. Looks good! I'll update my branch soon with improvements.\n. @eventh You are right.  Thanks for the correction.  Hopefully nothing is missing now.\n. Good call again @eventh.  The process to add a new service is pretty lengthy.  Maybe there could be a hook into manage.py that adds a command like 'add_new_service' that stubs out most of this?\n. I've added support for local posts via Markdown files instead of a database.  You can just write markdown files, place them in the 'articles' directory and your ready to go.  No other real configuration on the server-side necessary.\nYou can check it out here, https://github.com/durden/syte/tree/logr_integration.\n. Looks good! I'll update my branch soon with improvements.\n. @eventh You are right.  Thanks for the correction.  Hopefully nothing is missing now.\n. Good call again @eventh.  The process to add a new service is pretty lengthy.  Maybe there could be a hook into manage.py that adds a command like 'add_new_service' that stubs out most of this?\n. ",
    "TheLove": "can Syte support Right To Left ? \nthere's a lot of RTL users these days (arabic+ hebrew) would like to use Syte\nGL\n. can Syte support Right To Left ? \nthere's a lot of RTL users these days (arabic+ hebrew) would like to use Syte\nGL\n. ",
    "BradMcGonigle": "I'd love to see a version of Syte that had the option to save all the 3rd party data to a local database.  I'm a hoarder and always believe in controlling my own data.\n. I'd love to see a version of Syte that had the option to save all the 3rd party data to a local database.  I'm a hoarder and always believe in controlling my own data.\n. ",
    "bnb": "Again, I'd love to see this incorporated into Syte core. I want to host my own blog. This seems more advanced than the Markdown version, so I'd be inclined to pull this into the core rather than that one.\n. I would love to see this integrated into Syte's core. I don't want a hosted blog at Tumblr or WordPress--I want to host my own. Having a Markdown blog is exactly what I want. Please consider integrating this again.\n. Again, I'd love to see this incorporated into Syte core. I want to host my own blog. This seems more advanced than the Markdown version, so I'd be inclined to pull this into the core rather than that one.\n. I would love to see this integrated into Syte's core. I don't want a hosted blog at Tumblr or WordPress--I want to host my own. Having a Markdown blog is exactly what I want. Please consider integrating this again.\n. ",
    "eventh": "I think HELP.md is missing a step for modifying syte/urls.py\n. I'm unsure if its missing a step for \"syte/static/js/components/links.js\", or if step 6 is supposed to cover it?\n. Yes, and/or meta-programming in links.js, urls.py, compress.py, context_processor.py and base.html. Generate a list of enabled services, and use it in said places.\n. I've used the documentation in this pull requests when creating two new services, and they were very helpful. I think this pull request is ready to be merged.\n. Its a trick that let the browser select http or https depending on if the page is served over http or https. See http://encosia.com/3-reasons-why-you-should-let-google-host-jquery-for-you/#protocolless for more detail.\nThis change should prevent an expensive https connection to download jquery when serving syte over http.\nA more detailed explanation can be found here: http://encosia.com/cripple-the-google-cdns-caching-with-a-single-character/\n. Most of the Python code in Syte does not follow the PEP 8 coding standard [1]. How would you feel about a pull request that updates the Python code to follow said standard?\n[1] http://www.python.org/dev/peps/pep-0008/\n. I've added a commit to this pull request that fixes PEP 8 compliance (except lines too long).\nI also added utf-8 coding markers to top of Python modules, emacs style.\nAnd I did some additional changes to compress.py:\n1. use context-manager instead of manually closing open files.\n2. use os.path.join to allow compress to be run from anywhere.\n3. use os.mkdir and os.remove instead of Linux/Mac shell commands.\nI've tested the changes, and everything seems to work, but I'm unable to verify all the different integrations as I don't have accounts for them all.\n. I also removed httplib2 from requirements.txt as it was used by oauth2 which we replaced by rauth.\nIf you upgrade requests from 0.12.1 to 0.13.2 or later (latest is 0.13.6) you could remove the following dependencies from Syte:\n- certifi\n- chardet\n- oauthlib\n- pyasn1\n- rsa\n. By the way, pybars require PyMeta which you might want to include in requirements.txt\n. Ups, seems I introduced that bug. Sorry :)\n. I should add I tested this on Opera, Chromium,Firefox, Internet Explorer and Safari on iPad/iPhone.\n. I agree its doubtful many people might be interested in Ohloh.net integration.\nThis can probably better live as a branch in my fork, so I'm closing this pull request.\nIf anyone want to use Ohloh integration they can simply pull my Ohloh-integration branch themselves.\n. Github-pages are generated from the README.md file, you need to make your modification in said file instead of the gh-pages html file.\n. Maybe the Wordpress support should be rewritten, to behave similar as Tumbler and other integrations.\nOne could move the rest API call to a Django view, which return json just as the tumbler view. Then the JavaScript code does not need to know whether the blog platform is tumbler or wordpress? It should be trivial, but with two very small advantages: less and simpler JavaScript code; implementation more similar to other integrations.\n. Thats true.\nPersonally I have enabled some caching in Django, which limits the number of API calls instead of 1+ for each visitor, but I don't know if anyone else does the same and if wordpress throttles their service.\n. Did you forget to modify bitbucket.js, stackoverflow.js, and steam.js?\n. Ah, you need to merge in master to your branch, then fix stackoverflow.js and steam.js, as well as bitbucket.js and links.js.\n. I've tested this pull request on latest Chromium, Opera, Firefox, and IE10, and also Safari on iPad and iPhone.\nIt seemed to work, so I think its ready for merging.\n. You should also add the image to README.md, for example as this pull request did:\nhttps://github.com/rigoneri/syte/pull/180/files\n. I think HELP.md is missing a step for modifying syte/urls.py\n. I'm unsure if its missing a step for \"syte/static/js/components/links.js\", or if step 6 is supposed to cover it?\n. Yes, and/or meta-programming in links.js, urls.py, compress.py, context_processor.py and base.html. Generate a list of enabled services, and use it in said places.\n. I've used the documentation in this pull requests when creating two new services, and they were very helpful. I think this pull request is ready to be merged.\n. Its a trick that let the browser select http or https depending on if the page is served over http or https. See http://encosia.com/3-reasons-why-you-should-let-google-host-jquery-for-you/#protocolless for more detail.\nThis change should prevent an expensive https connection to download jquery when serving syte over http.\nA more detailed explanation can be found here: http://encosia.com/cripple-the-google-cdns-caching-with-a-single-character/\n. Most of the Python code in Syte does not follow the PEP 8 coding standard [1]. How would you feel about a pull request that updates the Python code to follow said standard?\n[1] http://www.python.org/dev/peps/pep-0008/\n. I've added a commit to this pull request that fixes PEP 8 compliance (except lines too long).\nI also added utf-8 coding markers to top of Python modules, emacs style.\nAnd I did some additional changes to compress.py:\n1. use context-manager instead of manually closing open files.\n2. use os.path.join to allow compress to be run from anywhere.\n3. use os.mkdir and os.remove instead of Linux/Mac shell commands.\nI've tested the changes, and everything seems to work, but I'm unable to verify all the different integrations as I don't have accounts for them all.\n. I also removed httplib2 from requirements.txt as it was used by oauth2 which we replaced by rauth.\nIf you upgrade requests from 0.12.1 to 0.13.2 or later (latest is 0.13.6) you could remove the following dependencies from Syte:\n- certifi\n- chardet\n- oauthlib\n- pyasn1\n- rsa\n. By the way, pybars require PyMeta which you might want to include in requirements.txt\n. Ups, seems I introduced that bug. Sorry :)\n. I should add I tested this on Opera, Chromium,Firefox, Internet Explorer and Safari on iPad/iPhone.\n. I agree its doubtful many people might be interested in Ohloh.net integration.\nThis can probably better live as a branch in my fork, so I'm closing this pull request.\nIf anyone want to use Ohloh integration they can simply pull my Ohloh-integration branch themselves.\n. Github-pages are generated from the README.md file, you need to make your modification in said file instead of the gh-pages html file.\n. Maybe the Wordpress support should be rewritten, to behave similar as Tumbler and other integrations.\nOne could move the rest API call to a Django view, which return json just as the tumbler view. Then the JavaScript code does not need to know whether the blog platform is tumbler or wordpress? It should be trivial, but with two very small advantages: less and simpler JavaScript code; implementation more similar to other integrations.\n. Thats true.\nPersonally I have enabled some caching in Django, which limits the number of API calls instead of 1+ for each visitor, but I don't know if anyone else does the same and if wordpress throttles their service.\n. Did you forget to modify bitbucket.js, stackoverflow.js, and steam.js?\n. Ah, you need to merge in master to your branch, then fix stackoverflow.js and steam.js, as well as bitbucket.js and links.js.\n. I've tested this pull request on latest Chromium, Opera, Firefox, and IE10, and also Safari on iPad and iPhone.\nIt seemed to work, so I think its ready for merging.\n. You should also add the image to README.md, for example as this pull request did:\nhttps://github.com/rigoneri/syte/pull/180/files\n. ",
    "dcesiel": "Sorry looks like changes were made from my fork.  Will resubmit pull.\n. Sorry looks like changes were made from my fork.  Will resubmit pull.\n. ",
    "Swatto": "That's really cool because I don't want to use Tumblr.\nI think a lot of people would agree with that choice.\n. That's really cool because I don't want to use Tumblr.\nI think a lot of people would agree with that choice.\n. ",
    "vladimiroff": "+1 to this one.\n. +1 to this one.\n. ",
    "sym3tri": "+1.\nI'd like to just point to a github repo with posts in markdown format.\n. +1.\nI'd like to just point to a github repo with posts in markdown format.\n. ",
    "mscoutermarsh": ":+1:\nTrying this out now.\n. Just tried this out.\nIt works. Nice job. :+1: \n. :+1:\nTrying this out now.\n. Just tried this out.\nIt works. Nice job. :+1: \n. ",
    "yumyo": "+1\n. +1\n. ",
    "techdragon": "since this doesnt break the 'no database required' philosophy, can we look at getting this merged in @rigoneri  ?\n. since this doesnt break the 'no database required' philosophy, can we look at getting this merged in @rigoneri  ?\n. ",
    "theshortcut": "As soon as the DNS propagates it should be live now. Thanks for Syte!\n. As soon as the DNS propagates it should be live now. Thanks for Syte!\n. ",
    "ameswarb": "Thanks :)\n. Thanks :)\n. ",
    "DavidRagone": "I was wondering the same thing myself. Never heard of Ohloh (until now that is). Seems like a cool open-source focused social site.\n. Is there any reason this change needs to be across 2 different PR's? (see https://github.com/rigoneri/syte/pull/206)\n. I've found it helpful, when I'm about ready to do a PR, to checkout master, pull, checkout my feature branch, and run git rebase -i master, then squash commits as necessary, so all that's left is one nice feature commit.\n. Otherwise, :+1: \n. Just guessing here, but perhaps adding gagnechris/syte remote, git fetch on that, then merge it into your branch on local?\n. I was wondering the same thing myself. Never heard of Ohloh (until now that is). Seems like a cool open-source focused social site.\n. Is there any reason this change needs to be across 2 different PR's? (see https://github.com/rigoneri/syte/pull/206)\n. I've found it helpful, when I'm about ready to do a PR, to checkout master, pull, checkout my feature branch, and run git rebase -i master, then squash commits as necessary, so all that's left is one nice feature commit.\n. Otherwise, :+1: \n. Just guessing here, but perhaps adding gagnechris/syte remote, git fetch on that, then merge it into your branch on local?\n. ",
    "toovs": "added README changes to my other pull request\n. everything good here?\n. added README changes to my other pull request\n. everything good here?\n. ",
    "fourty2": "I added tent.io support to my syte instance. ( http://www.henklein.com )  It's still a bit hacky, but I will clean it up, and make a pull request in a few days :)\n. I added tent.io support to my syte instance. ( http://www.henklein.com )  It's still a bit hacky, but I will clean it up, and make a pull request in a few days :)\n. ",
    "tomgasson": "You probably don't want rigoneri to merge your second commit there b99d3e5ae680606409bc158df130c2784d2a831f\n. You probably don't want rigoneri to merge your second commit there b99d3e5ae680606409bc158df130c2784d2a831f\n. ",
    "krisrang": "Oops yea, my bad.\n. Oops yea, my bad.\n. ",
    "davoclavo": "Check this article in order to remove your sensitive info. https://help.github.com/articles/remove-sensitive-data\n. Check this article in order to remove your sensitive info. https://help.github.com/articles/remove-sensitive-data\n. ",
    "hassankhan": "Also added StackOverflow integration (without authentication), and fixed some followup bugs. Also updated requirements.txt and all JS libraries.\n. Err, I checked the Steam profile on my iPhone, and the content just cuts off, it doesn't reflow. I'm no good with CSS, so could someone fix it?\n. Managed to have a look at it yet? :smile: \n. The RSS stuff could probably be put in home.py, I suppose. Should I just do that?\n. Also added StackOverflow integration (without authentication), and fixed some followup bugs. Also updated requirements.txt and all JS libraries.\n. Err, I checked the Steam profile on my iPhone, and the content just cuts off, it doesn't reflow. I'm no good with CSS, so could someone fix it?\n. Managed to have a look at it yet? :smile: \n. The RSS stuff could probably be put in home.py, I suppose. Should I just do that?\n. ",
    "neoromantic": "Also, I just pushed some alternation to 4square location template, which is now more suitable for non-USA addresses.\n. Also, I just pushed some alternation to 4square location template, which is now more suitable for non-USA addresses.\n. ",
    "ilCoso": "Uh, and my color is #6da313\n. Uh, and my color is #6da313\n. ",
    "Larceniii": "So will this work with selfhosted wordpress sites as well? http://developer.wordpress.com/2012/10/26/using-the-rest-api-with-wordpress-org-self-hosted-sites-via-jetpack/\nJetpack offers REST API for self hosted blogs as well\n. Prettysure Jetpack is how the .com get's it's REST api from.\nI will see if I can get it working and report back.\nI'm just now digging into syte, I'm guessing it's using it's own theme and only a feed of wordpress data?\n. Ok, I got the rest API working on a self hosted site, it should work fine \n(Example) https://public-api.wordpress.com/rest/v1/sites/tlcj.fortsmith.city.cx\n. How can I merge this with my own fork?\n. Thanks for the tip @DavidRagone  I'll give that a try!\n. So will this work with selfhosted wordpress sites as well? http://developer.wordpress.com/2012/10/26/using-the-rest-api-with-wordpress-org-self-hosted-sites-via-jetpack/\nJetpack offers REST API for self hosted blogs as well\n. Prettysure Jetpack is how the .com get's it's REST api from.\nI will see if I can get it working and report back.\nI'm just now digging into syte, I'm guessing it's using it's own theme and only a feed of wordpress data?\n. Ok, I got the rest API working on a self hosted site, it should work fine \n(Example) https://public-api.wordpress.com/rest/v1/sites/tlcj.fortsmith.city.cx\n. How can I merge this with my own fork?\n. Thanks for the tip @DavidRagone  I'll give that a try!\n. ",
    "gkoo": "I'm not sure how Jetpack works with the Wordpress API. (I've never used it myself, as I don't have a self-hosted site.) So I can't say for certain. Sorry!\n. I agree that moving the fetchBlogPosts code to a unified view on the server would reduce the complexity of the code. On the other hand, I think having the browser fetch the blog posts directly reduces time needed for the JSON to travel over the network. Using a Django view requires two hops: once from Wordpress to the Django server, and once from server to client. Having the browser call the Wordpress API call is only one hop.\nIt's unclear which is the better option in the long run, but given that the size of the data is potentially very large (blog posts can be quite verbose!) my opinion is that optimizing for less time over the network trumps optimizing for development maintenance.\n. I read your post about setting up caching after I first set up my Syte. It was really helpful!\n. @eventh thanks for the catch. didn't realize my master was outdated.\n. I'm not sure how Jetpack works with the Wordpress API. (I've never used it myself, as I don't have a self-hosted site.) So I can't say for certain. Sorry!\n. I agree that moving the fetchBlogPosts code to a unified view on the server would reduce the complexity of the code. On the other hand, I think having the browser fetch the blog posts directly reduces time needed for the JSON to travel over the network. Using a Django view requires two hops: once from Wordpress to the Django server, and once from server to client. Having the browser call the Wordpress API call is only one hop.\nIt's unclear which is the better option in the long run, but given that the size of the data is potentially very large (blog posts can be quite verbose!) my opinion is that optimizing for less time over the network trumps optimizing for development maintenance.\n. I read your post about setting up caching after I first set up my Syte. It was really helpful!\n. @eventh thanks for the catch. didn't realize my master was outdated.\n. ",
    "ingageco": "Thanks - still trying to get my domain hooked up to heroku. Having some rsa issues. I'll get back as soon as i get it up (soon)\n. Thanks - still trying to get my domain hooked up to heroku. Having some rsa issues. I'll get back as soon as i get it up (soon)\n. ",
    "devgeek27": "Done.\n. Done.\n. ",
    "ChristianRahn": "I believe that I added it correctly, but just in case - http://christianrahn.us is my site. It's down right now due to a domain registrar fiasco. Shouldn't be more than 24 hours hopefully.\n. I believe that I added it correctly, but just in case - http://christianrahn.us is my site. It's down right now due to a domain registrar fiasco. Shouldn't be more than 24 hours hopefully.\n. ",
    "gagnechris": "@Larceniii  I hope you got this merged to your fork successfully. Please let me know what you think.  I'm more than willing to make improvements/fixes/etc.\n. @Larceniii  I hope you got this merged to your fork successfully. Please let me know what you think.  I'm more than willing to make improvements/fixes/etc.\n. "
}