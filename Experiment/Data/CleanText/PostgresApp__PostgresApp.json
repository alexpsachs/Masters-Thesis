{
    "mattt": "Can you make sure that the Postgres Binaries scheme has \"parallelize build\" unchecked? Are you able to get things to work if you build everything individually? (postgres -> geos -> gdal -> proj -> postgis)\n. Gah, you're absolutely right. I totally forgot to add GDAL as a target dependency. Fixed in 444321f5133e2a48281cc0f83db4eeda57f45cee Thanks for hunting that down, dude :)\n. Keep in mind that both are just preliminary sketches. I originally preferred the origami as well, but I think the Netsuke version will look absolutely unbelievable once it's finished :)\n. Oh no\u2014I wish! These are the first drafts from the iconographers I contracted to make it (trying to keep it on the DL until the final version comes out)\n. Something other than the menu bar item, you think?\n. Interesting... A few questions for you:\n- Adding the Postgres.app binaries to your PATH should allow you to just do psql without specifying localhost. Does that work for you?\n- Is this the downloaded version or did you build from scratch?\n- What version of OS X are you running?\n- What locale are you in?\n. @freeformz This is a bit of a stretch, but what model of computer are you running on? All of the binaries are pre-compiled, so there's a slight chance that weird things might go down with slight architectural variation... or maybe I'm grasping at straws.\n. @freeformz Also, what is your output for $ psql -l?\n. Thanks to @freeformz, I was able to track down the issue and (hopefully) resolve it. Download the latest Beta, and let me know if that fixes everything.\nThe issue was caused by binaries having a dylib search path relative to the directory it was built in, rather than /Applications/Postgres.app/..., the target location. I racked my brain with solutions involving chroot and the like until I stumbled across an obscure Mac binary called install_name_tool that allows the build process to manually find-and-replace the incorrect library paths with the correct ones. \nNow when I do otool -Lwhich psql`, I get:\n/Applications/Postgres.app/Contents/MacOS/bin/psql:\n    /Applications/Postgres.app/Contents/MacOS/lib/libpq.5.dylib (compatibility version 5.0.0, current version 5.4.0)\n    /usr/lib/libssl.0.9.8.dylib (compatibility version 0.9.8, current version 44.0.0)\n    /usr/lib/libedit.3.dylib (compatibility version 2.0.0, current version 3.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\n. Woo. Man that icon is ugly. Can't hardly wait for the real version of that to come around. Thanks all the same :)\n. Ah great. Now I can't unsee the Postgres logo looking like crudely-drawn genitalia. Thanks, Dom. Thanks a lot.\n. MySQL: \"At least our logo doesn't look like some dude's junk\"\u2122\n. This is the same problem as reported in Issue #7, which is now fixed. Cheers!\n. I have a vision for future plans that include a local web server providing docs, and perhaps a nice dashboard of what's happening on your postgres server. Might be a nice 1.1 / 2.0 feature.\n. @lukecyca I wouldn't say it's the major use case (IMO, it's all about no-configuration installation), but it's definitely up there.\nRest assured: this is definitely coming\u2014the only reason it's not in there yet is to allow for the documentation to be updated independently while it's still being actively edited.\n. @subdigital Look no further than in the Postgres menu item in your status bar that reads \"Open Documentation at Start\"\nOn 2012/07/28, at 12:46, Ben Scheirman reply@reply.github.com wrote:\n\nIs there any reason why the documentation page needs to be opened when you launch the app?  I keep looking for a place to turn this off.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mattt/PostgresApp/issues/10#issuecomment-7334543\n. @AquaGeek No IRC or mailing list\u2014GitHub issues is literally where it's all at.\n\nMost of this is in the can and just waiting for an opportunity for the final touches. I have to say that the whole thing is pretty clever. Embedded web servers and client-side javascript, et al.\n. Awesome. Thanks, Dom!\n. I honestly don't know enough about strict aliasing to be able to make an appropriate call on this one. I'm all for improving performance, but a quick Google hinted at enough FUD to at least give me pause. Does anyone have any strong opinions one way or another? \nFWIW, I couldn't imagine there being any strong effect on performance one way or another, since the app itself is but a thin launcher around PostgreSQL binaries, and is by no means slow in and of itself. Right?\n. Tautologies are rad! Fun fact: that string is effectively static in the current release. I'll be sure to have that message actually reflect the state of things, and also pop an alert if postgres is already running.\n. This has been fixed in the latest beta.\n. If anything is looking for postgres in /var/pgsql_socket, that must come installed with Lion. The app doesn't have access to /var, and all of the enclosed binaries should be pointed at /tmp. The documentation should be updated to set PGHOST in .profile.\n. This has since been covered in the documentation.\n. Right, but the reason you were getting those errors are that the PATH was using the Homebrew / built-in psql binaries, which we have no control over. Conversely, we can't write to  /var/pgsql_socket because it's private.\n. That'd be neat, but since Lion doesn't ship with v8, will that be a problem? Specifically, 1) is there an easy way to only install plv8 when building from source if the developing environment has v8 already installed (I don't want to add that as a build step), and 2) would a built copy of postgres with plv8 libs be useable on systems without v8 (much less cause any crashes or the like)? \n. Very happy to report that this has been added as of 9ab7fe9d10cf18ae36d5f171e6821f6526f9778d. Enjoy!\n. My original thought was to simply just distribute through the App Store, but I'm starting to think more about non-App-Store distribution as well. I guess my main reason for feet-dragging comes down to the lack of good tooling around this. Anyone know what's the state of the art here, or should I go off and build something?\n. Right, right. I guess I'm just looking for the \"Heroku for Sparkle\". Does that exist yet?\n. What I mean is that all of that should be automated, much like deploying a web app. Also, GitHub has a very generous bandwidth policy, but for a pretty hefty app like this, I'd like to host my own stuff on S3.\n. Done and done. Download link on postgresapp.com now directs you to latest build, which includes Sparkle. Also, pay no attention to that man behind the curtain ;)\n. Haven't noticed this on my build, but I believe I'd previously installed a proper version of readline.\nWhat is the solution here, then? Should the build script also compile a local version of readline? Or can this be fixed installing readline on the OS, in which case we should add install instructions in the documentation?\n. Does Beta 5 fix this for you? It bundles in a (hopefully working) build of libedit.\n. Hmm, the PostgreSQL server should be using the default settings of allowing 100 simultaneous clients... Can you check that the connection pool isn't too aggressive, or if you had lingering idle connections?\n. That's an interesting idea, but I'm not comfortable with exposing that as a key feature--especially considering that normally this sort of reset is something that is automated through migration or testing scripts. Perhaps a cheat sheet could be added to the documentation that includes how to accomplish this and other tasks in psql (DROP DATABASE [NAME]; CREATE DATABASE [NAME];)\n. Perhaps the most difficult part of this app is making sure that all of the libraries compiled in a temporary subdirectory eventually point to the correct place. The final build process when linking the binaries has commands to do this, but it looks like I missed one here.\nTry this:\nshell\ninstall_name_tool -change /usr/local/lib/liblwgeom-2.0.0.dylib /Applications/Postgres.app/Contents/MacOS/lib/liblwgeom-2.0.0.dylib\n. Actually, I just checked the /lib folder and liblwgeom isn't in there. A quick google hints that PostGIS is expecting this to be installed system-wide, which definitely isn't optimal. I'll be sure to bundle this in the next release. Thanks so much for bringing this to my attention!\n. This should be fixed with the Beta 4 release, which corresponds to d0745c4d2912bd5f641bd09eaa8eb3fe7abf1991. Let me know if that works for you.\n. Just to confirm, this is running CREATE EXTENSION postgis; in psql?\n. Thanks for reporting this\u2014I had no idea that libjasper was even a dependency, let alone one that didn't ship with OSX. This is fixed as of b3c9f45420e0a61fc1cd824a43dec78d9f71b581, and will be shipped in the next beta.\n. It's undocumented and needs to be a prompt on launch, but Postgres.app needs to be run from the /Applications directory.\n. What version of the app are you running? This should be fixed in the latest release.\n. Sorry, but 10.7 is the base target for Postgres.app. There are a lot of changes between 10.6 and 10.7, with App Sandboxing and XPC, which would make legacy support rather difficult.\n. Heh, my bad\u2014took things too literally (SIGTERM !== TERM signal).\nThis is fixed in 9fa1b98fd8c9099a22bf9a234bbaf3ef07be1759 :)\n. Good call. PostgreSQL in general could use a major overhaul in terms of usable docs. But as the apocryphal quote goes: \"Be the change you want to see in the world\". I'll add some basics, including some essential psql commands to the documentation.\nI also invite y'all to submit some pull requests here :)\n. So does no one see the documentation open up in a browser on first launch?\n. This has been added to the latest build (11)\n@thaJeztah Will do.\n. This is now included in the latest build (beta 9). Thanks!\n. You mean the one on our awesome Heroku Postgres shirts? That guy's alright, but not really suitable as an OSX icon. Also, we wanted this to be relatively distinct from the Heroku Postgres brand. But I appreciate your concern\u2014we'll find some more work for him soon :)\n. The latest release (beta 9) packages the binaries linked with @rpath, allowing it to run anywhere. Cheers!\n. Looking into this now. Apparently the script I ran with install_name_tool failed because the header I was trying to modify it to was too big.\n. Fixed a while back with 76cea768a8caf7b2116df381bcd6fe23076ef141, or thereabouts.\n. Great suggestion. I've merged something similar into 683a604ed08f20b7c2ae0fd2566a6eee49257b28.\nBy using the user setting in a pre-processor compiler directive, and with a little finagling, I was able to evaluate that string in code, to compare against the string of the current version of Postgres. Very neat.\n. I started having a similar compilation issues on Mountain Lion, so I just removed ossp-uid flag in the configuration step for postgres. This is changed in a04dfdf. Thanks!\n. Sorry for the ridiculous delay. Just updated the documentation with the correct information. Cheers!\n. You can blame Mountain Lion on that one. The libraries that are required for that don't compile on 10.8, so I had to ditch that configuration flag. Sorry about that. I will recompile as soon as that problem is fixed.\n. Fixed thanks to @pvh with 6504e5cf4844461b7b9ff7a7fbe936c4e9827b1b. To be added in forthcoming release.\n. I'm working to get Postgres.app on the MAS as well as do the right thing with Gatekeeper (a recent patch to Sparkle makes this possible).\n. Code-Signing Postgres.app turned out to be significantly more involved than ever expected. If anyone can crack that nut, I think there's a legit cash money bounty, courtesy of Heroku :moneybag:\n. Huh, this is very interesting indeed. I'm sorry to hear that you're in such a weird place with dependencies.\nTo be honest, I hardly know anything about EnterpriseDB beyond the fact that it exists, so I can't vouch for anything that it did in the process of installing or uninstalling. The fact that libpq is missing is particularly strange.\nI would suggest that you try installing with Homebrew to get libpq and try again.\n. Glad you figured out something that works for you.\n\nI guess I'm just wondering if the PostgresApp should account for a missing libpq library on the installing system somehow, since PostgresApp's goal (I believe) is to get Postgres up and running on a Mac as painlessly as possible. Although I have no idea if that's really PostgresApp's responsibility.\n\nI suppose you could add Postgres.app's lib path to DYLIB, but that's generally unnecessary considering that the libraries that ship with OS X suffice. That said, I'll consider adding those instructions to the documentation.\n. Fixed with the latest set of commits. Everything should be working with the forthcoming release.\n. Hmm, it looks like liblqwgeom wasn't linked properly in the binaries...\nI'll work on fixing that for the next release. In the meantime, install PostGIS through Homebrew, and everything should work.\n. Added with #46.\n. Postgres.app v1.1? Where did you download that? 1.0 is still the official release\u2014is this build 11?\nLet's figure this out at the office sometime on Monday.\n. Documentation has since been updated with correct location.\n. The contrib module is not currently included with Postgres.app. It may be added in the future, but your best bet for a custom installation would be to try Homebrew instead.\n. Updating to 9.2 in the latest version. Coming this week.\n. As of 69da67cedf7ef1ac9fdb0a06d0fd4b46c72c22ac, Postgres.app now includes 9.2. Cheers!\n. I don't think this is possible. Postgres.app is an application that runs in the specific context of a logged-in user. Postgres.app is also not intended to be used beyond local development purposes. If you want a more dedicated Postgres server, take a look at homebrew.\n. I spent about an hour trying to compile pgrouting from source to include in Postgres.app, to no avail. Seriously, that project is a hot mess\u2014absolutely refuses to link correctly on OSX, lacks any semblance of documentation on installation (to the point of assuming rather non-trivial dependencies like Boost).\nIf anyone is interested in taking time to get this to work\u2014go for it. I'm washing my hands of this myself, though. For anyone who's brave/curious, here's where I ended up in creating a pgrouting  aggregate build target:\nRun Script: Download & Compile cmake\n``` bash\n!/bin/sh\nmkdir -p ${PROJECT_DIR}/src\ncd ${PROJECT_DIR}/src\n/usr/bin/curl -L10 -O \"http://www.cmake.org/files/v2.8/cmake-2.8.7.tar.gz\"\n/usr/bin/tar xzf cmake-2.8.7.tar.gz\ncd cmake-2.8.7\nsh ./bootstrap --prefix=\"${PROJECT_DIR}/Postgres/Vendor/postgres\"\n/usr/bin/make\n/usr/bin/make install\n```\nDownload & Build Boost\n``` bash\n!/bin/sh\nmkdir -p ${PROJECT_DIR}/src\ncd ${PROJECT_DIR}/src\n/usr/bin/curl -L10 -O \"http://downloads.sourceforge.net/project/boost/boost/1.51.0/boost_1_51_0.tar.gz\"\n/usr/bin/tar xzf boost_1_51_0.tar.gz\ncd boost_1_51_0\nsh ./bootstrap.sh --prefix=\"${PROJECT_DIR}/Postgres/Vendor/postgres\"\n./b2 --prefix=\"${PROJECT_DIR}/Postgres/Vendor/postgres\" --without-python\n```\nDownload, Build, & Install pgrouting\n``` bash\n!/bin/sh\nmkdir -p ${PROJECT_DIR}/src\ncd ${PROJECT_DIR}/src\n/usr/bin/curl -L10 -O \"http://download.osgeo.org/pgrouting/source/pgrouting-1.05.tar.gz\"\n/usr/bin/tar xzf pgrouting-1.05.tar.gz\ncd pgrouting-1.05\nexport PATH=\"${PROJECT_DIR}/Postgres/Vendor/postgres/bin/:${PATH}\"\n${PROJECT_DIR}/Postgres/Vendor/postgres/bin/cmake\" -DPOSTGRESQL_INCLUDE_DIR=\"${PROJECT_DIR}/Postgres/Vendor/postgres/include/server\" -DBoost_DIR=\"${PROJECT_DIR}/src/boost_1_51_0/boost\" .\n\"/usr/local/bin/cmake\" -DPOSTGRESQL_INCLUDE_DIR=\"${PROJECT_DIR}/Postgres/Vendor/postgres/include/server\" -DBoost_DIR=\"/usr/local/Cellar/boost/1.49.0\" .\n/usr/bin/make install\n``\n. Fixed with #72 (merged at long last). Thanks again to @dabit.\n. Just to make sure: when you changed the configuration file, did you quit and re-launch Postgres.app?\n. This feels like a bit of a power-user feature to me, since you can simply quit and re-launch Postgres.app. If we're going to improve the experience of changing configuration, I think it should be more of a complete solution.\n. It's already in master. Check out [the downloads page](https://github.com/mattt/PostgresApp/downloads) for the release candidate.\n. I'm taking a very na\u00efve / lazy / simple approach by simply moving the old data directory and building a 9.2 database from scratch. Being a development DB, the content shouldn't be too important; I feel comfortable leaving migration as an exercise to the user.\n. As of at least the latest version (9.2.4.1), Postgres.app builds with SSL enabled, pointing to its own distribution of OpenSSL.\n.create extension postgis;` seem to be working again with the latest version of Postgres.app (9.2.4.1), which is now available on the website. The previous release had some unresolved dylib paths, which @numan and @kaleb offered workaround for. Let me know if that's still not working for you in the latest version. Cheers!\n. Hi @harrijauri, thanks for this patch. Unfortunately, because of my complete lack of attentiveness to this project for the last few months, it's hard to tell if there's anything from this that could be merged in. As far as I know, the dylib issue was fixed with some recent commits, so I'm hopeful that the problems solved by this patch are no longer an issue. Please open a new issue if there's something that needs to happen with the latest. Again, apologies for the delay on everything, @harrijauri.\n. Postgres.app targets a minimum of Mac OS X 10.7. For earlier versions / architectures, use Homebrew.\n. If you're using iTerm2, you're a person of superior taste and computer hacking skillz. Y'all can handle typing 4 characters into the command line, now can't you? ;)\n(With apologies, adding a preference here would be a bit of a rathole for customizability, and the aim of Postgres.app is anything but being all things to all people)\n. I'm sure there's some demand for a MAMP-style app for this, but Postgres.app isn't it. I have no interest in touching anything related to Drupal, but y'all are more than welcome to try.\n. This is now documented under \"Trobleshooting\". You may have luck with this:\nenv ARCHFLAGS=\"-arch x86_64\" gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/MacOS/bin/pg_config\n. Sorry for the trouble. Due to the lack of an automated build process, some things got lost in the mix, depending on which version you downloaded.\nClosing this issue to move conversation over to #94.\n. Just catching up on issues now. This was fixed a while back. Please send any further display issues to the postgresapp.com project.\n. @leklund's advice is useful for anyone running into this now. As of 805964a, all new databases are created with a UTF-8 locale. \n. This should be fixed with the next release, thanks to #103 and other recent commits. Sorry for the trouble.\n. When building locally, the data directory is actually located in the Sandbox container. However, you're correct\u2014for website-distributed versions, it's ~/Library/Application\\ Support/Postgres/. This has been updated in the docs.\n. Yep, this is a known bug, and the reason why I haven't been able to push out a new build. As it turns out, Mountain Lion ships with incompatible libraries, which makes me effectively unable to build for Lion on my machine. Totally lame.\n. Manually merged with 6504e5cf4844461b7b9ff7a7fbe936c4e9827b1b. UUID support is within our reach (at long last)!\n. Apologies for all of the difficulty. I could have been more explicit about my intentions about the upgrade process. I assumed that development data is ephemeral, at least to the point of making migration a top priority.\nIf and when this ever gets distributed on the App Store, or when PostgreSQL 9.3 ships, I'll be sure to improve the entire process, either by automating it, or providing clear guidance on the manual process (including any old versions, if necessary) \n. There was an issue with the plpgsql that shipped with that version. It's fixed on master now, and will hopefully be working with the forthcoming release.\n. Duly noted. See #86 and #92.\n. Postgres.app does not ship with that plugin, and future support for it is unlikely. I hear the EnterpriseDB Installer may have what you're looking for, so you may want to give that a try.\n. If you can get Homebrew working, that's great\u2014I would never advocate replacing a working installation of Postgres for Postgres.app.\nIt's all about ease-of-use. Most people seem to prefer a .app (myself included), even as nice as Homebrew is. That all said, these things are somewhat subjective and self-evident; not something for the documentation, although the website might benefit from a little more explication.\n. Fixed with #72.\n. This is discussed in #86 as well.\nAgain, my apologies. PostgreSQL does not make for the easiest migration path, making it likewise nontrivial for Postgres.app. Because development databases are typically ephemeral, I didn't gauge migration as an incredibly important use case. As mentioned in #86, I'll make a best-effort to improve the process next time around\u2014especially since I'll be likely to have multiple concurrent versions during the 9.3 beta period.\n. Really sorry about the linker problems. This should be fixed by the latest changes. I expect to ship a new release in the next day or two, and I'll be sure to triple-check libedit dependencies.\n. Indeed, SIGINT appears to be the best option, since it gracefully shuts down the server, while disconnecting any active clients. Not sure why that was turned to SIGQUIT to being with. Fixed in 63e22d88408c0520f2c26783430f63420d49df1a\n. Hard to say what the issue is there. Could it be that you're running another (older) version of PostgreSQL, like from Homebrew, Mac Ports, or system-provided? How about deleting ~/Application Support/Postgres/?\n. Interesting. I haven't run into anyone else who's had that problem (incorrect permissions on /Applications, perhaps?), so thanks for documenting it here. \nI'm going to close this for now, but if someone can demonstrate that there's something Postgres.app could be doing differently to avoid this, I'd love to hear about it.\n. The latest release of Postgres.app (9.2.4.1) is live on PostgresApp.com, and should have the dylib paths fixed. I just ran shp2pgsql on another machine and it worked for me.\n. As it turns out, signing Postgres.app is extremely difficult for some reason (something to do with the XPC service and helper application). Either way, this means that all of the fancy Mac security settings are going to trip over the current release of Postgres.app. Apologies all around.\nSee Issue #40 for more details.\n. Added a Troubleshooting section in the docs about this. Thanks, @vjpr.\n. @fabianoalmeida\nTry $ psql -h localhost.\nAlso, you're misspelling postgres in your command$ ps auxwww | grep postgress, so that could be why no processes came up as matches.\n. Echoing @shardulmohite:\n$ env ARCHFLAGS=\"-arch x86_64\" gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/MacOS/bin/pg_config\nThis will be added to the documentation.\n. Sorry for the problems there. plv8 may have contained an uncaught build error with the last release of Postgres.app.\nThis is being discussed in #94. Hope to get a new, fixed build this week.\n. Thanks, @kashif! Awesome work. Looking forward to releasing an updated version soon.\n. Thanks again for the patch, @jasiek! \n. Thanks for the patch, @jasiek. Naturally, this didn't merge cleanly, so I manually merged it with 27e8800b2139d5df7e969dcb8d68f490abc09dbc. Cheers!\n. This patch was based on a previous build script configuration. I adapted the changes to 38bcbeb20a0358ea2521cb3d09cfe3087880743f. Thanks!\n. The latest version linked on PostgresApp.com includes the uuid-ossp extension.\n. Thanks, @ttfkam.\n. Thanks for the feedback, @schneems.\nAll of these issues are in some way related to the limitations of Mac app distribution.\nLike I've said before, I'd love nothing more than to get Postgres.app in the Mac App Store. Because of how close it is to the system, and how it bundles dependencies in the way that it does, though, it's difficult to get it signed correctly (heck, it might even be impossible, given the current constraints of Sandboxing, but I don't exactly have any spare afternoons to throw away investigating this).\nBasically, I've limited features to those that are App Store compatible (e.g. not executing arbitrary Terminal command to auto-link binaries), but haven't executed on getting that in there. If anyone wants to help figure that out, that would be insanely great.\n. I'm with @jakob on this one. \nAnyone who is enough of a power user to necessitate menu bar icon management should be comfortable doing so, such as with something like Bartender.\n. I don't think adding a new menu item to restart Postgres is a good idea. It should either have a file handler that automatically reloads when pg_hba.conf is saved (updating the disabled \"Running on Port 5432\" menu item with \"Restarting Server...\", e.g.), or it should keep its current behavior, where a relaunch is necessary.\nFor the average user, it's unclear what to expect from a \"Restart Postgres\" menu item. Some will expect it to reset the data, others will form a habit of selecting it needlessly as a way to debug broken SQL queries. \n(Apologies for the drive-by bike-shedding; just my 2 cents)\n. ",
    "dominic": "Good call. Looks like everything builds individually correctly in that order, but postgres-binaries still fails after cleaned out the directory and started fresh. Am I missing something, or is gdal not included as a target dependency for postgres-binaries?\nchecking for gdal-config... no\nchecking for GDAL >= 1.6.0... not found\nconfigure: error: gdal-config not found. Use --without-raster or try --with-gdalconfig=<path to gdal-config>\n...\nchecking for GNU gettext in libintl... no\nchecking whether to use NLS... no\nchecking proj_api.h usability... no\nchecking proj_api.h presence... no\nchecking for proj_api.h... no\nconfigure: error: could not find proj_api.h - you may need to specify the directory of a PROJ.4 installation using --with-projdir\nmake: *** [GNUmakefile] Error 1\nShowing first 200 notices only\nI'll dig deeper and see if I can get a consistent result out of this.\n. No argument there - too many subtle lines to make it look without a redraw. It just can't stand having a black icon on the highlighted background!\n. Wait. What. Cannot unsee.\n. Had the same issue after uninstall postgres via Homebrew and their installer. Probably a real issue... [edit] thanks autocrrect\n. Xcode was kind enough to provide some guidance:\n2012-04-26 18:16:46.342 Postgres[2124:403] Could not connect the action selectPostgresStatus: to target of class AppDelegate\n2012-04-26 18:16:46.422 Postgres[2124:403] PID: 610\n2012-04-26 18:16:46.635 Postgres[2124:403] 2127 /Users/dominic/Library/Developer/Xcode/DerivedData/Postgres-aapufnhdguoedpbgaglujvhqngew/Build/Products/Debug/Postgres.app/Contents/MacOS/bin/pg_ctl: Status 5\n2012-04-26 18:16:46.655 Postgres[2124:403] 2128 /Users/dominic/Library/Developer/Xcode/DerivedData/Postgres-aapufnhdguoedpbgaglujvhqngew/Build/Products/Debug/Postgres.app/Contents/MacOS/bin/pg_ctl: Status 5\n. +1 \nNot even sure there needs to be an online copy if the app is always bundled with docs relevant to the current version.\n. Cuts the uncompressed application size in half too!\n. ",
    "soffes": "Sounds good :) Did you do these?\n. Cool. It will be awesome.\n. I'm dumb. Didn't see it up there.\n. ",
    "artisonian": "I'm having the same issue:\n- I've added the binaries to PATH\n- It's the downloaded version\n- Mac OS X 10.7.3\n- locale: en_US.UTF-8\n. ",
    "freeformz": "The Postgres.app binaries are in my $PATH.\n```\n\npsql\npsql: invalid connection option \"client_encoding\"\n```\n\nIt's the downloaded version (-005 and -006)\nMac OS 10.7.3\nLANG=en_US.UTF-8\n. PS I USED to have the homebrew version installed, but I did remove it completely.\n. @mattt 13\" MBA - 1.8Ghz Intel Core i7\n```\n\npsql -l\npsql: invalid connection option \"client_encoding\"\n.\notool -L which psql\n/Applications/Postgres.app/Contents/MacOS/bin/psql:\n    /Users/mattt/Code/heroku/Postgres/Postgres/Vendor/postgres/lib/libpq.5.dylib (compatibility version 5.0.0, current version 5.4.0)\n    /usr/lib/libssl.0.9.8.dylib (compatibility version 0.9.8, current version 44.0.0)\n    /usr/lib/libedit.3.dylib (compatibility version 2.0.0, current version 3.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\n```\n. As a temporary workaround ....\n\n```\n\nDYLD_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib /Applications/Postgres.app/Contents/MacOS/bin/psql -h localhost postgres\n```\n. Another work around for now is to use homebrew to install postgresql 9.1.3 , just don't start that server ... as it has the right libs in the right place. This should obviously be a super temporary work around.\n. temporary work around\n\nPGHOST=/tmp <command>\n. FWIW: There are config directives that tell where to look for the socket.\n. Ahh true. Sorry forgot about that.\n. I'd vote for shipping a version so people don't have to install anything for this to work.\nBTW: FWIW ... I do have a readline installed via brew.\n. Note: readline installed via brew is 'keg' only.\n. ",
    "jspies": "I'm getting the same thing on OSX 10.7.3, MBP 15inch, early 2011\npsql -l gives the same error\n. ",
    "jamesmartin": "@matt Same issue here. \nThe correct psql is in my path:\n$ which psql\n/Applications/Postgres.app/Contents/MacOS/bin/psql\n$ psql -l \npsql: invalid connection option \"client_encoding\"\nThe app certainly seems to be running and listening, from what I can tell:\n$ netstat -an | grep 5432\ntcp6       0      0  fe80::1%lo0.5432       *.*                    LISTEN     \ntcp4       0      0  127.0.0.1.5432         *.*                    LISTEN     \ntcp6       0      0  ::1.5432               *.*                    LISTEN     \nffffff800c31bbc0 stream      0      0 ffffff80109246c8                0                0                0 /tmp/.s.PGSQL.5432\nMy system is:\nLate 2010 MacBook Air, 1.6GHz Core 2 Duo, running Mac OS X Lion 10.7.3 (11D50b)\n. ",
    "DeMarko": "@freeformz workarounds worked for me when I came across the issue.\n. oh, that's true! I guess I was being a little too clever. That way you could bypass having to detect whether the computer is online or not\n. ",
    "jhaals": "Same issue for me, had to use the workaround. \nUsing 10.7.3\n. ",
    "paullofte": "I just went ahead and reinstalled the homebrew postgress, this seemed to install the necessary dylib files.\n. ",
    "lukecyca": "+1\nDisconnected use is THE major use case for Postgres.app, IMO.  When I'm connected, I can use my real database server.  The appeal of Postgres.app is that I can easily spin up a postgres server on my laptop and continue working while I'm disconnected.\n. +1\nA few words about what Postgres.app does about users and permissions would be good to get oriented too.  Out of habit, I tried to connect as the postgres user to create initial users and databases.  I had to poke around for a bit before realizing I could connect as my own user.\n. ",
    "subdigital": "Is there any reason why the documentation page needs to be opened when you launch the app?  I keep looking for a place to turn this off.\n. Man, I must have skimmed past that a dozen times.  :bowtie:\nOn Sunday, July 29, 2012 at 10:46 AM, Mattt Thompson wrote:\n\n@subdigital Look no further than in the Postgres menu item in your status bar that reads \"Open Documentation at Start\"\nOn 2012/07/28, at 12:46, Ben Scheirman  wrote:\n\nIs there any reason why the documentation page needs to be opened when you launch the app? I keep looking for a place to turn this off.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mattt/PostgresApp/issues/10#issuecomment-7334543\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mattt/PostgresApp/issues/10#issuecomment-7353885\n. \n",
    "AquaGeek": "I have a vision for future plans that include a local web server providing docs,\nand perhaps a nice dashboard of what's happening on your postgres server.\nMight be a nice 1.1 / 2.0 feature.\n@mattt I'd love to be involved with this. Is there a mailing list or IRC channel or something?\n. Awesome!\n. That does indeed appear to be where SIGQUIT is getting sent to pg_ctl.\n@mattt: I'm curious as to why this was changed from SIGTERM to SIGQUIT in f024afe207c9c49a66453f052a3bcd8e71a3c92d. Can you provide any insight?\n. ",
    "chrisledet": "Yeah, that makes sense. With that said, this change doesn't really matter.\n. ",
    "micpringle": "Sparkle is pretty much the standard outside of the MAS\n. Not sure what you mean exactly. Sparkle is simply a framework you embed within the app, and then you host an xml file which contains details of updates/new versions (which could probably stash somewhere on GitHub). When you release a new version, you update the xml file and the framework takes care of the rest.\n. ",
    "sclasen": "Cool must be on play side, will reopen if it seems to be otherwise\n. ",
    "bartek": "Hmm, am I doing something wrong? I just grabbed the Beta 4 release, after uninstalling, and I still don't have this library bundled.\nUsing direct paths to the binaries:\n% /Applications/Postgres.app/Contents/MacOS/bin/shp2pgsql \n dyld: Library not loaded: /usr/local/lib/liblwgeom-2.0.0.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/bin/shp2pgsql\n  Reason: image not found\n[1]    60990 trace trap  /Applications/Postgres.app/Contents/MacOS/bin/shp2pgsql\nI uninstalled the previous Postgres.app first, and /Applications/Postgres.app was empty, so it looks like that was cleaned up, but when I re-install the app, the library is still not there.\nIs the issue because I simply don't have /usr/local/lib/liblwgeom-2.0.0.dylib to begin with? I assume Postgres.app handles all the installation of such libraries, so I should not require having it \nAny ideas? Thanks for helping out with this!\n. Am I going crazy or was a comment removed, or a bug? In my notifications I see a comment from you..\n\"Sorry, my apologies\u2014it seems I jumped the gun on that; I shouldn't have assumed the Pos\u2026\"\nBut nothing here?\n. I just grabbed it again on a different box and it works\nThank you! :-)\n. ",
    "tbuckl": "see: https://github.com/mattt/PostgresApp/issues/44#issuecomment-11977430\n. ah just found this, i'll try installing postgis through homebrew.\n. ",
    "rhysallister": "Correct, in both psql and pgadmin 3. And this is using the latest download. Beta-4.\n. ",
    "dimitri": "Understood, thanks for that answer. Somehow I had to ask.\n. Cool! Is there an upgrade path included for users running 9.1 with postgres.app already, or will they be able to run 9.1 and 9.2 side to side then care themselves about upgrading?\n. I think that's a good (enough) answer, and the user can play with pg_upgrade or pg_dump | pg_restore that way, which is good too. Maybe adding some menu entries to play with those easily might be a good idea, on the other hand the pg_upgrade menu entry might be too much work to really be worth it.\nHop you'll make your decision obvious in the docs etc at release time. Thanks!\n. ",
    "ghickman": "Turns out this was a case of PEBKAC.\nWhen I removed brew's Postgres I got rid of /usr/share/postgresql which I think ships with Lion. This happens to have the timezone information it, this my problem with the string names. So I copied it off another Lion install, rebooted and all was good in my Postgres world.\n. ",
    "ryanlchan": "I'm also getting this issue, but on a brand new install. No previous Postgres from brew, I do see the /usr/share/postgresql directory, but form pg_config I see that the timezones should be loaded from the application's own share dir from the following line: \nSHAREDIR = /Applications/Postgres.app/Contents/MacOS/share\nTemporary workaround I've found is to include the following line in application.rb:\nconfig.active_record.default_timezone = :local\nWhich seems to make everything just dandy, though I'm still a bit confused as to why Postgres.app isn't recognizing the abbreviations in its own share.\n. ",
    "panahi": "I just experienced this issue with a fresh install of Postgres.app v1.0(11)\n. ",
    "iambca": "+1\n. ",
    "jongold": "+1!\n. ",
    "madisvain": "+1\nThis would be real helpful because at first I had no clue what was going on.\n. ",
    "adamalbrecht": "And to build on this, maybe this window would also be a good place to show some very basic postgres instructions, such as adding the bin directory to your PATH, how to create a user, and how to create a database.\n. ",
    "patricklewis": "+1, I thought that nothing happened when I ran the app until I noticed the icon in the menubar.\n. ",
    "stereoscott": "Hi @mattt, I just gave PostgresApp a whirl, and the same thing happened to me: I opened up the \"Postgres\" App on my mac, the documentation automatically popped open, but I was expecting to see the app icon appear in my dock so I thought maybe the app crashed. Pretty silly for us not to notice it (I don't even have any extra icons up there in the first place), but I think just adding a line to the top of the documentation that shows a screenshot of the app icon in the menu bar (or just mentioning that is where it appears) would make a difference. Thanks for your great work on this!\n. ",
    "thaJeztah": "Regarding the documentation, please add a link to the documentation on the homepage (http://postgresapp.com)\n. +1 wouldn't hurt, would it?\n. If I recall correctly, in the end, I managed to restore my database manually by dumping the old data (pg_dump) using the old version of PostgresApp, then restoring the data using the new version\n. @mattt thanks for considering this. I love the whole concept of PostresApp; it's an ideal solution for having a PostgreSQL server up-and-running in no time.\nIt may be worth mentioning on the website what the targeted 'audience' is, though. Based on your previous comments, you're assuming it's used for developers as a quick way to have a PostreSQL database for development (which it is).\nHowever, because of its ease-of-use, it will probably attract less experienced users that normally avoid PostgreSQL because it's more complex to install. I can also imagine people using it for small (in-house) websites, especially intranet solutions. \nThe last two usage examples may need additional explanation in the documentation/website, for example; if the app is suitable for 'production' or just for 'development'. Links to other packages that are more suitable for 'production' use (EnterpriseDB for example) can be included.\n. +1 Also see issue #86\n. @solidsnack think this is a known issue and its being worked on at the moment; see https://github.com/PostgresApp/PostgresApp/pull/85 and https://github.com/PostgresApp/PostgresApp/issues/39\nBut you'll probably need to wait for the next release\n. Wondering; is the built-in version of PostgreSQL on OS X also patched with ICU? Perhaps a ticket should be created in the OS X issue tracker?\n. > After reading this blog post i came to the conclusion that Apple doesn't care the least about their PostgreSQL installation. Feel free to file a radar, but I don't feel like wasting my time reporting issues that will probably be ignored.\nThanks for that link, that's quite nasty (even though it wasn't a \"supported\" approach). And agreed, activity on the developer-forums is quite low and little to no response from Apple employees.\n. > In production, where sorting really matters, I'm not running OSX, so it's not such a big deal for me. And I guess many others use the same dual-OS setup.\nAgreed, the problem here would of course be the \"it worked on dev, but not in production\" cases.\nTo be honest, for exactly those cases, I have moved most of my Dev setups to a Docker environment, which works, but is not as friendly as PostgreSQL.app of course\n. ",
    "StyxUT": "CREATE EXTENSION postgis;\nERROR:  could not load library \"/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\": dlopen(/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: /usr/local/lib/libjpeg.8.dylib Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libgdal.1.dylib\n  Reason: image not found\nIn the mean time, for those on a Mac with Homebrew installed. user$brew install --force jpeg will get you past the issue.\n. My bad.  The latest patch fixes this.\n. ",
    "anoved": "I encounter this problem as well, attempting to CREATE EXTENSION postgis; with Postgres.app 9.2.2.0 (20) on OS X 10.8.2 with no other special preparations. This is the latest version of Postgres.app as currently listed for download at postgresapp.com.\nERROR:  could not load library \"/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\": dlopen(/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: /usr/local/lib/libjpeg.8.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libtiff.5.dylib\n  Reason: image not found\nWhat is the beta 9 release schedule?\n. ",
    "kenneth-reitz": "Looking forward to it :)\n:cake:\n. ",
    "benspaulding": "@mattt So cool! Thanks for the fix, and for all your hard work on the app so far. It\u2019s simply a pleasure to use.\n. ",
    "lauri": "I ran into this problem with PostGIS having installed the app to ~/Applications. It seems like it's trying to find a file under /Applications and not ~/Applications.\ndb=# CREATE EXTENSION postgis;\nERROR:  could not load library \"/Users/lauri/Applications/Postgres.app/Contents/MacOS/lib/postgis-2.0.so\": dlopen(/Users/lauri/Applications/Postgres.app/Contents/MacOS/lib/postgis-2.0.so, 10): Library not loaded: /Applications/Postgres.app/Contents/MacOS/lib/libproj.dylib\n  Referenced from: /Users/lauri/Applications/Postgres.app/Contents/MacOS/lib/postgis-2.0.so\n  Reason: image not found\n. ",
    "harrijauri": "Sorry for duplicate issue. :(\n. ",
    "adamncsu": "Man I was having a really hard time finding the data location. Thanks for this. An update to the docs would be nice indeed.\n. ",
    "mrapczynski": "Second on this. Drove me crazy until I looked at the process list in the terminal and saw how the database started. The docs also indicated that a database with my username would automatically be created, but this did not happen.\n. ",
    "es6Test": "Does this  mean it started (or command worked)? I don't remember seeing any prompt in the install to ask for a password.\npsql --list\npsql: fe_sendauth: no password supplied\n. I also have this issue. I try fire psql and get that message and it exists the psql with a FATAL error.\n. I installed it in a clean mac and it worked thx. I think I had pgEnterprise before that was causing some conflict.\n. Defo, https://github.com/PostgresApp/PostgresApp/issues/332\n. no luck for me either, I did install the official download fro postgresql's site before this app, maybe that messed it up.\n. I just downloaded this app to day for my mac,  I have no /private/etc/hosts file.\nI'm getting\nLOG:  could not bind IPv4 socket: Address already in use\nHINT:  Is another postmaster already running on port 5432? If not, wait a few seconds and retry.\nWARNING:  could not create listen socket for \"localhost\"\nFATAL:  could not create any TCP/IP sockets\n. Hi, and thx, when I do export I get\nUSER=me\n. I'm not sure what to do about the role error.\n. @jakob, thx but after deleting ~/Library/Application Support/Postgres and restarting I get the same error. And now I did not change \"me\".\n. I had to add this to the path:\nexport PATH=\"/Applications/Postgres.app/Contents/Versions/9.5/bin:$PATH\"\n`\u279c  ~  psql -U postgres -c 'SHOW data_directory;'\ndata_directory\n/Users/me/Library/Application Support/Postgres/var-9.5\n(1 row)`\nLOG:  using stale statistics instead of current ones because stats collector is not responding\nLOG:  received fast shutdown request\nLOG:  aborting any active transactions\nLOG:  autovacuum launcher shutting down\nLOG:  shutting down\nLOG:  database system is shut down\nLOG:  database system was shut down at 2016-03-05 09:13:16 GMT\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\nFATAL:  role \"me\" does not exist\nthx 4 helping!!\n. I noticed I have a user call postgres, how can I tell psql to use that instead of 'me'?\n. the postgres user is part of group daemon\n. I ran psql manually in the terminal by supplying -U postgres\n. ",
    "fcy": "Don't know what changed but this isn't happening anymore.\n. This problem keeps getting back and the only I know to \"solve it\" is to reboot (several times).\nOS X Console shows:\n\n07/08/12 15:28:21,795 Postgres[9035]: Could not connect the action selectPostgresStatus: to target of class AppDelegate\n07/08/12 15:28:22,046 Postgres[9035]: 9037 /Applications/Postgres.app/Contents/MacOS/bin/pg_ctl: Status 0\n\nPlease, any ideas about this? Is there any other logs I could check?\n. I \"solved\" the problem by making PostgresApp auto start at login. I still have no idea what the problem is/were. But I'll close this issue since this seems to be a problem in my Mac.\n. I agree it ia not fixed. Reopen.\n. You can keep the default settings and whitelist an app by control-clicking and selecting Open.\n. ",
    "fadr": "Have you tried setting up your kernel resources as suggested in this article.\nFixed all problems with PostgresApp for me.\n. ",
    "cjf": "So I don't think this is solved.  I've been trying to find a workaround today for my own machine.  Worked fine until this morning.  Rebooting didn't seem to have any effect.  Same error message.\n. ",
    "goofrider": "I'm having the same problem here, can't find any additional log files except those in the Console.app\n. ",
    "danielberkompas": "Same issue is happening for me.  Just started up again - maybe a recent upgrade on Mountain Lion is breaking things.  I'm running Mac OS 10.8.2.  Can't seem to get Postgres.app up and running again despite restarting twice.\nEdit\nI was able to solve the problem for me by chmodding my data folder.  chmod 700 /Users/dberkom/Library/Application\\ Support/Postgres/var \nIt seems that OS X Mountain Lion has a tendency to apply new permissions to some folders on startup.  I've had a few other issues with that today.  When I ran postmaster to try to get some more insight to this issue with Postgres.app I got the following error:\n$ /Applications/Postgres.app/Contents/MacOS/bin/postmaster -D ~/Library/Application\\ Support/Postgres/var\nFATAL:  data directory \"/Users/dberkom/Library/Application Support/Postgres/var\" has group or world access\nDETAIL:  Permissions should be u=rwx (0700).\nHence my solution of chmodding the /var folder.\n. ",
    "bclermont": "@fmcypriano that is not a real fix. It's the \"Windows\" way to fix problem: reboot or reinstall. I reopen this issue.\nThe problem is caused by postmaster not starting properly when launched by Postgres.app and the error message is written to it's stderr not catched by Postgres.app and lost. it ends not reported in OSX logs and then available to users trough Console.app to see what proper action to take to fix it.\nAs suggested by @danielberkompas, the best way to know what the problem is, is to run /Applications/Postgres.app/Contents/MacOS/bin/postmaster -D ~/Library/Application\\ Support/Postgres/var\n. @fmcypriano I can't reopen this issue, can you do it please?\n. ",
    "mikaelbartlett": "I have the same issue as @fmcypriano \nWorks if I use \"Automatically Start at login\"\n. ",
    "jbarbosat": "I am not running PostgresApp but Postgresql dowloaded with the one-clik installer over here...\nhttp://www.postgresql.org/download/macosx/\nbut I'm still having the same problem. Mine won't work, even if I use \"Automatically Start at login\"\n. So I don't know if you guys have been messing around with the postgresql.conf file... I have. It turns out that I had modified the shared_buffers parameter into a bigger quantity that my kernel allows. How did I know this? I actually logged on as my PostgreSQL user when rebooting my computer. \nI was trying to restart the server from my usual user:\n/Library/PostgreSQL/9.2/bin/pg_ctl start -U postgres -D /Library/PostgreSQL/9.2/data\nbut I got this:\n$ 2013-03-17 05:55:16 CST FATAL:\ndata directory \"/Library/PostgreSQL/9.2/data\" has wrong ownership\n2013-03-17 05:55:16 CST HINT:  The server must be started by the user\nthat owns the data directory.\nI tried several \"sudo su postgres\" stuff but nothing worked, so I rebooted, logged on to my PostgreSQL session and over there tried the same but got a permission error:\nPermissions should be u=rwx (0700).\nSo, chmod:\nchmod 700 \"/Library/PostgreSQL/9.2/data\"\nAnd then again\n/Library/PostgreSQL/9.2/bin/pg_ctl start -U postgres -D /Library/PostgreSQL/9.2/data\nWhich gave me:\npostgres$ 2013-03-17 06:01:02 CST FATAL:\ncould not create shared memory segment: Invalid argument\n2013-03-17 06:01:02 CST DETAIL:  Failed system call was\nshmget(key=5432001, size=572522496, 03600).\n2013-03-17 06:01:02 CST HINT:  This error usually means that\nPostgreSQL's request for a shared memory segment exceeded your\nkernel's SHMMAX parameter.  You can either reduce the request size or\nreconfigure the kernel with larger SHMMAX.  To reduce the request size\n(currently 572522496 bytes), reduce PostgreSQL's shared memory usage,\nperhaps by reducing shared_buffers or max_connections.\n        If the request size is already small, it's possible that it is less\nthan your kernel's SHMMIN parameter, in which case raising the request\nsize or reconfiguring SHMMIN is called for.\n        The PostgreSQL documentation contains more information about shared\nmemory configuration.\nSo, I undid my shared_buffer changes in the postgresql.conf file, restarted the server and everything ran smoothly again. I guess this may be not the usual case for you, guys, but the thing was that I couldn't know what was wrong until I actually logged on to my PostgreSQL user. \nThe other option seems to be, as @fadr suggested, to checkout kernel configuration. For temporary changes I did:\nsudo sysctl -w kern.sysv.shmmax=1073741824\nand have had no more problems so far. The link that @fadr posted: \nhttp://www.caktusgroup.com/blog/2009/08/13/setting-postgresqls-shmmax-in-mac-os-x-105-leopard/\n. ",
    "aghyad": "I'm using the postgres that ships preloaded on Mac Lion ... same problem:\n$ which psql\n/usr/bin/psql\n$ psql --version\npsql (PostgreSQL) 9.0.5\ncontains support for command-line editing\n$ psql -h localhost\npsql: could not connect to server: Connection refused\n    Is the server running on host \"localhost\" and accepting\n    TCP/IP connections on port 5432?\ncould not connect to server: Connection refused\n    Is the server running on host \"localhost\" and accepting\n    TCP/IP connections on port 5432?\ncould not connect to server: Connection refused\n    Is the server running on host \"localhost\" and accepting\n    TCP/IP connections on port 5432?\nAny solutions?\n. ",
    "seba23571": "in my case I had the same problem and solve it with pgadmin 4.\nI'm using win, but maybe for linux it's the same.\nin the pgadmin 4 manager, go to the menu object, then properties.\nIn the dialog box go to connection, you have to change the port number. and ready.. ",
    "mattreduce": "Do the same compilation issues still exist today on 10.8.2?\n. ",
    "genediazjr": "any update on this sir @mattt ?\n. ",
    "jwaldrip": "+1 on this as well, I cant create default UUIDs by default locally\n. I am reverting to hombrew until a more stable product can be delivered. Please keep me informed.\n. ",
    "voidmain": "+1 as this is unfortunately a show stopper for me.\n. ",
    "ottob": "+1, maybe this will help: https://github.com/mxcl/homebrew/pull/13803\nhttps://github.com/mattt/PostgresApp/pull/85 propably works if you want to compile your own version.\nI fixed it in a similar way but instead of defining _XOPEN_SOURCE before building postgres I patched the uuid-ossp.c file. I added this to the build and install postgres build phase (just before the configure step).\n/usr/bin/env perl -pi -e 's/#include \"postgres.h\"/#define _XOPEN_SOURCE\\n\\n#include \"postgres.h\"/' ./contrib/uuid-ossp/uuid-ossp.c\nThen I added --with-ossp-uuid --with-includes=\"${PROJECT_DIR}/Postgres/Vendor/postgres/include\" --with-libraries=\"${PROJECT_DIR}/Postgres/Vendor/postgres/lib\" to the configure options.\nAnd added \"libuuid.16.dylib\" to the postgres-dylib-linker target.\n. Same thing for me with 1.1-rc1\n\nERROR:  could not load library \"/Applications/Develop/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\": >dlopen(/Applications/Develop/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: >/usr/local/lib/libjpeg.8.dylib\n Referenced from: /Applications/Develop/Postgres.app/Contents/MacOS/lib/libgdal.1.dylib\n Reason: image not found\n\nGuess this could be related to #32. I fixed this temporarily like this:\n\nsudo cp /Applications/Postgres.app/Contents/MacOS/lib/libjpeg* /usr/local/lib\n. And perhaps PostGIS 2.1 in 9.2.4.4?\n. Ok, but except for that it works ok? You didn't loose any data?\n. Thanks, I guess I will upgrade then.\n. Thanks for looking at this so quickly. It does not happen with the released version 9.3.1.0 (18).\n\nHere are the messages from the log:\n\n. Maybe I can run the initdb command manually from a terminal and see if I get any errors?\n. How can I figure out which locale setting is used for initdb? If I run locale from a terminal I get many different values, like LC_ALL, LC_CTYPE and LANG.\n. His machine (which breaks with rc1):\nLANG=\nLC_COLLATE=\"C\"\nLC_CTYPE=\"UTF-8\"\nLC_MESSAGES=\"C\"\nLC_MONETARY=\"C\"\nLC_NUMERIC=\"C\"\nLC_TIME=\"C\"\nLC_ALL=\nMy machine:\nLANG=\"sv_SE.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_CTYPE=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_ALL=\"en_US.UTF-8\"\nI have export LC_ALL=\"en_US.UTF-8\" set in my .profile but I have no idea how LANG was set. I have upgraded my machine from 10.8 so it's not a clean install.\n. I have changed his Language and region settings now (and update his .profile) so that his locale output matches mine. But initdb still does not work. This is the output if I try to run it manually. And I made sure that no Application Support/Postgres93 folder existed.\n```\n/Applications/Postgres93.app/Contents/MacOS/bin/initdb -D\"/Users/USERNAME/Libary/Application Support/Postgres93/var\" -EUTF8 --locale=sv_SE.UTF-8\nThe files belonging to this database system will be owned by user \"USERNAME\".\nThis user must also own the server process.\nThe database cluster will be initialized with locale \"sv_SE.UTF-8\".\nThe default text search configuration will be set to \"swedish\".\nData page checksums are disabled.\ncreating directory /Users/USERNAME/Libary/Application Support/Postgres93/var ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 100\nselecting default shared_buffers ... 128MB\ncreating configuration files ... ok\ncreating template1 database in /Users/USERNAME/Libary/Application Support/Postgres93/var/base/1 ... ok\ninitializing pg_authid ... ok\ninitializing dependencies ... ok\ncreating system views ... ok\nloading system objects' descriptions ... ok\ncreating collations ... ok\ncreating conversions ... ok\ncreating dictionaries ... ok\nsetting privileges on built-in objects ... ok\ncreating information schema ... sh: line 1: 22946 Abort trap: 6           \"/Applications/Postgres93.app/Contents/MacOS/bin/postgres\" --single -F -O -c search_path=pg_catalog -c exit_on_error=true -j template1 > /dev/null\nchild process exited with exit code 134\ninitdb: removing data directory \"/Users/USERNAME/Libary/Application Support/Postgres93/var\"\n```\nI have replaced his real username with USERNAME in the text above.\n. I found this[0] page googling exit code 134. Could java really be a dependency? I have java installed but I don't think my colleague does.\n[0] http://hopper.minecraft.net/help/exit-code/code-134/\n. It only says exit status 1\n. It works fine. Thank you very much.\n. And some more drive-by bike-shedding, sorry :smiley: \nIs this really necessary? Relaunching the app when you change the configuration is so easy, what would the difference in spent time be? 1 maybe 2 seconds per reload? And I can already access the data directory and the log file through the preferences.\nI really like how \"simple\" PostgresApp makes PostgreSQL, this feels like a step in the wrong direction.\n. If you think it's important from a marketing perspective (and I guess it sort of is) to be visible on the postgres page I think you should avoid applying the patch.\nIn production, where sorting really matters, I'm not running OSX, so it's not such a big deal for me. And I guess many others use the same dual-OS setup.\n. ",
    "benatkin": ":+1: in the meantime vagrant ftw\n. ",
    "mamcx": "How I can solve this? I rely in that extension...\n. ",
    "nicholaides": ":+1:  for this\n. ",
    "linuxlewis": "please fix +1\n. ",
    "Neku": ":+1: \n. ",
    "steakknife": ":+1:\n. :+1: but for 10.7+\n. ",
    "daneharrigan": "thanks @mattt and @pvh!\n. ",
    "tsimbalar": "To add a bit more information, this is what I see in Console.app : \n```\n28/07/12 14:59:41,665 com.heroku.postgres-service: FATAL:  could not create shared memory segment: Invalid argument\n28/07/12 14:59:41,665 com.heroku.postgres-service: DETAIL:  Failed system call was shmget(key=5432001, size=4218880, 03600).\n28/07/12 14:59:41,665 com.heroku.postgres-service: HINT:  This error usually means that PostgreSQL's request for a shared memory segment exceeded your kernel's SHMMAX parameter.  You can either reduce the request size or reconfigure the kernel with larger SHMMAX.  To reduce the request size (currently 4218880 bytes), reduce PostgreSQL's shared memory usage, perhaps by reducing shared_buffers or max_connections.\n28/07/12 14:59:41,665 com.heroku.postgres-service:  If the request size is already small, it's possible that it is less than your kernel's SHMMIN parameter, in which case raising the request size or reconfiguring SHMMIN is called for.\n28/07/12 14:59:41,665 com.heroku.postgres-service:  The PostgreSQL documentation contains more information about shared memory configuration.\n```\nI suppose this means it's a configuration problem rather than an actual app problem...\n. I could actually fix it by lowering the value of shared_buffers.\nThese parameters seem to do the trick for me :\nmax_connections = 50            # (change requires restart)\nand\nshared_buffers = 300kB          # min 128kB\n(used to be 1600kb)\n. ",
    "bakotaco": "I think this issue should be reopened - when a user encounters a crash like this Postgres.app should report that the daemon process crashed instead of saying it is 'running on port 5432'\n. @mrbrdo when did you encounter this?\nPersonally I ran into it when running jvm apps which attempted to create a connection pool with more than max_connections connections\n. ",
    "mrbrdo": "I agree, this should be reopened. I encountered this.\n. I just made max_connections 100 and postgres would crash. It said something about shared memory in the logs also.\nI was using a Rails app with a connection pool, but the connecton pool was smaller than max_connections. I guess the max_connections problem is related to postgres but Postgres.app should at least not say that it's running if it's crashed.\n. ",
    "acds": "@mrbrdo I agree\n. ",
    "Jasonbit": "Has anyone been able to get max_connections to 100? I've been trying to mirror my staging db server so I can run some local stress tests and I can't get postgres to start at anything more then 20 max connections. Can't find any info on this anywhere in the project either.\n. ",
    "AntonTrapp": "No, same problem. You can not increase max_connections (even by 1) -> app crashes. You can not increase shared_buffers (app crashes). Seems like the app is not maintained any more and we have to install pg via homebrew, ...\n. Thanks Jakob, can confirm this! Updated App, doubled max_connections, halved shared_buffers -> working! As this issue comes high on google. Anybody who gets here\u2026 try this.\n. ",
    "jakob": "If you are still experiencing this issue, please open a new issue, and\ndescribe it in detail. (which version of Postgres.app are you using,\nwhich version of OS X, what configurations did you change)\nThe original issue was probably related to the high shared memory\nrequirements of PostgreSQL. PostgreSQL 9.3 significantly reduced the\namount of shared memory needed. Unfortunately I can't test this right\nnow (not at my development machine), but I expected this issue to be\nresolved in version 9.3.\nAlso, did you try configuring your OS X kernel parameters? The error\nmessage hints at it, and you can find more information here:\n[1]http://www.postgresql.org/docs/current/static/kernel-resources.html\nJakob\nOn Thu, Mar 20, 2014, at 8:59, Anton Trapp wrote:\nNo, same problem. You can not increase max_connections (even by 1)\n  -> app crashes. You can not increase shared_buffers (app crashes).\n  Seems like the app is not maintained any more and we have to install\n  pg via homebrew, ...\n\u2014\nReply to this email directly or [2]view it on GitHub.\n[198305__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcxMDkyMTU1My\nwiZGF0YSI6eyJpZCI6MTQ1ODAxOX19--5bca6311203b1acd8bc10b312908f8d6f99c368\n9.gif]\nReferences\n1. http://www.postgresql.org/docs/current/static/kernel-resources.html\n2. https://github.com/PostgresApp/PostgresApp/issues/41#issuecomment-38142422\n. The latest version of Postgres.app (https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1) no longer overrides the path provided in postgresql.conf.\n. @es6test please open a new issue and describe your problem in detail instead of replying to a bunch of old issues\n. Version 9.3.2.0 now has a button for opening the data directory in the preferences. Not exactly what you asked for, but should help nonetheless.\nDownload it from https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1\n. @iesta This is an old issue that has been closed. If you are experiencing a similar issue, please open a new issue and include the following information:\n- which version of Postgres.app you are running\n- which OS you are using\n- what commands you type to get the error message you posted.\nWithout that information it's hard for me to diagnose your problem. It'd be awesome if you also try the latest pre-release of Postgres.app in the releases section.\n. The problem is that the app says \"Postgres is running\" as soon as it started postgres, but it doesn't check to see if it actually started successfully. We should probably add some diagnostics here.\nConcerning the logs, by default postgresql is configured not to log anything. The easiest way to debug issues is to look for the file postmaster.opts in the data directory. There you'll find the command used for starting PostgreSQL. You can then run this command from the command line to start postgres manually, and you'll see detailed error messages.\nThe data directory used by Postgres.app is by default ~/Library/Application Support/Postgres/var, but is different for the sandboxed version of Postgres. If the server is running, you can find the location of the data directory by typing the following command in psql: SHOW data_directory;\n. The most recent version (https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1) has improved support for detecting if it is running or not.\n. Previous versions of Postgres app are now available on github; check the releases section.\n. Postgresapp 9.2.4.3 ships with PostGIS 2.1. Are you sure you downloaded the latest version from Github? See here: https://github.com/PostgresApp/PostgresApp/releases\nIf that doesn't help, try deleting the data directory (~/Library/Application Support/Postgres), maybe there's an issue with a previous installation.\n\nAm 31.08.2013 um 13:57 schrieb Dustin notifications@github.com:\nAfter downloading the latest version I encounter the exact same problem with postgis:\nERROR: could not access file \"$libdir/postgis-2.0\": No such file or directory\nI desperately need postgis. Is there a workaround or will there be an updated version soon?\n\u2014\nReply to this email directly or view it on GitHub.\n. If I understand correctly this means we would have to include PostGIS 2.0 AND PostGIS 2.1 in Postgresapp.\n\nHere's a temporary workaround: Copy postgis-2.0.so, rtpostgis-2.0.so, and a few files named liblwgeom.* from the old PostgresApp to the new version. They are located in $libdir, which is inside the app package. To show that file, right click on the app and select \"Show Package Contents\". The directory containing the libraries is Contents/MacOS/lib.\nThen open the new Postgres.app, and execute the following query:\nALTER EXTENSION postgis UPDATE TO \"2.1.0\";\nThis should allow you to upgrade to PostGIS 2.1\n. I just realised overwriting liblwgeom with the old version might not be a good idea. Better copy just postgis-2.0.so and rtpostgis-2.0.so\n. Please try downloading this version which includes Postgis 2.0 and 2.1 binaries: https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.4\n. @thesteve0 When you update from PostGIS 2.0 to PostGIS 2.1 you need to make sure you have BOTH binaries installed. Might be easier to use pg_dump on your old system and then restore the database on the new system.\nAnyway, this is completely unrelated to Postgres.app. Also, as far as I know this issue is fixed in the newest release of Postgres.app, and therefore I am closing this issue before other googlers stumble upon this and believe this is still relevant.\n. Could someone please test if PLV8 works with the latest beta for 9.2.4.3, so we can close this issue?\nDownload link: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. Download release version here: https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\n. Thanks for reporting this!\nSince a bunch of people seem to have stumbled across this problem, I've added this error message to the troubleshooting page:\nhttps://postgresapp.com/documentation/troubleshooting.html. Which version are you using? I'm pretty sure this should be fixed in 9.2.4.3\nIt is currently only on github, postgresapp.com still points to the old version\nGet 9.2.4.3 here: https://github.com/PostgresApp/PostgresApp/releases\n\nAm 27.08.2013 um 15:27 schrieb nicerobot notifications@github.com:\nIs it supposed to be in the latest download? I see the library in the lib/ directory but i still get the error.\n```\nu=# select ''::xml;\nERROR:  could not set up XML error handler\nLINE 1: select ''::xml;\n               ^\nHINT:  This probably indicates that the version of libxml2 being used is not compatible with the libxml2 header files that PostgreSQL was built with.\nu=# select version();\n                                                                                 version                                                                                 \n\nPostgreSQL 9.2.4 on x86_64-apple-darwin11.4.2, compiled by i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.9.00), 64-bit\n(1 row)\n```\nI've tried running Postgres from the command-line and forcing LD_LIBRARY_PATH but that has no impact.\nLD_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib /Applications/Postgres.app/Contents/MacOS/Postgres \n\u2014\nReply to this email directly or view it on GitHub.\n. The reason for the dylib troubles are the way we defined the paths. When we link libpq to libssl, we could use a path like /Applications/Postgres.app/Contents/MacOS/lib/libssl.dylib, but then Postgres.app would only work if you moved it to your Applications folder. We want Postgres.app to also work when the user opens it directly from the Downloads folder, so we use a relative path like @executable_path/../lib/libssl.dylib. This works great for the postgres and psql binaries inside the Postgres.app package. But it doesn't work when something outside of the package, like a ruby gem, wants to use our libraries -- because then the relative path from executable to library isn't correct anymore. \n\nI think @harrijauri might have a solution for this problem in this commit: https://github.com/harrijauri/PostgresApp/commit/25c4914d5662f8248e529b249e2beb6ec80507ed\nHis solution is to use @loader_path instead of @executable_path. Unfortunately, his solution is written in a ruby script, which is a bit hard to understand for me, so I'm not totally sure what he does, but it might fix this problem. I'll have a look.\n. I'm sorry for taking so long to find a fix for this issue, after all I caused the problem by boundling openssl. (which is a good thing, if it wouldn't break the pg gem)\nI have now made a beta build of 9.2.4 to address this issue. Could somebody try if this beta fixes the issue? \nhttps://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-Core-9.2.4-Beta1.zip\nNote: This beta includes PostgreSQL core only (no PostGIS, no plv8)\n. @wycats yes, the solution uses @loader_path. The beta is just a build of commit 1fa960ea63d8a911db96e0226115f4e5cb445eed referenced above. I'm very busy at the moment, as soon as I have time I will finish the refactoring so the extensions (PostGIS, plv8) are compiled as well.\n. @Albertc The problem and solution(s) discussed on this page apply only if you installed \"Postgres.app\" (If you did, it should be in your /Applications/ folder. If you didn't, your problem is unrelated.) To downgrade, just download the old version or the beta (see links above) and replace Postgres.app\n. Good to hear beta 1 is working for everyone. I made a new beta that includes PostGIS and PLV8. Could someone please test Beta 2? I think if this beta works we can ship a new release.\nDownload Link Beta 2: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. Thanks for the reports. The difference is that Beta 2 is sandboxed, Beta 1 (and the versions from postgresapp.com) are not sandboxed. Therefore they store data in different directories.\nNon-Sandboxed version:\n~/Library/Application Support/Postgres\nSandboxed version:\n~/Library/Containers/com.heroku.postgres/Data/Library/Application Support/Postgres\nThe release version will again not be sandboxed.\n. Release is out. Hopefully this finally fixes this longstanding issue.\nDownload it here:\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\n. Yes, I managed to upload a broken build. I'm sorry. Fixed version is already up again.\n. I started working again on this branch, so don't pull it just yet ;)\n. libtiff is now bundled in the latest release\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\n. The problem is related to the dylib issues related in #109. I started rewriting the dylib path stuff in 1fa960ea63d8a911db96e0226115f4e5cb445eed. As soon as I get to refactoring the extension build targets, I will ensure this is fixed as well.\n. I made a new beta that addresses the dylib issues, could you try if this beta fixes your problem?\nDownload link: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. fixed.\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\n. The problem is probably NOT the OPENSSLDIR path; that shouldn't matter. The problem are the dynamic library load paths; we should fix them. More details in #109\n. I think this issue can be closed. The dylib issue is being tracked in #109, the openssl shadowing issue is tracked in #116, and I am working on both. The OPENSSLDIR parameter is only required during building, and since we aren't signing any certificates etc it doesn't matter what it is set to.\n. @mattt can you close this issue?\n. As I mentioned in #116, I have just made a new beta available that should fix this issue. Can you try if it works?\nDownload link: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. Fixed. https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\n. I believe this is another instance of the dylib path issue, which is being tracked in #109, and I'm working on fixing this.\n@mattt can you close this issue?\n. I manually merged this pull request. Libtiff is now included in 9.2.4.3. Download here: https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\n. Most of the executables in the /Applications/Postgres.app/Contents/MacOS/bin directory aren't actually needed by PostgreSQL.app. We only need the libraries from most dependencies. The reason for all the unnecessary binaries is that we currently just copy everything from the build directory into the PostgreSQL package.\nThe solution would be to go through all the binaries and libraries, and to copy only those we actually need. This would avoid lots of potential conflicts, and it would have the nice side effect of reducing the size of PostgreSQL.app. \nHowever, going throught the files one by one will take a long time and is error prone itself -- if we forget a required file, we will again have lots of trouble.\nA quick workaround against the shadowing is to use PATH=\"$PATH:/Applications/Postgres.app/Contents/MacOS/bin\" instead of PATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\". This will make sure that system-provided tools are preferred (use which openssl to check which version will be called), but then you have to make sure you don't have another copy of psql on your path if you want to use the one provided from Postgres.app\n. Darn, I didn't know MacOS shipped with psql. It seems that in 10.8 it is version 9.1.5. So apparently that workaround doesn't work.\nAnyway, I'm currently working on actually fixing the problem, ie. only copying the necessary files into the package. We'll see how that goes.\n. I have tried to address this problem in my latest commit: 663cf099c3a8f20926efcd964574a54e888ad3cc\nCan you try downloading the latest beta and report if this fixes your issue?\nDownload link: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. This is now fixed in the latest release: https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\n. Maybe the problem occurred during setup -- did you initially launch Postgres.app while it was still in the Downloads folder? You can try deleting the data directory ~/Library/Application Support/Postgres, and then relaunching Postgres.app to create a new cluster.\n. I'm closing this issue for now. If you have further trouble, please reopen.\n. The best solution would probably be to do away with the XPC service altogether and launch \"postgres\" directly using NSTask. Then we would always know if it is running.\nA nice side effect would be that, if we don't detach postgres, the server would be guaranteed to quit if Postgres.app quits (even if the user force quits Postgres.app).\nAn even nicer side effect would be that we could then display the output from postgres, which would make debugging a lot easier.\nMaybe I can tackle that after the holidays.\n. Postgres.app 2.0 now checks if the server is running every time you open the status menu.. 1. Postgres.app is now signed correctly (as long as you don't try opening it outside of /Applications, unfortunately -- but we've discossed this at length, and there is no easy way to fix it)\n2. Postgres.app now autostarts by default (which can be turned off)\n3. The home page now prominently tells you to configure command line tools.\nI think this should fix most of the problems, and we can now finally close this issue :). Could you please try if the latest beta fixes this issue?\nDownload here: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. This pull request is probably incompatible with the libtiff pull request. I think we should first release my changes as 9.2.4.3, because they fix a few important bugs. I know the libtiff thing is important, but we should schedule it for version 9.2.4.4, so that we don't further delay 9.2.4.3...\n. Closing this merge request, will merge with 9.3 branch later.\n. This should be fixed in my latest commit. Could you try this beta: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. Thanks for the report, will look into this.\n. I included the pgxs directory in the latest release.\nDowload from https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\nWhen you try to build extensions, if it doesn't work, try setting PREFIX=/Applications/Postgres.app/Contents/MacOS\n. Hmm. The path that shows up is the intermediate path that we are using to build Postgres. The only solution for this problem that I can think of would be to use the path /Applications/Postgres.app/... for building, and that would make our build process really messy. I'm not sure there's a way around it. I'll try to look into it for the next release.\n. I've made a new build of Postgres.app, using the /Applications/Postgres93.app as path. Could you try if it works? Note that you'll have to update your PATH since the app name has changed.\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.3.1.0-alpha1\n. As far as I know there are no logs. You 'll have to change the configuration file to enable logging\n. Postgres.app version 9.3.5.1 and 9.4beta3 and later now write the log to a file named postgres-server.log in the data directory. When an error occurs during startup, the error message now has a button for opening the log.\n. Which version of Postgres.app are you using? Could you try this beta version:\nhttps://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/PostgresApp-9.2.4.3-Beta2.zip\n. Problem should be fixed in version 9.2.4.3.\nDowload from https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.3\nPlease reopen if the problem persists.\n. Sorry for the late reply. I don't know what is causing this issue. Have you been able to find out why this was happening?\nIf you are still having this issue, or if someone else is reading this issue, here are a few ideas you could try to troubleshoot the problem:\n- Make sure there is no other instance of PostgreSQL running. Close Postgresapp, open Activity Monitor, search for \"postgres\" and kill all processes you can find.\n- Ensure you are connecting to the local server. Use psql -h 127.0.0.1\n- Make sure you haven't set any environment variables like $PGHOST or $PGUSER\n- Have you changed your login name?\n. To build PostgresApp with PostgreSQL 9.3, the easiest way would be to download the latest version from my fork https://github.com/jakob/PostgresApp\nThen you have to update some build settings. Open the project in XCode, click on \"Postgres\" in the sidebar, then select the \"Postgres\" project in the second sidebar, and then go to build settings.\nI assume that setting the environment variable POSTGRES_VERSION (bottom of the list) to \"9.3beta2\", and then setting the preprocessor macro PG_VERSION (further up) to 9.3.0 should be enough. Set POSTGIS_VERSION to \"2.1.0rc2\"\nThen choose the \"Postgres\" target in the popup menu and click \"run\", and hopefully XCode starts downloading & compiling sources. This can take a long time if you are on a slow line, but if you have a fast internet connection it should be done in about half an hour or so.\nI haven't tried it myself yet because I don't have the time right now, and I can't guarantee it will all compile.... But it might be worth a try.\n. I finally got around to work on this. I made a build with PostgreSQL 9.3RC1 and PostGIS 2.1. Please check out the releases section: https://github.com/PostgresApp/PostgresApp/releases\n. That is embarassing. Let me quickly fix this.\n. Could you try downloading it again? It should work now.\n. Yes, this is possible. Just set the environment variables PGUSER and PGDATABASE in your ~/.bash_profile file. You can save passwords in the ~/.pgpass file, but I wouldn't recommend that as they would be stored in plain text.\nYou can find more detailed info on this in the psql documentation: http://www.postgresql.org/docs/current/static/app-psql.html\n. Check in the releases section on github. \n. 9.2.4.3 didn't work on Lion. Please try if this build works: https://github.com/PostgresApp/PostgresApp/releases/tag/9.2.4.4 \nAlternatively, you can also upgrade to PostgreSQL 9.3, but then you manually need to migrate your data.\n. @zzaacchh, those two .folder_info.xml files shouldn't be there. They must have been added by some kind of app or utility on your Mac. I have no clue where they come from, and googling brings no results.\nTry to delete them and see if Postgres will launch then.\n. You are right, we should mention it in the docs. (But the upgrade is necessarily backwards incompatible, because the binary format between 9.3 and 9.2 is different)\n. Hi, sorry for the delay, I've been very busy lateley. Unfortunately, it seems that we'll have to remove sandboxing because it causes problems in 10.9, so we might have to revert the data directory back to the old version in the next release...\n. Docs have been updated, and recent versions of Postgres.app automatically search for previous data directories.\n. Thanks for taking time to report this issue. It seems to be a problem related to sandboxing. I'm looking into it.\n. Could you try if this release works? https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.0.1-alpha\n. also make sure Postgres.app is in /Applications\n. I think the problem with the @rpath approach is that it only works if Postgres.app is in a static location, ie. Postgres.app must be in your Applications folder. The @loader_path thing is to make sure Postgres.app works even if running it from your Downloads folder. Otherwise we could just use a static path /Applications/Postgres.app/Contents/MacOS/lib...\n(I don't fully understand how @rpath works. If my statement above is incorrect, please tell me!)\n. Hmm... I guess in Postgres.app the way to do that would be to add an @rpath to all the executables that's equal to @loader_path/../lib if that is possible. I'll have to try this sometime.\n. Hi Marc,\nSince these linking issues pop up again and again, I gave up on trying to get @loader_path to work. I now changed it all to static links, and added a check in Postgres.app that ensures you put the app in the /Applications/ folder.\nCould you try if the latest pre-release works for you?\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.3.1.0-alpha1\nNote that the app name is different, so you'll have to update your PATH variable.\n. I can't find any official documentation for this right now, but I think in PostgreSQL, point releases are major releases. For example from 9.2 to 9.3 the on disk data format and ABI might change. From 9.3.0 to 9.3.1 those should stay the same. That's why I picked the first two digits for the name.\nOn 28.10.2013, at 17:16, Marc Liyanage notifications@github.com wrote:\n\nHi Jakob,\nI just tried it, seems to work well.\nI see that the application name is now Postgres93.app, which means this path ends up in the module binaries I compile myself as well. When version 9.4 comes around and you change that name, I will have to rebuild all binaries, but I expect that they would actually continue to work because the ABI might stay the same for minor version bumps. This means that I'd have to needlessly rebuild all modules.\nPerhaps it would be better to name it just Postgres9.app, to force the rebuild at major version boundaries, where I expect the ABI to change.\n\u2014\nReply to this email directly or view it on GitHub.\n. A second reason for using Postgres93.app as the name is that it'll allow running multiple versions of Postgres.app simultaneously in the future.\n. Closing this, since it is probably not related to Postgres.app, and it's a three year old issue.\n. Did you configure your path as described here:\nhttp://postgresapp.com/documentation/cli-tools.html\n. This is probably related to sandboxing.\n\nThis issue (and a few others) will mean that we will need to disable app sadboxing again for Postgresapp in a future release. This is very unfortunate, because it means that we wont be able to put it in the Mac App Store :(\n. Could someone try if it works in the latest pre-release: https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.1.0-alpha1\n. @ndemoreau the last line of your .bash_profile is missing :$PATH, which will probably break all kinds of things\n. Let me try to summarize the different issues in this thread:\n- Opening psql from the menu doesn't work on Mavericks. 9.3.1.0-alpha should fix that.\n- @NickWoodhams had a broken /etc/hosts file\n- @ndemoreau has a misconfigured $PATH\nTo troubleshoot a misconfigured PATH variable, the following commands may help:\nwhich psql\necho $PATH\nVariables can be configured in a number of files like .bash_profile, .profile, .bashrc etc. Note that you always need to close & reopen the Terminal window after changing any of those files.\n. @ndemoreau My knowledge of bash is pretty limited myself, but shouldn't it say export PATH=/Applications/Postgres93.app/Contents/MacOS/bin:$PATH in .bash_profile?  (Note the export at the beginning of the line)\n. @sambecker have you tried the pre-release: https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.1.0-alpha1\n. Yes, the outdated docs are a problem. I'll work on them after the holidays.\nIn the mean time, the latest version has a fix for this, it scans your profile files and offers to update outdated paths.\n\nAm 20.12.2013 um 22:32 schrieb Logan Spears notifications@github.com:\nI had this problem because the documentation from http://postgresapp.com/documentation instructions say to use:\nPATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\"\ninstead of\nPATH=\"/Applications/Postgres93.app/Contents/MacOS/bin:$PATH\"\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Alex, thanks for the bug report. This is again one of the linking issues I thought I had fixed already. I'll have to make a new build.\n. I am pretty sure that the issue you encountered is a problem with the specific 9.2 build. The 9.3 versions should work fine.\n. The first time you open Postgres.app, it automatically creates a database named like your username. Apparently this database doesn't exist.\n\nThere are a few possible reasons why this database doesn't exist:\n1) You changed your username\n2) psql is not connecting to Postgres.app but to a different server\nThere are a number of reasons why psql might be connecting to a different server:\n1) Maybe you have a different Postgres installation already running on your Mac\n2) Maybe you already started a copy of Postgres.app as a different user on your machine\n3) Maybe you changed the psql configuration using environment variables PGDATABASE, PGHOST, PGPORT, PGUSER or you changed settings in the file ~/.psqlrc\n. Could you try connecting to the \"postgres\" database:\npsql -d postgres\nand then execute the following command:\nshow data_directory;\nOn 9.3.1.0-alpha1 that should return /Users/USERNAME/Library/Application Support/Postgres93/var\nThen check which databases exist on the server using the shorthand \\l\nIf all that works, it seems that Postgresapp called initdb successfully, but createdb failed. You can do that manually, just execute createdb USERNAME from the terminal (not inside psql)\n. 1. First, make sure you remove older intallations of PostgreSQL before starting Postgres.app. To do so, follow the instructions here: http://postgresapp.com/documentation/remove.html\n2. Restart your Mac after uninstalling other PostgreSQL installations, and open Activity Monitor to make sure there are no processes named \"postgres\" running.\n3. Now open Postgres.app. If it still doesn't work, try using the createdb USERNAME command in Terminal.\n4. Make sure you set up your $PATH correctly: http://postgresapp.com/documentation/cli-tools.html\n. The new version of Postgres.app now checks if the port is in use before attempting to init a server and create a database. This makes it much less likely to fail. Additionally, Postgres.app displays more reasonable error messages when a problem occurs.\nAnd finally, the troubleshooting section in the docs now explains how to fix this problem.\n. Hi @tejinderss, I don't think this has anything to do with Mavericks. It sounds like you built your own version of python, and that doesn't work with Postgres.app, probably because psycopg.so is linking against Postgres.app's libssl.\nI am currently working on a new version of Postgres.app that dosn't exhibit these linking issues, but I don't know when it'll be ready. I work on Postgresapp in my spare time, and at the moment I don't really have a lot of spare time :(\nYou can also try to build python so it links against the system OpenSSL, but I can't really help with that.\n. Could you please describe your issue in a bit more detail? In issue #109 we actually dealt with multiple different problems, over the course of multiple versions of Postgres.app.\n. This should be fixed in one of the recent releases.\n. Could you try this latest build and see if it works?\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.3.1.0-alpha1\n(you'll probably have to recompile Python after updating)\n. If you don't add /Applications/Postgres93.app/Contents/MacOS/bin to your path, you will run (and build against) the  version of PostgreSQL that ships with the OS, which is older. Most things should still work, because PostgreSQL is (mostly) backward compatible with older versions of the client libraries. However, some tools like pg_dump must be the same version as the server. Also, Postgresapp ships with a lot of utilities that don't come with MacOS (gdal etc.)\n. If you don't want to permanently add it to your path, you can just type export PATH=/Applications/Postgres93.app/Contents/MacOS/bin:$PATH in the terminal to just change the path for this session...\nOn 29.10.2013, at 08:57, tejinderss notifications@github.com wrote:\n\nThanks for the clarification.\n\u2014\nReply to this email directly or view it on GitHub.\n. This actually sounds like an unrelated error. Could you open a new ticket with more details? It could be that this is an issue with virtualenv. (The binaries shipped with Postgresapp link to their own version of libssl)\nAm 08.11.2013 um 05:50 schrieb Jeremiah Campbell notifications@github.com:\nI have almost exact same error as reported in this ticket but I am using the system python for Mavericks with virtualenv.\nUsing 9.3.1.0-alpha1 does not resolve the issue.\npsycopg2 is still trying to load a newer version of libssl than is available in /usr/lib\n\u2014\nReply to this email directly or view it on GitHub.\n. PostgresApp is compiled with libedit, which is a replacement for the GNU readline library.\n\nCould you elaborate a bit? Which version of PostgresApp are you using? What OS are you on? What exactly doesn't work?\nAnd most important, how do you launch psql? Are you sure you are launching psql included with PostgresApp instead of the system-provided psql (before Mavericks) or another version installed by eg. MacPorts?\n. It seems that libedit lacks advanced features of libreadline.\nI don't know why Postgresapp uses libedit instead of libreadline (@mattt might know). I can only assume it is because of licensing issues. I found a lengthy thread on the psql-hackers list related to this topic http://postgresql.1045698.n5.nabble.com/Debian-readline-libedit-breakage-td3380317.html\nI assume we could just get rid of libedit and link against the system provided libreadline, but I'm not totally sure if that complies with the GPL.\n. In the latest version I tried to compile with readline, but for some reason I just couldn't get that to work. It always linked with libedit instead. If anybody finds out how to build postgresql with readline, please let me know.\n. The conversation hasn't moved elsewhere. As I stated above, I tried to get PostgreSQL to compile with the version of readline that ships with OS X, but I couldn't get it to work. If someone finds out how to get it to work (perhaps someone on the PostgreSQL mailing lists might be able to help), I'll integrate this in Postgres.app, but right now I unfortunately don't have the time to handle this task myself.\n. Maybe. But then we'd always lag behind homebrew.\n(Note: there's nothing stopping you from using the Postgres server from Postgres.app and psql from homebrew.)\nAlso, I think I found out why PostgreSQL won't compile with the OS X provided readline: /usr/lib/libreadline.dylib is just a symlink to libedit.3.dylib\n. @wiseman I don't think there's a licensing issue. I assume that Apple doesn't ship libreadline because it is GPLv3, but that shouldn't be an issue for us.\nLinking with libreadline would require us to build libreadline ourselves and include it with Postgres.app. It would make Postgres.app a bit bigger, but I'd assume that libreadline is small, so that hopefully wouldn't be an issue. However, building Postgres.app already takes an hour, so I'm not particularly thrilled about adding more stuff.\nBut as far as I understand, the issue is just that libedit has different keyboard shortcuts than libreadline?  We could fix this by documenting this on the page about command line tools.\nOr are there other features that libedit does not support?\nIn general, I prefer linking with Apple provided libraries if possible -- but if someone can make a sound argument why we should include libreadline, I'm happy to reconsider.. Okay, now I see the problem. It seems that psycopg2 was compiled against the old version of Postgresapp. According to your error message, _psycopg.so tries to load the libssl provided by Postgresapp. The problem is not the version mismatch, the problem is that the library is referenced with a relative path (@loader_path).\nIn 9.3.1.0-alpha1 I changed all libraries to use absolute paths, exactly to prevent this issue. However, it seems that psycopg is built against the old version with relative paths.\nTo fix this, you have to recompile psycopg, making sure it uses the binaries from Postgres93.app. I don't know where the build scripts take their configuration from, I assume they use pg_config. Call which pg_config in Terminal to make sure your $PATH is configured correctly (at build time)\n. I added the information to the docs.\n. I'm not sure about the reason for your issue, but could it be related to the changed paths in 9.3.1.0? Since the app name changed to \"Postgres93.app\", the paths to all the binaries also changed. Did you update the $PATH variable? Call which pg_dump to make sure the right one is being called!\n. Yup, then it must be something else. Now, I'm not so familiar with Rails (or Ruby), but could it be that something still links to the old libraries? If yes, you might need to recompile it. Is the old version of Postgres.app still in your applications folder? Try removing it.\n. Can you try executing the pgdump command manually from the Terminal to see where exactly it crashes / hangs?\n. Hm. I just tried to create a table with a uuid column, and then exported it using pg_dump just fine...\nMabye you could try starting postgres manually using the following command:\n/Applications/Postgres93.app/Contents/MacOS/bin/postgres -D ~/Library/Application\\ Support/Postgres93/var/\n(Make sure you close Postgres.app beforehand)\nThen you can maybe see what's going on in the server log.\n. Which version of Postgresapp are you using?\n\nAm 13.11.2013 um 17:53 schrieb dommasch notifications@github.com:\nIf I tried to create postgis I was getting the following error:\nosm=# create extension postgis;\nERROR: could not open extension control file \"/Applications/Postgres.app/Contents/MacOS/share/extension/postgis.control\": No such file or directory\nosm=#\nHow can i fix it?\n\u2014\nReply to this email directly or view it on GitHub.\n. It looks like an older version of Postgresapp is still running on your Mac. Remove the old version, and make sure it's not running any more (check in Activity Monitor, if you used automatic start make sure you remove the login item in system preferences).  Then start the new version (Postgres93.app).\n. Try connecting via TCP:\npsql -h localhost\n. It seems like Postgresapp isn't running on that computer. Check if the elephant icon is in the menubar, and check if there are any processes named \"postgres\" running in Activity Monitor. If not, close and reopen Postgres93.app\n. It could be that Postgresapp failed to start the \"postgres\" server process. If there are no processes named \"postgres\" (not Postgres93, that's just the GUI), restart postgresapp.\n\nYou can try manually starting the server using the following command in Terminal:\n/Applications/Postgres93.app/Contents/MacOS/bin/postgres -D ~/Library/Application\\ Support/Postgres93/var\nMaybe the error messages will tell you what's wrong\nOn 20 Nov 2013, at 03:12 pm, dommasch notifications@github.com wrote:\n\nThe Postgresapp is running like on the other computer and the process \"Postgres93\" is running too.\n\u2014\nReply to this email directly or view it on GitHub.\n. Did you try what the error message suggested?\n\nOn 20 Nov 2013, at 03:35 pm, dommasch notifications@github.com wrote:\n\nIf I try to start the server manually I\u00b4m getting the following error:\nLOG: could not bind Unix socket: Address already in use\nHINT: Is another postmaster already running on port 5432? If not, remove socket file \"/tmp/.s.PGSQL.5432\" and retry.\nWARNING: could not create Unix-domain socket in directory \"/tmp\"\nFATAL: could not create any Unix-domain sockets\n\u2014\nReply to this email directly or view it on GitHub.\n. You can find release notes in the releases section on github https://github.com/PostgresApp/PostgresApp/releases\n\nI didn't intentionally drop plpython, I'll have to examine this more closely...\n. It seems that for some reason PostgreSQL decided to build without plpython. I don't exactly know why, it seemed to be a combination of upgrading to Mavericks and some old stuff I had in /usr/local. After installing Command Line Tools and removing old python builds from /usr/local, I managed to build PostgreSQL with plpython on Mavericks. I'll keep you updated.\n. Could you please test the latest pre-release and see if it works?\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.3.1.1-RC1\n. The latest release https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1 also includes plpython again.\n. Did you set the correct $PATH in your .bash_profile? Use \"which pg_config\" to check.\n. Yup, the docs are outdated. We are working on a new website, so I hope we can address this soon.\n\nAm 26.11.2013 um 13:35 schrieb Philip Hale notifications@github.com:\nAh - I did this afterwards. So setting the $PATH before gem install pg solves this? Makes sense.\nIt's pretty obvious but the docs also say PATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\" whereas the new app name is Postgres93.app\n\u2014\nReply to this email directly or view it on GitHub.\n. It looks like the PostgreSQL server itself is crashing. It's odd\nthat Library/Application Support/Postgres93 is empty, because the\nserver should only be started after initdb is called. (initdb\ninitializes the data directory)\n\nDoes the crash happen with the released version too? Is anything\nwritten to the console (Console.app in utilities) when starting\nPostgresapp?\nOn Tue, Nov 26, 2013, at 12:01, Otto Bretz wrote:\nA colleague get this on a freshly installed 10.9 computer using\n  9.3.1.1 RC 1.\nThe Library/Application Support/Postgres93 folder is empty and there\n  is a crash-log[1]. Any suggestions?\n[1] [1]http://paste2.org/fUvpttJj\n\u2014\nReply to this email directly or [2]view it on GitHub.\n[17gC5NbwFSOpUzQCEf5DwSvi0OqhYWhwQYTUwgO7daBFJmNxvSxt492sAeVMqCyS.gif]\nReferences\n1. http://paste2.org/fUvpttJj\n2. https://github.com/PostgresApp/PostgresApp/issues/152\n. Okay, so for some reason initdb is failing. Maybe I can look into it tomorrow.\n\nAm 26.11.2013 um 13:18 schrieb Otto Bretz notifications@github.com:\nThanks for looking at this so quickly. It does not happen with the released version 9.3.1.0 (18).\nHere are the messages from the log:\n\u2014\nReply to this email directly or view it on GitHub.\n. That's a good idea. I just looked at the exact command Postgresapp runs, and it seems to be:\n\ninitdb -D\"/Users/USERNAME/Libary/Application Support/Postgres93/var\" -EUTF8 --locale=XX_YY.UTF-8\nwhere XX is your language code and YY your country code (corresponding to your locale). Maybe the problem has to do with locale settings?\n(Note: if you run initdb manually, and start Postgresapp, it will not automatically create a database with your username. You will have to do this manually, either in psql or using createdb)\n. I'm not sure, Postgresapp uses [NSLocale currentLocale]. It's probably the LANG setting?\nThe corresponding code is here: https://github.com/PostgresApp/PostgresApp/blob/9.3.1.1-RC1/Postgres/PostgresServer.m#L132\n. Okay, this is interesting. Probably some weird string is sent as an argument to initdb on his machine. I think the best way to handle this problem is to provide a default locale when the system has an empty locale. Thanks for the feedback.\n. No, this has nothing to do with java. Exit codes are pretty much arbitrary and are unique to each program... Can you check in console.app if the same errors are presented like when starting Postgres.app?\n. This sounds like your /etc/hosts file is screwed up. What happens when you type nslookup localhost in Terminal?\n\nAm 18.06.2014 um 20:33 schrieb \"Mike T.\" notifications@github.com:\nI am having the same problem, I've tried reinstalling it (9.3.4).\nI ran the command line from the trouble shooting:\n/Applications/Postgres.app/Contents/Versions/9.3/bin/postgres -D \"/Users/research/Library/Application Support/Postgres/var-9.3\"\nAnd got:\nLOG:  could not translate host name \"localhost\", service \"5432\" to address: nodename nor servname provided, or not known\nWARNING:  could not create listen socket for \"localhost\"\nFATAL:  could not create any TCP/IP sockets\n\u2014\nReply to this email directly or view it on GitHub.\n. @miketissenbaum And what about /etc/hosts? What happens when you type cat /etc/hosts?\n\nHere's what the file SHOULD look like:\n``` bash\n\nHost Database\n\nlocalhost is used to configure the loopback interface\nwhen the system is booting.  Do not change this entry.\n\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost \nfe80::1%lo0 localhost\n```\n. Then try creating the file, with contents as above.\nPS: That is an odd user name.\n\nAm 19.06.2014 um 14:22 schrieb \"Mike T.\" notifications@github.com:\nHrm - I actually get:\nuser3-227-232:~ research$ cat /etc/hosts\ncat: /etc/hosts: No such file or directory\n\u2014\nReply to this email directly or view it on GitHub.\n. I'm closing this issue because there are multiple different issues discussed here, and I'm not sure which of them are still there on the current version. Please open a new issue if you have a similar issue.\n. Thanks. We know the website is outdated and we are working on a new website which we hope to keep more up to date.\n. Unfortunately I still haven't gotten around to updating the docs, but the latest version (https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1) now checks your .profile files to see if it finds an outdated $PATH, and offers to update it automatically. This should save some frustration.\n. Docs are now updated!\n. Use which psql to see if your $PATH is configured correctly. Also, type export in bash to see if the you set the PGPORT environment variable somewhere (eg. in .bash_profile)\n\nPossibly related: http://www.postgresql.org/docs/9.3/static/libpq-envars.html and http://www.postgresql.org/docs/9.3/static/app-psql.html\n. The latest version of Postgres (https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1) explicitely provides the port when you use the \"Open psql\" menu item, so configuration troubles like this should no longer be as much of an issue.\n. The latest version of Postgres (https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1) now has a preference window that lets you configure (and show) the data directory. The binary location should be noted in the docs (but is unfortunately outdated).\n. Could it be that you have a second installation of Postgres on your machine? Call ps -ax | grep postgres to see if you are actually running the \"postgres\" server from Postgres93.app\n. Looks like you have a different installation of PostgreSQL running. Postgresapp can't start if there's already a server running. Check in the docs how to remove a previous installation: http://postgresapp.com/documentation\n\nAm 02.12.2013 um 23:10 schrieb jordan5k notifications@github.com:\nThis is the result, not sure what to make of it:\nKanter-Jordans-MacBook-Pro:~ jordan5k$ ps -ax | grep postgres\n117 ?? 0:00.01 postgres: logger process\n119 ?? 0:00.23 postgres: checkpointer process\n120 ?? 0:03.38 postgres: writer process\n121 ?? 0:03.40 postgres: wal writer process\n122 ?? 0:07.37 postgres: autovacuum launcher process\n123 ?? 0:25.35 postgres: stats collector process\n15219 ?? 0:00.00 postgres: jordan5k jordan5k ::1(65452) idle\n15594 ttys000 0:00.00 grep postgres\nhow do I tell if Postgres93.app is running? Many thanks.\n\u2014\nReply to this email directly or view it on GitHub.\n. Well it looks like some old installation of PostgreSQL is still running on your Mac (not PostgreSQL 9.3). If you already uninstalled it, try rebooting, and see if there are any postgres processes left.\n. Nevermind, it looks like you actually have a Postgres 9.3.1 server running. Try restarting your Mac anyway. Then check using the Terminal command (or use Activity Monitor) if there are any postgres processes running. If not, you can start Postgresapp.\n\nIf the problem then persists, try the latest prerelease which you can find in the releases section here on github: https://github.com/PostgresApp/PostgresApp/releases\n. Did you manage to get this working in the mean time? If not, could you try the latest release: https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1\nBest regards,\nJakob\n. Is included in 9.3.2.0 https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1\nCould you test if this new version works for you?\n. Thank you, this is awesome (and long overdue).\nHow much testing did you do for this?\n. Yes, I already saw that the status code check didn't actually work, glad you already found a fix! This will hopefully make debugging Postgresapp issues a bit easier.\n. I just downloaded 9.3.1.0 from the server, and as expected it includes pg_dump version 9.3.1.\nType /Applications/Postgres93.app/Contents/MacOS/bin/pg_dump -V and which pg_dump and echo $PATH to make sure you are in fact running the version you think you are running.\n. Does the server really consult $PGPORT? I thought this was a client thing...\nAnd how would you even set PGPORT, aside from opening Postgresapp from the command line? Or do people really open it like PGPORT=2345 /Applications/Postgres93.app/Contents/MacOS/Postgres93?\n. But if PGPORT is set in .bashrc or in .bash_profile, PostgresApp won't see that, because it is started from the Finder, not from bash. (On the other hand, it doesn't hurt to check anyway)\n\nAm 11.12.2013 um 16:12 schrieb tildeslash notifications@github.com:\nOn 11 Dec 2013, at 14:35, Jakob Egger notifications@github.com wrote: \n\nDoes the server really consult $PGPORT? I thought this was a client thing\u2026 \n\nApparently it does. Open terminal and try: \nexport PGPORT=5555; pg_ctl start -D$HOME/Library/Application\\ Support/Postgres93/var/ \nSee also PGPORT @ http://www.postgresql.org/docs/9.3/static/app-postgres.html. This was not an issue before as port was explicit set using -p. Though we can still use -p with port read from postgresql.conf or the default port and ignore $PGPORT it is easier to just consider $PGPORT. Using -p might also prevent someone from using Unix domain sockets. \n\nAnd how would you even set PGPORT, aside from opening Postgresapp from the command line? Or do people really open it like PGPORT=2345 /Applications/Postgres93.app/Contents/MacOS/Postgres93? \n\nIt is more likely that users might have $PGPORT set in .bashrc or in .profile. Some packages like Homebrew or Macports might also set this variable in users .bashrc. The rational for $PGPORT (I guess) is that if postgres was setup on a non-standard port, you can set $PGPORT in .bashrc and do not have to include the port number with command line tools such as psql. \nNotice that the above command (except export) is the command PostgresApp uses to start Postgres. So if a user have $PGPORT set in .bashrc, PostgresApp will start on $PGPORT unless port is explicit set in postgresql.conf. With this simple patch we cover our bases and will report the correct port number in the menu regardless if $PGPORT or postgresql.conf is used.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ahhh... now I just wanted to merge that pull request because you convinced me checking PGPORT is the right thing to do, but now it is closed... Could you reopen it so I can merge it automatically?\n. OK thanks.\n. Just to let you know, this is now in the latest release. Thanks for the pull requests, the assistance is greatly appreciated.\n. Thank you, this is a serious bug! Let me try to fix this right away.\n. Fixed in Release Candidate 2. Thanks for the bug report.\n. Yes, there is an easy way to avoid this mess; just use a more recent version of Postgres.app (it no longer bundles openssl command line tools, only libraries). Also, Mavericks no longer bundles postgres, so you can add the Postgres app path last.\n\nI encourage you to download the latest prerelease, it contains lots of other fixes as well.\nJakob\n\nAm 26.12.2013 um 00:20 schrieb Richard Schneeman notifications@github.com:\nI've got postgres.app installed and this in a startup script:\nexport PATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\"\nWhich is all fine and good except that now when I try to install Ruby source using ruby-build (or rbenv).\n$ rbenv install 2.1.0\nDownloading ruby-2.1.0.tar.gz...\n-> http://dqw8nmjcqpjn7.cloudfront.net/9e6386d53f5200a3e7069107405b93f7\nInstalling ruby-2.1.0...\nBUILD FAILED\nInspect or clean up the working tree at /var/folders/0f/dkwlpq9x1nbghzpqj3zxy9kc0000gn/T/ruby-build.20131225175626.43263\nResults logged to /var/folders/0f/dkwlpq9x1nbghzpqj3zxy9kc0000gn/T/ruby-build.20131225175626.43263.log\nLast 10 log lines:\n                              io-console 0.4.2\n                              json 1.8.1\n                              minitest 4.7.5\n                              psych 2.0.2\n                              rake 10.1.0\n                              rdoc 4.1.0\n                              test-unit 2.1.0.0\ninstalling rdoc:              /Users/schneems/.rbenv/versions/2.1.0/share/ri/2.1.0/system\ninstalling capi-docs:         /Users/schneems/.rbenv/versions/2.1.0/share/doc/ruby\nThe Ruby openssl extension was not compiled. Missing the OpenSSL lib?\nAfter manually uninstalling and re-installing open ssl\n$ brew uninstall openssl\nUninstalling /usr/local/Cellar/openssl/1.0.1e...\n2.0.0-p247  ~\n$ brew install openssl\n==> Downloading http://www.openssl.org/source/openssl-1.0.1e.tar.gz\n################################################################## 100.0%\n==> perl ./Configure --prefix=/usr/local/Cellar/openssl/1.0.1e --openssldir=/usr/local/etc/openssl zlib-dynamic shared darwin64-x86_64-cc enable-ec_nistp_64_gcc_128\n==> make depend\n==> make\n==> make test\n==> make install MANDIR=/usr/local/Cellar/openssl/1.0.1e/share/man MANSUFFIX=ssl\n==> Caveats\nThis formula is keg-only, so it was not symlinked into /usr/local.\nMac OS X already provides this software and installing another version in\nparallel can cause all kinds of trouble.\nThe OpenSSL provided by OS X is too old for some software.\nGenerally there are no consequences of this for you. If you build your\nown software and it requires this formula, you'll need to add to your\nbuild variables:\nLDFLAGS:  -L/usr/local/opt/openssl/lib\nCPPFLAGS: -I/usr/local/opt/openssl/include\n==> security find-certificate -a -p /Library/Keychains/System.keychain > '/usr/local/etc/openssl/osx_cert.pem.tmp'\n==> security find-certificate -a -p /System/Library/Keychains/SystemRootCertificates.keychain >> '/usr/local/etc/openssl/osx_cert.pem.tmp'\n==> mv -f /usr/local/etc/openssl/osx_cert.pem.tmp /usr/local/etc/openssl/osx_cert.pem\n==> Summary\n/usr/local/Cellar/openssl/1.0.1e: 429 files, 15M, built in 3.9 minutes\n$ brew link openssl --force\nLinking /usr/local/Cellar/openssl/1.0.1e... 1139 symlinks created\nI was still getting failures, untill i ran this guy:\n$ which openssl\n/Applications/Postgres.app/Contents/MacOS/bin/openssl\nAha! For postgres.app to be picked up over my system postgres it needs to come before /usr/local/bin, but this also means that version of openssl comes before my system installed version.\nIs there some easy way to avoid this problem that I'm missing? Also, thanks for the work on this all, and merry christmas!\n\u2014\nReply to this email directly or view it on GitHub.\n. Could you try if the newest pre-release (9.3.2.0) still exhibits the same problems? (See the releases section on github)\nAm 10.01.2014 um 07:20 schrieb Chris Hiestand notifications@github.com:\nI am running Postgres93.app (v 9.3.1) and I'm having a problem with the command line client \"psql\" while connecting to postgress.app running on the localhost on OS X. It's behaving as if somewhere a character encoding is set incorrectly, but as far as I can tell, 'UTF-8' or 'UTF8' is correctly set everywhere.\nIf I enter a unicode character in the psql cli, such as:\nuser=# select '\u00f6';\nBut before hitting enter, use the keyboard \"left\" button to move the cursor across all the way to the left edge, and then back all the way to the right, the output get distorted and looks like this:\nuser=#select '\u00f6';;\nIf I do hit enter - the command works fine, so the problem is on the display/client side.\nHere's why I think all my encodings are set correctly:\nuser@hostname:~ $ locale\nLANG=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_CTYPE=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_ALL=\nuser@hostname:~ $ psql\npsql (9.3.1)\nType \"help\" for help.\nuser=# \\encoding\nUTF8\nuser=# \\l user\nList of databases\nName | Owner | Encoding | Collate | Ctype | Access privileges \n--------+--------+----------+-------------+-------------+-------------------\nuser | user | UTF8 | en_US.UTF-8 | en_US.UTF-8 |\nAlso if, from my OS X terminal, I ssh into a linux box and run 'psql', the problem does not reproduce. So I'm fairly certain my terminal is not the problem.\nI have asked the pgsql-general mailing list, and Tom Lane thinks this version of PostgresApp was compiled against a buggy version of libedit.\n\u2014\nReply to this email directly or view it on GitHub.\n. Sounds like there was a problem downloading the zip file. Did you try downloading it again?\nAm 10.01.2014 um 08:45 schrieb Erik Chan notifications@github.com:\nI'm using 10.9.1, is there something I'm missing?\nThe icon for Postgres is inactive and I also noticed whilest unzipping Postgres93.zip i was told contents of the zip file are corrupt.\n\u2014\nReply to this email directly or view it on GitHub.\n. This is the first time I hear of PGXN, and it seems to be a pretty awesome project. It would be nice to have PostgresApp work together with it.\n\nRecent versions of Postgres.app should have a fully functional pg_config, so I assume that pgxn should have no troubles finding the right paths etc. Just make sure you set the correct PATH in your .profile files. I'd recommend using the latest pre-release (see here: https://github.com/PostgresApp/PostgresApp/releases).\nIncluding the pgxn client sounds like a good idea, but it also seems like a lot of work.\nConcerning bundled extensions, Postgres.app includes the \"contrib\" extensions that are bundled with PostgreSQL (like hstore, uuid-ossp, etc). Apart from that it includes PostGIS and plv8 (Javascript procedural language).\n. I assume you mean that \"Open psql\" should open iTerm instead of\nTerminal? Sounds like a good idea. The latest Postgres.app beta has a\npreference window, so I should be able to integrate that nicely.\nI'll have to check if iTerm has the same Apple script support as\nTerminal.\n. If you set up your PATH (http://postgresapp.com/documentation/cli-tools.html) you can just type psql\n\nAm 29.07.2015 um 00:10 schrieb Carl H notifications@github.com:\n@MattOates we are to lazy to alias '/Applications/Postgres.app/Contents/Versions/9.4/bin'/psql -p5432\npsql (9.4.4) ;)\n\u2014\nReply to this email directly or view it on GitHub.\n. @bithavoc awesome!\n\nPlease just include the iTerm.h header, otherwise we can build Postgres.app only with iTerm installed -- something I'd like to avoid.\n. Postgres.app 2.0 now has a preference to open databases in iTerm 2 instead of Terminal.. Hm, so it sounds like you can connect via Unix sockets, but not via TCP. Presumably this has nothing to do with Postgresapp itself, but is rather a problem with your network.\nDo you have any fancy non-standard network setup? Do you have some kind of firewall, or a tool like \"Little Snitch\" that could be interfering? Do other network services on your Mac have issues as well?\n. Also, just to be sure, try restarting your Mac. (Maybe your kernel ran out of file descriptors or something)\n. Just to make sure this isn't actually an SSL issue, can you try connecting with\nPGSSLMODE=disable psql -h localhost\nAnd to see if it's an ipv6 issue, also try connecting to 127.0.0.1 and to ::1 instead of localhost\n\nAm 29.01.2014 um 16:43 schrieb David Beck notifications@github.com:\nYeah, that is what I am starting to believe. I\u2019ve restarted my Mac several times without change. I have a fairly normal network (Airport Extreme with typical configuration) and am sitting on Starbucks wifi seeing the same issue.\nAlso, PG Commander says that it is \u201cNegotiating SSL\u201d the entire time it is trying to connect.\n\u2014\nReply to this email directly or view it on GitHub.\n. Ok, I'll look into this tomorrow.\nAm 29.01.2014 um 18:12 schrieb David Beck notifications@github.com:\nBingo. PGSSLMODE=disable psql -h localhost works flawlessly.\n\u2014\nReply to this email directly or view it on GitHub.\n. Okay, so looking through the PostgreSQL client library code, a number of things could be happening when it says \"Negotiating SSL\" (technical detail: that's the CONNECTION_SSL_STARTUP state). \n\nThe two hints I have is that it reports an unknown error, and that the server logs \"incomplete startup packet\". The best thing for debugging would be a TCP dump of the messages sent, but capturing that would be a bit complicated to set up.\nThe unknown error could happen if the OpenSSL library blocks for some reason during initialisation, and then fails.\nCould you tell me exactly which version of Postgres.app you have running, and what version of OS X? Maybe I can reproduce the problem on my machine.\nNext, could you make sure that postgres and psql are linked with the correct libraries? To do so, connect using psql, then open Activity Monitor, and look for processes named psql and postgres (NOT Postgres). Select them, click the info button, choose the \"Open Files and Ports\" tab, and copy paste the list of open files.\n. Could you try if the latest release (from https://github.com/PostgresApp/PostgresApp/releases) works?\n. Thanks for reporting this issue, I'll look into it.\n. Postgres.app no longer tries to move itself to /Applications, so I guess this issue is no longer relevant.. The message You have to install development tools first sounds like you are missing some binaries. Do you have the Unix command line tools installed on your Mac? Try typing which clang or which gcc to see if you actually have a compiler installed.\nAlso, when trying to build against Postgres.app, make sure you have set the right path. Type which psql to make sure everything is set up correctly.\nSee http://postgresapp.github.io for the latest docs and the latest version of Postgres.app (the http://postgresapp.com homepage is outdated, we are working on updating it)\n. Sorry for the delay, new build is out now.\n. The old path is probably somewhere in your data directory. The best way to fix this is probably the following:\n1. use pg_dump_all to create a dump of your database\n2. create a new data directory (just choose a different path in preferences, or click \"use default\")\n3. use psql to restore your database.\n. To reset your Postgres.app installation, quit Postgres.app, and delete (or move) the Postgres (and Postgres93 if it exists) folders in Application support. Reset preferences with the command defaults delete com.postgresapp.Postgres.\nThen open activity monitor and look for any processes named postgres (use the search box). If you see any running, they might interfere with Postgresapp.\nIf everything is okay, you should be able to start Postgres.app and a new, empty database should be set up.\nAlso note that you need to quit & restart Postgres.app everytime you make changes to pg_hba\n. Assuming this is fixed.\n. Could you elaborate on that? I don't use madlib, but from the website it looks like it only needs to have psql in your path. That should be simple (see Postgresapp docs).\nIs there any specific reason why MADlib shouldn't work with Postgres.app?\n. I don't know if MADlib is used by many users of Postgres.app, so I'm not sure if bundling it is a good idea. There are two problems with bundling lots of stuff with Postgres.app: File size and Complexity. I guess file size isn't so important, but complexity is a big problem. Postgres.app already contains quite a lot of stuff, and everytime I release a minor upgrade, the build script for one of the dependencies breaks, and I have to do lots of debugging. I just don't have the time to add another big component to Postgres.app.\nAnyway, don't the people behind MADlib already distribute a binary on their website? Does that version not work with Postgres.app?\n. Did you get v8 to build on xcode 5.1 yet?\n. Thanks, i'll merge it later (currently writing from iPhone), but before I can release I have to get v8 to build again...\nJakob\n\nAm 25.03.2014 um 06:26 schrieb Matt Robenolt notifications@github.com:\nDidn't try. This failed to compile during the docs because of the missing dependencies on my machine. And I don't use ports for dependencies only brew which doesn't have all the stuff needed. So this was just an assumption for how it worked. :) If it's wrong, feel free to close and do it the correct way.\n\u2014\nReply to this email directly or view it on GitHub.\n. Merged. Next time please add a comment if you tested it and wheter it builds or not :)\n. This pull request appears to be spam.\n. This doesn't make sense.\n. I understand that an auto-updating app would be nice to have.\n\nHowever, I'm a bit afraid of adding automatic updates, because a few times already a new version broke something, and if that happens again, I don't want to automatically deliver a broken version to everybody.\nPostgres.app includes so many dependencies and can break in so many different ways that I just don't feel comfortable adding auto-update.\nAlso, updating is pretty simple anyway -- just download new version and double click. The new version can move itself to the Applications folder, and the old version will be renamed. If something doesn't work anymore after the upgrade, downgrading is as simple as double clicking the old version.\nFurthermore, auto-upgrading would only be possible for minor versions anyway, because major upgrades (eg. 9.3 to 9.4) might require some manual actions.\n. Try the following:\n1. Quit Postgres.app\n2. Open Activity Monitor, see if any processes name postgres are running. If so, kill them.\n3. Delete the Folder ~/Library/Application Support/Postgres\n4. Open Postgres.app again\n5. Wait a few moments before clicking \"Open psql\", initialising the database might take a few seconds\n. It seems that pg_config isn't found.\nTwo possible solutions: \n1. Set up your PATH as described in the docs so that pg_config is found (type which pg_config to make sure it works)\n2. Try --with-pg-config=/Applications/Postgres.app/Contents/Versions/9.3/bin/pg_config\nIf the build later fails because clang from XCode 5.1 gets unexpected arguments, try ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future gem install pg\n. Did you try adding Postgres.app's bindir to your $PATH?\nJust add a line like the following to .bash_profile:\nexport PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.3/bin\n. Also, try specifying $ARCHFLAGS:\nsudo ARCHFLAGS=\"-arch x86_64\" gem install pg\n. @YonasBerhe This thread only deals with Postgres.app. If you don't use Postgres.app, I can't help you.\nPlease also note that the path for the current version is \nexport PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.4/bin (note the major version number in the path, ie. 9.4 instead of 9.3)\n. @adityanagla1996 I'm sorry, I can't help with installation on Windows.\n. Enabling it by default is probably not a good idea because it creates a couple of tables that clutter the database, and might confuse users that do not use PostGIS.\nIt would be great if someone could write a short \"Getting started\" tutorial for PostGIS and Postgres.app! However, I simply don't have the time to do that. (And I don't use PostGIS myself)\nIf you, or anyone reading this, has a bit of spare time, consider forking the postgresapp.github.io repository, and adding a tutorial. It would probably be best to add it as a separate page. (The single-page-documentation is getting a bit unwieldy and should probably be split up into multiple pages anyway).\nIf you need help contributing to the docs, please tell me, and I'll try my best to explain it.\n. The warning sounds like something is linked to an older version of OpenSSL (1.0.0) but you say you installed 1.0.1g. I don't know where openssl.bundle is coming from, but can you reinstall that?\nDisclaimer: I don't use ruby myself so I'm just guessing here.\n. The binaries and libraries contained in Postgreapp all contain fixed paths, so if you change the location, you'll also have to update all the binaries using install_name_tool. (If you make sure there's a symlink at /Applications/Postgres.app that might not be necessary, then you only have to disable the location check) Additionally, some extensions store binary paths in the data directory, so you can't move Postgresapp after setting your database up.\n. Did you follow the instructions for installing the gem at http://postgres.app/documentation/ ?\nDid you set up the $PATH variable?\n\nAm 03.06.2014 um 03:32 schrieb Kim Girard notifications@github.com:\nI'm trying to install the pg gem but keep getting an error. Everything online says to specify the path to my pgconfig file, but when I go to /Applications/Postgres.app/Contents/MacOS there is no bin file containing pgconfig.\n\u2014\nReply to this email directly or view it on GitHub.\n. Thanks for bringing this to my attention. I will try to build a new version tomorrow morning.\n. Updated to 1.0.1h in Version 9.3.4.2\n. Just a hunch, did you try setting your search_path in pgadmin? Maybe it can'tfind the function because the postgis schema isn't in the search path\nAm 10.06.2014 um 18:27 schrieb Jason Fleetwood-Boldt notifications@github.com:\nAfter dropping & recreating my Postgres database, I am seeing some very strange behavior in pgAdmin while debugging my Rails app.\nI'm getting this error:\nfunction st_distance(postgis.geography, unknown) does not exist\nI am running Postgres 9.3.4.0\nHere's how I'm setting up my database\nrake db:create\n--> I now have 2 extensions plpgsql and postgis; also have two schemas postgis and public\nrake db:migrate\n--> I now have 3 extensions plpgsql, postgis, hstore\n--> Also I now have 50 tables (what I am expecting)\nThen I restore my production dump to my local dev machine. At this point, everything looks ok when I examine it in pgAdmin, but I am unable to use any Postgis functions.\nNow here's where it gets weird. When my query runs in Rails, it works fine (as expected). However, when i run it in pgAdmin, it fails, giving me this error:\nERROR: function st_distance(postgis.geography, unknown) does not exist\nLINE 1: SELECT DISTINCT places.*, ST_Distance(\"places\".\"coords\", '00...\n^\nHINT: No function matches the given name and argument types. You might need to add explicit type casts.\nWhen this query runs inside of my Rails app it executes as expected -- which is behavior I've never seen from Rails before, so I must be missing something basic.\nCan anyone point in the right direction here, I'm really stuck trying to figure why Rails behaves differently than pgAdmin on the exact same database.\nMy full query is below, as you can see it is rather large:\nSELECT DISTINCT places., ST_Distance(\"places\".\"coords\", '0020000001000010e6c0527e94b7b289544044645492ff4ba5') AS distance, CASE WHEN (premium_listings.id IS NOT NULL AND (ST_Distance(places.coords, '0020000001000010e6c0527e94b7b289544044645492ff4ba5')*0.621371) < premium_listings.reach_radius_mi) THEN 1 ELSE 0 END as premium_listing, ur.rating AS user_rating, CASE WHEN fp.id IS NULL THEN 'false' ELSE 'true' END AS user_favorite, CASE WHEN featured_places.count > 0 THEN 'true' ELSE 'false' END AS featured FROM \"places\" LEFT OUTER JOIN premium_listing_places ON premium_listing_places.place_id = places.id LEFT OUTER JOIN premium_listings ON (premium_listings.id = premium_listing_places.premium_listing_id AND premium_listings.starts_at < NOW() AND premium_listings.ends_at > NOW()) LEFT OUTER JOIN ratings AS ur ON ur.rateable_id = places.id AND ur.rateable_type = 'Place' AND ur.user_id = -1 LEFT OUTER JOIN user_favorite_places AS fp ON fp.place_id = places.id AND fp.use r_id = -1 LEFT OUTER JOIN (SELECT places.id AS id, COUNT() AS count FROM \"promotions\" INNER JOIN \"place_promotions\" ON \"place_promotions\".\"promotion_id\" = \"promotions\".\"id\" INNER JOIN \"places\" ON \"places\".\"id\" = \"place_promotions\".\"place_id\" WHERE \"promotions\".\"featured\" = 't' AND (((\"promotions\".\"starts_at\" <= '2014-06-10' AND \"promotions\".\"ends_at\" >= '2014-06-10') OR (\"promotions\".\"starts_at\" <= '2014-06-10' AND \"promotions\".\"ends_at\" IS NULL))) GROUP BY places.id) AS featured_places ON featured_places.id = places.id JOIN taggings place_taggings_e280fa7 ON place_taggings_e280fa7.taggable_id = places.id AND place_taggings_e280fa7.taggable_type = 'Place' WHERE \"places\".\"status\" = 'approved' AND (ST_DWithin(\"places\".\"coords\", '0020000001000010e6c0527e94b7b289544044645492ff4ba5', 50000)) AND (place_taggings_e280fa7.tag_id = 80 OR place_taggings_e280fa7.tag_id = 102 OR place_taggings_e280fa7.tag_id = 8 OR place_taggings_e280fa7.tag_id = 76 OR place_taggings_e280fa7.tag_i d = 260 OR place_taggings_e280fa7.tag_id = 261 OR place_taggings_e280fa7.tag_id = 217 OR place_taggings_e280fa7.tag_id = 226 OR place_taggings_e280fa7.tag_id = 258 OR place_taggings_e280fa7.tag_id = 286 OR place_taggings_e280fa7.tag_id = 155 OR place_taggings_e280fa7.tag_id = 262) GROUP BY places.id, premium_listings.id, ur.rating, fp.id, featured_places.count ORDER BY premium_listing DESC, distance LIMIT 50\nFor your reference, my database.yml file looks like this:\ncommon: &common\nadapter: postgis\nhost: localhost\nusername: <%= ENV['USER'] %>\nencoding: unicode\npool: 5\ntimeout: 5000\npostgis_extension: postgis\nschema_search_path: public,postgis\ndevelopment:\n<<: *common\ndatabase: mn_development\n\u2014\nReply to this email directly or view it on GitHub.\n. Looking back at this issue, it might have been caused by version change in PostGIS. Sorry that I couldn't help you at the time when you ran into this issue.\n\nAnyway, since some time, Postgres.app now only changes PostGIS versions when changing to a new major version of PostgreSQL to avoid this kind of issue.. Hi, we host Postgresapp on Github, and they host it on amazon S3, I think. Github always uses https by default, I can't change that. Maybe you can change the download URL to http yourself?\n\nAm 14.06.2014 um 16:01 schrieb zhangsilly notifications@github.com:\nChina, the original url can never download from the download url, please don't use https pls!\n\u2014\nReply to this email directly or view it on GitHub.\n. I'll see what I can do. I have to wait until tomorrow when I am at the office, because I have slow internet at home.\nAm 17.06.2014 um 15:29 schrieb Smillence notifications@github.com:\nI am also in China now. I have met with the same problem. I asked my friend to help me to download and they also could not. I have tried to use VPN and failed again. Could you do us a favour to upload it to dropbox and share to my email smillence1992@gmail.com? Thanks:)\n\u2014\nReply to this email directly or view it on GitHub.\n. I just contacted Github support. They suggested that anybody who is affected by this issue should contact them directly (support@github.com) for troubleshooting.\n. Also, just to make sure we are talking about the same thing: the problematic download is the file linked from postgresapp.com (blue download button).\n. @zhangsilly @Smillence Here's a link to the file on Dropbox: Postgres-9.3.4.2.zip.\n. Did any of you contact github support yet? I'm pretty sure they are interested in fixing this problem if someone helps them debug.\nAm 20.06.2014 um 17:18 schrieb Smillence notifications@github.com:\nNice lol\n\u2014\nReply to this email directly or view it on GitHub.\n. Yes. Putting the old version on the desktop doesn't work, because the dynamic libraries are linked with fixed paths. But even if we used @rpath or @executable_path (like in previous versions) it wouldn't work, because all the extensions expect the binaries to stay in the same place. Therefore, when using pg_upgrade, you need to make sure that the old binaries stay in the same path, and that the new binaries are in a different path.\n\nThis is exactly the reason why the 9.3 binaries and the 9.4 binaries are in a different path -- so you can use pg_upgrade.\nI didn't put instructions for pg_upgrade in the docs because it seemed to complicated, but it seems you figured it out anyway :)\nI thought it would be easier to just use pg_dump and restore for upgrading.\n. I added short instructions on pg_upgrade to the docs: http://postgresapp.com/documentation/install.html\n. pgAdmin is a PostgreSQL client and shouldn't interfere with Postgres.app\nIf you do have a different version of the PostgreSQL server running on your Mac, that will interfere with Postgres.app. Easiest way to see if that is the problem: Jsut check in Activity Monitor, look for processes name postgres.\nSee http://postgresapp.com/documentation/install.html for (some) uninstall instructions.\nIf that's not the problem, try starting the server manually: http://postgresapp.com/documentation/troubleshooting.html\n. The option is there on my machine. Check if you are actually running the version bundled with Postgres.app:\n$  which dropdb\n/Applications/Postgres.app/Contents/Versions/9.3/bin/dropdb\nIf not, check if your $PATH is configured correctly: http://postgresapp.com/documentation/cli-tools.html\n. AFAIK Lion ships with its own version of postgres, so to override the system provided tools, add the following line to .bash_profile (or wherever you set your path):\nexport PATH=/Applications/Postgres.app/Contents/Versions/9.3/bin:$PATH\nNote that this is different from the suggested setting on 10.9:\nexport PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.3/bin\n. This issue might be related to the new clang compiler in Xcode 5.1. I'm building with XCode 5.0.2 (use xcode-select when you have multiple versions of XCode installed)\nOtherwise, try somehow passing -Wno-error=unused-const-variable (you might have to edit the makefile)\nAnyway the latest versions (master and pg94 branch), compiled just fine under 10.9 on my system a few days ago...\n. Just as an update on this front, I can no longer compile v8 & plv8 as well. plv8 only works with v8 3.16 or older, but those old versions of v8 no longer compile with new versions of XCode. As a workaround, I use libv8 compiled with old version of XCode.\n. As a workaround, the pg94 branch now contains a binary of the libv8 library.\n. There's apparently a problem with name resolution on your Mac; the PostgreSQL server can't resolve the name localhost. Usually this means that /etc/hosts is broken, but what you show looks fine.\nI don't know why name resolution doesn't work. Are you connected to a VPN that might interfere? Did you install any software that intercepts network traffic like Little Snitch or X3 etc.? Do you use some kind of proxy or firewall?\nAlso, I found out that nslookup localhost is no good for checking name resolution troubles; use ping instead to check if localhost is resolved correctly:\nbash\n$ ping localhost\nYou could also try the following command:\n``` bash\n$ scutil -r localhost # is localhost reachable?\nExpected result: Reachable,Local Address\n```\nAs a temporary workaround, you can edit postgresql.conf; change listen_address to something other than localhost, eg. 127.0.0.1 or *. Then the server should at least start.\nAlso, there were a few changes to name resolution in Mac OS 10.8. Which version of OS X are you running?\nAnd last but not least, did you try restarting your computer? :)\n. Good to hear! It would be interesting to know what the issue was, but I guess we'll never know.\nAnyway, I just looked through the docs of pow.cx, and it seems that it does affect name resolution, so it might have caused the odd behavior where localhost couldn't be resolved. They suggest deleting generated files in /etc/resolver/ to fix problems with name resolution -- just in case someone else stumbles upon a similar issue.\n\nAm 31.07.2014 um 21:44 schrieb David notifications@github.com:\nRandomly started working after 11 hours of debugging. Thanks guys.\n\u2014\nReply to this email directly or view it on GitHub.\n. If ping localhost says host unreachable then there is something wrong with your network configuration. After glancing at the pow.cx docs, it seems that it messes with network settings. It creates an ipfw rule (might be worth checking those). Somehow pow.cx must also interfere with name resolution to support those .dev domains, but I\n. (Sorry touched wrong button) ... but I couldn't find any info on how it does this. Maybe you could try uninstallibg pow.cx and see if the problem persists.\n. If everything works when you use 127.0.0.1 and doesn't work when using 'localhost' there are a few things that could be the issue:\n1. A problem with name resolution. I've seen this often when the file /etc/hosts was missing the localhost lines. But there might be problems with other parts of the hostname lookup system. Usually this causes cryptic error messages like 'nodename nor servname provided, or not known'.\n2. Some other configuration problem with your network. Usually, localhost resolves to multiple loopback addresses -- IPv4 seems to work in your case (127.0.0.1), but maybe there is a problem with IPv6 (::1), or with the loopback addresses associated with specific network interfaces. Maybe you have a virtual network interface that's causing trouble? Eg. some virtualisation software creates virtual interfaces.\n3. I've also seen cases where a proxy software called X3 interfered with connections to localhost.\nAm 11.10.2014 um 19:16 schrieb Anna Petry notifications@github.com:\nThanks for the reply. The problem does still persist after uninstalling pow.cx. I've been able to continue working by changing the listen_address to 127.0.0.1 in postgesql.conf, as you suggested earlier. This is such an odd problem if only because it started a few days ago and seems to show up sporadically.\n\u2014\nReply to this email directly or view it on GitHub.\n. @bobmacneal: just to confirm, were you also using pow.cx?\n\n@idigit: After reinstalling OS X, are you using pow.cx without any issues?\n. Could you explain why you think this is the same issue? Do you also have the problem where ping localhost doesn't work?=\n. @bobmacneal don't worry, the real issue here is that Postgres.app always said \"Could not start on port 5432\" whenever something went wrong. In a recent release I improved error reporting. If you try downloading the latest version, you should get sensible error messages that hopefully make debugging a lot easier.\n. I'm closing this issue now. Recent version of Postgres.app show much better error messages and write a server log, so it should be much easier to debug this now.\nIf you are still running into this problem, please open a new issue so we can start fresh.\n. Please stop posting comments to this issue. It's closed. If you have a similar problem, please open a new issue, and mention the number of this issue.\nThanks!. I assume this would be complicated because OS X doesn't ship a Java VM by default. If there's a lot of requests for Java, I'll look into it, but right now I just don't have the time to do this.\n. Did you try using a more recent version of pgAdmin? pgAdmin 1.6.3 was released in 2007.\nAccording to http://www.pgadmin.org, the current version of pgAdmin is 1.18.1\n. I can think of a number of reasons why this error could happen. Does your username contain any special characters? Did you change your username? Did you start Postgres.app from a different username?\nIn any case, try calling createdb myusername from the command line\nBut before you can use the command line tools you need to configure your path:\nhttp://postgresapp.com/documentation/cli-tools.html\n. Did you maybe forget to type the semicolon at the end of a query?\n. Closing this issue for now, please open a new issue if you continue having troubles.\n. 9.4 beta 3 will be released next thirsday; I'll try to tackle to fix the issue by then.\n. (Regarding the grammatical and orthographic errors of my last response, I guess I really should not post comments from my phone)\n. Could you try if Beta 3 fixes the issue? (it worked for me)\n. As a workaround: Try calling initdb manually with a different locale (see readme for command), or set your region to US before starting Postgres for the first time. (You can change it back later)\n\nAm 23.10.2014 um 09:33 schrieb Thomas Dao notifications@github.com:\nI just downloaded beta3 and it has error when launched on Yosemite: Could not initialize database cluster. initdb: invalid locale name \"en_SG.UTF-8\"\n\u2014\nReply to this email directly or view it on GitHub.\n. This problem should finally be fixed in 9.4.0.1\n. Looks like you already have an installation of PostgreSQL running on your Mac. Remove the existing installation, then start Postgres.app again.\n\nIf you want to run mutliple servers, choose a different port for Postgres.app (see postgresql.conf in the data directory)\nSee the docs for uninstall instructions for popular Postgres distributions.\n. Sorry for the late response. Have you been able to fix this issue yet?\ntype export at the bash prompt to see if you have any of the PGXXXX variables set; they might still be configured for your old Postgres installation. If you do, remove those settings from ~/.profile (or ~/.bash_profile or wherever they are set)\n. Closing the issue. Please open a new issue if you run into more troubles.\n. @kevinzzz007 Please follow these instructions.\nIf that doesn't help, please open a new issue -- your problem is probably unrelated to this issue.\n. @kevinzzz007 Great. Just make sure your old installation isn't configured to start automatically when you reboot your computer.\n. Launchd files are stored in the following directories:\n- ~/Library/LaunchAgents\n- /Library/LaunchAgents\n- /Library/LaunchDaemons\n- /System/Library/LaunchAgents\n- /System/Library/LaunchDaemons\nBut the best way to get rid of old PostgreSQL installations is to follow these uninstall instructions.\n. Postgres.app only includes plpython2u at the moment. I'll see if there's a way to build it with both Python 2 and Python 3 support.\n. Building Postgres.app with support for Python3 would probably take a bit of effort, but it should be doable. However, there is one question we first need to answer:\nWhich Python should plpython3u link with?\nFor Python 2, the answer is trivial: we link with the system-provided Python, which is guaranteed to work everywhere. Since macOS doesn't ship with Python 3, we can't do that for version 3.\nThat leaves us with 2 possibilities:\n\nInclude our own version of Python 3 to link against\nLink against Python installed by a different installation method\n\nI think we can immediately rule out the first option. It would take a lot of space, and I would effectively become a Python packager as well -- something I'd like to avoid.\nThe second option requires that we choose a specific Python distribution to link against. The obvious choice would be to link against the official version from python.org. It would probably be a bit inconvenient for people who have installed Python 3 with a different method like homebrew.\nOther potential issues:\n- What happens when a new version of Python is released? plpython3 will need to link against a specific version of Python.\n- How will people find out about the requirements to use plpython3u? Trying to use it without linked libraries available will probably spit out an incomprehensible error message.. This issue should probably not happen anymore with the most recent versions of Postgres.app, since we've moved to absolute pathnames for dylibs a while ago.\nI'm closing this issue now.\nIf this issue still affects you, please:\n- reopen the issue\n- provide a command that I can run on my computer to reproduce the issue\n(I'm not a geo tools specialist, but I'll try my best to fix this issue if it occurs again.). It seems that rails tries to connect to the wrong socket path.\nThe default unix socket path used by PostgreSQL is /tmp/.s.PGSQL.5432. Postgres.app uses this default path.\nFor some reason, your rails installation tries to connect to a non-standard path. Maybe it picked it up from homebrew. Somewhere in the connection settings, there's probably a host parameter that is set to /var/pgsql_socket. Change that to /tmp (or to localhost if you want to connect via TCP/IP instead of unix domain sockets).\nTo check what socket directory your server uses, open psql and type show unix_socket_directories;. (You can type show all; to show more configuration parameters.)\nTo make sure that other command line tools can automatically determine your PostgreSQL configuration, add the Postgres.app binary directory to your $PATH. See http://postgresapp.com/documentation/cli-tools.html for more info.\n(PS: another common issue that often pops up when people install Postgres.app after trying a different method is that they forget to uninstall the old server first. If a different PostgreSQL server is still running when Postgres.app starts, it will show the error message \"Could not start on port 5432\")\n. Try downloading the latest version of Postgres.app; it now shows proper error messages and writes a server log, which should help tremendously with debugging issues.\n. - try uninstalling the homebrew version using brew remove postgresql\n- restart your computer\n- check in activity monitor to make sure no more postgres processes are around\n- open Postgres.app again\n(Hint: To kill postgres, try killing the process with the lowest PID. The others are child processes that will be respawned by the parent process.)\n. That's probably two copies of the same app, check in get info. Just delete \"Postgres-9.3.5.0\"\n. I'll have a look at it over the weekend\n. This might be related to Apple's new code signing requirements. Could you try if this beta works: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/Postgres-9.3.5.Beta1.app.zip\n. Oh, this has a bug in it. Try this: https://s3-eu-west-1.amazonaws.com/eggerapps.at/postgresapp/Postgres-9.3.5.Beta2.app.zip\n. OK, thanks for letting me know you found the problem. The next version of Postgres.app (9.3.5.1) will have better error reporting, so hopefully similar issues will be easier to discover in the future.\n. Do you happen to know if there is a ./configure option that enables building pg_recvlogical?\n. pg_recvlogical will be included in 9.4-beta3, which will be released tomorrow (Oct 09 2014)\n. Fixed this in the latest beta release of 9.4\n. Could you elaborate what exactly you expect to find in this directory? Do you want localized server messages?\n. I think this directory is only used for localized server messages.\nLocales are provided by the system. PostgreSQL usually chooses your default locale when initialising the database cluster. You can choose a different locale by manually calling initdb:\ninitdb -D DATA_DIRECTORY -EUTF-8 --locale=XX_XX.UTF-8\n. You can type locale -a to list available locales on your system.\n. @tbussmann I just tried this, and I am shocked, but it seems you are right. German strings are sorted incorrectly with a locale setting of de_DE.UTF-8. The only way I could get PostgreSQL to sort the strings correctly, was to create a database that uses latin1 as character encoding:\ncreate database latin1_test WITH encoding 'LATIN1' LC_COLLATE='de_DE.ISO8859-1' LC_CTYPE='de_DE.ISO8859-1' TEMPLATE=template0\nThen the strings are sorted correctly. However, using latin1, it is no longer possible to include foreign characters in the table... this is ridiculous. Is this behaviour documented anywhere?\n. And I also just found out that the sort command in the Terminal has the same problem. Does this mean that BSD systems don't support sorting UTF-8 strings at all?\n. The solution seems to be that PostgreSQL should use ICU rather the BSD functions for sorting. See this wiki page: https://wiki.postgresql.org/wiki/Todo:ICU\nPossibly I can build PostgreSQL using a patch made by Palle Girgenson for FreeBSD, but I'm not sure how well-supported this patch is:\nhttp://people.freebsd.org/~girgen/postgresql-icu/README.html\n. Thanks for your explanations. I'll try building with the patch. Don't have time right now, but I'll post here when I know more.\n. @macarthy in principle, yes. You'd just need to create a new database with the collation. However, as a word of caution, UTF-8 locales seem to be fundamentally broken on OSX. Postgres uses the strcoll API, which unfortunately does not support multibyte encodings on OSX.\n. I have built the 9.4 release candidate with the patch from Palle Girgensohn. I also had to bundle ICU, which is rather large, but now sorting seems to work as expected!\nIf you encountered issues with text sorting, please download the latest prerelease and see if it works: https://github.com/PostgresApp/PostgresApp/releases/tag/9.4rc1\nI'd really appreciate feedback; if everything works I'll include the patch in the final release of Postgresapp 9.4.\n. After reading this blog post i came to the conclusion that Apple doesn't care the least about their PostgreSQL installation. Feel free to file a radar, but I don't feel like wasting my time reporting issues that will probably be ignored.\nYou can check if PostgreSQL is build with the ICU patch by running pg_config (look for the --with-icu flag in the configure parameters).\nOr you can try sorting text. With my locale (de_AT.UTF-8) I run the following query:\nSQL\nSELECT unnest(array['a','\u00e4','b']) ORDER BY 1;\nOn a broken system, this will return \na\nb\n\u00e4\nWith ICU it will be sorted correctly:\na\n\u00e4\nb\n. Postgres.app always needs to be named \"Postgres.app\" otherwise it won't find the shared libraries. However, if you start it, it will offer to rename the old app automatically.\nYou should really dump & restore the database because all the indices will be incorrect due to the changed sort order. If you've previously been using 9.3, you have to do that anyway, and you can use both versions in parallel, the new version will create a new database for 9.4 in a separate directory.\nIf you've already been on one of the 9.4 betas, you'll have to rename the data directory before switching Postgres.app.\n. Unfortunately including this patch isn't as straightforward a decision as I thought. I'd like to invite anybody affected by this issue to discuss whether to include the patch in the 9.4 release in issue #233.\n@macarthy any feedback yet on how the new build works with thai sorting?\n. I'm just preparing the 9.4.2 builds. I'll see if I can get a build with ICU working.\n. @orbatec What you describe is the expected behavior when using the POSIX locale. The locale defines how text should be sorted. In the Austrian locale, the correct sort order is a \u00e4 b. However, on OS X, strcoll is broken and therefore PostgreSQL ignores the locale and just sorts the strings by comparing their UTF-8 representation (ie. it effectively always uses the POSIX locale).\nAlso, the codepoint 228 is just one possible representation of \u00e4. You could also represent it as 97 776, which is an a followed by the combining character \u00a8. These two representations would be sorted differently in  the POSIX locale, but for the Austrian locale it shouldn't matter which codepoints are chosen to represent a letter.\nPlease also note that there is a difference between unicode code points and their encoding (eg. UTF-8).\nText handling is a very complex topic. If you are interested, I recommend to spend a few days reading about Unicode, code points, characters, graphemes, encodings, normal forms and collations. It will change the way you think about text.\n. @orbatec There has been a lot of discussion about the ICU patch here on Github and on the PostgreSQL hackers mailing list. The conclusion was that I didn't want the default build of PostgreSQL to use an unofficial patch. Including separate builds of PostgreSQL with ICU is a lot of work, and also dangerous, since people switching between the two builds might corrupt their database.\nThere has been discussion on the mailing list about adding official support for ICU in 9.6; I hope this will fix the issue for good.\n. Ugh \u2014 I didn\u2019t know that using ICU collations as default isn\u2019t possible yet \u2013 that\u2019s a bummer.\nUsing \u2013lc-collate=C is a nice idea to get consistent behavior when migrating the db to a different system. And maybe when people look at that setting, it becomes a bit mire obvious that they need to change something if they want sensible sorting.. As most preferences on OS X, the data directory location is stored using the defaults system.\nYou can read all preferences using the command:\ndefaults read com.postgresapp.Postgres\nOr just read the preference for the current data directory:\ndefaults read com.postgresapp.Postgres DataDirectory\nAnd change the preference like this:\ndefaults write com.postgresapp.Postgres DataDirectory \"/new/dir\"\nThen just restart Postgres.app. You can quit Postgres.app gracefully using Applescript from the Terminal:\nosascript -e 'tell application \"Postgres\" to quit'\nAnd then start it again:\nopen /Applications/Postgres.app\nFull Script\nTo sum it up, a full script to change the data directory could look like this\n```\n!/bin/bash\nosascript -e 'tell application \"Postgres\" to quit'\ndefaults write com.postgresapp.Postgres DataDirectory \"/new/dir\"\nopen /Applications/Postgres.app\n``\n. Did you try restarting your computer?\n. Also, check permissions on/tmpand on/private/tmp`. \n. Thanks for the bug report. This is already fixed in 9.4beta3.0. I will backport the fix as soon as I have some spare time.\n. Postgres.app Version 9.3.5.2 fixes the menu icon.\n. I'm not planning to add this feature, as it would make it hard to tell if Postgres is running or not.\nYou can start the postgres server manually, without starting the app, using a command like the following:\n/Applications/Postgres.app/Contents/Versions/9.3/bin/pg_ctl start -w -D \"/Users/USERNAME/Library/Application Support/Postgres/var-9.3\"\nOr you can use an app like Bartender to hide the menu bar icon if it annoys you.\n. @sebbean I agree that it would be nice if Postgres.app had an option to hide the menu bar status item.\nHowever, at the moment, the UI is only accessible through the status item menu. Adding an option to hide this item would require significant changes to the UI.\nI have some ideas for an improved UI, which would include an option to hide the status bar icon, but unfortunately I just can't afford to spend two or three weeks on Postgres.app right now, especially considering that this is a minor feature, for which there are workarounds available (see above).\n. This sounds like the EnterpriseDB server is still running. You must either turn it off, or uninstall it, then start Postgres.app again.\n. These are the kind of issues I like best :)\n. Does the error message say anything else? Check Console.app if there are any log entries when you try to open the app.\nThe usual troubleshooting steps in this case would be: Try redownloading the app, try restarting your Mac, and make sure you use \"Archive Utility\" to decompress the zip file. \n. If you'd like to have Postgres.app override the Apple-provided binaries, please make sure you put its path first, eg:\nbash\nexport PATH=/Applications/Postgres.app/Contents/Versions/9.3/bin:$PATH\nType echo $PATH at the prompt to make sure that the Postgres.app path comes first. Then which psql should point to Postgres.app's binaries.\n. It sounds like the Apple Postgres server is running. Make sure you stop the Apple Postgres server, and make sure that Postgres.app is set to start on login. Postgres.app wont be able to start if there is already a postrgres server running on the same port.\nFor debugging, you can execute the command show data_directory; in psql to see what server you are actually talking to.\nAlso, you'll probably have to change the username when using Postgres.app; Postgres.app uses your normal username.\n. The problem is that the name \"localhost\" by default resolves to multiple different loopback addresses on OS X:\n- 127.0.0.1 (IPv4 loopback)\n- ::1 (IPv6 loopback)\n- fe80::1%lo0 (IPv6 loopback on a specific interface)\nThe PostgreSQL client tries connecting to each address in turn. The order of the addresses is determined by the getaddrinfo system call, and more or less random.\nOnce the client is connected, the server checks which address the client is connecting from (in the case of loopback that's the same as the effective server address). So if your client ends up connecting to fe80::1%lo0, the server wont find a corresponding entry in pg_hba.conf.\nI can think of a few workarounds. Each of them should fix the issue:\n1. Set your server to listen only on 127.0.0.1 to avoid connections via IPv6 in postgresql.conf\n2. Edit /etc/hosts to remove the fe80::1%lo0 address (might have unknown sideeffects, this is probably there for a reason, even if I don't know why)\n3. Change your connection settings to connect to host 127.0.0.1 or ::1 instead of localhost\n4. Add a line for fe80::1%lo0 to pg_hba.conf\nYou can find the config files in the data directory (see prefs, or the installation docs)\n. Hmm... I just tried this, and pgAdmin by default uses my username rather than postgres. Just like psql uses the current user name by default.\nI don't understand why this is different for you. Maybe pgAdmin detects that you have a user named postgres on your system, and that's why the behaviour changes? Or maybe you have changed the default already because you needed to connect to postgres from MacPorts?\nAt the bottom of the page about GUI tools in the docs there is already a list with all the connection paramters. I'll move this section to the top.\nBest thing would probably be to also add screenshots showing the connection settings.\n. I updated the GUI tools docs page, let me know if you think it's better like this.\n. I think you are using the oldest version of pgAdmin from http://pgadmin.org/download/macosx.php\nPlease download the newest version  v1.18.1\nSide note: did Postgres.app really show the unidentified developer warning? It should be signed properly! Which version of Postgres.app showed the warning?\n. Could it be that you have changed security settings to allow only App Store apps?\n. ok thanks!\n. Postgres doesn't have a \"rate limit\", and neither does psycopg2. This looks like an error in your application. It might be an error in a stored procedure, or it might be an error somewhere in your Python code. Without more details it is hard to tell.\n. Thanks for the pull request, good idea. The error handling code isn't finished yet (see my inline comments).\nI'm not happy with the menu item title. \"Reload Postgres\" is a bit cryptic and will probably confuse people.\nIt would probably be better to call the menu item \"Reload Postgres Configuration\" or \"Reload Server Configuration\" or just \"Reload Configuration\". And we should probably also add a \"Restart Server\" command, maybe put them together into a \"Server Control\" submenu.\n. Usually when you have a method like -(BOOL)doSomethingWithError:(NSError**)error you'll check the return type to see if it is successful (usually the method returns true on success, false on failure; or it returns an object on success, and nil on failure). If it failed, you present the error returned from the error argument. In the simplest case this could look like this:\nobjc\nNSError *error = nil;\nBOOL operationSuccessful = [someObject doSomethingWithError:&error];\nif (!operationSuccessful) {\n    [NSApp presentError: error];\n}\nHowever, modal alerts are pretty annoying in general. Also, they don't work nicely with status bar apps. So eg. in AppDelegate.m I just opened the welcome window and presented the error as a window-modal alert sheet:\nobjc\n[[WelcomeWindowController sharedController] showWindow:self];\n[[WelcomeWindowController sharedController].window presentError:error modalForWindow:[WelcomeWindowController sharedController].window delegate:nil didPresentSelector:NULL contextInfo:NULL];\n. Or maybe \"Reload Config Files\"?\n. I don't think automatic reloading is a good idea -- this would probably confuse new and experienced users alike, because all other versions of PostgreSQL require reloading / restarting after config changes.\nWhile we're talking about the status menu item, this should really be changed to actually check the server status every time the menu is opened. If the server crashes or is killed, the menu item will continue to (incorrectly) say \"running on port xxxx\" -- but this is unrelated.\nI understand that you don't want to confuse novice users by adding a restart/reload item, but I don't think that this would be a feature only geared at advanced users. Even beginners will soon have to muck with the configuration. I think we could add a \"Maintenance\" submenu with the following commands:\n- open data directory\n- open log file\n- reload config\n- restart\n. Since there's a lot of pushback against these features, and the gains are indeed limited, I suggest to not pursue this any further.\n@dreynolds thank you anyway for the pull request -- this is the first time in a long time someone has offered some hands-on help with Postgres.app\n. Did you set the PATH? (See docs)\nType \"which psql\" to check.\n\nAm 22.11.2014 um 02:34 schrieb brothertona notifications@github.com:\nextconf failed, exit code 1\nGem files will remain installed in /Users/andrewbrotherton/ruby-getting-started/vendor/bundle--with-pg-config=/path/to/pg.config/ruby/2.0.0/gems/pg-0.17.1 for inspection.\nResults logged to /Users/andrewbrotherton/ruby-getting-started/vendor/bundle--with-pg-config=/path/to/pg.config/ruby/2.0.0/extensions/universal-darwin-14/2.0.0/pg-0.17.1/gem_make.out\nAn error occurred while installing pg (0.17.1), and Bundler cannot continue.\nMake sure that gem install pg -v '0.17.1' succeeds before bundling.\n\u2014\nReply to this email directly or view it on GitHub.\n. No, PostgreSQL 9.4 is not out yet. It will be released in two weeks or so.\n\nPostgres.app with 9.4 will be available as soon as PostgreSQL 9.4 is officially released.\nYou can download beta versions of PostgresApp with 9.4 in the releases section. I'm a bit behind with the release candidate, which was announced on Thursday, but I am uploading the new build as I'm writing this.\n. 9.4rc1 is up\n. 9.4.0 will be released today at 3pm GMT\n. Since there don't seem to be many strong opinions either way, I've decided to not include the ICU patch in the official version of Postgres.app. After thinking more about it, I just don't want to get into arguments with the PostgreSQL community, and it's surely nice to be listed as an official distribution on the PostgreSQL.org website.\nHowever, I will make a separate build including ICU support available in the releases section on Github. This should help people who need proper text sorting, and are willing to use a patched, inofficial version of PostgreSQL to achive that.\nAs soon as I have time, I will also write about the issue in the documentation on the website.\n. See also #226. We should probably bring this up on the mailing lists, since this is an issue with postgres itself. (But people probably will argue it's working as intended)\n. I'm closing this issue. I'm not sure when it was fixed, but I'm pretty sure that recent versions of PostgreSQL and OS X don't have that issue anymore.\n. Thanks to everyone for reporting this bug (and thanks to @cheleb for posting a simple workaround)\nThere've been lots of troubles with locale handling recently, I'm investigating how to best fix this bug and hope to push a new version soon.\n. I've now found the exact reason for this bug. It occurs only when you select a language & region settings in system preferences where no corresponding POSIX locale exists. You can check which locales are available by running locale -a in terminal.\nI've now changed Postgres.app to no longer try to detect the users locale setting, and to use en_US.UTF-8 by default. This means that Postgres.app should now start correctly regardless of your region settings. I choose this solution because for most users the locale setting doesn't matter.\nIf you do need to choose a different locale for some reason, you will have to call initdb manually. I will write a tutorial in the documentation once I have some spare time.\nYou can download the fixed version here: https://github.com/PostgresApp/PostgresApp/releases/tag/9.4.0.1\n. I'm not sure what would be the best way to start PostgreSQL on boot, but you'd probably want to either run the following command as a daemon:\nbash\n/Applications/Postgres.app/Contents/Versions/9.3/bin/postgres -D \"DATA_DIRECTORY\"\nor use pg_ctl:\nbash\npgctl start -D  \"DATA_DIRECTORY\"\nI'm not really sure how to best write the launchd scripts. As for the user, I'd recommend using a user named postgres to run the server, this is what people usually do.\nTo allow network connections, you have to change the file postgresql.conf in your data directory. Change the line containing listen_addresses according to the comments in the file, then restart the server.\n. I don't really know how to use ogr2ogr. Could you provide step-by-step instructions for reproducing your error message? Please also include sample data files if necessary.\nThe error message sounds like ogr2ogr fails to find the libproj.dylib. As a temporary workaround, you can try executing the following command before calling ogr2ogr:\nbash\nexport DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:/Applications/Postgres.app/Contents/Versions/9.4/lib/\n. I'd like to fix this issue. Can anyone please provide commands to reproduce the issue (with sample data files)?\n. Might have fixed this problem in the latest build https://github.com/PostgresApp/PostgresApp/releases/tag/9.4.1.2\n. Since I got no more comments, I'm assuming this issue is fixed now. Please reopen if you still run into it using the newest version (currently 9.4.2.0)\n. Thanks for catching the bug. Yes, you are right, the library path is broken. Great to hear you found a workaround!\nYou can also fix the issue with the following commands:\nbash\ninstall_name_tool -id /Applications/Postgres.app/Contents/Versions/9.4/lib/libv8.dylib /Applications/Postgres.app/Contents/Versions/9.4/lib/libv8.dylib\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.3/lib/libv8.dylib /Applications/Postgres.app/Contents/Versions/9.4/lib/libv8.dylib /Applications/Postgres.app/Contents/Versions/9.4/lib/postgresql/plv8.so\nI'll try to upload a fixed binary later today.\n. Fixed version is here: in https://github.com/PostgresApp/PostgresApp/releases/tag/9.4.0.1\n. Thank you for this information. I wouldn't consider it a bug, but the documentation is clearly missing some steps. We should probably improve the documentation for using pg_upgrade. I don't have time to write (and test) step-by-step instructions right now, so I'll just add a link to this issue.\nIn my experience it is a lot easier to do dump & restore, though, so that's what I recommend that people should use.\n. @jace Thanks for the write up. Would you like to add those instructions directly to the docs (and then send a pull request)?\nHere's the file: https://github.com/PostgresApp/postgresapp.github.io/blob/master/documentation/install.md\n. Thanks! I added the German translation myself.\n. create extension fuzzystrmatch\n. Thanks for reporting this, including the command to reproduce. The command now runs successfully with the latest build https://github.com/PostgresApp/PostgresApp/releases/tag/9.4.1.2\n. Which version are you using? I thought I fixed this already...\n\nAm 10.01.2015 um 21:15 schrieb Lachlan Campbell notifications@github.com:\nWhen I\u2019ve got Yosemite in Dark Mode, PostgresApp doesn\u2019t use a white version of the icon in the menu bar.\n\u2014\nReply to this email directly or view it on GitHub.\n. You can find old versions at \nhttps://github.com/PostgresApp/PostgresApp/releases\n\nDoesn't look like 9.2.2.0 is available. The AWS link pointed to @mattt's personal S3, I assume he removed it when we switched to hosting binaries on github.\nMaybe someone still has a copy somewhere... Depending on your use case, it might be easier to just change the build script of the current version to build an older version of PostgreSQL. Let me know more about your problem, maybe I can help.\nJakob\n\nAm 11.01.2015 um 03:57 schrieb David Douglas notifications@github.com:\nI'm not the best developer in the world, but I've figured out how to do everything I need to do if I could just get my hands on a copy of Postgres.app version 9.2.2.0. The link at http://postgres-app.s3.amazonaws.com/PostgresApp-9-2-2-0.zip used to be live, but now its not.\nCan anyone help me out?\n\u2014\nReply to this email directly or view it on GitHub.\n. 1. Click on the \"Postgres\" project icon at the top of the left sidebar\n2. Select \"Postgres\" in the target popup\n3. In the \"General\" tab, set \"Signing\" to \"none\"\n4. Select \"Postgres-helper\" in the target popup\n5. Again set \"Signing\" to \"none\"\n. \n. Yes, great idea. I created a new branch named pg83. Can you create a pull request on that branch? My git skills are somewhat limited, I'm not sure how I can automatically change your pull request to a different branch.\n\nOnce you submit a pull request to the g83 branch, I'll tag it, build it, and upload a binary to the releases section.\n. https://github.com/PostgresApp/PostgresApp/releases/tag/9.4.1.0\n. thanks!\n. Hi Jerry,\nIt seems I made an error with the version number in that build. I think I fixed this in 9.4.1.0 or 9.4.1.1. Maybe this tripped up launchd?\n(The PostgresHelper app is responsible for starting Postgres.app at login when that preference is set)\n. In the data directory in the file postgresql.conf, make sure that listen_address is * instead of localhost. Then make sure you also allow connections in pg_hba.conf\n\nAm 04.03.2015 um 14:39 schrieb Roo123 notifications@github.com:\nHi,\nThanks for a great app.. Have running on OS X Yosemite and connect on localhost with Navicat no problem.\nHave been unable to connect from other machines on LAN (Debian with Psycopg2; iOS with Postgresql client). With and without firewall on (app is added to permitted apps). Router is Airport Extreme.\n(Get standard error messages if server running and accepting TCP on 5432: as far as I can tell those conditions are met.)\nHow do I debug this?\nR.\n\u2014\nReply to this email directly or view it on GitHub.\n. I didn't plan on doing it, but since there's demand for it I will make a build as soon as I have some spare time.\n. Just uploaded a 9.3.6 release.\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.3.6.0\n. Did you set PostgresApp to start on login? Is it running, ie. is there an elephant in your menu bar?\n. Did Postgres.app show any errors when starting?\n\nAlso check the log (~/Library/Application Support/Postgres/var-9.4/postgres-server.log) for any startup errors.\n. This sounds like a permissions issue. Make sure that you have read/write permissions on the data directory. Default is ~/Library/Application Support/Postgres/var-9.4/, unless you changed it in the preferences.\n. I assume this is resolved, so I'm closing this issue for now.\n. Hi Adam,\nThat's sweet! I never noticed that issue; glad you found it AND figured out a way to fix it!\nHowever, there are a few errors in your code I'd like to point out. I'll add inline comments to the commits.\n(The errors have no effect in this case, but other people might look at code in Postgres.app, so it should also be written well in addition to \"just work\".)\n. I have two more nitpicks.\nI'm really glad you took the time to write the pull request and I hope I'm not scaring anyone away from further  contributions by being so picky.\nI'll make a new build tomorrow.\n. Hey, this sounds like a great idea. I've considered automatically adding paths to the $PATH variable in the users profile, but I was sceptical about changing ~/.profile or ~/.bash_profile.\nI never knew about /etc/paths.d and path_helper; this looks like a clean solution! Do you know if path_helper also works in alternative shells (like zsh or fish)?\n. I've now updated the installation instruction on the homepage to add a file to /etc/paths.d. I hope this fixes the issue for most people.\nI don't want Postgres.app to create this file automatically, since it would need an administrator password, and people might be wary of giving admin permissions to Postgres.app. When you execute the command manually, you know what's going on :). Yes, that would be useful. Sparkle is probably not suited. We would probably need to write our own thing that queries the Github API.\nFor now, you could try watching the repository on Github to be notified of updates (but then you'll also get notifications for new issues etc, I'm not sure if it's possible to filter the notifications...)\n. Sparkle framework is a remnant from the distant past; I thing Mattt wanted to add support for automatic updates, but I think he never got around to it. It might be possible to get to work, but I'd prefer something that queries the Github API directly.\n. Postgres.app 2.0 now has automatic updates, and we have decided to go with Sparkle. Integrating was actually easier than expected. (We just added an appcast.xml file that we're updating manually). Are you running the latest version? I thought we fixed that already.\n. No worry, issues that can be closed within minutes are my favorite :)\n. Btw: new PostgreSQL version is coming later today.\n. (It's just a bugfix update though -- 9.4.2)\n. Hmm, might be a bug in the download tracking script. I attempted to fix it. Could you try if it works now?\n. Thanks, I forget that every time\n. This file is hosted by Github on Amazon S3. There's nothing I can do to help. Please contact Github support.\n. Hey @cmordue, thanks for reporting this issue. I finally got a chance to fix this. The UUID extension should work again in 9.3.9.0. Download from https://github.com/PostgresApp/PostgresApp/releases/tag/9.3.9.0\n. Looks like psql can't resolve the host name. Prefixing with http:// won't help.\nDid you try nslookup serverName.rds.amazonaws.com to see if host name lookup works in general?\nAlso, since Yoesemite seems to have so many issues with discoveryd, did you try if restarting your Mac fixes the name resolution problems?\n. The download is hosted on Github. It works for me, so maybe it was only a temporary glitch. Could you try if it works now, and if not, contact Github support?\nJakob\n. PSequel is already on the PostgreSQL Wiki page linked at the top of that page (incorrectly under Open Source software). I see no reason for a direct link.\n. pgAdmin is the official PostgreSQL GUI, and while the UI isn't pretty, it has very extensive support for most of PostgreSQL's features.\nInduction and PG Commander are on the page because they are made by contributors to Postgres.app. (Mattt and myself, respectively).\n. I reconsidered and added direct links to the page; there's now a link to PSequel in the list of GUI Applications\n. Thanks. Does it build with the new version?\n. Thanks for the pull request. I've now updated to 9.4.4.\nHowever, I did not merge this pull request because I also changed the README file to no longer contain the PostgreSQL version (to avoid getting it out of sync)\nJakob\n. Are you asking because you ran into problems with 9.4.2?\nTo my knowledge the permissions issues that were fixed in 9.4.3 don't really affect Postgres.app.\n. I'll try to release 9.4.3 as soon as I have a few spare hours. \n. done\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.4.4.0\n. It looks like Postgres.app tries to create a new data directory. Did you change the data directory in the preferences?\nCould you also check the permissions on the data directory? Make sure you have read/write access.\n. Default data directory is ~/Library/Application Support/Postgres/var-9.4\n. 1. Check the preferences to see if you changed the data directory setting. Click the \"Use Default\" button if necessary.\n2. Delete the Postgres directory in your Application Support folder and try again.\n3. Check \"Console.app\" if any messages are shown when PostgreSQL fails to start\n4. Try initializing the cluster manually using a command like initdb -D \"~/Library/Application Support/Postgres/var-9.4\" -EUTF-8 --locale=en_US.UTF-8\n. Make sure you configure your path before calling initdb\n. The DMG sounds like a good idea.\nI really wish there was a way to fix the dylib linking mess...\n. @jetforme\nI'm not sure what you mean that Xcode lets me embed libraries in the bundle. Obviously Postgres.app includes a bunch of libraries in the bundle.\nGetting Postgres.app itself to work with relative dylib paths is not an issue (can be done with @rpath; @executable_path only works if all binaries are in the same relative position to the libraries)\nThe problem is that we also want to support other stuff linking against libpq (eg the pg gem). The problem is that you'd need to make sure that whatever links against libpq has the right @rpath, or it won't find dependencies of libpq. I don't know how to do this.\nAlso, the new version of Postgres (https://github.com/PostgresApp/PostgresApp/releases) ships in a disk image, with an icon suggesting you move it to /Applications, so I hope that more people just move it before opening.\n. With Postgres.app 2.0 being distributed as a disk image, and an explicit warning about having to move it to /Applications, I think we can close this issue now.. We had a similar request some time ago and decided to keep it simple. You can quit & reopen Postgres.app to restart the server.\nYou can try this command to restart the server from the command line\npg_ctl restart -w -D \"/Users/USERNAME/Library/Application Support/Postgres/var-9.4\" -m fast\nYou need to use fast mode because otherwise the server will wait for all connections to terminate before restarting.\nAn even easier solution would probably be to just open Activity Monitor and kill the backend that is executing your tests. No need to restart the server.\nOr you could use the pg_terminate_backend(pid) function to kill the test backend cleanly from psql.\nIn both cases, use a command like select * from pg_stat_activity to find the pid (process id) of the backend that's executing the tests.\n. Postgres.app is designed to be a lightweight PostgreSQL installation that does not change any of your system configuration. Therefore creating a new system user named \"postgres\" is out of the question.\nUsing a single username on the postgres side also makes administration easier. There's no need to provide a username when using tools like psql, pg_dump or createdb. You'll never run into permissions issues because you are the superuser.\nThe goal of Postgres.app is to make it easy to get started with PostgreSQL, and not let features designed for larger deployments get in the way. I assume that only very few people use a PostgreSQL server running on their Macbook as a multi user database.\nIf you want a more traditional installation of PostgreSQL, I'd recommend using the EnterpriseDB installer (which will set up a user account named \"postgres\"), or using a package manager like MacPorts or homebrew.\n. Tobi is right. I don't recall Postgres.app ever creating a (postgresql) root user named postgres.\nYou can find the initdb commands Tobi mentioned in the README file or here in this source file.\nI agree that it would be nice if some features could be configured, but writing code to do it in the UI is a lot of effort.\nMaybe we should just improve the documentation? It's currently not well documented how to manually initialize the cluster, start/stop the server etc.\n. I don't want to change the default way that Postgres.app initializes the database cluster. The current setup seems to work fine.\nYou have a point that most other setups have a superuser named \"postgres\". If more people complain about this I might consider a change in a future version. Right now I want to leave it as it is.\n(Also, part of the ease of use of Postgres.app is that the default user is a super user. If the default user is not a super user, you'll run into permission issues when restoring backups or when playing with features like table spaces or any number of other things.)\n. (I'm reopening this issue so it becomes more visible, and to invite others to comment on it.)\n. I've now changed the behavior of Postgres.app to use the following procedure:\n1. Postgres.app initialises the database using  initdb -D DATADIR -U postgres --encoding=UTF-8 --locale=en_US.UTF-8\n2. Next it creates a user with the current system user name  createuser -U postgres -p PORT --superuser  SYSTEM_USER_NAME\n3. Finally it creates a database for the new user  createdb -p PORT SYSTEM_USER_NAME\nAfter this procedure, all system tables are owned by a user name postgres. Additionally, there's a superuser with the same name as the current system user name, and a database owned by that user.\nI hope this fixes a few annoyances. Please download the latest 9.5 beta to try it out, along with the new features in 9.5: https://github.com/PostgresApp/PostgresApp/releases/tag/9.5beta2.0\nThanks to @nelsnelson and @tbussmann for your input!\n. Just released 9.5.0.0, which should fix this issue. Thanks to everyone for their input!\n. @alexpchin All versions of Postgres.app try to create a default user.\nHowever, the legacy version of Postgres.app doesn't check if the port is available, so sometimes it fails to create a user when a different server was already running.\nThe new version of Postgres.app (2.0) should show an error in this case. However, if you already have a database set up, without a default user, it won't create it -- only when initially creating it.\nAnyway, this is unrelated to this issue. If you have a problem with Postgres.app, please don't comment on closed issues. Please open new issues instead.. I think I wanted to include something like this originally, but there was some issue with including a symlink inside the app package... I'll have a look.\n. I've implemented this in 9.5.0.0. I've also changed the docs to recommend setting the path to /Applications/Postgres.app/Contents/Versions/latest/bin\nHowever, this won't fix all issues. If something links against libpq (eg. the ruby pg gem), you'll still need to recompile after updating, since it will likely point to the absolute path :(\nAt least you don't need to update your shell scripts.\n. There's a checkbox in the preferences that allows you to select if you want Postgres.app to start automatically.\nThose checkboxes are probably coming from a Firewall. Did you enable the built-in Firewall on your Mac, or install an app like Little Snitch? You might want to check if you've configured them correctly.\n. Could it be that you have a different installation of PostgreSQL in additition to Postgres.app? For example the EnterpriseDB installer? If that's the case, you can find instructions to remove other installations here: http://postgresapp.com/documentation/remove.html\n. Closing this issue. Feel free to reopen if you have further questions.\n. A Postgres.app user contacted me via email and told me the following information:\n\nI had the same issue today and solved it by going to:\nMac > Preferences > Security & Privacy > Firewall tab > click lock > Firewall Options...\nthen removing the existing row for postgres.\nMy PostgreSQL worked fine until installing Mac updates today and restarting.\n. The newest version of Postgres.app no longer tries to automatically update your profile file.. I have a hunch that it may be the statistics collector. As far as I understand, the different postgres processes use a shared UDP port for communicating statistics. This would make sense because the number of sent bytes matches the received bytes.\n\nThese connections show up in activity monitor because they go through the network stack; but they don't actually leave your computer so they won't use up your data plan if you have a metered connection.\n. Closing this issue now. If you have any more troubles, please feel free to open a new issue.\n. Postgres.app uses pg_ctl to start PostgreSQL. According to the man page it waits 60 seconds by default.\nIf you have a slow hard drive, or a large database, or if the server didn't shut down properly, it's plausible that it could take more than 60 seconds to start.\nCan you see how long the startup process takes from the log?\n. Yes, PostgresApp is completely El Capitan compatible.\nYes, the data directory is in the library folder, which is hidden by default. This has been the case since some time, and it shouldn't be a problem.\n. You can create a user named postgres using the command \nsql\nCREATE USER postgres SUPERUSER;\nSee the docs here: http://www.postgresql.org/docs/current/static/sql-createuser.html\nIt might also be helpful to read through issue #275 \n. The latest 9.5 beta version now automatically creates a user name postgres during setup. I'm closing this issue; if you have further input, please comment on #275\n. Looks like pgrouting requires the boost library, which will make the binary quite a bit bigger. I'm not sure how many people would use pgrouting, so it would be nice if people who need this would voice there support here.\nWe could also just add build instructions to the docs, but right now I don't have the time to play with it to figure that out. If anyone knows how to build it, I'd appreciate it if you could write a tutorial for the docs!\n. @robe2 thanks for your help! Are your full build scripts published somewhere?\n. @cvvergara I'm not sure I understand. Are you suggesting the scripts that would build pgrouting for Postgres.app should be in the pgRouting repository?\n. It looks like Rails is using a build of libpq that doesn't have SSL support. Postgres.app definitely has SSL support (or TLS support, to be precise).\nThis means that you probably have a second PostgreSQL installation on your Mac.\nI'm not a Ruby user myself, so please take the following advise with a grain of salt. \nI assume that when you built/installed the postgres gem, you linked against the other version of PostgreSQL that's installed on your Mac. I think ruby uses the pg_config tool to find the PostgreSQL installation details. Type which pg_config in your Terminal. It should say:\n/Applications/Postgres.app/Contents/Versions/9.4/bin/pg_config\nIf it says something else, ruby probably linked against that other install.\nTo make sure ruby can find the libraries provided by Postgres.app, configure your path correctly before installing the pg gem. See this page for instructions on configuring your path: http://postgresapp.com/documentation/cli-tools.html\n. In that case, try recompiling the pg gem.\nFor troubleshooting, try to find the pg gem and use the command otool -L /path/to/gem to determine which libraries it links against. The version of libpq supplied with Postgres.app definitely is compiled with SSL support, so I'm pretty sure that the pg gem links against a different library.\n. (it doesn't matter what your $PATH points to now, it only matters what your $PATH pointed to when you compiled the pg gem)\n. In any case, I'd be happy if someone who actually uses ruby would chime in; I am pretty much just guessing here...\n. Please follow these instructions to remove other Postgresql installs first:\nhttp://postgresapp.com/documentation/remove.html\n. Installing PostGIS for the current database is pretty easy:\nsql\nCREATE EXTENSION postgis;\nHowever, Postgres.app doesn't bundle the address sanitizer, so you'll need to compile it yourself. Make sure that path is set up correctly (which pg_config should return /Applications/Postgres.app/Contents/Versions/9.4/bin/pg_config). Then you should be able to compile the extension.\n. When I wrote the build script, plv8 had no explicit versioning, and was more or less abandoned. One major issue was it didn't support modern versions of v8. However I still wanted to include it since it is such a valuable extension.\nIs plv8 actively developed again now? Do they have proper versions now? \n. OK, this looks interesting. I wasn't aware they moved to Github (my build script still clones from Google Code)\nNext time I build Postgres.app, I'll switch to using released versions instead of building from master. Maybe they even support linking to a newer libv8 now! Thanks for letting me know about this!\n. I switched to building a specific version of plv8 now.\nUnfortunately I wasn't able to get a recent version of v8 to build, so we're still stuck with v8 3.18\n. @mauritslamers Last time I tried, I couldn't get a newer version of plv8 to compile on macOS 10.10 (which we use for building Postgres.app). The biggest issue was building recent versions of libv8. \nApparently, the only way to build libv8 is to download gigabytes of sources for Google's in-house build system -- but in the end it failed on my machine, and I couldn't figure out why.\nIf someone could show me how to build libv8 on macOS 10.10 with Xcode 7, I could deliver a new version of plv8.. Presumably the Ubuntu folks have been running into the same issues as I have (Google changed the build system around that time, so it's become pretty difficult to build recent versions of libv8). Since Google switched the build system for Chrome, it has become extremely difficult to build libv8, and as far as I've read, they are about to switch the build system again.\nIn order to build new versions of plv8, I need a recent binary of the libv8 library. Ideally it should be compatible with OS X 10.7 thru 10.12, like all the other binaries bundled with Postgres.app.\nIf someone finds a way to build that, I'll update the version of plv8. Presumably it would be best to update the plv8 version when Postgres 10 is released later this year. Bundling multiple versions of plv8 with PostgreSQL 9.6 is something I'd like to avoid.\nI've been experimenting with building libv8 with Macports in a macOS 10.7 VM. That might result in a portable binary, but I haven't had success yet.. @JerrySievert Thanks for reaching out!\nThe biggest problem in the past was getting a recent version of libv8 that's backward compatible to 10.7, but we've decided to no longer support these old systems any more for PostgreSQL 11. We're planning to raise our deployment target to 10.10.\nI'll try building v8 via plv8! I'll get back to you if there are any issues.\n. Latest versions of ICU also don\u2019t build anymore with deployment target 10.7, so plv8 isn\u2019t the only reason.. Since I raised the deployment target for PostgreSQL 11 to macOS 10.12, I was able to build plv8 and v8. So Postgres.app now includes plv8 2.3.8, and I hope I can now always keep it on the newest version.\nUnfortunately, I was not able to get plv8 to build with ICU, so I disabled ICU just like you mentioned.\nAlso, the v8 docs state that 10.12 is required, so I'm not sure if it is possible to build recent plv8 on older versions of macOS. \nI'm happy it works now, and I hope nothing breaks. The v8 build system is so complicated that I have no clue where I would even begin debugging issues...\nI'm sad that we can no longer support older versions of macOS, but at least we have up to date versions of plv8 now!. @JerrySievert I never realised you are the developer behind plv8! Thanks for your offer! At the moment plv8 seems to build fine (except that I couldn't get v8 to build with ICU).\nDo you happen to know if it is possible to build v8 with an externally provided ICU? I assume not, since it seems to download and build its own version of ICU. But it would be sweet if PostgreSQL & plv8 would use the same version of ICU.... 1) Did you have a look at the PostgreSQL server log file? It's in the data directory.\n2) Does connecting with psql work?\n3) Does your dev have some firewall or other protection / filtering software installed on his Mac?\n\nAm 16.12.2015 um 02:13 schrieb Jonathan Simmons notifications@github.com:\nI have a new dev we are trying to setup in our rails app and we are eternally getting the following error. When trying to create a db using a rails migration and postgres.app\nHe is running a 10.10 box. We don't get this error on other dev running 10.11 but I'm not sure how relevant that is.\nIf this is a rails issue let me know and I'll move the problem there. Any info on how we might fix this would be appreciated.\nserver closed the connection unexpectedly\nThis probably means the server terminated abnormally\nbefore or while processing the request.\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/postgresql_adapter.rb:655:in initialize'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/postgresql_adapter.rb:655:innew'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/postgresql_adapter.rb:655:in connect'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/postgresql_adapter.rb:242:ininitialize'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/postgresql_adapter.rb:44:in new'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/postgresql_adapter.rb:44:inpostgresql_connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:438:in new_connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:448:incheckout_new_connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:422:in acquire_connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:349:inblock in checkout'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/monitor.rb:211:in mon_synchronize'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:348:incheckout'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:263:in block in connection'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/monitor.rb:211:inmon_synchronize'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:262:in connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_adapters/abstract/connection_pool.rb:571:inretrieve_connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_handling.rb:113:in retrieve_connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/connection_handling.rb:87:inconnection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/postgresql_database_tasks.rb:8:in connection'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/postgresql_database_tasks.rb:17:increate'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/database_tasks.rb:93:in create'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/database_tasks.rb:107:inblock in create_current'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/database_tasks.rb:275:in block in each_current_configuration'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/database_tasks.rb:274:ineach'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/database_tasks.rb:274:in each_current_configuration'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/tasks/database_tasks.rb:106:increate_current'\n/Users/50N6/.rvm/gems/ruby-2.2.3/gems/activerecord-4.2.4/lib/active_record/railties/databases.rake:17:in block (2 levels) in <top (required)>'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/task.rb:240:incall'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/task.rb:240:in block in execute'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/task.rb:235:ineach'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/task.rb:235:in execute'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/task.rb:179:inblock in invoke_with_call_chain'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/monitor.rb:211:in mon_synchronize'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/task.rb:172:ininvoke_with_call_chain'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/task.rb:165:in invoke'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:150:ininvoke_task'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:106:in block (2 levels) in top_level'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:106:ineach'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:106:in block in top_level'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:115:inrun_with_threads'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:100:in top_level'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:78:inblock in run'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:176:in standard_exception_handling'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/rake/application.rb:75:inrun'\n/Users/50N6/.rvm/rubies/ruby-2.2.3/bin/rake:37:in `'\nCouldn't create database for {\"adapter\"=>\"postgresql\", \"encoding\"=>\"unicode\", \"database\"=>\"sample_db\", \"host\"=>\"localhost\", \"pool\"=>5, \"timeout\"=>5000}\n\u2014\nReply to this email directly or view it on GitHub.\n. I'm stumped. \"server closed the connection unexpectedly\" points to a network problem, especially since the PostgreSQL server doesn't seem to report any errors. I really have no good idea what could be going on, but here are some things I would try to do:\n\n1) Turn up the log level to debug in postgresql.conf, then you'll see if ruby even reaches the PostgreSQL server, or if the lost connection happens before.\n2) Try to find out what server/port ruby is really trying to connect to. Maybe it's trying to connect to some other service on your Mac. I'm not too familiar with ruby, so I can't really help there.\n3) Double check for any software on your Mac that may interfere with your network stack. Firewalls, filters, kernel extensions, ad blocking proxies, virtual network interfaces, etc. In my experience, most network issues are caused by software other than PostgreSQL interfering with the network.\n4) Uninstall Postgres.app, restart your Mac, reinstall Postgres.app, ensure that your Path is configured correctly, then reinstall the pg gem. \n. Postgres.app should work fine on 10.10; I don't think this is the problem.\n. Did you find the cause for this issue? Do you have any other questions, or can I close it?\n. Thanks for the update!\n. The docs are part of the website, and they live in a different repository:\nhttps://github.com/PostgresApp/postgresapp.github.io\n. Anyway, I just updated the instructions: https://github.com/PostgresApp/postgresapp.github.io/commit/96141d5550c21939370f2f81a0d78413b689c7de\nThanks for reporting this!\n. I just checked sys/errno.h, and the error message \"Can't assign requested address\" corresponds to the error code EADDRNOTAVAIL. The man page for bind(2) explains this error code as \"The specified address is not available from the local machine.\"\nSo for some reason your computer thinks it doesn't have an address named \"localhost:5432\".\nThe most likely reason for this is that you broke the localhost entry in your /etc/hosts file. Here's what should be in that file:\n```\n\nHost Database\n\nlocalhost is used to configure the loopback interface\nwhen the system is booting.  Do not change this entry.\n\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost\n```\nOS X is somewhat picky about the format of this file, so make sure you have no syntax errors in there. Use an editor that shows the difference between tabs, spaces, and non-breaking spaces when editing it.\n. I hope that your problem is fixed! Since I didn't hear back, I'm closing this issue. If the problem persists, feel free to reopen!\n. @Troland please open a new issue, including the following info in detail:\n1) What are you trying to do?\n2) What error messages are displayed?\n3) What version of OS X do you use?\n4) Do you use any firewall, network filter, or any dev tools that change your network configuration, or did you install any kernel extensions?\n. Hi Raphaela,\nThat's not quite correct. .bash_profile is a configuration file that you need to edit, or create if it doesn't exist yet.\nHere's how you can do that in the Terminal:\n1. Type cd ~ to switch to your home directory\n2. Type ls -a to see if you already have a file named .bash_profile  or .profile (you can use either)\n3. If the file does not exist, type touch .bash_profile to create it.\n4. Now type open -a TextEdit .bash_profile to open the file in TextEdit\n5. Now add the line export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.4/bin at the end of the file.\n6. Save the file, close all Terminal windows, open a new window and type which psql to see if it worked.\nExplanation: .bash_profile is a configuration file that is executed every time you open a new Terminal window. The export command changes the PATH environment variable so that bash (the program running in Terminal) knows where to find all the PostgreSQL programs like psql.\nDoes this help?\n. I'm closing this issue now. If you have any further questions, feel free to add comments or reopen it at any time!\n. https://github.com/PostgresApp/PostgresApp/releases/tag/9.5.0.0\n. Postgres.app runs this command only when you select \"Open psql\" from the menu. It seems that for some reason, on your computer, Terminal seems to store this command somewhere and execute it again and again. Did you try quitting Terminal.app or restarting your computer?\n. Try running the following command in Terminal:\nosascript -e 'tell application \"Terminal\" to do script \"\"'\nMaybe that gets Terminal back to normal.\n. I'm pretty sure this is a bug in Terminal. I'll report it to Apple.\n. Apple confirmed the bug. Let's hope they fix it.\n. Minor version upgrades (eg. 9.4.4 to 9.4.5) work as you expect. \nHowever, major PostgreSQL version upgrades (eg. 9.4 to 9.5) require that you recompile everything that links against binaries inside Postgres.app.\nIf you don't want to reinstall Psycopg2, just keep using the 9.4 branch of Postgres.app. I will continue making new builds with the latest versions of PostgreSQL 9.3, 9.4 and 9.5.\nA long term solution might be to include multiple versions of PostgreSQL inside the app package, but that's a bigger project.\n. Can you try hitting enter after editing the text field?\n. Yes it does. What does defaults read com.postgresapp.Postgres say?\nYou can also try setting the data directory from Terminal:\nbash\ndefaults write com.postgresapp.Postgres DataDirectory95 \"/path/to/datadir\"\n(It needs to be an absolute path)\n. Also, if you choose a directory that's not valid (eg. a data directory of a previous version of PostgreSQL), Postgres.app reverts to the default directory.\n. You are right, it would be better to show an error instead of rolling back to the default data directory.\nYou can download an older version of Postgres.app if you want to access your old data dir. You need the same major version as the PostgreSQL server that created the data dir. Check the file PG_VERSION inside the data dir to see what version of PostgreSQL was used to create it. Then download the appropriate version from here: https://github.com/PostgresApp/PostgresApp/releases\n. The improved pg_upgrade instructions were provided by @jace (see issue #241).\nCould you elaborate why you think that using pg_upgrade should be preferred over dump/restore?\nIn my opinion the latter (dump/restore) should be preferred, since it is easier to understand, doesn't require mucking with the internals of Postgres.app, and is way more flexible. You can use dump/restore also for backups, for transferring to a different machine, or to a server etc.\n. @jace Oh, right. I added the default encoding parameters that Postgres.app also uses when creating a cluster:\nhttps://github.com/PostgresApp/postgresapp.github.io/commit/2b498d88cf1b2f4c911e4a9579395e25e1e93f6d\n. Sorry, I just accidentally closed the issue by clicking the wrong button.\nSo, is there any input whether pg_upgrade is better than dump/restore?\n. Maybe I should change the pg_dump/restore instructions to use pg_dump_all, which would make it significantly shorter.\n. There are several reasons why I prefer pg_dump/pg_restore:\n1) pg_dump/pg_restore does not require modifying Postgres.app\n2) Teaching people how to use pg_dump is much more useful than pg_upgrade. While pg_upgrade is only useful for upgrading, pg_dump is useful for data transfer in general.\n3) Customizing the upgrade process with pg_dump is trivial: you can just edit the dump files with a text editor. This also means that fixing errors is easier.\nSo I think that pg_dump should be preferred, unless you don't have enough space on your hard drive for the dump and the new database. This size restriction hard to quantify, since it is not easy to predict how big the dump will be.\n. The new docs now show multiple options side by side. We're not planning to write an automatic data directory update script right now, since that is hard to get right in the general case, and if it fails, data might be lost.\nPostgres.app 2.0 can now run multiple versions simultaneously, so it is no longer necessary to update all your stuff at once; you can keep using your old data with an old version, while running a new server with the latest release of PostgreSQL.\nI'm closing this issue now. If you have any other suggestions related to this, please open a new issue.. Hey,\nPostgres.app is a PostgreSQL distribution for Mac OS X. It doesn't seem like you are using Postgres.app. If you need help with PostgreSQL on other platforms I recommend to look at the available options at http://www.postgresql.org/support/.\nThat being said, the error message could not translate host name \"localhost\" to address sounds like a problem with name resolution on your machine. A common reason for this is when people modify their hosts file and break it.\nAnyway, apart from this tip I unfortunately can't offer any assistance.\n. Hey,\nthanks for telling me about this, and sorry for ignoring this issue so long -- I completely forgot about this.\nThe link should work again now, apologies for the inconvenience.\n. @Runehm The download links work fine for me.\nIf you are having troubles, please open a new issue, and tell me what browser and what version of OS X you are using.\n. I don't have a clue what these options do and what effect they will have on the rest of Postgres.app. I'd love to hear more about these options and what they do.\nAlso, I'm not sure where to set these options -- Postgres.app contains dozens of binaries. I assume that these options actually only need to be set for the postgres server binary.\nI assume that in order to set these options you probably need to add some params to the configure script here:\nhttps://github.com/PostgresApp/PostgresApp/blob/master/src/makefile#L56\nUnfortunately I don't have time to play around with this right now, so I'd love to get input from people who know more about this than I do.\n. @kingbuzzman jade is required for building PostgreSQL docs. You can fix this in two ways:\n1. Install jade on your Mac\n2. Don't build docs.\nInstalling Jade\nSee the How To Build section in the README. \nIf you use Macports, the following command installs everything you need to build docs:\nbash\nsudo port install docbook-dsssl docbook-sgml-4.2 docbook-xml-4.2 docbook-xsl libxslt openjade opensp\nI don't think homebrew has all the necessary packages.\nNot building docs\nChange the following lines in the makefile:\nbash\nmake -C \"postgresql-$(POSTGRES_VERSION)\" world\nmake -C \"postgresql-$(POSTGRES_VERSION)\" install-world\nto \nbash\nmake -C \"postgresql-$(POSTGRES_VERSION)\" all contrib\nmake -C \"postgresql-$(POSTGRES_VERSION)\" install\nThen PostgreSQL should be built without docs. I haven't actually tried this, but I think it should work.\n. If I understood correctly:\n - no-one can tell me what other effects -pagezero_size 10000 -image_base 100000000 might have\n - adding these options is not required for recent versions of Luajit\nSo I've decided to not add these compilation options, and I'm closing this issue.. Did you try the dump/restore method?\nThe only time that I can switch to a newer version of PostGIS is when switching to a new major version. The only alternative would be to always stay at the same version of PostGIS -- I don't think that's what people want.\n. (Sorry I accidentally pressed that button)\n. Thanks everyone for posting this and the workarounds!\nI've built the latest version (9.5.1.0) on an older OS X to avoid this issue. It should work without this workaround now. Could you try it and confirm?\nhttps://github.com/PostgresApp/PostgresApp/releases\n. Thanks for this bug report. I think I've found the problem -- there was an issue in the makefile I use for building.\nPlease download the new build here:\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.4.6.1\n... and let me know if it fixes the issue!\n. By default, psql tries to connect to the PostgreSQL server using the same user name as your system user. So in order to make connecting easier, Postgres.app creates a user with the same name as your system user when it starts the first time.\nIf you change your system user name, those user names won't match anymore. Then you have to connect using psql --username=OLDUSERNAME, or with psql --username=postgres to connect as the postgres user.\npsql also uses your environment variables for configuration. So for troubleshooting, type export in Terminal to make sure there are no settings for PGUSER etc. that override the defaults.\n. So I assume your local username is \"me\". Did you ever change that?\nTry the following:\n1) quit Postgres.app\n2) delete the data directory (~/Library/Application Support/Postgres -- check the docs for details)\n3) then start Postgres.app again\nThen it should create a new data dir and create a postgres user (role) with the name \"me\", and it after tht you should be able to connect\n. Well, first of all you can of course create a new user and corresponding database using  the folowing two commands:\nbash\ncreateuser -U postgres -s YOURUSERNAME\ncreatedb YOURUSERNAME\nThis is what Postgres.app should have done right after initialising the data directory.\nSo it would be interesting why creating the user failed in the first place -- Postgres.app should show an error if it fails to create the user.\nFor troubleshooting purposes, could you try the procedure I suggested above (quit Postgres, delete or move data dir, start Postgres again) to see if initialisation works properly? Also, check the log file inside the data dir to see if there's anything that could explain this...\n. @es6Test \ndid you get any errors? are you able to connect using psql -U postgres?\nCan you try the following command and see what happens?\nbash\npsql -U postgres -c 'SHOW data_directory;'\nAlso, is there anything in the log? You can view it using\nbash\ncat ~/Library/Application\\ Support/Postgres/var-9.5/postgres-server.log\n(Assuming you are running 9.5 and using the default data dir)\n. Could you  try running ping localhost in the Terminal and show the output?\nThen run cat /etc/hosts and show the output.\n. OK, this looks like it stems from a misconfigured DHCP server. Presumably your DHCP server has the search domain \"dhcp\" configured (check in network settings, under \"DNS\"), and then it returns an entry for localhost.dhcp. It's really odd that this overrides the entry from /etc/hosts. Are you connected to a VPN?\nIn any case, it looks like something fishy is going on. I wouldn't trust the wifi network you are connecting to -- if possible, talk to the network administrator.\nI'm not sure I can provide any additional help, since this is far beyond my area of expertise. Please also keep that in mind with regard to my advise above -- I am not sure how accurate my suggestions above are.\n. Hm... Maybe you have a different server running? Quit Postgres.app, then chech if you have any processes named 'postgres' running. If you do, uninstall the other postgresql installation (see docs), then restart your Mac.\nIf not, try to delete the lockfile and start Postgres.app again.\n. Thanks for the update! Maybe I should update the docs to add a hint about disabling anti-virus and firewalls when issues come up. The most hard to debug issues are often related to security software that interferes.\n. OK, I'm closing this since it seems you have resolved the issue. Thanks for all the help everyone!\n. Thanks for your suggestions, but since it isn't clear that this will improve anything, I'll leave it turned off. I hope that someone works on merging Palle's ICU patch at some point, then all this will become irrelevant...\n. Do you have any other environment variables like manpath defined?\n. Since man psql works for me, and I got no  response for two weeks, I'm closing this issue. Feel free to reopen anytime if you have any additional information to share.\n. Did you really replace /Applications with a symlink? Doesn't that cause lots of trouble? I'm curious why you'd want to do that!\nAnyway, you can check out the source from Github and make a DEBUG build. Postgres.app doesn't check the location in DEBUG builds.\n. As far as I understand, libpgcommon is a static library that contains code shared between the frontend and backend. It's only used during building PostgreSQL, and not part of standard distributions.\nIf your extension depends on this, you probably need to build PostgreSQL from source. It might be worth checking if Macports or Homebrew include this library, but to be honest I doubt it.\nWhat extension are you trying to build?\n. I'm not familiar with Wildfly, so I can only offer very generic advise.\nFirst, try connecting with psql and see if it works using the same parameters:\npsql -h localhost -p 5432 -U carlos test\nNext thing to do would be to check the server log (you can find it inside the data directory).\nConnection timeouts are often caused by Firewalls, Internet Filters, Anti-Virus and similar software. If you use anything like that, try uninstalling it and see if the problem persists.\n. Maybe the PostgreSQL server was listening on 127.0.1.1 and Wildfly was trying to connect to 127.0.0.1 (or the other way around). They are both loopback addresses, but they are not the same.\nI'm closing this issue now.\n. This can happen when the postgresql server didnt shut down properly.\nOpen activity monitor, check that no process named postgres is running (use the search field). If there are any processes named postgres, quit the one with the lowest pid until there are none left.\nThen open the postgres data directory, and delete the postmaster.pid file\n. Hi!\nPostgres.app creates a role with the same name as your username when you first start it.\nWhen you change your system user name, those names don't match any more.\nThe easiest way to fix this, if you don't have any data yet in the database, is to quit Postgres.app and delete the data directory, then start Postgres.app again.\nYou can also specify the user name when connecting, eg.\npsql -U postgres\nand create a new user with the createuser command\ncreateuser -U postgres NEWUSERNAME\n. Thanks for the update! I'll close this issue for now, you can reopen it any time if you run into further trouble.\n. Sure! Looks like the script that copies the binaries didn't include pg_isready. I'm changing the script to just copy pg*, so pg_isready should be included in the next build.\nIn the mean time, I'm attaching a copy of the binary. Just unzip it and place it in the right directory:\nbash\nmv pg_isready /Applications/Postgres.app/Contents/Versions/9.5/bin/pg_isready\npg_isready.zip\n. Could it be that you have PGPORT set in your environment? Type export in Terminal to see your environment variables.\n. Please try again with the latest version of Postgres.app. If it fails again, please re-open this issue.. We are currently working on a completely new version of Postgres.app which allows running multiple versions simultaneously. We hope to release it in autumn.\nRight now, you can just switch between multiple versions sequentially. When you open a different version of Postgres.app, it'll offer to rename the app automatically. The old one will also be renamed accordingly.\nHope this helps!\n. We've just released Postgres.app 2.0. You can now run multiple servers (with multiple versions of PostgreSQL) at the same time. See the docs for details:\nhttps://postgresapp.com/documentation/all-versions.html. Looks like your computer can't resolve localhost. You probably fucked up your /etc/hosts file.\nLet me quote from the Postico documentation:\n\nThis message is usually caused by a problem in your /etc/hosts file. The default contents of this file are (on OS X 10.11):\n\n``` bash\n\nHost Database\n\nlocalhost is used to configure the loopback interface\nwhen the system is booting.  Do not change this entry.\n\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost \n```\n\nReverting changes to /etc/hosts should fix this connection issue.\n. It sounds like the old server is still running. Quit Postgres.app, reboot your computer, then check in activity monitor if there are any processes named postgres. If there are, please uninstall them. Once you are sure that no PostgreSQL server is running on your Mac, start Postgres.app again.\n\nThen make sure that the \"Open psql\" command works. If you keep getting the error that the db doesn't exist, quit Postgres.app, then delete the data directory (in ~/Library/Application Support/Postgres/), then restart Postgres.app.\nFinally, make sure that you configured your path correctly (typing which psql should echo /Applications/Postgres.app/Contents/Versions/latest/bin/psql).\n. To switch from Postgres.app to Homebrew, follow these steps:\n1. Create a dump of all your databases, using pg_dump or pg_dump_all.\n2. Make sure \"Start on Login\" is disabled in Postgres.app preferences, then quit Postgres.app\n3. Install PostgreSQL using brew\n4. Restore your database using psql or pg_restore\nPostgres.app doesn't create a postgresql user. If you have a user named postgresql on your system it's from a different installer.\n. I don't think that PGStrom is a good fit for Postgres.app. First of all, it requires the CUDA toolkit, which is a massive download (1GB). Obviously we can't include that in Postgres.app. But even if users were required to download that separately, I would need to download it and keep it up to date on my build machine; something I'd like to avoid (building Postgres.app is already complicated enough). And it seems that there are different versions of CUDA toolkit for every version of macOS; Postgres.app is a single binary that's (mostly) compatible with OS X 10.7-10.12.\nFurthermore, the goal of Postgres.app is to make it easy to get started in the common case. I'm not sure what kind of workloads PGStrom is used for, but I presume that it is mainly useful for specialized applications.\nOf course; I might be wrong. If many people request PGStrom, and it turns out that this is useful for popular applications, I'm willing to reconsider.\n. I'm closing this issue since we got no further feedback. It seems that interest for PGStrom isn't that big.\nFeel free to reopen this issue at any time if you can provide a compelling use case.. Glad it worked! Since there's nothing to do for us here, I'm closing this issue.. @Miserlou @TheCopartnery\nThe new homepage now has the connection info on the front page!. I did some research. Both of these come with PostGIS, but are only built when dependencies are available.\naddress_sanitizer definitely makes sense; since OS X ships with libpcre that should be built. But building against libpcre isn't as easy as I'd hoped, since some header files are missing. I need to investigate this further when I have some time.\npostgis_sfcgal support requires sfcgal; I guess that is a bigger library; I'm not sure I want to include that with Postgres.app, since the package is already pretty big.\n. I found a way to build PostGIS with address_sanitizer, and uploaded a new release:\nhttps://github.com/PostgresApp/PostgresApp/releases/\nThe new release is just 300kB larger, so that sounds reasonable.\nFuture versions will also include address_sanitizer.\nI'm not sure if this will help you since you also need postgis_sfcgal. I'll have a look at sfcgal some other time.\n. I think the problem is that the path to your bundled libpq is not correct, so OS X links with the system provided libpq instead (in /usr/lib/libpq.5.dylib). The system-provided libpq doesn't have OpenSSL support, so you get the error.\nI think the problem is in the first command, the path should probably be @executable_path/../lib/libpq.5.8.dylib instead of @executable_path/../lib/libpq.5.dylib\nConcerning -id, you are using it wrong. The id of a library should be the name you reference it with, in your case @executable_path/../lib/libpq.5.8.dylib, not /usr/lib/libpq.5.dylib\n. Awesome, glad you got it working!\nBTW, those links shouldn't be necessary. Just point towards @executable_path/../lib/libpq.5.8.dylib instead of @executable_path/../lib/libpq.5.dylib\n. 1) What error?\n2) What version of Postgres.app are you using\n3) What version of OS X are you using?\n. Looks like your Ruby installation is broken. Looks like it's linked against two libraries built by homebrew (OpenSSL and libYAML) that have disappeared. Might have happened when you upgraded OS X.\nTry reinstalling Ruby.\n. To be honest, I'm not really that familiar with Ruby, and I don't really know where that problem is coming from. Maybe you're in the wrong directory?\nHere's how to set up the PATH for Postgres.app: http://postgresapp.com/documentation/cli-tools.html -- but I don't think this would solve your issue :(\n. This sounds like a reasonable request. Is there a downside to enabling dtrace? I'm wondering why there is a configure flag, and why it isn't enabled by default.. Thanks for the changes, but could you explain why you want to change this link in the first place? As far as I can see, the link on the postgresapp.com website isn't actually broken, and works fine as it was.\n. Maybe the lock file already exists? Try the following:\n1) Quit Postgres.app\n2) Open Activity Monitor, ensure that no process named 'postgres' is still running (if there are any, kill them starting with the one with lowest PID)\n3) Type ls -a /tmp to see if the socket file and lock file are still there (/tmp/.s.PGSQL.5432 and /tmp/.s.PGSQL.5432.lock). If they are, delete them.\n4) restart Postgres.app\n. @bileser This is strange. I don't know why your /tmp dir was borked. Every app should be able to write files to /tmp; that's the whole point of /tmp.\nI would recommend re-enabling SIP if everything works now.\n(BTW: Another possible workaround would have been to change the socket location to a different directory than /tmp in postgresql.conf)\n. Hey everyone!\nGenerally speaking, disabling System Integrity Protection is not a good idea -- just like you wouldn't fix a blown fuse by shorting it with a nail. So make sure to reenable SIP after changing the broken permissions.\nConsidering that SIP is supposed to prevent exactly this type of problem, it looks like there must be a bug in macOS. It would be really great if you could report this problem at bugreport.apple.com\n. What exactly do you mean with \"move by hand\"? Did you use mv in Terminal? When you move a downloaded app with the Finder, App Translocation (Path Randomisation) should be deactivated. Also, when you click \"copy\", Postgres.app removes the \"quarantine\" attribute after copying, so app translocation should definitely be disabled after clicking \"copy\".\nI'm not sure what's going on your Mac, but as far as I understand this really shouldn't happen.\nWhat version of macOS are you using?\n. OK, thanks for following up on this.\nInstead of updating the Quick Installation Guide, it would probably be even better to just detect that the app is translocated, and show a more relevant error message.\n@chrispysoft Can you look into this for Postgres.app 2.0?\n. We've now released Postgres.app 2.0 which shows a more relevant error message.. Where are you downloading from? I think that Github hosts binaries on S3, not sure why that is so slow...\n. Could you tell me where you are downloading from? In the past I've heard that people from China had problems downloading it.\nDoes anyone have suggestions where to host Postgres.app? Would Amazon CloudFront work better where you are from?\nIt's convenient to host it on Github, since we don't have to pay for it. (Around 12.000 people download Postgres.app per month, so we use more than 500GB of bandwidth per month.)\n. Ok, that was more detail than I wanted to know... just country would have been fine :)\nI'll investigate what options we have for improving download speeds.\n. Hosting on Amazon Cloudfront might be an option to increase download speeds. However, that would probably cost several hundred euros per month. It would also make release management more complicated, since we would need to move away from Github's infrastructure.\nHow many people are having problems with download speed? If this prevents people from using Postgres.app, we need to fix it.\nDoes anybody else have an idea where to host binaries?. No, this is the wrong product. We don't need a service to archive data, we need a service that will let users download Postgres.app quickly. We need a CDN.. We need around 500GB transfer, not storage. (But with Postgres.app version 2.0, that will probably double to more than a TB). Are you still experiencing slow download speeds?\nIs anybody else having trouble with downloading from S3?. Hi! I'm currently investigating CDNs to host Postgres.app downloads.\nIf you could execute the following commands and post the output that would be really sweet:\ncurl -O https://postgresapp-b082.kxcdn.com/Postgres-2.1.3.dmg\ncurl -O https://postgresapp.r.worldssl.net/Postgres-2.1.3.dmg\ncurl -OL https://github.com/PostgresApp/PostgresApp/releases/download/v2.1.3/Postgres-2.1.3.dmg\nFor example, here's what I get on a 150MBit cable line in Linz, Austria\n```\n$ curl -O https://postgresapp-b082.kxcdn.com/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0  17.3M      0  0:00:08  0:00:08 --:--:-- 17.8M\n$ curl -O https://postgresapp.r.worldssl.net/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0   9.8M      0  0:00:15  0:00:15 --:--:-- 17.7M\n$ curl -OL https://github.com/PostgresApp/PostgresApp/releases/download/v2.1.3/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   607    0   607    0     0   1150      0 --:--:-- --:--:-- --:--:--  1151\n100  148M  100  148M    0     0  5703k      0  0:00:26  0:00:26 --:--:-- 6922k\n```. @tbussmann Contacting Github is a good idea. I'll do that. Can you test the speed from Switzerland?. I'm collecting results in this Google Sheet. Feel free to add your results:\nhttps://docs.google.com/spreadsheets/d/1dsNGhxlOM9j0CuxOgAMRzpdU_FQ38DhLNFzQiZmSIlM/edit?usp=sharing. OK, from those tests it looks like option 2 is fast both in Europe and North America. What about the other continents? Can someone from Asia test this?. Also, I've heard back from Github. They said they can't do anything to make our specific downloads faster, but if someone suffers from slow download speeds, they should contact Github support directly, so they can work out the issue.. @teefan Please, feel free to do so. Does Google allow hosting public downloads in Drive, or is there some kind of bandwidth limit?. @emiapwil Thanks for trying the links, the first two links are no longer active (it was just a one month trial of the CDN)\nIt seems that Github release downloads have poor performance in Asia and Australia, and using a CDN would be a good idea.\nI've done some more research, and cdn.net looks like they have a service with POPs in Asia and Australia. Maybe I can host postgres.app downloads there in the future?. I'd appreciate help! If someone wants to mirror Postgres.app, or seed torrents of the releases, please get in touch!. @patricks \nIf you click on \"Server Settings\", you can choose which servers should auto-start on login, and you can disable the menu bar icon by clicking the check box in the main window\nBut you are right, there is currently no way to disable the LoginHelper. It always starts, even if no servers are set to auto-start and when the menu item is disabled. In that case it does nothing.\nI think we could add a preference to disable the LoginHelper.\n(Concerning LoginItems, it just seemed easier to use a LaunchAgent instead of a login item.)\n. OK, after some testing I found out that the \"Show Postgres in menu bar\" checkbox is broken... we're working on a fix!\n. @WiechersV I've been able to reproduce the issue. It looks like it happens when you open the app for the first time on OS X 10.10, when you have no previous databases. We need to investigate why exactly it is happening.. @WiechersV I think I've found the issue. Can you try if this binary works?\nhttps://eggerapps-downloads.s3.amazonaws.com/Postgres-2.0-17.dmg. Good to hear!\nI'm closing this issue now. Thanks to everyone for commenting!\nAny further troubles with Postgres.app 2.0, please just open a new issue.. I don't see what the problem is? Postgres.app includes gdal, and it includes gdal-config so you can link it.\n\nPlease note that these warnings are just used to help the Homebrew maintainers\nwith debugging if you file an issue.\n\nIs this causing an actual issue or are you just worried about the warning?\n. @ionbaratol Could you explain in more detail what you did? Why do you think gdal-config interferes with rvm?. The warning says:\n\nIf everything you use Homebrew for is\nworking fine: please don't worry or file an issue; just ignore this.\n\nAre you having any problems that you believe may be caused  by the config files?. You need to put that line into your .profile (or .bash_profile) file in your home directory, so it will be executed every time you open a Terminal session\n. This is a duplicate of issue #336\nWe're planning to redesign the website for Postgres.app 2.0, and this will be a part of it.\n. Sorry, I just realised that you are talking about the app, not the website. Reopening...\n. I've decided not to add an infobox to the app for the following reasons:\n\nin the new interface there is no good place to put it\nthere is now an infobox on the homepage\nthis is mostly useful for new users, who probably already have the homepage open anyway\n\nThanks for taking the time to submit this suggestion -- it was a good idea at the time, but for the reasons above I think it's no longer relevant.. Without more details, I can't help you, so I'm closing this issue.\nPlease read the documentation (especially the parts about installing, and the troubleshooting section). If that doesn't help, please re-open this issue and provide the following information:\n1. What did you try to do?\n2. What happened?\n3. What steps have you already tried?\n. I just checked, it looks like there is a cask named 'postgres' that installs Postgres.app:\nhttps://github.com/caskroom/homebrew-cask/blob/master/Casks/postgres.rb. I just tried building it, but failed :(\nUnfortunately I'm to busy right now to work on this, but if someone finds out how to build it, we can either bundle it, or add instructions to the docs how to build it yourself. (depending on how many people use this tool -- I don't want to bundle stuff that only very few people use). @pbnjay Thanks for taking the time to document this!\nIt seems that the underlying issue is that Postgres.app doesn't include libpgport and libpgcommon. If I recall correctly, these libraries contain code that is common to the backend and the frontend. They are probably not installed because they are contained inside libpq.\nThis issue will probably also bite other people that try to build extensions for Postgres.app, so we should fix this.\nYour workaround using g++ is neat, but I'd assume that there is a make target for installing these libraries; I'll see if I find something.. OK, I think I found the problem. My build script copies lib/*.dylib, but libpgcommon is built as a static library (libpgcommon.a), so it's not copied!\nI'll see if I can fix this!\nI'm reopening the issue so I don't forget.. This is fixed with the most recent releases of Postgres.app (2.0, 9.5.5.1, 9.6.1.1). Hi!\nTwo suggestions:\n\n\nWe are on the verge of releasing a new version of Postgres.app; please try the 2.0 beta (check out the releases section on Github)\n\n\nInstead of starting / quitting Postgres.app, just start / stop the server using pg_ctl\n\n\nHope this helps!. Thanks, I'm working on this! See also issue #358 (same problem). @kpy3 We're working on it. Our 2009 vintage Macbook Pro takes a while to build things.... Hey, thanks for sharing your work. I downloaded your app to try it, and I immediately hit a few issues:\n\nthe app doesn't seem to be code signed\nI couldn't connect to the default database from Postgres.app (same name as system user) -- I got an error \"empty password\" (even though Postgres.app doesn't require passwords by default)\nafter connecting to the database 'postgres', I couldn't switch to my user database (didn't show up in the database selection popup menu)\n\nI'm not sure that recommending a product that doesn't work with Postgres.app out of the box in the Postgres.app documentation is a good idea.. Hey everyone,\nThis issue is getting off topic. Bugs in Postage should be discussed in the Postage repository. Every message posted here is sent to all the people watching the Postgres.app repo, and I really don't want to spam them with notifications irrelevant to them.\nThis issue was originally about adding Postage to the GUI tools list. The goal of this list is to help Postgres.app users find a tool that they can use on their Mac to work with Postgres.app. From this discussion it is clear that Postage is not yet tested enough on macOS to endorse it.\nI'm closing this issue now.\nBest regards,\nJakob. Postgres.app does not run on macOS 10.6.1, and you don't need Postgres.app if you use MacPorts to install PostgreSQL.\nThe error you quoted usually happens when you connect with the wrong username. Make sure to specify the right user name. For example, if you are using psql, try psql -U postgres. Also, it could mean that the user is missing on the PostgreSQL server. Postgres.app executes the commands createuser -U postgres -s $USER and createdb $USER to make sure that a default user and database exist.\nI'm closing this issue now, since it doesn't look like this is actually related to Postgres.app. (You can still ask further questions -- but in general I'd recommend to ask on the PostgreSQL mailing lists or on the IRC channel for topics not specifically related to Postgres.app). This looks like a linker problem. otool -L /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO shows that it wants to link with a private Apple JPEG library. Apparently your build system tries to link it with Postgres.app's libJPEG.\nI've never used Rust, and I have no idea what build system you are using. I'd suggest to start looking at library search paths -- maybe the ordering is wrong there?\nMaybe if you upload a minimum test case that exhibits the problem, someone with experience in Rust could help?. The best solution would probably to include a text editor in Postgres.app for editing config files; then we could avoid this issue.\nFor now, we've just changed the \"Edit\" butttons to \"Show\" buttons in Version 2.0.2. So when you click the button in the latest version, the file is no longer opened in TextEdit, but instead the file is selected in Finder.\nPresumably, most people will then edit the file with their preferred text editor.. Thanks for creating a pull request. Before we merge this, I'd like to discuss this change a bit.\nOur goal is to provide a very 'standard' PostgreSQL installation. That's the reason why we pass barely any options to initdb, and we use only necessary configure options.\nThe default for this option is off; I don't know a lot about it, so I would like to see some discussion why it should be turned on.\nCould you explain why you think this option is a good default for Postgres.app?. Thanks for the suggestion!\nI've decided not to merge this pull request. We document one way to configure your $PATH (adding a file to /etc/paths.d). I don't want to confuse new users with additional instructions that are irrelevant to them.\nIf you know how to change your default shell, you should really know how to configure your $PATH.. Hm, that makes the command even longer...\nAn alternative could be to append the path directly to the main paths file, eg.\nbash\necho /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee -a /etc/paths\nNot sure how stable that is. Would an OS upgrade reset that file?\n. 1. Open Postgres.app\n2. Menu \"Postgres\" -> \"Preferences\"\n3. Uncheck \"Automatically Start Postgres on Login\". Sorry, I wasn't clear enough. I mean the other Postgres menu:\n\nMaybe we should add the \"Preferences..\" and \"Check for updates\" commands to the elephant menu. They are not very discoverable.. We've added the preferences command to the elephant menu in version 2.0.2.. 1. You are using a very outdated version of PostgreSQL. Please download 9.4.10 from this page: https://postgresapp.com/documentation/all-versions.html\n\n\nMake sure that you are actually using the version of psql supplied by Postgres.app! Type which psql to see what binary you are running. It should be /Applications/Postgres.app/Contents/Versions/latest/bin/psql or /Applications/Postgres.app/Contents/Versions/9.4/bin/psql. See here for setting up your $PATH: https://postgresapp.com/documentation/cli-tools.html\n\n\nCheck what version of psql you are using with psql --version. Hi there!\n\n\nThanks for suggesting to add the app to the list. Judging from the screen shots this looks like a nice app. Are you the developer?\nBefore I add the app to the list, I want to see if it actually works with Postgres.app first. Can you provide me with a copy for evaluation?\nIf possible, please also add the link to the German version of the page.\nBest wishes,\nJakob. thanks!. I'm not familiar with LDAP. Could you elaborate?\nWhat does LDAP do, why do you need it?\nWhy should this be enabled even though it isn't enabled in a default build of PostgreSQL? Is it enabled by default on other platforms?. Hm. I just tried building PostgreSQL with the  --with-ldap configuration flag. The build completed, but a lot of deprecation warnings were shown (eg: warning: 'ldap_msgfree' is deprecated: first deprecated in macOS 10.11 - use OpenDirectory Framework)\nAlso, I can't actually test if it works. Would be nice if someone more knowledgeable about LDAP could try building Postgres.app with LDAP, and see if it works.. pkill sends the TERM signal by default, which will cause a more or less graceful shutdown.\nIt's enough to signal just the postmaster (you can find its pid from the postmaster.pid file in the data directory). It will signal child processes to quit as required. You can also use the pg_ctl program instead of kill.\nHowever, if you just want to quit the server, and don't care if existing connections are forcefully closed, pkill postgres will do no harm.\nSee more info here: https://www.postgresql.org/docs/current/static/server-shutdown.html\nAlso, if you just want to stop the servers, you don't need to quit the UI apps. They won't restart server processes automatically.. Also, pkill postgres Postgres or even simpler pkill -i postgres is probably the quickest way to kill everything. (no need to bother with Apple Script). We troubleshooted this issue via email. It turned out the issue was caused by accidentally typing pgdump -V instead of ./pgdump -V to check the version of the binaries.. Presumably VBS:Malware-gen is some generic pattern to match visual basic viruses. It looks like that match pattern is identifying postgres data files as containing viruses.\nI am almost 100% sure that this is a false positive.\nUnfortunately, we can't offer support for Anti virus products. Please contact Avast customer support.. We leave most settings on default.\nI recommend to compare the output of EXPLAIN for the query on both machines.\nCould be that statistics aren't up to date, which causes the query planner to choose a non-optimal strategy. ANALYZE should fix that.\nOr maybe you have an index on the Mac that's missing on Linux.\nIf the EXPLAIN output is the same, hardware config might make the difference. Many DB queries are IO bound, so if the data fits in RAM on one machine but not on the other you'd see things like this. Also hard drive vs. SSD, or busy disk in a VM vs mostly idle disk on your Mac.\nThere are so many possibilities..... To answer your actual question, you can determine the build settings for Postgres.app with the shell command pg_config:\n\nCONFIGURE = '--prefix=/Applications/Postgres.app/Contents/Versions/9.6' '--with-includes=/Applications/Postgres.app/Contents/Versions/9.6/include' '--with-libraries=/Applications/Postgres.app/Contents/Versions/9.6/lib' '--enable-thread-safety' '--with-openssl' '--with-gssapi' '--with-bonjour' '--with-libxml' '--with-libxslt' '--with-perl' '--with-python' '--with-readline' '--with-uuid=e2fs' '--enable-tap-tests' 'CFLAGS= -mmacosx-version-min=10.7'\n\nDatabases are created with the following options (see initDatabaseSync() in Server.swift):\ninitdb -D path/to/data/directory -U postgres --encoding=UTF-8 --locale=en_US.UTF-8\n\n. (sorry, pressed wrong button by accident). The app includes both versions of pg_dump: 9.5 and 9.6. Which one will be used depends on how you configured your $PATH.\nThe two versions are at the following paths:\n/Applications/Postgres.app/Contents/Versions/9.5/bin/pg_dump\n/Applications/Postgres.app/Contents/Versions/9.6/bin/pg_dump\n\nIf you followed the instructions on the homepage, your $PATH should be configured to include /Applications/Postgres.app/Contents/Versions/latest, which is a symlink to \n to /Applications/Postgres.app/Contents/Versions/9.6\nType the command which pg_dump to see which pg_dump is the default, and type echo $PATH to see what your $PATH is set to.\nIf you followed the instructions on the homepage, /etc/paths.d/postgresapp should contain the path above. Change latest to 9.5 and you're good to go.\nYour path could also be configured in any of the shell configuration files, eg. ~/.bash_profile, ~/.profile, and so on.. It looks like you haven't configured your $PATH correctly. Type echo $PATH to confirm.\nI'm not familiar with zsh. The config file looks like a bash config file. Maybe that's the problem?\nAdding a file name /etc/paths.d/postgresapp with the contents /Applications/Postgres.app/Contents/Versions/latest/bin should also work with zsh.. @alvinkatojr It sounds like you somehow messed up your zsh configuration files. You have two possibilities:\n1) Format your hard drive and start from a fresh install of macOS. Then you can use the instructions from the Postgres.app homepage, and they will work.\n2) Read the zsh documentation and try to find out what is going on. You can start zsh with the -x flag for debugging. Use a command like the following to see what scripts are executed when you login, and why the $PATH isn't what you expect:\nlogin -f $USER zsh -x\n3) Also, remember that changes to configuration files only take effect when you restart your shell (close terminal window, and open a new one)\nIn any case, it doesn't seem like this is an issue with Postgres.app or our documentation. We can't include instructions for using the shell in our documentation -- that's a prerequisite if you want to use command line tools. You really need to consult the zsh documentation if you have problems setting up your environment.. @TroutNemesis Please open a new issue, and describe your problem in detail.. Good catch, and thanks for the pull request!\nWhich version(s) of macOS did you test this on? There was a reason why we used this complicated procedure for setting the icon. Unfortunately I can't remember why we did it this way. It might have been a workaround for a bug in an older version of macOS.\nSo before I can merge this pull request, we need to check if it works on all supported versions of macOS, making sure it works both in dark and light mode.\n\n[ ] macOS 10.10\n[ ] macOS 10.11\n[ ] macOS 10.12. Maybe @chrispysoft remembers why we used separate icons?. By default, Postgres.app configures itself to start automatically when you login. It does this by creating a \"launch agent\" file at the following path:\n~/Library/Launch Agents/com.postgresapp.Postgres2LoginHelper.plist.\n\nYou can also disable or reenable autostart in the Postgres.app preferences.\nNote that Postgres.app only starts after you log in. If you want your servers to start at system startup, before you login, I recommend to create a launch daemon that uses pg_ctl to start the server. However, that is an advanced topic, and I don't know much about the details, so I can't really help there.. Are you sure that it's broken? When you uncheck the \"show in menu bar\" setting, Postgres.app should start the servers invisibly in the background on login.. Thanks! I'll see if I can reproduce the issue!. @9mm I was able to reproduce it, and I think I found the problem. It's a race condition.\nThe PostgresLoginHelper executable starts the servers asynchronously in the background. When the menu item is enabled, it also launches the PostgresMenuHelper executable (which displays the menu item).\nWhen the menu item is disabled, PostgresLoginHelper terminates immediately after dispatching the start command, so it terminates before the start command has completed.\nThe simplest solution would be to add a sleep(10) instruction before terminating the login helper (since it doesn't really matter how long it runs).\nA cleaner solution would be to start the servers synchronously -- that would also eliminate race conditions when eg. multiple servers are configured to use the same port (by guaranteeing that the first server wins).\nThanks for your bug report!\n. Hey! I've now rewritten the login helper to start the PostgreSQL server synchronously (ie. wait until it has actually started before exiting)\nIn my testing, this now works as expected.\nCould you download this build and see if it works for you?\nhttps://eggerapps-downloads.s3.amazonaws.com/Postgres-2.0.2-21.dmg. What version of macOS are you running? There were some really bad bugs in macOS Terminal when opening new tabs/windows via Apple Script; I thought they fixed them in El Capitan, but I might be wrong.\nSince this works correctly on my machine, it would be nice if you could explain your setup in a bit more detail. What's running in your Terminal when it doesn't work? Does the problem always occur, or just sometimes?. If you run into the \"Binaries not found\" error, you need to make sure you have the right binaries for your data directory. They must be the same version. The standard download has binaries for 9.5 and 9.6.\nYou can get binaries for older versions here: \nhttp://postgresapp.com/documentation/all-versions.html\n(See the section mix & match). Also, see this page for updating instructions:\nhttps://postgresapp.com/documentation/update.html. @knussear Open the sidebar (using the button in the bottom left), then click the plus button, and create a new server with version 11. You can start and stop the servers from the command line with pg_ctl. (just make sure to use the right version)\nExample to stop 9.6 and start 9.5:\n/Applications/Postgres.app/Contents/Versions/9.6/bin/pg_ctl stop -w -D '/Users/jakob/Library/Application Support/Postgres/var-9.6'\n/Applications/Postgres.app/Contents/Versions/9.5/bin/pg_ctl start -w -D '/Users/jakob/Library/Application Support/Postgres/var-9.5'\n\nFor more info, read man pg_ctl. Hi!\nPreviously the instructions would tell users to add that line into their profile, but that seemed to be difficult, eg. some people used zsh, which has slightly different syntax, etc.\nSo we came up with the current method (originally suggested by #259). I thought it was simpler, since it is just a single command to execute, and it doesn't matter if you use bash or zsh. It's more complicated than I'd like, but it seems to work for most people.\nI don't think that a solution that only works for the current session is a good idea. I'd assume that most people who install Postgres.app want to use it more than once.\nCould it be that the issue was that you didn't reopen your terminal? The changes to paths.d only take effect when logging in.. Could you check the contents of /etc/paths.d/? What output do these two commands have?\nls /etc/paths.d\ncat /etc/paths.d/postgresapp\n\nOf course, if you've changed your .profile file it's possible that adding paths using /etc/paths just doesn't work anymore (eg. if you reset your $PATH somewhere in .profile). @zsiegel92 Yes, the first line in your .profile resets your $PATH. Usually people just add to the path by appending stuff in front or in the back like this:\nbash\nexport PATH=/high/priority/path:$PATH\nexport PATH=$PATH:/high/priority/path\nIf you don't include the $PATH variable, you override the previous value.\nSo when bash starts, it does the following:\n1) Execute /etc/profile (uses path_helper to set the $PATH according to /etc/paths and /etc/paths.d)\n2) Execute your ~/.profile which overwrites $PATH\nThat's why the path in /etc/paths.d/postgresapp was ignored.\n. Oops, it looks like I forgot to click the \"publish\" button on Github. It should work now!. Did you move it to the Applications folder?. We added checksums to the release notes. \nCould you let us know more about the warning you encountered? Was it a system warning, or something from an Anti-Virus software?\nDid you double-click Postgres.app without dragging it to the applications folder first?. The data directory of your PostgreSQL server can be changed in the settings. The default data dir for version 9.5 is in ~/Library/Application Support/Postgres/var-9.5.\npostmaster.pid stores the pid (process id) of the main postgres process. If it was created 1.5 years ago you either haven't restarted PostgreSQL in a very long time, or the server was shut down ungracefully and wasn't started in a long time.\nYou can delete the postmaster.pid file if you make sure that no process named postgres or postmaster is running anymore.. Good point. It would be good to write some documentation on the data directory, since that is something that is often unclear to people new to PostgreSQL. (I remember that it was unclear to me as well).\nThen we should probably link to that page any time the data directory is mentioned in the docs.. The popup lets you choose what happens when you double click a database icon in Postgres.app\nWe should probably improve that label. . By default, PostgreSQL only listens on localhost. To make it listen on all interfaces, change listen address to * in postgresql.conf, then restart the server.\nYou will also need to update the pg_hba file to allow connections from the network\nYou can find the config files in the data directory.. You can use the initdb command to initialize a database directory, then use pg_ctl to start the the server, and then use createdb to create a new database.\nIf you want the new server to show up in Postgres.app, you'll need to use the defaults command to update the com.postgresapp.Postgres2 domain, specifically editing the Servers array to add your new server.. Thanks for your comments. You are absolutely right that this is a problem. It isn't obvious that Postgres.app supports multiple servers with different versions.\nHowever, I don't think we should attempt to fix this by changing the documentation -- I think we should change Postgres.app to make it clear what is going on, without requiring users to read the docs. (most people read docs as a last resort, when all else fails, and they are already frustrated by the crappy software)\nSo here are my thoughts on this:\n\n\nMost users don't care about installing multiple versions. They just want a single PostgreSQL server running the most recent version. This is what Postgres.app offers when you first start it. We hide the sidebar so that this type of user doesn't need to think about installing multiple servers. It looks like there is only a single server, which is exactly what 99% of users want.\n\n\nUsers who already have an old Postgres.app installation on their Mac will be confused by this. As you explained, it looks like everything is broken. And even if the version is supported (eg. 9.5), it's not obvious how to upgrade to 9.6\n\n\nTo deal with the second type of user, I suggest the following changes\n\nshow the sidebar by default\nif the user does not have a server of the latest version, create a second server with the latest version\n\nThis would allow users to immediately use the new server (if they want) while also making it obvious that the old data isn't lost. And the docs explain how to migrate the data.. Yes, updating the docs in additionwould be great \u2013 I\u2019m not sure if there is any mention of the multi-server capabilities in the current docs.\nHowever, I\u2019m not sure where to put that info, and what exactly to write.\nThe migration docs are currently very generic \u2013 if you have any suggestions how to improve them, I\u2019d welcome them!. Thanks for the report! According to this article it was a glitch in Google's safe browsing service. Binary downloads from Github were incorrectly blocked. Looks like they've fixed it already.\n. Is that the literal error message or did you edit it?\nThe way it is now, it looks like your data directory is misconfigured. The default data directory for Postgres.app should be /Users/USERNAME/Library/Application Support/Postgres/var-9.6. Looks like it is set to /var-9.6 on your Mac.\nPlease also note that using the tilde as a shortcut for your home directory does not work in PostgreSQL config files.. You are probably connected to a different server than the one from Postgres.app\nType the following command in psql:\nshow data_directory;\nIt should print something like this:\n/Users/jakob/Library/Application Support/Postgres/var-9.6\nIf it prints something different, you have a different PostgreSQL installation running, which probably doesn't include PostGIS. It looks like you are using psql (the client) from Postgres.app (Version 9.6.4), but the server is running a different version (9.6.3). I think the EnterpriseDB installer might use  /Library/PostgreSQL as a data directory, try removing that before starting Postgres.app.\nInstructions: https://postgresapp.com/documentation/remove.html\nAfter removing, restart your computer to make sure no PostgreSQL processes are still running.. To enable SSL / TLS in Postres.app, you need to generate a certificate and edit postgresql.conf to enable it.\nMaybe it would be a good idea to have a future version of Postgres.app create a cert automatically,but for now you need to do it manually.\nPlease read the docs here:\nhttps://www.postgresql.org/docs/9.6/static/ssl-tcp.html. 1. PostgreSQL expects to find config files inside the data directory, with specific names. Don't move them to other locations, and don't change their name.\n2. I don't think PostgreSQL likes it when data directories are moved. As far as I remember, either PostgreSQL itself or some extension expects the absolute path to stay the same, so odd things can happen if you move it. Moving the data directory to a new location should instead be done via dump/restore.\n3. But you can add existing data directories in Postgres.app by creating a new server with an existing data directory. Postgres.app only initializes a new cluster when the selected data directory is empty.\n4. By default, Postgres.app always uses the bundled binaries. However, that is only a limitation of the server creation UI. If you check the preferences of Postgres.app (using a command like defaults read com.postgresapp.Postgres2) you'll see that an arbitrary binary path can be specified. If you change the binPath of a server from /Applications/Postgres.app/Contents/Versions/9.6/bin to whatever prefix homebrew uses, you can use a different PostgreSQL installation with Postgres.app\nIf you manually change the preferences of Postgres.app, make sure to only use the defaults command -- don't edit the plist files directly, since they are cached by prefsd. Also, it's best to only change prefs while Postgres.app is not running.. Regarding point 2 (relocating the data dir), I'm not sure if this really is the case. Maybe it is possible to move the data directory -- a quick search of the data dir didn't show any occurrences of the path (except in log files). In that case you can move the data dir like this:\n1) Stop the server\n2) Delete server in Postgres.app\n3) Move Data dir in Finder\n4) Create new server in Postgres.app, selecting the new location of the data dir\n5) Start the \"new\" server\n(note: I haven't actually tried this, so proceed with caution). We'll support PostgreSQL 10 on release. We were a bit lazy with the beta builds, but we'll have PostgreSQL 10 support on release day. . I just made a build of PostgreSQL 10rc1: https://github.com/PostgresApp/PostgresApp/releases/tag/10rc1\nSee the section Mix & Match on this page for instructions how to use these binaries with Postrges.app 2. Postgres.app doesn't use login items, because we couldn't get them to work reliably.\nInstead, Postgres.app creates a launch agent at the following path:\n~/Library/LaunchAgents/com.postgresapp.Postgres2LoginHelper.plist\nThis launch agent automatically starts a helper app (not the main app) on login.\nPlease don't delete this file manually, and please don't add Postgres.app to your login items.\nIf you'd like to configure whether Postgres.app starts automatically, please go to \"Preferences\u2026\" in Postgres.app, and uncheck \"Automatically start at login\". This will delete the launch agent file automatically.. Thanks for reporting this! It would probably be best to report this issue to the hackers mailing list:\npgsql-hackers@postgreSQL.org -- that's where people who can most likely help you hang out.\n. Postgres.app does not automatically update your server to version 10. If you want to upgrade, you need to do the following:\n1) Create a dump of your server:\npg_dumpall --quote-all-identifiers | gzip >postgresapp.sql.gz\n2) Stop the old server. Disable \"Automatically Start Server\" in settings\n3) Create a new server with version 10\n\n4) Restore the dump\ngunzip <postgresapp.sql.gz | psql\nHope this helps!\nFor more info, see https://postgresapp.com/documentation/migrating-data.html. @jasoncapriati This just menas that you are using psql (client) version 10 with a server version 9.6. That's not a problem, the two versions are compatible.\nBut if for some reason you do want to use psql 9.6 instead of psql 10, you 'll have to change your path. If you followed the docs on the home page, the path should be configured in /etc/paths.d/postgresapp. Just change latest to 9.6, and you should be ready to go!. Hey folks! Sorry for not responding to this sooner!\nSince this has been requested a couple of times now, and it sounds like a sensible addition, I've tried to build PostGIS with support for Mapbox Vector Tiles. It took me a while to figure out how to build libprotobuf-c, but I think I've done it.\nI've just released a beta build of Postgres.app with PostgreSQL 11beta4 and PostGIS 2.5.0rc2 with support for Mapbox Vector Tiles.\nSince I don't really know what Mapbox Vector Tiles are, I just tried executing one of the commands from the PostGIS docs, and it worked. So I'd appreciate if any of you could head over to the releases section and try the latest Beta. Create a server with PostgreSQL 11, and try if it works!\n(Postgres.app 2.2beta2 includes the stable versions of PostgreSQL as well, so you can try out the 11 beta and keep running your servers with PostgreSQL 10 or earlier at the same time). PostgreSQL 11 is now released, and PostGIS 2.5.0 is now built with support for MapBox Vector Tiles!. @JamesChevalier Then the automatic software update would break people's installations, and would require manual data migration. That's why we always ship one major version of PostgreSQL with one major version of PostGIS. (since you then need to migrate data anyway)\n. It looks like you tried to restore a backup that was created while the server was running. According to the docs, this requires a consistent snapshot of the file system. It looks like whatever you used for backup did not make a consistent snapshot, and you now have a corrupted data directory.\nIf possible, try to restore from a dump (use pg_dump or pg_dumpall).. Thanks for your pull request. I've heard nice things about Metabase, and trying it out myself it looks like a useful tool.\nWhen trying it out, I ran into a couple of issues though:\n\n\nThe main window seems to have erratic resizing behavior (13\" Macbook, early 2015, macOS 10.12.6).  It's too big, content is off screen, and I can't resize it.\n\n\nThe signup flow might be necessary for a web app, but it is way to complicated for a Mac app. Users shouldn't have to spend 10 minutes filling out forms before they can connect to Postgres.app.\n\n\nThe page you link to talks about an \"installer\", but the download is just a disk image. Mac users don't like installers, so I'd avoid that word, especially since it is inaccurate.\n\n\nThese aren't deal breakers (I'll merge your request), but I wanted to mention them while I have your attention. Would you like me to file issues against the metabase repo concerning these two points?. The name of the binary path and the default data directory should match, and they should both be 10 rather than 10.0.\nHere's why:\nThe PostgreSQL project changed their version numbering scheme with version 10. Previously, the scheme was MAJOR.MAJOR.BUGFIX; now the version number scheme is MAJOR.BUGFIX.\nSo previously, version 9.5 and 9.6 where incompatible, whereas 9.6.1 and 9.6.2 were compatible.\nWith the new scheme, version 10 and 11 are incompatible, whereas 10.0 and 10.1 are compatible.\n(Compatible means that the data format doesn't change, and the dynamic library version doesn't change)\nThat's why we also changed the name of the bin paths and the name of the data directory.\nHowever, it looks like your data directory doesn't have the new pattern. Did you choose this name yourself, or did Postgres.app create that directory? If it's the latter, this is a bug. In my testing, Postgres.app creates the data directory with the correct name. Looking through the code, I really don't  see how Postgres.app would create a directory named \"10.0\". Could you confirm that Postgres.app really creates a dir with the wrong name?. Can you explain why you think that this change is necessary? Is this requirement documented somewhere? Spotlight has no issues finding Postgres.app on all the machines I tested (macOS 10.12.6 and macOS 10.13.1).\nAlso, is there a reason why you are using EXECUTABLE_NAME instead of PRODUCT_NAME?. The current version of Postges.app includes PostgreSQL 9.6.6. To create a server running 9.6, please open the sidebar and click the \"+\" button to add a new server.\nDoes that answer your question?. Thanks!. You can just use pg_ctl start -D /path/to/datadir to start the postgres server from the command line. See the docs: https://www.postgresql.org/docs/current/static/app-pg-ctl.html\nMake sure you use the absolute path to the data dir.\nAlso, if you have multiple PostgreSQL installs, make sure that you are using the right version of pg_ctl (which pg_ctl is useful here)\n\nAm 09.12.2017 um 01:34 schrieb Aiken00 notifications@github.com:\nI am running a Procfile-Based Application and am using Postgresql for development. I am thinking if Postgres.app can be invoked through command so that I can run everything as I run Procfile.\nThank you.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. Open the sidebar + add a new server!\nAm 24.12.2017 um 03:45 schrieb Derrick Kearney notifications@github.com:\nThe website says, \"The current version requires macOS 10.10 or later and comes with the latest PostgreSQL versions (10.1, 9.6.6, and 9.5.10)\". I am using Mac 10.13.2, only PostgreSQL 10 is available, and I cannot see any way to add 9.5, and 9.6. How can I add 9.5 and 9.6?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub, or mute the thread.\n. I started it, and it asks me to sign up with an email address. Clicking sign up opens a browser. This looks like a web app, not like a Mac app.\n\nI think I should start a section for web apps on that page, a lot of them are not really Mac apps.. I think that the 403 error might be due to using the download manager.\nCan you try if the links I posted in issue #349 are faster?. There is already a pull request open for this #425. Could you check the server log if you find anything?\nAlso, can you try creating a second server in Postgres.app (open the sidebar, then click +), and see if initialisation hangs again?. I think we used to have a separate page with connection parameters in the docs. You are right, we should probably add it again.\nWould you like to add a page like this? I'd appreciate a pull request.. Type which pg_restore to see which pg_restore you are calling. You probably have multiple versions on your Mac. The one provided by Postgres.app can be found in /Applications/Postgres.app/Contents/Versions/latest/bin\nMake sure to set up your $PATH correctly (see docs on our website). Your $PATH variable is probably also configured somewhere else (eg. in .profile or similar). If you want to use Postgres.app binaries, you need to make sure that their path is first in the $PATH variable. Unfortunately I don\u2018t have time right now to go into more detail, but I recommend to learn about how your shell uses the path variable, and the various ways in which it is typically configured on macOS.. Hi @jbains223, you might be mixing something up.\nPostgres.app is a server.\npgAdmin4 is a client.\nWhen Postgres.app says \"Port in use\", that means that some other server is already using this port. The problem is not pgAdmin.\nYou should probably remove the other server before you start Postgres.app. See this page in the documentation for more info: Removing existing PostgreSQL Installations . I have limited experience with Ruby, so please take my hints with a grain of salt.\nFirst of all, did you try installing the pg gem with archflags as suggested on postgresapp.com? I think there was an issue if you just do gem install pg (or use bundle install)\nSecond of all, without error messages, this is going to be difficult. You can do rails db:create &>output.txt to save output to a file. Attach this file to the issue, maybe then someone could help.\nFinally did you also report this bug to ruby? Since the error message suggests submitting a bug to the ruby project, I\u2019m wondering why you think this is related to Postgres.app?. You need to open the side bar, then add a new server. Then you can pick which version you want.\nThis is not discoverable. We wanted to make Postgres.app easy to use for the common case, but made the \"advanced\" case difficult to discover.\nWe probably need to document this somehow. If you have suggestions, please let me know!. Hm. Did you change ph_hba.conf to require a password? Postgres.app always connects without a password, assuming that connections from localhost are set to trust.. Can you try executing this command in the terminal:\n/Applications/Postgres.app/Contents/Versions/latest/bin/psql 'postgresql://:5432' -c 'SELECT datname FROM pg_database WHERE datallowconn ORDER BY LOWER(datname)'\nThat's basically what Postgres.app does to get a list of databases. (If you changed the default port, replace 5432 with the port you are using). Postgres.app includes PostgreSQL 9.5, 9.6 and 10.\nPostgreSQL 10 is the latest version. There is no PostgreSQL 9.8.\nPostgres.app does not automatically upgrade your server. You need to create a new server (using the sidebar) with the version you want, and then migrate your data (using pg_dump or similar).. Sorry about that. It should work again now.\nWe used Cloudflare for HTTPS support, and since Github pages now supports HTTPS natively, I turned Cloudflare off on Friday morning. I expected the switchover to be seamless, but for some reason Github started serving the site with the github.com certificate. Most users were initially not affected, since the nameservers had a long TTL, so most users were still served by Cloudflare.\nAfter a few emails back and forth with Github support, they finally \"nudged\" the SSL generation process on Saturday evening, and it looks like it works now.\nSorry for the inconvenience. I guess we can't expect instant support and zero downtime on a free service.. @captproton @globalbusybee Could you confirm that the website loads with the correct cert again now?. @globalbusybee Lets Encrypt certificates are always valid for only 3 months. Usually Lets Encrypt certificates are renewed automatically every two months.. You mean like step (3) from https://postgresapp.com ?. I'm not sure how that would work... It's possible to run multiple versions of PostgreSQL simultaneously...\nIn general, the client tools are backwards compatible, though, so using \"latest\" works in most cases -- at least that is my experience.\nDo you have a use case where you need to use exactly the same version of psql etc.?. So right now Postgres.app just executes a command like this in the terminal:\n\"/Applications/Postgres.app/Contents/Versions/10/bin/psql\" -p5410 -d \"postgres\"\nAnd if I understand correctly, you prefer it would do something like this instead:\nexport PATH=/Applications/Postgres.app/Contents/Versions/10/bin:$PATH\npsql -p5410 -d \"postgres\"\n...which would set the environment for this session, and allow you to type \\q and use other commands like createdb etc.\nThat sounds reasonable.. The main app is just a \"control center\". The PostgreSQL server is a separate process and keeps running in the background, even when the app is closed.\nThe menu bar app is also a separate helper app, so you can start / stop servers without the main app running.\nThe reason that we split it into multiple apps is that most people want to have PostgreSQL servers running in the background, and don't want the app to always appear in the dock.. Hi there!\nThanks for your pull request!\nHowever, it looks like this is just formatting changes. We do not like to change the formatting without good reason, since it tends to cause merge conflicts, makes using git history harder, etc.\nEspecially if it's just whitespace. There are projects that care deeply about whitespace; we're not one of them. Our policy is to try to use whatever whitespace happened to be used in the code that you are editing, to avoid polluting the git history with whitespace changes.\nAlso, it's a lot of work for us to review pull requests. I appreciate that you're offering to help, but I do not want to spend time reviewing large pull requests that just reformat some code.\nIf you do think that some of these formatting changes are important, please send smaller pull requests with independent changes, and provide some comment explaining why you think we should apply it.. Postgres.app does not migrate your data from 9.6 to 10 automatically. Automatic updates only do bugfix updates.\nIf you want to migrate your server, please do this:\n1) make sure that your version 9.6 server is running\n2) use pg_dump_all to dump your database\n3 ) stop the old server\n4) create a new server with PostgreSQL 10 (open the sidebar in Postgres.app)\n5) use psql to load the dump you created earlier \nAlso, see the docs here: https://postgresapp.com/documentation/migrating-data.html. The password prompt you see after executing the above command is for your computer login password. The sudo command requires your password.\nPostgres.app does not set up a password for the PostgreSQL server. No password is required when connecting from your own computer, and connections from other computers are disabled.\n. If you know what you are doing, you can have multiple PostgreSQL installations on your Mac.\nThe only problem that people kept running into was that they tried to start Postgres.app when a different PostgreSQL server was already running on the same port. This is really confusing, and what most people want is just one PostgreSQL installation.\nMy recommendation is not to worry about the additional PostgreSQL binaries -- as long as you don't try to start two servers on the same port you shouldn't have any issues.\nYou can configure your $PATH to choose which version of psql / pg_dump etc. to use.. I'm not sure what page this would fit on. We don't really have any docs for third party tools like pgloader. But maybe that would be useful. Any suggestions?\n. I found your pull request: https://github.com/dimitri/pgloader/pull/819\nThat's a different project, so I don't have anything to say on that :)\nAnyway, this sounds like a good idea. Thanks a lot!. I guess a team of two or three full time developers might be able to port it in a year or two. Not sure who would pay for them, though?\nWe have no plans to expand to other platforms. We occasionally get requests, but we're already struggling to support a single platform -- I'm not sure how we could expand to other platforms without neglecting the Mac version.. Oops, I just figured out that this is about Postgres.app. In my reply above I thought that this request was about Postico.\nPorting Postgres.app to Linux should be doable. But what exactly are you looking for? Ubuntu comes with apt-get, and it's pretty easy to install different versions of PostgreSQL on Ubuntu.\nWhich specific features of Postgres.app are you missing on Ubuntu?. There's a beta with support for MVT out now! See #412 for details.\nClosing this since it is a duplicate.. Did you create the new cluster with Postgres.app or from the command line?\nIf you created the cluster manually, you can just add it with the \"+\" button below the sidebar, and provide the path of the data directory. Postgres.app will only initialize a new cluster if the data directory is empty -- if you provide an existing data directory, it'll show up in the sidebar.. There's something wrong with your pull request. Can you rebase it on master?. Nevermind, this is just a pull request between two of our branches. This is not how pull requests work. Please just open an issue instead if you don't know know git.. IS your $PATH set up correctly?\nCalling pg_config from the command line should print something starting with:\nbash\nBINDIR = /Applications/Postgres.app/Contents/Versions/10/bin\nDOCDIR = /Applications/Postgres.app/Contents/Versions/10/share/doc/postgresql\n.... This looks good. I don't know why the libpq header can't be found -- it's in the directory /Applications/Postgres.app/Contents/Versions/10/include\nMaybe the build system of osm2pgsql doesn't use pg_config and you need to somehow tell it where the postgresql stuff is? I'm not to familiar with cmake, but the osm2pgsql readme mentions setting  CMAKE_PREFIX_PATH.\nMaybe you need to call cmake with an option similar to this:\nbash\ncmake -D CMAKE_PREFIX_PATH=/Applications/Postgres.app/Contents/Versions/10 ..\nBTW, it should be possible to just install osm2pgsql with homebrew -- it'll install its own version of postgresql, but as long as you don't start a second server the homebrew binaries shouldn't interfere with Postgres.app.. 1) Stop servers\n2) Quit Postgres.app and move it to the trash\n3) Optional: Delete Data Directories (default location: ~/Library/Application Support/Postgres). Oh right, if you followed the instructions from the website, there will be a file in /etc/paths.d. You can remove it. It won't have any effect if you deleted Postgres.app, but you might as well clean up the clutter :). If you know what you are doing, there's no problem with running multiple versions of PostgreSQL on your Mac. (For example, we use docker images and Postgres.app side by side for testing Postico)\nAll you need to make sure is that the servers are running on different ports, and that you are using the correct version of tools like pg_dump (there can be some gotchas even though they are usually compatible). There might already be another PostgreSQL server running on your Mac. Try uninstalling other PostgreSQL installations: https://postgresapp.com/documentation/remove.html. Yes. All the dynamic libraries included with Postgres.app are linked using absolute paths. This is necessary to make sure that other stuff compiled against Postgres.app provided libraries (such as the pg ruby gem, or psycopg, etc) works as expected.\nWe could use relative paths for the dylibs (using @rpath), but then you'd need to use custom CFLAGS when compiling stuff, which is really really hard to get right, and doesn't work well with extension managers like ruby gems, pip, etc.. I've tried building PostgreSQL with LLVM a few months ago but there was some error that I couldn't fix (I don't remember if the problem was building LLVM or PostgreSQL).\nI've not really followed up on it since as far as I understand JIT currently only has benefits in a few use cases. But of course it would be sweet if Postgres.app supported it, so people could try it and give feedback -- JIT support is probably going to become a lot more useful in future versions.\nHave you been able to build PostgreSQL with LLVM on the Mac?. Yes, I will give it another try.\nBTW, I've decided to start building with macOS 10.11 now (instead of 10.10) since 10.10 is causing issues for some libraries (gdal), and according to my stats only 0.6% of users still run 10.10.. Short update: I've managed to build PG 11 with JIT support. It makes the package quite a lot bigger (more than 100MB), so I'm not sure if we should ship it, since most people won't turn it on anyway.\nI'm considering to make two versions of Postgres.app, one with JIT, and one without. Most people don't need JIT, but since it's the hot new thing it would be nice if there was an easy way to try it, to see if it makes a difference for your queries.... Indeed, I didn't include all the LLVM dylibs and tools, since they are only needed at build time. They are a few GB in size, so including them is out of the question.\nAll the bitcode .bc files are about 20MB, and in addition to that there is llvmjit.so, which is around 107MB in size. I don't know why it is so big, maybe it include debug symbols or something, I haven't checked if there's a way to make it smaller. If I don't include llvmjit.so, then PostgreSQL silently doesn't use JIT (no error message, but no JIT according to EXPLAIN ANALYZE)\notool -L probably doesn't show the llvmjit.so dependency since PostgreSQL loads shared libraries dynamically at runtime.\nAside from the size issue, the bigger problem is that building extensions is no longer possible if we enable --with-llvm, but don't include LLVM.. Thanks for the bug report!\nWhat version of macOS are you on?\nWhat version of Postgres.app are you using?. So I've been playing around with this, and the problem seems to be caused by missing permissions on macOS Mojave.\nYou have to enable access for Postgres.app in System Preferences -> Security -> Privacy -> Universal Access and in System Preferences -> Security -> Privacy -> Automation.\nMojave made Apple Script practically unusable.\nI guess the best thing to do would be to throw away the Apple Script, and just show a text field with the command for copy/pasting into terminal. Less convenient, but then at least we won't have to bug the user with 3 separate permission dialogs.. @cursologo-gh \nApple Script in Mojave requires a lot of permissions. Either you enable all the permissions in System Preferences (as stated above).\nAlternatively, you can just type the command to connect in Terminal yourself:\nJust type the following command to connect to the default database:\nbash\n/Applications/Postgres.app/Contents/Versions/latest/bin/psql\nIf you have configured your $PATH, you can just type:\nbash\npsql\nIf you want to connect to a different database, you can type\nbash\n/Applications/Postgres.app/Contents/Versions/latest/bin/psql databasename\nIf you changed the default port, you can type\nbash\n/Applications/Postgres.app/Contents/Versions/latest/bin/psql -p 5444\n. We're planning to raise the system requirements for Postgres.app to macOS 10.12 as soon as PostgreSQL 11 is released. Besides PostgreSQL itself, I also failed to build libgdal on 10.11 and the latest version of ICU.\nI'll continue to provide older versions of PostgreSQL for earlier versions of macOS, but if you want Postgres.app with PostgreSQL 11 you'll need to upgrade to a newer version of macOS.\nDo homebrew or MacPorts support PostgreSQL 11 on macOS 10.10?. I don't know how EnterpriseDB did it. Building on old versions of macOS is generally the most reliable way to avoid compatibility issues. But you can build on newer versions of macOS, you just need to copy the SDK from an old version of Xcode.\nAnyway, the reason why I decided to raise the requirement is that 4 packages were having issues (libgdal, ICU, PostgreSQL itself, and plv8). I just didn't have enough time to figure out how build all that for older OS.... I assume you mean PostgreSQL version? Just execute SELECT VERSION(). From the docs (https://postgresapp.com/documentation/troubleshooting.html):\nCould not translate host name \"localhost\", service \"5432\" to address: nodename nor servname provided, or not known\nUsually this error is caused by broken /etc/hosts file.\nThe problem could be a missing localhost entry, syntax errors or incorrect whitespace.\nFor reference, here is what this file should look like by default on macOS:\n##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost\n\n. You've probably edited your /etc/hosts file.\nType cat /etc/hosts in Terminal to see the contents of the file.\nIf it doesn't look like the file above, it might be broken.\nYou can edit the file with a Text Editor.. Looks like the file is empty.\nYou can edit the file like this:\n\nType sudo nano /etc/hosts in Terminal\nPaste the following text:\n```\n\n\nHost Database\n\nlocalhost is used to configure the loopback interface\nwhen the system is booting.  Do not change this entry.\n\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost \n``\n3. Press ctrl-O, then enter to save your changes\n4. Press ctrl-X to exit\n5. Now typecat /etc/hosts` again to make sure that the hosts file is now fixed. Previously Postgres.app always downloaded the latest version including new major versions. That was convenient, but had the downside that the app kept getting bigger and bigger (eg. you download Postgres.app with 9.5 and 9.6, then it updates and include PostgreSQL 9.5, 9.6, and 10, this year we would have 9.5, 9.6, 10, and 11...)\nAt some point the app gets so big that it is a problem (eg. the latest version with all the binaries has an uncompressed size of 870MB!)\nSo I changed it that the automatic update only installs minor updates. If you want the next major version of PostgreSQL, you need to download it manually.\nIt's a bit confusing, but I'm not sure how else we can do that? I want to have easy updates, but lots of people have limited disk space and / or slow internet speeds, so we can't keep growing Postgres.app. And throwing out old versions in automatic update also isn't a good idea, because then we'd break installations of people using them...\n. @edbond In that case, you should do the following:\n1) Make sure the old version of Postgres.app is runninng\n2) Create a dump of your PG 10 database using pg_dumpall (see https://postgresapp.com/documentation/migrating-data.html and https://www.postgresql.org/docs/current/static/app-pg-dumpall.html)\n3) Quit Postgres.app and install the new version\n4) Create a new server with version 11\n5) Restore your previously generated dump file\n. Did you try a blank password? I recall that PGAdmin always asked for a password even though none was needed.. Can you connect with psql?\nAlso, are you sure that Postgres.app is running on the port you  are trying to connect to? Often these issues are caused by other PostgreSQL installations running on the port you expect. (eg. homebrew)\nYou can check which PostgreSQL servers are running on your computer using this command:\nbash\nps x | grep postgres\nA line like this would indicate that Postgres.app is running on port 5432:\n31287   ??  S      0:00.06 /Applications/Postgres.app/Contents/Versions/11/bin/postgres -D /Users/jakob/Library/Application Support/Postgres/var-11 -p 5432. Looks like you don't have a PostgreSQL server running on your Mac.\nWhat happens when you open Postgres.app? Does your server show as running?. It looks like you have been using a very old version of Postgres.app, which we don't support any more.\nYou might be able to get it running installing Postgres.app 9.1.0.0 from here: https://github.com/PostgresApp/PostgresApp/releases/tag/9.1.0.0\nThen you can create a dump of your server using pg_dump (see https://postgresapp.com/documentation/migrating-data.html), and upgrade to a newer version.\nDo you need to recover data from your old version of Postgres.app? If you don't need any of your old data, I recommend to delete your data directory, delete all copies of Postgres.app, and start with a new version of Postgres.app. OK. I think we need to make it more clear how to add multiple servers, lots of people stumbling over that.\nI'll close this issue, feel free to reopen it if you have further questions!. What's the result of the following command:\nbash\nls -l /Users/annecarlson/Library/Application Support/Postgres/var-10. What about var-10 directory itself?\nbash\nls -l \"/Users/annecarlson/Library/Application Support/Postgres\"\nWhere is that _postgres group coming from?\nAre you using the Postgres.app GUI?. Looks like you need to chown that dir itself\nbash\nchown -R annecarlson  \"/Users/annecarlson/Library/Application Support/Postgres\". (probably need to prefix that with sudo). (Postgres.app runs as your user, it doesn't use the _postgres system user.). The group shouldn't matter. Postgres.app runs under your user, which I assume is \"annecarlson\". You can type whoami at the command line to see your user name.\nSome other PostgreSQL installations may create a \"postgresql\" user, and run the server using that user, but we don't do that because it causes lots of headaches.\nPostgreSQL needs to be allowed to create a file named \"postmaster.pid\" inside the data directory. Here's what permissions look like on my Mac:\nbash\n$ whoami\njakob\n$ ls -l ~/Library/Application\\ Support/Postgres\ndrwx------  26 jakob  staff   832 Sep 20 16:27 var-11. Hi @vindobonensis!\nDid you manage to get it running already?\nIf not, I have a few more tips:\nWhen you open Postgres.app, what does it say? Here's what it should look like if the server is running:\n\nAs soon as it is running, you should be able to connect with pgAdmin 4. For the user name, you can use either \"postgres\" or your system user name (Postgres.app creates two users when initializing the database). By default, the PostgreSQL server should be configured to not require a password and trust connections from localhost.\nHere's what the connection settings in pgAdmin 4 should look like:\n\n\nIf you still get an error stating that the password authentication has failed:\n - check the host name / port is correct\n - check the server log (in Postgres.app, go to Server Settings... -> Log file -> Open). What does it say why the authentication failed?\n - if you have modified pg_hba.conf, make sure to restart the server\n - make sure there is only one PostgreSQL server running on your host. You can do use the following command to find PostgreSQL servers running on your Mac: ps ax | grep postgres. Expected output: \n\nIf you find the cause of your issues, please let us know. It would also be great to hear if there's anything we can do to improve our docs, etc.. @vindobonensis Did you find the solution to your problem? If so, please let us know!. OK. First of all, let's make sure that you are running the PostgreSQL server included with Postgres.app. You can do that with the command ps ax | grep postgres.\nThe output should look like this:\n$ ps ax | grep postgres\n81790   ??  S      0:01.44 /Applications/Postgres.app/Contents/Versions/11/bin/postgres -D /Users/jakob/Library/Application Support/Postgres/var-11 -p 5432\n81792   ??  Ss     0:00.03 postgres: checkpointer       \n81793   ??  Ss     0:00.30 postgres: background writer       \n81794   ??  Ss     0:00.26 postgres: walwriter       \n81795   ??  Ss     0:01.31 postgres: autovacuum launcher       \n81796   ??  Ss     0:04.23 postgres: stats collector       \n81797   ??  Ss     0:00.02 postgres: logical replication launcher       \n90641 s002  S+     0:00.01 grep postgres\nFrom the first line you can see which version of PostgreSQL is running, and if the data directory is what you expect.\nSecondly, it could be that Postgres.app failed to create a user with your name. In that case:\n\nConnect to PostgreSQL with the user postgres like this: psql -U postgres\nThen list all databases with the command \\l (backslash-ell)\nIf no database with your name exists, type create database maniesha; (don't forget the semicolon)\nThen list users with the command \\du. If no user with your name exists, create a user with the command create user maniesha superuser;. If a user exists, but it's not a superuser, you can change that with the command alter user maniesha superuser;.\nTo get help for other commands in psql, type the command \\?\nTo exit psql, press Ctrl-D\n\nHopefully that's enough to get you started. For more info, make sure to review the PostgreSQL documentation. It is very comprehensive:\nhttps://www.postgresql.org/docs/current/index.html. Can you try executing ps ax | grep postgres at the command line and post the output?. Postgres.app does not include pg_routing.\nThere's already an issue requesting the addition of pgrouting (#288), so I'm closing this as a duplicate.. Click the icon in the bottom left to show the sidebar, then click the + icon to add a new server.\n\n. Thanks for the Pull Request. Postgres.app is now ready for Dark Mode!\nUnfortunately we're still building Postgres.app on macOS 10.13, so we won't support dark mode just yet. But as soon as we upgrade our build machine, Postgres.app will (hopefully) support dark mode.. When is this necessary?\nI thought that Mojave does not require permission to control apps that are packaged in the same bundle?\nIn my testing, the menu items from the helper app work fine even without the permissions.\nCould it be that this issue only occurs when running the menu helper from Xcode and it tries to control the app in /Applications?\nCan you provide steps to reproduce the issue that this Pull Request fixes?\nIf Mojave really asks for permission to control the main app from the helper app, we would have to use something else than Apple Script for communicating between the two.. Well, for a start, /Applications/Postgres.app/Contents/Versions/11/share/man/man1/pg_config.1 is the man page about the pg_config script, not the pg_config script. The config script is in /Applications/Postgres.app/Contents/Versions/11/bin/pg_config\nBut typically, you don't need to provide --with-pg-config if your $PATH is configured correctly. See the docs about configuring the $PATH\nUse the command which pg_config to check if the path is correctly. The expected output is /Applications/Postgres.app/Contents/Versions/latest/bin/pg_config or /Applications/Postgres.app/Contents/Versions/11/bin/pg_config.\nYou only need to provide --with-pg-config if you want to use a different pg_config than the one on your $PATH.\nFurthermore, you don't need to provide --with-pg-include, since pg_config has that setting. --with-pg-include is only useful if you want to use a different include directory than the one defined in pg_config (you don't).\nLast, but not least, I think on some OS versions you had to use ARCHFLAGS=\"-arch x86_64\" gem install pg, but I don't think that is necessary if you use RVM.. Hi! We just released a new version of Postgres.app, and I think it should fix this issue!. I assume this problem is fixed now? I'm closing this issue. If you still have this problem with the latest version of Postgres.app, please reopen the issue!. PostgreSQL 11.2 will be released tomorrow. Postgres.app will be updated in time.. We've just released Postgres.app 2.2.2 with PostgreSQL 10.2\nTo update, please open Postgres.app, and select \"Check for updates\" from the Postgres menu.\nSorry for the delay!. It sounds like you already have a PostgreSQL server running on your Mac.\nYou can use this command to check:\nbash\nps ax | grep postgres\nYou may want to uninstall the other PostgreSQL server before running Postgres.app.\nCheck these page in the docs: Removing other Installations \n(It is of course possible to run multiple installations of PostgreSQL, but it doesn't sound like that's what you want to do). I assume everything works for you now? I'm closing this issue -- feel free to reopen if you need further assistance.. Holy shit, they backported the PG_SYSROOT / -isysroot CPPFLAGS !#$##%!&*. I forgot all about that.\nThis is annoying. I'll need to make new builds of Postgres.app or people won't be able to build extensions.\nBuilding extensions should work with version PostgreSQL 11 -- I added PG_SYSROOT=no-sysroot to avoid exactly this issue. As soon as I have time I'll make new builds of PostgreSQL 9.4 - 10.. It's included. You can enable the extension using:\nsql\ncreate extension plpythonu;\nThen you can test if it works like this:\nsql\ndo language plpythonu $$\n    plpy.notice(\"It works!\")\n$$;\nIt's Python 2 only, unfortunately.. Not at the moment. macOS only comes with Python 2, so I think we would need to include Python 3 with Postgres.app, which I'm not sure how to do.. This means that you have a version of Postgres.app that doesn't include the PostgreSQL binaries for your data directory.\nYou have a few possibilities:\n\n\ndownload a version of Postgres.app that includes the PostgreSQL version of you data directory\n\n\ncreate a new data directory (click the button in the lower left to show the sidebar, then click the plus button)\n\n\nmigrate your data directory to a newer version (see docs for details). As @anthonydb said, you need to execute the command \"CREATE EXTENSION tablefunc\" to install it.. Yes, we should probably improve the docs to make it more clear. The automatic update funtion only updates the PostgreSQL binaries, it does not update your data directory.\n\n\nTo upgrade from version 10 to version 11:\n1) Use pg_dumpall to create a dump of your database\n2) Download a new version of Postgres.app with PostgreSQL 11\n3) Restore the dump. I think there's a cask for it, so you should be able to install it with:\nbash\nbrew cask install postgres\nYou still need to launch it to create a server, there's no CLI interface for Postgres.app. If you want to automate installation on a lot of machines, you could probably create a script that calls initdb manually to set up the server, and use the defaults command to set Postgres.app preferences before launching it.\n. I'm not sure how this is related to Postgres.app. Could you explain in more detail what software you are using and what you are trying to do?. Using an instance variable (_templateOffImage) causes a strong reference to self. To avoid the strong reference, you'd have to do something like AppDelegate *strongSelf = weakSelf; if (strongSelf) {strongSelf->_templateOffImage.template=darkMode;}\n. Instead of self you have to pass the observer object returned by addObserverForName:object:queue:usingBlock:.\n. would probably be better to use a more descriptive name (eg. _interfaceThemeObserver)\n. While it works in this case, you should in general  use objectForKey: instead of valueForKey:, because the latter is a KVC (key-value-coding) method. It would cause a problem if the string contained characters that have aspecial meaning in KVC, eg . or @. \nAlso, for safety, don't use isEqualToString: on type id. Just use isEqual:. Otherwise someone could make Postgres.app crash by setting the default to a number.\n. This change would break the link on the postgresapp.com website. The website is setup so that the /docs/ directory is at the root.\n. ",
    "jhdavids8": "Hey Matt, thanks for replying. I'm back up and running with Postgres, but back through the EnterpriseDB package again. I've actually tried what you mentioned (installing through brew) but with no luck. Also, even if the brew install gave me the libpq library as you mention, wouldn't removing the brew-installed postgres after installation of the PostgresApp (as per the PostgresApp documentation) leave me back at square one, without that libpq library??\nAnyway, I'll just continue to use the EnterpriseDB package since it's working for now. I guess I'm just wondering if the PostgresApp should account for a missing libpq library on the installing system somehow, since PostgresApp's goal (I believe) is to get Postgres up and running on a Mac as painlessly as possible. Although I have no idea if that's really PostgresApp's responsibility. Food for thought I suppose. Thanks for your help!\n. Yep, I definitely see this too. Went back and installed the previous release, and it worked just fine. On Mac OS X 10.7\n. ",
    "djq": "Same error here on Mac OS X Lion 10.7.4 and the 'brew install libjpeg' fix worked\n. ",
    "christophlingg": "had the same issue with Mac OS X 10.8.2 and PostgresApp Version 1.0 (11).\nBTW: Great project and thanks for your work!\n. ",
    "JeffPaine": "brew install libjpeg\nOn Mac OS X 10.8.2 solved this issue for me as well. Thanks @djq !\n. ",
    "lxcid": ":+1: for @djq solution.\n. ",
    "EconGeo": "I have had several similar errors with postgresql.app.  I have found that finding the missing library in question in the contents of the postgresql.app folder and then putting a dynamic link to them wherever postgis was looking for them has solved a lot of these issues. I imagine this is exactly what the homebrew installs are doing as well, creating dynamic links to the right library so that postgis can find them.  I followed this approach when installing ODBC libraries to have R and postgres talk to each other with success by following the error messages and creating a dynamic link where postgresODBC was looking for the library.  So, for example  \nln -s /path/to/postgres.app/library /usr/local/wherever the new extension is looking for the library/\nhope this helps as you install more additions\n. ",
    "adriano-di-giovanni": "\n. ",
    "rjchacko": "I just installed Postgres.app, and tried running shp2pgsql and got the following message:\ndyld: Library not loaded: /Users/zeke/Desktop/PostgresApp/Postgres/Vendor/postgres/lib/liblwgeom-2.0.2.dylib\nReferenced from: /Applications/Postgres.app/Contents/MacOS/bin/./shp2pgsql\nReason: image not found\nTrace/BPT trap: 5\n. ",
    "akavlie": "I got the same error as rjchacko\n. ",
    "alvaromb": "I'm also getting this error.\n. ",
    "ashleybye": "I am having the same issue:\ndyld: Library not loaded: /Users/zeke/Desktop/PostgresApp/Postgres/Vendor/postgres/lib/liblwgeom-2.0.2.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/bin/shp2pgsql\n  Reason: image not found\nTrace/BPT trap: 5\n. ",
    "nmaisonneuve": "+1\n. same error \ntry export DYLD_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib/\n. ",
    "mejackreed": "+1\n. This worked for me\n. ",
    "dreynolds": "+1\n. Thanks for the feedback @jakob, I think I can handle most of your points. The only thing I'm having trouble with is dealing with the errors. Is there a precedent in the code already or some other pointer you can give me?\n. @jakob thanks for the feedback anyway. I'll probably add the feature I want and maintain my own copy for the time being. I'll also split off the status menu item issue into it's own ticket and maybe work on that.\n. ",
    "almostabc": "Malte, the default db username is your current username($USER). You should be able to connect to the db via PGadmin or Induction without a password. In PGAdmin this should look like:\nName: \nHost: localhost\nPort: 5432\nMaintenance DB: $USER\nUsername: $USER\n. ",
    "maltebeckmann": "Hi! Thanks, that worked! Didn't occur to me at 4 am in the morning but perhaps this is worth noting in the documentation?\n. ",
    "mokolabs": "Hmmm. When I try to connect via Induction, I'm getting this error:\nfe_sendauth: no password supplied\nDo we need to set a password for our username first?\n. Hey, @mattt. This still doesn't work.\nDespite following the documentation very closely, I'm still unable to connect to the Postgres.app server... either from the command line or using GUI tools (with both Induction and PGAdmin3).\nIn all cases, I get an error saying that I haven't supplied a password.\n. This symbolic link fix worked for me too. Thanks, @jasonferrier!\n. Sorry for the confusion, Jakob. I realized the Login Item was not needed a few minutes after I opened this issue, but I forgot to post an update.\nBut, even after removing the Login Item, I still see the main window for Postgres.app when I reboot.\nThe Automatically start Postgres on Login option is enabled in preferences within Postgres.app. I have also verified that the launch agent is installed and working correctly.\nSo... I reboot my machine. Postgres.app is launched. And the main window is visible.\nIs that a bug? Or is that the current intended behavior?\nI'm hoping that I can launch Postgres.app on restart -- without ever seeing the main window -- as Postgres.app worked in previous versions (for me, at least).\nThat's the point I was trying to make above. For menu bar apps, they should really stay hidden until the user interacts with them.. Okay... I did some more digging and I think this problem is unique to my setup.\nI have a multi-monitor machine and I'm using the Hocus Focus utility to auto-hide app windows after a certain period of time.\nOn reboot, Postgres.app launches and does it thing. But so does Hocus Focus. So I suspect that Hocus Focus inadvertently opens the main window for Postgres.app when it launches -- only to later hide it 30 seconds later (which is the default setting for when to hide an app).\nI've tested Postgres.app on other machines that don't have Hocus Focus installed and it's working fine on those machines, so I'm going to close this issue.\nSorry for the trouble! :). Okay... I did some more digging and I think this problem is unique to my setup.\nI have a multi-monitor machine and I'm using the Hocus Focus utility to auto-hide app windows after a certain period of time.\nOn reboot, Postgres.app launches and does it thing. But so does Hocus Focus. So I suspect that Hocus Focus is messing up the custom window size for Postgres.app.\nI've tested Postgres.app on other machines that don't have Hocus Focus installed and the custom window size is saved correctly on those machines, so I'm going to close this issue.\nSorry for the trouble! :). ",
    "dacresni": "you may also have to actually replace 127.0.0.1 with the word localhost\n. ",
    "mdespuits": "This is really a big issue because I cannot do any work at work and any help would be appreciated! Please!\n. Ok. Issue resolved. It was a memory allocation issue (remnant of homebrew installation). All I did was run\nsudo sysctl -w kern.sysv.shmall=65536\nsudo sysctl -w kern.sysv.shmmax=16777216\nand it worked like a charm.\n. @cabgfx I'm glad the fix worked. However, I don't remember what fixed the issue. I think I just did a bunch of digging around on Google about completely removing Postgres in a Homebrew install. I don't remember it working right away, but somewhere along the line, it just works...\nI know. Not very helpful. I didn't have a clue what I was doing when doing my searching around and still don't. Wish you the best!\n. @cabgfx Glad you were finally able to get that fixed!\n. @eezis Thanks! I will definitely give this a try next chance I have. I did run into this issue again not too long ago and didn't have time to research solutions. I will post my result here.\n. @leods92 That is very interesting. In fact, I am running X11 on my machine. I wonder if that is actually a part of the actual issue. I will try to remove X11 on my machine (I'm not using it anymore) and see if it makes any difference and report back.\n. I was running X11 for Inkscape. I removed inkscape, logged out, and re-logged in. I opened a terminal and ran this:\n$ psql\npsql: could not connect to server: No such file or directory\n    Is the server running locally and accepting\n    connections on Unix domain socket \"/tmp/.s.PGSQL.5432\"?\nThen I opened Postgres.app and did the same thing.\n```\n$ psql\npsql (9.1.4)\nType \"help\" for help.\nmattbridges=# \n```\nSo, I don't seem to have the problem anymore, but I don't know if it was because of Inkscape or something else.\nAlso, I put this in my ~/.bash_profile to make it easier on myself for anyone still experiencing the problem\nalias postgres_fix=\"sudo sysctl -w kern.sysv.shmall=65536 && sudo sysctl -w kern.sysv.shmmax=16777216\"\nHope this helps!\n. Hrmm. Not sure how to help anymore. I don't have the issue and I just upgraded to the latest version of Postgres.app. I'll keep following here to see if anything develops...\n. @davbeck Has there been a solution to work around X3 blocking localhost?\n. I don't have mine either. It was critical that I be able to work, so I no longer have X3\n. ",
    "jaymiejones86": "Hmm I am getting the same issue, PATH is setup correctly but which shows /usr/bin/psql still and not the postgressapp path.\npsql: could not connect to server: No such file or directory\n    Is the server running locally and accepting\n    connections on Unix domain socket \"/var/pgsql_socket/.s.PGSQL.5432\"?\nNo idea whats going on. Not using homebrew either, this is a fresh install of OS X 10.8\n. ",
    "mieko": "This occurred to me immediately after upgrading to OS X 10.8.2.  Postgres.app reports it's running on 5432, lsof and netcat show it's not, but the process is running.  Matt's shared memory tweaks and a relaunch brought it right up.\nPostgres.app is the first and only PostgreSQL install on this machine, so this is unrelated to homebrew remnants. \n. ",
    "cabgfx": "@mattdbridges I've had the same issue as you, moving from Homebrew to Postgres.app. (OSX 10.8.2)\nYour memory tweak worked for me as well.\nThe only issue is, I now have to repeat it every time I want to connect to Postgres on port 5432.\n(eg. starting my Rails app).\nHave you had this issue as well? Any pointers would be greatly appreciated, thanks in advance!\n. @mattdbridges Thanks anyway!\n. @mattdbridges FWIW, I actually ended my woes re: that memory tweak, by completely uninstalling Postgres.app (incl. plist's and related cruft) and re-installing PG (9.2.1). w/ Homebrew.\nDon't know if it's helpful, but hey\u2026\n. ",
    "eezis": "If anyone is having this problem, this is what worked for me: http://stackoverflow.com/questions/12028037/postgres-app-could-not-start-on-port-5432/13847738#13847738\n. ",
    "bryanchriswhite": "I've been successfully using the postgress.app that Postgres provides on OSX 10.7.5. After a reboot, and more importantly, not ever having use homebrew's postgres, I got this error. Matt's memory fix did the trick, this was weird and completely unexpected. Will report back if problem persists.\n. thats is indeed interesting, I believe I too was running  X11 for GIMP... \n. This issue happened to me again today after restarting my mac, no X11 in sight this time :-/\n. ",
    "MrHubble": "I was in a similar situation to @bryanchriswhite. I have never installed or used homebrew. When I installed postgres and postgres.app and tried to run postgres.app the little elephant was saying that it could not connect on port 5432. I found the solution that @eezis mentioned from stackoverflow first but this did not work for me. I then tried Matt's memory fix and it seems to be running well. Thanks for the help everybody.\n. ",
    "leods92": "@mattdbridges' solution solved my problem but only temporarily; some hours later the problem was happening again. I read the SO question posted by @eezis and found out that one user had the same problem when running XQuartz/X11. At the time I had the problem I was running Inkscape which requires XQuartz and when I closed it and restarted Postgres.app psql worked again. Weird, eh?\n. Running 9.2.4.4 on Mavericks just fine.\n. ",
    "ashrocket": "Update Postgres App's config.  You most likely have something in .bashrc which is telling psql to use sockets.\nEdit ~/Library/Application\\ Support/Postgres/var-9.5/postgresql.conf\nor wherever you're Postgres App is getting it's configuration from, and set a valid value for\nunix_socket_directories=\nThen restart Postgres App..\nhttp://iamvery.com/2013/06/17/postgresapp-with-unix-socket.html\n. ",
    "humancopy": "This is what helped me (mainly with getting Ruby to connect). Put it in your .bashrc or .bash_profile.\nshell\nexport PGHOST=localhost. ",
    "rhys-vdw": "Thanks @humancopy! That worked for me.. My apologies. This was due to the change from Postgres 9.4 to 9.5.. ",
    "zeke": "Oh yeah it's 1.0 (11). I was misinterpreting the filename: Postgres-11.zip\n. I never recovered that lost development data.\n. +1\n. ",
    "leematos": "Did you guys ever figure this out? I created a full disk backup and now I'm trying to restore my db from the backup but  ~/Library/Containers/com.heroku.Postgres/Data/Library/Application\\ Support/Postgres/var on the backup disk is showing the files haven't been modified for 4 months? (I was using the DB until about a week ago)\n. I found mine! It was in Library/Application \\Support/Postgres/. An OSX dev helped me find it as he explained containers are for sandboxed apps.\n. ",
    "billrobertson42": "Or perhaps 9.2.\n. ",
    "dkalisch": "Thanks for your work, matt. It seems to be a mass, that's what I figured out as well... But I am not a programmer, so maybe someone can help with that...?\n. An alternative is to use the grouting from http://www.kyngchaos.com/software/postgres (make sure that the Version of postgres matches the one grouting is build for!)\nThen you only have to do the following 3 adjustments:\nBefore you install the pgrouting package set the path of the Postgres.app to the expected path. ln -s /Applications/Postgres.app/Contents/Versions/9.3/ /usr/local/pgsql-9.3\nAfter installing, create a symbolic link to the installed grouting extension: ln -s /Applications/Postgres.app/Contents/Versions/9.3/share/extension/pgrouting* /Applications/Postgres.app/Contents/Versions/9.3/share/postgresql/extension\nAnd last but not least, in /Applications/Postgres.app/Contents/Versions/9.3/share/extension/pgrouting--2.0.0.sqlchange $libdir/to /Applications/Postgres.app/Contents/Versions/9.3/lib/ (adjust 9.3 with the correct version!)\nAfter that you can install posts and grouting with\nCREATE EXTENSION postgis;\nCREATE EXTENSION fuzzystrmatch;\nCREATE EXTENSION postgis_tiger_geocoder;\nCREATE EXTENSION postgis_topology;\nCREATE EXTENSION pgrouting;\nand verify that everything works fine:\n```\nSELECT postgis_full_version();\nPOSTGIS=\"2.1.3 r12547\" GEOS=\"3.4.2-CAPI-1.8.2 r3921\" PROJ=\"Rel. 4.8.0, 6 March 2012\" GDAL=\"GDAL 1.10.0, released 2013/04/24\" LIBXML=\"2.9.1\" LIBJSON=\"UNKNOWN\" TOPOLOGY RASTER\nSELECT * FROM pgr_version();\n version |       tag       | build |  hash   | branch | boost\n---------+-----------------+-------+---------+--------+--------\n 2.0.0   | pgrouting-2.0.0 | 0     | f26831f | master | 1.54.0\n(1 row)\n```\nHappy routing :-)\n. @dassouki: That means that you didn't set the symbolic link:\nln -s /Applications/Postgres.app/Contents/Versions/9.3/share/extension/pgrouting* /Applications/Postgres.app/Contents/Versions/9.3/share/postgresql/extension\n. ",
    "kachkaev": "Has anyone figured out how to install pgRouting for Postgres.app yet?\n. Awesome, thanks!\n. ",
    "miccferr": "I second kachkaev comment. Any news will be greatly appreciated! \n. ",
    "frewie": "Would be great if that would work at some point. \n. ",
    "mtaptich": "Okay. I haven't fully tested its functionality, but I could possibly have a work around if your are getting 'undefined symbols while linking' errors. \nThis issue was resolved by changing the filepath in /pgrouting/build/CMakeCache.txt: \nI am also getting two warnings:\nsrc/tsp/src/tsp2.c:57:5: warning: implicit declaration of function 'get_typlenbyvalalign' is invalid in C99\n      [-Wimplicit-function-declaration]\n    get_typlenbyvalalign(i_eltype, &i_typlen, &i_typbyval, &i_typalign);\n    ^\nsrc/tsp/src/tsplib.c:115:16: warning: implicit declaration of function 'Rand' is invalid in C99\n      [-Wimplicit-function-declaration]\n        last = Rand ();\n               ^\nSince I am trying to learn pgRouting, I will confirm the work around once I run my first test. Please, feel free to add to my post if you have more experience with this. Cheers! \n. ",
    "dassouki": "@dkalisch , I'm on osx 10.10.2 and although I followed your instructions, I'm having an issue: I can't find /Applications/Postgres.app/Contents/Versions/9.3/share/extension/pgrouting*, however, I can find pgrouting in /usr/local/pgsql-9.3/share/extension/ . Any suggestions or comments? \n. ",
    "ctimmins": "The wrong (but works) way:\nI have another installation of postgres\nll $(which postgres)\n$: /usr/local/bin/postgres -> usr/local/Cellar/postgresql/9.5.2/bin/postgres\nbrew install pgrouting.  Should be located in /usr/local/Cellar/pgrouting/2.1.0_1/share/postgresql/extension\nif you start the postgress.app and run ps aux | grep postgres you can see the process running that looks like /Applications/Postgres.app/Contentents/yada/yada -D <some config directory>.  Now kill it.\nrun postgres -D <some config directory from above>\nnow go into the psql shell  and create extension pgrouting\nshould work and you should be all set to use it from postgres.app next time you run the server\n. ",
    "RP-3": "@ctimmins Lifesaver!\nMight be useful for everyone else, make sure your postgres.app and alternative installation are of the same minor version. \nSome commands that might be useful if juggling homebrew's postgres and postgres.app:\nbrew list services\nbrew switch <some other version of postgres>\nbrew search postgresql\n. ",
    "Fivelfivel": "@ctimmins \njust confirming this worked for me too. thanks!!. ",
    "coderberry": "I have created some new status bar icons, including retina supported ones.\nhttps://www.dropbox.com/sh/pje5oepp5rav7fm/oTWJXxUUYn\n. I would love to make the change and commit it as a pull request but I think I need a developer paid account to do so. It's asking me for one when I try to build it.\n. ",
    "simonwhitaker": "Nice work! Love it. :)\n. ",
    "turadg": "72 includes a pull request with a HiDPI icon. It's better looking, IMHO. It also links to directions to enable it before the next app release:\nhttp://blog.crowdint.com/2012/10/26/postgres-app-retina-status-bar-icon.html\n. @dabit thanks! it's the little things ;)\n. Duplicate of #72 (and #55)\n. @mattt sounds good, thanks\n. ",
    "snowboy856": "Hi, I am also having this problem. I am also trying to get Postgres.app to listen for connections from other computers on the same network. I do not have a ~/Library/Containers/com.heroku.Postgres/ folder, but I do have a ~Library/Application Support/Postgres/var/ folder. I tried editing the postgresql.conf and pg_hba.conf files there and then quiting and restarting Postgres.app but that didn't seem to work. For confirmation I also tried changing the port to 5435 but no matter how many times I quit and restart Postgres.app the change is not applied.\nAm I editing the correct files? I am running OS X Server 10.8, maybe is there some kind of conflict between Postgres.app and OS X Server's built-in Postgres server? I was trying to create another instance of Postgres to run our billing software that is separate from OS X's native Postgres server because I was trying to avoid breaking Profile Manager and other system services that depend on OS X Server's built-in Postgres server. Of course, if there is a better way to go about this I appreciate any suggestions. :)\n. ",
    "splix": "Same issue. Trying to edit ~/Library/Application Support/Postgres/var/postgresql.conf to use different port, but seems that app ignores this option.\n. ",
    "sguillemette": "I have exactly the same problem. Is there anyone who knows the answer? \n. ",
    "leospaul": "I have the same problem. That is to say: the changes are permanent, but are not reflected in the menu/status bar.\nI changed the port to 5433 in ~/Library/Application Support/Postgres/var/postgresql.conf, and now I can connect at port 5433. But the elephant in the menu bar still says \"Running on Port 5432\".\nOS X Server, 10.8.2.\n. ",
    "lucianocheng": "I'm having an issue where I can't even change the port number after modifying ~/Library/Application Support/Postgres/var/postgresql.conf.\nIt looks like the port number is being passed to the command line, on my Macbook Pro the output of ps looks like this:\n9152 39299     1   0 11:16PM ??         0:00.02 /Applications/Postgres.app/Contents/MacOS/bin/postgres -D /Users/cheng/Library/Application Support/Postgres/var -p5432\nIt looks like the 5432 default is defined in PostgresConstants.h and passed to the postgres arguments in PostgresServer#startOnPort.  The arguments passed to the command line always override the parameters in postgresql.conf, see item 18.1.3 in the Postgres 9.2 config docs\nI'd really like to get around this to run it on a different port.  I can't find a way to do this, but if @leospaul was able to do it 3 days ago I suspect there is a way.  I'm also not a ObjC expert so I suspect I might be missing something.  Any ideas? \n. ",
    "pboling": "FIXED IT:\n```\nweb[master]% gem uninstall pg\n...\nSuccessfully uninstalled pg-0.13.2\nweb[master]% gem install pg\nFetching: pg-0.14.0.gem (100%)\nBuilding native extensions.  This could take a while...\nSuccessfully installed pg-0.14.0\n1 gem installed\nweb[master]% bundle update pg\n...\n```\nREASON: I had installed the pg gem prior to installing and setting up PostgresApp.  I had read somewhere that I would need to install the pg gem after installing PostgresApp, and I guess it finally clicked.  Uninstalled old, installed new, which bound itself to PostgresApp, and now Rails is happy - 5 tests, 6 assertions, 0 failures, 1 errors, 0 skips\n. So it seems that out of the box the current Postgres.app (v9.2.4.0) is not compatible with Ruby development utilizing the pg gem.  Is this a correct analysis of the current state of things?  It seems to be what I've just experienced on my team.  None of the solutions we tried worked, and we were unable to find the old 9.2.2 Postgres.app online, so now we are Airdropping it everywhere.\nPostgresApp v9.2.2.0 works.\n. This bit my ass too!  Thanks for finding it! :+1: \n. ",
    "Nedomas": "I get this error all the time when creating a new rails app. I'm not sure if this is a problem caused by earlier postgres versions I had installed or is it a bug in PostgresApp. My workaround is to \"createuser -s -U $USER\" and enter \"adam\". \n. ",
    "adamgreenhall": "I get an error:\ncreateuser: could not connect to database postgres: FATAL:  role \"adam\" does not exist\n. I created myself a role using:\npsql -U postgres\npostgres=# create role adam with superuser login createdb;\nI can now login to psql as adam and the app reports a running status.\nAdding this sort of problem to the documentation would be nice.\n. ",
    "StephenOTT": "What is causing this problem?\n. ",
    "af": "Not exactly what you're asking for, but you could write a little command line alias that runs psql -c \"show hba_file;\", parses the output, and then opens the file in your editor. \nYou can also replace hba_file with config_file above if you want to edit postgresql.conf instead.\n. ",
    "dserodio": ":+1: \n. Apparently there's some problem with auto-update then. I just checked \"About Postgres\" and it said \"Version 1.0 (11)\", and \"Check for Updates\" replies \"Postgres 1.0 is currently the newest version available.\"\n. ",
    "saturnflyer": "versions of PostgresApp track PostgreSQL. This should be closed\n. ",
    "greinacker": "It seems the version does track postgres version now...closing.\n. Hmm...I didn't even know there was an auto-update. :) I just went to http://postgresapp.com and downloaded the current version.\n. ",
    "kaleb": "I had the same issue...\nsudo ln -s /Applications/Postgres.app/Contents/MacOS/lib/libjpeg.8.dylib /usr/lib/\nseemed to work\n. ",
    "stevevance": "I have a similar issue, but it has to do with libtiff and libgdal:\nERROR:  could not load library \"/Users/stevevance/Downloads/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\": dlopen(/Users/stevevance/Downloads/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: /Applications/Postgres.app/Contents/MacOS/lib/libtiff.5.dylib\n  Referenced from: /Users/stevevance/Downloads/Postgres.app/Contents/MacOS/lib/libgdal.1.dylib\n  Reason: image not found\nI have the latest versions of brew libtiff and libjpeg installed. There is no \"formula\" for libgdal. \n. ",
    "numan": "I ran sudo ln -s /Applications/Postgres.app/Contents/MacOS/lib/* /usr/lib/ and it seemed to work\n. ",
    "goetzchr": "@kaleb thx for that, worked for me, too..\n. ",
    "leklund": "I was still having this issue on 9.2.4.1:\nleklund=# create extension postgis;\nERROR:  could not load library \"/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\": dlopen(/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: /usr/local/lib/libtiff.5.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/bin/../lib/libgdal.1.dylib\n  Reason: image not found\ninstalling tiff via ports gave me the correct version of libtiff that I could symlink to /usr/local/lib/\n[(~)] sudo mkdir /usr/local/lib\n[(~)] sudo ln -s /opt/local/lib/libtiff.5.dylib /usr/local/lib/\nAfter that, I was able to create the postgis extension.\n. I ran into this with a pg_upgrade from a 9.1 macports installation. Here's how I got around the problem. I ran initdb to create a new cluster:\ncd ~/Library/Application\\ Support/Postgres/\ninitdb --auth=trust --pgdata=./newdb --encoding=UTF8 --lc-collate=en_US.UTF-8 --lc-ctype=en_US.UTF-8 -U $your_username\nmv var var92_stock\nmv newdb var\ncp var92-stock/postmaster.opts var/\ncreatedb\nAfter that I ran into a bunch of other issues, but this at least got me past the locale problem.\n. I got this to work with the version 9.2.4.1 (13). I used MacPorts to install v8 and added a symbolic link in /usr/lib to /opt/local/lib/libv8.dylib.\n. I have confirmed that PLV8 works with 9.2.4.3 beta 2.\n. ",
    "kolosy": "so this is probably of limited use, but. i was running into this issue, despite having tiff and all associated stuff installed through mac ports. then, in an attempt to get around the issue by creating symlinks, i accidentally blew up my /usr/lib (oops). however - after reinstalling os x, postgis enabled instantly. i'm certainly not advocating reinstalling os x to fix this issue, but it would appear that the default configuration of os x works, and some departure that I had broke it. ymmv.\n. ",
    "pims": "```\n\npsql (9.2.4)\n\ntim=# CREATE EXTENSION postgis; \nERROR:  could not load library \"/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\": dlopen(/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: /usr/local/lib/libtiff.5.dylib\nReferenced from: /Applications/Postgres.app/Contents/MacOS/lib/libgdal.1.dylib\nReason: image not found\n```\nbrew install libtiff fixed the issue for me.\n. ",
    "pvencill": "Turns out I needed to do a Repair Permissions on the Mac itself, using the Disk Utility\n. ",
    "joemsak": "I fixed my permissions and saw it repair permissions on postgres commands but I still have this exact problem in Mountain Lion, fresh install on a brand new computer\n. I can connect with psql but my rails apps cannot connect\n. I found out that the latest version of postgres doesn't make the postgres user a super user, actually, and that was my issue\n. ",
    "christopherlai": "@joemsak what does your database config file look like?\n. ",
    "haberbyte": "I just had the same issue. However, i had a different fix.\nFor some reason my OSX had an empty /etc/hosts file...after fixing that and adding 127.0.0.1 localhost to that file...everything started working again.\nReally weird, took me hours to figure this out!!\nHope this helps if someone is having the same issue and nothing is working ;)\n. ",
    "t2": "+1\n. ",
    "onurozgurozkan": "+1\n. ",
    "troutdevmag": "+1 - preferences->\n. ",
    "sfcgeorge": "I haven't tested this, but it looks like there might be a mistake in these lines:\n_statusBarItem.image = statusOff;\n_statusBarItem.alternateImage = statusOff;\nShouldn't one of them use statusOn? E.g.\n_statusBarItem.image = statusOff;\n_statusBarItem.alternateImage = statusOn;\nOther than that I can't wait for the Retina status bar icon - fuzzy elephant makes me sad - so thanks for this pull request. +1 that it gets merged.\n. ",
    "dabit": "Great catch! Fixed\n. Got a friend to redraw the icons for Retina displays. Looking good.\n. Closing this PR because it turns out there's an easy way to do this (Sorry, not an Apple Developer)\n. While we wait for the merge/release you can do this:\nhttp://blog.crowdint.com/2012/10/26/postgres-app-retina-status-bar-icon.html\n. ",
    "jredburn": "Try running CREATE EXTENSION IF NOT EXISTS hstore from the psql console.\n. Figured this out just after posting. There may be another way, but the way I achieved this was by editing postgresql.conf and setting:\nlogging_collector = on\n. ",
    "jnicho02": "thanks. I also downloaded contrib/hstore.sql from somewhere else\n. ",
    "nesquena": "+1\n. ",
    "jordanandree": "+1\n. ",
    "alanmaciel": "cool\n. ",
    "streamio": "+1\n. ",
    "chibicode": "+1\n. ",
    "raulriera": "+1\n. ",
    "bryanl": "+1\n. ",
    "swrobel": ":+1: \n. Found 9.2.2 here: http://postgres-app.s3.amazonaws.com/PostgresApp-9-2-2-0.zip\nConfirmed that downgrading fixed the problem.\n. And at least, I'll verify as the original reporter that the beta works. New release coming soon?\n. Just tried Beta 2 and for some reason it wasn't seeing any of my existing DBs that I had set up in Beta 1. Went back to Beta 1 and they're all there.\n. Fixed build is working\n. Wrong release notes link. Should be http://www.postgresql.org/docs/9.2/static/release-9-2-4.html\n. ",
    "Pym": "+1\n. ",
    "timdorr": "Btw, if you don't want to wait for a new version:\nbash\ncurl \"https://raw.github.com/dabit/PostgresApp/c808fa7ff462af39c74f3682ba11aee2cf29ea87/Postgres/en.lproj/status-on@2x.png\" --O /Applications/Postgres.app/Contents/Resources/en.lproj/status-on@2x.png\ncurl \"https://raw.github.com/dabit/PostgresApp/c808fa7ff462af39c74f3682ba11aee2cf29ea87/Postgres/en.lproj/status-off@2x.png\" --O /Applications/Postgres.app/Contents/Resources/en.lproj/status-off@2x.png\nThat assumes you've got the app in your /Applications folder. It should pick up on the new icon after you quit and restart Postgres.app. \n. ",
    "chourobin": "+1\n. ",
    "danielamitay": "+1 to both the new icons and both @dabit and @timdorr's solutions.\n. ",
    "wikichen": ":+1:\n. ",
    "mpbod": "+1\n. ",
    "cmdrkeene": "+1\n. :+1: on fixing this (no comment on the quality of the fix)\n. Bump! any word on this? There's a lot more attention on uuid primary keys (it was recently added to Rails 4) and it's too bad Postgres.app can't support it.\n. ",
    "PeterChapman": "+1, getting the same thing\n. ",
    "AlwaysBCoding": "+1 Keeps happening to me. How do you fix it?\n. ",
    "iesta": "Can't find the 'libpq-fe.h header\n* extconf.rb failed *\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\n. ",
    "ttfkam": "https://github.com/mattt/PostgresApp/issues/94\n. FYI: The bug apparently has been fixed upstream.\nhttp://code.google.com/p/plv8js/issues/detail?id=59\n. https://github.com/mattt/PostgresApp/issues/94\n. ",
    "pvh": "Worked just fine for me here.\n. ",
    "jpayne": "You'll need to increase OS X's shared memory settings:\nhttp://www.postgresql.org/docs/current/static/kernel-resources.html#SYSVIPC\n. ",
    "keenanthony": "I'm having a similar issue. On Mountain Lion with the current version of Postgres.app, app runs fine initially. However, after changing max_connections from default of '20' to '30', postgres doesn't run despite the app claiming otherwise. Changing back instantly resolves the problem.\n. ",
    "nilbus": "As of the most recent download of the pre-built version, it's installing my data in ./Library/Containers/com.heroku.postgres/Data/Library/Application Support/Postgres/ again. Can this be re-opened and addressed?\n. This happened to me too, and I figured out why.\nI had deleted ~/Library/Containers/com.heroku.postgres or ~/Application Support/Postgres/ while the Postgres.app was still running. The old version was still running since I deleted the pid file, and it didn't know how to shut it down.\n- Stop the Postgres.app\n- killall postgres\n- rm -rf ~/Library/Containers/com.heroku.postgres ~/Application Support/Postgres/\n- Start Postgres.app again\nEverything worked for me after that.\n. ",
    "swanson": "The DYLD_LIBRARY_PATH workaround seems to have caused other issues with apps (notably gitk and subl stopped working). I removed the export and used homebrew to install postgres, rebooted and everything seems to be working again (running the server using Postgres.app instead of the homebrew-installed CLI utils).\n. ",
    "jasonferrier": "I am coming across an error with /usr/lib/libpq.5.dylib as well:\nConnecting to Postgres via Terminal psql -h localhost:\njasonferrier=# CREATE EXTENSION postgis;\nERROR:  could not load library \"/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\": dlopen(/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): Library not loaded: /usr/lib/libpq.5.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libgdal.dylib\n  Reason: no suitable image found.  Did find:\n    /usr/lib/libpq.5.dylib: unknown file type, first eight bytes: 0x62 0x6F 0x6F 0x6B 0x00 0x00 0x00 0x00\n    /usr/lib/libpq.5.dylib: unknown file type, first eight bytes: 0x62 0x6F 0x6F 0x6B 0x00 0x00 0x00 0x00\nI do have v5.3 of the dylib /usr/lib/libpq.5.3.dylib, but creating a symbolic link to this cause a different error.\nI was able to solve my problem by doing the following:\nsudo ln -s /Applications/Postgres.app/Contents/MacOS/lib/libpq.5.4.dylib /usr/lib/libpq.5.dylib\n. ",
    "rafarocha": "me too the similar error on create extension postgis on mac os 10.7.5 when use Postgres v9.2.2(20) via Terminal or PgAdmin3 (1.16.1)\nrafaelrocha=# CREATE EXTENSION postgis;\nERROR:  could not load library \"/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so\":\ndlopen(/Applications/Postgres.app/Contents/MacOS/lib/rtpostgis-2.0.so, 10): \nLibrary not loaded: /usr/local/lib/libjpeg.8.dylib\n    Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libtiff.5.dylib\n    Reason: Incompatible library version: \n        libtiff.5.dylib requires version 12.0.0 or later, \n        but libjpeg.8.dylib provides version 9.0.0\ni have installed on mac jpeg @9_1 by macports and jpegsrcV8 manually (configure, make, make install)\nhow solve this?\n. ",
    "gschlabitz": "That symbolic link worked for me, too, after I had gone on a ports uninstalling rampage. However, it needs to point to the correct lib version (currently libpq.5.5.dylib). Fortunately Postgres.app does this for us, so modifying the above symbolic link I used this more helpful version: \nsudo ln -s /Applications/Postgres.app/Contents/MacOS/lib/libpq.5.dylib /usr/lib/libpq.5.dylib\nThanks again @jasonferrier!\n. ",
    "Kobes": "The symlink didn't work for me, but I had more luck by uninstalling the pg gem first (gem uninstall pg for those visiting now knowing this).\nAnd then reinstalling with the following command:\nterminal\nsudo gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/MacOS/bin/pg_config\nThanks to this SO answer: http://stackoverflow.com/questions/10344821/gem-install-pg-doesnt-work-on-osx-lion\n. ",
    "HLGgithub": "Folks stephenalexbrowne listed a solution that worked for me:\nhttps://github.com/PostgresApp/PostgresApp/issues/109\n. @stephenalexbrowne your export worked for me... thank you!!\n. ",
    "MRigal": "Why was this issue closed ? I had the same problems with the latest 9.2.4.1 !\nI had to symlink libpq, libcrypto and libssl (but the two latest may be due to a previous Enterprise DB install).\n. I had the same problem after switching from 2.0 to 2.1 ! Would be great to have something for being able to migrate the PostGIS DB !\n. +1 on OS X 10.8.4\n. +1 for the pull request !\n. ",
    "satb": "Had the same issue\n@Kobes, you solution worked for me.\n. +1. Had the same issue using 9.2.4.2. \n@jakob, it works without a problem in the 9.2.4.3-beta2 link you provided. \ntestdb_development=# create extension plv8;\nERROR:  could not load library \"/Applications/Postgres.app/Contents/MacOS/lib/plv8.so\": dlopen(/Applications/Postgres.app/Contents/MacOS/lib/plv8.so, 10): Library not loaded: /usr/local/lib/libv8.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/plv8.so\n  Reason: image not found\n. ",
    "dryhumor": "The load path issue was fixed in 9.2.4.3: https://github.com/PostgresApp/PostgresApp/issues/109\n. ",
    "maniempire": "Thanks @Kobes, your solution worked for me.\n. ",
    "jpignata": "Any chance of this being pulled in? We'd like to start using this but need our development workstations to support the extension properly first.\n. ",
    "dpassage": "@thaJeztah, can you describe what you did to finish migrating your data? I've run into the same error as you.\n. ",
    "stefl": "I've just done exactly the same thing\u2014dragged the new app over the old one in Finder, just as I would any other piece of software. \nPerhaps provide a link to a download of the 9.2 version of the app?\nAnd consider adding \"How to upgrade\" to the home page so it's clearer what you're supposed to do, along with the commands you'll have to run in terminal?\n. The data directory appears to have changed in this release. I had to do this, not what's in the docs - my directory was not renamed to var-9.2:\npg_upgrade --old-datadir ~/Library/Application\\ Support/Postgres/var \\\n--new-datadir ~/Library/Containers/com.heroku.postgres/Data/Library/Application\\ Support/Postgres/var  \\\n--old-bindir ~/Desktop/Postgres.app/Contents/MacOS/bin \\\n--new-bindir /Applications/Postgres.app/Contents/MacOS/bin\nPlus it involved getting rid of my \"stef\" database that was automatically created on install before doing this, and making sure that there were no other users in the new cluster before running the command. After each failed attempt I had to drop all the databases one at a time in the new cluster until the script worked. Hope this helps someone.\n. ",
    "dcabo": "Thanks a lot @stefl, that saved me hours of pain.\n. ",
    "jace": "Thanks @stefl. This worked for me... almost. I couldn't figure out how to remove the default user account Postgres.app makes, or to delete the pre-created var folder and make an empty one with initdb. The locale settings didn't match and using --no-locale didn't make them match either. In the end I was forced to use pg_dumpall and re-import that into the new version.\nThe app documentation is sadly very unhelpful with this. The instructions here don't work since there is no semantic versioning applied under 9.2 or 9.3, and the new var folder has a default database and user, which interferes. http://postgresapp.com/documentation#toc_0\n. For anyone here trying to upgrade from 9.4 to 9.5, here's what you need to do:\n1. Copy the Contents/Versions/9.4 folder from the old app into the new app, as instructed. DO NOT RUN THE NEW APP YET.\n2. Shut down the running server, if any.\n3. Ensure the new app is now at /Applications/Postgres.app\n4. If you did run the app, remove the default cluster it made for you: rm -rf ~/Library/Application\\ Support/Postgres/var-9.5 (Warning: Don't do this if you have data in the 9.5 cluster)\n5. Create an empty cluster: initdb -D ~/Library/Application\\ Support/Postgres/var-9.5\n6. Run the upgrade: /Applications/Postgres.app/Contents/Versions/9.5/bin/pg_upgrade -b /Applications/Postgres.app/Contents/Versions/9.4/bin -B /Applications/Postgres.app/Contents/Versions/9.5/bin -d ~/Library/Application\\ Support/Postgres/var-9.4 -D ~/Library/Application\\ Support/Postgres/var-9.5 -v\n7. PROFIT!\n. Done. There's a German doc as well though.\n. I got hit by the encoding issue when upgrading on a Linux box. We need a single line amendment: initdb -E UTF8 \u2026\n. I agree. With pg_dump and pg_restore I have to make a list of databases to migrate and worry about missing something. With pg_upgrade I only have to look at one status message at the end of it to confirm it worked without glitches.\n. ",
    "kirilisa": "Did you ever sort this out? I am having the same problem...\n. ",
    "croxey": "A work around. I found that if I restored a database from a postgres dump I\ncould get around the error.\nChrissy.\nOn 2013-03-29, at 3:02, Elise Bosse notifications@github.com wrote:\nDid you ever sort this out? I am having the same problem...\n\u2014\nReply to this email directly or view it on\nGitHubhttps://github.com/mattt/PostgresApp/issues/87#issuecomment-15634736\n.\n. ",
    "vjpr": "Same problem. Just downloaded 9.2.4.1 and its still broken.\n. @mattt Is there a workaround I can use before the next release?\n. @mattt Just rebuilt from master and copied across plpgsql.so, restarted server. It didn't fix it.\n. Also it seems more of an issue with $libdir rather than plpgsql:\nVaughan=# SET client_encoding TO iso88591;\nERROR:  could not access file \"$libdir/utf8_and_iso8859_1\": No such file or directory\nThere is a brief discussion here about a similar issue: http://stackoverflow.com/questions/6874164/postgresql-issue-could-not-access-file-libdir-plpgsql-no-such-file-or-direc\nI also get:\npg_config --pkglibdir\n/Applications/Postgres.app/Contents/MacOS/lib\n\nA useful lead: http://stackoverflow.com/questions/1349001/problems-with-libdir-on-postgresql\n\nThis post explains how $libdir works: http://www.varlena.com/GeneralBits/33.html\n\nA post from this page:\n\nERROR: could not access file \"$libdir/postgis-2.0\": No such file or directory \nRetrieve postgis-2.0.so from postgis package for version postgresql 9.1 () and copy it to /opt/pgsql-9.1/lib (make sure the privileges are right)\n\nThis makes me think it could be a permission problem or that the compiled-in $libdir directory is incorrect or local to mattt's machine.\n\nFrom http://www.network-theory.co.uk/docs/postgresql/vol2/DynamicLoading.html:\n\nIf the name starts with the string $libdir, that part is replaced by the PostgreSQL package library directory name, which is determined at build time.\n. Restart your machine and the settings will be reset if you typed in those commands.\n\nTo make them permanent, add a file called /etc/sysctl.conf and add the following lines:\nkern.sysv.shmall=65536\nkern.sysv.shmmax=16777216\n. ",
    "alopix": "After downloading the latest version I encounter the exact same problem with postgis:\nERROR: could not access file \"$libdir/postgis-2.0\": No such file or directory\nI desperately need postgis. Is there a workaround or will there be an updated version soon?\n. As far as I can see it, this only happens on old databases because postgis-2.0 is missing, so migrating to the newer 2.1 is not possible.\nThere should be some mechanism to do that because otherwise we'll be stuck with old postgres.apps :(\n. Yeah, that's what I figured. Maybe not include both versions but offer an update script that includes the old one and can migrate a database.\n. ",
    "JerrySun363": "Still getting the error\nERROR:  could not access file \"$libdir/plpgsql\": No such file or directory\non my mavirick system.\nDon't figure out why. And it still cannot't be found after I made a soft link there.\n. ",
    "marnen": "@jakob Thanks for making 9.2.4.4 available! I've been having a strange time upgrading my DBs. I used 9.2.4.4 to upgrade all DBs that had PostGIS from 2.0 to 2.1, but when I then upgrade from 9.2 to 9.3, I still get it complaining about missing $libdir/postgis-2.0. Any ideas?\n. ",
    "thesteve0": "Just upgraded  to Fedora 20 from Fedora 19. F20 ships with \npostgresql-9.3.2-2.fc20.x86_64\nand \npostgis-2.1.1-1.fc20.x86_64\nWhen I try to upgrade using this step\npostgresql-setup upgrade\nI get this \npg_dump: [archiver (db)] query failed: ERROR:  could not access file \"$libdir/postgis-2.0\": No such file or directory\npg_dump: [archiver (db)] query was: SELECT pg_catalog.pg_get_viewdef('51422'::pg_catalog.oid) AS viewdef\nSo something is still not working. We hit this early on with builds in OpenShift as well. \nSomething is still broken in the migrators. Can we please get a fix. Luckily I don't have any real data in this db\n. ",
    "jcoleman": "To anyone reading this thread in the future: in my experience (today) the special release containing both 2.0 and 2.1 versions of PostGIS @jakob links to above (9.2.4.4) has the dylib loading issues that were fixed in 9.2.4.3. I recommend downloading 9.2.4.3 and copying over the two 2.0 PostGIS lib files into that app bundle from 9.2.4.3.\n. ",
    "balnagendra": "I was stuck with this problem. I am working with PostGres 9.2 CentOS. I was trying to implement TABLEFUNC extension. It would give me this error $libdir/tablefunc not found.\nThanks to VJPR's comments. he left a hint to look into pg_config and PKGLIBDIR variable. Mine was pointing to /usr/lib64/pgsql. I moved tablefunc.so from /usr/pgsql-9.2/lib to /usr/lib64/pgsql. And voila \"CREATE EXTENSION TABLEFUNC\" worked.\nThanks Team, great help. ",
    "allspiritseve": "+1\n. ",
    "wikyd": "Here's how I got around my stupidly overwriting the old .app file.  This requires homebrew to be installed.\n```\ncd /usr/local/Library/Formula\nPostgres 9.1.4  Use brew version postgresql to find a different commit for your old version\ngit checkout c40c7bf /usr/local/Library/Formula/postgresql.rb \nbrew install postgresql\n```\nThen specify the old bin directory for pg_upgrade command like this (again, your version # may be different):\n--old-bindir=\"/usr/local/Cellar/postgresql/9.1.4/bin\"\nAfter running your pg_upgrade command successfully(hints here), you can remove the homebrew version of Postgres using:\nbrew uninstall postgres\n. ",
    "gaastonsr": "Oh my god. This is an excellent question and answer and deserves to be in the documentation.\n. ",
    "ashleyconnor": "I concur.\nUpgrading is painful and requires user to remember to keep around the old binaries.\nRunning the pg_upgrade like so:\npg_upgrade --old-datadir var-9.1/ --new-datadir var --old-bindir \"/Users/ashleyconnor/Desktop/Postgres.app/Contents/MacOS/bin\" --new-bindir    \"/Applications/Postgres.app/Contents/MacOS/bin\"\nResults in errors since the Postgres.app already has a role/database for the current user, and therefore fails when trying to create them again using the old data.\nMaybe build in data migration as part of the upgrade process.\n. ",
    "NitroPye": "Confirming this as well. The pre-packaged version of 9.2.2 does not include plv8.\nThe current xcode project fails to build out of the box (OS X 10.8.2) so I can't confirm if it includes plv8 or not.\n. I ran into some issues building plv8 on OS X. If this is what is holding back PostgressApp from including plv8 again check out these threads:\nhttp://code.google.com/p/plv8js/issues/detail?id=59\nhttps://groups.google.com/forum/?fromgroups=#!searchin/v8-users/GetPointerFromInternalField/v8-users/aaSY-02HWzA/MP4gRTyB6Z4J\nI was able to get plv8 to build on 10.8.3 by switching all occurrences of GetPointerFromInternalField to GetAlignedPointerFromInternalField. Could have dire consequences but all of my plv8 functions ran fine.\n. ",
    "mlegenhausen": "+1\n. ",
    "qkub": "Nitro, your patch is almost there. But there's a caveat. Windowing functionality is broken. I was getting segmentation faults on x64 ubuntu machine. \nAfter minor poking around V8.h i came up with this warning: \n/**\n- Gets a 2-byte-aligned native pointer from an internal field. This field\n- must have been set by SetAlignedPointerInInternalField, everything else\n- leads to undefined behavior.\n  /\n  V8_INLINE(void GetAlignedPointerFromInternalField(int index));\nSo i replaced the GetAlignedPonterFromInternalField in plv8_MyWindowObject with this:\nLocal wrap = Local::Cast(self->GetInternalField(0));\nvoid* ptr = wrap->Value();\nfcinfo = static_cast(ptr);\nand solved the issue. So far so god. \n. ",
    "adamsc64": "Saved my hide @nilbus. Thanks.\n. ",
    "andersennl": "Thank you so much @nilbus! Tried to fix this for 2 days.\n. ",
    "goldnuggets24": "This was unbelievably helpful. Thank you very much @nilbus.\n. ",
    "amahrt": "@nilbus Thank you so much! +1\n. ",
    "bradleyayers": "This worked for me too, thanks.\n. @msipus Paste one at a time, after the first command you'll need to enter your password.\n. ",
    "msipus": "Sorry, but I'm totally new to this and I have the same problem.  Do I simply paste those command lines into terminal? Or do I need to do something different. Thanks!\n. Excellent.  I was pasting them together before. Worked perfectly now. Thank you.\n. I wonder if that is similar to the problem I have now.  Its like I'm connected but I'm not...\nPort 5432 is active, but PSQL says \"psql: FATAL:  role \"_username__\" does not exist\nlogout\n. ",
    "cartdeco": "Have tried this solution but still no joy for me. I keep running in to the same error:\npsql: could not connect to server: No such file or directory\n    Is the server running locally and accepting\n    connections on Unix domain socket \"/tmp/.s.PGSQL.5432\"?\nNot being familiar with command line this has been a real battle to get postgres working. It did work - once - and hasn't worked since this error appeared. Any other thoughts on the solution?\nAny help greatly appreciated.\n. Have managed to get it up and running. Went back to the main notes here https://github.com/mattt/PostgresApp and used initdb PGDATA and things worked. psql command worked and I was away.\nHope this helps. \n. ",
    "fabianoalmeida": "@mattt I'm having this problem. How can I solve it? I followed this uninstalling postgres post and after that I installed Postgres.app, as you mentioned in the website. I created a gist for it.\nHowever, I'm having the same issue listed here #48.\npsql: could not connect to server: No such file or directory\n    Is the server running locally and accepting\n    connections on Unix domain socket \"/tmp/.s.PGSQL.5432\"?\nwhich psql\n$ which psql\n/Applications/Postgres.app/Contents/MacOS/bin/psql\nI also tried remove Postgres.app and install again. However, when I did it I lost the user created by Postgres.app in my first installation, even I reinstalling it.\nThere is en elephant in my menu bar, but...\n$ ps auxwww | grep postgress\nfabianoalmeida 53665   0,0  0,0  2432768    604 s000  S+    2:34     0:00.00 grep postgress\nIt isn't being shown when I search for postgres process. :confused: \nAny thoughts?\nThanks in advance!\n. @mattt it was a typo. Sorry. When I ran using the correct way:\nsh\n$ ps auxwww | grep postgres\npostgres       42185   0,0  0,0  2483820   1548   ??  S     1:59     0:00.03 /usr/sbin/distnoted agent\npostgres       42127   0,0  0,1  2468024   5316   ??  Ss    1:59     0:00.11 /usr/libexec/xpcd\npostgres       42126   0,0  0,0  2465740   1140   ??  S     1:59     0:00.08 /usr/sbin/cfprefsd agent\npostgres       42123   0,0  0,0  2471372    852   ??  Ss    1:59     0:00.07 /sbin/launchd\nfabianoalmeida 63089   0,0  0,0  2432768    604 s000  R+    3:07     0:00.00 grep postgres\nfabianoalmeida 54159   0,0  0,1  2466952   4292   ??  Ss    2:36     0:00.04 com.heroku.postgres-service\nAnd when I run\nsh\n$ psql -h localhost\npsql: could not connect to server: Connection refused\n    Is the server running on host \"localhost\" (::1) and accepting\n    TCP/IP connections on port 5432?\ncould not connect to server: Connection refused\n    Is the server running on host \"localhost\" (127.0.0.1) and accepting\n    TCP/IP connections on port 5432?\ncould not connect to server: Connection refused\n    Is the server running on host \"localhost\" (fe80::1) and accepting\n    TCP/IP connections on port 5432?\nMust I review any point?\nThanks again.\n. @mattt my MacOS is 10.8.3. Is this help to solve my problem? :confused: \n. @mattt I solved it. Fixed max_connections = 20 and shared_buffers = 1600kB in postgresql.conf. It was 100 and 32MB, respectively. :unamused: Thank you so much, anyway.\n. @hanifn I'm glad to help you. This occurs because my first installation of PostgreSQL I did using homebrew. I don't know why, but homebrew installed it using a server configuration, as you could see in your postgresql.conf file. However, this change solve my and your problem. Now, enjoy it. :laughing: \n. ",
    "hanifn": "@fabianoalmeida Thanks for that! I had the same problem and changing the postgresql.conf to your values worked in resolving it.\n. @fabianoalmeida Hmm that's weird. I had to remove my homebrew installation too but the conf file I changed was ~/Library/Application\\ Support/Postgres/var/postgresql.conf. Not sure how homebrew could have affected that especially since it was installed first.\n. ",
    "rebelwarrior": "What do and how do I undo these commands:\nsudo sysctl -w kern.sysv.shmall=65536\nsudo sysctl -w kern.sysv.shmmax=16777216\nI applied them to my homebrew install without realizing that they were for the application. \nI am having the problem with:\npsql: could not connect to server: No such file or directory\nIs the server running locally and accepting\nconnections on Unix domain socket \"/tmp/.s.PGSQL.5432\"?\non my homebrew install and haven't been able to permanently fix it. \nFor the moment I'm just uninstalling postgres. I'm on a Macbook running 10.6.8 Snow Leopard. So I can't install the app and thus must use hombrew's install.\n. ",
    "carande": "I have been trying to set up postgres on my macbook-pro for over 5 hours today and I can't get around this issue.\nOSX: 10.9.1   Python: EPD 2.7.3\nAt first, I tried installing postgresql9.3 (then 9.2) through MacPorts, before i discovered postgres.app.  I uninstalled every version of postgreSQL, apparently including the version that comes with OSX.  I downloaded postgres.app, and made the edit to my .bash_profile to get my $PATH correct.\nUpon opening the postgres.app, I see in the menu bar \"Could not start on Port 5432\".  This problem seems to be caused by a myriad of issues, some described here: http://stackoverflow.com/questions/12028037/postgres-app-could-not-start-on-port-5432 \nand here:\nhttp://stackoverflow.com/questions/13573204/psql-could-not-connect-to-server-no-such-file-or-directory-mac-os-x?lq=1\nnothing suggested has helped me fix this issue.  Here are some things I've tried:\n$ which psql\n/Applications/Postgres.app/Contents/Versions/9.3/bin/psql\n$ ps auxw | grep post\nUser            2105   0.4  0.0  2442000    616 s001  S+    3:43PM   0:00.01 grep --color=auto --exclude-dir=.svn post\nUser            2040   0.0  0.1  2446900   4356   ??  Ss    3:39PM   0:00.02 com.postgresapp.postgres-service\n(If i quit Postgres.app, then only the S+ line exists)\nthe file /etc/services shows that port 5432 is associated with postgresql\nchecking \n$ps -a\nshows no unexpected processes running \nI did notice that there appear to be some files missing: I can't find a postgresql.conf file (after uninstalling the MacPort versions), and there is no postgres directory in application support.  Furthermore, I don't see a /usr/local/var/postgres/ directory.  I imagine the fact that I can't find a postgresql.conf file at all is a big problem - is the postgres.app supposed to create this file?\nIf anyone could enlighten me or make any suggestions, it would be much appreciated.  Not sure if this is an actual bug or if I just don't know what I'm doing.  Thanks!\n. ",
    "thecristen": "I'm having this issue too, @carande! I reinstalled Postgres.app, but that file was still missing.\nTry running initdb /usr/local/var/postgres -E utf8. If that succeeds it will tell you to start it with postgres -D /usr/local/var/postgres. Then running psql seems to work (while the server is running)..\n. ",
    "shardulmohite": "try this link, it might help you ! \nhttp://reddyonrails.blogspot.in/2013/01/rails-pg-gem-0141-on-mac-fails-and.html \n. ",
    "nicerobot": "Is it supposed to be in the latest download? I see the library in the lib/ directory but i still get the error.\n```\n    u=# select ''::xml;\n    ERROR:  could not set up XML error handler\n    LINE 1: select ''::xml;\n                   ^\n    HINT:  This probably indicates that the version of libxml2 being used is not compatible with the libxml2 header files that PostgreSQL was built with.\nu=# select version();\n                                                                                 version                                                                                 \n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n PostgreSQL 9.2.4 on x86_64-apple-darwin11.4.2, compiled by i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.9.00), 64-bit\n(1 row)\n\n```\nI've tried running Postgres from the command-line and forcing LD_LIBRARY_PATH but that has no impact.\n```\n    LD_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib /Applications/Postgres.app/Contents/MacOS/bin/postgres \n$ echo $PATH\n/Applications/Postgres.app/Contents/MacOS/bin:/usr/local/bin:/Library/Java/1.7.0:/bin:/usr/bin:/usr/bin:/bin:/usr/sbin:/usr/local/bin:/opt/X11/bin:/usr/local/go/bin\n\n$ which pg_config\n/Applications/Postgres.app/Contents/MacOS/bin/pg_config\n\n$ pg_config\nBINDIR = /Applications/Postgres.app/Contents/MacOS/bin\nDOCDIR = /Applications/Postgres.app/Contents/MacOS/share/doc\nHTMLDIR = /Applications/Postgres.app/Contents/MacOS/share/doc\nINCLUDEDIR = /Applications/Postgres.app/Contents/MacOS/include\nPKGINCLUDEDIR = /Applications/Postgres.app/Contents/MacOS/include\nINCLUDEDIR-SERVER = /Applications/Postgres.app/Contents/MacOS/include/server\nLIBDIR = /Applications/Postgres.app/Contents/MacOS/lib\nPKGLIBDIR = /Applications/Postgres.app/Contents/MacOS/lib\nLOCALEDIR = /Applications/Postgres.app/Contents/MacOS/share/locale\nMANDIR = /Applications/Postgres.app/Contents/MacOS/share/man\nSHAREDIR = /Applications/Postgres.app/Contents/MacOS/share\nSYSCONFDIR = /Applications/Postgres.app/Contents/MacOS/etc\nPGXS = /Applications/Postgres.app/Contents/MacOS/lib/pgxs/src/makefiles/pgxs.mk\nCONFIGURE = '--prefix=/Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres' '--with-includes=/Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/include' '--with-libraries=/Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/lib' '--enable-thread-safety' '--without-docdir' '--with-openssl' '--with-gssapi' '--with-bonjour' '--with-krb5' '--with-libxml' '--with-libxslt' '--with-perl' '--with-python'\nCC = gcc\nCPPFLAGS = -I/usr/include/libxml2 -I/Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/include\nCFLAGS = -O2 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv\nCFLAGS_SL = \nLDFLAGS = -L/Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/lib -Wl,-dead_strip_dylibs\nLDFLAGS_EX = \nLDFLAGS_SL = \nLIBS = -lpgport -lxslt -lxml2 -lssl -lcrypto -lgssapi_krb5 -lz -lreadline -lm \nVERSION = PostgreSQL 9.2.4\n\n\nu=# \\dx\n                                           List of installed extensions\n        Name        | Version  |   Schema   |                             Description                              \n--------------------+----------+------------+----------------------------------------------------------------------\n adminpack          | 1.0      | pg_catalog | administrative functions for PostgreSQL\n cube               | 1.0      | public     | data type for multidimensional cubes\n file_fdw           | 1.0      | public     | foreign-data wrapper for flat file access\n fuzzystrmatch      | 1.0      | public     | determine similarities and distance between strings\n hstore             | 1.1      | public     | data type for storing sets of (key, value) pairs\n intarray           | 1.0      | public     | functions, operators, and index support for 1-D arrays of integers\n ltree              | 1.0      | public     | data type for hierarchical tree-like structures\n pg_buffercache     | 1.0      | public     | examine the shared buffer cache\n pg_stat_statements | 1.1      | public     | track execution statistics of all SQL statements executed\n pg_trgm            | 1.0      | public     | text similarity measurement and index searching based on trigrams\n pgcrypto           | 1.0      | public     | cryptographic functions\n plpgsql            | 1.0      | pg_catalog | PL/pgSQL procedural language\n postgis            | 2.2.0dev | public     | PostGIS geometry, geography, and raster spatial types and functions\n seg                | 1.0      | public     | data type for representing line segments or floating-point intervals\n sslinfo            | 1.0      | public     | information about SSL certificates\n tablefunc          | 1.0      | public     | functions that manipulate whole tables, including crosstab\n xml2               | 1.0      | public     | XPath querying and XSLT\n\n```\nThe homebrew installation of the same version works perfectly.\nFull debug logging for backend and client reveals no indication as to why the library isn't loading:\nDEBUG:  StartTransactionCommand\n    STATEMENT:  select '<a/>'::xml;\n    DEBUG:  StartTransaction\n    STATEMENT:  select '<a/>'::xml;\n    DEBUG:  name: unnamed; blockState:       DEFAULT; state: INPROGR, xid/subid/cid: 0/1/0, nestlvl: 1, children: \n    STATEMENT:  select '<a/>'::xml;\n    ERROR:  could not set up XML error handler at character 8\n    HINT:  This probably indicates that the version of libxml2 being used is not compatible with the libxml2 header files that PostgreSQL wa\n    s built with.\n    STATEMENT:  select '<a/>'::xml;\n. Thanks @jakob. That release resolved the issue. It seems maybe that release isn't the \"Download the latest version\" release from postgresapp.com.\n. No. My database is >300GB and I don't have the space to dump it. I have to perform in-place upgrades.\nI think the solution is to provide current builds with upgraded PostGIS versions before upgrading the primary PostgreSQL version as a way to transition to a major upgrade.\nI guess my point is that you really shouldn't provide PostGIS upgrades at the same time as PostgreSQL. Any technique you can devise that accomplishes that will probably work. Otherwise, the only upgrade option is dump/restore since no one who uses PostGIS can use pg_upgrade. And given the fact that anyone using PostGIS might also have larger databases than those simply running blogs and the like, pg_upgrade is a far better upgrade path than dump/restore.\nOne alternative might be for you to provide a PostGIS \"plugin\" build where you have multiple versions of PostGIS compiled against particular versions of Postgres.app and users can drop in different versions as needed.\n. Related #309 ?\n. ",
    "jasiek": "If you want to tell a program to use a particular library path on a Mac, you need to set the DYLD_LIBRARY_PATH as opposed to LD_LIBRARY_PATH. \nIt appears that I have a similar problem:\n/Applications/Postgres.app/Contents/MacOS/bin/postgres:\n    /Applications/Postgres.app/Contents/MacOS/lib/libxml2.dylib (compatibility version 10.0.0, current version 10.8.0)\n    @executable_path/../lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n    @executable_path/../lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n    /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos (compatibility version 5.0.0, current version 6.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\nIt could be that CPPFLAGS = -I/usr/include/libxml2 is screwing it up. I need to build it from sources and confirm.\n. What if we bundled libtiff with the app?\n. Does the pg_ext.bundle file exist? Can you do otool -L /Users/mech/.rvm/gems/ruby-2.0.0-p0@careerpacific/gems/pg-0.15.1/lib/pg_ext.bundle?\n. How did you install the gem? Did you pass in any additional information about where libpq might reside?\n. I'm having a similar problem now that I've provisioned a clean box:\ndlopen(/Users/jps/.rvm/gems/ruby-2.0.0-p195@formfinder/gems/pg-0.15.1/lib/pg_ext.bundle, 9): Library not loaded: @executable_path/../lib/libssl.1.0.0.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib\n  Reason: image not found - /Users/jps/.rvm/gems/ruby-2.0.0-p195@formfinder/gems/pg-0.15.1/lib/pg_ext.bundle\n/Users/jps/.rvm/gems/ruby-2.0.0-p195@formfinder/gems/pg-0.15.1/lib/pg.rb:4:in `require'\n/Users/jps/.rvm/gems/ruby-2.0.0-p195@formfinder/gems/pg-0.15.1/lib/pg.rb:4:in `<top (required)>'\nI suppose @executable_path should have been automatically replaces with the correct directory.\n. ping!\n. Can we merge this?\n. Hello?\n. ",
    "stevegraham": "+1 nice work @jasiek \n. ",
    "jcoby": "I had the same issue. Downgrading to 9.2.2 fixed it for me as well.\n. ",
    "anthonator": "Ran into the same issue.\n. ",
    "frabrunelle": "I had to downgrade to 9.2.2 as well.\n. ",
    "rmg": "Another downgrade to 9.2.2 here. Is this related to 0897d9bee28105cf4bab493344e5d550ffd5a0ba maybe?\n. ",
    "ghost": "Had to downgrade also on my end.\n. Having the same issue. Downgrading to 9.2.2 fixed it.\nAdd retina icon for status bar manually  : )\n. The beta fixed the issue for me, thank you.\n. happened to me as well on a Yosemite install while installing a rails app locally.\nFATAL: database \"USERNAME\" does not exist\ncreatedb USERNAME fixed the problem - thanks!\n. @davbeck \nHello,\nMy name is Adam and lead support operations for X3watch. I was wondering if you could tell me which build/version of X3watch you had installed on the computer?\n. In psql enter the commang\nCREATE EXTENSION pgcrypto; \nfor the database in question\n. ",
    "benniemosher": "I had to downgrade as well.\n. ",
    "mech": "Have the same issue. I need the uuid to play with Rails 4. But when I rake db:drop, the whole thing blow:\ndlopen(/Users/mech/.rvm/gems/ruby-2.0.0-p0@xx/gems/pg-0.15.1/lib/pg_ext.bundle, 9): Library not loaded: @executable_path/../lib/libssl.1.0.0.dylib\nReferenced from: /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib\nReason: image not found - /Users/mech/.rvm/gems/ruby-2.0.0-p0@xx/gems/pg-0.15.1/lib/pg_ext.bundle\nThe pg gem does install fine. The rails dbconsole works and can query also. Just that migration don't work :(\n. Add @bsy suggestion and it expose another issue with nokogiri :(\ndlopen(/Users/mech/.rvm/gems/ruby-2.0.0-p0@xx/gems/nokogiri-1.5.9/lib/nokogiri/nokogiri.bundle, 9): Library not loaded: /usr/local/opt/libxml2/lib/libxml2.2.dylib\nReferenced from: /Users/mech/.rvm/gems/ruby-2.0.0-p0@xx/gems/nokogiri-1.5.9/lib/nokogiri/nokogiri.bundle\nReason: Incompatible library version: nokogiri.bundle requires version 12.0.0 or later, but libxml2.2.dylib provides version 10.0.0 - /Users/mech/.rvm/gems/ruby-2.0.0-p0@xx/gems/nokogiri-1.5.9/lib/nokogiri/nokogiri.bundle\nI guess it fix some, but not the other similar \"dylib\" problems.\n. Running that I have these:\npg_ext.bundle:\n  /Users/mech/.rvm/rubies/ruby-2.0.0-p0/lib/libruby.2.0.0.dylib (compatibility version 2.0.0, current version 2.0.0)\n  /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib (compatibility version 5.0.0, current version 5.5.0)\n  /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0)\n  /usr/lib/libobjc.A.dylib (compatibility version 1.0.0, current version 228.0.0)\nHope it helps\n. @jasiek Nope I just do a normal bundle install. Pretty straightforward.\n. Closing it due to duplicate to #109 \n. ",
    "bsy": "Adding the following to my .bash_profile did the trick to fix this loading issue  (on rails 3.2.13 + ruby 1.9.3p194) :\nexport DYLD_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib:$DYLD_LIBRARY_PATH\n. @mech yeah after I fixed that, I noticed it broke node.js, downgrade it is!\n. ",
    "pda": "Same problem. Seems the dependency loading in libpq.dylib bundled with Postgres.app is broken, specifically with reference to loading the bundled libssl.\nHere's ruby with the system libpq:\npda@paulbook ~ \u2e29 DYLD_INSERT_LIBRARIES=/usr/lib/libpq.dylib ruby -v\nruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-darwin12.2.0]\nHere's ruby with the Postgres.app libpq:\npda@paulbook ~ \u2e29 DYLD_INSERT_LIBRARIES=/Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib ruby -v\ndyld: Library not loaded: @executable_path/../lib/libssl.1.0.0.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib\n  Reason: image not found\nAnd an otool dump:\npda@paulbook ~ \u2e29 otool -L /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib\n/Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib:\n        /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib (compatibility version 5.0.0, current version 5.5.0)\n        @executable_path/../lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n        @executable_path/../lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n        /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos (compatibility version 5.0.0, current version 6.0.0)\n        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\nNote that @executable_path/../lib/libssl.1.0.0.dylib is presumably trying to refer to /Applications/Postgres.app/Contents/MacOS/lib/libssl.1.0.0.dylib.\nLoading just that libssl against ruby results in a similar error:\npda@paulbook ~ \u2e29 DYLD_INSERT_LIBRARIES=/Applications/Postgres.app/Contents/MacOS/lib/libssl.1.0.0.dylib ruby -v\ndyld: Library not loaded: @executable_path/../lib/libcrypto.1.0.0.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libssl.1.0.0.dylib\n  Reason: image not found\nHere's the otool dump of that libssl:\npda@paulbook ~ \u2e29 otool -L /Applications/Postgres.app/Contents/MacOS/lib/libssl.1.0.0.dylib\n/Applications/Postgres.app/Contents/MacOS/lib/libssl.1.0.0.dylib:\n        /Applications/Postgres.app/Contents/MacOS/lib/libssl.dylib (compatibility version 1.0.0, current version 1.0.0)\n        @executable_path/../lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n        /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5)\n        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\nIn this case, @executable_path/../lib/libcrypto.1.0.0.dylib refers to /Applications/Postgres.app/Contents/MacOS/lib/libcrypto.1.0.0.dylib.\nLoading just that libcrypto against ruby works fine:\npda@paulbook ~ \u2e29 DYLD_INSERT_LIBRARIES=/Applications/Postgres.app/Contents/MacOS/lib/libcrypto.1.0.0.dylib ruby -v\nruby 2.0.0p0 (2013-02-24 revision 39474) [x86_64-darwin12.2.0]\nPresumably that's because it has no more @executable_path references:\npda@paulbook ~ \u2e29 otool -L /Applications/Postgres.app/Contents/MacOS/lib/libcrypto.1.0.0.dylib\n/Applications/Postgres.app/Contents/MacOS/lib/libcrypto.1.0.0.dylib:\n        /Applications/Postgres.app/Contents/MacOS/lib/libcrypto.dylib (compatibility version 1.0.0, current version 1.0.0)\n        /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.5)\n        /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 159.1.0)\nHope this helps in some way \u2014\u00a0I'm afraid I have no idea how to help fix it.\n. Also worth noting regarding the bundled OpenSSL build, OPENSSLDIR is hard-coded to /Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/ssl. Maybe related?\npda@paulbook ~ \u2e29 /Applications/Postgres.app/Contents/MacOS/bin/openssl version -a | grep OPENSSLDIR\nWARNING: can't open config file: /Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/ssl/openssl.cnf\nOPENSSLDIR: \"/Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/ssl\"\n. Beta 2 seems fine to me.\nI'm using hstore but not PostGIS or PLV8.\n. Same; I had no databases after the upgrade, but that didn't bother me, I re-created them.\nAccording to lsof | grep postgres, the new beta 2 seems to be storing data in:\n~/Library/Containers/com.heroku.postgres/Data/Library/Application Support/Postgres/var/base/16387\n. More detail around the same problem in #109.\nI suggest closing this issue as a duplicate.\n\u2014\u00a0Paul\n. ",
    "EnriqueCanals": "I had the same issue. Downgrading worked for me as well.\ndlopen(/Users/enrique/.rvm/gems/ruby-2.0.0-p0@rails-3.2.13/gems/pg-0.15.1/lib/pg_ext.bundle, 9): Library not loaded: @executable_path/../lib/libssl.1.0.0.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib\n  Reason: image not found - /Users/enrique/.rvm/gems/ruby-2.0.0-p0@rails-3.2.13/gems/pg-0.15.1/lib/pg_ext.bundle\n. ",
    "tmcallister": "Same as above.  Downgraded to 9.2.2  to fix. Env: Ruby 2 / Rails 4.\n. ",
    "dylansm": "@tmcallister I downgraded by quitting the app and copying version 9.2.2 over 9.2.4 without issue.\n. Building it from source worked for me, too. Thanks, @murphyrandle! (Had to do it ...I really like that new retina menu icon....)\n. ",
    "iscott": "Thanks @swrobel - had the same issue and downgrading fixed it. Thanks for posting the link!\n. ",
    "albrow": "I didn't want to downgrade, so after trying a few different solutions I found one that worked for me.\nAdd the following to your .bash_profile and restart the terminal session.\nexport DYLD_FALLBACK_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib:$DYLD_LIBRARY_PATH\nIt is essentially the same as @bsy's solution but it doesn't screw up other apps that might be depending on DYLD_LIBRARY_PATH.\n. @lukemelia and @murphyrandle: I can verify that I have the same problem with psql. Unsetting the env variable seems to fix the issue (but then it breaks rails). \nThe following command will unset the DYLD_FALLBACK_LIBRARY_PATH environment variable temporarily. It does this by entering a \"subshell\" which does not alter your current bash environment. After you exit psql it will be set again so that rails (and probably some other things that depend on Postgres.app) will function properly.\n(. ~/.bash_profile; unset DYLD_FALLBACK_LIBRARY_PATH; psql)\nThis is assuming that you're using bash and that your .bash_profile is located in your home directory. If that's not the case (or if you're using a .bashrc or other environment setup instead of .bash_profile) change the ~/.bash_profile part of the command to the path to your environment setup script.\nIf you don't want to type all that out, you can create an alias in your .bash_profile (or equivalent). Something like:\nalias psql=\"(. ~/.bash_profile; unset DYLD_FALLBACK_LIBRARY_PATH; psql)\"\nThis will automatically and temporarily unset the DYLD_FALLBACK_LIBRARY_PATH when you run psql. It's not ideal, but I tested it and it works for me.\n. ",
    "ajb": "another downgrade here. caused a major headache this evening :cry: \n. ",
    "andershaig": "I just wanted to say thanks @stephenalexbrowne and let others know his solution worked for me as well when some of the other suggestions failed. I also like that it's easily removable when this issue is fixed.\n. ",
    "mrmurphy": "@stephenalexbrowne thanks for that temporary fix. EDIT:\nInserting the line:\nexport DYLD_FALLBACK_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib:$DYLD_LIBRARY_PATH\nin my .zshrc fixes the problem when looking for libssl, but then, when I launch psql I get this error:\ndyld: Library not loaded: @executable_path/../lib/libedit.3.dylib\n      Referenced from: /Applications/Postgres.app/Contents/MacOS/bin/psql\n      Reason: image not found\nI don't know why this would happen. There's no libedit.3.dylib inside lib. So I don't know why removing that file from my .rc fixes the issue. Any ideas?\nI also downgraded, which fixed the loading error, but it wraps an older version of SSL, so I got this back from python:\n_psycopg.so requires version 1.0.0 or later, but libssl.0.9.8.dylib provides version 0.9.8\n. That's a great workaround. Thanks!\n\nMurphy Randle\nPython Monkey, Space Monkey Inc.\nhttp://www.MurphyRandle.com\nOn Saturday, May 25, 2013 at 9:31 PM, Alex Browne wrote:\n\n@lukemelia (https://github.com/lukemelia) and @murphyrandle (https://github.com/murphyrandle): I can verify that I have the same problem with psql (and with rails dbconsole). Unsetting the env variable seems to fix the issue (but then it breaks rails).\nThe following command will unset the DYLD_FALLBACK_LIBRARY_PATH environment variable temporarily. It does this by entering a \"subshell\" which does not alter your current bash environment. After you exit psql it will be set again so that rails (and probably some other things that depend on Postgres.app) will function properly.\n(. ~/.bash_profile; unset DYLD_FALLBACK_LIBRARY_PATH; psql)\nThis is assuming that you're using bash and that your .bash_profile is located in your home directory. If that's not the case (or if you're using a .bashrc or other environment setup instead of .bash_profile) change the ~/.bash_profile part of the command to the path to your environment setup script.\nIf you don't want to type all that out, you can create an alias in your .bash_profile (or equivalent). Something like:\nalias psql=\"(. ~/.bash_profile; unset DYLD_FALLBACK_LIBRARY_PATH; psql)\" and optionally\nalias dbconsole=\"(. ~/.bash_profile; unset DYLD_FALLBACK_LIBRARY_PATH; bundle exec rails dbconsole)\" if you want to use rails dbconsole.\nThis will automatically and temporarily unset the DYLD_FALLBACK_LIBRARY_PATH when you run psql or dbconsole. It's not ideal, but I tested it and it works for me.\n\u2014\nReply to this email directly or view it on GitHub (https://github.com/PostgresApp/PostgresApp/issues/109#issuecomment-18457400).\n. Hmm, so I downloaded the source and did my own build. That seemed to have fixed my problems.\n. So, is anybody maintaining this app still?\nAnd thanks for the great answer, @jakob\n. Thank you!\n. \n",
    "memoht": "Ran into exact same problems outlined here. Currently sitting back at 9.2.2.0 until this is sorted out.\n. @pboling Farther up in this thread @swrobel provided a link to the 9.2.2.0 version. http://postgres-app.s3.amazonaws.com/PostgresApp-9-2-2-0.zip\n. I just downloaded the Beta and was able to successfully fire up my Rails apps and connect to the database, so it appears this is working. I'll run with it for a bit and see if it works out. Thanks for working on resolving this issue.\n. I also just tried Beta 2 and it did not see my existing databases. Went back to previous beta and they are there.\n. ",
    "lukemelia": "I'm experiencing the same ilbedit.3.dylib issue as @murphyrandle with the DYLD_FALLBACK_LIBRARY_PATH workaround. It occurs when I try to run psql.\n. ",
    "realdoug": "@murphyrandle yea, according to issue #113 it may a problem introduced by this commit: https://github.com/PostgresApp/PostgresApp/commit/0897d9bee28105cf4bab493344e5d550ffd5a0ba\nIs that plausible at all?\n. ",
    "dfuentes77": "same here, reverted to 9.2.2.0\n. downloaded the app on latest Lion and it won't launch, it keeps crashing\n. similar error to this one:  http://stackoverflow.com/questions/18596726/postgres-app-fails-to-start\n. ",
    "gverri": "Is 9.2.2 working fine for you? Or should I go back to default?\n. Seems to be working here too.\n. ",
    "pruett": "+1 for downgrading to 9.2.2.0; fixed the following issues (Rails 3.2.13):\ndlopen(/Users/pruett/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/pg-0.15.1/lib/pg_ext.bundle, 9): Library not loaded: @executable_path/../lib/libssl.1.0.0.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/lib/libpq.dylib\n  Reason: image not found - /Users/pruett/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/pg-0.15.1/lib/pg_ext.bundle\n. ",
    "wlgithub": "export DYLD_FALLBACK_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib:$DYLD_LIBRARY_PATH\nworks, but it breakdown autotest and rspec etc\nSo I had to use\nexport DYLD_FALLBACK_LIBRARY_PATH=/Applications/Postgres.app/Contents/MacOS/lib:/usr/lib:/usr/local/lib:$DYLD_LIBRARY_PATH\n. ",
    "vamshionrails": "Simply do\nsudo ln -s /Library/Postgresql/9.2/lib/libpq.5.dylib /usr/lib/libpq.5.dylib \nVamshi\n. ",
    "henrrrik": "Beta works for me too.\n. ",
    "dotpao": "Beta version works fine\n. ",
    "hadiS": "Beta works for me.\n. ",
    "cmattson": "Beta's working fine here too.\n. ",
    "JacobEvelyn": "Beta works for me too.\n. The same problem occurs for me with Postgres.app 9.4.5.\n. Additionally, when I add ?sslmode=require to the URL string as suggested here I get this error: sslmode value \"require\" invalid when SSL support is not compiled in (PG::ConnectionBad)\n. which pg_config does indeed point to the Postgres.app version, and even changing my shell's $PATH to have Postgres.app as the very first item still doesn't solve this issue. I'm not sure what else to try to get to the bottom of this.\n. Thanks for the help, @jakob! It appears to work after uninstalling and recompiling the pg gem; not sure why that was necessary but thanks for the suggestion!\n. ",
    "motymichaely": "Beta works for me too.\n. ",
    "wycats": "@jakob is the solution to use @loader_path. I hit these issues when trying to use Postgres.app with Tokaido and was able to resolve them via @loader_path.\n. @jakob Awesome. Tokaido works great with the beta! I'm excited for people to be able to use Tokaido+Postgres.app to get Rails apps running quickly with little hassle.\nI posted about my progress at:\n- Running Discourse: The Benchmark\n- Postgres.app Beta Works!\n. ",
    "Yenwod": "the beta works for me, too\n. ",
    "Albertc": "Forgive my ignorance, but in my case don't know how to solve.\nI have Postgres Database installed in my Mac OSX ML, with \"Postgres Admin\", but without any Postgres.app file\nDatabase Server: PostgresSQL v9.1.9.1\nWith other projects with Rails 3.0.9, gem 'pg' works fine with gem pg '0.14.1'.\nNow with Rails 4, and Ruby 2, I get this error every time I run rake command.\nHow can I downgrade to 9.2.2 version?, where is the file to change? \nThanks you\n. You are right, I was lost, thanks you. \nI solved the problem just correcting the folder of gem install configuration: gem install pg -- --with-pg-config=/opt/local/lib/POSTGRESQL91/bin/pg_config\n- Seems than when you write you own problems, the solutions comes alone. Sorry for the inconvenience\n. ",
    "vitamino": "The beta is ok :) Thank you!\n. ",
    "craigkerstiens": ":+1: for shipping a new release \n. ",
    "scmx": "@jakob, I get this:\n$ psql\ndyld: Library not loaded: /Users/jakob/Documents/pg92/src/../Postgres/Vendor/postgres/lib/libssl.1.0.0.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/bin/psql\n  Reason: image not found\n[1]    1137 trace trap  psql\n. ",
    "kylefritz": ":bomb: work guys!!! \n. ",
    "schmielson": "FWIW: I'm unable to run the current release (9.3.0) on Mac OS X Mavericks. I had to downgrade to 9.2.2.0 as mentioned above. 9.2.4.3 did not work for me.\n. @leods92 thanks for the heads-up. Interesting - I just gave 9.2.4.4 a whirl and I get a dylib failure:\nrake aborted!\ndlopen(/Users/[USERNAME]/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/pg-0.15.1/lib/pg_ext.bundle, 9): Library not loaded: @loader_path/../lib/libpq.5.dylib\n  Referenced from: /Users/[USERNAME]/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/pg-0.15.1/lib/pg_ext.bundle\n  Reason: image not found - /Users/[USERNAME]/.rbenv/versions/2.0.0-p195/lib/ruby/gems/2.0.0/gems/pg-0.15.1/lib/pg_ext.bundle\nStrange. Back to 9.2.2.0 for now...\n. ",
    "averas": "+1\n. ",
    "revmischa": "I experienced this same issue on 10.7.5\n. ",
    "metajungle": "+1 \nFixed it with 'brew install libtiff' but would be great if this was directly bundled. \n. ",
    "Hunter5117": "I am encountering the same issue except that brew installed the libtiff.3 library when the system was asking for the libtiff.5.\nStill unable to get postgis extension to install.\nI too am on OSX 10.7.5 and postgres 9.2.4.1.\nAny thoughts would be appreciated.\n. To all who have been having the PostGIS issue with their Postgres installation on Mac. \nI un-installed all my PostGreSQL installations, PostgresApp, etc and re-installed using only the programs from the Kyngchaos website, PostGres, PostGIS and all the necessary frameworks which were pretty much already installed since I also get my QGIS from Kyng as well. PostGIS installed flawlessly and so far has been working perfectly with QGIS 1.8. \nWorks perfect with the PgAdmin3 App, QGIS browser, etc.\nOf course does not give convenience of the PostgresApp but is working as expected.\nHope this helps.\n. ",
    "jazztpt": "+1 - what Hunter5117 said, system looking for libtiff.5 but brew install libtiff and brew upgrade libtiff install and link 3.9.5 (libtiff.3.dylib).\nJust updated to OS X 10.8.4\n. ",
    "lev": "+1 - same results as Hunter5117, MRigal and jazztpt\n. ",
    "kdyer": "+1\n. ",
    "tompesman": "Almost the same problem with PostgressApp version 9.2.4.1\ndyld: Library not loaded: /Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/lib/liblwgeom-2.0.1.dylib\n  Referenced from: /Applications/Postgres.app/Contents/MacOS/bin/./shp2pgsql\n  Reason: image not found\nTrace/BPT trap: 5\ninstall_name_tool -change /Users/mattt/Desktop/PostgresApp/Postgres/Vendor/postgres/lib/liblwgeom-2.0.1.dylib /Applications/Postgres.app/Contents/MacOS/lib/liblwgeom-2.0.1.dylib shp2pgsql\n. Same for me, beta fixes this issue! :+1: \n. ",
    "springmeyer": "bump, any word on this?\n. @mattt - is there anything that needs improving with this patch before it can land? Anything I can do to help get this fixed and a new release tagged? I recently switched this tutorial to recommend PostgresApp but all users that do not already luckily have libtiff installed are being blocked by this issue.\n. Thanks @jakob!\n. ",
    "amirmanji": "+1, ran into the same issue\n. ",
    "nijikon": "+1\n. ",
    "Jacob640": "+1 on this one.\nJust got bitten by this when compiling textmate.  Because the posgresql app replaces openssl the compile encountered #113 when trying to import the openssl CA list.   \nPerhaps it would be better to symlink the postgresql specific executables from /Applications/Postgres.app/Contents/MacOS/bin/openssl to another folder and direct users to add that to their PATH instead.\n. Wouldn't that mean that the MacOS provided psql utility from /usr/bin would mask the Postgres App version. \nI don't know what this would mean on 10.8 but I do know that the 10.7 psql version is not 9.2. Though it does work with 9.2 it claims that incompatibilities may exist though I do not know if this claim is accurate.\nOn 30 May 2013, at 12:58, jakob notifications@github.com wrote:\n\nMost of the executables in the /Applications/Postgres.app/Contents/MacOS/bin directory aren't actually needed by PostgreSQL.app. We only need the libraries from most dependencies. The reason for all the unnecessary binaries is that we currently just copy everything from the build directory into the PostgreSQL package.\nThe solution would be to go through all the binaries and libraries, and to copy only those we actually need. This would avoid lots of potential conflicts, and it would have the nice side effect of reducing the size of PostgreSQL.app.\nHowever, going throught the files one by one will take a long time and is error prone itself -- if we forget a required file, we will again have lots of trouble.\nA quick workaround against the shadowing is to use PATH=\"$PATH:/Applications/Postgres.app/Contents/MacOS/bin\" instead of PATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\". This will make sure that system-provided tools are preferred (use which openssl to check which version will be called), but then you have to make sure you don't have another copy of psql on your path if you want to use the one provided from Postgres.app\n\u2014\nReply to this email directly or view it on GitHub.\n. Just for your info the 10.7 psql version is 9.0.10 if that is ever useful to you.\n\nOn 30 May 2013, at 14:24, jakob wrote:\n\nDarn, I didn't know MacOS shipped with psql. It seems that in 10.8 it is version 9.1.5. So apparently that workaround doesn't work.\nAnyway, I'm currently working on actually fixing the problem, ie. only copying the necessary files into the package. We'll see how that goes.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "wongwf82": "Thanks for your latest commit jakob. It worked!\n. ",
    "tildeslash": "Requires modification to how PostgresApp is started (not via pctl) and the XPC service implementation to listen for SIGCHLD (waitForExit) of the postgres server process. Right now, starting the Postgres server is fire and forget (after startup status is read).\n. Glad if it can help. One more patch is sent to properly determine if postgres started or not. Apologises for not combining, but saw it later, which implicit answers your question about testing.\nOn 07 Dec 2013, at 07:20, Jakob Egger notifications@github.com wrote:\n\nThank you, this is awesome (and long overdue).\nHow much testing did you do for this?\n\u2014\nReply to this email directly or view it on GitHub.\n. I'm sorry, I assumed the patch was unwanted and deleted the fork and all code. It was a fairly small change and I'm sure you can recreate it from https://github.com/PostgresApp/PostgresApp/pull/161/files\n. Glad if I could be of help. Thanks yourself for maintaining and improving PostgresApp! \n. \n",
    "rclark": "Looks like it works! Thanks!\n. ",
    "jaimeiniesta": "Thanks @jakob, I've given it a try but the beta seems to be missing some files:\npg_config --pgxs\n/Applications/Postgres.app/Contents/MacOS/lib/pgxs/src/makefiles/pgxs.mk\nBut then this file is not found on the latest beta. It is on the latest stable release, 9.2.4.2, though.\n. Thanks @jakob, I've tried it again with PostgresApp 9.3.0.0 and \"mattt\" has disappeared but now I can see \"jakob\". \nThis is what I get when I run make:\n\u2794 make\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pgmp.o src/pgmp.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pgmp_utils.o src/pgmp_utils.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpq.o src/pmpq.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpq_agg.o src/pmpq_agg.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpq_arith.o src/pmpq_arith.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpq_io.o src/pmpq_io.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz.o src/pmpz.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz_agg.o src/pmpz_agg.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz_arith.o src/pmpz_arith.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz_bits.o src/pmpz_bits.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz_io.o src/pmpz_io.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz_rand.o src/pmpz_rand.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz_roots.o src/pmpz_roots.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -I. -I. -I/Applications/Postgres.app/Contents/MacOS/include/server -I/Applications/Postgres.app/Contents/MacOS/include/internal -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include/libxml2  -I/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/include  -c -o src/pmpz_theor.o src/pmpz_theor.c\ngcc -mmacosx-version-min=10.7 -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv  -bundle -multiply_defined suppress -o pgmp.so src/pgmp.o src/pgmp_utils.o src/pmpq.o src/pmpq_agg.o src/pmpq_arith.o src/pmpq_io.o src/pmpz.o src/pmpz_agg.o src/pmpz_arith.o src/pmpz_bits.o src/pmpz_io.o src/pmpz_rand.o src/pmpz_roots.o src/pmpz_theor.o -L/Applications/Postgres.app/Contents/MacOS/lib -L/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/lib  -L/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/lib -Wl,-dead_strip_dylibs   -lgmp -lm -bundle_loader /Applications/Postgres.app/Contents/MacOS/bin/postgres\nld: warning: directory not found for option '-L/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/lib'\nld: warning: directory not found for option '-L/Users/jakob/Documents/pg93/Postgres/Vendor/postgres/lib'\ntools/unmix.py < sql/pgmp.pysql > sql/pgmp.sql\nPlease note that in order to make pgmp in OSX you need to fix the Makefile:\nhttps://github.com/dvarrazzo/pgmp/issues/4\n. Thanks, and sorry I can't remember the version of PostgresApp that didn't have this problem. Some months ago I was able to compile the pgmp extension on a previous version, but I just can't remember which one it was.\n. :+1: it works, I've been able to compile and install the pgmp extension!\n. ",
    "zenweasel": "Just wanted to mention that I am getting this same issue when installing any drivers that looks for the Postgres libraries. Specifically psycopg2\n. ",
    "recursivecurry": "+1. I have same problem. I use\n. ",
    "thomg": "I did get this working. If I remember correctly, the launchd had re-started the system instance of PostgresSQL.\n. ",
    "aw3126": "I just installed the Postgressapp, when I run comment \"psql -h localhost\" but it prompt password. I just enter and can't login to the posgress. Why?\n. ",
    "eouia0": "I have the same problem.\n. ",
    "johanneswuerbach": "The fixed build is working. Thanks :)\n. ",
    "donaldbraman": "Same crash.  On 10.6.8.  I see now that it requires 10.7.  Runs fine on my 10.8.x machines.\n. ",
    "jakeonrails": "Anyone have a link to the old version? It crashes for me to.\n. @jakob Thanks for that! I didn't know the section existed.\n. ",
    "bendavies": "Confirmed, same here on 10.7.4\n. ",
    "san2488": "Saw same error on OSX 10.7. Switched to http://postgres-app.s3.amazonaws.com/PostgresApp-9-2-2-0.zip which works fine.\n. ",
    "echan00": "I don't see those two files in Postgres.app...\nI can't even open the application. \n. Thanks for helping Jacob. Yes, I downloaded the zip file again, even tried the 9.3.2.0-RC2.0 with same result\n. Looks like it was my unzip software. I'm using unarchiver for mac. I have resolved this problem now.\n. ",
    "jezdez": "Thanks for the info @jakob, that's good to know. Also something that would help the users when upgrading.\n. ",
    "ionrock": "I ran into this as well and a coworker recommended using the following to find out where the data directory is:\nSELECT current_setting('data_directory');\nThis help me discover the data directory has moved. If it seems reasonable, you could add that query in the docs.\n. ",
    "styledev": "Guys, it has been a month and this is still not in the docs, what gives? Took me a while to dig for this!\n. @ssbarnea - For 9.3.0 the data directory is located @ ~/Library/Containers/com.heroku.postgres/Data/Library/Application\\ Support/Postgres/var\n. I am having the same issue! You would also think they would update the docs! \nBut I figured it out! Make sure to quit Postgres.app first.\n1. $: cd /Users/YOURUSERNAME/Library/Containers/com.heroku.postgres/Data/Library/Application\\ Support/Postgres/var\n2. Open up the file pg_hba.conf and add below # IPv6 local connections\nremote connections:\nhost    all             all             0.0.0.0/0               trust\n1. Save and Close\n2. Open postgresql.conf and uncomment line #59: #listen_addresses = 'localhost'     # what IP address(es) to listen on;\nChange localhost to *\n1. Save and Close.\n2. Start Postgres.app\n3. Open up terminal\n4. $: psql -h localhost\n5. \\du\n6. Copy your username under Role name\n7. \\username parapxl\nChange parapxl to the username from step 10\n1. Set your password\n2. Confirm your password\n3. \\q\nEverything should work now. Test by going to terminal on the server running Postgres.app and type in psql -h 10.0.1.14  where 10.0.1.14 is the ip of your machine. Enter your new password and you will be logged in.\n. I forked the documentation here on github and made the change for them. My pull request is currently waiting for them to accept: https://github.com/PostgresApp/postgresapp.com/pulls\n. ",
    "ssbarnea": "Any fixes on this, I was wondering where is the data... and the configs....\n. I am looking forward to see this as released. BTW, because I do have postgresql client installed using brew, it seems that running psql from the command line works (obviously doesn't from the elephant menu on current release).\n. ",
    "thomasklemm": "Hi Jakob, thanks for your efforts. The prerelease works! I've repeated the exact same steps (put app in Applications folder, start, set \"start at login\", quit app, start app, see if checkmark is still there, and restart the laptop to see what happens if the checkmark is stilll there). \nWith your latest prerelease, everything works as you'd expect, the \"login at start\" setting is persisted and the app really boots up after a restart. Thanks so much!\n. ",
    "typicalpixel": "+1 to the prerelease. I had the same problem, now it works as intended. Thank you!\n. ",
    "liyanage": "Hi Jakob,\n@rpath does not force you to use a static location. The way it works is that the loading binary (any binary in the chain) can supply a list of possible prefixes. You do that with ld's -rpath option. In the value that supply, you can then again use @loader_path.\nThis lets binaries that load the dynamic libraries supply their own rpaths. @rpath is great because it introduces a level of indirection that lets the loads of the binaries get some control over the search path.\n. Hi Jakob,\nI just tried it, seems to work well.\n```\n$ mkdir test\n$ cd test\n$ virtualenv env\n$ . env/bin/activate\n(env)$ export PATH=$PATH:/Applications/Postgres93.app/Contents/MacOS/bin\n(env)$ pip install psycopg2\n(env)$ python\n\n\n\nimport psycopg2\nconn_string = \"host='localhost' dbname='liyanage' user='liyanage'\"\nconn = psycopg2.connect(conn_string)\ncursor = conn.cursor()\ncursor.execute(\"SELECT * FROM foo\")\nrecords = cursor.fetchall()\nrecords\n[]\n```\n\n\n\nI see that the application name is now Postgres93.app, which means this path ends up in the module binaries I compile myself as well:\n(env)$ otool -L ./env/lib/python2.7/site-packages/psycopg2/_psycopg.so\n./env/lib/python2.7/site-packages/psycopg2/_psycopg.so:\n    /Applications/Postgres93.app/Contents/MacOS/lib/libpq.5.dylib (compatibility version 5.0.0, current version 5.6.0)\n    /Applications/Postgres93.app/Contents/MacOS/lib/libssl.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n    /Applications/Postgres93.app/Contents/MacOS/lib/libcrypto.1.0.0.dylib (compatibility version 1.0.0, current version 1.0.0)\n    /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1197.1.1)\nWhen version 9.4 comes around and you change that name, I will have to rebuild all binaries, but I expect that they would actually continue to work because the ABI might stay the same for minor version bumps. This means that I'd have to needlessly rebuild all modules.\nPerhaps it would be better to name it just Postgres9.app, to force the rebuild at major version boundaries, where I expect the ABI to change.\n. Yeah I wasn't sure about that.\nI would definitely expect changes to the on-disk format etc., but I would also expect that the PostgreSQL developers would take care and strive to keep at least the parts of the API/ABI used by extension module authors stable. But I don't know for sure and I also don't have time to track this down, so I guess I'll just rebuild when 9.4 comes around.\nThanks for your work on this\nMarc\nOn Oct 28, 2013, at 11:57 AM, Jakob Egger notifications@github.com wrote:\n\nI can't find any official documentation for this right now, but I think in PostgreSQL, point releases are major releases. For example from 9.2 to 9.3 the on disk data format and ABI might change. From 9.3.0 to 9.3.1 those should stay the same. That's why I picked the first two digits for the name. \nOn 28.10.2013, at 17:16, Marc Liyanage notifications@github.com wrote: \n\nHi Jakob, \nI just tried it, seems to work well. \nI see that the application name is now Postgres93.app, which means this path ends up in the module binaries I compile myself as well. When version 9.4 comes around and you change that name, I will have to rebuild all binaries, but I expect that they would actually continue to work because the ABI might stay the same for minor version bumps. This means that I'd have to needlessly rebuild all modules. \nPerhaps it would be better to name it just Postgres9.app, to force the rebuild at major version boundaries, where I expect the ABI to change. \n\u2014 \nReply to this email directly or view it on GitHub. \n\u2014\nReply to this email directly or view it on GitHub.\n. \n\n",
    "LilyMihalik": "I am having this same problem today on Yosemite. Following a standard postgres.app install my Django application says it is unable to find the geos backend and locate the drivers.\n. ",
    "pablogb": "Thanks styledev!\nChanging postgresql.conf to listen to all hosts did the trick for me.\nI'll leave the issue open, since the docs do need to be updated to reflect the new path for the var directory.\n. ",
    "phnah": "I suffered the same problem since he Marvericks was already out this morning.\n. @ndemoreau You should change to \"/Applications/Postgres93.app/Contents/MacOS/bin\", since the app name is change in this alpha version\nYou can read it here :\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.3.1.0-alpha1\n. ",
    "ciddennis": "For now add /Applications/Postgres.app/Contents/MacOS/bin to your PATH in .profile.   That will give you access from the terminal at least.\n. Looks like it works for me.\nThanks\n. ",
    "danielnitsche": "Thanks @ciddennis that worked after a terminal restart (and I used .bash_profile instead).\n. ",
    "kulbida": "works for me too, thanks.\n. ",
    "NickWoodhams": "When I modify and reload my path, then run psql -h localhost\nKeep getting the error \npsql: could not translate host name \"localhost\" to address: nodename nor servname provided, or not known\nLocalhost works in the browser \nTried with 9.3.0.0 and the alpha version above. Any thoughts?\nUPDATE\nActually it was my hosts file. Has anyone else noticed that the hosts file on Mavericks is really stubborn? Commenting with the pound sign seems to break it. \n. What happens when you run /Applications/Postgres93.app/Contents/MacOS/bin/psql and /Applications/Postgres.app/Contents/MacOS/bin directly in your terminal?\n. ",
    "ndemoreau": "I'm having this issue despite having edited my .bash_profile.\nThis is how it looks like:\nexport APP_NAME=masterproj\nexport LC_ALL=\"en_US.UTF-8\"\nexport PGHOST=localhost\nPATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\"\nPATH=\"/usr/local/heroku/bin:$PATH\"\nPATH=\u201c/Applications/Postgres.app/Contents/MacOS/bin\u201d\nAny clue?\n. @jakob: I've removed the last line but still have the same issue. @guhelouis: I'm not using the alpha, I'm using the 9.3.0.0 version.\n@NickWoodhams: \nThis seems to be working in terminal:\n/Applications/Postgres.app/Contents/MacOS/bin/psql\npsql (9.3.0)\nType \"help\" for help.\nnicolas=# \nWhen I try from the postgress.app menu, I still get the same warning though.\nMy path doesn't seem to work either.\nStrange...\n. FYI: I installed the new alpha and now I can launch psql from the olifant menu.\nBut the path still doesn't work. In terminal, I need to type the full path to start psql\n. Hello, I can't solve this path issue. I searched in all the files you mentioned but couldn't find anything abnormal. When I do a echo $PATH, the path I entered in .bash_profile is not written.\nI understand this issue is not related to postgresapp. The new alpha works like a charm.\nSo thank you very much.\nI'll try to understand these PATH issues when I find the time...\n. ",
    "elikem": "@hanhpho thanks. \nThe alpha version works perfectly.\n. ",
    "sambecker": "I'm on Mavericks as well and haven't been able to use the Postgres App with a Rails installation\n. @jakob the pre-release worked! I've been having some trouble getting Mavericks to remember the Postgress App PATH in the terminal, which I constantly export, but it does seem to be working better all around.\n. ",
    "notnil": "I had this problem because the documentation from http://postgresapp.com/documentation instructions say to use:\nPATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\"\ninstead of \nPATH=\"/Applications/Postgres93.app/Contents/MacOS/bin:$PATH\"\n. ",
    "ekryski": ":+1: Gonna try the home brew install for now.\n. ",
    "abatko": "@jakob have you had a chance to fix this bug?\nI see that Heroku now supports PostgreSQL 9.3 by default (https://devcenter.heroku.com/articles/heroku-postgresql#version-support) and PostGIS 2.1 (https://devcenter.heroku.com/articles/postgis).\n. Indeed, 9.3.1.1 RC 1 works. Thank you.\n. @dpiddy have you discovered a fix or workaround? Has the conversation moved elsewhere?\n. ",
    "Shpigford": "I'm also getting this error. I'm using the 9.3.1.0-alpha1 pre-release. This is on OS X Mavericks.\n```\n$ which psql\n/Applications/Postgres93.app/Contents/MacOS/bin/psql\n$ psql\npsql: FATAL: database \"USERNAME\" does not exist\n```\nI haven't changed my username. My previous Postgres installation isn't running (I force quit all instance of Postgres).\n. ",
    "dylanjha": "also happened to me on a virgin Mavericks install.  Had to createdb USERNAME myself.\nPS. thanks for maintaining Postgres.app, I love it.\n. ",
    "mcandre": "This bug occurs for me as well using the Homebrew formula for installing PostgreSQL.\nTrace:\n$ brew install postgresql\n...\n$ launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\n$ psql\npsql: FATAL:  database \"andrew\" does not exist\nSystem:\n```\n$ specs postgres brew os\nSpecs:\nspecs 0.8\nhttps://github.com/mcandre/specs#readme\npostgres --version\npostgres (PostgreSQL) 9.3.4\nbrew --version\n0.9.5\nsystem_profiler SPSoftwareDataType | grep 'System Version'\n      System Version: OS X 10.9.3 (13D65)\n```\n. ",
    "raychenon": "I first tried with Homebrew then I ran into this error. Then uninstalled postgres by brew\nI installed PostgresApp, this error showed up again.\nHow can you check if you have previous Postgres installed on the mac ?\nI use \n\nwhich psql\nbut it will show me  /Applications/Postgres.app/Contents/Versions/9.4/bin/psql\n. \n",
    "kenju254": "is there a solution to this yet ? I am getting the same error\n. ",
    "yangman-c": "just do like this:\nstep 1: createdb\nstep 2: psql -h localhost or psql\nhope useful to you.\n. ",
    "kultgenj": "When I type createdb USERNAME i get the response command not found, could you assist me?\n. ",
    "AgoniNemo": "```\ncreatedb -h localhost -p 5432 -U  testDB\npsql testDB\n```. ",
    "sarkarchandan": "For me as well, \"database doesn't exist\" error was showing up. While trouble shooting I figured that I accidentally dropped the database with my name that Postgresapp creates while initialising.\nI simply created one database with my name and things were fine. Thus, I assume that every time I launch the Postgresapp it checks connection for the database with my name. Please correct me if I am wrong.\nThanks in advance.. ",
    "ijohn": "Open psql doesn't work with the following error message:\n\"psql\" can't be opened because Postgres is not allowed to open documents in Terminal.\n. No data loss here\n. ",
    "tejinderss": "It is broken. I am using django application with Postgres 9.3 on Os X Mavericks. Now the issue I am facing that the runserver or syncdb command does not work. It errors out with:\nImportError: dlopen(/Users/josh/Dropbox/Projects/sqla/venv/lib/python2.7/site-packages/psycopg2/_psycopg.so, 2): Library not loaded: @loader_path/../lib/libssl.1.0.0.dylib\n  Referenced from: /Users/josh/Dropbox/Projects/sqla/venv/lib/python2.7/site-packages/psycopg2/_psycopg.so\n  Reason: image not found\nThe temporary fix for that is to create the symbolic links to /Applications/Postgres.app/Contents/MacOS/lib/libssl.1.0.0.dylib libssl.1.0.0.dylib and /Applications/Postgres.app/Contents/MacOS/lib/libcrypto.1.0.0.dylib libcrypto.1.0.0.dylib in /usr/lib.\nBut then I am unable to make postgis extension work. Here is the output of postgis version:\nPOSTGIS=\"2.1.0 r11822\" GEOS=\"3.3.8-CAPI-1.7.8\" PROJ=\"Rel. 4.8.0, 6 March 2012\" GDAL=\"GDAL 1.10.0, released 2013/04/24 GDAL_DATA not found\" LIBXML=\"2.9.1\" LIBJSON=\"UNKNOWN\" RASTER\nWhen I try to syncdb or runserver using django, I get an error:\nImportError: Could not find the GEOS library (tried \"geos_c\", \"GEOS\"). Try setting GEOS_LIBRARY_PATH in your settings.\nHere is the python traceback for the same:\nhttps://dpaste.de/r4CI\nPlease fix these issues. Would downgrading to 9.2 work? Please guide. Thanks.\n. @jakob Thanks for your reply. I used to have custom python too in mountain lion but it used to work fine. Anyways I am looking for newer version. Thanks again.\n. Seems to work fine now. One small issue, is there any workaround to adding \"bin\" path to the PATH environment variable? I don't want to tie that to my os path. In OS X 10.8 i was able to run the command line tools without adding explicitly in my OS path. Thanks.\n. Thanks for the clarification.\n. ",
    "kellybyrd": "I've been using Postgres.app with Mavericks for a week. I was launching psql from Quicksilver so I didn't notice until today, but I just saw the error mentioned above:\n\u201cpsql\u201d can\u2019t be opened because Postgres is not allowed to open documents in Terminal.\nEDITED part about  this working fine for a week. It hasn't, I was using Quicksilver to launch psql, not Postgres.app. I suspect this has been broken since I upgraded to Mavericks\n. ",
    "meantheory": "I have almost exact same error as reported in this ticket but I am using the system python for Mavericks with virtualenv.\nUsing 9.3.1.0-alpha1 does not resolve the issue.\npsycopg2 is still trying to load a newer version of libssl than is available in /usr/lib\n. Running the following command alleviates the issue without copying lr symbolically linking the libs inside the postgres93 app.\nexport DYLD_LIBRARY_PATH=/Applications/Postgres93.app/Contents/MacOS/lib\nI could just set this up in my shell to be permanent. Is this the ideal solution? Is there another fix?\n. Ok. I blew away my virtualenv. Made sure pg_config was pointed at Postgres93. Created new virtualenv and installed psycopg2 fresh so it would compile against correct target.\nAll works well now.\nMy apologies for my confusion and thank you very much for clearing it up.\n. ",
    "hammady": "I am using PostgresApp 9.3.0.0 on Mavericks.\nI have already included PostgresApp in my PATH so that psql launches the correct binary.\n$ which psql\n/Applications/Postgres.app/Contents/MacOS/bin/psql\nMy problem is in Ctrl+r which should bring in reverse-search, but it doesn't work.\n. ",
    "danp": "Having trouble managing history especially with large queries I've constructed with \\e in my editor, seems likely it's related to using libedit instead of readline.\n. I use postgresql from homebrew now.\n. ",
    "fab1an": "Could you compile postgresql using homebrew?\n. Libedit actually supports Ctrl+R.\nQuickfix: open ~/.editrc and add:\nbind \"^R\" em-inc-search-prev\n. Did you copy that exact line? And restarted the terminal?\n. Nice. If your further customization has to do with psql, can you share it?\n\nSent from my iPhone\n\nOn 30 Jun 2015, at 19:04, Thomas Sibley notifications@github.com wrote:\nWhile further customizing .editrc, it took me a few minutes to realize that some lines weren't working because the file does not appear to support comment lines starting with # (this is unlike .inputrc). Parsing of the file is silently aborted when an unrecognized line is seen.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "tsibley": "This is still pretty annoying, especially since @fab1an's workaround above doesn't actually work on my machine.  :-/\nCan Postgres.app not just statically link to readline at build time instead of using OS X's editline at runtime?\n. @fab1an I did copy the exact line.  It changed the behaviour of ^R yesterday, but it wasn't actually completing correctly (stuff I could see in history using up/down wasn't visible to completion).  In a newly launched iTerm, it now works as expected.  Thanks for the prod to try it again!\n. While further customizing .editrc, it took me a few minutes to realize that some lines weren't working because the file does not appear to support comment lines starting with # (this is unlike .inputrc).  Parsing of the file is silently aborted when an unrecognized line is seen.\n. Just some navigation basics that my fingers still use:\nbind \"^R\" em-inc-search-prev\nbind \"\\e[1~\" ed-move-to-beg\nbind \"\\e[4~\" ed-move-to-end\nbind \"\\e[3~\" ed-delete-next-char\nbind \"\\e[2~\" ed-quoted-insert\nbind \"\\e[1;5C\" em-next-word\nbind \"\\e[1;5D\" ed-prev-word\nbind \"\\e[5C\" em-next-word\nbind \"\\e[5D\" ed-prev-word\nbind \"\\e\\e[C\" em-next-word\nbind \"\\e\\e[D\" ed-prev-word\nThat's\n\u2022 history completion with Ctrl-R\n\u2022 Home\n\u2022 End\n\u2022 Delete\n\u2022 Insert\n\u2022 Ctrl-Right (\u00d7 3 different escape codes depending on term)\n\u2022 Ctrl-Left (\u00d7 3 different escape codes depending on term)\n. @jakob Two of the obvious problems with libedit include:\n\n\nStandard history/line navigation keys don't work out of the box, requiring arcane configuration.  Documenting this may help a little, but doesn't really fit into the \"It just works\" goal of the rest of Postgres.app.\n\n\nHistory entries aren't always recalled correctly by libedit, especially long queries composed with psql's \\e.  This commonly and frustratingly leaves me with truncated queries on a daily basis.\n\n\nIt seems like the arguments for not using libreadline are only predicated on deference to Apple?  The build time of libreadline seems a) likely to be insignificant relative to building Pg and b) not something that effects people daily.. ",
    "wiseman": "Any progress or conclusion to this issue?  I'm another person who had previously used homebrew's psql and switched to Postgres.App hoping it would make things easier, but found that its psql cleared my 100 KB .psql_history and no longer supported useful features like ctrl-R.  Is it still the case that the goal is to switch to libreadline, but there's a potential licensing issue?. One pretty annoying issue was that PostgresApp's libedit version of psql silently overwrote my existing libreadline-compatible .psql_history. A silent bug causing data loss is unfortunate.. ",
    "Splarv": "Eh, issue from 2013 still alive. I am not against the libedit, it must just works with multirows queries. Simple  example:\n/Applications/Postgres.app/Contents/Versions/latest/bin/psql\nType 2 rows (2 rows of text) query, launch. Return to it (for instance by arrow up) and try to delete by backspace. When the cursor come  to the first row it will appear at a wrong position. \nWith /usr/local/bin/psql (from home-brew) all fine.\nMay be psql works somehow wrongly with libedit?\nWorkaround is to install simultaneously postgresql.app and posgresql from home-brew. And install postgresql server from GUI, but psql from terminal (in this case launched psql from home-brew in my case).. ",
    "daniellangnet": "Agreed to this one. Just wasted several hours trying to figure out why my timezonetz columns would show the wrong date locally...\n. ",
    "rit": "I wasted an hour trying to find this config file under OSX:\n/Library/Application Support/Postgres/var-9-3/postgresql.conf\n. ",
    "craiglabenz": "Postgres' initdb documentation states:\nEnvironment\n  TZ\n    Specifies the default time zone of the created database cluster. The value should be a full time zone name (see Section 8.5.3).\nThus, putting the following in your /.bash_profile before running initdb will give you your desired results:\nexport TZ=UTC. Thanks for the explanation on that naming convention switch. I assumed 10.0 would be the standard, but your backstory was helpful.\nI removed and re-added the Postgres 10 server from my sidebar to confirm what Postgres.app's default path was and saw that it is well formed according to your above description. Given the confusion that you clarified above, I must have seen var-10 back when I first installed a PG 10 server, assumed it was a bug, and added a .0 to the end.\nThanks so much for the response! Postico and Postgres.app make the transition for a long-time MySQL POW to Postgres so much less intimidating :smile:. ",
    "calleerlandsson": "```\n\nwhich pg_dump\n/Applications/Postgres93.app/Contents/MacOS/bin/pg_dump\n```\n\nThat should be the right one?\n. I have no old version of Postgres.app in my applications folder. I tried uninstallinh and then reinstalling the pg gem and thereby building the native extensions again but this did not help.\nThe thing is that the activerecord-postgis-adapter gem shells out when running pgdump. It does so on this line\n. It hangs on/after pg_dump: reading user-defined tables as seen in my initial comment. When I run pgdump after it has crashed one time it succeeds but the uuid column i'm trying to add is missing from the dump.\n. When I run it like that I get a warning when it tries to dump:\nLOG:  database system was shut down at 2013-11-11 12:40:51 CET\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\nWARNING:  there is no transaction in progress\nDoes that tell you anything?\n. Sorry, after more investigation this seems to have to do with how ActiveRecord migration handles connections. I replicated the issue using the homebrew postgresql distribution and therefore the issue can't be in Postgres.app.\n. ",
    "ThomasGrunewald": "It\u00b4s Version 9.3..1.0 (18).\nThank you!\n. Thank you that solved my problem! \n. On an other machine I ran into another error:\npsql: could not connect to server: Connection refused\n    Is the server running locally and accepting\n    connections on Unix domain socket \"/tmp/.s.PGSQL.5432\"?\nSame version of postgres and no other version is running. \nDo you have any suggestions?\n. Thanks for your response. \nWith your suggestion I\u00b4m getting the following error now:\npsql: could not connect to server: Connection refused\n    Is the server running on host \"localhost\" (127.0.0.1) and accepting\n    TCP/IP connections on port 5432?\n. The Postgresapp is running like on the other computer and the process \"Postgres93\" is running too. \n. If I try to start the server manually I\u00b4m getting the following error: \nLOG:  could not bind Unix socket: Address already in use\nHINT:  Is another postmaster already running on port 5432? If not, remove socket file \"/tmp/.s.PGSQL.5432\" and retry.\nWARNING:  could not create Unix-domain socket in directory \"/tmp\"\nFATAL:  could not create any Unix-domain sockets\n. Yes, but there is no socket file in the tmp folder. \n. ",
    "reedstrm": "Ah good to hear - yup I found the releases, just had to guess it was over here on github. I've been recommending postgres.app for all my osx using colleagues, BTW. to date it's been great, modulo the occasional extension glitch (uuid-ossp  went missing in 9.2 for a while)\n. Thanks, That'll be a big help.\nOn Thu, Dec 19, 2013 at 7:50 AM, Jakob Egger notifications@github.comwrote:\n\nThe latest release\nhttps://github.com/PostgresApp/PostgresApp/releases/tag/9.3.2.0-RC1 also\nincludes plpython again.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/PostgresApp/PostgresApp/issues/150#issuecomment-30929477\n.\n\n\nRoss Reedstrom, Ph.D.                                 reedstrm@rice.edu\nResearch Scientist                                  phone: 713-348-6166\nThe Connexions Project      http://cnx.org            fax: 713-348-3665\nRice University MS-375, Houston, TX 77005\nGPG Key fingerprint = F023 82C8 9B0E 2CC6 0D8E  F888 D3AE 810E 88F0 BEDE\n. ",
    "hale": "Ah - I did this afterwards.  So setting the $PATH before gem install pg solves this? Makes sense.\nIt's pretty obvious but the docs also say PATH=\"/Applications/Postgres.app/Contents/MacOS/bin:$PATH\" whereas the new app name is Postgres93.app\n. ",
    "MrZoidberg": "Guys, I have faced the same problem. Is it fixed? I'm using the latest version  9.3.4\n15.04.14 01:39:01,548 Postgres[32669]: 32671 /Applications/Postgres.app/Contents/Versions/9.3/bin/pg_ctl: Status 1\n. ",
    "depsypher": "Also having this problem after upgrading to Mavericks.\nThe existing 9.3.1 install I had on there claims to be running, but gives me this:\nraymacpro:log rvanderborght$ psql -h localhost\npsql: could not connect to server: Connection refused\n    Is the server running on host \"localhost\" (::1) and accepting\n    TCP/IP connections on port 5432?\ncould not connect to server: Connection refused\n    Is the server running on host \"localhost\" (127.0.0.1) and accepting\n    TCP/IP connections on port 5432?\ncould not connect to server: Connection refused\n    Is the server running on host \"localhost\" (fe80::1) and accepting\n    TCP/IP connections on port 5432?\nUpgrading to 9.4.3.2 fails with \"Could not start on port 5432\"\n. Turns out the existing 9.3.1 install was failing because I had put this in postgresql.conf, and apple helpfully removed that directory as part of the Mavericks install:\nlog_directory = '/var/log/pg_log'\nPutting that dir back and giving it permissions got 9.3.1 working again, but why the 9.3.4 install fails is still a mystery.\n. ",
    "miketissenbaum": "I am having the same problem, I've tried reinstalling it (9.3.4).\nI ran the command line from the trouble shooting:\n/Applications/Postgres.app/Contents/Versions/9.3/bin/postgres -D \"/Users/research/Library/Application Support/Postgres/var-9.3\"\nAnd got:\nLOG:  could not translate host name \"localhost\", service \"5432\" to address: nodename nor servname provided, or not known\nWARNING:  could not create listen socket for \"localhost\"\nFATAL:  could not create any TCP/IP sockets\n. Tried it got this:\n```\nServer:     10.0.1.1\nAddress:    10.0.1.1#53\nNon-authoritative answer:\nName:   localhost\nAddress: 127.0.0.1\n```\n. Hrm - I actually get:\nuser3-227-232:~ research$ cat /etc/hosts\ncat: /etc/hosts: No such file or directory\n. Sorry got stuck traveling between countries - That seems to have worked jakob! Need to play with it a bit but no errors at least when launching postgres\nThanks for the help!!\n. ",
    "topiaruss": "Just to ask if you'd mind fixing this soon. This was frustrating little nit I tripped on today.  Thanks for a great project.\n. ",
    "Dagnan": "Thank you you are right. PGPORT was set to 15432. I don't know though where it is set.\nSo I updated my bash_profile to set it to 5432. Kind of ugly, I would like it to be set to the right value directly from the source :( (but I know that has nothing to do with PostgresApp).\n. ",
    "jordan5k": "This is the result, not sure what to make of it:\nKanter-Jordans-MacBook-Pro:~ jordan5k$ ps -ax | grep postgres\n  117 ??         0:00.01 postgres: logger process\n  119 ??         0:00.23 postgres: checkpointer process\n  120 ??         0:03.38 postgres: writer process\n  121 ??         0:03.40 postgres: wal writer process\n  122 ??         0:07.37 postgres: autovacuum launcher process\n  123 ??         0:25.35 postgres: stats collector process\n15219 ??         0:00.00 postgres: jordan5k jordan5k ::1(65452) idle\n15594 ttys000    0:00.00 grep postgres\nhow do I tell if Postgres93.app is running?  Many thanks.\n. hmmmm. i had uninstalled the enterprisedb postgres a few days ago using the uninstall app. i just removed the data folder and the postgres user per these instructions: http://stackoverflow.com/questions/8037729/completely-uninstall-postgresql-9-0-4-from-mac-osx-lion\nthe result of the ps -ax | grep postgres is now slightly different:\nKanter-Jordans-MacBook-Pro:~ jordan5k$ ps -ax | grep postgres\n  114 ??         0:00.00 postgres: logger process\n  116 ??         0:00.01 postgres: checkpointer process\n  117 ??         0:00.07 postgres: writer process\n  118 ??         0:00.05 postgres: wal writer process\n  119 ??         0:00.15 postgres: autovacuum launcher process\n  120 ??         0:00.34 postgres: stats collector process\n  787 ttys000    0:00.00 grep postgres\nbut still no luck extending postgris (same error as above).\nnot sure if this relates, but when i start postgres93.app from the terminal with psql -h localhost i get this warning:\nKanter-Jordans-MacBook-Pro:~ jordan5k$ psql -h localhost\npsql (9.0.13, server 9.3.1)\nWARNING: psql version 9.0, server version 9.3.\n         Some psql features might not work.\nType \"help\" for help.\njordan5k=# \nsorry for this newbie fail - i'm completely new to the terminal/postgres/etc. huge thanks for your help!\n. ",
    "tanakalen": "Thanks for the RC2!\n. ",
    "mattste": "Issue is resolved. It looks like I had another Postgres installation hiding on my computer.\n. I'd suggest running a finder search and double checking the only files you have are from the Postgres install. \n. ",
    "cranesandcaff": "I believe I have the same issue, I've ran brew uninstall, and have also uninstalled the folder using appcleaner from the applications folder. (My postgres install was a directory in the applications folder, I assume this is standard?)\nHow were you able to fix it, as far as I can tell I've removed all installs except for the Postgress.app\n. Yeah, I've had so much trouble setting up postgres...I had it set up I think but it kept asking for a password. I googled around and found some stack overflow informaiton on it but they said not to change the password adn that the password is an indent or something and I never got it up and running sadly.\n. ",
    "chrishiestand": "Thanks jakob - psql in the pre-release does seem to resolve the issue.\n. ",
    "brandondrew": "Yes.  I should have been more explicit.\nIt's been a while since I've scripted anything in iTerm (using some Ruby\nlibrary IIRC) but I'm quite sure it can be done.  \nOn Sat, Jan 25, 2014 at 6:53 PM, Jakob Egger notifications@github.comwrote:\n\nI assume you mean that \"Open psql\" should open iTerm instead of\nTerminal? Sounds like a good idea. The latest Postgres.app beta has a\npreference window, so I should be able to integrate that nicely.\nI'll have to check if iTerm has the same Apple script support as\nTerminal.\n\nReply to this email directly or view it on GitHubhttps://github.com/PostgresApp/PostgresApp/issues/168#issuecomment-33304487\n.\n\n\nBrandon Zylstra\nbrandon.zylstra@gmail.com\n. ",
    "dougjohnston": "+1 This would be nice to have so that Terminal doesn't get opened alongside iTerm. Thanks for building a great little app otherwise!\n. ",
    "rayshan": "+1 as a preference, yes please\n. ",
    "timestep": "+1 yes please\n. ",
    "kojiwakayama": "+1\n. ",
    "jwhitfield": "+1\n. ",
    "hgducharme": "+1\n. ",
    "nparsons08": "+1\n. ",
    "kpearson": "+1\n. ",
    "hicksca": "+1\n. @MattOates we are to lazy to alias '/Applications/Postgres.app/Contents/Versions/9.4/bin'/psql -p5432\npsql (9.4.4) ;)\n. ",
    "shenzhun": "+1\n. ",
    "MattOates": "also iTerm2 is there a reason why you can't just launch the default terminal app?\n. ",
    "davedub": "\n1\n. \n",
    "samhains": "+1\n. ",
    "luckydonald": "@jakob https://github.com/PostgresApp/PostgresApp/issues/168#issuecomment-33304487\nThe offered AppleScript:\n\n\n. ",
    "bithavoc": "@jakob I have the iTerm integration working. I noticed the header for Terminal.app is being generated on build and I wonder if I should the include the generated iTerm.h directly in the xcodeproj instead of creating another build step to generate iTerm.h just like we do for Terminal.h.\n. ",
    "nlpjoe": "when I open database in iTerm2, there is a error that \"The operation couldn\u2019t be completed. (com.postgresapp.Postgres2.ClientLauncher error 0.)\". ",
    "chrispysoft": "You have to make sure that iTerm is located inside your Applications folder. Since Postgres.app opens iTerm via Apple Script, you can check its availability with this script:\ntell application \"iTerm\"\n    activate\nend tell\nThis command should open iTerm, otherwise you'll be asked for its location. Hope this helps! . Thanks!\n. Thanks!\n. Thanks a lot, but there's still a little bug regarding the start/stop buttons - I'm going to fix it right now.... I've tested your new release but I'm not able to connect to the server (nothing happens when I press the Log In button - no errors). I'm using macOS 10.12.2.. I\u2019ve downloaded the application from the link you've provided to @jakob\n\nOn 2 Jan 2017, at 15:11, Nunzio Tocci notifications@github.com wrote:\n@chrispysoft https://github.com/chrispysoft, Did you download the application or did you build from source?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/PostgresApp/PostgresApp/issues/365#issuecomment-269977357, or mute the thread https://github.com/notifications/unsubscribe-auth/ARy5pT3ML3_XSWropQhFKRAIDJKPFLZoks5rOQWrgaJpZM4LTViZ.\n\n\n. Hope this helps. (There are no console messages)\n\n\nOn 2 Jan 2017, at 15:16, Nunzio Tocci notifications@github.com wrote:\n@chrispysoft https://github.com/chrispysoft Can you Open the Dev Tools (View > Toggle Developer Tools) and take a screenshot?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub https://github.com/PostgresApp/PostgresApp/issues/365#issuecomment-269977879, or mute the thread https://github.com/notifications/unsubscribe-auth/ARy5pSXJDgY7_QoQzCSk14Mii2Vkga3Kks5rOQa3gaJpZM4LTViZ.\n\n\n. I've tried all pre-defined connections and also added a custom one - no success and no error. Thanks! I merged the pull request and also updated the other pages in the docs.. Which version(s) did you use before trying the beta?. This sounds strange because the 2.1 beta1 corresponds to version 2.0.3, additionally including the binaries of PostgreSQL 10 beta. If you just want to test PostgreSQL 10, you could manually add this version to your 2.0.3 bundle. Just move/copy Postgres-beta.app/Contents/Versions/10 to the corresponding folder in /Applications/Postgres.app/Contents/Versions/. Now you should be able to select version 10 in the popup when you add a new server.. OK I just wrote \"Postgres-beta.app\" to distinguish between version 2.0.3 and 2.1 beta1, but in reality both bundles have the name \"Postgres.app\". Let's assume you've already installed version 2.0.3 inside your Applications folder and just downloaded the beta to  ~/Downloads/Postgres.app. Copy the folder ~/Downloads/Postgres.app/Contents/Versions/10 to your existing installation in /Applications/Postgres.app/Contents/Versions. Now your version 2.0.3 should also contain the binaries of PostgreSQL 10 beta. Please note that the auto-update will replace the whole app bundle, so you have to repeat this workaround after each update (as long as version 10 is in beta state).. Postgres.app starts the server with the port number specified in the server settings. This means, that changing the port in the config file has no effect. So you have two options:\n- change the port in the server settings (simplest solution - see screenshot below)\n- start the server from the command line, e.g.: ./pg_ctl start -D <varPath> -w -l <logPath> -o -p5433 (Make sure to execute the correct version of pg_ctl! It's located in /Applications/Postgres.app/Contents/Versions/[9.5 or 9.6]/bin)\n\n. 1. You have to create a new server to be able to specify a custom data directory. To do this, make sure the left sidebar is visible and press the \"+\"-button to add a new entry to the server list. Note that such a \"server\" contains just a reference to the data files; this means that these files won't be deleted if you remove a server from the list.\n2. Postgres.app is intended to be a standalone app. That's the reason you only see the databases which have been created using this app.\n3. GitHub is the best place for issue tracking. You might also want to check out the homepage for more information: http://postgresapp.com\nHope this helps \ud83d\ude0a. You can \"move\" images by deleting the server from the list (press button \"-\") and creating a new one (press button \"+\"). Set the data directory to your specific path and make sure that the server version matches the version of your data directory! (NB: Deleting a server from the list doesn't affect the files on your disk). This is not possible because Postgres.app contains bundle resources (libraries, etc.) which are linked by absolute paths. To achieve this, you could build your own customized version of Postgres.app.. We have already tried to fix this - it seems to be a bug in macOS 10.13 \ud83d\ude15. This error means that some files are missing or corrupted. Please delete and re-download the .dmg-file and try again.. Seems like Postgres.app couldn't retrieve your local username. So it tried to create/load data in an invalid directory (/Users//Library/... => should be /Users/username/Library/...\")\nJust thinking how this could happen... \ud83e\udd14\nIs your user account restricted in some way? You could try to create a new (admin) user on your mac and run Postgres.app from this account.... You just have to connect to your local hostname on port 5432 (use localhost or your Mac's IP). See http://postgresapp.com for more details.. Postgres.app uses the popular Sparkle Framework to support auto-update. You can manually disable this feature by setting a property in the plist-file:\n\nOpen /Applications/Postgres.app/Contents/Info.plist in your favorite text editor\nAdd the following lines of code BEFORE the last 2 closing xml-tags:\n<key>SUEnableAutomaticCheck</key>\n<false/>\nSave the plist-file and restart Postgres.app\n\nYour plist file might look something like this:\n\nNote: You can still trigger the update-check by choosing \"Check for Updates\u2026\" in the app menu.\nHope this helps!. Hi!\nPostgres.app automatically creates a superuser (with all access privileges);\nthis is your system user name - no password required.\nEverything you need to know and alternatives to pgAdmin\ncan be found on the Postgres.app website.\nDon't hesitate to reply or create an issue if you still run into problems!. Hi!\nUsually you don't have to modify any configurations to connect your client app to the local server. \nTry these things:\n\nOpen Postgres.app and create a new server; it will be initialized with default settings.\n(Click the sidebar button on the left bottom to toggle the server list and make sure to stop your \"dirty\" server before)\nUse an alternative client application. I recommend Postico - it's very easy to use and you should be able connect to your newly created server without entering any account information.\n\nFeel free to reply if this approach didn't fix your problem!. ",
    "davbeck": "Yeah, that is what I am starting to believe. I\u2019ve restarted my Mac several times without change. I have a fairly normal network (Airport Extreme with typical configuration) and am sitting on Starbucks wifi seeing the same issue.\nAlso, PG Commander says that it is \u201cNegotiating SSL\u201d the entire time it is trying to connect.\n. Bingo. PGSSLMODE=disable psql -h localhost works flawlessly.\n. - psql: https://gist.github.com/davbeck/5913620a29a2a819bdba\n- postgres: https://gist.github.com/davbeck/ac0192efa9bbfa6de4d1\nPostgres.app is version 93. Mac OS X 10.9.1.\n. Nope. Same issue.\n. SOLVED! It was a program called X3 installed on my computer which, is suppose to only monitor traffic. It was blocking localhost connections for both Postgres and 1Password.\n. I'm not sure. It was the latest at the time, but since I need Postgres for work, I uninstalled X3 when I discovered the conflict.\n. ",
    "griva89": "I finally managed to install pg using brew, but I am really not sure how it finally succeeded.\nNow everything works fine and it's super cool, thank you!\n. ",
    "boone": "Vielen Dank!\n. ",
    "charles-cai": "At the moment I failed to build MADlib for PostgresApp (9.3). But it does have code to support 9.3 instead of officially tested 9.2 support. I could install old 9.1/9.2 and compile MADlib again... but of course I would like to use be latest 9.3...\nI'm puzzled at why my build failed (the error message seems really simple but Im just unable to fix it) - hence reaching out to you guys to see if you are interested in helping and bundle it with PostgresApp?\nIt would be really great combining PostgreSQL, PostGIS and MADlib for machine learning in-database analytics - all in one place!\nSent from my iPhone 5, cheers!\nCharles\n\nOn 15 Mar 2014, at 13:37, Jakob Egger notifications@github.com wrote:\nCould you elaborate on that? I don't use madlib, but from the website it looks like it only needs to have psql in your path. That should be simple (see Postgresapp docs).\nIs there any specific reason why MADlib shouldn't work with Postgres.app?\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "mattrobenolt": "Didn't try. This failed to compile during the docs because of the missing dependencies on my machine. And I don't use ports for dependencies only brew which doesn't have all the stuff needed. So this was just an assumption for how it worked. :) If it's wrong, feel free to close and do it the correct way.\n. ",
    "tbussmann": "I bet, you are not authenticateing against the PostgresApp's postgresql but against another instance running on your machine. Look to the menu of PostgresApp icon in the menu bar, does it say \"Running on Port 5432\" or does it say \"Could not start\"? \nTry to stop or remove other instances of postgresql running on you machine and start PostgresApp again. \nFeature request: PostgresApp should 1. notfiy the user more obviously when it cannot start, 2. Do not allow / attempt to start psql from the menu if the (own) postgresql service isn't up.\n. > Im having problems with locales in PostgreSQL\nwhat kind of problems do you have? If it's about a strange ordering, like I encountered, you will have to realize that collations will not work on any BSD-ish OS (incl. OSX) for an UTF8 encoding. You will never get the sorting right, unfortunately.\n. you can see the reason for this with ls -l /usr/share/locale/de_DE.UTF-8 you see that LC_COLLATE only symlinks to la_LN.US-ASCII. You get the same if you sort something on the shell, so it's a OS specific, not PG specific problem. AFAIR this affects all BSD OS.\nSome ML posts of Tom Lane in that topic:\nhttp://www.postgresql.org/message-id/16510.1263450305@sss.pgh.pa.us\nhttp://www.postgresql.org/message-id/22721.1264203310@sss.pgh.pa.us\nhttp://www.postgresql.org/message-id/23053.1337036410@sss.pgh.pa.us\nIt seems we will have to wait for http://wiki.postgresql.org/wiki/Todo:ICU , use a different OS or use a function for sorting, that can internally use ICU form pl/perl, unaccent contrib, or your own implementation.\nTo me this is the biggest drawback of using PostgresApp (PostgreSQL on OSX in general) and something that should be clearly highlighted in the documentation.\n. funny, you were quicker while I was still googleing and typing :) \ndidn't know about the FreeBSD patch existing. Would be great if you can give it a try!\n. now that PostgreSQL 10 is approaching, I'd like to get back to this topic. \nIn the recent cycle patches landed upstream which support icu as an alternative collation provider (thus different from the FreeBSD patch discussed and experimented with previously in 9.4rc01/02). I have done continuous tests with Git master and beta builds with active ICU support on macOS. As far as I see Postgres.app 2.1beta1 does also include this. My tests were quite promising. Unfortunately at the current state the icu-provided collations cannot be used as cluster or database default collation (LC_COLLATE). So, to make use of it, users of PostgresApp either need to attach a COLLATE clause on the fly to each comparison and order statement, or for a easier use to columns, indexes or domains. To my tests this works nicely. With the example from above:\n```\nSELECT unnest(array['a','\u00e4','b']) COLLATE \"de-AT-u-co-phonebk-x-icu\" ORDER BY 1;\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 unnest \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 a      \u2502\n\u2502 \u00e4      \u2502\n\u2502 b      \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\nTo make this a bit more clear, I'd recommend to add a note in documentation and I'd consider to explicitly stating the missing default collation with a `--lc-collate=C` in initdb in [initDatabaseSync](https://github.com/PostgresApp/PostgresApp/blob/master/Postgres/Server.swift#L438) which is actually is:\n$ ls -l /usr/share/locale/de_AT.UTF-8/LC_COLLATE\nlrwxr-xr-x  1 root  wheel  28 27 Jan 22:48 /usr/share/locale/de_AT.UTF-8/LC_COLLATE -> ../la_LN.US-ASCII/LC_COLLATE\n`` \nthis would likely avoid further confusion and would provide a consistent behaviour again in case a database is moved to a different system supporting UTF8 libc collations.. I really like that elegant method. When implementing, please note not to end the path with an/` as the automatic detection of corresponding man pages would not work otherwise, as I just learned ;)\nTill this is done by the app itself, users of Postgres.app can easily create the file with the following command:\nsudo /bin/bash -c \"echo /Applications/Postgres.app/Contents/Versions/9.4/bin > /etc/paths.d/postgresapp\"\n. What postgres.app does when it starts for the first time (data dir not existing) is to do a initdb as the current user (this creates a superuser role named after the user) and a createdb for a database named after the current user. This has been the case for as long as I remember using Postgres.app. The benefit is that the client tools (like psql) default to a user and database named after the current login user, so you don't need to specify.\nIf you like full control over the init behaviour you can run these steps on your own (or using your own script) before you start Postgres.app for the first time with a data dir. You can then control the name of the superuser with the -U switch to initdb. Please note that the \"Open psql\" item in the menu of Postgres.app will probably not work out of the box if you use custom user / db names.\n. please have a to the documentation at http://postgresapp.com/documentation/gui-tools.html\n. With pgAdmin you only need to fill the Name field with any name you want to give the connection, it is just a description. The remaining parameters should be automatically filled with proper values to connect or can be left blank, respectively.\n. in that case, it seems you've entered \"postgres\" in the Username field. You should use your local mac username in this place, which pgAdmin should fill in by default if you register a new server.\n. As with most extensions it is not to hard to build them against the PostgresApp distribution. If you are comfortable with homebrew to provide the dependencies, you can roughly follow the following process to get pgrouting running:\nbrew install cmake boost cgal gmp\ncurl -LO https://github.com/pgRouting/pgrouting/releases/download/v2.6.2/pgrouting-2.6.2.tar.gz\ntar xzf pgrouting-2.6.2.tar.gz\ncd pgrouting-2.6.2\nmkdir build\ncd build\ncmake ..\nmake\nmake install\ncd ../..\nrm -r pgrouting-2.6.2\npsql -c \"CREATE EXTENSION postgis;\"\npsql -c \"CREATE EXTENSION pgrouting;\"\npsql -c \"SELECT version FROM pgr_version();\"\nCaveats:\n make sure the proper pg_config is in the path, if you follow the installation instructions this will be the one in the latest symlink which points to 11 currently\n due to a little error in the lastest releases (2019-02-14) at present building extensions does only work against pg11. This will be fixed soon, see #496 \n* due to a bug in the CMake file of pgrouting, the linking will fail. I'll provide a patch upstream - so far use cmake -DPOSTGRESQL_EXECUTABLE=`pg_config --bindir`/postgres .. instead of cmake .. . this post from Paul Ramsey indicates that it seem to be common practice to symlink the old library version to the new one to support pg_upgrade with only the new version of PostGIS installed for the new PostgreSQL version. . ok, here we see the error level of that specific message was actually changed between 9.4 and 9.5. It was newly introduced in Jan 2015 and backpatched up to 9.0 here after discussion and explanation as a safety net against a unhealthy condition here\nUnfortunately, I don't yet fully understand the problem with the --enable-nls compile and which conditions need to be given for the error to occur (and thus could be changed to get a workaround). It seems the locale cannot be determined at startup, a method is called to determine this from the OS which starts a thread which in turn is unhealty for the postmaster startup.\nObviously this affects not all OSX users. So, to narrow it down, can you please give details on your OS version and the Language & Region settings in System Preferences?\n. this indeed looks rather straight forward - having an empty LC_ALL seem to be normal\nI'm out of ideas here. Blindly experimented a bit with these functions in https://gist.github.com/tbussmann/a8bba87c2643b57ad29ba907ea1d3a55 which you could compile with gcc locale-test.c -o locale-test to me the output looks like \nEnvironment LANG = \"de_CH.UTF-8\"\nEnvironment LC_ALL = \"(null)\"\nRequest LC_ALL = \"C\"\nSet LC_ALL to default = \"de_CH.UTF-8\"\nRequest LC_ALL = \"de_CH.UTF-8\"\nTo my understanding that sequence shows the problem would be triggered on my system as well, but this isn't the case.\nMoreover you could check if en_US.UTF-8 is a valid locale at your system: \nlocale -a | grep en_US.UTF-8\nls -lah /usr/share/locale/en_US.UTF-8\nbut I doubt this all will lead to anything, unfortunately. Maybe the message' hint is misleading in respect to the locale at all and there is any other reason the postmaster became multithreaded (pthread_is_threaded_np was set) in your cases. \nYou mention PostgreSQL 9.4 is working well on your machine. Do you see the mentioned FATAL as a LOG message in the logs under 9.4?\nMaybe @jakob has any further idea on this?\n. oh - I just see the following comment:\n\nMoreover, Darwin's strxfrm() implementations is known to not effectively concentrate a significant amount of entropy from the original string in earlier transformed blobs.\n\nso it may be that the abbreviation feature is not used (aborted) on OS X anyhow. This first needs to be verified - TRUST_STRXFRM would effectively have no effect in that case.\n. your grep did not reveal the end of the path, you have configured. When experimenting with path_helper  I experienced a similar issue when ending the path with an / - see (https://github.com/PostgresApp/PostgresApp/issues/259#issuecomment-112159644)\n. seems you don't have the pg_trgm extension installed in the database in question. Try CREATE EXTENSION pg_trgm;\n. @jakob : did you ever contact GitHub support on the speed issue? I had issues with a big GIT repository that was hosted on GitHub but responding quite slow and giving timeouts when accessed via SVN. Their support was quite helpful and moved that repository to a faster server. Since then, the issues were gone. Maybe they can do a similar thing with the release-downloads of this repo?. Download from Switzerland:\n```\n$ speedtest --simple\nPing: 8.125 ms\nDownload: 508.44 Mbit/s\nUpload: 378.34 Mbit/s\n$ curl -O https://postgresapp-b082.kxcdn.com/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0  1825k      0  0:01:23  0:01:23 --:--:-- 1974k\n$ curl -O https://postgresapp.r.worldssl.net/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0  28.1M      0  0:00:05  0:00:05 --:--:-- 34.8M\n$ curl -OL -w \"%{url_effective}\\n\" https://github.com/PostgresApp/PostgresApp/releases/download/v2.1.3/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   607    0   607    0     0   1135      0 --:--:-- --:--:-- --:--:--  1134\n100  148M  100  148M    0     0  1267k      0  0:02:00  0:02:00 --:--:-- 1398k\nhttps://github-production-release-asset-2e65be.s3.amazonaws.com/3946572/aa7af970-1d50-11e8-8805-6cecbf74c740?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20180301%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180301T155517Z&X-Amz-Expires=300&X-Amz-Signature=f49ae385fd96641a610f883cdcd586b1589f200cd83145b7bba2228869005e11&X-Amz-SignedHeaders=host&actor_id=0&response-content-disposition=attachment%3B%20filename%3DPostgres-2.1.3.dmg&response-content-type=application%2Foctet-stream\nas you see, I've changed the last command to show the source from where in GitHub's CDN it actually downloads.. the `path_helper` which is responsible for processing the content `/etc/paths.d/` is actually executed by the systemwide `/etc/profile` - maybe you want to check this as well, it might be modified. Mine is looking as following:\n$ cat /etc/profile\nSystem-wide .profile for sh(1)\nif [ -x /usr/libexec/path_helper ]; then\n    eval /usr/libexec/path_helper -s\nfi\nif [ \"${BASH-no}\" != \"no\" ]; then\n    [ -r /etc/bashrc ] && . /etc/bashrc\nfi\n``. Thank you for providing these details. Here we can find the root of the issue. In your .profile the PATH is overwritten as you suspected. Inexport PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/smlnj-110.75/binthe previously set path is overwritten. You should change this in something likeexport PATH=$PATH:/usr/local/smlnj-110.75/bin` - how did you install smlnj? I had a quick look into the latrest .pkg from http://www.smlnj.org and could not find any profile modification in the postinstall script.\nFurther: \n$ cat /etc/paths.d/postgresapp\n/Applications/Postgres.app/Contents/Versions/9.5/bin\nthis seems a bit strange. Here version 9.5 is specified explicitly whereas the command from the documentation would add latest which is a symlink to the active version.. If you don't have set your path for PostgresApp, pg_config should be found in /Applications/Postgres.app/Contents/Versions/latest/bin/pg_config. But at first you apparently need a working lua installation. I did a try with the one Homebrew provides (5.2) but failed to build pllua 1.0 from pgFounrdy against PostgreSQL 10. I tried it with the current master from GitHub which  succeeded after adjusting the makefile to match the paths:\nLUA_INCDIR ?= /usr/local/include\nLUALIB ?= -L/usr/local/lib -llua\nwith this, make & make install ran successfully against a PostgresApp with PostgreSQL 10 and I was able to CREATE EXTENSION pllua; and run a simple test like DO $$ print(_VERSION) $$ LANGUAGE pllua;\nAs I'm not into lua nor pl/lua, I have no idea how stable the current master of pllua is and if it is supposed to run with lua 5.2 while the Makefile explicitly requests 5.1. At least there seems nothing in PostgresApp to stop you building and using it.. Sure, you can! \nThe general recipe is to get the extension's source, it's dependencies, make sure you have set the path correctly, so that PostgresApp's pg_config is reachable and run the usual ./configure && make && make install of the extension. If that was successful, you should be able to connect to your database and run a CREATE EXTENSION whatever;. The specific steps may differ from one to an other extension, but generally that's it. You can also install the pgxn client and use that to assist in the process.\nIf you would give some more details on what specific extension you want to install and where in the process you have trouble, the chance would be higher to find some user that as has experiences with it that can be shared. Without that, I can only recommend to follow the instructions of the extension authors.. You may find a start to understand how the PATH variable is constructed in issue #390\nSeeing your 'Update:' it seems exactly as @jakob suggested: you prepend something to the path which seem to contain the postgres tools as well. If you append that instead you should be fine. But make sure the two instances are not interfering with each other. . > Thoughts?\nWhat to do if you have multiple versions running? \nIn general, the client binaries of newer versions are compatible to access older servers without any problem. So using the latest should be fine. What use case do you have in mind?. As far as I'm aware of, the most recent CLI tools can be used against older versions of PostgreSQL in most cases. If you specifically want to limit the CLI tools to a certain version you can use that directory instead of the symlink 'latest' in the PATH, see https://postgresapp.com/documentation/cli-tools.html \nBut this affects the bundled versions within the main download of PostgresApp in the same way as if you \"Mix & Match\" with older versions.\nSee also #448 . I would really appreciate if PostgresApp would continue its history of being a easy deployable platform to play with and test the new and advanced features of PostgreSQL. \nUsually I maintain my own Mac build infrastructure against the official GIT master but unfortunately was busy with other priorities since before the JIT patch landed. I'll try to update that and share my knowledge, if it works out well. (Rather not within the next week - traveling with limited tech but all the more nature ;). Hi Jakob, I just updated my sources and did a pretty simple test on macOS 10.13.6 using llvm 7 from homebrew. That went out straight forward, I just had to include --with-jit and make sure llvm-config could be found. Of course this does not mean it is as easy to get it running for 10.10 and fully self-containted, but maybe you can give it another try? The way with-jit configurations are build were updated several times during the pre-release cycle, afaik.. thanks. With the LLVM mentioned above I can build the PostgresApp makefile (nice work, thus!) as easily by just adding the configure option. . > Short update: I've managed to build PG 11 with JIT support. It makes the package quite a lot bigger (more than 100MB)\nhm - in my builds the postgres itself is not much bigger with JIT support (232 vs 187MB for the whole Versions/11 directory of PostgresApp - difference are mainly the additional .a and .bc files). LLVM mainly seems to be a build requirement (otool -L /Volumes/Postgres-2.2beta3/Postgres.app/Contents/Versions/11/bin/* | grep llvm does show no dependency) - how much of it did you include in the distribution package? In a test I removed all of the shared Homebrew LLVM package used for building and was able to run and use postgres with JIT just fine. IIRC, the LLVM stuff is necessary again when building extensions, thus.. > in addition to that there is llvmjit.so, which is around 107MB in size. I don't know why it is so big, maybe it include debug symbols or something, I haven't checked if there's a way to make it smaller. \nhm, in my builds, it's just about 25MB\n\notool -L probably doesn't show the llvmjit.so dependency since PostgreSQL loads shared libraries dynamically at runtime.\n\nright. I should have checked documentation before: \"A JIT provider is loaded by dynamically loading the named shared library.\"\n\nAside from the size issue, the bigger problem is that building extensions is no longer possible if we enable --with-llvm, but don't include LLVM.\n\nThat point worries me most. On the other hand - most users of PostgresApp will likely not build own extensions and the ones that do, need additional compiler environment anyhow. Maybe it is enough to document the requirement to install llvm when building extensions?. The tablefunc extension is part of the core contrib modules since PostgreSQL 7.3 and was last updated in 9.4.1. These modules are shipped with PostgresApp since ever I could reconstruct (at least 9.1). So it is not necessary to update Postgres(App) just to use this extension as you implied in #500 . The psql meta command \\dx lists the installed extensions based on pg_extension. Try something like SELECT * FROM pg_available_extensions; to see what is currently available.. ",
    "kinkersnick": "Hey, thanks for the response.\nYes, you're right, it says 'Could not start on Port 5432'.\nHow do I remove all other instances of postgresql?\nS\n. It's ok, think I figured it out!\nThanks\n. ",
    "fletom": "Gotcha. Thanks!\n. ",
    "laurentades": "I'm stuck with same issue\n. Perfect\nThanks\nOn 28Apr, 2014, at 4:10 PM, Jakob Egger notifications@github.com wrote:\n\nTry the following:\nClose Postgres.app\nOpen Activity Monitor, see if any processes name postgres are running. If so, kill them.\nDelete the Folder ~/Library/Application Support/Postgres\nStart Postgres.app again\nWait a few moments before clicking \"Open psql\", initialising the database might take a few seconds\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "ecleel": "Never mind,\nI found the new bin folder /Applications/Postgres.app/Contents/Versions/9.3/bin/\nI Add it to PATH in .bash_profile file \nSorry for disturbing :|\n. ",
    "HerbertKoelman": "I wanted to setup a postgresql database access into my rails app.\n- rails : 4.0.0\n- ruby: 2\n- postgresql: 9.4.3.1\nThe installer complains it's missing some dependencies. Any idea ?\n$ sudo gem install pg -v '0.17.0' -- --with-pg-dir=/Applications/Postgres.app/Contents/Versions/9.3/\nBuilding native extensions with: '--with-pg-dir=/Applications/Postgres.app/Contents/Versions/9.3/'\nThis could take a while...\nERROR:  Error installing pg:\n    ERROR: Failed to build gem native extension.\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby extconf.rb --with-pg-dir=/Applications/Postgres.app/Contents/Versions/9.3/\nchecking for pg_config... no\nNo pg_config... trying anyway. If building fails, please try again with\n --with-pg-config=/path/to/pg_config\nchecking for libpq-fe.h... yes\nchecking for libpq/libpq-fs.h... yes\nchecking for pg_config_manual.h... yes\nchecking for PQconnectdb() in -lpq... no\nchecking for PQconnectdb() in -llibpq... no\nchecking for PQconnectdb() in -lms/libpq... no\nCan't find the PostgreSQL client library (libpq)\n* extconf.rb failed *\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\nProvided configuration options:\n    --with-opt-dir\n    --without-opt-dir\n    --with-opt-include\n    --without-opt-include=${opt-dir}/include\n    --with-opt-lib\n    --without-opt-lib=${opt-dir}/lib\n    --with-make-prog\n    --without-make-prog\n    --srcdir=.\n    --curdir\n    --ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby\n    --with-pg\n    --without-pg\n    --with-pg-config\n    --without-pg-config\n    --with-pg_config\n    --without-pg_config\n    --with-pg-dir\n    --with-pg-include\n    --without-pg-include=${pg-dir}/include\n    --with-pg-lib\n    --without-pg-lib=${pg-dir}/\n    --with-pqlib\n    --without-pqlib\n    --with-libpqlib\n    --without-libpqlib\n    --with-ms/libpqlib\n    --without-ms/libpqlib\nGem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/pg-0.17.0 for inspection.\nResults logged to /Library/Ruby/Gems/2.0.0/gems/pg-0.17.0/ext/gem_make.out\n. Thanks for your rapid answer, but still no cigar \ud83d\ude0a\nIt seems it's missing some libraries...\nARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/Versions/9.3/bin/pg_config\nFetching: pg-0.17.1.gem (100%)\nERROR:  While executing gem ... (Gem::FilePermissionError)\n    You don't have write permissions for the /Library/Ruby/Gems/2.0.0 directory.\nMacBook-Air:app herbert$ ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future sudo gem install pg -- --with-pg-config=/Applications/Postgres.app/Contents/Versions/9.3/bin/pg_config\nBuilding native extensions with: '--with-pg-config=/Applications/Postgres.app/Contents/Versions/9.3/bin/pg_config'\nThis could take a while...\nERROR:  Error installing pg:\n    ERROR: Failed to build gem native extension.\n/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby extconf.rb --with-pg-config=/Applications/Postgres.app/Contents/Versions/9.3/bin/pg_config\nUsing config values from /Applications/Postgres.app/Contents/Versions/9.3/bin/pg_config\nchecking for libpq-fe.h... yes\nchecking for libpq/libpq-fs.h... yes\nchecking for pg_config_manual.h... yes\nchecking for PQconnectdb() in -lpq... no\nchecking for PQconnectdb() in -llibpq... no\nchecking for PQconnectdb() in -lms/libpq... no\nCan't find the PostgreSQL client library (libpq)\n* extconf.rb failed *\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\nProvided configuration options:\n    --with-opt-dir\n    --without-opt-dir\n    --with-opt-include\n    --without-opt-include=${opt-dir}/include\n    --with-opt-lib\n    --without-opt-lib=${opt-dir}/lib\n    --with-make-prog\n    --without-make-prog\n    --srcdir=.\n    --curdir\n    --ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby\n    --with-pg\n    --without-pg\n    --with-pg-config\n    --with-pg-dir\n    --without-pg-dir\n    --with-pg-include\n    --without-pg-include=${pg-dir}/include\n    --with-pg-lib\n    --without-pg-lib=${pg-dir}/\n    --with-pqlib\n    --without-pqlib\n    --with-libpqlib\n    --without-libpqlib\n    --with-ms/libpqlib\n    --without-ms/libpqlib\nGem files will remain installed in /Library/Ruby/Gems/2.0.0/gems/pg-0.17.1 for inspection.\nResults logged to /Library/Ruby/Gems/2.0.0/gems/pg-0.17.1/ext/gem_make.out\n. Hourra :-D\nGive the man a cigar. It worked.\nThanks a lot\n. ",
    "zaeem": "thanks\n. ",
    "jmca": "@jakob Thanks for the solution, worked perfect for me.\n. ",
    "Zoso7728": "I spent the past two days all over the web trying to solve this same issue but this solved it instantly. Many thanks!\n. ",
    "imechemi": "It didn't work for me and finally I tried this on OS X and it worked! :)\n\nbrew install postgresql\n\n. ",
    "nikhammerellis": "@jakob YUS I have been looking this stuff up for HOURS! \n. ",
    "YonasBerhe": "export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.3/bin\nPostgres.app is missing from my application folder. @jakob I having the same error as the person who started the thread. \n. ",
    "imadityang": "Can anyone say me how it works in windows? i tried gem install pg , gem install pg --with-pg-config=\"path to pg_config.exe\" & also ARCHFLAGS=\"-arch x86_64\" gem install pg . but still it doesnt works. @jakob \n. ",
    "tharrington": "I am having this same issue when trying to install with $ bundle install\nadditional messaging:\n```\nchecking for pg_config... yes\nUsing config values from /usr/local/bin/pg_config\nchecking for libpq-fe.h... yes\nchecking for libpq/libpq-fs.h... yes\nchecking for pg_config_manual.h... yes\nchecking for PQconnectdb() in -lpq... no\nchecking for PQconnectdb() in -llibpq... no\nchecking for PQconnectdb() in -lms/libpq... no\nCan't find the PostgreSQL client library (libpq)\n extconf.rb failed \nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\nProvided configuration options:\n    --with-opt-dir\n    --without-opt-dir\n    --with-opt-include\n    --without-opt-include=${opt-dir}/include\n    --with-opt-lib\n    --without-opt-lib=${opt-dir}/lib\n    --with-make-prog\n    --without-make-prog\n    --srcdir=.\n    --curdir\n    --ruby=/System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/bin/$(RUBY_BASE_NAME)\n    --with-pg\n    --without-pg\n    --enable-windows-cross\n    --disable-windows-cross\n    --with-pg-config\n    --without-pg-config\n    --with-pg_config\n    --without-pg_config\n    --with-pg-dir\n    --without-pg-dir\n    --with-pg-include\n    --without-pg-include=${pg-dir}/include\n    --with-pg-lib\n    --without-pg-lib=${pg-dir}/lib\n    --with-pqlib\n    --without-pqlib\n    --with-libpqlib\n    --without-libpqlib\n    --with-ms/libpqlib\n    --without-ms/libpqlib\nTo see why this extension failed to compile, please check the mkmf.log which can be found here:\n/Users/tyler/Desktop/pepper/pepperapi/vendor/bundle/ruby/2.3.0/extensions/universal-darwin-17/2.3.0/pg-1.0.0/mkmf.log\nextconf failed, exit code 1\nGem files will remain installed in /Users/tylerharrington/Desktop/pepper/pepperapi/vendor/bundle/ruby/2.3.0/gems/pg-1.0.0 for inspection.\nResults logged to /Users/tyler/Desktop/pepper/pepperapi/vendor/bundle/ruby/2.3.0/extensions/universal-darwin-17/2.3.0/pg-1.0.0/gem_make.out\nAn error occurred while installing pg (1.0.0), and Bundler cannot continue.\nMake sure that gem install pg -v '1.0.0' succeeds before bundling.\n```\nHowever the command listed above works fine:\n$ sudo ARCHFLAGS=\"-arch x86_64\" gem install pg -v '1.0.0'\nIt appears the context of bundler is breaking something...\n. ",
    "montaserfzy": "@imechemi Thanks Man Worked for me . ",
    "fbonzon": "Connect to database template1 and do a CREATE EXTENSION postgis; there. All your new databases will be PostGIS-enabled by default from now on.\nRead more in the Postgres manual at 22.3. Template Databases.\n. ",
    "passion8": "just uninstall pg gem and do bundle install.\n. ",
    "jtmkrueger": "I should add that I'm using OSX 10.9.3\n. Here's a trace from running rake db:drop db:create when I add the extensions to postgis_extension in the database.yml:\n\u2604  rake db:drop db:create --trace                               Thu May 22 08:39:22 MDT 2014\n** Invoke db:drop (first_time)\n** Invoke db:load_config (first_time)\n** Execute db:load_config\n** Execute db:drop\n** Invoke db:create (first_time)\n** Invoke db:load_config\n** Execute db:create\nActiveRecord::JDBCError: org.postgresql.util.PSQLException: ERROR: could not open extension control file \"/Applications/Postgres.app/Contents/Versions/9.3/share/postgresql/extension/pos\ntgis_srs_esri_102003.control\": No such file or directory: CREATE EXTENSION postgis_srs_esri_102003 SCHEMA public\narjdbc/jdbc/RubyJdbcConnection.java:537:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/jdbc/adapter.rb:571:in `_execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/jdbc/adapter.rb:547:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract_adapter.rb:435:in `log'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activesupport-4.0.3/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract_adapter.rb:430:in `log'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/jdbc/adapter.rb:547:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:203:in `setup_gis_from_extension'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:198:in `setup_gis_from_extension'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:58:in `setup_gis'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:74:in `create'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/tasks/database_tasks.rb:73:in `create'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/tasks/database_tasks.rb:87:in `create_current'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/tasks/databases4.rake:12:in `each_current_configuration'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/tasks/databases4.rake:11:in `each_current_configuration'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/tasks/database_tasks.rb:86:in `create_current'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/railties/databases.rake:20:in `(root)'\norg/jruby/RubyProc.java:271:in `call'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:236:in `execute'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:231:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:175:in `invoke_with_call_chain'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/1.9/monitor.rb:211:in `mon_synchronize'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:168:in `invoke_with_call_chain'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:161:in `invoke'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:149:in `invoke_task'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:106:in `top_level'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:106:in `top_level'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:115:in `run_with_threads'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:100:in `top_level'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:78:in `run'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:165:in `standard_exception_handling'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:75:in `run'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/bin/rake:33:in `(root)'\norg/jruby/RubyKernel.java:1101:in `load'\n/usr/local/var/rbenv/versions/jruby-1.7.11/bin/rake:23:in `(root)'\nCouldn't create database for {\"adapter\"=>\"postgis\", \"host\"=>\"localhost\", \"database\"=>\"fleetdash_dev\", \"pool\"=>5, \"timeout\"=>5000, \"username\"=>\"jkrueger\", \"schema_search_path\"=>\"fleetdas\nh,public\", \"postgis_extension\"=>[\"postgis\", \"postgis_srs_esri_102003\", \"postgis_srs_sr_org_6703\"]}\nActiveRecord::JDBCError: org.postgresql.util.PSQLException: ERROR: could not open extension control file \"/Applications/Postgres.app/Contents/Versions/9.3/share/postgresql/extension/pos\ntgis_srs_esri_102003.control\": No such file or directory: CREATE EXTENSION postgis_srs_esri_102003 SCHEMA public\narjdbc/jdbc/RubyJdbcConnection.java:537:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/jdbc/adapter.rb:571:in `_execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/jdbc/adapter.rb:547:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract_adapter.rb:435:in `log'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activesupport-4.0.3/lib/active_support/notifications/instrumenter.rb:20:in `instrument'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activesupport-4.0.3/lib/active_support/notifications/instrumenter.rb:19:in `instrument'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/connection_adapters/abstract_adapter.rb:430:in `log'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/jdbc/adapter.rb:547:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:203:in `setup_gis_from_extension'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:198:in `setup_gis_from_extension'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:58:in `setup_gis'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/bundler/gems/activerecord-postgis-adapter-688469f648f5/lib/active_record/connection_adapters/postgis_adapter/rails4/postg\nis_database_tasks.rb:74:in `create'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/tasks/database_tasks.rb:73:in `create'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/tasks/database_tasks.rb:87:in `create_current'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/tasks/databases4.rake:12:in `each_current_configuration'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-jdbc-adapter-1.3.6/lib/arjdbc/tasks/databases4.rake:11:in `each_current_configuration'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/tasks/database_tasks.rb:86:in `create_current'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/activerecord-4.0.3/lib/active_record/railties/databases.rake:20:in `(root)'\norg/jruby/RubyProc.java:271:in `call'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:236:in `execute'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:231:in `execute'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:175:in `invoke_with_call_chain'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/1.9/monitor.rb:211:in `mon_synchronize'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:168:in `invoke_with_call_chain'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/task.rb:161:in `invoke'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:149:in `invoke_task'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:106:in `top_level'\norg/jruby/RubyArray.java:1613:in `each'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:106:in `top_level'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:115:in `run_with_threads'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:100:in `top_level'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:78:in `run'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:165:in `standard_exception_handling'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/lib/rake/application.rb:75:in `run'\n/usr/local/var/rbenv/versions/jruby-1.7.11/lib/ruby/gems/shared/gems/rake-10.1.1/bin/rake:33:in `(root)'\norg/jruby/RubyKernel.java:1101:in `load'\n/usr/local/var/rbenv/versions/jruby-1.7.11/bin/rake:23:in `(root)'\nCouldn't create database for {\"adapter\"=>\"postgis\", \"host\"=>\"localhost\", \"database\"=>\"fleetdash_test\", \"pool\"=>5, \"timeout\"=>5000, \"username\"=>\"jkrueger\", \"schema_search_path\"=>\"fleetda\nsh,public\", \"postgis_extension\"=>[\"postgis\", \"postgis_srs_esri_102003\", \"postgis_srs_sr_org_6703\"]}\nThe error looks different, but it still can't open the file.\n. ",
    "KimpossibleG": "Thanks! I was specifying the path directly. Also, I think that link doesn't work.\nManaged to get it installed after a brew update. Thanks again!\n. ",
    "csuhta": "Hooray! :+1: \n. Understood!. ",
    "jasonfb": "Hmm... I wish knew more about that. In pgAdmin III, under Preferences > Binary Paths, I see 4 fields\nSlony-l path: (empty)\nPG bin path: /Applications/pgAdmin3.app/Contents/SharedSupport\nEDB bin path: (empty)\nGP bin path: (empty)\nI do not see anything in here marked \"search path\" .. can you tell me where to look for that?\n. Whenever I run the restore of my database, I get these kinds of errors (hundreds and hundreds of them... this just one example)\npg_restore: creating FUNCTION geography_out(geography)\npg_restore: [archiver (db)] Error from TOC entry 894; 1255 17188 FUNCTION geography_out(geography) postgres\npg_restore: [archiver (db)] could not execute query: ERROR:  could not access file \"$libdir/postgis-1.5\": No such file or directory\n    Command was: CREATE FUNCTION geography_out(geography) RETURNS cstring\n    LANGUAGE c IMMUTABLE STRICT\n    AS '$libdir/postgis-1.5', 'geog...\npg_restore: [archiver (db)] could not execute query: ERROR:  function public.geography_out(geography) does not exist\n    Command was: ALTER FUNCTION public.geography_out(geography) OWNER TO postgres;\nSo, it seems like something is not set up correctly with Postgis. I've tried droping & recreating my database (both from pgAdmin and also from rails rake tasks) multiple times, and followed the instructions here http://postgis.net/install/ but not matter what I do I always see these errors when I run restore. \nIt seems like these functions aren't being created correctly, which makes sense to me, because then after I load up the database I am unable to use them in pgAdmin (except my rails app continues to work, completely counter-intuitively).\n. ",
    "Smillence": "I am also in China now. I have met with the same problem. I asked my friend to help me to download and they also could not. I have tried to use VPN and failed again. Could you do us a favour to upload it to dropbox and share to my email smillence1992@gmail.com? Thanks:)\n. Thanks @jakob for sharing! I have sent it to your email @callmewhy. Please check it! Good luck lol\n. Nice lol\n. I have met with another problem. It says \"You now have a PostgreSQL server running locally. .....Could not start on Port 5432\". I tried to uninstall using \"brew uninstall postgresql\" but it still did not work. Could you tell me how to uninstall postgresql completely? Thanks lol\n. I have deleted /Library/PostgreSQL folder and /etc/postgres-reg.ini. The postgre user account has also been deleted. But I got the same message. Could you help me with the problem? @jakob \n. ",
    "callmewhy": "Dropbox cannot be get in China, too.\nThanks for your help anyway : - )\nCould you send it to me via email, I would share it in a \"Chinese\" way.\nwhywanghai@gmail.com. Thx\n. Got it ! ;)\n. I shared it in Baidu SkyDrive. People in China can click HERE to download.\n. ",
    "enfascination": "Ah thanks.  You're probably generally right about pg_dump.  In my case the db is big, and bigger than my free space, so I had a greedy eye on pg_upgrade's --link option.  But that ran me into incompatibilities around lc_ctype/locale/utf8/somethingsomething that I'm working through. Might end up opting for pg_dump so I don't have to impose retrograde locale settings on 9.4. Thanks for the advice.\n. ",
    "JoeFryer": "Thanks for the quick response. As you suggested, I checked in Activity Monitor, and there were some processes named postgres. So, I killed them, and sure enough Postgres.app successfully connected (I had already tried this and it didn't to fix it the first time. Not sure why).\nI did then get an error an error saying the database does not exist, but createdb fixed that.\nI am still having a problem though. I'm trying to get a simple Rails test app working, and after starting rails server and going to http://0.0.0.0:3000, I'm getting the following error: \ncould not connect to server: No such file or directory Is the server running locally and accepting connections on Unix domain socket \"/var/pgsql_socket/.s.PGSQL.5432\"?\nI'm not sure if this is related though?\nThanks for your help anyway.\n. I've managed to fix it this now. Thanks for your help, @jakob \n. ",
    "thanhlevu": "$ sudo pkill -u postgres. try this:\n$ sudo pkill -u postgres. ",
    "xrmx": "Thanks for the answer, I won't have access to the machine again until next week to check the path. FYI the machine is a mac os x lion (10.7) 32 bit. \n. Ah! that indeed explains that. It's also briefly mentioned in the last paragraph here http://postgresapp.com/documentation/cli-tools.html\nThanks for the hint!\n. ",
    "erichanson": "Thanks for the update.\n. ",
    "idigit": "Hi Jakob,\nThanks for the quick response. I'm running OS X 10.10 Yosemite (should have mentioned this in my original post - my apologies).\nping: localhost gives me\nping: cannot resolve localhost: Unknown host\nscutil -r localhost gives me\nNot Reachable\nThe only thing I can think of is that I'm using Pow (pow.cx), but I'm not connecting to any VPN, little snitch, or x3.\n. I also wanted to quickly note that editing listen_address in postgresql.confto listen_addresses = '*' isn't working, or restarting.\n. @gblache \n```\n; <<>> DiG 9.8.3-P1 <<>> localhost\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 11599\n;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0\n;; QUESTION SECTION:\n;localhost.         IN  A\n;; ANSWER SECTION:\nlocalhost.      0   IN  A   127.0.0.1\n;; Query time: 4 msec\n;; SERVER: 192.168.1.1#53(192.168.1.1)\n;; WHEN: Thu Jul 31 11:39:43 2014\n;; MSG SIZE  rcvd: 43\n``\n. Following up, I rebooted and can now ping localhost, and am gettingReachable,Local Address`. Still getting the \"Could not start on port 5432 \" error though.\n. Randomly started working after 11 hours of debugging. Thanks guys.\n. If it pops back up I'll reopen. Thanks for the help, guys.\n. Reopening - I restarted and it's not working again. \nSuch odd behavior.\n. @annapetry In the end, I just had to wipe my whole computer and start fresh. Even doing a time machine backup to before Yosemite didn't fix the issue. Best of luck!\n. @bobmacneal By wipe my whole computer, I mean reinstall OSX from scratch :disappointed: \nOn the plus side, everything works like a charm now!\n. @jakob Pow's working fine now, yeah.\n. ",
    "gblache": "What does dig localhost output?\n. ",
    "annapetry": "I have the exact same issue.  All of my errors / outputs are identical to @idigit .\nAnd, after a few hours of debugging / freaking out, it started to work, randomly.  But now it doesn't work again.  Super frustrating.\nIf it would be helpful for me to try some things out, I'd be willing do do that.  If there was a magical fix, I'd be willing to do that, too.\n. Thanks for the reply.  The problem does still persist after uninstalling pow.cx. I've been able to continue working by changing the listen_address to 127.0.0.1 in postgesql.conf, as you suggested earlier. This is such an odd problem if only because it started a few days ago and seems to show up sporadically. \n. Fascinating.  Thanks for sharing!\n. ",
    "bobmacneal": "ugh. Same issue. @idigit by \"wipe my whole computer\", did you uninstall/reinstall postgresql via brew, or did you do more?\n. @idigit ouch. I'm considering switching all my development work to an ubuntu vm. Good for you getting to work.\n. @jakob I'm not using pow.cx\n. @jakob I have to apologize because I might have wasted your time. Yes, I have a similar issue where I can't start PostgreSQL on port 5432, but it's unrelated to the PostgresApp. In my case, the issue is Homebrew not playing well with Yosemite. I probably should ditch Homebrew and try PostgresApp. Again my apologies.\n. ",
    "h0jeZvgoxFepBQ2C": "I may have a solution for this problem:\nI was changing my /etc/hosts file with sublime text (Stable, v. 3065), saved (was asked for my password), and postgres didn't work anymore.. \nI opened up again my hosts file with sublime and everything looked fine.. Couldn't find any problems..!\nBut when I opened the file via vim/cat, I saw that the linebreaks were somehow corrupted by sublime..\nAfter pasting the content from sublime into vim, everything worked fine again!\n. ",
    "kirothehero1": "For others who may experience this problem, I had the same issue. I did some digging around and discovered that it's an issue with the /private/etc/hosts file.  I tried opening it with vim but it turns out for some reason it didn't exist. So I went into terminal  did a defaults write com.apple.finder AppleShowAllFiles YES . Then I navigated to the /private/etc/ folder and  copied it to the desktop. I edited with text edit to reference the 127.0.0.1   localhost line and copied it back into /private/etc. It worked!\n. ",
    "julianpistorius": "For time travelers from the future, if you see this error - then it is almost certainly because you hit the 'Open Files Limit'.\nSee:\nhttp://docs.basho.com/riak/kv/2.1.4/using/performance/open-files-limit/\n. ",
    "alexQueue": "@julianpistorius how did you come to that conclusion?. ",
    "aliabbas110": "I have been struggling on this also. It happens after a full restart of mac. could not get the cause but came up with following solution to fix this. \nsudo killall -INFO mDNSResponder\nhope someone can get the cause and permanent solution. . ",
    "utv": "Great! It works with 1.18.1\nThank you.\n. ",
    "ArunSaksena": "Thank you Jakob.\nMy username does not contain any special characters.  I think what happened is that I first tried to install the full version of postgresql from Enterprise DB.  During that installation, I entered in a different username than what is on my MacBook.  Then I uninstalled that version, and installed the PostgresApp.  I then got the error that I described in the comment above.\nI entered in export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/9.3/bin on the CLI, and I could createdb or enter in psql \u2013l;  it seemed to work in that session.\nHowever, after I quit and restarted the app, nothing seems to work anymore\u2026 I type in a command at the CLI, and nothing happens... it just comes back with the prompt again.\nWould appreciate your guidance ...\nBest regards | Arun\n. ",
    "labeneator": "I can confirm that this happens to me on pg 9.4 beta 2\n. ",
    "thomasdao": "I just downloaded beta3 and it has error when launched on Yosemite: Could not initialize database cluster. initdb: invalid locale name \"en_SG.UTF-8\"\n. ",
    "BarbaricCorgi": "Jakob's answer solved my problem.\n. ",
    "klouie93": "ok so it says it's running now, but when I write psql in command line, it says\npsql: could not connect to server: No such file or directory\n    Is the server running locally and accepting\n    connections on Unix domain socket \"/var/pgsql_socket/.s.PGSQL.5432\"?\nBut it does appear to be running  so I'm not sure\ncmu-786603:~ klouie$ ps aux | grep postgres\nklouie           620   0.0  0.0  2590364    680   ??  Ss    9:49AM   0:00.01 postgres: wal writer process     \nklouie           619   0.0  0.0  2590364   1520   ??  Ss    9:49AM   0:00.05 postgres: writer process     \nklouie           618   0.0  0.0  2590364    720   ??  Ss    9:49AM   0:00.00 postgres: checkpointer process     \nklouie           615   0.0  0.3  2590364  13576   ??  S     9:49AM   0:00.04 /Applications/Postgres.app/Contents/Versions/9.3/bin/postgres -D /Users/klouie/Library/Application Support/Postgres/var-9.3\nklouie           604   0.0  0.1  2464916   4268   ??  Ss    9:48AM   0:00.03 com.postgresapp.postgres-service\nklouie           758   0.0  0.0  2432768    596 s000  R+    9:53AM   0:00.00 grep postgres\nklouie           622   0.0  0.0  2446048    580   ??  Ss    9:49AM   0:00.01 postgres: stats collector process     \nklouie           621   0.0  0.0  2590496   1856   ??  Ss    9:49AM   0:00.01 postgres: autovacuum launcher process\n. ",
    "kevinzzz007": "Hi my app keep telling me there is another instance running already, but how do I shutdown that instance on Mac and restart Postgresql?  Thanks!\n. Hi, I figured it out.  I just needed to figure out my server directory and use \npg_ctl -D /server/directory/postgres stop\n. @jakob actually pg_ctl didn't work, had to use launchctl to stop it.  I tried this solution(http://superuser.com/questions/244589/prevent-postgresql-from-running-at-startup) to stop my postgresql start at startup, but I couldn't find the file com.edb.launchd.postgresql-9.0.plist, is there an alternative to using the solution in the link?  Thanks!\n. ",
    "mickeydonkey": "the postgresql document says \"To make both variants of PL/Python available in one installation, the source tree has to be configured and built twice.\" \n. ",
    "kellington": "Any update on this?  Python 3 seems to be gaining traction and 2016 might be time to make it available.\nThanks\n. ",
    "anthonydb": "Wondering if there's any thought of advancing this?. CREATE EXTENSION tablefunc; works on my install (PostgreSQL 11).. ",
    "crackernutter": "Any progress on this issue - I'm having a similar problem with postgres.app 9.4\n. ",
    "mattblair": "I ran into the same error trying to use Postgres.app's ogr2ogr to reproject some data with state plane coordinates to WGS84, and based on this, I entered this at the command line in Terminal:\nexport DYLD_FALLBACK_LIBRARY_PATH=$DYLD_FALLBACK_LIBRARY_PATH:/Applications/Postgres.app/Contents/Versions/9.4/lib/\nAnd that fixed the error message for ogr2ogr and some other related libraries.\nYou could also add that to your terminal profile.\n. Regarding temporary work-arounds:\nWhen I tried appending to the DYLD_LIBRARY_PATH (Postgres.app 9.4.1.1 on Yosemite) I got a different error:\ndyld: Symbol not found: __cg_jpeg_resync_to_restart\n  Referenced from: /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\n  Expected in: /Applications/Postgres.app/Contents/Versions/9.4/lib//libjpeg.8.dylib\n in /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\nTrace/BPT trap: 5\nHowever, based on this, I tried:\nexport DYLD_FALLBACK_LIBRARY_PATH=$DYLD_FALLBACK_LIBRARY_PATH:/Applications/Postgres.app/Contents/Versions/9.4/lib/\nAnd that fixed the problem with ogr2ogr, and fixed a launch failure I was having with GeoDjango as well.\n. ",
    "Kendogzone": "that seemed to work, thanks! I have two postgres applications listed now (Postgres and Postgres-9.3.5.0), is there one that I can safely delete or should I just leave them be?\n. ",
    "golovnin": "OK, when I try the last one, then I get the following messages in system.log (I have changed logging postgresql.conf to syslog):\nWindowServer[89]: CGXSetWindowListSystemAlpha: Invalid window 3002 (index 0/1)\nWindowServer[89]: CGXSetWindowListSystemAlpha: Invalid window 3003 (index 0/1)\nPostgres[10903]: '/Applications/Postgres.app/Contents/Versions/9.3/bin'/psql -p5432 -Aqt -c 'select 1' postgres >/dev/null 2>&1\nPostgres[10903]: 512\nPostgres[10903]: '/Applications/Postgres.app/Contents/Versions/9.3/bin'/psql -p5432 -Aqt -c 'select 1' postgres >/dev/null 2>&1\npostgres[10906]: [1-1] FATAL:  data directory \"/Users/user/Library/Application Support/Postgres/var-9.3\" has group or world access\npostgres[10906]: [1-2] DETAIL:  Permissions should be u=rwx (0700).\nPostgres[10903]: 512\nI have never changed permissions for the folder \"var-9.3\". The permissions looks now like this:\nuser:~/Library/Application Support/Postgres $ ls -lA\ntotal 0\ndrwxr-xr-x  20 user  staff  680 23 Sep 08:02 var-9.3\nWhen I change the permissions using the following command:\nchmod 0700 var-9.3/\nThen I can start the original Postgress.app and the one provided by you without any problem.\n. Oh, one minor note: after upgrading Mac OS X I have started \"Repair Disk Persmissions\" in Disk Utility. Maybe this changed the permissions for the \"var-9.3\" folder.\n. ",
    "JerryBlack": "I created an applescript app using the method documented in http://apple.stackexchange.com/questions/57385/where-are-system-environment-variables-set-in-mountain-lion \nto provide an environmental variable to enable the GDAL drivers, containing the line:\ndo shell script \"launchctl setenv POSTGIS_GDAL_ENABLED_DRIVERS ENABLE_ALL\nseems to work for me.\n. I had issues using the pg_upgrade approach for my upgrade, particularly as my data directory isn't stored in the default location (and I likely don't really know what I'm doing). Here are the steps I believe I used successfully...\nAfter running the installer for Postgres.app version 9.4\ncopy the essentially new empty data /var-9.4 folder to the directory that you wish to use\ndefault storage is: /Users/loginaccount/Library/Application Support/Postgres/var-9.4\ncopied to: /Volumes/MyBook4T/Postgres/var-9.4\nWithin the app contents, duplicate the resources of var-9.3 as shown in http://postgresapp.com/documentation/install.html  for using pg_upgrade\n```\n'Using pg_upgrade from the command line is a bit more difficult. This is recommended only if you have a large database and using pg_dump is too slow or uses too much disk space. Make sure you completely understand the process and have a working backup before attempting this!\nSince pg_upgrade needs the old and new binaries, you must make a special version of Postgres.app containing both the old and new binaries. For example, when upgrading from 9.3 to 9.4:\nRight-Click to \"Show Package Contents\" on the old Postgres.app\nRight-Click to \"Show Package Contents\" on the new Postgres.app\nCopy the folder Contents/Versions/9.3 from the old Postgres.app into Contents/Versions from the new Postgres.app'\n```\nQuit the running Postgres.app\nEnsure the path is set to the new Postgres installation\nPATH=/Applications/Postgres.app/Contents/Versions/9.4/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/usr/local/git/bin:/usr/texbin\nrun this command using the terminal\npg_upgrade \\\n -b /Applications/Postgres.app/Contents/Versions/9.3/bin \\\n -B /Applications/Postgres.app/Contents/Versions/9.4/bin\\\n -d /Volumes/MyBook4T/Postgres/var\\\n -D /Volumes/MyBook4T/Postgres/var-9.4\\\n -j 3\nOptimizer statistics are not transferred by pg_upgrade so,\nonce you start the new server, consider running:\n~/analyze_new_cluster.sh\nThis may not help/work for you, but after a number of false steps, I think this is what had worked for me (for 65 G of data).\n. Here is an example that generates a raster on-the-fly, which in my environment, generates the same error.\nSELECT ST_Transform(\n  ST_AsRaster(\n   ST_GeomFromText(E'LINESTRING(100.495995129 13.7117836894,100.495962221169 13.7117761471941)',4326),\n        100., -100.,\n        ARRAY['8BUI', '8BUI', '8BUI', '8BUI']::text[],\n        ARRAY[29, 194, 178, 255]::double precision[],\n         ARRAY[0, 0, 0, 0]::double precision[]\n           ) \n,32647);\nERROR:  rt_raster_gdal_warp: Could not create GDAL transformation object for output dataset creation\nCONTEXT:  SQL function \"st_transform\" statement 1\n. I have solved my problem by adding the PROJSO environment variable to an apple script which is executed at login. I also restrict the GDAL drivers to my minimum requirement, to hopefully reduce the security risk. The PROJSO may help with issue #239\ndo shell script \"launchctl setenv POSTGIS_GDAL_ENABLED_DRIVERS GTiff\"\ndo shell script \"launchctl setenv PROJSO /Applications/Postgres.app/Contents/Versions/9.4/lib/libproj.dylib\"\n. To almost answer my own question, I ran\n    launchctl remove com.postgresapp.PostgresHelper\nto remove the service that keep respawning (since Feb).\nStill not sure why it couldn't find a CFBundleIdentifier.\nPostgresHelper.app within Postgres.app 9.4.0.1 login items folder has the label 9.4beta3.0\n. off topic somewhat... When I upgraded to the PostgresApp 9.5 beta 1, the upgrade seemed to work, but it appeared that PgAdmin3. 1.20.0 wouldn't work with my database.  Are others using PgAdmin3 1.20.0 with the 9.5 beta releases?\nTo update my own question - PgAdmin3 1.22 Beta 1 (Oct 9. 2015) works for me with PostgresApp 9.5 Beta 2.\n. MacBook-Pro over wifi from Eastern Canada (network speed test at 203.5 Mbps)\n$ curl -O https://postgresapp-b082.kxcdn.com/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0  1915k      0  0:01:19  0:01:19 --:--:-- 2015k\n$ curl -O https://postgresapp.r.worldssl.net/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0  21.8M      0  0:00:06  0:00:06 --:--:-- 24.3M\nJerrys-MacBook-Pro:~ jerry$ curl -OL https://github.com/PostgresApp/PostgresApp/releases/download/v2.1.3/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   607    0   607    0     0   2592      0 --:--:-- --:--:-- --:--:--  2582\n100  148M  100  148M    0     0  22.8M      0  0:00:06  0:00:06 --:--:-- 26.0M\n\nOn Mar 1, 2018, at 11:12 AM, Jakob Egger notifications@github.com wrote:\ncurl -O https://postgresapp-b082.kxcdn.com/Postgres-2.1.3.dmg https://postgresapp-b082.kxcdn.com/Postgres-2.1.3.dmg\ncurl -O https://postgresapp.r.worldssl.net/Postgres-2.1.3.dmg https://postgresapp.r.worldssl.net/Postgres-2.1.3.dmg\ncurl -OL https://github.com/PostgresApp/PostgresApp/releases/download/v2.1.3/Postgres-2.1.3.dmg https://github.com/PostgresApp/PostgresApp/releases/download/v2.1.3/Postgres-2.1.3.dmg\n\n\n. ",
    "xstevens": "For me I just ran ./configure with no options and that built it and I found it under ./src/bin/pg_basebackup/pg_recvlogical.\n. ",
    "akohout": "+1\n. ",
    "DzhonPeppe": "Regarding item number 2, I've looked into it and according to Apple, this can be done only if the command line tool is packaged as a \"helper\" tool bundled within the app. I will look into standards and formats for this approach and see how I may be able to implement what I find into the project.. Hi Guys,\nI am new here and a relatively new Swift Developer. However, I am very anxious and excited to contribute and learn as much as possible.\n With that said, is anyone still working on this (it looks like it's been a while since the last comment)? Can I assist in either way (if someone is working on this topic, just tell me how I can help)? Or, is there perhaps a better task that a newbie like me can take on?\nI look forward to your answers and getting started!\nDzhon. Hi Shar-M! Can you provide a screenshot of the warning you are getting? I am sure you are aware of this, but Mac's provide a similar warning on anything you try to open which is not from iTunes or the App Store. I would like to see the difference if possible.\nThanks in advance!. ",
    "carlosfrodriguez": "Hi @jakob \nI'm sorry I'm not sure, Im having problems with locales in PostgreSQL and i saw that this directory is missing, so i tough that could be the reason.\n((enjoy))\ncr\n. ",
    "macarthy": "So if I want to add thai TH locale to do Thai string sorting in postgresapp, I need to get the TH locale installed to OSX, so that is listed in  locale -a \nIs that correct? \n. Looks like strcoll is a mess on OsX. Thanks for your work. \n. Quick question. if I rename this build PostgresWithICU.app, and run it it\nwill use the previous I was using with Postgres.app DBs etc ?\nOr do I need to move the data dirs etc.\nI'd like to try this out with Thai and Lao sorting.\nThanks\nOn 24 November 2014 at 14:09, Jakob Egger notifications@github.com wrote:\n\nAfter reading this blog post\nhttp://blog.2ndquadrant.com/ware-yosemite-possible-postgresql-upgrade-issues-os-x-10-10/\ni coame to the conclusion that Apple doesn't care the least about their\nPostgreSQL installation. Feel free to file a radar, but I don't feel like\nwasting my time reporting issues that will probably be ignored.\nYou can check if PostgreSQL is build with the ICU patch by running\npg_config (look for the --with-icu flag in the configure parameters).\nOr you can try sorting text. With my locale (de_AT.UTF-8) I run the\nfollowing query:\nSELECT unnest(array['a','\u00e4','b']) order by 1;\nOn a broken system, this will return\na\nb\n\u00e4\nWith ICU it will be sorted correctly:\na\n\u00e4\nb\n\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/216#issuecomment-64157627\n.\n. \n",
    "Chocksy": "@jakob any solution to this using the stable version instead of the release candidate?? \n. Thanks @jakob \n. ",
    "orbatec": "I don't quite understand why the correct order should be a \u00e4 b  ....  when I look at the codepoint values in UTF-8 for those characters, I see the values 97 228 98   ....  Sorting them in ascending order results in 97 98 228    or    a b \u00e4\nWhat am I missing?\n--Quote--\nOr you can try sorting text. With my locale (de_AT.UTF-8) I run the following query:\nSELECT unnest(array['a','\u00e4','b']) ORDER BY 1;\nOn a broken system, this will return\na\nb\n\u00e4\nWith ICU it will be sorted correctly:\na\n\u00e4\nb\n--End Quote--\n. @jakob Thanks! Yep...just spent an hour reading up on this and by god...why do we always make things so complex :-)  Unfortunately I am working on Mac with Postgres 9.4 ... my colleague has found a \"patch\" for 9.4 (acually rc01 or rc02) that seems to fix the behaviour. How come an rcxx fixes something that doesn't seem fixed in the final postgres?  (sorry, when I see fix, I mean workaround for a mac os problem)\n. ",
    "yb66": "Thanks @jakob, I really appreciate you taking the time to answer, and that's really helpful. Nice work with the app too.\nRegards,\nIain\n. ",
    "theshapguy": "+1\n. ",
    "gespinha": "I think the running of Postgres should be notified on the application welcome screen itself, just like XAMPP, that is the usual behaviour for a server app.\nThis way, the user could toggle this menu bar icon or not.\n. ",
    "joeyschoblaska": "Adding my support for this. The menubar icon should be toggle-able.\n. ",
    "vdhub": "Hello, any idea how to put this in a LaunchDaemon  plist file ? i`ve tried al the options but unfortunately no luck . \nThanks \n. ",
    "sebbean": "@mattt download / install / use an app so that i don't have to see a completely unrelated other app? \nI think the idea here is that almost all things that live in your menu bar have the option of not living in the menu bar in the preferences. \n99% of the time postgres is running juuuust fine.. so that lil elephant up there isn't doing a hell of a lot for me.\nMysql for instance has a panel that lives in the System preferences pane: (Works like shit but hey.. that's another story)\n\n. ha, @jakob i didn't even think of that.\nno worries man. thanks for this Elephant.app!\n\ud83d\udc90\n. ",
    "brettwooldridge": "Never mind, found the releases folder.  You guys rock.\n. ",
    "wlz1028": "Archive Utility works. I guess the zip tool I used corrupted the file. Thanks\n. ",
    "lightbe": "That worked.  Thanks!  Now I need to see what to do to make my applications point to the postgres.app databases.  Then I will delete the databases on the Apple installation.\n. I ended up deleting the databases on the Apple installed PostgreSQL.  Now I have only one database defined.  I will proceed from there.\n. It appears that this is not a problem after all.  I still get a RVM error as described because postgres.app is at the beginning of the PATH, not RVM.  However I can successfully use both without experiencing any problems.  The warning message scared me a bit but is not causing problems with RVM.\n. If that's the case it happened with the last virus definition update for Avast. I hope that's the case. I will try another virus scan program and reinstall postgres.app. I really love the app. I have it on my development and production servers.. ",
    "shacker": "Very interesting. And makes sense. My web app was configured to talk to localhost for the db, but I was browsing it on 127.0.0.1. Resolving that difference internally must take some time (especially with the random order resolution). If I hit refresh too quickly after the app restarted, it fell down.\nI've reconciled those two settings and at first blush, it seems better. I'll report back. \nThanks!\n. ",
    "awbacker": "Not sure... I'm using the 1.2-beta2 version.  Since I have the app policy still locked down, I had to use the right click and then cmd+open to get the security dialog to show the open button.   I did the same trick on Postgress.app too.  It asked me to move it to the apps folder after that, and I said yes.\nThis is a clean install of Yosemite, fwiw. I did port install postgres +options but I've never used it, and I don't see a postgres user, only this:  \n_postgres:*:216:_devicemgr,_calendar,_teamsserver\nIn any case, not a big big issue.  Normal postgres is a bit of a pain to get up and running, I will happily trade that trouble for a tiny username confusion that doesn't even affect most people. \n. Looks great, and maybe helpful to someone in the future.  Amazingly fast updates, I must say.\nJust a typo.  I am using 1.20 beta 2 from Oct 9, 2014. I think that's the latest.  \nAs for postgres.app, I think I got the latest, v9.3.5.2.  I will give it another shot... maybe I just ran it that way out of habit, and I didn't need to.  Let me check.\n. Aiyo... slow down :D You are too on top of it for a tired boy fighting with SQLAlchemy :dash: \nConfirmed that there isn't an issue with the signing.  I unpacked the app again and it didn't prompt me, so there is no issue there at all.  Sorry for the red herring.  I think I just did that out of habit, and after installing pgAdmin.\nI have it set to app store + identified devs.\n. ",
    "fourcolors": "I found it was located at /Users/whoami/Library/Application\\ Support/Postgres/var-9.3/postmaster.pid for your current version of postgres\n. ",
    "nmccready": "ok,. I'll keep digging thanks.\n. ",
    "AlexHill": "My 2 cents as a user of Postgres and Postgres.App: I think forking is acceptable temporarily, but should only be done with a commitment to getting the patch into upstream as well. If that's not going to be possible, don't fork.\nThe mailing list sounded very receptive to getting this into Postgres, so I think you'd have a lot of support there. Keep up the good work!\n. ",
    "dizzus": "Agree, adding debugger extension would be a great feature.\n. ",
    "avlad": "sure, exactly when on main page:\n\"Postgres.app is a full-featured PostgreSQL installation ...\". ",
    "xleliberty": "Hi, \nany progress on this ? \nthanks. ",
    "cheleb": "Hi,\n  Same issue in france ... I've resolved this issue with a temporary change of region settings to uk ...\n  Look like locale && region infering logic is buggy.\n  After postgres initdb you will be able to get back in your mountain :)\nHIH\n\n. ",
    "nremond": "@cheleb thanks, your workaround worked for me :+1: \n. ",
    "limeburst": "I can also confirm this bug in the South Korean region.\n\n. ",
    "henkvos": "Hi,\nSame here for en_NL.UTF-8\n\n. ",
    "manudevelopia": "Hi! the same in Spain:\ninitdb: invalid locale name \"en_ES.UTF-8\n. ",
    "ekurennyy": "In Russian/Ukraine too\n. ",
    "moezzie": "initdb: invalid locale name \"en_SV.UTF-8\"\n. ",
    "albertobissacco": "In Italian too.\ninitdb: invalid locale name \"en_IT.UTF-8\"\n\n. ",
    "yesmeck": "Same here, @cheleb 's solution works for me.\n. ",
    "RabbitMC": "German also! Workaround works!\n. ",
    "kmiters": "Same problem with Poland.\n. ",
    "alaskaguy": "As a side note - such an operation would require it to accept connections from machines other than localhost. I can't seem to get it to do that either.\nThanks!\nag\n. ",
    "wboykinm": "@mattblair thanks for the above - works perfectly.\n. ",
    "jamarparris": "Until this is resolved, I created a symlink using the following command and it installed:\nln -s /Applications/Postgres.app/Contents/Versions/9.4 /Applications/Postgres.app/Contents/Versions/9.3\n. Thanks!\n. ",
    "albertlyu": "Thanks for the quick response. Looks like I probably should have used pg_dump instead to avoid a few headaches. @jakob, you can close this issue if you would like to.\n. ",
    "eitazhou": "thanks! but how to add some 3rd-party extension such as postpic?\n. ",
    "lightster": "This issue is probably not relevant to most anyone anymore.\n. ",
    "lachlanjc": "@jakob 9.4.3.1 (23)\n. @jakob Sorry! I downloaded the latest version and it\u2019s looking :+1:. Thought PostgresApp was auto-updating.\n. ",
    "ddd1600": "This didn't end up being an issue because the latest version of Postgres.app (9.4ish) did not have the compatibility issues with OSX that the 9.3ish version I downloaded last year had.\n. ",
    "hcarvalhoalves": "I tried that, but it kept nagging me about it. I ended up fixing by manually editing project.pbxproj and removing all mentions to CODE_SIGN_IDENTITY. Thanks.\n. @jakob any interest on merging this into a tag / release?\n. ",
    "eaglerockdude": "What is the issue?  I am using rvm and postgress.app...recently set up..everything seems to be ok..\n. ",
    "Roo123": "Many thanks jakob. Most grateful.\nLocated the config files' path using \"SHOW config_file;\" in Postgres. Once edited as you suggested now works great.\n. ",
    "joshma": ":+1: thanks a ton\n. ",
    "EllaNancyFay": "I'm not sure if it's set to start on login. Yes there is an elephant in my\nmenu bar.\nOn Mon, Mar 30, 2015 at 3:02 PM, Jakob Egger notifications@github.com\nwrote:\n\nDid you set PostgresApp to start on login? Is it running, ie. is there an\nelephant in your menu bar?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/257#issuecomment-87690823\n.\n. Yes. It says:\n\nCould not initialize database cluster.\ninitdb: could not create directory \"pg\": Permission denied.\nOn Mon, Mar 30, 2015 at 3:07 PM, Jakob Egger notifications@github.com\nwrote:\n\nDid Postgres.app show any errors when starting?\nAlso check the log (~/Library/Application\nSupport/Postgres/var-9.4/postgres-server.log) for any startup errors.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/257#issuecomment-87692594\n.\n. \n",
    "JaredBoone": "I had this same issue. Check that you haven't inadvertently changed the path in the Preferences dialog. See http://stackoverflow.com/questions/30993794/postgres-app-wont-start for more detail.\n. ",
    "adamhartford": "Thanks very much for the feedback. Let me know if these changes are OK.\n. Please, nitpick away! I see it as a good way to learn/practice. I'll make these changes.\n. ",
    "rslnx": "path_helper surely will work fine with zsh, but I don't know about fish as I don't have it installed. zsh sources /etc/profile and path_helper produces sh-compatible output that is compatible with zsh.\n. ",
    "sethk": "Maybe you could use Versions/latest in the path as well? Or put a checkbox into the UI? That way you wouldn't have to clobber the file later in case the user wants to change it.\n. Perhaps instead of an installer, you could provide a dmg with a background image stating that it probably won't run from anywhere besides /Applications/, and a shortcut icon to drag-and-drop it on? =)\n. ",
    "patricks": "Ok, thanks for your infos. I looked at your source code and saw that you already added the sparkle.framework. I think the only way to provide a appcast.xml is via an static website.\n. First of all nice work!\nBut I figured out a small UI bug. If the database have a long name, it isn't displayed very well.\n\n. I think I found another problem (bug). The applications creates a launchd config (com.postgresapp.Postgres2LoginHelper.plist) at ~/Library/LaunchAgents/, but there is no option in the app preferences to enable / disable the launch on system start. Or didn't I find it?\nIt is also not listet unter System Preferences -> Users & Groups -> Login Items.\n. ",
    "connorshea": "Would love this!\n. ",
    "atapin": "@jakob my bad, I should have checked the closed issues before posting a new one. Looks perfect on latest version.\n. @jakob great news!\n. ",
    "dace": "Yes, works correctly now. Thank you!\n. ",
    "oceanwap": "I understand. Earlier I thought file is missing but problem is everywhere. You can also host it somewhere as an alternate link for such situations. \nThanks for responding too quick.\n. ",
    "kikar": "Using latest version and command CREATE EXTENSION \"uuid-ossp\"; works fine for me\n. Sorry, was another type of issue with my server. Thank you\n. ",
    "jamesosb": "Sorry... had modified my headers (duh) which was affecting AWS. \n. ",
    "bhalodidhruv": "Hey hi. What was the solution you came up with? I am facing the same issue. ",
    "franciscolourenco": "What about the other tools in the page?\n. Makes sense, thought is was a collection of Postgres OS X Applications.\n. ",
    "Tafkas": "Yes\n. In the meantime 9.4.4 came out\n. I submitted PR #269 \n. @diwu1989 I updated to 9.4.4 in PR #269 \n. ",
    "dvic": "No you are right, just mentioned it to keep the project in sync :)\n. Sure, no problem. There is no rush here, because, like you've said, the\nupdates don't affect Postgres.app.\nKind regards,\nDamir Vandic | Ontostream\nOn Sat, Jun 6, 2015 at 5:15 PM, Jakob Egger notifications@github.com\nwrote:\n\nI'll try to release 9.4.3 as soon as I have a few spare hours.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/270#issuecomment-109599056\n.\n. \n",
    "diwu1989": "9.4.4 please\n. what if you made the app itself create that symlink during the startup? it would write to its own folder if the symlink isn't there\n. ",
    "mjhamm75": "When it wouldn't start, I deleted the app by putting the icon in the Trash and I also deleted that directory on the command line.  When I reinstalled, it did not recreate the data directory and I also got the same error that I did previously.  I have just created the Postgres directory and the var-9.4 directory underneath.  I gave permissions of 777 and still get the same error.\n. That didn't fix my problem.\n. I guess I deleted my defaults somehow.  I did step one and everything works perfectly.  Thanks for you time.\n. ",
    "andrewdisley": "I\u2019ve been having similar issues of late on 10.9 and 10.10 with permission error which causing psql to fail to start.\nI managed to solve my issue by running the following command in Terminal after every reboot:\nchmod 700 ~/Library/Application\\ Support/Postgres/var-9.4\n. ",
    "duncand": "Requiring a location in /Applications is preferable to using an installer, given that installers would still put things in predefined locations anyway rather than the usual Mac custom of letting us put applications wherever we want to.  Not needing an installer is a key feature of Postgres.app and we don't want to lose that, its one of the main rationales for Postgres.app to exist.\n. Installers are uncomfortable in principle, especially if they prompt for an administrator password, since they could be doing who knows what to the system.  It is better just to have the DMG with the background image stating please drag Postgres.app to the /Applications folder so it can run.  Having to enter an admin password to do almost anything implies that the one prompting wants to do something they have no business doing.\n. ",
    "JetForMe": "I think this should be fixable now, since Xcode lets you embed libraries in the bundle. But I also thought relative dylib paths were supported with @executable_path. This SO question might have some clues.\n. Ah, I see.\nThe problem I'm facing is that I don't want to put it in /Applications. I want to put it in /Applications/Development (a directory I have for collecting such things).\n\nOn Oct 31, 2016, at 15:52 , Jakob Egger notifications@github.com wrote:\n@jetforme\nI'm not sure what you mean that Xcode lets me embed libraries in the bundle. Obviously Postgres.app includes a bunch of libraries in the bundle.\nGetting Postgres.app itself to work with relative dylib paths is not an issue (can be done with @rpath; @executable_path only works if all binaries are in the same relative position to the libraries)\nThe problem is that we also want to support other stuff linking against libpq (eg the pg gem). The problem is that you'd need to make sure that whatever links against libpq has the right @rpath, or it won't find dependencies of libpq. I don't know how to do this.\nAlso, the new version of Postgres (https://github.com/PostgresApp/PostgresApp/releases) ships in a disk image, with an icon suggesting you move it to /Applications, so I hope that more people just move it before opening.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n\nRick Mann\nrmann@latencyzero.com\n. ",
    "pasupulaphani": "found it\n~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist\nLocate the line RunAtLoad\nChange the next line from true to false\n. ",
    "Alexis-benoist": "Thanks for the fast answer! I will look into that!\nPS: PG commander is great :)\n. ",
    "nelsnelson": "Workaround:\nDelete all existing installations and databases created by Postgres.app.\nCreate a new login user called \"postgres\".\nLogin with \"postgres\" through the login screen.\nInstall Postgres.app into /Applications as the user \"postgres\".\nOpen Postgres.app.\nFrom the command line, list the existing databases: psql -U postgres --command=\"\\l\".\nConfirm that the postgres database is installed, and that the \"postgres\" user owns all existing default system databases.\nLogout of the session for the user \"postgres\".\nSwitch to your regular user.\nKill any existing Postgres processes.\nAs root, copy the directory /Users/postgres/Library/Application\\ Support/Postgres to /Users/$USER.\nChange ownership of the newly copied directory: sudo chown -R $USER:$USER /Users/$USER/Library/Application\\ Support/Postgres\nNow restart Postgres.app from within the login session using your regular user account.\nYou may now use psql -U postgres.\nYou may now also create a login user/role for your own system user: psql -U postgres --command=\"CREATE ROLE \\\"${USER}\\\" LOGIN;\"\nFinally, upgrade your newly created role: psql -U postgres --command=\"ALTER USER \\\"${USER}\\\" WITH SUPERUSER;\"\nYou may now use psql to access the postgresql shell.  It will attempt to login with the username of your system user.  Easy!\n. I was not suggesting that a system user actually be created on a mac os install.\nI only suggested that the default superuser for the PostgreSQL not be the system $USER (whatever it happens to be the first time Postgres.app is run), but instead, the default superuser should be the same as it is in every other PostgreSQL installation in any system: 'postgres'.\nThe default superuser was already 'postgres' until some recent change.  Do you need me to go back through changelogs here to figure out which version broke?  At least some recent previous versions of Postgres.app used 'postgres' for the default superuser.\nThis superuser = $USER change has broken my database scripts.  But now they are only broken when using Postgres.app, after having recently upgraded to the 9.4.4.1 version of Postgres.app.  My scripts are not broken in any other of my other installations of postgres, \"EnterpriseDB\" or otherwise.\nIt would be nice to not have a easy-to-use Postgres server break my development environment.  Perhaps an option for explicitly setting the superuser could be supported upon install?  It appears there is already a significant change in the way that Postgres.app sets its server up when it is ran for the first time, in that a new modal prompt is displayed, and the user is given the opportunity to make at least a couple adjustments.  This was not the case in at least some previous versions.\n. Improving documentation would be great.\nDon't get me wrong, I totally understand why Postgres.app does what it does.\nBut it really is an inconvenience (and unexpected) to have to go through the workaround described above.  It would be really easy to just create a default 'postgres' superuser, like every other PostgreSQL installation out there -- but then to also create a non-superuser and database that can be automatically used by the current user $USER.  This way, you retain the ease-of-use of just being able to type psql (or use the 'Open psql' button) without specifying the user with the -U flag, and you retain the expected superuser naming convention.\nI haven't done native Mac development in years, but I could tinker with the PostgresServer.m code a little and submit a patch that would support both the current ease of use, and also the conventional superuser configuration.  Would this be acceptable?\n. Thanks, @jakob!\nAn additional step that could be taken is to include the conventional postgres superuser first, by default, and then as an additional automated step of the init process, create a second regular user based on $USER, along with their home database, and then finally to upgrade that user to superuser privileges: ALTER USER $USER WITH SUPERUSER;.\nThat might just solve for all concerns: both the convention and ease-of-use.\n. ",
    "Sogl": "+1\nThe current $USER decision only adds the problems.\n. Anybody here? =)\n. ",
    "alexpchin": "@jakob Hello does the new version of 9.6 initialise with a user? \nPostgres.app initialises the database using \ninitdb -D DATADIR -U postgres --encoding=UTF-8 --locale=en_US.UTF-8\nNext it creates a user with the current system user name \ncreateuser -U postgres -p PORT --superuser SYSTEM_USER_NAME\nFinally it creates a database for the new user \ncreatedb -p PORT SYSTEM_USER_NAME\nI've had to manually:\ncreateuser $(whoami) -U postgres && createdb $(whoami) -U postgres to prevent FATAL  not found error?\n@eisacke @mickyginger. ",
    "VinodLouis": "Ignore the error It was my mistake, I edited the data path in preferences which gave this error, after I changed it to default path all is working well.\n. ",
    "toast9": "I have the box unchecked. It seems if I start postgres up the pop up stops, but I don't won't postgres running if I'm not using it. The Firewall is on, but postgres has been given access, so I'm not sure why it keeps asking. \n. ",
    "peterhellberg": "I got the same issue just now. \nUsing Postgres.app for PostgreSQL 9.5.0\n. ",
    "mamachanko": "Same here.\nUsing Postgres.app for Postgres 9.4.6.1\n. ",
    "ivanakimov": "That makes sense. Looks like someone else also stumbled on the same issue: http://superuser.com/questions/856752/why-is-postgres-sending-network-traffic-on-osx\nIt was just so surprising to see how much it was sending. Thanks for your response. I'll close the issue.\n. ",
    "vinhqdang": "Hello\nI took a look, but I am afraid that I do not understand much. I downloaded pgadmin as indicated in the website you mentioned, and start it, then try to connect the PostgresApp, but I do not know what connection parameters I should fill in?\n. Hello\nWhen I tried to do as you said (thank you very much for your help), I met a problem: \"the role postgres does not exist\".\nHow can I resolve this problem?\n. ",
    "powellmichael": "@vinhqdang did you get this issue resolved? If not I'd be happy to help you out. I use PostgresApp and Pgadmin daily with no issues. \n. ",
    "chetstone": "Thanks for the reply. No, the log shows no indication of how long it's\ntaking.\nBut it takes several minutes for this machine to boot up so I wouldn't be\nat all surprised if postgres takes more than 60 seconds\nThe man page for pg_ctl shows it's possible to add a -t flag to extend the\ntime. I'm not sure of the mechanism postgres.app uses to run pg_ctl or how\nhard it would be to customize this. But I think I can easily just ignore\nthe error message. Feel free to close this issue and thanks.\nOn Mon, Sep 21, 2015 at 11:56 AM, Jakob Egger notifications@github.com\nwrote:\n\nPostgres.app uses pg_ctl to start PostgreSQL. According to the man page it\nwaits 60 seconds by default.\nIf you have a slow hard drive, or a large database, or if the server\ndidn't shut down properly, it's plausible that it could take more than 60\nseconds to start.\nCan you see how long the startup process takes from the log?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/284#issuecomment-142060874\n.\n. \n",
    "jaykenney": "I upgraded to El Capitan, everything seems OK. Considering the current version puts the DB in $HOME/Library the only concern might be the log file, but it opened and let me connect to the db.\n. ",
    "dcwatson": "Have a look at https://docs.djangoproject.com/en/1.9/ref/contrib/gis/install/#library-environment-settings\n. ",
    "robe2": "I should add that postgis_sfcgal also relies on Boost and CGAL.  So if you package postgis_sfcgal, pgRouting doesn't add much extra. \n. FWIW I'm the windows application stackbuilder packager for PostGIS.\nI've already pushed for windows users for PostgreSQL 9.5 (the pgRouting 2.2.0).\nI have no experience building for Mac though, but if you are worried about boost weight, keep in mind you don't need the full Boost library if you are building your own self-contained.\nFor windows I just build something like this:\n```\n    b2 toolset=gcc  --with-thread --with-system --with-date_time --with-serialization --with-graph --with-program_options\n```\nWhich is sufficient for both SFCGAL and pgRouting.  So my boost total foot-print is about 5 MB which isn't too bad.\nFor CGAL I build the libCGAL, LibCGDAL_Code, libCGAL_ImageIO.dll.  pgRouting only needs the libCGAL core.  SFCGAL needs more.\n. @jakob , the winnie scripts that @cvvergara pointed at are used by the PostGIS windows build bot to build the pgRouting packages.  So windows builds are done even for pre-releases for any windows user to test out and then I use these binaries as part of the PostGIS windows packages.  \nIn the postgis.net repo - there is similar the windows build bot uses the scripts in postgis repo - \nhttps://trac.osgeo.org/postgis/browser/tags/2.2.2/ci/winnie\nFor building postgis with sfcgal (although neither of these scripts include the cgal/boost compile but still might be useful)\nThis is what I use to build the pgRouting and SFCGAL dependencies.  Even though it's done under mingw64, might still be useful, since its compiled in a unix fashion.\nhttps://gist.github.com/robe2/5935101\n. ",
    "cvvergara": "+1\nOh, by the way pgRouting v2.2.0 is going to be released soon\n. @jakob \nI know she will be out for some conferences, but we use this scripts on Jenkins to test Windows in the repository:\nhttps://github.com/pgRouting/pgrouting/tree/master/tools/winnie\nI must mention the scripts don't do the testing of the newly added PgTap tests.\nTo test linux we do it on travis:\nhttps://github.com/pgRouting/pgrouting/tree/master/tools/travis\n. Forgot to mention, a patch 2.2.1 might be coming out soon, so what if....\nYou make the scripts you need and we can add them to a directory into the pgRouting tools directory.\n. @jakob \n\"should\" is not what I mean. \n In tools, I have scripts that I use as a guide to do things that are done not very often, but to figure out how to do them was time consuming.\nWas just a \"what if\".\n. @tbussmann \nFor pgRouting V2.x\nbrew install cmake boost\nFor pgRouting V3.0 (plan of release date is on september 2019) it will be\nbrew install cmake boost\nPS I will be making a PR soon to develop branch where cgal & gmp will not be needed.\n. ",
    "citizenfish": "+1\n. ",
    "indie21": "so , pgroute will be supported soon ? \n. ",
    "vnnw": "+1. Same problem here on OS X 10.11.6.. ",
    "chriszrc": "Seems like people are using homebrew to get around this issue:\nhttps://github.com/PostgresApp/PostgresApp/issues/54\nCan postgres app use the homebrew builds of pgrouting? Or should users who need pgrouting just install postgres with homebrew altogether?. Any updates on this?. Postgis needed to be compiled with protobuf support available, so unless\nyou're building postgres app from source or something, pretty sure it's all\nprecompiled, so anything you do locally won't make any difference\nOn Sun, Jan 7, 2018, 12:16 AM Reilly Wood notifications@github.com wrote:\n\nI'm keen to figure this out too. I tried installing protobuf-c using\nHomebrew, no luck.\nSteps to reproduce\nI'm running Postgres.app version 2.1.1 (40) on a database with PostGIS\nenabled. I used the sample query from the ST_AsMVT documentation\nhttps://postgis.net/docs/manual-dev/ST_AsMVT.html. Running this:\nSELECT ST_AsMVT(q, 'test', 4096, 'geom') FROM (SELECT 1 AS c1,\nST_AsMVTGeom(ST_GeomFromText('POLYGON ((35 10, 45 45, 15 40, 10 20, 35 10),\n(20 30, 35 35, 30 20, 20 30))'), ST_MakeBox2D(ST_Point(0, 0),\nST_Point(4096, 4096)), 4096, 0, false) AS geom) AS q;\n...returns this error:\nERROR: Missing libprotobuf-c SQL state: XX000\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/412#issuecomment-355800456,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AYgWKRIb7y7-6iMpWV_OtgODCzq94Gp0ks5tIFM_gaJpZM4P5Dc8\n.\n. No updates?. Sad to see no official responses to this issue. Just like this author, I found the most painless way to get this support on my mac was actually to run a docker container (so postgres/gis on linux)-\n\nhttps://www.zimmi.cz/posts/2017/postgis-as-a-mapbox-vector-tiles-generator/. Hi,\nI don't see any problems with that, as long as maybe the update dialog\ncould be modified to include a message that basically says as much as\nyou've indicated here. Something along the lines of, \"Hey, if you want the\nlatest version that includes version X of postgres, you'll need to download\nrather than update\".\nThanks for the reply and the great app!\nOn Mon, Oct 29, 2018 at 6:57 AM Jakob Egger notifications@github.com\nwrote:\n\nPreviously Postgres.app always downloaded the latest version including new\nmajor versions. That was convenient, but had the downside that the app kept\ngetting bigger and bigger (eg. you download Postgres.app with 9.5 and 9.6,\nthen it updates and include PostgreSQL 9.5, 9.6, and 10, this year we would\nhave 9.5, 9.6, 10, and 11...)\nAt some point the app gets so big that it is a problem (eg. the latest\nversion with all the binaries has an uncompressed size of 870MB!)\nSo I changed it that the automatic update only installs minor updates. If\nyou want the next major version of PostgreSQL, you need to download it\nmanually.\nIt's a bit confusing, but I'm not sure how else we can do that? I want to\nhave easy updates, but lots of people have limited disk space and / or slow\ninternet speeds, so we can't keep growing Postgres.app. And throwing out\nold versions in automatic update also isn't a good idea, because then we'd\nbreak installations of people using them...\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/475#issuecomment-433868446,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AYgWKU411rKsK6yqUET_K_7MgSYJThcxks5upt8EgaJpZM4X8fj3\n.\n\n\n--\nChris Marx\nSenior Software Engineer\nZevRoss - Know Your Data\nData Science & Spatial Analysis\n209 N. Aurora St, 2nd Floor\nIthaca, NY 14850\nwww.zevross.com\n. ",
    "vbastos": "ok, so I should just recompile psycopg2.\n. Fixed.\n. ",
    "tomreece": "I had to do the same thing in my Python virtual environment. I originally created the venv and installed dependencies like psycopg2 when I had a different postgres install. Wiping my venv and recreating it now that I'm using Postgres.app solved this same problem for me.. ",
    "javaguy": "@tomreece solution to wipe the old venv and create a new one worked for me.  I hits this issue after I upgraded from 9.4 to 9.5.. ",
    "brad-decker": "Thanks! \n. ",
    "kaiynne": "Have you tried explicitly calling it?\ntry:\n/Applications/Postgres.app/Contents/Versions/9.4/bin/psql\nYou can test if you are calling the right version of psql by typing:\nwhich psql\nmost likely you are calling /usr/local/bin/psql which is the default\nlocation in OS X.\nYou can fix this by updating your bash file so your shell knows where to\nlook\nSee here: http://postgresapp.com/documentation/cli-tools.html\nKain Warwick\nManaging Director\n0404446925\nblueshyft.com.au\nblueshyft\nPier 8/9\nLevel 4, 23 Hickson Rd.\nMillers Point, NSW 2000\nOn 29 November 2015 at 14:27, Dean-Christian-Armada \nnotifications@github.com wrote:\n\nHi,\nI am trying to run psql -h localhost however I get the following response:\npsql: could not connect to server: Connection refused\nIs the server running on host \"localhost\" (::1) and accepting\nTCP/IP connections on port 5432?\ncould not connect to server: Connection refused\nIs the server running on host \"localhost\" (127.0.0.1) and accepting\nTCP/IP connections on port 5432?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/294.\n. Looking at your screenshot there it does not appear that you have\nPostgres.app running.\n\nYou should have an elephant icon in the menu bar. see image here:\n[image: Inline images 1]\nI just realised I somehow have two elephant icons in my menu bar... One is\nevernote, you are looking for the one second from the left.\nYou need to make sure to drag Postgres.app into your applications folder\nand then run it from there.\nLet me know how that goes?\nKain Warwick\nManaging Director\n0404446925\nblueshyft.com.au\nblueshyft\nPier 8/9\nLevel 4, 23 Hickson Rd.\nMillers Point, NSW 2000\nOn 29 November 2015 at 16:53, Dean-Christian-Armada \nnotifications@github.com wrote:\n\n[image: screen shot 2015-11-29 at 1 52 45 pm]\nhttps://cloud.githubusercontent.com/assets/9837087/11455556/88ff7462-96a0-11e5-8339-17684551935c.png\nUnfortunately it did not work\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/294#issuecomment-160377563\n.\n. \n",
    "Dean-Christian-Armada": "\nUnfortunately it did not work \n. Hi\nproblem solved, I just reinstalled it, seems like a conflict occurred when I tried installing postgres with homebrew as well\n. ",
    "alexandertakacs": "The latest release happened may 2015, they seems to have had proper releases in github for some time (with varying intensity). It's even one of few extensions installed by default om AWS RDS so I guess it's fairly popular.\nhttps://github.com/plv8/plv8/releases\n. I'm happy I could contribute. Thanks for making this very useful piece of software!\nSeems at least they have tested it with v8 4.3.x :)\n. ",
    "ozum": "Hi,\nI couldn't manage to build plv8 previously, now I built it as static. I installed plv8 2.0.0-dev (latest version as of this message) on PostgresApp 9.5.1.0 on MacBook Pro OS X El Capitan 10.11.3 smoothly using steps below in case anyone interested.\n- Downloaded from https://github.com/plv8/plv8.\n- Uncompressed zip file\n- In a terminal, changed into created directory and executed following commands:\n- $ make static - Takes lots of time. (I couldn't compile without static previously.)\n- $ make install\n- Restarted PostgresApp and execute following SQL command on a database.\n- CREATE EXTENSION plv8\nChecked plv8 version and it's working now.\n. Thanks @jakob.\nI saw cask postgres and assumed it was PostgreSQL server. Now I can install postgres.app with it. Also no problem for initdb part.\nJust... Could you please detail what should I do with defaults for Postgres.app? (An example would be awesome)\n. ",
    "mauritslamers": "Is there any ETA on when a newer version of plv8 would land in the PostgresApp?. @jakob I asked because @ozum stated he managed to build it. However, in the mean time of me posting the question, I have noticed that there are a few complicating external factors. \nMy main reason for asking was to be able to use ES6 features, which would come with version 1.5 of plv8. It turns out however that on my deployment platform of choice Ubuntu, libv8 has been stuck on version 3.14 for over two years now with little indication that that is going to change anytime soon. As any ES6 features are only available from libv8 version 4 and up, this is going to be out of my reach for now as it doesn't make much sense to try to develop using something that cannot be deployed (yet). Thanks for the quick answer!\n. @jakob If you have a binary libv8, it should not be very difficult to include it in the .app. It most probably needs editing of the linking information. However, having libv8 built for linux is the biggest issue. It seems Google switched to something called GN:  https://github.com/v8/v8/wiki/Building%20with%20GN\n. ",
    "hsyed": "It is way too limiting to have 1.4.8 these days, 1.5.3 provides a lot of required baseline features. Would it make sense to track the version number provided by AWS RDS ? or would it be possible to bundle multiple versions ?. ",
    "deem0n": "Hi all, \nIt seems that we can easily have plv8 2.x now. On the Mac you can install v8 with brew install v8 which is installed in binary form:\n/usr/local/Cellar/v8/5.1.281.47: 32 files, 748.5MB\nCan we have it included in PostgreSQL 10 Beta 2 build ?\n/usr/local/Cellar/v8/5.1.281.47/lib/libv8.dylib = 13942300 bytes\n. ",
    "nileshtrivedi": "Would really love to see this fixed. Running Postgres 10.1 but plv8.version = 1.4.8 which misses many basic things like Uint8Array.. I asked V8 devs: https://twitter.com/bmeurer/status/960584003148505088. ",
    "JerrySievert": "noticed you're not shipping plv8 as part of the most recent release, due to build issues.\nif you care to outline any build issues, I'm happy to help.  little known fact, most plv8 work occurs in macOS.. as an aside, do not use brew or macports versions of libv8, they are very far behind, suffer from spectre/meltdown issues, and often-times plain do not work with plv8, which is currently using 6.4.388.40.  just like node, you should be using the shipped v8, as v8 no longer will compile into a shared library (by design).  simply running make from plv8 will download and compile the correct version of v8.. if you decide to reverse that, I may have an old Mac mini running something as old as 10.7 sitting around that I can probably get going.\nnot sure why v8 itself wouldn't compile on it (since it downloads its own compilers), but plv8 might not due to possibly using a few newer c++ features.. yeah, icu on v8 is a bit of a pain - I will note that it is disabled by default during build of plv8, if you need it on, there are notes in the docs on how to configure it via make: https://plv8.github.io/#building-with-icu\nthere are also some notes in contrib for it.. @jakob fyi, if you do need help debugging the v8 build process, I've managed to get pretty good at it (go figure).  just open an issue on plv8, and I can likely help guide you through it - plv8 is developed on macOS these days after all.. you can specify use_system_icu=1 during the v8 build configuration, but that means either building v8 by hand, or modifying the Makefile.\nunfortunately, I don't remember if the required icu library is actually the system icu on macOS though.. ",
    "jonathansimmons": "1.) The log file is mostly empty and wasn't too helpful. It's listed below in it's entirety \n2.) psql does seem to work fine\n- I have a feeling the log details are just entries for work I did starting and stopping psql. I attempted to manually create the db which you'll see did work and was logged. Subsequent attempts by the rails app to migrate or access the database still failed though.\n3.) No known firewall or other filtering. \nI appreciate the help.\n``` bash\nLOG:  database system was shut down at 2015-12-14 21:27:26 MST\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\nLOG:  received fast shutdown request\nLOG:  aborting any active transactions\nLOG:  autovacuum launcher shutting down\nLOG:  shutting down\nLOG:  database system is shut down\nLOG:  database system was shut down at 2015-12-14 21:35:48 MST\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  autovacuum launcher started\nLOG:  database system is ready to accept connections\nERROR:  syntax error at or near \"50\" at character 37\nSTATEMENT:  CREATE DATABASE donations_dev owner=user_name_removed;\nLOG:  received fast shutdown request\nLOG:  aborting any active transactions\nFATAL:  terminating connection due to administrator command\nLOG:  autovacuum launcher shutting down\nLOG:  shutting down\nLOG:  database system is shut down\nLOG:  database system was shut down at 2015-12-15 17:36:50 MST\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\nLOG:  received fast shutdown request\nLOG:  aborting any active transactions\nLOG:  autovacuum launcher shutting down\nLOG:  shutting down\nLOG:  database system is shut down\nLOG:  database system was shut down at 2015-12-15 17:47:47 MST\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\nLOG:  received fast shutdown request\nLOG:  aborting any active transactions\nLOG:  autovacuum launcher shutting down\nLOG:  shutting down\nLOG:  database system is shut down\nLOG:  database system was shut down at 2015-12-15 17:49:21 MST\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\nLOG:  received fast shutdown request\nLOG:  aborting any active transactions\nLOG:  autovacuum launcher shutting down\nLOG:  shutting down\nLOG:  database system is shut down\n```\n. FWIW Everything works fine for other devs who are running 10.11. Not sure how/if the OS X version would come into play. \n. I'm so sorry, I thought I'd closed this already. \nI was unable to find a solid reason. Having the dev update to 10.11 and creating a new postgres user/password helped but he still randomly get's disconnects. \nRegardless this is not a postgres.app issue. \n. Mine are the exact same as @cdonadeo above. \n. @davedash did you by any chance try re-installing Cylance to see if it began failing again?\n. I think we should mention it as a possible proponent. \nI'm going to check with my office today about removing then readding Cylance to see if it resolves my issue as well. \nIt would be nice to isolate the root cause and see if a setting can be adjusted to avoid the need for complete removal. \nI couldn't care less about antivirus but my employer has an auto deploy system so I don't have much say. \n. So I got around to reviewing this with my office. Un-installing Cylance did allow 9.5 to begin running. \nOur IT department had this to say:\n\"The odd thing is that usually when Cylance stop a process from running we can see that in a list for the stopped processes for the machine. Even though Cylance apparently prevents Postgres from starting on your machine the Postgress process is not listed as a something that Cylance stopped.\" \nI don't know if that should imply there is still an issue for Postgres app to fix or not but it was interesting none the less. \nI'm functional at this point but I'll leave this open for @jakob to close once he has seen the update.\n. @davedash would you be willing to ask them what they did? \n. ",
    "dret": "On 2015-12-17 04:07, Jakob Egger wrote:\n\nAnyway, I just updated the instructions:\nPostgresApp/postgresapp.github.io@96141d5\nhttps://github.com/PostgresApp/postgresapp.github.io/commit/96141d5550c21939370f2f81a0d78413b689c7de\nThanks for reporting this!\n\nthanks for the update!\n. ",
    "gitdojo": "Hi Jakob,\nSorry for my delayed response and huge kudos for your spot-on insight. I should have looked at /etc/hosts before opening this issue. Turns out /etc/hosts was empty (i.e. zero bytes). I found an /etc/hosts~orig that contained exactly what you said to check so just copied it to /etc/hosts and PostgresApp started lickety-split. I don't remember emptying hosts or creating hosts~orig ;-) but a quick Google-search failed to turn up any smoking guns (e.g. upgrading OSX or installing some App). Anyway, problem solved & thanks for your help!\n. ",
    "Troland": "I encounter the same problem, while i can't solve it even though i check my /etc/hosts is right.\nIt takes me very long time and i just don't know what is the problem is.\nAny help is appreciated, thanks.\n. @jakob ok, it just drive me crazy and i'd open a new issue.\n. @jakob I just open the new issue, check plz.\n. It's really weird that when i run ping localhost it displayed:\nPING localhost.dhcp (218.85.65.150): 56 data bytes\n64 bytes from 218.85.65.150: icmp_seq=0 ttl=56 time=7.668 ms\n64 bytes from 218.85.65.150: icmp_seq=1 ttl=56 time=9.163 ms\n64 bytes from 218.85.65.150: icmp_seq=2 ttl=56 time=8.805 ms\nwhile when i shutdown my wifi it displayed:\nPING localhost (127.0.0.1): 56 data bytes\n64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.052 ms\n64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.125 ms\n64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.137 ms\n64 bytes from 127.0.0.1: icmp_seq=3 ttl=64 time=0.076 ms\nrun cat /etc/hosts shows:\n```\n\nHost Database\n\nlocalhost is used to configure the loopback interface\nwhen the system is booting.  Do not change this entry.\n\n127.0.0.1   localhost\n255.255.255.255 broadcasthost\n::1             localhost\n```\n. Thanks jakob, it's the condition that i use a wifi router as a relay for the weak wifi signal, and maybe someday some strange things happened and localhost point to my public ip address.\nBut when i take my lap downstair, it fixed....\n. ",
    "shevisj": "@jakob wow, thank you so much! Several hours of head scratching for such a simple issue.... ",
    "chrishough": "I had the connection string setup incorrectly.  Things are working now. \n. ",
    "eric-brechemier": "\nPostgres.app runs this command only when you select \"Open psql\" from the menu.\n\nOK.\n\nIt seems that for some reason, on your computer, Terminal seems to store this command somewhere and execute it again and again.\n\nAny idea where? How does \"Open psql\" trigger the execution? What's changed?\n\nDid you try quitting Terminal.app or restarting your computer?\n\nI will avoid it as long as I can because I currently have 31 Terminal windows open for various parts of the project I am working on, as well as 3 different documents opened in Preview.\n. > osascript -e 'tell application \"Terminal\" to do script \"\"'\nThat shall do.\nSome of my existing Terminal windows still open new Terminal windows running psql but all the Terminal windows created with this command now open new Terminal windows without running psql.\nThanks for your support.\n. Wow, thanks for reporting it upstream.\n. ",
    "ajilius": "Thank you for the explanation, Jakob. It makes sense to leave things the way they are.\nIt isn't a PostgresApp problem, but as much as I like PostgreSQL, I do miss the simplicity of in-place upgrades between versions of SQL Server :)\n. ",
    "pbassut": "Just tried it. Pressed it many times and still nothing.\nDoes it work with you?\n. {\n    DataDirectory95 = \"/Users/patrickbassut/Library/Application Support/Postgres/var-9.5\";\n    NSNavLastRootDirectory = \"/usr/local/var/postgres\";\n    NSNavPanelExpandedSizeForOpenMode = \"{712, 448}\";\n}\n. I'm choosing a data directory of a postgres instance I already had installed before finding out about Postgress.app.\nIt looks like it does a lot a magic behind the scenes though. Notifying the user would be great. No?\n. Looks like it's rolling back to the default one.\n{\n    DataDirectory95 = \"/Users/patrickbassut/Library/Application Support/Postgres/var-9.5\";\n    NSNavLastRootDirectory = \"/usr/local/var/postgres\";\n    NSNavPanelExpandedSizeForOpenMode = \"{712, 448}\";\n}\n. ",
    "Themanwithoutaplan": "It seems natural for me for programs that get installed like this to offer to upgrade an existing installation. pg_dump & pg_restore can be considerable hurdles to jump if you have either a lot of dbs or any big ones: I have a local one that is about 10 GB \u2013 does that make it big?\n. What would be the advantage of that over pg_upgrade? In any case the arguments for or against using pg_upgrade shouldn't really be about the size of the DB unless this is really quantified.\nBTW it's my own fault but I forgot to migrate the changes I'd made in postgresql.conf when upgrading. This should definitely be covered in the docs.\n. I'm not against teaching people about the Postgres utilities, far from it. But I think the process of upgrading Postgres.app can be improved with less manual intervention. Anyone doing much with a server is not likely to want to use Postgres.app in the first place and have their own scripts in place for testing and migrating.\nWhether you use pg_upgrade or pg_dumpall may be a matter of preference. Disk space required will be at least 3 times that of the existing cluster. This kind of information can be given to the user. And, as I said above, migrating the config is at least as important.\nSo, how about an optional check for updates with a link to a relevant in the docs?\n. ",
    "MartyMcFly42": "OK, got platforms mixed. This is where google results (for similar issue) led me.\nWill try to use your help to solve my issue. Thanks\n. ",
    "peterhurford": "In the meantime, you can download the version from the GitHub releases: https://github.com/PostgresApp/PostgresApp/releases\n. ",
    "Runehm": "Hi Jakob, \nAt the moment none of the download links are working?\nit seems to be a problem with https://github-cloud.s3.amazonaws.com\ncan you look into it please\n. @jakob Thanks for replying. I tried again on a different wifi and it works now. Sorry for the mistake. \n. ",
    "stuta": "I tried to add  -pagezero_size 10000 -image_base 100000000 to xcode other linker flags, bit it did not seem to help.\nThen I tried to add LDFLAGS to makefile: \nLDFLAGS:=$(LDFLAGS) -pagezero_size 10000 -image_base 100000000\nexport LDFLAGS CFLAGS CXXFLAGS MACOSX_DEPLOYMENT_TARGET\nUnfortunately my build fails with ERROR: `jade' is missing on your system. How can I build without postgre docs?\n. Postres app is just user interface and postgresql is the one that should have correct linker flags. There are extra info in postgre ./configure --help:\n  LDFLAGS_EX  extra linker flags for linking executables only\nI tried with homebrew and changed /usr/local/Library/Formula/postgresql.rb:\nENV.prepend \"LDFLAGS_EX\", \"-pagezero_size 10000 -image_base 100000000\"\nThen I installed postgre with homebrew and installed PL/Lua with luajit and everything works.\nSo all what we need is to set LDFLAGS_EX=\"-pagezero_size 10000 -image_base 100000000\".\n. Thanks! Currently I don't need to use Luajit inside Postgre but this will be helpful in the future. Another option is new gc64 mode of Luajit that does not need \"-pagezero_size 10000 -image_base 100000000\".\n. ",
    "kingbuzzman": "@stuta did you get anywhere with the \n\nERROR: `jade' is missing on your system\n\nissue?\n. ",
    "bo01ean": "I was able to get around:\n\nERROR: `jade' is missing on your system\n\nby:\nbrew tap petere/sgml\nbrew install docbook docbook-dsssl docbook-sgml docbook-xsl openjade\nAnd adding /usr/local/bin to PATH in the makefile:\nhttps://github.com/bo01ean/PostgresApp/commit/5855b0460fd372f29bd6c9f6877479aaabab7109#diff-210e3527f52409b84fd1c50fcea0df2fR49\nPR coming soon.. ",
    "dioobr": "I found the liblzma.5.dylib file in VLC library and copied to /usr/lib/ directory. Postgresapp 9.5.0.0 works fine now.\nliblzma.5.dylib.zip\n. Hi jakob, It's working perfectly on Lion 10.7.5. Thank you!\n. ",
    "mactyr": "I had this same issue with PostgresApp 9.5.0.0 on OS X 10.8.5. I already had xz installed via macports, so I was able to work around the problem by doing:\nsudo ln -s /opt/local/lib/liblzma.5.dylib /usr/lib/liblzma.5.dylib\n. Yep, working on 10.8.5 now too. Thanks jakob.\n. ",
    "zar1": "In 9.4.5, plv8.so loads as expected, so it looks like 9.4.6 caused the issue.\n. That fixed it for me. Thank you very much!\n. ",
    "joula": "I had to execute:\nCREATE EXTENSION plv8;\nto make it work.\n. ",
    "cdonadeo": "Just had the same issue after installing Postgres 9.5.1.0.  What I did:\n- Stopped my 9.4 installation\n- Ensured no Postgres processes were running (ps aux | grep postgres)\n- Moved the old 9.4 app to /Applications/Postgres-9.4 (mv /Applications/Postgres /Applications/Postgres-9.4)\n- Moved the new 9.5 app to /Applications/Postgres (mv ~/Downloads/Postgres /Applications/Postgres)\n- Started the app by double clicking the icon, started with no obvious issues\nResult:\n```\n\u279c  ~ /Applications/Postgres.app/Contents/Versions/9.5/bin/psql\npsql: FATAL:  role \"chrisdonadeo\" does not exist\n\u279c  ~ /Applications/Postgres.app/Contents/Versions/9.5/bin/psql -U postgres\npsql (9.5.1)\nType \"help\" for help.\npostgres=# SELECT rolname FROM pg_roles;\n rolname\n\npostgres\n(1 row)\n```\nIt appears that no role with my username was created when the database was initialized.  I think I recall that this did happen with 9.4 versions, and the documentation states that you should use your username and a blank password.\n. After upgrading from OSX 10.10 to 10.11 I'm having the same issue.  My locale looks like this:\n\u279c  ~ locale\nLANG=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_CTYPE=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_ALL=\nSo I export LC_ALL when starting new shells now:\n\u279c  ~ locale\nLANG=\"en_US.UTF-8\"\nLC_COLLATE=\"en_US.UTF-8\"\nLC_CTYPE=\"en_US.UTF-8\"\nLC_MESSAGES=\"en_US.UTF-8\"\nLC_MONETARY=\"en_US.UTF-8\"\nLC_NUMERIC=\"en_US.UTF-8\"\nLC_TIME=\"en_US.UTF-8\"\nLC_ALL=\"en_US.UTF-8\"\nBut I don't think Postgres.app is starting a shell to get that environment variable so that's pretty pointless.\n. OS X version 10.11.3\n\u279c  ~ uname -a\nDarwin chris-work-laptop.local 15.3.0 Darwin Kernel Version 15.3.0: Thu Dec 10 18:40:58 PST 2015; root:xnu-3248.30.4~1/RELEASE_X86_64 x86_64\nAttaching screenshot for my Region and Language settings - they should pretty standard for en-US.\n\nLet me know if you need any additional information.\n. Out of curiosity, I tried installing and using Postgres 9.5.2 from Homebrew instead, and ran into the same issue:\n\u279c  Postgres postgres -D /usr/local/var/postgres\nFATAL:  postmaster became multithreaded during startup\nHINT:  Set the LC_ALL environment variable to a valid locale.\nSo it seems the issue isn't with anything specific to Postgres.app.  Still no idea what the problem might be.\n. ",
    "leehinde": "I was having the same issue and quitting the new install (9.5), deleting the ~/Library/Application Support/Postgres/var-9.5 directory and relaunching fixed it.\n. ",
    "nawrasbaghdadi": "thanks it works , i just had to restart my mac \n. ",
    "davedash": "So I tried both hombrew and the postgres.app.  I wonder if the LC_ALL hint is a red herring.\nSince @jonathansimmons mentioned work computer and my coworkers had similar issues, I uninstalled the anti-virus software we use, Cylance and the problem went away.\n. @jonathansimmons yes it did begin failing in the same manner, and everything was back to normal when Cylance was removed a second time.\n. Our it team was able to configure cylance to leave postgres alone. Not sure\nwhat they had to do.\nOn Fri, May 20, 2016 at 7:00 AM Jonathan Simmons notifications@github.com\nwrote:\n\nSo I got around to reviewing this with my office. Un-installing Cylance\ndid allow 9.5 to begin running.\nOur IT department had this to say:\n\"The odd thing is that usually when Cylance stop a process from running we\ncan see that in a list for the stopped processes for the machine. Even\nthough Cylance apparently prevents Postgres from starting on your machine\nthe Postgress process is not listed as a something that Cylance stopped.\"\nI don't know if that should imply there is still an issue for Postgres app\nto fix or not but it was interesting none the less.\nI'm functional at this point but I'll leave this open for @jakob\nhttps://github.com/jakob to close once he has seen the update.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/317#issuecomment-220613379\n. Hi, so this is for the brew version of postgres:\n\nHe upgraded me to the latest Cylance Agent and Cylance is currently excluding the paths below: \n/usr/local/Cellar/postgresql/9.5.3/bin/postgres \n/usr/local/Cellar/postgresql/9.5.3/lib/postgresql/ \n/Library/Caches/Homebrew/postgresql-9.5.3.el_capitan.bottle.tar.gz \n/usr/local/bin/postgres \n/usr/sbin/\nI imagine you could exclude similar paths that the .app provides.  Hope this helps.\n. ",
    "odupuy": "I had the same issue on my with Mac with Sierra (10.12) for both 9.5 (port 5431). and 9.6 (5433).\nI have not tried to run Postgres on a previous version.\nMy locale variables (>locale) are identical to the ones of Jonathan upper. My Mac is set to English as the preferred language in the system preferences.\nMy installer is the first one on the PosgreSQL download page aka the EntrepriseDB one. I Idid nothing fancy in the installation or later.\nMy /Library/PostgreSQL/9.5-6/data/pg_log folders were full of log files with \n\nFATAL:  postmaster became multithreaded during startup\nHINT:  Set the LC_ALL environment variable to a valid locale.\n\nand the servers could not be connected by telnet.\nRunning >pg_ctl start -D /Library/PostgreSQL/9.5/data -l logfile.txt I had no success at starting the server. \nIn the Mac activity monitor, I could see a few processes for the user 'postgres' such as lsd, trustd.. but not the postgres process itself.\nThe PostgreSQL related processes start at boot time due to the entries in /Library/LaunchDaemons such as com.edb.launchd.postgresql-9.5.plist. It seems that there is no way to set an environment variable in the same file in a simple way.\nAfter a couple of unsuccessful attempts including setting 'export LC_ALL=en_US.UTF-8' in my personal .bash_profile I have finally found the solution.\n1) identify the home folder of the user postgres (~postgres), in my case /Library/PostgreSQL/9.5\n2) create a .profile and .bash_profile there. I have not tested more to see which one is used. \n\n$ cat .profile\nLC_ALL=en_US.UTF-8\nexport LC_ALL\n$ cat .bash_profile \nexport LC_ALL=en_US.UTF-8\n\n3) chmod 755 .profile .bash_profile\n4) delete all the errors in  /Library/PostgreSQL/9.5-6/data/pg_log\n5) restart the Mac (or restart these daemons (not tested))\n6) check in /Library/PostgreSQL/9.5-6/data/pg_log for a log file containing something like\n\nLOG:  database system was shut down at 2016-10-05 14:12:05 EDT\nLOG:  MultiXact member wraparound protections are now enabled\nLOG:  database system is ready to accept connections\nLOG:  autovacuum launcher started\nLOG:  invalid length of startup packet\n\n7) check for many 'postgres' process names in the activity monitor\n8) connect with telnet, pgAdmin and other and enjoy\nMay the luck be with you.\n. ",
    "noelcosgrave": "Yes, I did replace it with a symlink and no, it hasn't caused any trouble, not so far. My boot disk is a 1TB SSD, but its not enough, so I symlinked Applications and Library to much larger spinning-rust disk. I have a lot of audio and video apps that each come complete with 100s of gigs of libraries, not to mention everything that comes with Adobe CC, so it was done out of necessity!\nSee http://osxdaily.com/2015/08/06/make-symbolic-links-command-line-mac-os-x/\nThanks! I'll try out the debug build!\n. ",
    "guyrixon": "I need q3c, the spatial-indexing extension for astronomy.\nI\u2019ll install the non-app postgres from source. It\u2019s a little less convenient than the app but I can manage.\nThanks for getting back so quickly,\nGuy\n\nOn 10 May 2016, at 14:30, Jakob Egger notifications@github.com wrote:\nAs far as I understand, libpgcommon is a static library that contains code shared between the frontend and backend. It's only used during building PostgreSQL, and not part of standard distributions.\nIf your extension depends on this, you probably need to build PostgreSQL from source. It might be worth checking if Macports or Homebrew include this library, but to be honest I doubt it.\nWhat extension are you trying to build?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub https://github.com/PostgresApp/PostgresApp/issues/321#issuecomment-218157407\n. \n",
    "JamesChevalier": "With version 2, you can now manually add 9.4.x support:\n\nDownload & install PostgresApp 2.0.1 from the homepage\nRun echo /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp to add its command line tools to your PATH\nI suggest running PostgresApp at this point ... I had some issues where the program would be marked as damaged if I attempted to add 9.4.x support to a copy of PostgresApp that I had not yet run\nDownload the 9.4.10 release of PostgresApp from the legacy versions page\nOpen the 9.4.10 DMG file\nRight click on PostgresApp and select 'Show Package Contents'\nCopy the Contents/Versions/9.4 folder\nNavigate to your Applications folder, where PostgresApp 2.0.1 is installed\nRight click on PostgresApp and select 'Show Package Contents'\nNavigate into the Contents/Versions folder\nPaste the 9.4 folder here\nOptionally, you can make the 9.4.10 versions of pg_dump and psql available as pg_dump94 and psql94 by running these two commands (this assumes your PostgresApp resides in the /Applications folder):\nln -s /Applications/Postgres.app/Contents/Versions/9.4/bin/pg_dump /usr/local/bin/pg_dump94\nln -s /Applications/Postgres.app/Contents/Versions/9.4/bin/psql /usr/local/bin/psql94\n\n\n\nThere is one caveat: the automatic update function will delete your extra binaries, so you\u2019ll need to add them again after updating.\nAlso, you can use different 9.4.x versions of PostgresApp. If you need 9.4.5 for example, that's available at:\nhttps://github.com/PostgresApp/PostgresApp/releases/download/9.4.5.0/Postgres-9.4.5.0.zip. Is there any chance this can also be back ported to the 9.6 version of PostgreSQL that's bundled, @jakob ? That appears to be pinned to 2.3.7 for now.. Oh, sorry, I misunderstood how extension versioning works... After some PostgresApp updates, I thought I've noticed that select * from pg_available_extensions shows installed_version as (for example) 2.3.4 but the default_version as 2.3.7. So, I thought you could make several PostGIS versions available.\n\ud83e\udd14 Is there any way for me to install PostGIS 2.4 or 2.5 against a PostgreSQL 9.6 installation within PostgresApp? While I was waiting on your response, I tried copying the /Applications/Postgres.app/Contents/Versions/11/lib/postgresql/postgis-2.5.so file over to /Applications/Postgres.app/Contents/Versions/9.6/lib/postgresql/, removing the postgis-2.3.so file in there, and restarting PostgresApp, but that didn't change the default_version listed. \ud83e\udd37\u200d\u2642\ufe0f \ud83d\ude2c . ",
    "caarlos0": "I forgot to mention that, connecting with other clients work (psql, go client, rails, pgadmin, etc)..\n. Disabling the OSX firewall didn't work.\nFWIW, the connection keeps in SYN_SENT state:\njava     43423 carlos  386u  IPv4 0x9bbb9382819712eb      0t0  TCP localhost:52594->localhost:postgresql (SYN_SENT)\n. Found it!\nI had an entry in my /etc/hosts:\n127.0.1.1   localhost\nI removed this entry and it worked.\nSince 127.0.1.1 is also localhost, why didn't that work anyway?\n. @jakob yeah, kind of weird though... \nanyways, thanks\n. ",
    "barjacks": "Thanks a lot Jakob, your help is very much appreciated. But the problem still persists:\n1. I opened activity monitor and deleted all the processes named postgres, starting with the ones with the lowest PID.\n2. I then looked for the postgres data directory under /Users/USERNAME/Library/Application Support/Postgres/var-9.5 for the postmaster.pid. This is file, however, disappears as soon as I kill the processes above.\n3. The I restart postgres and I get the following message:\nLast login: Sun May 22 17:50:57 on ttys002\n'/Applications/Postgres.app/Contents/Versions/9.5/bin'/psql -p5432\nMacBook-Pro:~ USERNAME$ '/Applications/Postgres.app/Contents/Versions/9.5/bin'/psql -p5432\npsql: FATAL:  role \"USERNAME\" does not exist\nMacBook-Pro:~ USERNAME$ \n(I tried deleting the programme after repeating the above mentioned steps and reinstalling it, and the same thing happens.)\nI would be really grateful for any further advice you have,\nKind regards,\nBarnaby\n. Thanks, that worked nicely!\n. ",
    "natoinet": "Sorry, that was just because uriparser was not installed. Doing the following resolved my issue:\nbrew install uriparser\n. ",
    "dijit": "I think this is out of scope for the PostgresApp maintainers, they supply a bundled server to use on macOS and the associated command line client.\niOS and GUI clients are not the goal of this project.\nIf you want a list of GUI clients that are available the official PostgreSQL Wiki has some\n. There's no dtrace on Linux platforms so if it was default they would fail.. ",
    "eagle-r": "That's perfect. Thanks for the advice and I'm looking forward to the new version.\n. ",
    "luminousbeam": "I verified what my etc/hosts file said and it had most of the content deleted. You reminded me that in order to get an application version running locally for work, they had me delete the localhost and add our company address to it. \nOk, so after updating and restoring to my default /etc/hosts settings (http://www.imore.com/how-edit-your-macs-hosts-file-and-why-you-would-want) I tried running Postgres and it still gave me the same issue. I uninstalled Postgres using brew uninstall postgresql. I downloaded Postgres from their website directly http://postgresapp.com/ and I no longer received the logging errors from Postgres:\nCould not translate host name \"localhost\", service \"5432\" to address: nodename nor servname provided, or not known\nHowever, I am still not able to run the rake db:create command, I am getting a similar issue:\nrake db:create\ncould not connect to server: No such file or directory\n    Is the server running locally and accepting\n    connections on Unix domain socket \"/var/pgsql_socket/.s.PGSQL.5432\"?\nThe Postgres Mac app is running fine on port 5432 and when I \"open psql\" I receive this error:\n$ '/Applications/Postgres.app/Contents/Versions/9.5/bin'/psql -p5432\npsql: FATAL:  role \"username\" does not exist\nI am looking into that rabbit hole now, but I think we're good to close this issue. Thanks @jakob for the quick response and help.\n. Awesome, so after that painstaking process I am able to get things up and running now!\nI was able to get the \"open psql\" command to run properly, no more user errors being thrown my way. I was still receiving errors when running my \"rake db:create\" command, still with \"rake db:create could not connect to server: No such file or directory Is the server running locally and accepting connections on Unix domain socket \"/var/pgsql_socket/.s.PGSQL.5432\"?\" but after adding this to my database.yml application file, I stopped receiving all errors!:\nsocket: /var/pgsql_socket/\nhost: localhost\nThank you for your patience and guidance @jakob, big props!\n. ",
    "sailing": "Even with the extension installed, I still see this, on 9.4.9.1\n. @beckmx, to clarify what @tbussmann responded, you need to \\c to the database in question before running CREATE EXTENSION pg_trgm;\nBy default PostgresApp has you on your personal DB.\n. ",
    "quocgfy": "Works great for me. thanks!. ",
    "leandropadua": "Thanks for the solution. That worked partially for me. The full solution was to apply it to every schema by adding the schema pg_catalog to the end of it:\ncreate extension pg_trgm with schema pg_catalog;. ",
    "senturk": "thank you!\nbut you are right. i although need postgis_sfcgal. \nBut since i don't like to create test builds on my machine, i will postpone this 'tryout' until i have a gain a plain machine to try on, or until you find a time to include it - of course only if it makes sense for your distribution.\ntill then i'm very happy to use your new distribution, which really is quite helpful and handy.\n. ",
    "saerdnaer": "Side note: if you need postgis_sfcgal, you can try to install postgis via homebrew. \n. ",
    "timoruohomaki": "Is there any news or workaround on how to include posts_sfcgal? It's quite important for all the PostGIS work. There was a posting on the issue from 2015 so it's not uncommon to have it missing from packages but patching an existing installation manually later on is a bit tricky. https://postgis.net/2015/10/25/postgis_sfcgal_extension/ . ",
    "doekman": "That makes sense. Your remarks plus adding links (which I forgot somehow) make it work now! \nThanks a lot! I will let you know when I open source the AppleScript library.\nFor documentation purposes, I now have this:\n```\ncd bin\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.5/lib/libpq.5.dylib @executable_path/../lib/libpq.5.8.dylib psql\ncd ../lib\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.5/lib/libpq.5.dylib @executable_path/../lib/libpq.5.dylib -id @executable_path/../lib/libpq.5.8.dylib libpq.5.8.dylib\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.5/lib/libssl.1.0.0.dylib @executable_path/../lib/libssl.1.0.0.dylib libpq.5.8.dylib\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.5/lib/libcrypto.1.0.0.dylib @executable_path/../lib/libcrypto.1.0.0.dylib libpq.5.8.dylib\nln -sf libpq.5.8.dylib libpq.5.dylib\nln -sf libpq.5.8.dylib libpq.dylib\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.5/lib/libssl.1.0.0.dylib @executable_path/../lib/libssl.1.0.0.dylib -id @executable_path/../lib/libssl.1.0.0.dylib libssl.1.0.0.dylib\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.5/lib/libcrypto.1.0.0.dylib @executable_path/../lib/libcrypto.1.0.0.dylib libssl.1.0.0.dylib\nln -sf libssl.1.0.0.dylib libssl.dylib\ninstall_name_tool -change /Applications/Postgres.app/Contents/Versions/9.5/lib/libcrypto.1.0.0.dylib @executable_path/../lib/libcrypto.1.0.0.dylib -id @executable_path/../lib/libcrypto.1.0.0.dylib libcrypto.1.0.0.dylib\nln -sf libcrypto.1.0.0.dylib libcrypto.dylib\n```\n. ",
    "vitaly-zdanevich": "Any way to automate installing of psql only? AppleScript?. ",
    "frans4": "it says 2.000 but I have an app running 2.5.\npsql (9.5.4)\n10.11.6 (15G1004)\nEL Capitan\n. Ive reinstalled ruby and now I get this\nbundle exec rake db:create db:migrate\nCould not locate Gemfile or .bundle/ directory\n. its says my path is not correctly setup\n. ",
    "cappert": "9): Library not loaded: /usr/local/opt/openssl/lib/libssl.1.0.0.dylib\n...\n/Users/SteveFrancois/.rvm/rubies/ruby-2.3.0/lib/ruby/2.3.0/yaml.rb:5:in '<top (required)>':\nIt seems your ruby installation is missing psych (for YAML output).\nlooks like you're missing a bunch of unrelated dependencies (ssl, libyaml) for Ruby, unrelated to Postgres.app.\nsend me an email (address in my profile) if you need help installing Ruby.\n. hello,\nthe exact commands to add postgresapp binaries to your paths are documented on https://postgresapp.com/ :\nsudo mkdir -p /etc/paths.d &&\necho /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp\nYou don't need to add anything to your zsh configuration files, running those commands add them to your PATH via other means.\nedit: instructions are also in the doc twice:\nhttps://postgresapp.com/documentation/install.html\nhttps://postgresapp.com/documentation/cli-tools.html. what gives ls /Applications/Postgres.app/Contents/Versions/latest/bin ?. have you modified /etc/profile at all?\nmine looks like this:\n```\nSystem-wide .profile for sh(1)\nif [ -x /usr/libexec/path_helper ]; then\n    eval /usr/libexec/path_helper -s\nfi\nif [ \"${BASH-no}\" != \"no\" ]; then\n    [ -r /etc/bashrc ] && . /etc/bashrc\nfi\n``path_helperis the command populating the PATH usingpaths.d`.\nLooking back at your first picture, I see you set the path for go and mongo, but neither of them are present in your actual PATH, did you remove these statements? What file were you editing?\nI can't reproduce your issue with Sierra, zsh, and Postgres 2.0.2, using either export in my .zshrc or using /etc/paths.d.. @zsiegel92 : what shell are you using, bash, zsh?\nFYI we can't see your email address to contact you further.\ndupe #383 . ",
    "michalgce": "+1. ",
    "dijonkitchen": "The link on the bottom of the homepage is broken (http://postgresapp.com/) and the links on GitHub were broken (https://github.com/PostgresApp/PostgresApp/blob/master/docs/index.md).\n. Updated to absolute link in latest commit. \n. ",
    "bileser": "thx, jakob,\nunfortunately I did 1) and 2) and 3) but no files were in /tmp.\nThe problem is, that the lock file according to the error log can't be created, although it should.\nThats my private dir, where tmp is located and that /tmp is sym linking to:\ndrwxr-xr-x  90 root  wheel  3060  4 Okt 13:54 etc\ndrwxr-xr-x   2 root  wheel    68  1 Aug  2015 tftpboot\ndrwxrwxrwt@  3 root  wheel   102  4 Okt 13:36 tmp\ndrwxr-xr-x  24 root  wheel   816  4 Okt 10:41 var\nupdate: I think, I was completely on the wrong track. Even with sudo I cannot create a directory unter /private/tmp: Operation not permitted\n. Yup, was a Mac error. Did this and was able to run sudo chmod -R 1777 /private/tmp successfully. Now every program can write files. But why do I have to do that??\n. thx, jakob,\nyes, it is a really strange mac os problem. Another program not able to write in the /tmp directory lead me to the problem. If I re-enable SIP, Mac OS forgets my chmod.\nAnyway, this is another problem and has nothing to do with your fantastic software, which works great!\n. ",
    "arakawarx7": "I was just experiencing this issue. My solution was to follow @bileser tip by disabling the SIP via $ csrutil disable through the OSX recovery tool.\nAfter a reboot is when I started experiencing this issue. Weird \ud83d\udc38 \n. ",
    "josephmisiti": "nevermind - my database was corrupt. (although that is a weird error for a corrupt database)\n. ",
    "dsinkey": "Nevermind.  I found the answer in a previous issue.\n. ",
    "awwx": "macOS Sierra 10.12\nI used \"mv\".\nI just now confirmed that it works correctly moving the downloaded app using Finder.\nI recommend that the \"Quick Installation Guide\" be updated to say to move the downloaded app to /Applications using the Finder.\n. ",
    "donhuvy": "I am at my home, in Hanoi, Vietnam. ( I can view YouTube 4K video)\nIt is \n\n. This is my position: (...)\nMy IP: 14.177.xxx.xxx\nISP:    Vietnam Post and Telecom Corporation\n. you true. \"more than 500GB of bandwidth per month\" --> Seem this is cheaper: https://cloud.google.com/storage/pricing#storage-pricing  $0.026 * 500 (about $14/month). just now, at Hanoi, Vietnam\n\n. ",
    "tbalthazar": "I cannot downlaod v2.0.3 from Belgium.\nI tried with wget, Firefox and Chrome, and it always fails at some point.\nAuto update from within the app fails too.\nI've been trying for several days, but it always fails.\nI've a reasonalby good Internet connection here (~ 40Mbps according to fast.com)\n```\nwget 'https://github.com/PostgresApp/PostgresApp/releases/download/v2.0.3/Postgres-2.0.3.dmg'\n--2017-06-12 11:38:06--  https://github.com/PostgresApp/PostgresApp/releases/download/v2.0.3/Postgres-2.0.3.dmg\nResolving github.com... 192.30.253.112, 192.30.253.113\nConnecting to github.com|192.30.253.112|:443... connected.\nHTTP request sent, awaiting response... 302 Found\nLocation: https://github-production-release-asset-2e65be.s3.amazonaws.com/3946572/2d4e61b8-35b0-11e7-886d-49eb4a529f0b?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20170612%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20170612T093806Z&X-Amz-Expires=300&X-Amz-Signature=8fb76efc4bc3751376787fc5f4c21077b80fcdb260fa77dca70add4b5089e449&X-Amz-SignedHeaders=host&actor_id=0&response-content-disposition=attachment%3B%20filename%3DPostgres-2.0.3.dmg&response-content-type=application%2Foctet-stream [following]\n--2017-06-12 11:38:06--  https://github-production-release-asset-2e65be.s3.amazonaws.com/3946572/2d4e61b8-35b0-11e7-886d-49eb4a529f0b?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20170612%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20170612T093806Z&X-Amz-Expires=300&X-Amz-Signature=8fb76efc4bc3751376787fc5f4c21077b80fcdb260fa77dca70add4b5089e449&X-Amz-SignedHeaders=host&actor_id=0&response-content-disposition=attachment%3B%20filename%3DPostgres-2.0.3.dmg&response-content-type=application%2Foctet-stream\nResolving github-production-release-asset-2e65be.s3.amazonaws.com... 52.216.0.152\nConnecting to github-production-release-asset-2e65be.s3.amazonaws.com|52.216.0.152|:443... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 90757811 (87M) [application/octet-stream]\nSaving to: \u2018Postgres-2.0.3.dmg\u2019\nPostgres-2.0.3.dmg                               5%[====>                                                                                               ]   4.34M  2.10MB/s\n```\n\n\n. ",
    "eladkarako": "This is a known issue with GitHub,\nand not directly related to PostgresApp... (you can close this probably...)\nbut I've came here from Google... with the same issue,\nand here is what I've found ..\ns3.amazonaws.com uses a nasty load-balancing (it got its reasons I guess...).\nSometimes changing the IP (dynamic IP from your ISP) helps,\nbut a better option is to use a multi-part downloader,\ninstead of wget or your browser, for example,\nsuch as aria2c and few recommended arguments to enable it download from secure location properly.\nIf you do uses aria2c, copy the URL from the /releases/ page and not the later github-production-release-asset-......s3.amazonaws, since the CDN will check for the referrer URL.\nNewer versions of Google Chrome will allow you to enable \"resume download\" feature (in-case it breaks you can click resume and try to continue from the last successful part without downloading it all over again)\n and \"parallel-downloading\" (chrome://flags/#enable-parallel-downloading)\n\nnot a solution, just making it a little bit better.\n. ",
    "fuzzthink": "Thank you. Chrome with parallel download as suggested worked. Firefox downloads literally at 14k modem speed and gets stuck at 16.9MB, twice. This is from SF bayarea.. Spoke too soon. Chrome stopped at 37MB. Tried again with Chrono Downloader addon, after < 100MB, it gave \"SERVER_FORBIDDEN\" error. Tried again, same error after < 50 MB. Yes, \"a known issue with Github\" may be right, but this issue shouldn't be closed until there's a solution for the fix.  Have not tried aria2c above, but seems to much setting to deal with and don't think it will fix the \"SERVER_FORBIDDEN\" error.\nEdit: Tried third browser - Safari - stopped at 84MB.\nEdit2: It really needs either either a mirror or official torrent.\nEdit3: Chrome not able to resume download as it errored in \"Failed - Forbidden\". Pretty much running out of options at this point. A mirror or some kind of alternative is really needed.. Finally got lucky and didn't get error. Problem needs to be addressed though. Maybe at least offer option to download an app that contains just the latest for smaller download?. ",
    "mietennet": "Download from Germany:\n```# speedtest --simple\nPing: 14.748 ms\nDownload: 77.69 Mbit/s\nUpload: 6.05 Mbit/s\ncurl -O https://postgresapp-b082.kxcdn.com/Postgres-2.1.3.dmg\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0  1922k      0  0:01:19  0:01:19 --:--:-- 2056k\ncurl: (16) Error in the HTTP2 framing layer\nls -al Postgres-2.1.3.dmg\n-rw-r--r--  1 karsten  staff  156215679 Mar  1 21:57 Postgres-2.1.3.dmg\ncurl -O https://postgresapp.r.worldssl.net/Postgres-2.1.3.dmg\n% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100  148M  100  148M    0     0  6991k      0  0:00:21  0:00:21 --:--:--  9.9M\ncurl: (16) Error in the HTTP2 framing layer\ncurl -OL -w \"%{url_effective}\\n\" https://github.com/PostgresApp/PostgresApp/releases/download/v2.1.3/Postgres-2.1.3.dmg\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n100   607    0   607    0     0    994      0 --:--:-- --:--:-- --:--:--   993\n100  148M  100  148M    0     0  1054k      0  0:02:24  0:02:24 --:--:-- 1451k\nhttps://github-production-release-asset-2e65be.s3.amazonaws.com/3946572/aa7af970-1d50-11e8-8805-6cecbf74c740?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20180301%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20180301T210256Z&X-Amz-Expires=300&X-Amz-Signature=7a4ef3fb54c74a0eb5fea47de22656b120029ab6d9df9d7e983a4d2c243cd666&X-Amz-SignedHeaders=host&actor_id=0&response-content-disposition=attachment%3B%20filename%3DPostgres-2.1.3.dmg&response-content-type=application%2Foctet-stream\n```. ",
    "teefan": "@jakob Can we just simply mirror the release downloads to a public Google Drive folder? It's so frustratedly slow/impossible to download.. ",
    "emiapwil": "Not a Postgres user but see this thread on a related issue. I ran the tests in western China, where the network is typically slower than that in eastern China.\n\nUnfortunately the first two wouldn't even start :disappointed: . CDN is definitely an option. Also I would agree with the OP that torrent and mirrors are also worth looking into.. ",
    "WiechersV": "Hey guys!\nJust installed 2.0 and it always crash right on start. Don't know if it's a bug or something wrong from my part, so I decided to ask here. Also, don't know if it's related, but I was using a legacy version with postgres 9.4 and did a clean uninstall following the docs before upgrading to 2.0.\nStacktrace:\ncrash-report.txt\nI've tried many solutions related to libpq.5 and psycopg2 that I found on StackOverflow, but none of them seem to work.\nDid this happened to anyone else?\nThanks in advance ;). @jakob Sweet, dude! Right on the spot, it's working fine now!\nThanks a lot \ud83d\ude04 . ",
    "markcerqueira": "@jakob Just pointing out it throws a warning after updating. Aware that the warnings are just that: warnings. Just thought I'd let you know! :)  Feel free to close. \n. ",
    "ionbaratol": "i am not very sure about this but after downgrading from Postgres 9.6 to 9.5 the left over gdal-config brakes rvm ruby installer. ",
    "CarlosCD": "I am seeing the same warning.\nCould this could be related to adding /Applications/Postgres.app/Contents/Versions/latest/bin to the path? .. to be able to use PostgreSQL's command line tools (psql, pg_dump, ...).\nSee postgres app's installation instructions (https://postgresapp.com):\n...\n3. Configure your $PATH to use the included command line tools (optional):\n    sudo mkdir -p /etc/paths.d &&\n    echo /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp\n....\n",
    "romenigld": "Hello CarlosCD,\nI do this:\n```\nsudo mkdir -p /etc/paths.d &&\necho /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp\nPassword:\n/Applications/Postgres.app/Contents/Versions/latest/bin\n```\nSo when I run brew doctor I have the same warning:\n```\nbrew doctor                                                          \nPlease note that these warnings are just used to help the Homebrew maintainers\nwith debugging if you file an issue. If everything you use Homebrew for is\nworking fine: please don't worry or file an issue; just ignore this. Thanks!\nWarning: \"config\" scripts exist outside your system or Homebrew directories.\n./configure scripts often look for *-config scripts to determine if\nsoftware packages are installed, and what additional flags to use when\ncompiling and linking.\nHaving additional scripts in your path can confuse software installed via\nHomebrew if the config script overrides a system or Homebrew provided\nscript of the same name. We found the following \"config\" scripts:\n  /Applications/Postgres.app/Contents/Versions/latest/bin/gdal-config\nWarning: Your Xcode (9.1) is outdated.\nPlease update to Xcode 9.2 (or delete it).\nXcode can be updated from the App Store.\n```\nCan you help me with this please?. ",
    "danra": "Same brew doctor warning here. \nSince you recommend adding /Applications/Postgres.app/Contents/Versions/latest/bin/ to $PATH for acess to the sql command line tools, and brew doesn't like *-config files in $PATH, it would be nice to have the command line tools provided (or linked) in a folder which doesn't contain this config file.. ",
    "muescha": "see doc here where to put CLI documentation\n. Thx\nYes. I mean the Welcome Screen in the App :)\n. ",
    "pbnjay": "OK I'm guessing you hit the same errors as me - failing to find libpgcommon and libpgport (which appear to be part of libpq but not in the bundle). Thanks for trying it out - I was finally able to get it to build, so for the almighty google I'll document it here (and just close this to make things quieter, I don't expect very many people will use this tool on osx).\nI built postgres using src/makefile from the repo here as expected. From there, I converted the libs to .dylib manually and copied into the existing release bundle:\ng++ -fpic -shared -Wl,-force_load,libpgport.a -o libpgport.dylib\ng++ -fpic -shared -Wl,-force_load,libpgcommon.a -L`pwd` -lpgport -o libpgcommon.dylib\ninstall_name_tool -change libpgport.dylib /Applications/Postgres.app/Contents/Versions/9.6/lib/libpgport.dylib libpgcommon.dylib\ncp libpgport.dylib libpgcommon.dylib /Applications/Postgres.app/Contents/Versions/9.6/lib\n\nThen I was able to build pg_bulkload without errors and copy to the bundle bin with the following tweak in order to find the .dylibs above:\ninstall_name_tool -change libpgport.dylib /Applications/Postgres.app/Contents/Versions/9.6/lib/libpgport.dylib pg_bulkload\ninstall_name_tool -change libpgcommon.dylib /Applications/Postgres.app/Contents/Versions/9.6/lib/libpgcommon.dylib pg_bulkload\n\nI'm sure there's a better way to do all of this but this was quick and dirty and it appears to be working... Cheers!\nPS The above files are pretty small so I'll include them in case someone wants to drop them in:\npgapp_bulkload.tar.gz\n. Really sorry for yet more noise, I forgot the actual extension files in the tarball. I really am done now...\npgapp_bulkload.tar.gz\n. ha... just went and tested just copying the 2 .a files into the bundle and pg_bulkload appears to build perfectly fine and not need the whole .dylib mess. Not sure why I made it so much more complicated but I'm sure I have a terribly obscure reason for it.... ",
    "jackcasey": "A colleague also suggested pg_ctl, which for some reason I didn't think of. It works perfectly fine. Thankyou for your comment. I'll close this. . ",
    "kpy3": "@jakob Thanks a lot for PostgresApp 9.6.1.1 with fixes for this PR, what about fixes to PostgresApp 2.0 Beta?. @jakob just tested on Beta 4 build, works fine.. ",
    "StriveForBest": "It was my hosts file after all. some weird character was breaking it.. ",
    "michaeltocci": "I downloaded Postgres.app (awesome app BTW!) and installed the latest Postage to try to replicate these issues.\nYou are correct, Postage is not signed. We talked about getting this done, here is the issue where we discussed it: (workflowproducts/postage#26).\nI couldn't replicate the second two issues. Is it possible that there is some kind of configuration I don't have that's causing these issues?\nI was able to log in without a password to the system user name.\nI was able to switch to the system user database (picture below).\n\nI am going to try to replicate this on another computer using a source build.\nCould you send us a copy of these items:\n\npostgres config\npostage.conf\npostage-connections.conf\nmacOS version number\npostage build type (Mac Electron or Source)\npostage release number. After building from source, we ran into the \"no password\" issue. We'll get this fixed and report back.. We're still unable to replicate the issue where the database is not in the \"Switch Database\" list.\n\nI believe the reason I couldn't replicate the \"no password\" issue was because I had a second Postgres Database running on my computer. Now that I know that, I can replicate \"no password\" in the Electron version. Next release won't have this issue.\n. ",
    "josephtocci": "Michael and I were able to fix the issue by using the master branch with Nunzio's latest change. Thanks for reporting this.. ",
    "justintocci": "Jakob, thank you for taking the time to report these issues. I shudder to think how many people have run into them and we didn't even know. \nYou are the first person to mention code signing. Since you mentioned it we are going to get an Apple developer account today. The next release of Postage will be signed.\nThis is further evidence that getting people to report issues is a problem for us. If you have any advice we'd welcome it. \nThank you again.\n. ",
    "nunziotocci": "I have Apple Code Signing Certificates and they work.\nNext week we will have a (code-signed) release.. @jakob, I have put out a new release just now. I would appreciate it if you could download it here, and see if it fixes the problems you experienced.. @chrispysoft, Did you download the application or did you build from source?.  @chrispysoft Can you Open the Dev Tools (View > Toggle Developer Tools) and take a screenshot?\n. What connection do you have highlighted in the login form?\nThe one that is most likely to work with Postgres.app is the one named \"localhost@5432\".\n. Please, send me the output of ps -ef | grep -i post. I would like to see the Postgres and Postage processes.. ",
    "twinney": "I would say \"almost certain\" rather than \"likely\"! Even after seeing this issue before upgrading to 2.0.1, I ended up with typo quotes on my first attempt (I wanted to set the timezone to UTC.)\nIs it possible to check /Applications for better-behaved editors such as Sublime Text or Aquamacs?\nAs a short-term fix, could you put a warning note in the server settings dialog or even as a block comment in the config files themselves.. ",
    "tianzhou": "--data-checksums enables postgres to detect page level corruptions. This is a feature introduced in 9.3. I think the reason why the default is off is because:\n\nIt has a performance impact to do checksum, although to most workload it's very minimum.\nOFF by default is the common practice for any new flags.\n\nI intend to enable it because enabling \"--data-checksums\" is the option any production database would do otherwise page corruption will stay there without any notice. Turning it on is to match the settings people would use in their production environment.. ",
    "abevoelker": "No idea, I don't generally use Macs (this is my wife's machine, using it in a pinch).. Great, thanks to you both for maintaining such a useful piece of software! :beers: . ",
    "eddiejaoude": "Yes that was the case for the previous version. But now there is not that option?\n\n. Ah got it! Thanks!\n\nMaybe we should add the \"Preferences..\" and \"Check for updates\" commands to the elephant menu. \n\nMight be a good idea \ud83d\udc4d . ",
    "csavory": "Thanks for the info @jakob.  I thought Postgres.app was auto updating so I didn't realize I was out of date.  \nAfter upgrading to 2.0.1 I am not getting this error anymore. . ",
    "alexf7": "LDAP is an authentication protocol. Basically, the Postgres server communicates with the LDAP server regarding user access. It's very useful when you have large teams such as you can centralize user permissions. \nLDAP support is enabled by default in PostgreSQL server. Since the PostgresApp is so much easier to use. It would be a very nice feature. I briefly looked and it sounds like it would require some flags to be enabled during the PostgreSQL compilation. \nThanks for developing and supporting such a great app! . Got it! Thanks for trying!. ",
    "MW3000": "Thank you.. ",
    "alvinkatojr": "Zsh and Bash config files have minor difference if any. Previous versions of postgresapp worked fine with the $PATH settings so its not a zsh issue.\nAlso @jakob it might help to be more direct and clear with the exact set up steps for this new version, the older version had explicit directions for setting path, and editing either bash or zsh files. With version 2 its more like guess work for noobs and thats frustrating. \nI have attached screenshots of the new edits to my $PATH and the result of running echo $PATH with no signs of postgres. Please point out where I've missed it. Thanks!\n\n\n. Hello @cappert thanks, but I've done that over and over and it still does n't work. See the attached screenshot. Something is wrong somewhere because this is the 2nd time am installing postgresapp v2 with a fresh install of Sierra and its doing the same thing.\n\n. Here's the list of binary contents.\n\n. Hi @cappert. No I have n't, it looks exactly like yours:\n\nAbout the mongo/go paths, my zsh file is usually saved on gist and it has a lot of aliases and path settings, those paths are from my previous install when I had both mongo and go installed, I don't know but I had forgotten to comment them out. I'll do that now. \nAh that's sad, I guess I'll have to resume to using homebrew's postgres then :(  . @jakob while I understand where you are coming from, I don't think this is a zsh issue given that most of my output matches what @cappert had on his terminal. \nNevertheless I've resorted to the homebrew installation for now. I do hope though that this issue does n't crop up again because v1 of postgresapp was a breeze to work with but I honestly can't say the same for v2.. ",
    "TroutNemesis": "I've never used Zsh before. But I'm experiencing the same problem.. ",
    "9mm": "I think I found a bug then. If the 'hide icon from menu bar' is checked, then it never starts when the computer starts. If I uncheck that box then it works (by starting both the app and the server).. Here's what I did to reproduce:\nMake sure settings look like this:\n\n\n\n\n\nRestart computer and make sure 'reopen windows' is unchecked.\nTry to connect to PG. Doesn't connect\nChange the 1 setting to show it in menu bar\nRestart again\nI can now connect\n\n. I've flip-flopped the checkbox + restarted 4 times now to make sure there was nothing \"residual\" or any weirdness which might have 'carried over'. The checkbox definitely affects its ability to restart on login (I have auto-login enabled). \n. Any luck reproducing by chance?. Awesome, will do. works!. ",
    "schinckel": "According to https://github.com/PostgresApp/PostgresApp/blob/master/Postgres/ClientLauncher.applescript#L7, it should be creating a new tab: I'm not actually seeing this behaviour work.. ",
    "songproducer": "Solved by deleting app support postgresql folder, clicking the icon and removing the old server.. The folder I deleted would have been either /Library/Application Support/Postgresql or Users/username/Library/Application Support/Postgresql. ",
    "infomofo": "can you clarify this more? I am running into the same issue and want to know specifically what folder you had to delete.  Did you lose data?. ",
    "aubergene": "I'm getting this error. I did a clean install of OSX Sierra and restored my data but not apps. I get this error when trying to start Postgres app, so I think perhaps I have an old copy of data which I don't need. What's the location I would need to delete?\nPostgres app Version 2.0.3 (21)\nPostgreSQL 9.3\nOSx 10.12.5\nedit: I fixed it by following the reset instructions, with defaults delete com.postgresapp.Postgres2\nhttps://postgresapp.com/documentation/troubleshooting.html\n. ",
    "axelson": "The https://postgresapp.com/documentation/update.html and https://postgresapp.com/documentation/migrating-data.html pages are missing a crucial step if you are trying to upgrade from something a pre 9.5 database.\nSo PostgresApp 2 has this concept of multiple databases, and it ships with the binaries for 9.5 and 9.6, so if you are currently running 9.4 and you upgrade to PostgresApp 2 you will get this \"Binaries not found\" error. However, you are not getting this error for the entire PostgresApp 2 application, just for your existing 9.4 server instance. So if you click on the panel icon in the bottom left:\n\nYou can create a new server running the latest version of postgres and then you can finish following the instructions on https://postgresapp.com/documentation/migrating-data.html\n. That sounds like a reasonable solution to me. Although my preference would be a doc update in addition to the application update.. ",
    "knussear": "I have this same problem. New install, \"binaries not found\". And I downloaded 11 , but it wants 9.4 ?? how can I have it run 11?. FANTASTIC! Thank you!\nKen\nJakob Egger wrote on 12/2/18 3:17 PM:\n\n@knussear https://github.com/knussear Open the sidebar (using the \nbutton in the bottom left), then click the plus button, and create a \nnew server with version 11\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub \nhttps://github.com/PostgresApp/PostgresApp/issues/388#issuecomment-443551778, \nor mute the thread \nhttps://github.com/notifications/unsubscribe-auth/AC0QAyQL3Q4rOxOfVM6_j12j3X6-vyGTks5u1F91gaJpZM4M83ay.\n\n\n. ",
    "choonggg": "Nice! Thank you very much. Didn't know this exists. Closing. ",
    "zsiegel92": "I noticed that this exact piece of code:\nPATH=\"/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH\"\nis on the Heroku website!\nIt seems like I'm not the only one who might think this would be useful on your site.. Hey Jakob,\nThanks so much for your response.\nI agree that folks will usually want a permanent path addition. I did in\nfact work this out by adding a few lines to my .profile.\nI certainly did reopen my terminal, and even restarted my computer. I can't\nsay what the problem was with the conmand you posted.\nIf other users have trouble and you want to investigate further, please\nfeel free to contact me at this email address.\nThanks again!\nOn Thu, Apr 27, 2017 at 12:40 AM Jakob Egger notifications@github.com\nwrote:\n\nHi!\nPreviously the instructions would tell users to add that line into their\nprofile, but that seemed to be difficult, eg. some people used zsh, which\nhas slightly different syntax, etc.\nSo we came up with the current method (originally suggested by #259\nhttps://github.com/PostgresApp/PostgresApp/issues/259). I thought it\nwas simpler, since it is just a single command to execute, and it doesn't\nmatter if you use bash or zsh. It's more complicated than I'd like, but it\nseems to work for most people.\nI don't think that a solution that only works for the current session is a\ngood idea. I'd assume that most people who install Postgres.app want to use\nit more than once.\nCould it be that the issue was that you didn't reopen your terminal? The\nchanges to paths.d only take effect when logging in.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/390#issuecomment-297636932,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZHwvD-w-zY_p3VhjUJBRUFzBPhiFmV4ks5r0EaEgaJpZM4NJv9u\n.\n. I am using the default Mac OS X Sierra Terminal shell (bash).\n\nI'm impressed by this community's responsiveness!\nOn Thu, Apr 27, 2017 at 2:47 AM, Camille Appert notifications@github.com\nwrote:\n\n@zsiegel92 https://github.com/zsiegel92 : what shell are you using,\nbash, zsh?\nFYI we can't see your email address to contact you further.\ndupe #383 https://github.com/PostgresApp/PostgresApp/issues/383\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/390#issuecomment-297667276,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZHwvB0LHSonR6VyWDWwNE4H-oHee1Auks5r0GQogaJpZM4NJv9u\n.\n. Hi Jakob,\n\nHere are the results of the commands you suggested:\nZachs-MacBook-Air:~ Zach$ ls /etc/paths.d\n40-XQuartz TeX postgresapp\nZachs-MacBook-Air:~ Zach$ cat /etc/paths.d/postgresapp\n/Applications/Postgres.app/Contents/Versions/9.5/bin\nMy complete .profile is copied below. The first line sets the path and all the other commands append to it. Does that first line \"reset\" $PATH? Is there something unusual about this?\nexport PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/smlnj-110.75/bin\n\nYour previous /Users/Zach/.profile file was backed up as\n/Users/Zach/.profile.macports-saved_2012-11-15_at_14:18:40\n\nMacPorts Installer addition on 2012-11-15_at_14:18:40: adding an\nappropriate PATH variable for use with MacPorts.\nexport PATH=/opt/local/bin:/opt/local/sbin:$PATH\nFinished adapting your PATH environment variable for use with MacPorts.\n\nYour previous /Users/Zach/.profile file was backed up as\n/Users/Zach/.profile.macports-saved_2013-09-22_at_04:38:47\n\nMacPorts Installer addition on 2013-09-22_at_04:38:47: adding an appropriate PATH variable for use with MacPorts.\nexport PATH=/opt/local/bin:/opt/local/sbin:$PATH\nFinished adapting your PATH environment variable for use with MacPorts.\nMacPorts Installer addition on 2016-12-12_at_08:46:30: adding an appropriate PATH variable for use with MacPorts.\nexport PATH=\"/opt/local/bin:/opt/local/sbin:$PATH\"\nFinished adapting your PATH environment variable for use with MacPorts.\nadded by Anaconda3 4.3.0 installer\nexport PATH=\"/Users/Zach/anaconda/bin:$PATH\"\nSetting PATH for Python 3.6\nThe original version is saved in .profile.pysave\nPATH=\"/Library/Frameworks/Python.framework/Versions/3.6/bin:${PATH}\"\nexport PATH\nSetting PATH for Postgres\nexport PATH=/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH. I have the same output:\ncat /etc/profile\nSystem-wide .profile for sh(1)\nif [ -x /usr/libexec/path_helper ]; then\n    eval /usr/libexec/path_helper -s\nfi\nif [ \"${BASH-no}\" != \"no\" ]; then\n    [ -r /etc/bashrc ] && . /etc/bashrc\nfi. Thank you so much, Jakob. That helps me a lot with understanding my\ncomputer.\nI suppose it may not be worth changing the instructions on your page to\naccommodate people with this situation, unless you get many more emails\nfrom other users with this same problem.\nBest wishes,\nZach\nOn Fri, Apr 28, 2017 at 2:21 AM Jakob Egger notifications@github.com\nwrote:\n\n@zsiegel92 https://github.com/zsiegel92 Yes, the first line in your\n.profile resets your $PATH. Usually people just add to the path by\nappending stuff in front or in the back like this:\nexport PATH=/high/priority/path:$PATHexport PATH=$PATH:/high/priority/path\nIf you don't include the $PATH variable, you override the previous value.\nSo when bash starts, it does the following:\n\nExecute /etc/profile -> uses path_helper to set the $PATH according\n   to /etc/paths and /etc/paths.d\nExecute you ~/.profile which overwrites $PATH\n\nThat's why the path in /etc/paths.d/postgresapp was ignored.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/390#issuecomment-297951281,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AZHwvODxQ8URJzv077gogLpwMOx5sHvJks5r0a-ygaJpZM4NJv9u\n.\n. \n",
    "chmaynard": "Yes. The helper app is located inside PostgresApp:\n~ $ ls -l /Applications/Postgres.app/Contents/MacOS/\ntotal 680\n-rwxr-xr-x@ 1 craig  staff  -  340K May 18 09:40 Postgres\ndrwxr-xr-x@ 3 craig  staff  -  102B May 18 09:31 PostgresMenuHelper.app/\n. I installed and launched the current release (2.0.3), then realized it didn't include the Postgres 10 beta.. There's nothing named \"Postgres-beta.app\" in the package I downloaded.. Ok, I'll give it a try. Thanks!. ",
    "MtnBiker": "Thanks jakob. The comment had more to do with the documentation\u2014data directory is not a term known to me as a Mac user. Application Support I do know about. Is there a better place to comment on the documentation?\nAh, the postmaster.pid I found was another one: /usr/local/var/postgres/postmaster.pid, maybe from some other attempted installation of Postgres when I was getting started with it.  In any case what got me going was deleting another file: com.postgresapp.Postgres2LoginHelper.plist. Found that via Stackoverflow. All due to a flaky dock for my laptop which is now awaiting an RWA.. ",
    "jerry-shao": "Open Postgres GUI app, click server settings, you will see the data path.\nBy default, it may stored at /Users/USERNAME/Library/Application Support/Postgres/var-POSTGRES_VERSION, change USERNAME and POSTGRES_VERSION to yours.. ",
    "jcdavison": "@jerry-shao crazy when I find a year old post that solves my problems so smartly, and it was weird, my machine reset itself while I was in restroom and I came back to this prob \u26a1\ufe0f \n. ",
    "SofaKing18": "\nYou can delete the postmaster.pid file if you make sure that no process named postgres or postmaster is running anymore.\n\n@jakob @chrispysoft @craigkerstiens what do you think about GUI button \"remove postmaster.pid\", that appears, when there are problems with this file? I would like to do this, cause have often problems with it. ",
    "adw1011": "Jakob, thanks for your help and your quick post.  . ",
    "saschafrohwerk": "I woud also add that the documentation of the data migration could be clearer. When you just enter the commands as provided you get \"command not found\". So we should add the paths (eg from 9.5 to 10 ):\n/Applications/Postgres.app/Contents/Versions/9.5/bin/pg_dumpall --quote-all-identifiers | gzip >postgresapp.sql.gz\nand\ngunzip <postgresapp.sql.gz | /Applications/Postgres.app/Contents/Versions/10/bin/psql. ",
    "gs2589": "On this note:  I had the older version of Postgres app running 9.4. \nI was able to run things like postgres -V and get a version.\nI deleted the old app and installed the new one. Now postgres -V doesn't work. I get:\n-bash: /Applications/Postgres.app/Contents/Versions/9.4/bin/postgres: No such file or directory\nCould someone please help me figure out what I need to change so that my terminal commands now point to the new installation. \n. Fixed it by running:\nsudo mkdir -p /etc/paths.d && echo /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresa\nImportant to close and reopen window.. ",
    "forgethisname": "Thanks for the update Jakob\n. ",
    "amorimlucas": "Changing the config file to point to the full path fixed it, thanks!. ",
    "booboothefool": "@jakob Thank you for the lightning fast response time!\nSo this isn't Postgres.app?\n```\nwhich psql\n/Applications/Postgres.app/Contents/Versions/9.6/bin/psql\npsql -U postgres\nPassword for user postgres:\npsql (9.6.4, server 9.6.3)\nType \"help\" for help.\npostgres=# show data_directory;\n        data_directory\n\n/Library/PostgreSQL/9.6/data\n(1 row)\n```\nI don't remember installing another version of PostgresQL? I recall using Postgres.app because it was the only one I could get to install properly (dragging into Applications)!. @jakob You were right!\nRemoving EnterpriseDB like you linked in the instructions worked.\nI am not sure how this happened exactly but I have a hunch that when I installed pgadmin 4, it installed it's own version of PostgresQL, and connected to that instead. This whole time I thought I was connecting to Postgres.app server. \nSomething I did when I installed Postgres.app was I deleted the default server \"PostgresSQL 9.6\". I believe I installed pgadmin 4 after that, which spun up it's own server? Then Postgres.app would always read \"port already in use\". I thought this meant that Postgres.app was already running, but this is not the case as I know see the green check marking with \"Running\" for the first time.\nAfter I made sure Postgres.app was running, I opened up pgadmin 4 again and it automatically properly connected to Postgres.app with PostGIS extension available.. ",
    "Kontributer": "@chrispysoft thank you :)  Question 1 was more about editing an existing server.  I pointed it to a location, but when going to Server Settings, the only option is to show the various configuration files.  This is problematic for two reasons:\n1. There is no way to edit the location of the specific files.  Again, if I move, let's say the pg_hba.conf file to a different location (or change the name), there is no way of updating Postgres.app to know this.\n2. The only way to change the data directory is to create an entirely new server\nThat's a shame that it's entirely standalone.  I don't mind it, but if you were to create something from CLI, then I was hoping Postgres.app would turn into a better manager for start/stop purposes.  I'm curious, what can be done to a vanilla Postgres server installation to work with Postgres.app?\nAlso, yes I've been on the website \u2014 it was helpful, but nothing beats Q&A from knowledgable supporters ;). ",
    "expiredemulsion": "@jakob I just shutdown my server, copied a 25GB data dir to a new location, deleted the server, created a new one and selected the new location.\nThen I launched the new server.\nEverything seems to run perfect!. ",
    "joaodlf": "The day has come! :) (Thanks for the awesome work on PostgresApp - I'm eager to see a working version for 10!). ",
    "booleanbetrayal": "Dropping encryption (FileVault) has dropped the total task time to ~15m which is still a far cry from the ~1m it used to take.. Reported and awaiting any feedback. Thanks @jakob .. This is apparently a major regression and is trackable on this thread - https://www.postgresql.org/message-id/flat/13746.1506974083%40sss.pgh.pa.us#13746.1506974083@sss.pgh.pa.us. This is fixed with the latest release bundling 10.1 !. ",
    "barillax": "FWIW, I'm seeing this as well after upgrading to High Sierra. Unencrypted APFS. \nThe specific command I'm running is createdb -T <existing database> <copied database name>. Prior to upgrade, it took 1-2 minutes; now, at least 15 minutes.. Will do, thanks Jakob!. ",
    "elpop": "umm, the code signature on\n/Applications/Postgres.app/Contents/_CodeSignature/CodeResources\nonly has the keys and hash of 9.6 version.\nI don't know if this signatures must match the right version to allow postgresql 10 start.. Thanks Jakob, thats all i need to know :). ",
    "jasoncapriati": "New 2.1 app is great, but having issues using Postgres9.6. Always shows: psql (10.0, server 9.6.5)\nPopular library psycopg is also just seeing 10.. That helped! Thank you!. ",
    "rgwood": "I'm keen to figure this out too. I tried installing protobuf-c using Homebrew, no luck.\nSteps to reproduce\nI'm using Postgres.app version 2.1.1 (40) with a database that has PostGIS enabled. I used the sample query from the ST_AsMVT documentation. Running this: \nSELECT ST_AsMVT(q, 'test', 4096, 'geom') FROM (SELECT 1 AS c1,\n    ST_AsMVTGeom(ST_GeomFromText('POLYGON ((35 10, 45 45, 15 40, 10 20, 35 10), (20 30, 35 35, 30 20, 20 30))'),\n    ST_MakeBox2D(ST_Point(0, 0), ST_Point(4096, 4096)), 4096, 0, false) AS geom) AS q;\n...returns this error:\nERROR:  Missing libprotobuf-c\nSQL state: XX000\n  . ",
    "mhkeller": "I agree with @chriszrc and @rgwood that it would be very useful to have libprotobuf-c compiled with Postgres.app. @jakob if you have any advice in the meantime about whether it's possible to do in user land (seems unlikely), or if it's on the roadmap, that would be great!. @jakob Thanks for your work on this! I just tried it out and it works. Thanks a bunch!. So cool!. fyi duplicate of https://github.com/PostgresApp/PostgresApp/issues/412. Thanks! Do I have to do anything for the command line tools?. Thanks. I'm currently exploring some other workarounds for #412 like running it in docker before I go the uninstall route since it's otherwise such a great way to use postgres.. Thanks for all the info! Feel free to close this issue.. ",
    "CodeMeister": "Many thanks for the help :-). ",
    "camsaul": "Hi @jakob, thanks for your feedback. We have an open issue for number 2 but if you want to open issues for 1 and 3 that would be greatly appreciated. Thank you!. ",
    "yilmazerhakan": "a late thanks @tbussmann \nOn the my side with Lua 5.2.2 (brew installed), everything works like a charm now!\nI executed my complex lua scripts in it.\nThanks.\n. ",
    "Vest": "I would use PRODUCT_NAME. This is what help says:\n\nBecause Siri uses the value of this key, always provide a value, whether or not you localize your app.\n\n. ",
    "hotzen": "wow sorry, wasn't aware of that.. ",
    "adamaiken89": "Thank you very much for the reply. Does Postgres.app provide a path helper to the data directory? It would be great if such path can be Postgres.app dependent but not machine dependent.\n. Also the default data directory in official site might not be usually correct now.\nThe data directory path can be ~/Library/Application Support/Postgres/var-10 but not just  ~/Library/Application Support/Postgres/var-9.6.\nhttps://postgresapp.com/documentation/install.html. ",
    "diek": "Thanks. ",
    "rahilsondhi": "Hi @jakob, thanks for giving it a shot. We do require authentication so that we can provide the collaboration features that make us unique. If you use Google OAuth to sign up, we open your system's default browser (where you're already signed in) so you don't have to sign in again, and then redirect you to PopSQL via deeplink. This is similar to how Slack works with their \"magic links.\". ",
    "Ga68": "Sorry for the quick solution after the post. But I found that forcing the creation of the super user / DB worked (via the trouble shooting guide @ http://postgresapp.com/documentation/troubleshooting.html). I'll leave the issue open at the discretion of the community here since the initialization hanging seems to be an issue as well (even if there is a well documented work around).. I initially tried the second server option and it resulted in the same behavior. Here are the initial log file entries.\n2018-03-28 21:25:56.332 GMT [2656] LOG:  skipping missing configuration file \"/Users//Library/Application Support/Postgres/var-10/postgresql.auto.conf\"\npostgres: could not find the database system\nExpected to find it in the directory \"/Users//Library/Application Support/Postgres/var-10\",\nbut could not open file \"/Users//Library/Application Support/Postgres/var-10/global/pg_control\": No such file or directory\n2018-03-28 14:26:03.974 PDT [2663] LOG:  listening on IPv6 address \"::1\", port 5432\n2018-03-28 14:26:03.974 PDT [2663] LOG:  listening on IPv4 address \"127.0.0.1\", port 5432\n2018-03-28 14:26:03.975 PDT [2663] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2018-03-28 14:26:03.989 PDT [2664] LOG:  database system was shut down at 2018-03-28 14:26:02 PDT\n2018-03-28 14:26:03.992 PDT [2663] LOG:  database system is ready to accept connections\n2018-03-28 14:26:04.123 PDT [2671] FATAL:  role \"\" does not exist\n2018-03-28 14:26:06.544 PDT [2672] FATAL:  role \"\" does not exist. Sorry - I tried to anonymize my logs by erasing the username and substituing with a bracketed string that seems to have erased from the display here. Let me try again with my username replaced with XXXXX\n2018-03-28 21:25:56.332 GMT [2656] LOG:  skipping missing configuration file \"/Users/XXXXX/Library/Application Support/Postgres/var-10/postgresql.auto.conf\"\npostgres: could not find the database system\nExpected to find it in the directory \"/Users/XXXXX/Library/Application Support/Postgres/var-10\",\nbut could not open file \"/Users/XXXXX/Library/Application Support/Postgres/var-10/global/pg_control\": No such file or directory\n2018-03-28 14:26:03.974 PDT [2663] LOG:  listening on IPv6 address \"::1\", port 5432\n2018-03-28 14:26:03.974 PDT [2663] LOG:  listening on IPv4 address \"127.0.0.1\", port 5432\n2018-03-28 14:26:03.975 PDT [2663] LOG:  listening on Unix socket \"/tmp/.s.PGSQL.5432\"\n2018-03-28 14:26:03.989 PDT [2664] LOG:  database system was shut down at 2018-03-28 14:26:02 PDT\n2018-03-28 14:26:03.992 PDT [2663] LOG:  database system is ready to accept connections\n2018-03-28 14:26:04.123 PDT [2671] FATAL:  role \"XXXXX\" does not exist\n2018-03-28 14:26:06.544 PDT [2672] FATAL:  role \"XXXXX\" does not exist. ",
    "smth": "Thanks @jakob that gets me a bit closer, I can see that the path isn't correct. However I have previously taken the steps (that I believe are intended) to configure the path, i.e\nsudo mkdir -p /etc/paths.d &&\necho /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp\nI can confirm the paths.d directory exists, it contains a file named postgresapp, the contents of which is:\n/Applications/Postgres.app/Contents/Versions/latest/bin\nYet my pg_restore path is /usr/local/php5/bin/pg_restore. Did I miss something?\nUpdate: I'm guessing this is because in my .bash_profile I have \nexport PATH=/usr/local/php5/bin:$PATH. ",
    "vagnerdev": "You're using an old version of pg_restore binary that doesn't support restoring the provided dump file. Please make sure that you use the latest Postgres version, which must be higher than the following release: https://www.postgresql.org/about/news/1834/ (10.3, 9.6.8, 9.5.12, 9.4.17, and 9.3.22).\nYou can check the pg_restore version you're using by running pg_restore --version.\nIf you are using a third-party tool, such as PgAdmin, to restore the provided dump file, the restore may not succeed even with the installed Postgres version being up to date. This is due to third-party tools often bundling their own versions of the pg_restore binary, that may not be up to date.. ",
    "jbains223": "So I have the Postgres.app as well as pgAdmin4 running on my machine. However, as the pgAdmin uses port 5432 by default, the Postgres.app is telling me that I have to use a different port. However, when I do this, the pgAdmin can not see my database. Is there some way of working around this?. ",
    "nickmjones": "Thank, I'll try to get the full error messages. I'll also consider making an issue on the Ruby project.. ",
    "mikekaminsky": "Helpful! Not sure where in the docs this should live, but if I were explaining this to a colleague I'd say something like\n\nTo change which version of postgreSQL you're running, open the Postgres app and click the button in the bottom-left-hand-corner to show the sidebar. Click the \"+\" sign to add a new server, and select the version you want from the drop-down list. (It's helpful to give it a name indicating which version you're running).. Not sure if this belongs here or is a separate issue, but when I did this naively I ended up with my postgres server not matching my psql version. I had to hack the instructions that you have in the docs to use\necho /Applications/Postgres.app/Contents/Versions/9.6/bin | sudo tee /etc/paths.d/postgresapp\nonce i switched to the 9.6 postgreSQL version.. \n",
    "DaniG2k": "Switching versions should really be clearer in the docs.. ",
    "databasekevin": "I did not change ph_hba.conf to require a password (at least not on purpose). How would I go about checking this?. Huh, yep... that worked. The four databases I have all showed up with that command. So strange.. ",
    "crgimenes": "I had the same problem, no database shows. so I tried the command as indicated and returned an error. psql: FATAL:  database \"cesar\" does not exist and cesar is my user name.\nSo I created a database with my name and now everything works both in the terminal and in the application.\nI hope it serves as a clue to find out what's going on.\n. ",
    "Samsinite": "I wasn't sure if they would always be, especially pg_restore which seems to be the one I use the most :). I've been only running the specific version when using. If all of the 9.X's >= 9.4 are compatible with 10.x pg_restore than I don't currently need this feature and maybe makes sense to avoid doing this until there are incompatibilities. Even if they don't work together, I am not sure if you would like to add maintenance of another feature to the project.. ",
    "captproton": "Yup, I got the same thing.  Ditto for Safari 11.1.. ",
    "globalbusybee": "@jakob,\nThe site now loads using a valid certificate.\nThanks for the quick fix. It will enhance confidence accessing the site and usage of Postgres.app.\nPlease note the certificate will expire on 24 August 2018.. @jakob \nI like the Postgres.app, keep up the good work. ",
    "AlBundy33": "it seems that this is more an issue with os x.\nAfter opening terminal preferences, switch to tab profile, select your profile (in my case \"Basic\"), switch to \"Shell\" and set \"When the shell exists\" to \"Close if the shell exited correctly\".\nsee https://www.simplified.guide/macos/terminal-avoid-process-completed\nAfter that setting I get only on tab after double click on a database.\nAt least in most cases - sometimes I get two tabs again. :-/. Unfortunately this is still an issue.\nif you class al your terminals  (see command+tab) and double click a database you'll get two tabs.\nIf you logout from both tabs and double click again on a database you'll only get one tab because the terminal-process was still running in background.\nLogout again from terminal and press command+tab again - then you'll see the terminal.. Roughly.\nIn my opinion it would be better if the path of the current selected instance is added automatically to the PATH-variable to always have the currect folder in path instead of globally adding the latest. . Currently I don't have a use that needs the correct version but to be sure it would be nicer to always have the correct version in PATH.\nThe next advantage would be that it is not necessary to manually update the .profile, .bashrc, ...\nif you double click on a database in the UI you already know the correct version.\nBefore executing psql you could get the PATH variable add the bin-directory of the correct version (as first element) and execute psql with the modified environment.\nWith such an opened console you could use all tools provided by the current version.\nAnother option would be to simple set the working-directory to the bin-directory.\nThen we could use ./psql, ./createdb, ./dropdb, ... to execute the command.\nBut I would prefer the solution with the modified PATH. ;-). this is exactly what I meant :-). ",
    "dineshba": "We can close this as this is fixed. https://github.com/PostgresApp/PostgresApp/commit/a5509bf9ef0fedc93490a103ad8440cc0d88c94e. ",
    "nikitavoloboev": "Thank you @jakob . ",
    "paulsturgess": "Yeah this is exactly what caught me out. I thought I was running an old version, but when using the cli, it was using the latest version (from where I'd previously followed the docs for setting the path to point to the latest).\nThe specific issue was the difference in pg_dump that creates a different output. And in particular it was coming from running migrations in a Ruby on Rails project.\nI just wanted to save others from making the same mistake, by prompting to remember to update your path if you're using an old version.. ",
    "oyeanuj": "@jakob Thank you!. ",
    "jungblud": "It may be unnecessary, but I found a link that gives the solution. Here is content for your site. If you think it valuable I'll add a pull request:\nNOTE: Installing pgloader with homebrew will attempt to install PostgreSQL as a dependency. To install pgloader using homebrew without postres as a dependency, see this issue on the pgloader Github repository.\nI find this to be valuable as most need pgloader along with PostgreSQL and don't want an extra installation hanging around.. Just created a pull request. It was the first place I searched when I was looking for information around how to install pgloader in a tidy fashion in the context of using PostgresApp. I'm not a fan of extra installs laying around. Seemed to be a good spot for your user base. Totally your call, of course. Thanks for the great tools!. ",
    "mbarakaja": "@chrispysoft Thanks you for the help.\nThe only reason I asked this is because currently, I am in a place where I have limited internet packets. So I am blocking all software updates for now.. ",
    "wellsoliver": "lol, that was easy: just plus'ed it anyway even though yes I created it manually. It added just fine.. ",
    "Malauch": "It looks like $PATH is correct. When I run pg_config I get this:\nBINDIR = /Applications/Postgres.app/Contents/Versions/10/bin\nDOCDIR = /Applications/Postgres.app/Contents/Versions/10/share/doc/postgresql\nHTMLDIR = /Applications/Postgres.app/Contents/Versions/10/share/doc/postgresql\nINCLUDEDIR = /Applications/Postgres.app/Contents/Versions/10/include\nPKGINCLUDEDIR = /Applications/Postgres.app/Contents/Versions/10/include/postgresql\nINCLUDEDIR-SERVER = /Applications/Postgres.app/Contents/Versions/10/include/postgresql/server\nLIBDIR = /Applications/Postgres.app/Contents/Versions/10/lib\nPKGLIBDIR = /Applications/Postgres.app/Contents/Versions/10/lib/postgresql\nLOCALEDIR = /Applications/Postgres.app/Contents/Versions/10/share/locale\nMANDIR = /Applications/Postgres.app/Contents/Versions/10/share/man\nSHAREDIR = /Applications/Postgres.app/Contents/Versions/10/share/postgresql\nSYSCONFDIR = /Applications/Postgres.app/Contents/Versions/10/etc/postgresql\nPGXS = /Applications/Postgres.app/Contents/Versions/10/lib/postgresql/pgxs/src/makefiles/pgxs.mk\nCONFIGURE = '--prefix=/Applications/Postgres.app/Contents/Versions/10' '--with-includes=/Applications/Postgres.app/Contents/Versions/10/include' '--with-libraries=/Applications/Postgres.app/Contents/Versions/10/lib' '--enable-thread-safety' '--with-openssl' '--with-gssapi' '--with-bonjour' '--with-libxml' '--with-libxslt' '--with-perl' '--with-python' '--with-readline' '--with-uuid=e2fs' '--with-icu' 'CFLAGS= -mmacosx-version-min=10.7' 'ICU_CFLAGS=-I/Applications/Postgres.app/Contents/Versions/10/share/icu' 'ICU_LIBS=-licui18n -licuuc'\nCC = gcc\nCPPFLAGS = -I/Applications/Postgres.app/Contents/Versions/10/share/icu -I/Applications/Postgres.app/Contents/Versions/10/include/libxml2 -I/Applications/Postgres.app/Contents/Versions/10/include\nCFLAGS = -Wall -Wmissing-prototypes -Wpointer-arith -Wdeclaration-after-statement -Wendif-labels -Wmissing-format-attribute -Wformat-security -fno-strict-aliasing -fwrapv -Wno-unused-command-line-argument  -mmacosx-version-min=10.7\nCFLAGS_SL = \nLDFLAGS = -L/Applications/Postgres.app/Contents/Versions/10/lib -L/Applications/Postgres.app/Contents/Versions/10/lib -Wl,-dead_strip_dylibs\nLDFLAGS_EX = \nLDFLAGS_SL = \nLIBS = -lpgcommon -lpgport -lxslt -lxml2 -lssl -lcrypto -lgssapi_krb5 -lz -lreadline -lm \nVERSION = PostgreSQL 10.5. Thank you for help. I tried CMAKE_PREFIX_PATH but it didn't change anything. For now I just made report on osm2pgsql github.\nI hope you can in near future add osm2pgsql to PostgresApp as an another CLI tool. . ",
    "zohaibejaz": "Thanks a lot. i wasted 3 hours yesterday. but now i figured that that out because of your help. Appreciated a lot. . ",
    "tarasinghmc": "Thanks for giving valuable feedback.\nOn Tue, Oct 9, 2018 at 1:23 AM Jakob Egger notifications@github.com wrote:\n\nSo I've been playing around with this, and the problem seems to be caused\nby missing permissions on macOS Mojave.\nYou have to enable access for Postgres.app in System Preferences ->\nSecurity -> Privacy -> Universal Access and in System Preferences ->\nSecurity -> Privacy -> Automation.\nMojave made Apple Script practically unusable.\nI guess the best thing to do would be to throw away the Apple Script, and\njust show a text field with the command for copy/pasting into terminal.\nLess convenient, but then at least we won't have to bug the user with 3\nseparate permission dialogs.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/471#issuecomment-427958850,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ANNv3q1j64ruvBDMH9xBQJos_b8V2KyZks5ui60sgaJpZM4XNZs6\n.\n. \n",
    "cursologo-gh": "I have the same issue. Still cant find a way to solve it. Thank you so much Jakob!!!.. I actually run both PATH=\"/Applications/Postgres.app/Contents/Versions/latest/bin:$PATH\" mentioned on https://devcenter.heroku.com/articles/heroku-postgresql and https://postgresapp.com/documentation/cli-tools.html and it worked like a charm!!! but only using my house WiFi. Do I need to mess around with the postgresql.conf files each time I want to connect to my DB using a different connection?... Thanks anyways, it helped a lot and at least I can still continue working. Just wanted to understand how it works. ",
    "uythoang": "@jakob I think you mean System Preferences -> Security -> Privacy -> Accessibility. There is no Universal Access (Mojave 10.14.2). ",
    "marcvanolmen": "Jakob I haven't tried, I'm building postgresql for use in my own app and always was using your scripts as a source, so I was just surprised that Postregsql went from 10.7 to 10.12, big leap... I don't think there is a quick workaround .. Today I looked at the binaries you can download from postgresql enterprisedb is: https://www.enterprisedb.com/download-postgresql-binaries for postgresql 11\nand it seems they support older version of macOS \notool -l ./pgsql/bin/psql\n...\n      cmd LC_VERSION_MIN_MACOSX\n  cmdsize 16\n  version 10.9\n      sdk 10.9\nLoad command 10\n...\ncurrently the only way to do this I think would be install a macOS 10.9 computer and compile on that platform, because the usual setting the environment variables: \nexport MACOSX_DEPLOYMENT_TARGET=10.9\nexport SDKROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk\nexport CPU_ARCH=x86_64\nThis doesn't seems to work in Xcode 9.4\n. ",
    "manieshablakey": "Hi- sorry, but what does that mean? I'm fairly new to programming. How would be missing localhost entry occur?\nOr how do I figure out if its one of the other errors? Thanks.\n. Hi- just typed that in but it doesn't bring up anything... Any advise on how to proceed? Thanks.\n\n. It worked- thank you. Much appreciated!. Hello,\nApologies for the belated reply and thanks for your clear instructions My name exists as a superuser when I checked on the command line. However, when I used DataGrip to create a database, I receive the fatal role 'Maniesha' does not exist error message (as attached) and it won't let me connect to the database. I'm looking through the documentation for PostgreSQL as well to figure it out better. But why will it not let me connect? Thanks again for your help.\n\n\n. Hi- thanks again for your help. I fiddled around with it some more and realized where I went wrong. Should have entered name uppercase...\nReally appreciate your quick reply.. ",
    "edbond": "What is the upgrade path now?\nI have a 9.5, 9.6, 10 version (use version 10 only). Want to download 11 and migrate data.\nHow to do that correctly? Maybe it needs to be described in readme.\nThanks!\n. ",
    "ricka": "Actually covered by #425 and I missed it. Closing (but please merge that PR).. ",
    "decaturrunner": "Yes, I tried a blank password. But it previously did not ask. And based on pb_hba.conf, it really shouldn't. . When I try to connect with psql:\n/Applications/Postgres.app/Contents/MacOS/bin/psql\nI get:\npsql: could not connect to server: No such file or directory\nIs the server running locally and accepting\nconnections on Unix domain socket \"/tmp/.s.PGSQL.5432\"?\nThen I tried:\n/Applications/Postgres.app/Contents/MacOS/bin/psql -h 127.0.0.1\nand got:\npsql: could not connect to server: Connection refused\nIs the server running on host \"127.0.0.1\" and accepting\nTCP/IP connections on port 5432?\nps x | grep postgres returned:\n1442 s000  S+     0:00.01 grep postgres\nChuck\nOn Wed, Nov 7, 2018 at 2:35 AM Jakob Egger notifications@github.com wrote:\n\nCan you connect with psql?\nAlso, are you sure that Postgres.app is running on the port you are trying\nto connect to? Often these issues are caused by other PostgreSQL\ninstallations running on the port you expect. (eg. homebrew)\nYou can check which PostgreSQL servers are running on your computer using\nthis command:\nps x | grep postgres\nA line like this would indicate that Postgres.app is running on port 5432:\n31287   ??  S      0:00.06 /Applications/Postgres.app/Contents/Versions/11/bin/postgres -D /Users/jakob/Library/Application Support/Postgres/var-11 -p 5432\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/PostgresApp/PostgresApp/issues/478#issuecomment-436531273,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AcwUr_zoNOLOF6t0nSOH0I2jTJHHLVLIks5uso1AgaJpZM4YQ1_M\n.\n. PGAdmin4 asks for the password for postgres, but I don't see any indication that it is running. Except that the Postgres.app menu has \"Shut Down Server,\" suggesting that the app thinks it is running. \nIt did not install the way the documentation says it will, as there is no indication of the version in the directory names. In my data directory, PG_VERSION says 9.1. \nOne likely relevant fact is that the PGAdmin (3 & 4) \"Check for Updates\" command has never worked. \nTo make sure I have everything, I again downloaded PGAdmin 4 with the Postgres.app (9.5, 9.6, 10, and 11). Then I tried opening Postgres.app. That opens a window that has at the top \"PostgreSQL 9.1 ... Binaries not found\". That window was not opening before. Looking at the package contents of the Postgres.app, there is a Versions folder with all the versions that should be there. But Postgres.app can't find any of them. Any idea what lets Postgres.app know where to find the binaries?. When I launch Postgres.app, its process appears in Activity Monitor, which says it has files open including .../Postgres.app/Contents/Versions/11/lib.libpq.5.11.dylib. But running psql from the version 11 bin directory suggests it is not running. . Thanks. I was able to get 9.1 running and succeded with pg_dumpall. But I still can't get any of the new installed versions to start, as Postgres.app still says it can't find the 9.1 binaries.. I deleted my data directory and all copies of Postgres.app and PGAdmin, emptied the trash, reinstalled Postgres.app and PGAdmin4, and when I started Postgres.app it again says \"PostgreSQL 9.1 Binaries not found\". pgAdmin still can't connect to the local postgres. There is a Postgres process in the Activity Monitor, but I assume that's the app, not the server. . Sorry for that last message. Removing everything and starting over did work, once I added to Postgres.app servers for the versions present. Might have worked before if I had realized I had to add a new configuration for each version. Thanks for helping.. \n",
    "anneCarlson": "-rwx------@  1 annecarlson  _postgres   6148 Feb 27  2018 .DS_Store\n-rwx------@  1 annecarlson  _postgres      3 Nov  8  2017 PG_VERSION\ndrwx------@ 10 annecarlson  _postgres    340 Sep 25 17:25 base\ndrwx------@ 62 annecarlson  _postgres   2108 Oct  4 13:52 global\ndrwx------@  2 annecarlson  _postgres     68 Nov  8  2017 pg_commit_ts\ndrwx------@  2 annecarlson  _postgres     68 Nov  8  2017 pg_dynshmem\n-rwx------@  1 annecarlson  _postgres   4513 Nov  8  2017 pg_hba.conf\n-rwx------@  1 annecarlson  _postgres   1636 Nov  8  2017 pg_ident.conf\ndrwx------@  5 annecarlson  _postgres    170 Oct  4 17:19 pg_logical\ndrwx------@  4 annecarlson  _postgres    136 Nov  8  2017 pg_multixact\ndrwx------@  3 annecarlson  _postgres    102 Oct  4 13:51 pg_notify\ndrwx------@  2 annecarlson  _postgres     68 Nov  8  2017 pg_replslot\ndrwx------@  2 annecarlson  _postgres     68 Nov  8  2017 pg_serial\ndrwx------@  2 annecarlson  _postgres     68 Nov  8  2017 pg_snapshots\ndrwx------@  2 annecarlson  _postgres     68 Oct  4 13:51 pg_stat\ndrwx------@  6 annecarlson  _postgres    204 Oct  5 08:16 pg_stat_tmp\ndrwx------@  3 annecarlson  _postgres    102 Sep 27 19:33 pg_subtrans\ndrwx------@  2 annecarlson  _postgres     68 Nov  8  2017 pg_tblspc\ndrwx------@  2 annecarlson  _postgres     68 Nov  8  2017 pg_twophase\ndrwx------@  8 annecarlson  _postgres    272 Oct  4 17:04 pg_wal\ndrwx------@ 16 annecarlson  _postgres    544 Sep 27 19:32 pg_xact\n-rwx------@  1 annecarlson  _postgres     88 Nov  8  2017 postgresql.auto.conf\n-rwx------@  1 annecarlson  _postgres  22770 Nov  8  2017 postgresql.conf\n-rwx------@  1 annecarlson  _postgres    837 Nov  8 15:47 postgresql.log\n-rwx------@  1 annecarlson  _postgres    144 Oct  4 13:51 postmaster.opts. drwx------@ 27 _postgres    _postgres   918 Nov  8 15:46 var-10\nYes, I am using the postgres.app GUI\n\n. Interesting. Now I get the following log error when I click start\n2018-11-08 15:57:10.744 EST [11906] FATAL:  could not create lock file \"postmaster.pid\": Permission denied. I assume my permissions are still messed up? I'm the group \"_postgres\" is incorrect?. ",
    "vindobonensis": "Hello, \nThanks for your quick response! Unfortunately this hasn't helped at all. I tried chaning the password for the postgres user from the superuser account using the \\password command, but that did absolutely nothing for me. Everytime I try to login via pgAdmin I still get an error message, saying that the password authenitcation had failed. . ",
    "vickeryj": "I get this error too, it seems like the server is only listening on TCP, not local unix sockets.. ",
    "morenoh149": "very nice now I can run many pg versions on different ports or easily turn them on or off \n\n. ",
    "RustyHack": "Jakob thanks for the help and information, which will be helpful to know in the future. Soon after my post I found that I could use brew to install postresql which enabled me to build the pg gem. That solved the build problem and allowed my app to work again.. ",
    "threaz": "Same problem here\n2019-01-12 21:48:25.782 CET [38724] LOG:  statement: delete from projects where title = 'xyz';\n2019-01-12 21:48:25.788 CET [23968] LOG:  server process (PID 38724) was terminated by signal 11: Segmentation fault\n2019-01-12 21:48:25.788 CET [23968] DETAIL:  Failed process was running: delete from projects where title = 'xyz';\n2019-01-12 21:48:25.788 CET [23968] LOG:  terminating any other active server processes\n2019-01-12 21:48:25.788 CET [38459] WARNING:  terminating connection because of crash of another server process\n2019-01-12 21:48:25.788 CET [38459] DETAIL:  The postmaster has commanded this server process to roll back the current transaction and exit, because another server process exited abnormally and possibly corrupted shared memory.\n2019-01-12 21:48:25.788 CET [38459] HINT:  In a moment you should be able to reconnect to the database and repeat your command.. ",
    "stf8": "Same problem here : \n2019-02-12 14:04:33.084 CET [21040] LOG:  server process (PID 35691) was terminated by signal 11: Segmentation fault\n2019-02-12 14:04:33.084 CET [21040] DETAIL:  Failed process was running: delete from attributes;\n2019-02-12 14:04:33.084 CET [21040] LOG:  terminating any other active server processes\nEven though it does not happen on all tables and it did not happen before I altered the table (added a column). After that, delete started to fail on that particular table.\nAlso I have some altered tables that do not seem to trigger the problem.\n. ",
    "growthat": "It turns out my hosts file was completely blank (no idea how that happened), so I followed the steps here: https://www.imore.com/how-edit-your-macs-hosts-file-and-why-you-would-want, and pasted in a default (unedited) file, and it appears to be working.. ",
    "ErikUnique": "I installed regular postgres and then tried to uninstall it before installing postgresApp, I wonder if some file fragment is left over and messing it up.. ",
    "davidfilat": "\nIt's included. You can enable the extension using:\nsql\ncreate extension plpythonu;\nThen you can test if it works like this:\nsql\ndo language plpythonu $$\n  plpy.notice(\"It works!\")\n$$;\nIt's Python 2 only, unfortunately.\n\nCool! Do you plan on adding python3 support?\n. ",
    "martinmueller39": "Following the advice of somebody from the general Postgres list, I went to the command line and gave the command psql.  Then I used the command \u2018\\dx\u2019, which I was told would produce a list installed extensions. Which it did in this response;\n             List of installed extensions\n\nName   | Version |   Schema   |         Description\n---------+---------+------------+------------------------------\nplpgsql | 1.0     | pg_catalog | PL/pgSQL procedural language\n(1 row)\nThe related command \\df+ .crosstab  has a similarly negative result.\nIn installing Postgres on my Mac I used the standard procedure of Postgres.app. It does not seem to be be case that my version of Postgres (10.5) includes the core contrib modules.\nOr am I missing something?\nFrom: Tobias Bussmann notifications@github.com\nReply-To: PostgresApp/PostgresApp reply@reply.github.com\nDate: Wednesday, February 27, 2019 at 6:24 AM\nTo: PostgresApp/PostgresApp PostgresApp@noreply.github.com\nCc: Martin Mueller martinmueller@northwestern.edu, Author author@noreply.github.com\nSubject: Re: [PostgresApp/PostgresApp] tablefunc (#499)\nThe tablefunc extensionhttps://urldefense.proofpoint.com/v2/url?u=https-3A__www.postgresql.org_docs_current_tablefunc.html&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=KXLlwt_ckR1_MZ-f3FEcoDwBt3uJlg9L_LJuLQygIqk&s=iYTqpZq4ldcMZjuvugwFb1eoqX5x6DVnh5lzGhGQiGY&e= is part of the core contrib moduleshttps://urldefense.proofpoint.com/v2/url?u=https-3A__www.postgresql.org_docs_current_contrib.html&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=KXLlwt_ckR1_MZ-f3FEcoDwBt3uJlg9L_LJuLQygIqk&s=ZwMSAFeJSpDnG85U3EB2a0DvG-YACz3U-0TVjuGv3zE&e= since PostgreSQL 7.3 and was last updated in 9.4.1https://urldefense.proofpoint.com/v2/url?u=https-3A__why-2Dupgrade.depesz.com_show-3Ffrom-3D7.2-26to-3D11.2-26keywords-3Dtablefunc&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=KXLlwt_ckR1_MZ-f3FEcoDwBt3uJlg9L_LJuLQygIqk&s=8PvYdGvsGXZluC7pZ8MVtFPVl-RuMNk3jDn_qCn844s&e=. These modules are shipped with PostgresApp since ever I could reconstruct (at least 9.1). So it is not necessary to update Postgres(App) just to use this extension as you implied in #500https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_PostgresApp_PostgresApp_issues_500&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=KXLlwt_ckR1_MZ-f3FEcoDwBt3uJlg9L_LJuLQygIqk&s=iNFfGtaXZ9NANn74ckuaNfNOAwrz7VOU9psccBwbMWk&e=\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_PostgresApp_PostgresApp_issues_499-23issuecomment-2D467842832&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=KXLlwt_ckR1_MZ-f3FEcoDwBt3uJlg9L_LJuLQygIqk&s=C-tO2YmgoLWqt-VlLqNohC2y3snLhpOQomdr1OuTwjA&e=, or mute the threadhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AFf6L4RXkVpmBlHWB4fyS0yjycUFQKqzks5vRnkGgaJpZM4bTjnV&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=KXLlwt_ckR1_MZ-f3FEcoDwBt3uJlg9L_LJuLQygIqk&s=CpMyyNdZ3JH4oGVqVv4noBzkNAH9ppD06a8PXwQtIMs&e=.\n. Forgive me for asking another na\u00efve set of questions: Can  I 1)  install Postgres 11 with the postgres.app without affecting the current application in any way, 2) use  pg_dumpall to export the current database, 3) import pg_dumpall into Postgres11, 4), check whether the new application works, 5) delete Postgres 10 If #4 works.\nYes would be a long enough answer, unless I missed something\nFrom: Jakob Egger notifications@github.com\nReply-To: PostgresApp/PostgresApp reply@reply.github.com\nDate: Wednesday, February 27, 2019 at 5:45 AM\nTo: PostgresApp/PostgresApp PostgresApp@noreply.github.com\nCc: Martin Mueller martinmueller@northwestern.edu, Author author@noreply.github.com\nSubject: Re: [PostgresApp/PostgresApp] upgrade documentation (#501)\nYes, we should probably improve the docs to make it more clear. The automatic update funtion only updates the PostgreSQL binaries, it does not update your data directory.\nTo upgrade from version 10 to version 11:\n\nUse pg_dumpall to create a dump of your database\nDownload a new version of Postgres.app with PostgreSQL 11\nRestore the dump\n\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_PostgresApp_PostgresApp_issues_501-23issuecomment-2D467831499&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=fHUkMPGpOoqA7K9gZfBA_AHv_5teZce1mIR2_52JuCg&s=zU5YP91qdeC8FUvf5bsQoIdqxHsHyJcvCbCTLF659AI&e=, or mute the threadhttps://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AFf6L7mA1DF75O-2DYNnJpvRMnLC9U859Eks5vRm-5FBgaJpZM4bTro0&d=DwMFaQ&c=yHlS04HhBraes5BQ9ueu5zKhE7rtNXt_d012z2PA6ws&r=rG8zxOdssqSzDRz4x1GLlmLOW60xyVXydxwnJZpkxbk&m=fHUkMPGpOoqA7K9gZfBA_AHv_5teZce1mIR2_52JuCg&s=4F-pkSeZoL9eHFsY8iB9T91l1bdlz0595daH3rQ1M-w&e=.\n. "
}