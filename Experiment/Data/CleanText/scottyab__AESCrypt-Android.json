{
    "scottyab": "Hi @best2010, you'll need to provide some move info. Input value and what version of Android you are running on. Please reopen when you have more info.\n. open to PR\n. You can download the aar from maven central or you know compile it yourself ;) \n. Awaiting more info. Hi, thanks for reporting this, i cannot help without examples of the input data and key you are using. Closing until more data providered\n. Yeah, it's a single class library so just replacing import android.util.Base64; and import android.util.Log; are the only Android things and those can be found in java.  If you'd like to send a PR to make Java compatible I would be happy to accept. \nAES/CBC/PKCS7Padding is used for compatibility with AESCrypt. So if you need compatibility you'll need a security provider that supports it. \n. Thanks for your comment, I agree, however the point of this library was Android version of https://github.com/Gurpartap/aescrypt \nI'll update the readme within something like... For better and just as simple API check out [java-aes-crypto(https://github.com/tozny/java-aes-crypto) \n. There seem to be some maven central server issues at the moment, this could be related?\n. Maven central seems to be responding again. Ensure you have compile 'com.scottyab:aescrypt:0.0.1'in your build.gradle file. If the problem continues, please reopen. \n. many thanks @doridori, you're right this should be more explicit \n. Hi, by all means send a PR with updated readme. Although it might be better to add to the orginal  AESCrypt repo? \n. Thanks for the comment but this isn't something I can help you with. Maybe check the origonal https://github.com/Gurpartap/aescrypt or google it. . Hey @vishnoor, great work on creating a open source version to suit Java/Grails env. It would be great if you created a PR to add a new heading to the readme file called Other language and environments. Maybe also include the links to the ruby and objective-c versions there too.  . Some people just wanna troll. :( . ",
    "mustii82": "for everybody you can use the class in the source file its one simple class so the need of an external library isn't needed in my opinion\n. its easier to import the class of the source code and call it from the imported class or export the source code as a jar file and import it as library.\n. ",
    "ninjatrench": "Can you elaborate more ? @Ghostish \n. Hi, I can look into it.\nCan you post the IV used by you in Android as well as iOS as iOS directly doesn't take blank IV\n. ",
    "ThathaPavanNagaraju": "its is still comming :/\n. I solved it my gradle is offline \n. ",
    "dynamitechetan": "I figured it out ...\n```\n String pattern = \"^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$\";\n                            Pattern r = Pattern.compile(pattern);\n                            Matcher m = r.matcher(msg);\n                            if (m.find()) {\n                                encryptedMsg = AESCrypt.decrypt(pass, msg);\n                        } else {\n                            encryptedMsg = \"Error Decrypting...Please try again\";\n                        }\n\n```\n. ",
    "Rahulgupta-cdnsol": "Hi,\nI am getting same issue with library as it is not generating same result as iOS.What needs to do to get similar result as iOS.\n. in IOS I am using below function : \n- (NSData )doCipher:(NSData )plainText key:(NSData )aSymmetricKey\n           context:(CCOperation)encryptOrDecrypt padding:(CCOptions )pkcs7{\n  CCCryptorStatus ccStatus = kCCSuccess;\n  // Symmetric crypto reference.\n  CCCryptorRef thisEncipher = NULL;\n  // Cipher Text container.\n  NSData * cipherOrPlainText = nil;\n  // Pointer to output buffer.\n  uint8_t * bufferPtr = NULL;\n  // Total size of the buffer.\n  size_t bufferPtrSize = 0;\n  // Remaining bytes to be performed on.\n  size_t remainingBytes = 0;\n  // Number of bytes moved to buffer.\n  size_t movedBytes = 0;\n  // Length of plainText buffer.\n  size_t plainTextBufferSize = 0;\n  // Placeholder for total written.\n  size_t totalBytesWritten = 0;\n  // A friendly helper pointer.\n  uint8_t * ptr;\n// Initialization vector; dummy in this case 0's.\n  uint8_t iv[kChosenCipherBlockSize];\n  memset((void *) iv, 0x0, (size_t) sizeof(iv));\n//  //NSLog(@\"doCipher: plaintext: %@\", plainText);\n  //  //NSLog(@\"doCipher: key length: %d\", [aSymmetricKey length]);\nplainTextBufferSize = [plainText length];\nif(encryptOrDecrypt == kCCEncrypt) {\n      if(pkcs7 != kCCOptionECBMode) {\n          if((plainTextBufferSize % kChosenCipherBlockSize) == 0) {\n              pkcs7 = 0x0000;\n          } else {\n              pkcs7 = kCCOptionPKCS7Padding;\n          }\n      }\n  } else if(encryptOrDecrypt != kCCDecrypt) {\n      //NSLog(@\"Invalid CCOperation parameter [%d] for cipher context.\", pkcs7 );\n  }\n// Create and Initialize the crypto reference.\n  ccStatus = CCCryptorCreate(encryptOrDecrypt,\n                             kCCAlgorithmAES128,\n                             pkcs7,\n                             (const void )[aSymmetricKey bytes],\n                             kChosenCipherKeySize,\n                             (const void *)iv,\n                             &thisEncipher\n                             );\n//LOGGING_FACILITY1( ccStatus == kCCSuccess, @\"Problem creating the context, ccStatus == %d.\", ccStatus );\n// Calculate byte block alignment for all calls through to and including final.\n  bufferPtrSize = CCCryptorGetOutputLength(thisEncipher, plainTextBufferSize, true);\n// Allocate buffer.\n  bufferPtr = malloc( bufferPtrSize * sizeof(uint8_t) );\n// Zero out buffer.\n  memset((void *)bufferPtr, 0x0, bufferPtrSize);\n// Initialize some necessary book keeping.\nptr = bufferPtr;\n// Set up initial size.\n  remainingBytes = bufferPtrSize;\n// Actually perform the encryption or decryption.\n  ccStatus = CCCryptorUpdate(thisEncipher,\n                             (const void *) [plainText bytes],\n                             plainTextBufferSize,\n                             ptr,\n                             remainingBytes,\n                             &movedBytes\n                             );\n//LOGGING_FACILITY1( ccStatus == kCCSuccess, @\"Problem with CCCryptorUpdate, ccStatus == %d.\", ccStatus );\n// Handle book keeping.\n  ptr += movedBytes;\n  remainingBytes -= movedBytes;\n  totalBytesWritten += movedBytes;\n/* From CommonCryptor.h:\n@enum      CCCryptorStatus\n   @abstract  Return values from CommonCryptor operations.\n@constant  kCCSuccess          Operation completed normally.\n   @constant  kCCParamError       Illegal parameter value.\n   @constant  kCCBufferTooSmall   Insufficent buffer provided for specified operation.\n   @constant  kCCMemoryFailure    Memory allocation failure.\n   @constant  kCCAlignmentError   Input size was not aligned properly.\n   @constant  kCCDecodeError      Input data did not decode or decrypt properly.\n   @constant  kCCUnimplemented    Function not implemented for the current algorithm.\nenum {\n   kCCSuccess          = 0,\n   kCCParamError       = -4300,\n   kCCBufferTooSmall   = -4301,\n   kCCMemoryFailure    = -4302,\n   kCCAlignmentError   = -4303,\n   kCCDecodeError      = -4304,\n   kCCUnimplemented    = -4305\n   };\n   typedef int32_t CCCryptorStatus;\n   */\n// Finalize everything to the output buffer.\n  ccStatus = CCCryptorFinal(thisEncipher,\n                            ptr,\n                            remainingBytes,\n                            &movedBytes\n                            );\ntotalBytesWritten += movedBytes;\nif(thisEncipher) {\n      (void) CCCryptorRelease(thisEncipher);\n      thisEncipher = NULL;\n  }\n//LOGGING_FACILITY1( ccStatus == kCCSuccess, @\"Problem with encipherment ccStatus == %d\", ccStatus );\nif (ccStatus == kCCSuccess)\n      cipherOrPlainText = [NSData dataWithBytes:(const void *)bufferPtr length:(NSUInteger)totalBytesWritten];\n  else\n      cipherOrPlainText = nil;\nif(bufferPtr) free(bufferPtr);\nreturn cipherOrPlainText;\n}\nAndroid :- byte[] ivBytes = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};\n. ",
    "nischkar": "Please do not use the issues section to advertise your works.\nI do support collaboration, but please do it in the right section.\nThank you. Please include the problem that was encountered.\nAnd the steps taken to reproduce the problem. Please refrain from asking questions in the issues sections.\nThe safeness of this library still depends on how you use it.\n\ud83d\udc4e  for Asking in the issues section. ",
    "vishnoor": "@nischkar Sorry, my intention was not to do a self advertisement. Where do you suggest I move this to?\n. "
}