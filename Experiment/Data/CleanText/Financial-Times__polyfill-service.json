{
    "triblondon": "Maybe the service will one day support CSS.  I don't think we need an issue for it.\n. For 1.0, this only applies to Modernizr detects that are used in Origami.\n. For 1.0, we only need to apply this to the polyfills needed by the Origami components we have so far.\n. I think this should be available as a global query param, since I suspect in most use cases devs will either want gating for all polyfills or none.\nDo we want to be backwards compatible by adding a property to config.json to specify whether the polyfill is gated by default?\n. I still slightly feel that there's a use case for minified code (for the performance) with the full index of polyfills, but I'm on weakening ground here.  I'm pretty happy to remove it for .min.\n. Non-persistent is fine, in which case add a metric for uptime.\n. We might release a new polyfill or a bugfix for an existing one, and then\nthe TTL will determine how quickly it rolls out.  I'd say it should be a\nday at the most.\n. Well, as long as the service doesn't prohibit random query string arguments, versioning on the URL is out of scope here.  A product can use them, or not, as it likes.  There is obviously a big cache efficiency implication to advising all developers to add them though.\n. Last mod doesn't help predict when it will next change.  Let's go with a day, Matt and co can use query string versions, and if versioning causes cache degradation, we can address that.\n. Last mod is also hard to compute because the output is a bundle.  You'd have to take the most recently modified polyfill in the bundle.  Not worth it.\n. No\n. I've emailed @fyrd about this, in case he's interested in having the polyfillabilty* indicated as part of the main CIU docs.\n* Yes this is a word\n. Compatibility table now available in master.\n. @Bockit please do submit the PRs, that would be great.  And I've moved your dependency sorting issue into #24.  Do you have any interest in collaborating and using a single version of the service?  If so, drop me a line: andrew@labs.ft.com.\n. How would we go about this?  On startup, load caniuse's main data file, and use it to populate the browsers property of any polyfill with a caniuse alias?  How do we know what the minimum version that we can polyfill is?\n. @jonathanong we'd only use caniuse data for the features caniuse supports.  All other polyfills would continue to have local config.  It's just about delegating as much of the maintenance as possible to @fyrd et al.\n. Yes I think so.\n. Possibly one for @jonathantneal.  He had established several categories for polyfills.\n. I feel we should simplify this.  I appreciate that standards can change, but don't see a reason to distinguish between ratified standards where there's a concrete implementation in later versions of the browser and those which are vapourware and where consequently the polyfill behaviour is equally subject to change.\nThe WebAudio polyfill is a valid polyfill - as is anything that creates or corrects a missing or broken web API.  I don't think how it does it is necessarily relevant.\nHowever, I've been uncomfortable with the window.polyfill polyfills, and feel we need to at least rename them.  What was the rationale there? It seems to mostly contain a querySelector polyfill, and it does do the HTML5 shiv but I think it misses a lot of the edge cases covered by the canonical HTML5 shiv implementation.  The confusion here is what drove us to add html5shiv as a separate polyfill.\n. Happy to voounteer.\n. @bockit @patrickkettner good one for one of you guys to pick up if you fancy taking on a nice self-contained issue.\n. Just occurs to me that we need to consider minimum compatible versions here - eg the classList polyfill is really simple so will work anywhere that DOMTokenList is available.  But DOMTokenList's polyfill only works in IE7+, so if we serve the classlist polyfill to IE6, but not the DOMTokenList one, it wouldn't work.  \nIn this specific case, in fact the browser ranges are set to be more restrictive on classlist than domtokenlist, but I'm not sure we want to make it necessary to manually audit a polyfill's dependencies' compatibility before asserting the polyfill's own compatibility.\nSo potentially where there's a dependency, we can only output the polyfill if the whole dependency tree is compatible with the UA.\n. Now we have deps added to the bundle automatically, and sorted topologically, I think I'll move my lingering concern over the browser range specifiers on dependencies to a new issue - see #71.\n. OK, so that would presumably work by:\n1. Find all origami: prefixed features\n2. Look them up using the build service metadata API to find their feature requirements (which will be modernizr names\n3. Treat the request as if it specified those modernizr names directly.\nNote that the module name would also have to include a semver reference, so that we look up the right version of the module.\n. @patrickkettner wouldn't a backwards incompatible polyfill sort of defeat the point of polyfilling?  We're talking about version matching against our own UI components, rather than polyfill versions here.\n. Noo, don't disappear, we're valuing your input here.  Good point about changing standards.  You have situations like picture and shapes, where the spec changed before any implementations appeared, in which case I'd favour simply updating the polyfill, because then it will match implementations in conformant browsers when they emerge.  But then there are also scenarios like Flexbox, where the standard has undergone three iterations, and each has its own syntax, so you could simply support all of them.\nIn the case of this issue, I'm just advocating another form of aliasing, effectively, which translates an FT Origami module ref to a list of modernizr detects using our module metadata system.\nWould you like to consider picking up an issue or two? :-)\n. Closing this in favour of an origami module alias, which is a more concrete idea.  clearly looking at it at this generic level isn't as useful as I originally thought.\n. This really ought to be hooking into the deploy system using npm start rather than forever being mandated.\n. Polyfills that we don't actually need ourselves are definitely not a priority for FT, but we'll log the issues as we find them and perhaps someone else will feel like working on them.\n. Fastly doesn't seem to annotate the headers but it does expose the data to the VCL, so we could set up our Fastly config to pass the geo data on as headers:\nhttps://fastly.zendesk.com/entries/22381546-GeoIP-related-VCL-features\n. FT doesn't use geo, and I don't want to provide the endpoint through the CDN since that seems to breach Fastly's terms of use. The service built into the polyfill seems to be working currently, so I'm inclined to leave this as it is.\n. Looks good.\n. @jonathantneal, could you review?\n. Actually, we think this is fine.  We just need a couple of changes, which I've annotated, to make it work with the simplified alias refactor.\n. @jonathantneal could you take a look at this?\n. Jonathan is a bit busy with baby stuff, so I'm going to merge, looks good to me.\n. The scenario I want to cover is if the user wants to bundle the polyfills with their own JS to avoid an extra HTTP round trip, and has a site not written in Node (so they can't use polyfill as a library).  In that case they'd need to make the request to the polyfilll server from their own server.  They'd probably use curl or some custom HTTP lib, and I'd like to see that as the User-Agent on the request header.  The UA for which they are retrieving the polyfills then becomes a parameter to the request, rather than request metadata, so in my mind a query param is appropriate.\n. I don't think we adopted order when we did our node implementation of the backend.  Instead, we're using a graph sort to order the dependencies based on the tree.  Seems to work well.\n. Good point.  Seems switching in and out of compatibility mode changes the UA, so that would be supported, but document mode doesn't, so isn't. Would be interested to hear about possible implications of that and any workarounds you can suggest.\nHi, by the way.\n. OK, so if you cared about that, you could sniff those things and then set the UA query param.  Otherwise all we have to go on is the user agent header sent by the browser.\n. Would you consider using this service?\n. Wilco.  Closing this then - if we have problems in future because we need to deliver different polyfills to the same IE UA depending on what its documentMode is, we'll have to have another head-scratch.\n. Yes, default-off polyfills is a good idea, but not worth adding that complexity yet.\n@matthew-andrews would we use the idb polyfill right away?\n. I don't think the FT needs this anymore.\n. I suggest:\n- Keep the model of one dir per polyfill (so if a feature has multiple possible polyfills, you have multiple directories and we keep the convention of an extra . suffix to distinguish them.\n- If the polyfill relies on some proprietary technology, the detect.js should return true if it's not present, preventing the execution of polyfills that wouldn't work in UAs that don't have the proprietary tech\n- Add an alias resolver that expands fragments of canonical polyfill names, so you could request Element.prototype.matches and get all variants automatically\n. I had a hangout with @jonathantneal and realised that my previous comment was a stupid idea.  We shouldn't overload the feature detect to do something that it's not supposed to do.  Instead, why not combine all the variants of the same polyfill into a single polyfill file?\nThe arguments for this would be that since they are all trying to fill the same feature, the same feature detect should wrap around all of them.  Deciding which to use then requires further more proprietary API detection which could all be rolled up into the polyfill.\nSo, Element.prototype.matches becomes a single polyfill containing some early return code if there's a native implementation present behind a prefix.\n. @samgiles are you happy with this?\n. Talked this over with Sam earlier, and we were both a bit hazy on it, so here's a simpler restatement of the problem and possible options:\nProblem: If you request a polyfill with |always and that polyfill has multiple browser-specific variants, you get all of them, which is probably not what you want.\nSolutions:\n1. Add a flag to polyfill config to indicate whether the polyfill is \"un-alwaysable\", ie you cannot override the user-agent matching.  This would add complexity, especially as the most natural semantics would require that if you requested Element.prototype.matches.moz|always you do always get it, whereas if you request the higher level alias Element.prototype.matches|always you only get the browser-independent one (and possibly the one that matches your browser UA).  Can't seeany way that this isn't messy.\n2. Combine all variants into one file.  In cases like matches, this means you simplify the implementation to have just one polyfill.js file, with early returns if there is a quick win, like a prefixed version of the API that just needs unprefixing.  However, this method increases the weight of the polyfill in those browsers where the early return is possible.  Very significantly in some cases.  Nevertheless I do quite like this solution - it makes the service more maintainable.\n3. Tweak feature detects to make proprietary polyfills inert if the proprietary API isn't available.  This means a detect.js expression changes from asserting that a feature is present to asserting that a polyfill should not be applied.  This is way too subtle for my liking.\n4. Do nothing. Developers can feel free to request groups of polyfills with |always if they want to, and it's their fault if the world explodes.\nMy preference is 2 or 4.\n. Having looked at some of the variations in more detail, I'm no longer convinced that combining them is actually a good idea.  I think Jonathan's architecture is actually pretty insightful - where you have an IE7 polyfill that is totally different to the IE9 one for the same feature, and crucially, has different dependencies, it actually does make sense to have separate implementations.\n. Am thinking about this again as part of our testing framework, because if we use testing to speculatively 'try out' all polyfills in all browsers, and then write the configs based on the results, we need to be able to request a polyfill with the always flag, so we override any existing config.\nSo, here's a more thought-out solution, starting from the principle that dependency lists should not include UA suffixes.  It's confusing to say that Object.defineProperties depends on Object.defineProperty.ie7, since in Chrome it clearly doesn't. So it would be better to have a single way of referring to a feature.  And it doesn't make a lot more sense to list the browser-specific one in the query string either.\nThe tests and detect for a feature should also always be the same, no matter how many variations there are to implement the feature.\nI propose we extend the file structure to allow something like:\n/polyfills\n  /Object.defineProperty\n    /config.json\n    /tests.js\n    /detect.js\n    /polyfill.js\n    /polyfill_ie7.js\n    /polyfill_moz.js\nAnd alter config.json's format to allow an extra level keyed by file name.  \n{\n  \"polyfill.js\": {\n    \"browsers\": { \n      \"ie\": \">=9\",\n      \"firefox\": \">=3.6 <23\"\n    },\n    \"dependencies\": [ ... ]\n  },\n  \"polyfill_ie7.js\": {\n    \"browsers\": {\n      \"ie\": \"7\"\n    },\n    \"dependencies\": [ ... ]\n  },\n  \"polyfill_moz.js\": {\n    \"browsers\": {\n      \"firefox\": \">=23\"\n    },\n    \"dependencies\": [ ... ]\n  },\n  \"author\": { ... },\n  \"licence\": \"...\"\n}\nWhat do you think, @jonathantneal?\n. I like it.  Let's do this after we've merged the tests branch, which I'm assured by @samgiles is literally imminent.\n. You know, I think I will end up calling these variants instead of alternatives.  Alternatives does semantically make sense when you require there to be one 'default', but having that one modelled differently makes for a more complex implementation, so when reading the config.json into memory, we're likely to want to end up with something like:\npolyfills['Element.prototype.classList'] = {\n     variants: {\n       'default': {\n         browsers: {...},\n         dependencies: [...],\n         licence: '...'\n         minifiedSource: \"...\",\n         rawSource: \"...\"\n       },\n       'ie7': {\n         browsers: {...},\n         dependencies: [...],\n         licence: '...'\n         minifiedSource: \"...\",\n         rawSource: \"...\"\n       }\n     },\n     aliases: [...]\n   }\nBecause then lookups against this model can be done without any special cases.  That said, we want to make the core case easy to configure without an extra layer, so I propose to rename alternatives to variants, and simply move any variant defined outside the variants object into it as default during the polyfill loading process when the service starts.  A config file will therefore continue to look like:\n{\n    \"aliases\": [\n        \"modernizr:es5object\"\n    ],\n    \"browsers\": {\n        \"firefox\": \"3.6\",\n        \"safari\": \"5.1 - *\",\n        \"ios_saf\": \"4.3\"\n    },\n    \"variants\": {\n        \"ie7\": {\n            \"browsers\": {\n                \"ie\": \"6 - 7\"\n            },\n            \"dependencies\": [...]\n        },\n        \"webkit\": {\n            \"browsers\": {\n                \"safari\": \"4 - 5\"\n            },\n            \"license\": \"MIT/GPL John Appleseed\",\n            \"dependencies\": [...]\n        }\n    }\n}\nSo variants makes more sense than alternatives if there is nothing for the alternatives to be an alternative to (because during load, we move the one 'non-alternative' into the 'alternatives' collection).  Variants makes more sense in that way of thinking.\nStop me if I'm not making any sense.\n. OK, @jonathantneal, check it out.\nhttps://github.com/Financial-Times/polyfill-service/tree/alternatives\nI've put a decent amount of effort into making the comment that's output at the top of the polyfill bundle highly detailed, so you can see exactly what it's doing.  I've updated a few polyfills to the new format but not all of them.  Could you try it and let me know if it's working for you?\n. Merged to master\n. I don't understand the semantics of the \"window.polyfill\" polyfill.  There is no window.polyfill API, so I'm wondering whether this naming is confusing. What was the rationale there?  It seems to mostly contain a querySelector polyfill, and it does do the HTML5 shiv but I think it misses a lot of the edge cases covered by the canonical HTML5 shiv implementation.  Jonathan you know a lot more about the mechanics of the shiv, so apologies for my ignorance on this - if there's an issue feel free to point me at it!\n. It would be neater to move the use of useragent into the agentmodule, so that lib/index just passes a UA string into agent and gets the identifier that we want to use.\n. Much better.\n. Looks great to me.  @jonathantneal are you happy with this?\n. I'm keen on this because it will encourage component authors to pay better attention to the browserFeatures declarations in origami.json\n. That's a much better idea. And we're already doing it. Right.\n. @samgiles are you happy with this?\n. I guess it depends how much devs want sourcemaps. Are they satisfied with the ability to unminify the code, which means debugging using different code to that which you're running in prod.\nI'll assume they are and leave this branch open for the moment.\n. No longer mergeable.  Let's can this idea.\n. Interesting.  Quick experiment suggests that if localStorage is defined you can't replace it.  Am I being naive?\n\n. Seems like we want the lightest possible touch here, and this might actually be all we need to fix our issues.  Matt, we should define a list of the specific problems we are trying to solve here.  Is it just the iOS privacy scenario?\n. To summarise, we're proposing here to incompletely replace an API that already exists, modify its behaviour away from what the browser implements natively, to something that doesn't match the spec.  Not a great match for the definition of a polyfill...\nI do like the idea of not having to shim every little thing just because there's always a special case somewhere on some platform, but in many cases a developer would want the error, rather than having it appear to work but actually silently fail.  So this would have to be an opt-in polyfill.\n. This cannot fulfil the requirements to be part of the polyfill library I'm afraid.\n. @jonathantneal @bockit do you have any thoughts on this?  I think I've made myself a bit clearer about this issue now.\n. We can do this with testing, so moot.\n. @jonathantneal could you review?\n@bockit it's weird that you pushed https://github.com/Financial-Times/polyfill-service/commit/4b8539ef2c1272c058e3dc2713748618986fc955, because I can't see how the polyfill would have worked for you.  Any input on this?\n. Um, well, the fix in this PR has nothing to do with trim or indexOf, it's that classList was being interpreted as a DOM element, when the DOM element is actually attached to classList.element.  If I'm right on that, the PR should be merged :-)\n. Changing trim to replace was something @bockit did in https://github.com/Financial-Times/polyfill-service/commit/4b8539ef2c1272c058e3dc2713748618986fc955, but we already merged that a good while ago, I was just curious about how he didn't encounter the problem I've fixed in this subsequent PR.\n. I'll open another issue for the indexOf thing.\n. This polyfill has since been refactored by Jonathan in https://github.com/Financial-Times/polyfill-service/commit/84f063057f8fabd852770cfadbf9588ea19ac108.\n. I'm in two minds on this.  Using the trim() polyfill helps the service dogfood itself, which improves test coverage even in the absence of tests on every individual polyfill.  On the other hand, if there were tests for each polyfill, it would be better to try and keep each polyfill as standalone as possible.\nUltimately I'm not sure it matters that much.  Many polyfills have unavoidable dependencies on other polyfills, and it would be counter-productive to insist that all polyfills use the most modern method of doing anything they want to do.  A regex for trim() works perfectly well, so no reason to change it.\n. OK, let's leave as is then\n. Done\n. Think we can now consider this done.\n. @jonathantneal can we set up a call to discuss this when you have some time?\n. OK, following recent meeting with @jonathantneal, Sam could you remove the shiv, test that we still get basic shivving bahaviour in IE8, and we'll be happy with that.  Also potentially add html5shiv as an alias for the Window.polyfill polyfill?  I've created https://github.com/Financial-Times/polyfill-service/issues/106 for the upgrade to the Window.polyfill code.\n. Done in 2724252efcfbc3a152567680f8e5410088e920b8\n. It's inclusive.  Thanks for raising it.  I've updated the README to clarify that.  See 69f5501c62353e2540b0f1b034fedab02440e307\n. @jonathantneal could you review the polyfill itself?\n. Sorry, late to this party but on the point of coding standards etc, I'm really loathe to suggest we enforce anything.  We presumably want to make contributing a polyfill as easy as possible, so I'd tend to suggest no syntax requirements at all.  We do want tests, for sure, but we're still perfecting the framework for this over in the tests branch.  Should be able to merge tomorrow or Friday.\n. This needs:\n- at least a few tests (we don't need to port the whole framework from the source repo)\n- a feature detect\n- the browser targeting tightening up\n- licencing issues considered.  There are problems with the unlicense\n@jdarling are you interested in pushing this to a mergable state?\n. OK, that's a shame.  FT doesn't have a need for Object.observe either, that I know of, so I think we'll close this.  If anyone else wants it then perhaps they can finish this off and they might take on your repo too.\n. We have separate polyfills for browsers that have a prefixed version available, eg:\nhttps://github.com/Financial-Times/polyfill-service/tree/master/polyfills/requestAnimationFrame.moz\nThis is because in browsers with prefixed versions, it makes sense not to even ship the full polyfill code.\n. Just the canonical one will be fine, the service automatically considers all polyfills that start with your specified string. You'll still only get the one that matches your browser.=\n. We simply want to be able to pull polyfills from a central service, so we don't have to deal with every polyfill's individual integration method and dependency situation separately.  The reason this service exists is not because we think we can write better polyfills, it's because the delivery mechanism needs to be easier and less risky.  Can you suggest how we could better achieve that?\n. Gladly.  I'll get in touch with @mathiasbynens and see what we can do.\n. I'll open a new issue to discuss this: https://github.com/Financial-Times/polyfill-service/issues/88\n. Ping @jonathantneal\n. If we don't have one to describe the problem, please do.\n. > What do you mean exactly? This project takes care of that, right?\nYes, I guess I'm justifying the need for this project, over people going to get each polyfill from it's respective home wherever it happens to have been published, and figure out how to use it.  I wasn't convinced that @jdalton was persuaded that this service was adding value.\n. Those individual polyfills do indeed look like great candidates.  You have tests using assert.  How would you suggest we approach this here?  Many of our polyfills cannot be effectively tested with unit tests, and require a browser at a minimum.  Some require user interaction.  Is there a one-tool-fits-all solution, should we have polyfill directories with a plethora of different test runners and frameworks, or should we not try to solve the testing problem in the polyfill-service at all (instead treat it as an aggregator of already-tested polyfills)?\nThe latter seems dangerous, since if the service becomes popular people will invariably want to contribute patches directly to the copy of the polyfill we host.\n. OK, but I think you guys are being a little idealistic - if all polyfill maintainers presented their polyfills in the same consistent way, then effectively this service would just be a package manager.  But the sources are not consistently presented, which is part of the reason we have this problem in the first place.\nSo that means manually maintaining slave copies, and I can see that limiting adoption - if a developer has to report a bug upstream, wait for it to be fixed and released, then prod us to update our copy to the new version, that's not going to be quick enough for developers with a project to build.\nHere's another scenario - say you write a classlist polyfill.  You write tests, and in browsers that don't have domtokenlist, you include another polyfill for that.  Say we disagree with your choice of domtokenlist polyfill for some reason and take someone else's.  When someone requests classlist from the polyfill service, they get your classlist polyfill and someone else's domtokenlist.  That combination is untested.\n. I had a look at a few polyfill repos, with a serious view to pulling in the polyfill using automation, and the situation is as varied as I thought.  Take one of @mathiasbynens's simple ones as an example of a polyfill that sets a high water mark for good design: https://github.com/mathiasbynens/String.prototype.codePointAt.\nThe polyfill itself is in a file with a unique name (codepointat.js).  It's signposted in package.json as the main file so we could conceivably find it that way (though others do not use npm for their package config, or do not have a main entry, or do not point the main entry to the pre-built code).  More difficult, the polyfill contains a hard coded feature detect, whereas our service wraps polyfills with feature detects automatically, which would result in the code being wrapped twice.\nSo for a very straightforward example, I see no obvious way around manual copying and transformation of the polyfill code into a standardised format, which is effectively what we are already doing.\nI have a few suggestions for how we could proceed, but feel free to suggest an alternative:\n1. We add a sourceUrl property to the polyfill config.json, and a build step to update all polyfills that have that property (possibly attempting to strip out feature detects, which should be possible, with a fairly low impact of failure).  Run the build task occasionally to keep our polyfill up to date with the original.\n2. If full automation isn't workable, we could add a repo property to the config.json, which just maintains a reference to the source repository so that future maintainers know where to go to manually copy an updated version.\n. OK, more thinking, new proposal.  If a polyfill meets the following criteria, we will use it via a package dependency:\n- Has package.json containing main property with a single value\n- Main file entirely contains the polyfill\n- Does not require a build step\n- Does not contain any other polyfills\nI'm tempted to add 'Does not wrap polyfill in a feature detect', but I suspect that would be considered unreasonable, so we'll have to live with having doubled-up feature detects.\nOn the basis of the above, @mathiasbynens's codePointAt polyfill would fail the test, because it includes a polyfill (of a sort) for Object.defineProperty:\nhttps://github.com/mathiasbynens/String.prototype.codePointAt/blob/master/codepointat.js#L5-L13\nWe already have a defineProperty polyfill for IE8, though it doesn't do quite the same thing (the actual mechanics is beyond my understanding right now):\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Object.defineProperty.ie8/polyfill.js\nWhat do you think?\n. The problem is that that piece of code appears in several of your polyfills, eg string.prototype.repeat has it too. It might not itself be a polyfill in the strictest sense but it is nevertheless there to standardise differences in the way different browsers implement that api - it doesn't really matter that you're defining the normalised version as a private function rather than replacing the non standard method on the Object prototype. It's still code that isn't strictly part of the polyfill itself and is common to multiple other polyfills.\nI guess we could be relaxed about this, and put up with duplicated code (I suppose there's also an argument that the bloat disappears in gzipping), but that's one of the problems this service is supposed to solve.=\n. Had a chat with @samgiles and @jonathantneal about this.  We're still very cautious of simply pulling in foreign modules as package dependencies, especially without having any tests in our own test suite.  So, in addition to being a bit pedantic about embedded dependencies and feature-detect wrappers, the additional caveat that we now want is to port their tests into our repo.\nWe're working on a test setup at the moment which will test all the polyfills in real browsers using mocha tests running on Sauce Labs, and use that data to build a caniuse-style compatibility matrix.\nIn light of all this, it seems to me that there's an awkwardness in trying to pull in polyfills as packages, and that actually there's nothing wrong with any of the decisions @mathiasbynens made in the ones I'm using as examples.  Ultimately it's not up to us to tell other developers how to present their polyfills, and unlikely that we'd achieve agreement if we did put forward a proposal.\nWe've made certain opinionated decisions - such as the modular system of polyfill dependencies, and to fit within a framework in which we're adding a ton of value (through browser testing), the best way to get polyfills to conform seems to me to be to port the code.\nVery much open to practical alternatives - if we're being thick here you may just need to spell them out a bit more.\n. There's now an updated policy on this, see https://github.com/Financial-Times/polyfill-service/pull/338\n. Lots of issues reported with our bind implementation: ref #313 and #261\n. Do you have a test case available online that demos this problem?\n. Thanks.  @jonathantneal do you want to take a look at this - your commit was https://github.com/Financial-Times/polyfill-service/commit/69283cec8f76f4bc5bade6fcde71cf70f0f5c061#diff-fee6920eec6aecb99b3abfea3588a4b6\n. I'll push it in a couple of hours.\n. The service has been deployed so that polyfill should be up to date now.\nIf you're still getting the old one you'll be seeing that due to cdn caching. Our ttl is 1 day so that should not last long.=\n. Hi David.  Gated is not related to whether the polyfill appears or not, it just determines whether we wrap it in a feature detect.  In the case of Promise, it looks like we are not currently targeting this at any browsers:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Promise/config.json\nIf you could test the polyfill (you can append the |always flag to force the polyfill to be returned regardless of UA detection) and do a pull request for the correct browser ranges, we will merge it in.\n. @davidchase can you amend in another PR?\n. Hi @dfcreative, to accept this into the new service we need it with the appropriate config:\nhttps://github.com/Financial-Times/polyfill-service#polyfill-configuration\n. We're planning to add more granularity to the default behaviour, so that requesting the service with no parameters won't try to include all polyfills, but just a set of default ones that we deem most commonly useful. Until we do that we can't add anything really large.\n. This is supported in 1.6 via our support for HTMLPictureElement (using picturefill)\n. I suspect we might just drop the polyfill in IE6 and leave it unsupported.  There are very few things we're actually successfully polyfilling in IE6. @jonathantneal ?\n. If you want to apply the polyfill to Safari 5 then your config is incorrect.  You'd want:\n\"safari\": \"4 - 5\"\n. Tests show Window is polyfilled successfully in Saf 5.\n. Consider swtiching to https://github.com/mathiasbynens/String.prototype.repeat/blob/master/repeat.js?\n. @abozhilov would you consider helping us fix this?\n. I am coming to the conclusion that some of this may be explained by the way variant aliases are resolved if you load more than one polyfill.  For example, on this branch, if I load this:\nhttp://localhost:3000/v1/polyfill.js?features=Element.prototype.mutation&ua=chrome/38\nI get nothing.  But if I load this:\nhttp://localhost:3000/v1/polyfill.js?features=Element.prototype.mutation.blink&ua=chrome/38\nI get the polyfill.  This ought to not be the case because we are expanding namespaces, but it's fixed in any case in the alternatives branch, so I'm going to merge this, so I can pull it into alternatives.  There's no risk on master of merging this since all the work is in the tests, the only problem is that the build will be failing.  But that's a reflection of the state of master.\n. Done\n. The idea of beaconing RUM results back to the service was raised as part of https://github.com/Financial-Times/polyfill-service/issues/366 and concerns were raised about security.  I think initially we could simply add to the compatgen grunt task to get it to output a list of inconsistencies between the compat test results and the current targeting.\n. Prompted by a discussion on #731 and the increasing prevalence of \"X isn't served on Y\" type issues, and the general reluctance of those reporting those issues to write the one line of JSON required to fix them (whoa, passive aggressive mode enabled by accident, sorry. OK, carry on), I think it is worth resurrecting the idea of self-learning target config via RUM.  Here's an idea:\n1. New query param beacon=1 will activate beacon functionality\n2. When loading a polyfill from disk, we initialise an empty beaconData property, which is a data tree organised as .beaconData.<uaFamily>.<uaVersion>.passCount and .beaconData.<uaFamily>.<uaVersion>.failCount\n3. When serving a request that includes beacon=1, we choose up to n polyfills at random from those in the produced bundle, and prefix the bundle with all the detects for those polyfills.  This creates a pass/fail for each polyfill against the browser's native capabilities.  Schedule a beacon using a legacy-compatible new Image technique\n4. New API endpoint /v2/reportBeaconData which takes a query param for each feature.  It then updates the pass and fail counts for that feature in the browser that made the request, and responds with a lovely 1x1px gif.\nRisks and complications:\n- Idiots: We might need to do something to prevent people from just firing millions of fake beacon requests at the service to intentionally pollute the data.  The only thing I can think of is recording the IP address of the beacon source, and requiring a decent variety of IP sources (maybe 1000 unique IPs) before we trust the data.\n- Caching: The beacon=1 responses will be cached by Fastly meaning that the selection of polyfills that we test doesn't change as often as we might like.  Given variation of requesting user agents and different bundle sets, this is probably not a huge issue, but maybe beacon-enabled bundles could be cached for a shorter period (eg 1 hour).  This is mostly a load issue, since we already have stale-while-revalidate\n- Existing polyfills: If a site loads other polyfills before ours, then we'll get skewed results because we're testing a polyfilled environment, not a native one.  If that site is the only one using the polyfill service to serve a super niche browser, then all our results for that browser will consistently misreport that polyfill's data.\nRollout plan:\nPhase 1: As above and add an additional endpoint to export collected data as a diff against the current target config.  This can then be committed so we have better targeting for the following release. Real time, beacon data does not have any impact on targeting.\nPhase 2: Scrap targeting data (but keep some hard coded 'minimums').  On startup, serve all polyfills that meet the minimum version requirement (gated) and gradually reduce this set if beacons are showing that detects pass.\nPhase 3: Expand the feature to include testing post-polyfill to see if the polyfill worked. This is tough, we can't exactly run our entire test suite in RUM, and a detect might well pass even if the polyfill doesn't work.  So I'm not sure how this would work.\n. - OK, let's just test the things that are in the bundle.\n- Don't want to consider a data store in phase 1, so we can get something done quickly.\n- I thought of the try..catch wrapper but it seems to me to be a bit too lame to lean on. Too many caveats.\nAny suggestions to mitigate the security / data pollution risks?  Not too much of an issue in phase 1 since we're just reporting.\nI'll put something together.\n. This is now deployed and working, and persists data using a database backend.  Reports can be viewed here:\nhttps://polyfill.io/v2/getRumCompatData?header=1\nAutomatic configuration is still to-do but is pretty low priority right now.. @juandopazo this is interesting, and touches on a point that has been nagging at me for a while. The generic requirement here is for polyfills to load additional files after initalisation, right?  Other use cases might include things like geolocation API and the IE7 box-sizing behaviour.\nHow about something like this:\n- Polyfill directories may optionally include an assets subdirectory with any content, including nested subdirectories\n- New API endpoint /assets/:polyfill/:assetpath statically serves files from that polyfill's assets dir, eg /v1/assets/Intl/locale-data/json/en-GB.json.\nThis doesn't provide for the dynamic asset use case, like geolocation, but it should be good for the Intl use case and others.  What do you think?\n. I'm not sure I understand that.  so are you saying you don't need any additional functionality from the service to add the intl polyfill?\n. @juandopazo ah right.  Is that example using the Yahoo combobuilder thing?\nI see the requirement now, and frankly, it fits the model of polyfill dependencies very well.  If you had locale-en-gb as a polyfill that had intl as a dependency, the service would handle the graph sort and ordering in the bundle, and that's already supported and well tested too.  The problem is simply the noise that would result from having so many polyfills that are basically the same thing.\n. @juandopazo where do you feel like we should take this one?\n. The easiest answer here that requires no changes to the service is:\n- Add Intl as a polyfill with the core lib, copied from its source repo, but with repo URL listed in config to allow it to be updated easily\n- Add additional separate polyfills for each locale under a sensible naming scheme.  I'm not sure whether there's a property available in Intl that represents a locale - if there is, then it can be named for that, eg Intl.localesAvailable.en-US.  However I suspect this doesn't exist, in which case strictly speaking the locale polyfills should have a ~ prefix, like HTML5shiv does, and perhaps we'd call them eg. ~IntlLocale.en-US.  This prefix indicates that the name of the polyfill is not a JavaScript global.\nSure, we could add an npm dependency on the source repo, and we could add some special casing to the service to support a locale list, but those both make the service more inconsistent or more complicated, so I'd favour using the mechanism we already have.  Using the above method, you would then get Intl with en-us and fr-fr using:\npolyfill.min.js?features=Intl&~IntlLocale.en-US&~IntlLocale.fr-FR\n. How about we reorganise the polyfills dir so that rather than having dot delimiters in object names, we descend into sub folders? Eg.\nArray.prototype.forEach => Array/prototype/forEach\nAnd intl locales could be under Intl/~locales/ eg. Intl/~locales/en-GB. The ~ here indicating a name that is not a JS property. Would that work?\n. If you were keen on syntactic sugar you could add capability to the service to expand shortcuts like\nfeatures=Intl.~locales.[en-US,en-GB]\nBut that doesn't seem necessary for an initial implementation.\n. If I make the changes to the service, can you guys do the polyfill data?\n. Just figuring out how to do this.  Would you guys object to keeping the existing syntax for the query string, so the example we were talking about earlier would be featues=Intl&Intl.~locales.en-GB&Intl.~locales.fr-FR?  There are two advantages to this:\n- It makes more sense for most of our polyfills where we're polyfilling a web API that actually does have that object name, like Array.prototype.forEach.  It would be less useful to have to refer to that as Array/prototype/forEach.\n- It's backwards compatible\nIf this is OK, then the change is really simple, and only affects the way we run the build step to generate the sources.json file, rather than requiring any changes to the service itself.\n. OK, see https://github.com/Financial-Times/polyfill-service/pull/377\n. Good news, thanks for the feedback.  I suggest you guys add Intl to the subfolder-structure branch, so we can make sure this new approach will work with how we're proposing to treat Intl, and also because there isn't really a compelling use case for the subfolder structure until we have Intl as part of the library.\n. @juandopazo @caridy do you have an idea of when you might be doing this?\n. As soon as someone implements it :-)\n. See #419\n. See https://github.com/Financial-Times/polyfill-service/pull/246\n. Currently blocked by https://github.com/Financial-Times/polyfill-service/issues/125\n. You'd do something like:\n<script src='//cdn.polyfill.io/v1/polyfill.min.js?callback=init' async defer></script>\n<script>\n   function init() {\n      document.dispatchEvent(new CustomEvent('o.DOMContentLoaded'));\n   }\n</script>\nYou might need to wait for your main app bundle to load before doing that, actually, so effectively you'd end up implementing a script loader.  Probably no benefit to this over that.\n. OK, well this is a very easy feature to implement, so let's do it anyway, at least @jussi-kalliokoski will get some benefit.\n. Jonathan, are you happy with this idea?\n. Ping @jonathantneal, please merge if you're OK with this.\n. For the record, I've removed the version from package.json in this PR because polyfill-service is not an npm registry package, and I don't wish to imply that it is until we start publishing to npm, which is discussed in #110.  Otherwise this seems uncontroversial, and having discussed earlier today with @samgiles I'm going to merge it.\n. Yes, please do.  There are guidelines for polyfill authoring in the README (though if you hold on for a couple of days we'll have the test guidelines in place too)\n. Regarding the code submitted in the PR, I'd prefer a bit more strictness on the browser targeting. The solution won't work in IE 1.0 because it didn't support JavaScript. I know that's pedantic in the extreme but we currently don't have a baseline.\n@jonathantneal - we've discussed this a bit before, but I guess we never took a conclusion from it. I've created #116 to make a decision on it. If the decision is not to have a baseline, this polyfill needs revising to a more conservative range of browsers.\nI'd also like to see the Modernizr 'es6math' detect added as an alias to this polyfill.\n. Hmm, I'd prefer a bit more strictness on the browser targeting.  This won't work in IE 1.0 because it didn't support JavaScript.  I know that's pedantic in the extreme but we currently don't have a baseline.\nJonathan - we've discussed this a bit.  I've created https://github.com/Financial-Times/polyfill-service/issues/116 to make a decision on it.  If the decision is not to have a baseline, this polyfill needs revising to a more conservative range of browsers.\nI'd also like to see the Modernizr 'es6math' detect added as an alias.\n. Copying my comment to #114 since I can't reopen a PR.\n. @jonathantneal I think we can easily document our baseline (the README strikes me as the right place, since users as well as contributors would be well advised to know where we draw the line).  And that line ought to be lower than the FT's browser support standards.  I suspect it will be largely informed by traffic stats from your existing service and perhaps caniuse's global stats.\nI don't agree with encouraging polyfills with no browser targeting.  It doesn't seem worth accepting a polyfill if we're not going to serve it to anyone.  We are also very close to being able to write browser configs automatically based on browser testing on Sauce Labs.  We will run the test without the polyfill, then run it with the polyfill, and if the tests didn't pass before and do after, we target the polyfill at that browser!\nIt sounds like we're broadly in favour so let me put a PR together.\n. See #118\n. @patrickkettner can you comment on this?\n. Yes please!\n. We do already have a dependency system, so on one level it seems to make sense to use it although since Modernizr isn't a polyfill it would be semantically questionable.  A polyfil's config.json would list Modernizr as a dependency, and then detect.js would just contain your Modernizr.foo thing.\nBut that would be insufficuent on its own because as you say we wouldn't be able to use a static Modernizr build - since a bundle may include any number of polyfills, we'd have to create a custom build of Modernizr that shipped the right feature-detects.  So we may as well treat the whole Modernizr integration as a special case.\nI can't see putting a complete copy of Modernizr in each detect.js as a viable alternative.  You'd benefit from gzip wiping out most of the repetitive excess data on the wire, but even so the parsing overhead would potentially be non-trivial in legacy browsers, wouldn't it?\nOne other thing worth considering - we have multiple features for things that Modernizr detects as a single thing, eg es5array.  How would those map?\n. OK, that makes sense.  So I guess we need to add a polyfill for something that isn't a JS object property, so it can be used as a first use case for this approach.  Any suggestions?\n. OK, interesting.  There doesn't seem a lot of point in polyfilling touch events.  We could have a polyfill for pointer events though.   A polyfill for HTML5 inputs would create UI elements, not sure that's a rabbit hole we really want to go down.  But CSS transforms and transitions sounds like a good one.  I can't find a polyfill for it though.  Closest I can get is http://stackoverflow.com/questions/5344745/polyfill-shim-for-css-transitions-and-animations.  What do you think?\n. I'm going to timeout this one.\n. @samgiles @jonathantneal could you review and let me know if this is OK with you?\n. That's already the behaviour.\n. I see them as quite different things:\nBaseline: \"we will not polyfill these browsers\"\nDefault: \"if you don't tell us what polyfills you want, we'll consider these ones\"=\n. We run the service with nodemon, which watched the working tree and restarts the node app whenever any files change.\nnodemon service/index.js\nIs that what you mean or did I misunderstand the question?=\n. Good idea.  I updated the readme in https://github.com/Financial-Times/polyfill-service/commit/a6f0ee297a00dcfb9e79c6ac4f381ef978e02d6e.  It includes instructions for how to configure nodemon so that changes to config.json files restart the process.\n. That definitely sounds like a bug. I'll take a look.\n. I found a bug with the dotted namespace expansion, so i fixed that (in https://github.com/Financial-Times/polyfill-service/commit/20a2282ab6fd6205cb76e651a2464102d285c952), but the graph sort seems to be working.\nCan you push your changes to a branch so I can take a look?\n. @jonathantneal we really need a solution to that ASAP.  I proposed one in https://github.com/Financial-Times/polyfill-service/issues/59.\n. What's stopping the use of the collection as it is, out of interest?\nI've no objection to splitting other than potentially needless complexity, but Jonathan was saying something similar a few weeks ago so there must be something in it.\nIt's a shame it's taking us so long to put the test framework together but I do strongly believe the collection is far better off sitting with the test framework, which for better or worse is currently part of the service.\n. OK, starting to think about the practicalities of this.  One problem is that the service is an integral part of how we test the polyfills.  You have to run an instance of the service in order to load the test runner.  How do we get around that?\n. Pinging @juandopazo \n. @juandopazo this is also being requested by teams at FT, at least they want to be able to guarnatee that polyfills will not change without their knowledge.  Since we have the problem of the service being an integral part of the testing of the polyfills, I suggest the following:\n1. Add a grunt task to clone older versions of the polyfill library into the file tree.  Propose /polyfills/_versions/{version}/.  Run this as part of pre-deploy build.\n2. Load sources from all versions, with the ones in the root of /polyfills being considered 'latest'\n3. Add support for a querystring argument libraryVersion on the service, which will pass through to the library\n4. Support an option libraryVersion on the getPolyfillString API method, which switches to the appropriate library version (or uses latest if unable to find one\n5. Report which version of the libary is being used in the bundle header comment.\nWhat do you think?  Would you prefer to detach the service completely from the library to suit your needs better?  If so how would you do the testing?\n. OK, in that case I propose closing this issue in favour of https://github.com/Financial-Times/polyfill-service/issues/242 (Allow version-locking / shrinkwrapping of polyfill library version in request)\n. Let's assume yes :-)\n. See #255 and #257\n. Thanks Jonathan, it all make so much more sense now!\nI've merged the fix to the variants code so that we are definitely serving the right variants, and there are some test failures.  Details are on Travis for this PR build, but to pick an example, classList is now packaging these polyfills for IE7:\nhttp://localhost:3000/v1/polyfill.js?features=Element.prototype.classList&ua=ie/7\nAnd here's the test page to check them (load in IE7 - I'm using modern.ie VMs):\nhttp://localhost:3000/v1/test/tests?feature=Element.prototype.classList\n. Well spotted.  We're prepping a major release at the moment so this won't land in prod for a few days at least.\n. Jonathan, does this contribution guide look OK?  It should just be what we talked about over the VC the other day.\n. Didn't want to replicate the data between the code and the docs, as they might get out of sync.  Once this is merged, I think I should probably move the contribution guide into the hosted documentation, so that I can output the baseline from the values set in the code.\n. Let's merge then.  If Jonathan has any input we can always update it.\n. Opened #144 \n. Ah, ok, perfect.\n. That commit just removes some metadata, can't see how it would affect this issue.  Did you paste the wrong one or am I being dim?\n. I believe this is resolved.  CustomEvent is now CustomEvent, not Window.prototype.CustomEvent (since it's a constructor, not a window property).  Tested IE8 with that polyfill on master and qa.polyfill.io, no errors.  Anyone still observing this?\n. @samgiles can you verify this one?\n. So this is no longer an issue with the polyfill, it's an issue with Firefox, meaning that the native implementation doesn't match the spec.  Anyone want to do a polyfill variant for FF 32 that corrects Mozilla's implementation?\n. I'm pretty strongly anti detect variants, too much complexity, and also we're supposed to be detecting a thing that is consistent across browsers - varying the detect for that is probably not a good road to start down. \nSo to recap, currently we show FF32 as not polyfillable on our compat table, but we still target it, so we'll correct their implementation provided that you serve the polyfill without feature detects.  If you gate it with a feature detect, it will detect the wobbly native implementation and not replace it.  This is a bit annoying but not exactly a big problem, especially since the actual impact of the specific failure is pretty minor.\nI guess we keep this open but I don't think it's something we should consider a bug in the polyfill.\n. We're not going to take any action here.\n. The usage data is already cached internally in memory for 30 mins.  I'd prefer to apply the same external caching rules to all the documentation.  How about moving it so it doesn't just apply to that endpoint?\nThe comment is also a bit unclear.\n. OK, I just clarified the comment.\n. This is merged.\n. Thanks.\n. We should be able to generate this from metadata, and then maybe we can tweak it afterwards. Don't see this as especially urgent but also not particularly hard.=\n. @monolithed that's a separate issue, could you raise it separately?\n. Fixed in https://github.com/Financial-Times/polyfill-service/commit/bdd07ec7935a28b6286b08433dda428084a82a35\n. Thanks\n. @oising what URL are you loading that gives you that response?  And can you paste the comment at the top of the output?\n. @juandopazo does this solution satisfy the issues you raised in #126?\n. if it's stable in the spec, it's fine for us to include it per our contribution guidelines, but I'm keener to get the basics in first.  Juan it sounds like you object to merging this form of the polyfill mainly on perf grounds, is that fair?  If so I guess we'll wait and see what @jonathantneal's opinion on that is.\n. OK, I dug into this a bit.  The problem that's causing the 'done() is called multiple times' error is that the event genuinely occurs twice.  Here's the source of the test with a console log added:\n```\nit('Should dispatch the hashchange event', function(done) {\n    window.location.hash = '';\nwindow.addEventListener('hashchange', function(e) {\n    expect(e.type).to.be('hashchange');\n    console.log(e);\n    done();\n});\n\nwindow.location.hash = 'test';\n\n});\n```\nIn all browsers, including Chrome, there are two events logged, even though the handler isn't bound until after the first change to the hash is made.  For some reason, in Chrome Mocha doesn't object to the second one, and leaves the multiple-call to done out of the test results, showing all tests passing.  In IE, the second event does prompt Mocha to fail the test.\nThis even happens in control mode, so it's not a deficiency in the polyfill, it's definitely a flaw in the test:\n\nThe two events are 1) changing the hash from #test to #, and 2) changing from # to #test.  I propose a more robust test case would be:\n```\nit('should dispatch the hashchange event', function(done) {\nvar listener = function(e) {\n    expect(e.type).to.be('hashchange');\n    window.removeEventListener('hashchange', listener);\n    done();\n}\n\nwindow.addEventListener('hashchange', listener);\n\nwindow.location.hash = 'hashchange-test-'+Math.floor(Math.random()*1000000);\n\n});\n```\nThis makes only one change to the hash (using a random number to make sure it's a change) and also unbinds the handler when it's fired.\nI've updated the PR with this.\n. No immediate plans, but you're very welcome to do it.  Contribution guidelines are at http://cdn.polyfill.io/v1/docs/contributing\n. Our existing querySelectorAll polyfill returns an array, not a NodeList.  If it's acceptable to return an array where a nodelist is expected isn't it probably also OK to use an array instead of an HTMLCollection?  My understanding is there's very little difference between NodeList and HTMLCollection except that HTMLCollection can only contain elements and it offers a couple of extra methods (which people invoking getElementsByClassName are unlikely to use).\n. Feature already has broad support except in IE, where support starts at 9. @wheresrhys could you consider adding this since you raised it as #444?\n. @wheresrhys do you still want this?\n. Existing polyfills appear to leverage queryselector, so I guess we can do that too.\n. Such a list would never be comprehensive. When people want polyfills they are currently raising an issue here, which seems to work.  I think we'll stick with that mechanism for the moment.\n. @jonathantneal I got the list of legacy hosts by doing this:\n1. Extracted referrer hostnames from access log\n2. Sort alphabetically\n3. Count duplicates and sort in reverse order of count\n4. Remove anything with a count < 100, a non-standard port, an IP address, or a domain belonging to Google or Bing.\nCan you review?\n. Assigning to me as I need to think about cacheability of responses.\n. OK, clearly this ought to be done at the CDN.\n. Oh, I also lowercased the test cases because BDD convention is that the it() clause completes a sentence that you start in the describe()\n. Could really use some tests before merging this. Mathias has some decent-looking tests here:\nhttps://github.com/mathiasbynens/String.prototype.repeat/blob/master/tests/tests.js\n. Proposed rules: A polyfill may be included in the default set only if:\n- the spec is stable; and\n- we have tests for it; and\n- it's smaller than 10KB minified (before gzip)\nOf those that qualify, we can apply a subjective judgement based on:\n- Minified size (lower the better)\n- Existing native support (be cautious of selecting polyfills for features with no native impls)\n- A rough guess at likely developer demand\nHow's that?\n. +Object.assign\n. +es5\n. It's a case of wanting to stop using functions like this:\nhttps://github.com/Financial-Times/o-useragent/blob/master/src/js/prefixer.js#L90\nRight now I'm not sure exactly which properties are being filtered using these methods, so I need to figure that out and make a list here, and see if we already have them mapped.\n. OK, so DOM properties should be possible, but style properties are going to be hard.  We appear to be using the useragent prefixer in only one place, o-viewport.  There's also some code in o-gallery that does a similar thing but standalone:\no-viewport:\nvar orientation = prefixer.dom(screen, 'orientation');\n    var matchMedia = prefixer.dom(window, 'matchMedia');\no-gallery:\n```\n    function supportsCssTransforms() {\n        var b = document.body || document.documentElement, s = b.style, p = 'Transition';\n        var v = ['', 'Moz', 'webkit', 'Webkit', 'Khtml', 'O', 'ms'];\n    for (var i=0; i<v.length; i++) {\n        if (typeof s[v[i] + p] === 'string' || typeof s[v[i] + p.toLowerCase()] === 'string') return true;\n    }\n    return false;\n}\n\n```\norientation is a simple rename.  matchMedia was never prefixed (according to caniuse), so that's just a mistake in our code.  The detect for CSS transitions is probably a decent solution already.\nSo what FT is looking for here is just the screen orientation one.\n. Screen orientation is merged in.\n. @juandopazo this one? https://github.com/esnext/esnext\nWhat's the performance like?\nI would anticipate that for our polyfills, we would do the transpilation on startup and store the converted strings in memory, so that the conversion cost doesn't add to request latency.  But if we started to support https://github.com/Financial-Times/polyfill-service/issues/180 or sourcemaps, we'd need to do at least some conversion in real time.\n. @thejameskyle @monolithed what are the arguments in favour of 6to5?\n. 6to5 looks good actually, if only because it doesn't require a runtime, and that makes it far easily to fit with our modules.  It would be a barrier to writing a polyfill in ES6 if your one-liner necessitated inclusion of 75K of library code.\n. See https://github.com/Financial-Times/polyfill-service/pull/227\n. Good point.  I'm fairly terrible at seeing attack vectors for these things. This would allow people to serve arbitrary code from the cdn.polyfill.io domain, but it would execute in the scope of the origin it was loaded into, wouldn't it, so where's the difference?\n. Just have some standard for it - maybe we try just once with a 2s timeout, for example.  I'd also probably stick a local cache in front of the request, whether in node or drop in another layer like Squid or whatever,  with a mandatory stale-while-revalidate and stale-if-error behaviour, so even third party origins without perfect reliability can be coped with fairly robustly.\n. People seem generally very uncomfortable with this idea.  Happy to shelve.\n. First this would need to be added to the npm useragent module, then all you would need to do in the polyfill service would be to add targeting. But I'm a bit concerned that we have no automated test capability for that browser.\n. Well, to be clear, it's not that the polyfill service breaks your site, it just doesn't fix it :)\nThe safest default for a browser we don't know is to not run any untested code on it.  That said, it sounds like we could fairly easily alias this browser to chrome, and then we may not need to worry about testing or config within the polyfill service.  We've already done something similar for Iceweasel.\nI just tested the useragent and the useragent module is already correctly identifying the latest version of Yandex browser as yandex browser/14.10.2062, so the only problem now is that Yandex's version numbering does not match Chrome.\n. You're correct to say that users with unknown user agents cannot rely on your site to work. Nothing will change that.\nThe user agent based version of the service will continue to take a conservative view of this, only delivering code to browsers in which we know it works. You may be interested in #84, which could take a more opportunistic approach.\nMeanwhile if YB is to be supported in the service, it will unfortunately need targeting individually for each polyfill, since it's version scheme differs from chrome.\n. I've added mappings for some versions of YB based on the chrome version declared in publicly recorded User agent headers.  These could do with review and fleshing out by someone with a knowledge of the Yandex browser release history, but will do for the moment.\n@iliakan would you be able to do this?\n. Agree\n. There seems little interest in this.\n. There's a polyfill here https://gist.github.com/tagawa/2880273 but I'm not a big fan of it.  Haven't had any requests for this recently.\n. OK.  can't do this then.\n. Actually couldn't this be polyfilled in IE with the propertychange event in old versions:\nhttp://msdn.microsoft.com/en-gb/library/ie/ms536956%28v=vs.85%29.aspx\nAnd mutation events in newer ones:\nhttp://msdn.microsoft.com/en-us/library/ie/ff975285%28v=vs.85%29.aspx\n. @complistic-gaff Sorry for the delayed response, yes we'd be thrilled to get your contribution, and this is a feature I think would be popular.\n. @complistic-gaff are you still planning to work on this?\n. No significant demand for this, and FT no longer needs it.\n. Hey @usmonster, thanks for this.  \n\nAre all polyfills expected to work in both standards and quirks/compatibility modes?\n\nBoth, though compat mode is often presented by the browser as a different UA string, so we can treat it differently anyway.  For example, IE9 in compat mode sends an IE7 UA header, in my testing.\n\nDoes it matter if they're for HTML(5) only, or should they ideally work on, e.g., XHTML pages as well?\n\nIdeally both\n\nAny feedback on what's currently in the abovelinked gist (assuming tests will be included in the PR)  E.g., should it be divided into patches on other IE8 polyfills?\n\nRather than testing for dependencies like defineProperty you can just assume they exist and express a dependency on them in the polyfill config. I would also suggest that you name it after Element.prototype.textContent but alias all the other equivalent properties.\nOtherwise it looks fine.\n. Thanks.  Targeting should ideally be left to the UA identification, we'd rather not complicate by detecting that we're actually in an emulated browser.\n. OK, but my understanding is that document.compatMode is different from Microsoft's proprietary 'compatibility view'.  The former does not change the user agent, so polyfills need to take that into account and may target the browser in either mode.  The latter does change the user agent, so we ignore it and assume that our server-side UA sniffing will deliver different polyfills to browsers in compatibility view.\nI may be totally wrong about all this.\n. @usmonster are you still doing this?\n. @usmonster consider this a final poke :-)\n. Jonathan, is this OK with you?\n. I'm not that keen on bringing in the external test suite via npm.  Not sure why.  Feels like thin end of the wedge, maybe.\n. Regarding tests, I wasn't even talking about running the polyfill tests in Node, but crikey yes I see we're doing that too...  Maybe we could have some test config in config.json that says whether the test can run in a browser or not, but that does feel like a very bad idea, because the whole point of polyfills is to run them in a browser, not testing them in that environment is little better than not testing them at all.\nOn balance my idealist is winning out and saying go for less comprehensive tests in-browser.\n. Having discussed this with @sideshowbarker recently, I'm fairly convinced that using test262 is not beneficial for the polyfill service.  The problem is that the aim of the 262 suite is to test complete, comprehensive feature implementation, and most polyfills fall short of that - either because of the limitations of what is technically possible or because the polyfill author hit the 80:20 barrier and thought \"good enough\".  A polyfill is practically useful if it sufficiently emulates the feature in the majority of use cases, and fails with reasonable grace in others.  The extent of a polyfill's adherence to the original spec of the feature can vary enormously, and I don't think it offers us any value to try and test polyfills against perfect spec compliance, particularly if that stops us from adopting practically useful polyfills or stops us serving polyfills in some browsers where they would be a big improvement over nothing at all.\nGiven our increasing adoption of third party polyfills, almost none of which are tested with test262, I feel that incorporating 262 into our test harness would add significantly more work and hassle than writing the tests ourselves when needed.\nWill leave this open for a while for comment.\n. My interpretation of your comment is that I run a service that peddles functions full of lies.  I have spent a long time trying to respond to it, and I basically have nothing useful to say, sorry.  If you want to follow up could you do so by private email?\n. Annoyingly, Sauce Labs doesn't have Safari 8 yet, so we can't automate a test for this but I've run the test suite in a local Safari 8 on my Mac and the tests fail without the polyfill:\n\n. Couple of questions, but looks fine.  I didn't understand the reason for the change, but @jonathantneal explained it was to fix a spec violation on treatment of maximum integer values, and this is hard to test without crashing/hanging the browser.\n. Sorry Jonathan, it's just a bit beyond my understanding, and it seems Juan had an issue with it.  It does also need conflicts resolved.  But I've got not problem with it in principle.\n. @juandopazo @jonathantneal I'm going to close this request shortly, let me know if you'd like to keep it open.\n. This seems like it could be tested fairly easily.  Also so we can look at this clearly it would be useful to see it in isolation from the Number changes.  Should be possible by:\n1. Close the PR\n2. Check out master and create a new branch (eg promise-reject)\n3. Cherry pick the Update promise commits from the update-promise branch\n4. Delete the update-promise branch\n5. Do a PR on the promise-reject branch\n. Superceded by #255 then #257\n. We do accept partial polyfills, as long as the missing bit isn't the core of the functionality.\nFetch is on the list.  Feel free to add it: \nhttps://github.com/Financial-Times/polyfill-service/issues/109\n. Yes, I think there's a lot of duplication of existing functionality and I'm not convinced these add value beyond the analysis of defaults exercise.\n. Indentation needs sorting.  Also am undecided about the util scripts so would prefer to put that in a different PR.\n. Wow, ok.  I'm impressed with how easy it is to use the test262 tests - looks like the connector function is tiny.  But what do we achieve with these?\n- If the tests rely on ES5, we'll have trouble running them in older browsers where the polyfill does nevertheless work.\n- Validating perfect spec compliance is likely to make many polyfills fail in ways that really don't make much practical difference to the usefullness of the polyfill\nShould we be serving a spec-perfect polyfill or nothing at all?  Our approach so far has been to use the tests to express the portion of the spec that we care about, so we might well exclude some of the spec functionality if it's rarely relied on by developers and hard to polyfill.  For example, we've been discovering that in Safari 8, it's possible to instantiate CustomEvent with no arguments (#193), which is technically a spec violation, but otherwise the native implementation works perfectly.  The response to this is to remove the test that asserts an error when instantiating with no arguments, because there's no harm done by it, and the better result is to allow Safari to use its native version.\n. I'd say that ignoring tests that can't run because the test code isn't compatible with all our supported user agents is a shame, whilst running tests that do work but fail because the polyfill isn't perfectly spec compliant is potentially a waste of time.\nWe've only just encountered the former (the first example being the A+ tests you contributed), but the latter has been an issue for months, and we decided to solve it by ignoring tests that do not impact the ability of the polyfill to do a decent job in most use cases.  For example, we can't add non-enumerable properties in IE < 9.  A previous version of the tests for Array.from included a test that the property was not enumerable, but since enumerability most likely does not cause any problems, we ignored it (and later removed it).\nAnother example is the CustomEvent implementation in Safari 8 - the native impl fails spec tests because it is instantiable with no arguments, but there's no reason why you'd want to do that and it doesn't cause any problems to be able to do something you wouldn't want to do anyway, so we ignore that test too, and as a result recognise native support in Saf 8.\nI'm not advocating putting anything into the collection that doesn't match the spec - for example, dataset would be very easy to shim using methods, but the spec demands properties, and we can't see any way of polyfilling those, so we gave up, but that doesn't mean we can't have polyfills that improve spec compliance without achieving 100%.\nSo in relation to test262 tests, I propose that we need some agreement in principle on the policies we are to adopt in testing.  We have an existing policy written up in our contributor's guide, so a good starting point would be to establish points of disagreement on that.\nIn principle I'm not opposed to having a tests folder, or otherwise some mechanism to make it easier to drop externally authored tests into the repo and have them understood by Mocha.\n. Sorry for the delay on this - it's performance review week and I have to do fifteen of em. :-(\nI'm ambivalent on this - on the one hand a single tests.js file is simple, easy to understand architecturally, encourages a reasonably small number of tests (which I see as a good thing in the case of the polyfill collection for the reasons explained above), and easy to implement / already supported by the service.\nOn the other hand, it is somewhat limiting, and the ability to, say, separate the actual tests from a Mocha connector for whatever test format you're using might be worth the extra complexity.\nOn balance I'd probably stick with a single file but I'm happy to go either way.\nWe're currently very close to having a passing build for the first time, so do you might waiting for me to finish that (hopefully today or tomorrow), merging into your PR and then we can verify your PR in Travis/Sauce.\n. Remaining test failure is https://github.com/Financial-Times/polyfill-service/issues/213.  I'm waiting for Jonathan to cast his expert eye over it as I can't figure it out at all.\n. Jonathan is a bit tied up with a new job, but after a lot of work I've got all tests passing (in some cases by ditching FF3.6 support).  We need to rebase this branch onto master to try these tests as part of the overall test suite.  One problem is that to do this you need Sauce labs credentials which are set up in the environment settings of the FT's travis account, so would you mind if I made you a contributor so we can work on this on a branch within the main repo?\n. Ping @juandopazo since I can't assign to you.\n. Ah, now I can.\n. @jamesnicholls I agree.  I reduced the test case to just inline code:\nhttp://jsbin.com/veyenimoqa/1\nThe problem is that the <input> element presents outerHTML in IE8 that does not have a closing tag, but the polyfill expects it to.  I refactored the polyfill so it doesn't, and it now works.  PR incoming.\nFor @leanne1's benefit, steps I took:\n1. Post the code into a JSBin, so that people can view and repro the bug more easily.  Load the 'quiet' version of the bin URL in IE8, since JSBin's UI doesn't support IE8.\n2. Reduce that polyfill URL to one that contains the minimum number of features that still repros the problem (it's just Element in this case)\n3. Copy the contents of the resulting polyfill package into an inline script block in the head of your JSBin and cut it down more until you just have one offending function (which is Element.prototype.cloneNode)\n4. Change from loading the minified version of jQuery to the unminified one by removing the .min from the filename.\n5. Enable pause on exceptions in the IE11 F12 dev tools (running as IE8) and run the code.  it will pause on the exception, and you can then navigate up the stack trace to see which bit of jQuery is invoking the clonenNode.  It's the jQuery.support function which tests feature support on startup.\n6. Remove jQuery and paste in that specific jQuery function, removing any bits of it that require other bits of jQuery so it stands alone. Refresh to run the debugger again, and then progressively remove bits of the function until you're left with the bit that causes the bug.\n. This fix is now part of https://github.com/Financial-Times/polyfill-service/pull/218\n. You're right, normalize.css is no more, sorry.  We've made the decision to focus on polyfills delivered via JavaScript.\nIt will continue to be served from polyfill.io but only in response to requests that contain a whitelisted referer header (to prevent anyone starting to use it now)\n. The version we're using actually already detects phantom, but rather than adding phantom config to every polyfill, the more scalable approach is to alias phantom to safari, since they both use webkit.  Otherwise every time a new polyfill is added someone would need to check whether it applies in phantom, and they won't do that.\nI'd be happy to merge a PR that updates agents.js with a map that returns appropriate safari versions for each known version of phantom.\n. It would be good if the service did that automatically though.\n. Agreed, alias to Safari 5.\n. Thanks @SevInf, happy to merge this.  Regarding the Travis env vars, that's a good point - feel free to open an issue for this if you see a way around it.\n. @roland-vachter currently I can't make this work as you describe in any browser, because your JSONp endpoint is down, but I replaced it with a different one and I see the same symptoms.  It's worth noting that the canonical HTML5Shiv does also override the createelement function:\nhttps://github.com/aFarkas/html5shiv/blob/master/src/html5shiv.js#L196\nI narrowed the problem by requesting just the Document polyfill, and the problem remains:\nhttp://jsbin.com/qesuj/1\nI think the easiest solution is simply to adopt the canonical HTML5Shiv polyfill.  I know @jonathantneal likes to maintain smaller, simpler code, but it would be ease his burden if a wider community of people were maintaining it, so he might go for this.\n. In relation to your original post, incidentally, I can't see any errors thrown in IE8 as a result of our polyfill.  It's useful if you say what the errors are!  I think you might have solved this with the gated flag though.\n. @Bockit That doesn't seem to be a reproducible behaviour for me:\n\n(using this JSBin)\nIn any case, the mists are beginning to clear in my head and I'm coming to the conclusion that there are three separate issues at work here:\n1. Polyfilling the Document constructor, which is required for other polyfills such as Event (ie8 and FF5 variants).  IE8 has an HTMLDocument but not a Document.  The bulk of the Document polyfill is actually not the polyfill for the constructor but instead is doing the HTML5Shiv, which isn't technically an API.\n2. HTML5Shiv.  The canonical version of this does not polyfill Document, and I suspect a one-line polyfill for the Document constructor would not interfere with the work of HTML5shiv.\n3. Polyfilling Element.prototype.cloneNode.  I'm including this here because the HTML5Shiv uses cloneNode, and redefines createElement, while cloneNode calls createElement, causing a stack overflow that @Bockit pointed out in #203.\nI've updated #222 with a solution based on separating these concerns.\n. @kaelig can you test the branch in #222 instead of master.  I suspect it will solve the issue.\n. Ah, ok, that's not really a problem with the polyfill service though, that's happening because the registry is using mutationobserver, and the polyfill service doesn't have a polyfill for it.\nThe Polymer project has a polyfill for it, which requires WeakMap, for which they also have a polyfill.  I can add both of those to the service, but in the meantime, it may be easier to simply not invoke the mutationobserver if it doesn't exist.  The only effect will be that the frame containing the demo in the registry will not auto-resize when the demo content changes (but will do so on window resize).\nI'm not going to do a PR in the registry because that would require me to log into the VPN which would be 'work'.  And I'm on holiday.  But I suspect you can figure out where on line 46 to insert if ('MutationObserver' in window)...\n. @roland-vachter can you confirm your issue is resolved by switching from cdn.polyfill.io (or polyfill.webservices.ft.com) to qa.polyfill.io?\n. does the polyfill bundle include the html5-elements feature?\n. Fixed by #222\n. If there isn't a simple way of detecting orientation change and recomputing the value in the browsers you're targeting the default polyfill at, I think we should probably drop it, I'm afraid.  Otherwise we're going to polyfill incorrectly.\n. Let's just merge the unprefixing for the moment, which is uncontroversial and if we find a way of detecting orientation change in legacy browsers we can add that later.\n. JSBin reduced test case works reliably:\nhttp://jsbin.com/wequjevita/1/edit?html,output\n. I've disabled the tests for this polyfill for the moment.  The polyfill itself seems to work, but I'd appreciate you taking a look at it.\n. I guess @jonathantneal is not going to be able to look into this.  This API is little used in practice so maybe if someone else takes an interest in it they can try to get to the bottom of the unreliable detect.\n. Good point, and sorry for any problems this caused you.  I've now implemented the redirect list in the old polyfill.io app, and removed it from the CDN.  So if you make a request to polyfill.io with a whitelisted referer, you'll get the legacy app responding (without a redirect), and if you don't include a whitelisted referrer you'll get redirected to cdn.polyfill.io.\nI haven't removed your domains from the whitelist but this should no longer be necessary since using the new service requires changing the hostname in your request anyway.\nFeel free to reopen if you still experience problems.\n. Useful, thanks.  I'm using this to improve my PR.\n. I think my changes in https://github.com/Financial-Times/polyfill-service/pull/217 cover this now.  Can you review and merge if you're satisfied?\n. Intending to make a release so going to merge this. \n. @roland-vachter Document is this polyfill. We could reinstate the previous form of it, remove the html5shiv aspect of it and then load html5shiv separately, that's one option.\n. My PR for clonenode addresses that bug.\n. As noted in https://github.com/Financial-Times/polyfill-service/issues/211#issuecomment-66874882, there's a tight coupling between this solution and the one for clonenode (#203, #219).  I've merged clonenode changes into this branch and made some more.  Current summary:\n- Reduce Document polyfill to just a constructor polyfill\n- Separate out the HTMLDocument polyfill\n- Add the canonical HTML5Shiv polyfill separately under a new ~HTML5Shiv feature, on the basis that it's not the name of a Web API, so we need some sort of namespacing to indicate that.  It's a problem we've run into a bit before, so I offer this as a proposed standard.\n- Use the new version of the cloneNode polyfill which just augments the native cloneNode (note this will now drop support for cloneNode in IE7, which I don't think is working anyway)\nThere are still possible bugs associated with breaking polyfills that are dependents of Document, so this needs a bit more testing before merging.  @Bockit how does this look to you?\n. Hmph, Github has got mega confused over the files changed in this PR.  I'm closing this and opening a new one.\n. Oh, sorry about that. The problem in this case is that the element polyfill causes an error in non IE, and I'm not confident to debug it (plus I don't run JS in IE7 anyway). So ideally we fix this by adding a blank polyfill.js with this explanation in a comment.\nFeel free to do that, or I will tomorrow (bit late here)=\n. Limiting it using browser targeting would work, but for the ability to require the polyfill using the always flag.  We need to disable that behaviour in this case to avoid serving a bundle that would error.\nRe the stack overflow, oh dear.  Well done for spotting that.  I think the cloneNode polyfill could potentially use the native cloneNode function and just fix the bugs in it, rather than replacing it entirely, which would probably prevent it from being useful in earlier IE (not sure when the partial cloneNode was first introduced).  At the FT we only care about IE8 onwards, because we don't run any modern javascript in browsers older than that.\nI'll update the PR to use the native impl for IE8, and cleverer people like Jonathan can extend support to IE7 and 6 if they want to.\n. This is tightly coupled with #218 so I'm going to merge it into that.\n. W'd be very happy to have this if you'd like to do a PR.  Contribution guidelines should give you everything you need.  Just don't alias it as default.\n. I made a new one based loosely on yours, which I think is based loosely on the webcomponents one, but I think mine is different enough to not inherit any licence obligations - please do let me know if you disagree.  We also prefer not to adopt code licenced under the \"Unlicence\" as there are problems with it.\nYou're welcome to take my changes into yours if you like.\n. I hadn't come across that AirBnB guide, that's a really superb doc, I'll have a detailed read of that.  I've pushed changes to address your concerns - the prototype thing was a new one on me, thanks for helping me with that.  The iteration was done like that because I have a preference for more verbose code over adding more dependencies, but I don't feel strongly in this case, so I added the dep.\n. Greeeeeeeeeeeeeeeeeeeeeeeeennnnnnnnn!!! :-)\nFinally.\n. @chmartinez Try http://qa.polyfill.io/v1/polyfill.min.js.  Swap cdn for qa for the pre-release version of the service.  So that people don't use it in production, it's not available over HTTPS, and introduces an intentional random latency into responses, but should allow you to try out the new version against your problem before we release it.  Hope it fixes it!\n. Cripes, thanks for spotting that.\n. Works for me:\nhttp://cdn.polyfill.io/v1/polyfill.js?ua=ie/9&features=matchMedia\nPossibly you were expecting it to be returned by default (in which case feel free to raise an issue requesting that), or you are using a variation of IE9 whose user agent we're misrecognising as something else, in which case it'd be good to see a bug raised for that.  But most likely it's the former.\n. Hi Felix - thanks for this.  I don't have IE mobile available to test.  Can you post details of which version you've tested and what tests you did, or if you're making this change based on compatibility data posted online, can you reference the source please?\n. OK, thanks.  Hopefully we'll be able to test ie_mob in CI at some point.  In the meantime I'll take your word for it :-)\n. Sam, could you review this?\n. My intention there is to have a separate data file that says which ES syntax each browser understands, something like:\njson\n{\n  \"ie\": {\n    \"6\": \"11 - *\",\n    \"5\": \"<=10\"\n  },\n  \"firefox\": {\n    ...\n  }\n}\nI believe there are no syntax incompatibilities between versions 3 and 5, and there are no browsers with sufficient ES6 support to leave ES6 syntax unconverted.  The first stage would be something like the above, and then later we'd need to add 7 too (since there are syntax incompatibilities between 6 and 7)\n. This was successfully merged via CLI\n. I don't mind having less stable stuff in here as long as it's not in the default collection, so you have to opt into it.  But I'm having an email thread about the loader with Guy Bedford, and he was also keen for us to wait a while, so I'm equally happy to do that.  There's no urgent requirement on my part to ship an ES6 modules polyfill, I just want to ensure FT's architecture isn't hostile to adopting them in the future.\n. My ideal here would be a transparent polyfill, ie. developer writes genuine ES6 syntax in the modules, uses System.import to load them, and that works without any precompile steps.  To do that appears to require full tokenisation of the ES6 in the browser and live compilation to an intermediary form, ie System.register.\nHowever, I was hoping that something simpler, perhaps ignoring edge cases, might be feasible.  Guy said:\n\nIt may well be possible though to support some level of reduced module parsing with just a simple lexer that couldn't fully handle all native tokenizing states and module syntax. It could be a subset of behaviours without circular reference and ES6-style binding support, simply doing the naive translation\n\nI reckon that plus an implementation of System.import would be the simplest polyfill, albeit not a complete one.  Developers making use of this polyfill would need to agree to some basic constraints, no circular dependencies being a key one.\n. System.import is (afaict) now the loader API, but that effort seems to be stalled, with no updates for the last 5 months.  It was mentioned above that this feature was too early stage to polyfill and I think it probably still is.  Let's close this and bring it back when there's something worth polyfilling.. Sam, ready to review and merge this.\n. If you run the app as a service the 3s startup time is not a big deal, and not something we are trying to optimise.  We do want to optimise the request processing time, which is really fast because of all the in memory caching and minifying that is done on startup.\nLazy loading would make the turnaround time for end user requests slower, which is no good, even if it's just once per restart per polyfill.  We could minify as a build step before deployment, and I imagine minification is what's taking time here, so that would be my chosen solution. But why is the startup time important?\n. OK, that seems reasonable.  So perhaps we need a grunt task for minification then.  This would also be a better place to run our config and syntax verification.  I've created an issue for this: #233.\n. Object.create is now targeted at IE8 but we haven't made a prod release for some time.  Can you try qa.polyfill.io?\nNote qa.polyfill.io is not available over HTTPS, and must not be used in production.\n. I'm waiting on verification from some FT teams whose bugs should be fixed by this release.  Hopefully by 6/7 Jan when everyone is back at work.\n. Since I don't think it is possible to polyfill this properly, the argument against doing so is that it will suppress errors but your application might still not work properly.  If your app is not working, you want to know why, not have that hidden away.\nI think what could help here is if the polyfill service defined an Object.freeze function just so that it can throw a more helpful error to say that we can't make it work, so you don't have to scratch your head over \"Object doesn't support this property or method\".\nIt's a similar situation to console, which we're also opted not to define for similar reasons.\n. We do now have a few examples of 'cheat' polyfills... notably the devicePixelRatio polyfill that simply returns 1 on the basis that any device that doesn't support it is likely to have a standard density display.  However, I'm still very wary of going near APIs where we can't even simulate the behaviour. I think the most I'd consider doing here is implementing a method that does console.warn('Not implemented (polyfill.io)') or similar, just to prevent an unhandled exception causing a break in your runtime code.\n. @juandopazo do you have a view on this?\n. See https://github.com/Financial-Times/polyfill-service/issues/192.  Which tests are the better ones?\n. @juandopazo can you create a branch within the base repo rather than your fork? Then Travis will be able to run the CI tests (it needs credentials to log into Sauce Labs, which are in the FT Travis environment)\n. There's something weird going on at Sauce's end and sometimes the tests hang up before finishing.  I've not looked into it yet because it usually works if you just run the build again.\n. I'm a bit confused by how your new branch's CI has flagged this branch's PR, but works for me :-)\n. Thanks for raising this.  I'd been vaguely aware that it was likely to be a problem.  My only suggested solution at the moment is to do something like:\n<!--[if IE ]>\n  <script>\n    document.write('<'+'script src='//cdn.polyfill.io/v1/polyfill.min.js?ua=ie/'+document.documentMode+'></'+'script>');\n  </script>\n<![endif]-->\n<!--[if !IE]>-->\n  <script src='//cdn.polyfill.io/v1/polyfill.min.js'></script>\n<!--<![endif]-->\n. If that works, let me know and I'll add it to the docs\n. If there's a bug in a polyfill, please do raise that as a separate issue.\nIf the conditional comments are version specific, do they act on the document mode, or the real browser version?  If they act on the document mode, you can make a slightly better solution that doesn't use document.write by doing something like this (note that when I say 'something like' I am not guaranteeing syntactically correct code):\n<!--[if IE 7 ]><script src=\"//cdn.polyfill.io/v1/polyfill.min.js?ua=ie/7\"></script><![endif]-->\n<!--[if IE 8 ]><script src=\"//cdn.polyfill.io/v1/polyfill.min.js?ua=ie/8\"></script><![endif]-->\n<!--[if IE 9 ]><script src=\"//cdn.polyfill.io/v1/polyfill.min.js?ua=ie/9\"></script><![endif]-->\n<!--[if IE 10 ]><script src=\"//cdn.polyfill.io/v1/polyfill.min.js?ua=ie/10\"></script><![endif]-->\n<!--[if IE 11 ]><script src=\"//cdn.polyfill.io/v1/polyfill.min.js?ua=ie/11\"></script><![endif]-->\n<!--[if !IE]>--><script src=\"//cdn.polyfill.io/v1/polyfill.min.js\"></script><!--<![endif]-->\n. I've done some research here and found that in compatibility mode IE actually modifies it's user agent string.  I can't find any scenario in which the solutions above are necessary.  @roland-vachter can you provide a test case?\n. It would be very helpful if you could \n- provide the URL of the polyfill bundle that produces this error (unminified with ua parameter included);\n- narrow down the issue to a bundle with a single polyfill\n- confirm the use case (seems like you might be calling addEventListener? If so are you calling it on document or a node?)\n. HierarchyRequestError does not exist in IE7, so I suspect you were loading the IE7 polyfill bundle in IE10 or 11, which explains the change in error message.  I can replicate the Not implemented though, and I think it's the hashchange polyfill.  Suggested fix in https://github.com/Financial-Times/polyfill-service/pull/244.\n. https://github.com/Financial-Times/polyfill-service/pull/245\n. https://github.com/Financial-Times/polyfill-service/pull/237\n. Implemented\n. @juandopazo @matthew-andrews what do you think?\nBasic gist is:\n1. New grunt task installcollections lists tags in your local repo, then clones a fresh copy, checks out each of those tags in turn (provided they match a v0.0.0 pattern) and copies the polyfills collection into /polyfills/__versions/{version}.\n2. New grunt task shipit replaces the deploy.sh bash script, and deploy wraps installcollections and shipit.\n3. Sources module now reads the versions directory and loads all versions of the polyfills.  New public method getCollection() returns a reference to the library version that you want, and the latest is statically available at .latest.\n4. When parsing sources on startup, ignore errors in the older libs (since we improve source validation in later releases)\n5. Add libVersion param to service and library\n6. Document libVersion in docs, and add a list of installed versions.\n. Deploy is run manually. People who want to use it as a library probably won't want the shrinkwrap feature since they'll probably just install the version of the module that contains the polyfills that they want.\n. Deploy wraps installcollections and shipit. For your use you might replace shipit with a task to deploy to your platform.\n. @matthew-andrews @juandopazo I'll merge this on Tuesday if there are no objections to this implementation.\n. Still planning to do that, but thought we could do that as a subsequent step.\n. @jonathantneal this fixes a bug I think you introduced in a commit you made in https://github.com/Financial-Times/polyfill-service/commit/d59c718728f04ee8805725f2a419f1fe3e3333e0.  I have found that IE7 and 8 don't allow assignment of undefined to a window property, so this is my suggestion, but I am not sure why you needed to set the property to undefined in the first place, so would be grateful for your review.\n. Ah, makes sense.  Thanks for the review!\n. @samgiles updated, can you review again?\n. A few questions here for @matthew-andrews or @josh:\n- Seems like this polyfill depends on FormData which is only in IE as of 10. Are you using a polyfill for that?  (eg https://github.com/francois2metz/html5-formdata)\n- There's also a soft dependency on Blob and FileReader.  Is it safe to say these basically aren't polyfillable?  What's the expected impact of using fetch to load blobs in a browser that doesn't support them?\n- Testing this is mega hard.  Josh has written a server just to do it, which makes for a very bespoke test harness.  The polyfill service can run Mocha / expect tests.  Do you have any suggestions on how we should test fetch?\n. OK, since this is a straight copy of Josh's polyfill, let's merge this and create a new issue (#267) for testing it.\n. Thanks.\n. HI @mislav thanks for this issue, though we don't currently have an Element.prototype.replace polyfill.  We'd be very happy to add a replaceWith polyfill, if you'd consider contributing one.\n. Whoops, sorry, thanks Jonathan.\n. OK, let's continue this in #254\n. Probably lazy targeting.  No, we don't have any IE mobile test browsers, either readily to hand or on Sauce Labs.\n. Good idea.  Could you do a PR to the polyfill?  I think we can probably aim\nfor a release next week.\n. Yes there are and details of how to author are in the contributors guide.\nThis particular polyfill may not have tests, in which case obviously\nwriting a couple would be excellent.\n. Working on it.  Was having trouble with heroku, hope to resolve today.\n\nOn 5 Feb 2015, at 12:42, roland-vachter notifications@github.com wrote:\nHi Andrew,\nApparently this is not yet released, and we have the same errors.\nIs there an approximate date when this will be released?\nThanks\n\u2014\nReply to this email directly or view it on GitHub.\n. :+1:\n. Which polyfills would you serve?  We could use the default set of features, but do you assume that your mystery browser lacks all the features and needs every polyfill?  Some polyfills have only browser specific variants, so the generic case simply doesn't exist.\n. OK, sorry being dumb on the features to consider front - it's in the request.  But my point is that you get every single one.  A mystery browser is probably a very poor browser, and I'd rather not crash it by getting it to parse every polyfill we have!\n. I don't think this is bikeshedding.  The issue has been mentioned to me before too, so a significant number of people do think intuitively that an unknown browser should get a ton of polyfills.\n\nSo you're proposing a new fallback param (perhaps fallbackUa?), which is used if the ua property (or the user agent header) fails to map to a known browser.  If fallbackUa also fails to map to a known browser, we then deliver an empty file.\nWhat would be the use cases?  Would you always use an older browser as your fallbackUa?  If so, the effect may not be substantially different from delivering all polyfills (except with a specific named fallback browser you would potentially get variants designed for that browser's proprietary hooks).\nAnother alternative is to simply add a boolean param, enableUnknown, which if set to true will cause the service to bundle all polyfills for the requested feature set, using only default variants.\n. @juandopazo any further thoughts on this?\n. Well, I wouldn't stake my life on it, but it does do pretty well with everything I've thrown at it so far.  I think the best compromise here is enableUnknown.  Anyone object to that?\n. OK, went with unknown, with options ignore and polyfill, defaulting to 'ignore'.  See https://github.com/Financial-Times/polyfill-service/pull/276.\n. Hi @monolithed, this is an interesting idea, so you're saying you want to use the polyfill service as a grunt task?  And you want to do this without specifying a UA.  This is a similar problem conceptually to #252, in that:\n- We would need to serve all the requested polyfills, since we don't know which ones are actually needed\n- For polyfills with browser specific variants, we would have to serve the default variant (which may be blank if there's no default variant for a polyfill)\nI am concerned about the effects of this on very legacy UAs or low powered devices that may fail badly at parsing the large polyfill bundle.  For example I have a fairly new LG television with a built in web browser, which is some very old version of webkit.  If I load my employer's website, which contains a lot of script, the TV actually turns itself off.  It would be better to not serve script to UAs that can't handle it.  I remember similar crash effects happening on older BlackBerry devices prior to v6.\n. In #252, I have suggested an enableUnknown property.  Your grunt task could embed that value so that when used via grunt, the service provides a polyfill set for the generic UA case, while users of the CDN will still get an empty file for an unknown UA, unless they explicitly opt in.  Would that work?\n. Yeah, I changed it to unknown following a suggestion from @matthew-andrews \n. unknown has shipped in 1.2, so considering this closed.\n. Jonathan, I'm stuck on your comment https://github.com/Financial-Times/polyfill-service/pull/254#issuecomment-71334297, can you give a bit more detail?\nAlso, do you think we should split out these individual APIs into separate features within the polyfill service?  Otherwise it's hard to know that they're actually covered, hence my confusion in #248 (though as a maintainer of the service I should have known better)\n@mislav We have a feature being released in the next version that enables shrinkwrapping of library versioning, so you can keep the same polyfills through a service upgrade, which will help risk-averse users who want to use the service.  But I take the point that in this case it would be pretty easy to support both, and I wonder if we should keep a Element.prototype.replace definition, with an alias to Element.prototype.replaceWith.  @jonathantneal any thoughts on that?\n. OK, I think I get it.  So on ParentNode, you're saying that the current form of the polyfill doesn't work when invoked on Document, but the native impl would do, so we need to support that.  You'd like to be able to do that via a single assignment, but there's no native global that refs all the constructors you want, so you'd have to use multiple assignments.  If that's right, couldn't we just do the multiple assignments?  Seems easiest, clearest and most robust to me.  Opened a new issue for it: #281.\nOn splitting the polyfill, the shared private method is a tad annoying, and it's true that this is a common pattern.  I think this is important enough to start a separate issue about, rather than holding up this PR. See #280.\nFinally, on the subject of replace vs replaceWith, I'm moving towards the view that since replace was never adopted by any browser natively, we should not continue to support it.  Instead, people who want to use bleeding edge APIs may prefer to shrinkwrap the version of the polyfill library that they use.\n. Looks OK to me and passes our existing promise tests, such as they are.  I agree with Juan that these changes to @Octane's code are probably not worth the additional maintenance responsibility that they impose on us, especially when we want to pull in newer versions of the source.  There was a lengthy discussion of this problem in https://github.com/Financial-Times/polyfill-service/issues/88, where Mathias and JDD were strongly of the view that we should not even have a copy of the polyfill locally, but it should come in as a dependency at build time.\nI think the compromise for these third party libs might be:\n- Avoid editing (but by all means submit PRs upstream)\n- Extend config.json with the following new properties:\n  - repo: The GitHub (or other) URL of the root of the repo\n  - version: The tag at which the current source was captured\n- Add a grunt task to update all the sources that have these two properties\nThis would mean we can continue to do QA through our own test suite, it's compatible with our new shrinkwrapping/version-locking feature, and updates from the original source are automatable.  If we accept this principle though, in the case of this PR we'd have to be happy to take @Octane's polyfill exactly as it comes.\nBut maybe that would mean that we could have more time to spend on caring for the style and performance of the polyfills that are not imported from third parties?\n. There's a bug in the setImmediate polyfill included in this - I've pushed a fix and also added @matthew-andrews's test case to the test suite.\nHowever, we already have a setImmediate polyfill in the collection, and @Octane's source doesn't embed it, so could we use our polyfill here by listing setImmediate as a dependency?\n. Seems I can't push my commits to this branch because it's capitalised, and my git client has lowercased it, and now my Mac refuses to tell the difference because it has a case insensitive filesystem.  Can we continue this in #257.\n. So I think actions here primarily on @jonathantneal:\n- Do you want to do your Promise.all refactor?  (and could we maybe consider pushing it upstream into @Octane's version?)\n- Is my fix for the setImmediate embedded polyfill OK with you (and should we drop it entirely and use the canonical setImmediate polyfill as a dependency?)\nAnd any more general feedback on the ideas for tracking 3rd party sources that I put in https://github.com/Financial-Times/polyfill-service/pull/255#issuecomment-71439382 before we adopt this PR?\n. @juandopazo I don't have an opinion on ASAP.  As this PR currently stands it seems an improvement on what we already have, so can we merge this and then we can resolve the issue of spawning async tasks as a separate issue (which I'm happy to open)?\n. See https://github.com/Financial-Times/polyfill-service/pull/275\n. Thanks\n. Thanks for the report.  We'd be grateful if you could debug it and contribute a fix if you have time.\n. Note that issue https://github.com/Financial-Times/polyfill-service/issues/313 also has a problem with the bind polyfill.  If you can confirm that es5-shim version fixes your problem, we could switch to that.\n. I think this is one for @jonathantneal...\n. @juandopazo I'm happy with this and am intending to ship a 1.2 release today, if you're in a hurry for this feature let me know and I'll merge it.\n. Pushed an update to this branch so we can see if it passes the current test suite.\n. This doesn't pass the current test suite.  Will stick with current impl - Juan feel free to pick this up if you'd like to fix the CSP issue and can follow up the test failures.\n. We do target DOMTokenList to IE9, and it's one of the combinations that gets automatically tested.  Are you sure you were setting the User agent correctly when you emulated the document mode?  The symptom you describe would appear if you emulated IE9 but with an IE11 user agent.\n. Yup.\n. Yes, the question is more a) whether setImmediate is the right interface semantically, because it's not standards-track, although there is (to my knowledge) no equivalent that is, and b) if setImmediate IS the right interface, which of our two implementations should we standardise on.\n. We actually already run the service during the sauce labs functional tests, because the tests hit the service to fetch the test pages.  Perhaps we could build an API endpoint that delivers test responses based on request data, but it seems really specific to fetch (I guess it would also be useful for XHR 2)\n. Yes, or http://httpbin.org/ should be fine for this actually.\n. Thanks @monolithed.\nThis makes feature detection a real pain.  We have lots of possible variations of bits of the feature that don't work in different browsers, and so with a single detect, we'd need to do something like:\n(function() {\n  var el = document.createElement('p');\n  if (!('classList' in document.documentElement)) return false;\n  el.classList.add(\"c1\", \"c2\");\n  if (!el.classList.contains('c2')) return false;\n  el.classList.toggle(\"c3\", false);\n  return !el.classList.contains('c3');\n})()\nIf we did this, we could then have one variant of the polyfill and potentially use @eligrey's one.\nAs a principle, I think it's right to have a single feature detect.  The feature is either there and working, or it is not.  If we wanted to provide a more optimal solution than simply serving Eli's polyfill to all browsers, we could use a variant to exclude the basic polyfill in IE and FF versions that lack just the advanced features.\nAny thoughts @jonathantneal ?\n. Hi @hgl, this is a very interesting idea.  With all those kinds of things though, my immediate concern is scaling - we have a lot of polyfills, and anything we do to make the detects more complex will have an immediate impact on how hard it is to create and maintain polyfills.\nThe benefit of your granular detect is simply to provide hooks for the polyfill code.  That would actually be more simple to maintain if the detects that are done for the purpose of tailoring the polyfill were actually done IN the polyfill itself.  Eli's polyfill already includes the relevant feature detects to enact the correct solution depending on existing partial feature support, so an easy solution for us is to write a simple true/false detect which is fussy enough to return false in the case of multiple class names, then just load Eli's polyfill.\n. I'm moving this discussion to #366.  As for classList, I think we should adopt Eli's polyfill and have a more complex detect (albeit one that still returns true or false)\n. I moved the tangential discussion, but the multiple classnames remains unresolved.  Since we no longer have variants, using Eli grey's polyfill would be simple enough, so I'd suggest replacing the existing polyfill with that.\n. @samgiles could you review this?\n. This seems like a good thing to automate to make sure we don't forget it.  But we're up to date right now, I believe - latest release is 1.1.0, and that's the version in npm.\n. We haven't made a new release since fetch was added.  A release is not as simple as just tagging and pushing to npm - we need release notes, fair warning to users and a QA period on qa.polyfill.io.  I know you're keen to have the fetch polyfill.  Bear with us, it should be out this week!\n. It would be hard to make this part of the library API, since by the time you call getPolyfillString, we have already compiled all the poyfill sources into a single sources.json file.  Adding custom polyfills would need to be factored into the grunt buildsources task.  Currently the polyfills location is defined here:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/tasks/buildsources.js#L20\nSo that could be made into an array of paths, and could be passed as a grunt parameter.  Happy to accept a PR along those lines.\n. No intent to implement this.\n. commented in the PR.\n. You can't run the test suite because your fork is using your Travis account, and your travis account doesn't have Sauce Labs credentials in the environment.  There are no good solutions to this that I can see.  I can think of a few bad ones:\n- Put the Sauce auth tokens in the code (even if encrypted, that would enable anyone to run sauce tests on any repo using our account)\n- Merge the PR to a branch other than master, and then run the tests before merging to master (we'd have to either create a merge target for every forked PR, or have some kind of 'inbox' branch that you could target all forked PRs at)\nOpen to the obvious solution that I've missed!\n. Your tests do not contain any test cases.  You need the it function, not describe.  You can use describe to wrap logical units of tests, but it's not required, the service automatically wraps a describe around whatever you put in your tests file.\n. @monolithed I have created a url-polyfill branch and merged your changes into it, and created a PR to pull it into master.  We can continue this there.\n. Our support for FF3.6 is pretty poor at the moment, but it is above the baseline, so it would be good to fix it.  This isn't a priority for FT because all browsers that pass our JS baseline have the correct addEventListener behaviour, but we'll gratefully accept a contribution here.\n. @samgiles code review?\n. @juandopazo could you let me know if this works for you?\n. What's the downside?\n. And the benefit is the polyfill has one fewer dependencies and a smaller code footprint?\nIt sounds fine to me.  @jonathantneal may have a view ;-)\n. This code was originally as you are suggesting, but it was changed to be always-https, because there's no reason not to.  You can load an HTTP page with HTTPS subresources, and I don't know of any browser that complains about this.  Feel free to reopen with an example if you know of one!\n. @samgiles could you review?  Most important is the two jshintrc files, the rest is updating the service code to conform to the new standard.\n. @jonathantneal said on chat this evening that this has his OK.\n. @jonathantneal OK, so are you satisfied with the approach I outlined in the original post above?  So there's one big closure around the whole polyfill bundle, rather than individual closures around each polyfill.  Dependencies can just be named clearly using a prefix: PolyfillService.shared.thing, and listed as normal dependencies - don't see a strong argument for a new config property, and if we use dependencies it will just flow through the existing dep resolution logic.\n. Just to be clear, the PolyfillService variable lives inside the outer closure, so is not a global.\n. So to take your example, I'm not sure why you wouldn't simply use Object.prototype.toString in the Array.isArray code:\njavascript\nObject.defineProperty(Array, 'isArray', {\n    configurable: true,\n    value: function isArray(object) {\n        return Object.prototype.toString.call(object) === '[object Array]';\n    },\n    writable: true\n});\nBut where the function isn't already a native global (or a property of a native global), and we want to share it, that's where the shared object would be used:\n``` javascript\n// Wrapping closure\n(function () {\n    var PolyfillService = {shared:{}};\n// /polyfills/PolyfillService.shared.enqueueMicrotask/polyfill.js\nPolyfillService.shared.enqueueMicrotask = function(task) { ... };\n\n// /polyfills/Promise/polyfill.js\nself.Promise = function() {\n    PolyfillService.shared.enqueueMicrotask(foo);\n}\n\n}());\n```\nI added the shared subobject in case we later want to extend at the PolyfillService level, and felt it was probably worth being clear over being concise.  If you feel that length is excessive we could drop the grouping object entirely and just use a naming convention, like an underscore:\n``` javascript\n// Wrapping closure\n(function () {\n// /polyfills/_enqueueMicrotask/polyfill.js\nvar _enqueueMicrotask = function(task) { ... };\n\n// /polyfills/Promise/polyfill.js\nself.Promise = function() {\n    _enqueueMicrotask(foo);\n}\n\n}());\n```\nIn fact, having done all that I prefer the second form - I'm leaning more towards thinking that a grouping namespace is unnecessary.\n. OK, so, changes to the service:\n- Exclude any features prefixed with _ from the feature list in the documentation\n- Surround the entire polyfill bundle with (function() { ... }());\nAnd, er, I think that's it!  In the meantime, you could modify your mutation changes to work as we've agreed here.  But this won't take long...\n. Actually, I'll make the service change in your enqueueMicrotask branch, then I'll be able to test it once you've normalised to the naming convention agreed above.\n. Implemented in #287\n. Resolved by #288\n. In my view it would be better to ask why something works as it does rather than to assert that it is 'illogical'.  You're of course welcome to fork the project and make it conform to your own logic if you like, and if it's better than what we have we can then learn from your greater wisdom.\nAlso see https://github.com/Financial-Times/polyfill-service/issues/253\n. That URL returns polyfill code for me.\n. Sorry, you're right, I was inadvertently sending a supported UA header.  OK, if you send a UA in the format XXXXX/YYY then that will be considered a canonical name so is treated as a known browser.  If we don't have polyfills for it, you don't get any.\nWe could alter the implementation of isUnknown to require it to be a valid member of baselineVersions, here:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/lib/UA.js#L155\nI'm open to that.\n. @davglass @matthew-andrews is a colleague at the FT, so I hadn't checked the license, thank you for pointing this out.\n. Hi @jkimbo - as a rule we are happy to break backwards compatibility if a spec change happens, provided that no browser has implemented the older form of the spec.  In this case though, we are still supporting the old version, we just treat it as a separate polyfill and don't include it by default.  It would be a bit weird to include by default features that aren't actually part of the web platform specs.\nTo include String.prototype.contains, you just need to add it to your features list:\nhttp://cdn.polyfill.io/v1/polyfill.js?features=default,String.prototype.contains\n. My thoughts on this are:\n- We do support .contains, we just turned it off from the default set, because it is no longer officially part of the web platform\n- I think we are actually following semver.  Semver is hard to apply to something like the polyfill service because it would apply to the service API, not the polyfills which are essentially content.  Very happy to take part in a discussion about how semver rules should be applied to the polyfill service.\n- Shrink-wrapping largely mitigates library incompatibility risks, though it's great to simply be able to upgrade the web automatically, so while in an ideal world people wouldn't shrinkwrap, I think in practice many will and that's OK.\n- In this case we could have kept contains inside the includes polyfill as an alias, but strictly speaking that would have polluted native objects with non-standard properties.\nOn the libVersion 1.2, that's odd, 1.2 should be available as a symlink to latest, since the current release is 1.2.  Maybe something in the deploy process or the Heroku config is killing the symlink.  I've opened an issue for that: https://github.com/Financial-Times/polyfill-service/issues/285.\n. Resolved by #288 \n. Thanks Jonathan!  Looks like the setTimeout variant isn't configured.  We'll probably need some further changes to this after we agree an approach for #280.\n. It's sauce being unreliable.  Just restart the build.  Usually works 2nd or\n3rd time.\nOn 10 February 2015 at 13:24, Jonathan Neal notifications@github.com\nwrote:\n\nFatal error: Cannot read property 'browserName' of undefined\nIs that due to my commit, or due to Travis?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/288#issuecomment-73698129\n.\n. I removed the unreliable browser (iOS 7.1) from the browsers tested in CI, and also removed the deploy tool haikro from the package manifest, which was for some reason uninstallable on Travis.  The PR should now be testable.\n. Adding a test for this specific case would be appreciated - it will help us gradually improve test coverage and this was obviously a gotcha during development.\n. It doesn't hit the CDN until we release 1.3, but as soon as it's merged you could check out and use master if you wanted the fix right away.\n. CI won't work here because you're using a fork.  FT employees do not need to use forks, so it's easier for me if you use a branch in the FT account.  I'll take your word for it on the test!\n. As with String.prototype.contains, I suggest we continue to support contains but make it depend on includes and have a polyfill that is simply an alias to includes.   Thankfully contains was never in the default set, though it was in the es7 and modernizr:es7array sets, so anyone using those features would no longer get contains.\n. I'll re-add contains and fix #294 at the same time\n. @samgiles this is worth another look.  Adding node-measured made for a very elegant solution, though I worry a bit that this isn't necessarily easy for other tech stacks.  Technologies that don't maintain a running process, like PHP, will need more complex solutions to collect metrics if aggregation is to be the responsibility of the service.  That said, if everyone prefers the raw carbon protocol, it is at least pretty easy to use from Node, and we could make a pattern from this very easily especially if my suggested flatten function were to be pushed into the node-measured module.\n. Hooray, fixed travis.\n. Hi Blaine - is that with URL https://cdn.polyfill.io/v1/polyfill.js or are you adding any query params?\n. I can't reproduce this, unfortunately.  I'm using Microsoft's modern.ie VMs, and I've tried both the IE8 and IE11 emulating IE8.  Any tips?\n. OK.  A URL to a test case is always useful, JSBin works pretty well, then we can make sure we're looking at the same thing.\n. I disagree with that - the data we're describing is quite different to a node module, there's no equivalent to the browsers and variants objects for example.\n\nI'd like to also add a spec property to contain the URL of an appropriate spec doc, to make the most of the behaviour of adding a spec URL to the top of the polyfill, which is a great idea that @jonathantneal has started doing with stuff like https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Element.prototype.after/polyfill.js#L1.  That's incredibly valuable for those of us who struggle to find the canonical description of a feature.\nI've updated the OP with this.\n. Closed by https://github.com/Financial-Times/polyfill-service/pull/337\n. CI passed, excellent job @monolithed.  Can you consider the shorter detect?\n. Thanks for reporting this.\n. Fixed in 61fc98e7bf0df940833c395ebd59cb58bb7c5b32 (I wanted to have a test for this)\n. @matthew-andrews are we still interested in this at FT?  If so can Next team spare any time on the above?\n. Hi @axemclion sorry this has languished. There is no longer internal demand at the FT for IndexedDB to be in the polyfill service so we're not putting time into it but if you want to, you'd be very welcome to push it forward.  Contribution guidelines are at cdn.polyfill.io/v2/docs/contributing.\n. Thanks @tejacques this is excellent work.  If you could do a PR that will enable us to merge this change in faster (and my only suggestion is that your mocha test needs an assertion)\n. This has been discussed previously: https://github.com/Financial-Times/polyfill-service/issues/125\n. Surely you can use the npm package as a library without running the service code?\nAs for the polyfills being up to date, I explained our release logic in https://github.com/Financial-Times/polyfill-service/issues/270#issuecomment-72393978, so splitting the library from the service wouldn't speed up npm releases. We'd still have to run the full compatibility suite test before making a new npm release of the library.  The only effect that splitting it up might have is to increase the frequency of service releases, because it's no longer tied to the more rigorous compatibility testing process for the library.\nAs a solution for you, if you want bleeding edge builds of the library that have not been compatibility tested, you could just state the polyfill-service dependency in your package.json with a full github URL rather than the npm package name.\n. > Nope, it requires some exports like getPolyfillString.\nIt has that.  Just var polyfill = require('polyfill-service') and the polyfill object exposes a getPolyfillString method.\nI'm afraid we aren't going to split the project right now, and we don't plan to release a new version on every commit to master, but as above you're welcome to use master if you want, you'd just have to figure out how to publish it into your own npm registry.\nWe'll also be pushing a new release very soon, possibly this week.\n. No, because it requires the proxy.html file on the target host, so it's not a proper polyfill.  Unless it can mirror the spec, we can't have it in the library.  I can't see how we could do that with CORS.\n. Many thanks for this.\n. @jonathantneal can we use the method from the original source polyfill?  I'm struggling to see the benefit of your TO_STRING refactor.\n. See https://github.com/Financial-Times/polyfill-service/pull/315.  Jonathan, I think we should refactor this.  Could you review #316?\n. The targeting config for this polyfill only applies it to Chrome <=29.  The targeting was introduced here:\nhttps://github.com/Financial-Times/polyfill-service/commit/e2cdedaaed30a9fbc73348b0381402d44ea11291#diff-60cffac6d7c997bfa14860f5d1bf5eaf\nHowever, MDN reports find is not currently supported by any version of Chrome, IE or Opera.  FF settings look fine.  Testing on my local Chrome 40, it's not present, so the settings we have are obviously incorrect.\n. Merged equivalent PR #311\n. I think it's fair to credit @tejacques with this one since he raised the bug but I admire your responsiveness @arthurvr.  Maybe fix a different bug instead ;-)\n. Maybe.  Cons:\n- this gives the service a very proprietary flavour, even if the ftwebservice module is open source.\n- the code above is not substantially less than the code you're proposing to replace.\n- we are discussing changing the service description endpoints so that they are not versioned.  This abstraction does not help make it easier to do that\n. I don't have an iOS 5 device to test on.  Does the polyfill we have in the service already work on Safari on iOS 5?\n. OK, if the es5-shim polyfill works on our test browsers (IE 6,7,8 and FF3.6 for this one) then I'm happy to switch to that.  Can you do a PR?\n. Sorry, I didn't check that the targeting was correct.  I'll push a commit to target iOS < 6.\n. @Octane we're finding that we have multiple use cases for certain behaviour for which there is no web platform API, and asyncing tasks is one of those.  We don't want to use setImmediate as it will likely not be a standard (for historical reasons, we have a polyfill for it).  I don't really have any suggestions for how you could modify your code to make it easier for us.\nI did also consider whether we could take your polyfill completely unmodified, and do something like this:\njavascript\n(function() {\n   var require = function() { return {setImmediate: _enqueueMicrotask} };\n   // Your polyfill here\n})();\nThat would mean when your code does require('timers').setImmediate, you get a reference to our _enqueueMicrotask util function. But we don't have a mechanism for wrapping third party libraries currently, so I'm not sure how we would do this.\nFor now, I'd just be really happy to only have to modify one line :-)\n. I'm going to try my approach that defines require inside the closure, which would mean no need for Octane to do anything and would avoid exposing a public property of Promise that doesn't exist in the Promise spec.\n. Merged PR, also see https://github.com/Financial-Times/polyfill-service/pull/338 for clarification on use of third party polyfills.\n. Wow, nice diagnosis, thanks.  I think you're right, this is a real edge case.  It wouldn't be hard to add a line to addEventListener to bind the listener to document instead of window, but as you say this potentially has unexpected consequences on stopPropagation.\nPotentially the best thing to do here is to throw an error to the console if addEventListener is called on window for an element specific event, with a message that links to this issue.  What do you think?\n. @tejacques would you consider contributing a PR for this?\n. I'd suggest not restricting it by browser - that's a minefield that we have to tread carefully. Erroring whenever a listener is bound to window for something element specific with advice to bind to document should be fine.  Your change looks good, except I'd add advice to bind to document, and remove the specific reference to IE8 (presumably it also happens in 7 and 6)\n. Sorry, I totally didn't read your earlier comment properly and eagerly clicked the commit links.  I thought we were talking about the polyfill implementation, not the tests.\nStill, I guess the test is a matter of binding to window for one of the affected events, firing it, and then asserting that EITHER it works, or you get the error we've put in the polyfill.\n. Hi @tejacques can we finish this off?\n. So on deploy we'll now have two copies of the latest library version, assuming there's a version tag pointing at the commit that's being deployed.  I guess that's OK.\n. Good point.  Could you do a PR?\n. I'm not sure what you're getting at here.  Could you explain in a bit more detail?\n. Can you drop the version update?  We will update the version when we push to npm.  Otherwise this is fine.  I'm going to drop the shrinkwrap as it's proving extremely annoying, but I'll do that after the merge.\n. Thanks @Casao, this is much appreciated.  I've made a few comments inline.  To summarise those and respond to the larger point above:\n- We don't create an individual protected scope for each polyfill, so you need to either create one, or not define any variables at the top level of your polyfill.  You could easily avoid creating the origin variable, so this should be an easy change\n- The detect could be simpler\n- Could you add a test?  It might seem contrived but it helps us map out support automatically using CI\n- Regarding licences and attribution, I am talking on and off with the FT's legal team about this.  In order for the FT to dedicate the code in this repo to the public domain (CC0 licence) we need to be as sure as we can that the author (where the code is supplied by a third party) has already done so. It becomes more complex when the person who adds the code to the polyfill service is not the original author.  The problem with CC0 in particular is that since it is the 'free-est' possible licence, we cannot re-release code that is encumbered by any other licence at all (even MIT) as CC0.  Therefore if this code was your own invention and you intended to licence it MIT, I'd suggest you retain the author and licence properties to document that.  If not, I'll take agreement acknowledgement of this comment as your agreement to releasing the code CC0.\nOnce I've got to the bottom of this issue there'll probably be some sort of contribution terms clause added to the contributors' guide, basically saying it's CC0 if you don't add licensing info.  Something as non-scary and efficient as possible!\n. There's a closure around the whole bundle, not around each polyfill.  Currently, @Casao's 'origin' variable will exist across all the polyfills but will not leak into global scope.\nOn licensing, I think we need to chat in real time about this.  I understand the principle, but we can make faster progress with this project if we're willing to use third party code more often.  Your polyfills are excellent, but isn't it better when there's a whole team of people working on them, like there are looking at es6-shim and es5-shim?  Both of those are MIT licensed.  I am happy to lead the project but my JavaScript just isn't good enough to resolve all the issues with individual polyfills, and I see it as a waste of time to recreate (or debug) something that already exists and has been thoroughly tested in earnest by thousands of people.  That's why whenever there's a problem with a polyfill we have, my instinct is to say \"is there an es*-shim version of this?  does it have the problem?\"  If not, well, it's a lot quicker (for me at least) to just replace our polyfill with the community one than try to solve the issue with ours.\n. Thanks Colin.  Yes, point very much taken on the simplicity, I guess it just prompted the discussion.\n. Looks good to me.  Thanks!\n. Sorry, that output could be clearer - it's an error in an earlier version of the library, which we can't fix because it's a locked version (it was, in fact, fixed in the next version of the library).  It doesn't cause a build failure, but I could and probably should suppress the error entirely.\n. Cool. What form do you get results in? Could it be run through our Sauce integration?\nPresumably we have a ton of fails at the moment?\n. @maxnordlund no, it's totally fine for you to work on this, no-one else is looking at it right now.\n. Duplicates #192 \n. Thanks John. That would be great.\n. Reopening, since #338 just added better definition around the use of third party polyfills.  We still need to add a contributor agreement.\n. Dear @jshalton,\nWITHOUT PREJUDICE\nWe have noted that you have agreed to provide a suggested contributors agreement for the Polyfill Service, and as yet have not done so, which is entirely reasonable.  We would refer you to the following relevant provisions:\n- You might be busy;\n- It may have slipped off your radar;\n- It is not technically part of your job\nIf a contributor agreement is not provided by close of business on Friday 3rd April, we reserve the right to take further action as we see fit, which may include:\n- providing inducements including but not limited to biscuits;\n- sending a polite reminder;\n- continuing to recognise the prevalence of higher priority work\nYours faithfully, etc.\n. @jshalton if you're happy to live without a contrib agreement I can just close this...\n. Added in https://github.com/Financial-Times/polyfill-service/commit/05188c36c993bb9093988fc109f2243f7443e683\n. Regarding allowing for better QA, I think @blainekasten has an interesting idea.  One way it could work would be to add a query param, prerelease=1 which would use the latest RC version of the lib if it was more recent than the latest stab;e version. This would negate the need for a QA host.  However, this assumes that the service is always stable, and the API remains identical.  Since that may not always be true I think it's safer to stick with an isolated host for QAing new rel candidates.\nRegarding continuous delivery, the problem is the need for version locking.  If a user can lock to any version of the library ever released, then each release becomes slightly larger than the last, and at some point loading all possible polyfills from all released versions into memory becomes impractical.  That's why we're keeping releases a bit more periodic.\nFinally, it seems we may need to think more about the choice of semver version numbers on releases that make potentially backwards incompatible changes to the polyfills.  However, I think @monolithed you need to appreciate that these breaking changes may not be intentional (the ones you highlight certainly aren't), and that following this suggested process with rc versions will give you the chance to verify that no accidental breaking changes have been made that disrupt your use of the library as a dependency before it is released as a stable minor version.  As a result I think this governance process should resolve your problem, do you agree?\n. OK, I think we'll adopt this and see how it goes.  Thanks for the feedback.\n. This is a dependency of haikro, which I removed from the dep list some time ago.  I'm still planning to do a release to npm and the CDN this week, if I can only find the time.\n. Sorry folks, I've got a ton of test failures now, no deploy till we fix these:\nhttps://travis-ci.org/Financial-Times/polyfill-service/builds/53358352#L821\n. Now released as 1.3.0-rc.1\n. @juandopazo @jonathantneal can you help me out here?\n. @monolithed I don't believe either of those contains guidance on this issue.  Can you quote the specific section?\n. Thanks @rauschma, that's extremely helpful.  If you don't mind, can you also suggest the best way of checking for the existence of a global?  Just evaluating the symbol name throws a referenceerror, so my usual method is:\ntypeof foo !== 'undefined'\nIs that reasonable?\n. Feature detects for polyfills, though I've now adopted the pattern of doing:\njavascript\n\"Thing\" in this\nWhere this is near-guaranteed to be a reference to the global scope because of this:\njavascript\n(function(undefined) {\n   // All polyfills\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n. The problem with that is that the polyfills are largely written by third parties, so we have to provide an execution context in which they will work.  Some attach their APIs to window, some to self, others to this.  All of those are the same if you load the polyfill into global scope in a browser window and you haven't redefined any of them.  But none are guaranteed.  See https://github.com/Financial-Times/polyfill-service/issues/352 for the full discussion if you're interested!\n. Need to merge to get CI to pass\n. Yes, a better way to do this would be to express a dependency in the geolocation config.json on the document.head polyfill (which we do have)\n. I need to get the CI passing, so am going to merge this.  Feel free to come back with a fix to the original.\n. Going to merge this so we can benefit from the improved third party polyfill rules. Contributor agreement is being tracked in https://github.com/Financial-Times/polyfill-service/issues/327\n. Could you clarify what error you're reporting here?  Did the buildsources task not work?\n. The package.json contains:\n\"prepublish\": \"grunt build\",\nSo the sources should be built as part of the npm package.  I'm afraid I'm a bit out of my depth here.\n. I've discovered that when publishing to npm, npm ignores everything in .gitignore by default, which includes the built polyfills.  I've created an npmignore that should fix it.\nhttps://github.com/Financial-Times/polyfill-service/commit/365eb6000dda40dd8dc5398f02fb837e6a3b0730\n. That was an issue in the rc, fixed in the 1.3.0 final I believe.\n. Yup, was fixed in 846843588b2f9633d9ab2dbd46f5e6052e2afc32\n. It should not be necessary to run the build scripts when installing the polyfill service as a node dependency.  Fixed in https://github.com/Financial-Times/polyfill-service/commit/365eb6000dda40dd8dc5398f02fb837e6a3b0730.\n. Is this all there is to it? Don't you also have to assign the font family to something the header will inherit from?\n. @eligrey's polyfill is objectively better than ours in at least one respect: it covers the incomplete implementations in browsers that don't support multiple classes.  See #268.\nWe do have an IE9 test suite for classList, and it's passing right now, so I'm inclined to think the error is a problem introduced by your own code, but if you have a test case showing otherwise please do post it.\n. OK.  We'll close this, but do please feel free to reopen or create a new issue if you turn up some data that points in our direction.\n. Merged.  Will be in 1.4 release.\n. Added some tests in 4f0ab0c42c8185c4845d895448955ee7fc86c488 that include a test for the case discussed here. Current lib fails, proposed change passes, so happy to merge.\nThanks for the contribution.\n. The existing config does cover all browsers, doesn't it, if you take the Union of both variants?\n. I could have sworn I fixed this, sorry.  You need to tweak your edit a bit, because you now have overlapping ranges between the default and the mutationobserver variant.  I suggest reverting the proposed change and instead extending the mutationobserver ranges to - *.\n. I believe the justification for the use of the }(this)); pattern is that the polyfills may be loaded in a worker rather than a window.  We don't want to stop the polyfills from working in a web worker.  I agree with Juan, if the polyfill wanted to set use strict, it could do so, but the reason use strict works in the way it does is to avoid breaking the web for code that already exists and would stop working if the stricter rules of use strict were applied.\nI don't have any objection to Function('return this')() if that works in everything above our baseline, however, you used Promise as your example use case, and that's interesting because we are simply copying the source of the promise polyfill from the third party repo, which uses the }(this)); pattern, so we don't have control over the use of the pattern there.\nPotentially the easiest and cleanest solution would be to add a definition of this at the top of the closure that we output when we generate the polyfill bundle:\njavascript\n(function() {\n  var this = window || self;  // <-- New line added by service\n  // All applicable polyfill sources here\n})();\nThis will solve your problem provided that you generate your autopolyfiller bundle by using the service API rather than simply reading the polyfill source files individually.  That would probably be a good idea anyway, since it would enable you to easily output a polyfill service CDN URL from autopolyfiller rather than a one-size-fits-all bundle.\n. But that assumes that window exists, and we're back to the web worker problem.  Does this work?\n``` javascript\n(function() {\n// ... polyfills\n}.call(window || self));\n```\nAlso note that you cannot apply use strict to all polyfills.  The library includes lots of third party polyfils, not all of which are compatible with strict mode.  Use strict needs to be done inside each polyfill.\n. self is commonly redefined by developers as a poor man's alternative to 'bind(this), but window is not, so why not usewindow || self?\n. Ifwindowis undefined, as I understand it the expressionwindow||selfwill return the value ofself` so I'm afraid I don't see why that wouldn't work in a web worker.\n. Ah, I see. I guess that would only happen in strict mode, but ok, I see what you mean. Let me have a play around when I get back to a screen larger than a phone.\n. OK, how about:\njavascript\n(function() {\n  var window = this, self = this;\n  // ... all polyfills\n}.call(typeof window !== 'undefined' ? window : self));\nI've tested this and it seems to work.  window will not throw a referenceerror if used with typeof, and then inside the IIFE we can redefine window and self to be equal to this.  That gives us the most flexible options for supporting third party polyfill code which might be assigning into properties of window, self or this, it's compatible with web workers, while still being able to cope with environments in which the developer has redefined self or this.\n. OK, I think the sweet spot here is to remove the use strict but otherwise follow @jonathantneal's proposal:\njavascript\n(function (undefined) {\n    // polyfills\n}).call(this || 'object' === typeof self && self || 'object' === typeof global && global || {});\n. On second thoughts, if we include this in the call(), we allow the possibility that this within the IIFE will not be a reference to the global scope.  And referring back to a previous comment, self is more likely to be overridden than window.  So I'm going with this:\njavascript\n(function (undefined) {\n    // polyfills\n}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n. Ah, this is because setImmediate doesn't even have a feature detect.  Pushed a fix.\n. Thanks so much for doing this, I was expecting to end up doing it myself.\n. OK, go for it.\n. Thanks Callum.  I'm not convinced that button is really that useful, but it points to a bigger issue of the service not working when installed from npm.  Fixed, I hope, in https://github.com/Financial-Times/polyfill-service/commit/365eb6000dda40dd8dc5398f02fb837e6a3b0730.\n. This is because we are using a Sauce Labs account to test the polyfills that's owned by the FT.  To run the CI tests, I have to push your PR to a branch of the main repo.\n. There is a way to add encrypted env vars to the travis.yml file:\nhttp://docs.travis-ci.com/user/encryption-keys/\nWe could do that, I suppose.  But then anyone would be able to run tests on our Sauce account, which just doesn't strike me as a good idea.\n. Ah, so not resolvable then.  Thanks for pointing that out.\n. Agreed, I think this pattern should be avoided. I've seen discussions on es-shim issues about CSP problems when using this.\n. As CSP becomes more popular I think this is an increasing problem.  @jonathantneal are you able to provide any advice before we go ahead and start removing these?\n. OK, I've dug into this a bit more.  Code like this:\n(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\nCould be written as:\n(global.Window = global.constructor = function Window() {}).prototype = this;\nHowever, I think this causes a memory leak, because it creates a closure over the parent scope, and because we're assigning it to a global, it will never be GCed.  Many of the other uses of new Function are in similar cases, like the constructor functions for Element, and Document.  In these cases the leak is probably not a critical problem since the enclosed scope is fairly small and very unlikely to clash with any subsequent use of the polyfilled constructor.  But there are other uses which are harder to avoid, eg setImmediate:\nif (typeof handler === \"function\") {\n    handler.apply(undefined, args);\n} else {\n    (new Function(\"\" + handler))();\n}\nThis is required because setImmediate can take a function expression as a string, just as setTimeout can, so to run it we have to construct the function.  The only alternative here would be to use setTimeout which would mean losing the optimisations that come with the setImmediate polyfill (and which are essential to support other polyfills like Promise.\nFinally, there is Picturefill, which includes:\n/*jshint evil:true */\ntry{\n    cssCache[css] = new Function(\"e\", buildStr(css))(units);\n} catch(e) {}\n/*jshint evil:false */\nThis is used in a complex process that converts a CSS string into parsable JavaScript and then creates a function from it.  Given that they've explictly opted out of a no-eval rule to write this I imagine there was no other practical method.\nSo I think my initial conclusion is: probably change the global constructors, but not much we can do about setImmediate, picturefill or future similar scenarios.\n. In the case of the empty constructors, they definitely do capture the parent scope:\n```\n(function() {\n  var a = 42;\n  window.b = function() { console.log(\"hello world\", a); };\n}());\nconsole.log(b());\n\n\n\"hello world\"  42\n```\n\n\nI tried creating them using var f = new Function(); f.name='Window' but name is read-only.\n. I've spent some more time on this and I think it's actually a waste of time.  It occurs to me that in many of these cases the new Function() syntax is being used in polyfills that are only required by browsers that don't support CSP:\n- Window\n- Document\n- Element\n- Object.create\n- matchMedia\nWe can commit as many CSP violations as we like in browsers that don't support CSP, so these are not a problem.\nFor picture, there is no feasible alternative to picturefill and there is crossover between browsers that enforce CSP and browsers that don't have picture (notably IE10-11, Edge 12, and numerous FF and Chrome, albeit all at least 10 versions old).  I've raised the issue on their repo.\nI can't see any alternative for setImmediate but it's probably OK because it essentially just cascades a CSP violation from higher up the stack - if you do setImmediate('console.log(42)') that's just as much an eval as the underlying eval that the setImmediate polyfill does in order to implement it.  If you don't pass code to setImmediate as a string, then the setImmediate polyfill doesn't run the eval, so you shouldn't hit any CSP issues.\nSo in summary, the only sticky wicket here is picture, it's a third party polyfill, it's been raised upstream, so nowt to do here.\n. Thanks, merged your suggestion\n. MDN is a bit vague on current support. Presumably you're looking for the additional support for the locales argument, rather than basic support which seems to be relatively universal?  Very happy to take a polyfill.  There are updated guidelines on contributing third party maintained polyfills in the contributor guide.\n. Is this issue covered off by our full support for the Intl polyfill and all the locales?\n. Ping @dfcreative - is our support for Intl solving this?\n. See also #497.\n. I think you're raising a point that is unrelated to the subject of this\nissue. To keep things well organised, we like to deal with only one issue\nper issue thread. If you think your point does relate to this issue, please\nhelp us understand it better. Otherwise please consider raising a new issue.\n. @evilebottnawi I think you're asking for an ability to submit some source code and have the service figure out what features you're using.  That's a great idea but I think it works best to keep the two things separate.  First, you run a tool over your source code to figure out what features you're using, and that could then generate a polyfill service URL.\nSuch a tool is https://github.com/azproduction/autopolyfiller, maintained by @azproduction.  It doesn't currently use the latest version of our polyfill library, and it generates a polyfill bundle rather than a URL to the polyfill service but I think @azproduction has plans to update it at some point.\n. I'm not opposed to these being separate polyfills, but this is probably sufficient.\n. Very happy to accept these.  Would be interested to know why Map is not polyfillable.\n. I'm working on Map, but I need the Symbol polyfill from Jake to land first.\n. Map is shipped, and we already had WeakMap and WeakSet.  Set should be fairly simple.  Let's have a new issue for that.\n. Thanks.  Do you know of any polyfill that works correctly in IE8 and offers that method?\n. @jamesnicholls what do you suggest we do about this?  I haven't checked in IE8 - is the impact bad? We can add handling for it in the polyfill to throw an exception or ignore it?  In any case a note in the polyfill docs is probably worthwhile.\n. Define it as a no-op, you mean, ie function() {} ?\n. Since the FT's browser support guidelines recommend no JavaScript execution in IE8, we won't fix this, but a community fix or an improved polyfill for XHR is welcome.\n. The use of detect results to remove unnecessary code is an optimisation, so we could start with just scrapping variants and keeping the manual targeting data.  But I'd be keen to investigate the possibility of adding that optimisation later.  After all, serving the smallest possible amount of code is one of Jonathan's original design goals, and I'm on board with that goal.  But we are certainly finding it harder to adopt third party polyfills if the parts that target separate browsers are meant to be in different variants.\nThe beacon could be an analytics style image-beacon, and it would be opt in... I'm rubbish on security so can you point out some of the more obvious nightmares?  I'm thinking it would create a URL like:\n/recordDetectData?result={\"Element.prototype.classList\": {\"basic\":true,\"multipleArgs\":false}}\nAnd that would return the usual 1x1 gif.\nHow are you using the service without using the variants?\n. > Variants are about performance and maintainability\n@jonathantneal could you give me an example of how variants improve performance and maintainability?  In terms of maintainability I see variants as a problem, not a solution, because they result in repeated code (eg see the Node.prototype.contains polyfill which repeats largely the same code across three variants), require manual targeting, and more complex config.  In terms of performance I can't see that there's any difference, provided that we have a mechanism for removing the dead code.\nOn the other hand the existence of variants prevents us supporting something lots of people are asking for.\n\nI think we can take it to the next level by letting users specify which kinds things they like to polyfill\n\n@hgl this is already supported.\n\nWe can even define a few keywords which will combine popular polyfills\n\nThis is also already supported.\n\nI tried uglifyjs when I made the suggestion. It doesn't eliminate dead code if the condition is a property of an object\n\nOK then, it can be a single symbol name:\njavascript\nif (_PolyfillDetects_multipleArgs) {\n   // insert code to polyfill multiple argument support here\n}\nI don't want to use Closure compiler, it's a Java tool which would make deploying the app significantly more complex.\nRegarding dependencies, can you guys move that to another thread?  It seems orthogonal to this discussion.\n. I'm keen to pick this up again, and convinced that eliminating variants will help us maintain the service (simpler service code, fewer polyfill files, easier adoption of third party polyfills, simpler configs).  But we can do just that, without the dead code removal, as @juandopazo suggests at the top of this thread.  I've created https://github.com/Financial-Times/polyfill-service/issues/461 to talk about scrapping variants, and we can follow that up with an issue for dead code removal separately.\n. This is because the docs use the FT's techdocs component, which in turn uses the modern jQuery and that relies on the ability to create objects with accessor functions, which is not polyfillable in IE8.  I'm idly working on removing the jQuery dependency but it's not a high priority.\n. Incidentally, for the record I don't believe the trigger of the error is in UI.js, I think it's in the external script we load from build.origami.ft.com\n. Now fixed by adding a cuts the mustard test which doesn't run any of the UI JS in IE8\n. Thanks.  Have you proved this through testing or is this data from another source?\n. Ah, OK, makes sense, thanks.\n. RC of 1.4 will be released today, barring complaints about interop with 1.3, it will go stable in a week.\n. I'm afraid I don't like this.  The dependencies in the polyfill service are not absolute - in many cases they are satisfied by the browser environment in which we run the polyfill code, and the sub-polyfill is not needed. There might be an argument for something like this for private polyfills like _enqueueMicrotask, but I don't think there's value in having two different mechanisms.  The current dependency system works well.\n. @juandopazo has some opinions on testing (see #326)\n. This is actually a duplicate of #235.\n. End goal aside, adding a polyfill for Symbol and improving the Array.from one is fine by me.\n. We've been discussing looking at a mechanism for importing most of core-js into the service.  I've created #421 to cover this.\n. @callumlocke the following are now both supported:\n- Add a Symbol polyfill.\n- Update our Array.from() polyfill to support iterables.\nWhat do you want to do with this issue now?\n. Doesn't say MIT anywhere except in the commit message, but if it matches\nthe MIT licence text, then feel free to update the polyfill metadata.\n. Based on https://github.com/Financial-Times/polyfill-service/pull/246#issuecomment-69977678 it looks like that note is incorrect.  I'll change it.\n. Change the value to \"MIT\" so it gets refected correctly in the docs.  Otherwise we assume it's CC0\n. Thanks!\n. Looks like it needs a merge from master. I'll put it on my list, and try to do it this week.\n. @caridy Branch updated.  You should also have invite to be a collaborator on the repo.  Do you see it?\n. Thanks.  Build tests are failing due to a very simple issue I merged without testing properly.  I'll sort that out and merge an update, but you're good to go in the meantime.\n. Hooray, build is now passing on this branch.\n. Yes, looks like it's fully merged into master\n. Do exactly that.  And then go through the normal RC -> release process, https://github.com/Financial-Times/polyfill-service/issues/328#issue-59561080\n. Neither CanIUse nor MDN has android support info for customevent.  Looks like our tests show that the polyfill works on 4.0 to 4.3, and it's native in 4.4 (which uses Chrome 30 for its webview).  I just found a 2.3 emulator and found the polyfill also works in that, so will configure it for Android <= 4.3\n. I'm not sure what you mean by \"API object\".  Do you mean \"DOM object\"?!\nIf so, I think I fixed it, and edited your test to clarify that language.\n. I'm not convinced that the polyfill for CustomElements is needed to solve this problem :-)\n. The sauce tests only work when they run on the Financial-Times owner, not on forks.  Happy to push this to a local branch for CI if you have a fix you can verify locally.\n. Merged in #393\n. This is actually intentional, because I don't want to have to try and solve all the problems that might result from executing polyfill code in cases where the feature exists natively, resulting in some kind of potentially unholy mishmash of native and non-native functionality being inspected by the tests.\nIn your case, the problem was shown up by the tests, you just need to use the browser in which the problem exists.\n. Ping @monolithed, @juandopazo, @matthew-andrews, @Bockit, @callumlocke \n. Sorry, errant code there, removed.  Released 1.4.0-rc.2.  Have not redeployed to QA env since the change has no effect when run as a service.\n. Barring other objections, 1.4.0-rc.2 will be released as 1.4.0 tomorrow.\n. Thanks guys. Release now in prod and npm.\n. Yes, happy to have these changed to https.\n. Thanks for the offer, @konklone, much appreciated.  It is actually a very simple change so I went ahead and did it.\n. Fixed in https://github.com/Financial-Times/polyfill-service/commit/47eeae66dda4759ffbdc9001c2b16a249ed07a55\n. Interesting.  Do you have a test case for this, and a proposed solution?  Or is there an alternative polyfill that doesn't exhibit the problem?\n. Yes, this is annoying.  See https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Event.focusin/detect-disabled.js and #213.\n. This is failing on the Promise polyfill in FF3.6, which is also failing on master, so I'm going to merge it.  I'm not sure how Promises began failing as it hasn't changed for yonks.\n. Not easily.  The service hosts the tests as part of the prod environment, eg.\nhttp://cdn.polyfill.io/test/tests?feature=Promise&mode=all\nOpen to suggestions.  Maybe if we stick with this policy a note in the package.json would be a good idea.\n. Moving the polyfills to a separate repo has been raised several times - do a quick search of the issues to read about that, but in short, it's because the service is essentially a big test framework.\nInstalling devDeps when running as a service is an interesting idea, but not really the right use of it, it just makes the install size smaller for your use case (which I do appreciate is a popular one).  It would confuse anyone trying to run it as a service in production, whether on Heroku or otherwise.\nYou could consider excluding all our dependencies from your deploy, if you are not intending to run the Node app.  mocha is actually only 1.4MB of 123MB total dependencies.\n. Works for me:\nhttp://cdn.polyfill.io/v1/polyfill.js?features=Element.prototype.closest&ua=chrome/40\n``` javascript\n * UA detected: chrome/40.0.0\n * Features requested: Element.prototype.closest\n * Library version: latest\n * \n * - Element.prototype.closest, License: CC0  */\n(function(undefined) {\n// Element.prototype.closest\nElement.prototype.closest = function closest(selector) {\n    var node = this;\nwhile (node) {\n    if (node.matches(selector)) return node;\n    else node = node.parentElement;\n}\n\nreturn null;\n\n};\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```\n. Yes, we'd very much welcome that.\n. PR is #695, but it has some failing tests.  FT doesn't need it, so we're probably going to close it, but it's close, so if you have an interest, you could pick it up and finish it off?\n. @hipkiss91 are you still intending to work on this?. That issue aliases all versions of phantom to Safari 5, which doesn't receive the defineProperty polyfill. So the problem here is either:\na) Safari 5 does have defineProperty but Phantom does not, which means the problem is the aliasing\nb) Neither Safari nor phantom have it, which means we should add targeting for those browsers (but our tests show that defineProperty is native in Saf 5)\nc) Phantom has it, and you are not detecting it / have a bug in your code?\n. @wheresrhys I'm closing this for lack of activity, but if you want to follow up you'd need to get some support data for Phantom so we can action it.\n. Normally, these gaps exist because the polyfills we are using are written by third parties that did not extend support down to our baseline.  I don't personally have the time to ensure every polyfill works down to baseline - especially as the FT's internal baseline is a lot higher than the one the polyfill service uses.  But contributions that improve polyfill compatibility in older UAs are always gratefully received - especially when they are pushed upstream first.\n. We chatted on Slack - turns out the polyfill was not included in your features list.\n. Other than the comments I've raised I see no reason not to accept this, though I don't think it's worth including this in the default set.\n. Afraid I can't work out what you're suggesting here.  That line just tests typeof screen.orientation === 'string', and I can't see how that helps polyfill webkit/blink.\n. OK, makes sense.  Happy to have a PR that changes the Chrome behaviour to the spec behaviour\n. See #403\n. Looks fine.  Could put it in the default set though it's not an ideal implementation - it doesn't update as the screen orientation changes, and I prefer to only make polyfills default if they are complete.\n. Your initial example is doing the UA detection correctly - you supplied an IE7 UA and that's what it detected.  You do have to provide the features list, and it you don't the list is empty - the docs are wrong on that, I'll fix.\n. https://cdn.polyfill.io/v2/polyfill.js?ua=ie_mob/10&features=CustomEvent returns the CE polyfill for ie mobile. And it's also in the default set so https://cdn.polyfill.io/v2/polyfill.js?ua=ie_mob/10 returns it too.\nAre we misrecognising the ie_mob UA?  If so could you raise an issue for that?  Closing this one.\n. That makes much more sense :-)\n. We'd be very keen to have a good polyfill for this in the collection\n. @jonathantneal will you be doing this?\n. https://github.com/barberboy/dom-elements\n. I think I'll take this on.\n. This has been removed from the WHATWG spec:\nhttps://github.com/whatwg/dom/commit/10b6cf1ba02806220d5461a3bdb7939728b73635\nAnd to my knowledge has never been in the W3C spec.  This is a bit of a shame, hopefully it will come back, but in the meantime it's not really our business to polyfill things that are not specced.\n. We have very few polyfills that target ios_chr.  It's not a platform that gets much love from us since we have a vanishingly small number of users using it.  We'd certainly welcome some help expanding the targeting of polyfills to benefit Chrome on iOS.\n. No, sorry - but we'll do our best to make a RC today, and when it does go live it'll be on 1.5\n. Thanks @caridy.  Some thoughts:\n- The import mechanism seems like something that we might want to run for other polyfills - I know of several that are imported from external repos (manually at the moment) and being able to update them would be good.  Could we maybe consider adding an update.task.js file as a generic solution to this problem, as part of the polyfill files?  Then a generic task could \n- Intl doesn't strike me as something that should be a project dependency, unless we plan to import it at build time and not commit it to the library.  But I'm in favour of removing the dependency and handling the downloading of the source as part of the update task (especially when taken with the point above, because other polyfills may need to be downloaded via different mechanisms)\n- I don't think the order of locales is important and don't propose we do anything about it. The service sorts the output in dependency graph order, so items that have no dependency relationship with one another may appear in either order.\nI haven't tried running it yet - could you push it to a branch in the Financial-Times fork so I have push access to it and we can run the CI process?\n. It's mainly an issue of encapsulating polyfill related stuff in the relevant part of the polyfill library structure.  I don't like having Intl as a top level project dep because it relates to only one specific polyfill in the library, it is not a generic behaviour.  Same applies to the changes to the gruntfile and the addition of a polyfill specific task - all these things put Intl-related stuff outside of the Intil directory in polyfills.\nWhat I'm proposing is something like this:\npolyfills/\n    Intl/\n        config.json\n        update.task.js   <-- Grunt task\n        polyfill.js\n        locales/\n            locale1\n            localen\nThen we change the global Gruntfile to import all the tasks from the polyfills so you could do something like grunt updatelibrary to run all the update tasks.\nI actually didn't address the speed of grunt dev, which is probably where we're misunderstanding one another, sorry.  On that point, the slowness is indeed probably in the minification. The buildsources task does two slow things: minification and transpilation of ES6, but it only does the latter for polyfills written using ES6 syntax which declare that in their config.json.  So in practice, it's minification.\nThe solution is probably to be smarter about minifying only where the source is not already minified.  How can we detect that?  Or should there be an opt-out property explicit in config.json?\n. OK, rather than external, I suggest a build property in config.json, to allow polyfills to control to some extent how the service should build them.  We can put minify in there as a first property.  I'd move esversion in there too, and other contributors are looking at enabling browserifying of commonJS-packaged polyfills so that would be another build opt-in.\n{\n  browsers: { ... }.\n  build: {\n    minify: false,    <-- defaults to true\n    esversion: 6,    <-- defaults to 5\n    module: \"commonjs\"   <-- defaults to 'global'\n  }\n}\nWhat do you think?\nRegarding the devDependencies, I don't strongly object to having Intl as a devDependency provided that everything else is in the intl polyfill directory and the top level grunt tasks are generic.  I see your point that any custom tasks embedded with polyfills are going to want to use npm modules that we don't already have as project dependencies, so no reason not to include the polyfill source itself as well.\nI'd be happy to help with this but it needs to be on a branch I can push to.  Can we collaborate in the financial-times org?  You have an outstanding invite to be a collaborator.\n. Sorry for delay.  I'm up to my ears prepping for edgeconf.com.  Can you give me a couple of days?\n. This looks really good.  Thanks!\nCI will work if you push it to a branch in the Financial-Times org.\n. I'm getting 3 test failures, in IE 6, 7 and 8.\n. If you have a Sauce Labs account and you set the appropriate env vars (SAUCE_USER_NAME, SAUCE_API_KEY) you can run grunt ci to use Sauce to run tests across our key browser targets.  Otherwise just fire up some VMs :-)\n. Looks good.  See #423 for local PR.\n. Looks pretty safe.  I've said that before... :-)\n. Looks fairly straightforward.  Go for it.\n. Closing this feature request issue because it's old and there are no moves to implement this.  We would welcome this feature though, so if you are keen on seeing this in the polyfill service, head on over to the contributor's guide for all the information you need. We are always very happy to help beginners.\n. Can't find anything definitive on the subject.  Nokia browser for symbian (versions up to 8.3) seems to be based on webkit.  8.5 is cited here.  Interestingly our normalisation engine describes it as nokia/9, picking up on the NokiaN9 bit.\nIf we go with the webkit version, then the best equivalent is Safari 5.  But I would be happy to just not support polyfilling this browser.  Let's leave this one to implement if/when we support client-side detects.\n. > CI is failing due to a missing key\nThat was why you needed to PR it in a branch within the FT fork.\n. The MDN polyfill also fails on this case, but the native implementation in Firefox works.  It's tough to make this work without other parts of ES6.  Eg you could do:\nvar array = [...set];\n. @JakeChampion I was thinking about this one this morning.  Our Array.from implementation assumes array-like things are ES5 constructs, and normalises them to an object with a length and elements as properties.  Whereas the core-js version also checks whether the object is iterable.  Can we do that or would we need to polyfill iterators to make that work?  What do you think?\n. Fixed by #665\n. We need a build.module property added to config.json so that a module can specify it has a commonjs interface and be built appropriately.  I'm not sure whether we would need to go as far as implementing require, or whether it's just a case of converting module.exports declarations into assignments to the appropriate global.\nI don't have time to work on this right now but if anyone wants to do it, your starting point is the buildsources task.\n. This work depended on supporting a commonjs build step, which caused significant problems. We don't have any plans to support commonjs right now, and there is also the issue of core-js compatiblity issues with other libraries (see lodash) which suggests it would be a risky move to push it as a polyfill solution.  Let's close this.. Hi @zarjay, could you do the following to help us diagnose this?\n1. Change the URL to drop the .min and confirm whether the problem is still reproducible\n2. If it is, copy the comment at the top of the resulting HTTP response.  In IE10 it should look like this:\n/* For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: ie/10.0.0\n * Features requested: Promise,default\n * Library version: latest\n * \n * - _enqueueMicrotask, License: CC0  (required by \"Promise\")\n * - Promise, License: MIT \n * - Event, License: CC0  (required by \"default\", \"CustomEvent\")\n * - CustomEvent, License: CC0  (required by \"default\")\n * - DOMTokenList-toggle, License: CC0  (required by \"default\")\n * - Element.prototype.matches-ms, License: CC0  (required by \"default\", \"Element.prototype.closest\")\n * - Element.prototype.closest, License: CC0  (required by \"default\")\n * - Object.assign, License: CC0  (required by \"default\")\n * - String.prototype.includes, License: CC0  (required by \"default\") */\n. Ah, easy fix - it looks like one of our 'private polyfills' (essentially functions that we share between polyfills but which do not emulate native features) did not list every browser in its config correctly.  Private polyfills must list every browser because by definition no browser has the feature.\nWill be released in 1.5.\n. @mehcode pinging @JakeChampion to see where he got to with this.\n. We had a shrinkwrap file back in the day.  Found it really annoying for contributors, so got rid of it.\n. That makes sense. Ok, let's give it another go.\n. Looks fine to me\n. We no longer have an enqueuemicrotask polyfill\n. We continued to support setImmediate for compatibility, because once we have a polyfill it's hard to remove it. Also the Promise polyfill we're using piggybacks on a setImmediate implementation, so we were previously having to modify the polyfill to hook it up to enqueueMicrotask.  Just using setImmediate means we can modify the polyfill less.\n. We'd welcome this polyfill\n. I just closed it because we closed the PR.  But if you bring in a new polyfill that meets the current spec, go for it!\n. 1.5 is now live.\n. Will test on local branch for CI\n. This needed tests, and having added them I found that the IE8 variant of the polyfill wasn't working.  Have used the generic impl in all IEs, which is working and passing my rudimentary tests.\nSee https://github.com/Financial-Times/polyfill-service/pull/439\n. I'm wondering if a never modifier is the right semantic flag for this, or whether it would be better to have an exclude parameter, so the URL would be more like:\n?features=default,fetch&exclude=Promise\nWhat do you think? @callumlocke \n. You don't need to specifically exclude intl because it's not included by\ndefault anyway (precisely because it's large). The features page of the\nwebsite has a star against all the default features.\n. Including all features is generally a bad idea.  We could at any moment ship another 17MB polyfill and because you only excluded intl, you'll get the new huge one.  I do think Callum's use case is reasonable, but I'm not going to get to this right now.\n. > it really doesn't look like I could just specify all the top-level objects I wanted polyfills for\nWhy not?  You can do ?features=Array.prototype.forEach,document.querySelector,navigator.geoLocation etc.  Just list all the features you want.\n. Well spotted.  This will have been introduced when we reorganised the repo, changes which haven't been published yet, so the live app lags behind the state of the repo.  Should resolve itself with the release of 1.5.\n. Actually come to think of it (and look at the actual code) this does need a fix.\n. Fixed by https://github.com/Financial-Times/polyfill-service/pull/458\n. Thanks Jonathan.  Aside from the minor issues above, are there any tests that can be added?  We like to have a test for at least the main core use cases, so that our test framework can check browser compatibility.\n. Also, it would be good to have an update task.  This is a new feature that enables third party polyfills to be kept up to date automatically.  I've just pushed some documentation for how to create an update task in https://github.com/Financial-Times/polyfill-service/commit/d7cc2cd0a2a1d7afbad6b706d77172502080433d.\nThere's a good example of an existing task in https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Intl/update.task.js\n. Implemented in #448\n. Thanks for this.  Can you add a test that fails without this patch?\n. Thanks.  Meanwhile I've accepted the ; fix, committed to master in 41d0227888e8c04f308a9e2b3303dc84fc054892\n. Ping @evilebottnawi, will you be able to do the test for this?\n. I'd be happy to accept this as a PR, though remember to provide some tests (just one or two is fine), and make sure they pass locally.\nAlso note that in your example you're defining a local console in the closure which doesn't affect window.console.  This pattern works well:\nthis.console = (function(window) { \n   ...\n}(this));\n. This seems like a nice improvement to the architecture of the app.  Will review in detail shortly.\n. #169\n. It would help a lot if you could check the CI passes when submitting a PR.\nIn this case there's a test case that depends on the previous config of queryselector.  I've updated it.\n. OK, currently fails the detect in all browsers :-)\n@jonathan-fielding try running the service with grunt dev and then load http://localhost:3000/test/tests?feature=Picture&mode=targeted in Safari\n. @jonathan-fielding one other thing I've just realised - this needs to be called HTMLPictureElement not Picture.\n. Asked Jonathan to remove the tests because they are testing the polyfill's proprietary API, not the spec.\n. That UA normalises to firefox/32.0.0. According to config for the Intl polyfill, it is only served to FF up to 28. If FFOS is using the FF32 engine, it's odd that it's not exhibiting the same behaviour as that version of FF.\nWe don't separately split out FFOS as a targetable browser, and probably won't as it will add a large maintenance overhead.  Perhaps someone from Mozilla can clarify what's going on here?\n. @wilsonpage hi Wilson.  Essentially, @kennethaa is saying that Intl is not available on FFOS 32, whereas MDN (and as a result, us too) say that it is, so we don't serve a polyfill to it.\n. Can the original author of this issue provide a specific build and screenshot of the test URL?http://cdn.polyfill.io/test/tests?feature=Intl\n. Looking for a screenshot of the test result, something like:\n\nAlso are you using a particular device for this testing?  Maybe give us to FFOS build number?  I don't know what else to suggest - we can't target this polyfill at FF32 because Intl is supported by desktop FF 32.\n. So it does appear to pass the tests...\n. @eek if those are iOS devices can you raise that as a separate issue?\n. Closing this since it appears that the FFOS device is passing the Intl tests.  @kennethaa the screenshot you have with the error shows it occurring on line 11,331 - so in the absence of a reduced test case and with our own tests passing on your device we'll assume the fault is in your code. Feel free to reopen the issue if you can add a test to our test suite that fails under your conditions.\n. Looks like browser config is incomplete - https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/setImmediate/config.json.  Can you update, do a PR and check CI?\n. whoops, didn't spot the xref.  Thanks.\n. @callumlocke this looks fine, but would you mind doing it on a branch within the FT account?  Then the CI will work and I can merge it\n. Thanks, clearly this is a far too aggressive implementation, and we'll update it.\nI'm curious about why this was seen in chrome. The default behaviour of the polyfill service is to vary output by user agent, and chrome would not receive this polyfill (because it doesn't need it).\nDo you know the cdn.polyfill.io URL of the script resource that served this code to chrome? It's also important to know whether the URL contains a libVersion argument, because if it does a release on our part will not solve the problem for site developers who have chosen to lock their library version.\n. @slightlyoff the reason it doesn't try using raf or Promises is that neither of those technologies exist in IE7, which this code is designed to run in.  It's even classified as a UA-specific implementation, so the only reason you'd see this in chrome is if the developer overrode the default UA detection or the end user was spoofing an IE7 UA in Chrome.\nFor example, this script URL would load that code unconditionally:\nhttps://cdn.polyfill.io/v1/polyfill.js?features=Element&ua=ie/7\nIE7 is unsupported by the FT.  This polyfill came from an original implementation by @jonathantneal but it looks like I refactored it a bit some time ago.  I've proposed in https://github.com/Financial-Times/polyfill-service/issues/456 to drop a load of browsers from the service, but in the meantime I'll increase the timeout and add a limit to the number of iterations.\n. OK, seems I let Alex up the garden path a bit on this - the problem is not in the Element constructor polyfill, though the change there is sensible, but in _enqueueMicrotask.\n. Looks like the enqueueMicrotask polyfill was replaced by a better implementation in a recent release of the service, but the library that the Next FT site is using is locked to a previous version of the code.  I've nudged the Next team to update their dependencies, mitigated the effect of the remaining tight setInterval loop, and am tracking the idea of removing it in #456.\n. We'd welcome it.  You can find our contribution guidelines at http://cdn.polyfill.io/v1/docs/contributing\n. That does look wrong.  I'll regenerate the compat data.\n. Fixed in https://github.com/Financial-Times/polyfill-service/commit/700c9007826797fb3591461d713330a9e28e55d1\n. OK, no problem.  I'm going to give Edge the browser name ie, meaning \"I am Edge\".\n. Fixed in https://github.com/Financial-Times/polyfill-service/commit/9257d34b891bb4b1c579c8dc13c705696226f6e3\n. @samgiles to check that we're OK to set up a log drain from Fastly to FT splunk so that we can analyse the usage stats from our actual data.  Also @olizh do you have an opinion?  Does FTC use the service, and if so are you adopting the cuts the mustard technique for IE < 9 or do you still run JS in older browsers?\n. @jonathantneal Just to emphasise that I agree the 0.5% should not be ignored.  My argument is that it's inappropriate to serve JavaScript to those users, and therefore pointless trying to polyfill JavaScript features.\n. @Rob-pw if others are happy to help maintain them then that's fine, but there doesn't seem to be much enthusiasm for that, and if it's just me, I would be fine to just not run any JavaScript in Safari 5.\n. I think we take the plunge in 3.4 and drop IE 6, Safari 3 and Android 2. Maybe add something to the docs about cuts the mustard.\n. See #687\n. > Could there be an argument for this: if a particular UA is not mentioned in the config.json at all, the server concludes it might not have the feature, and gives it a gated version of the polyfill?\nArguably, yes.  But we're trying to be fairly conservative.\nThanks for this - looks good to me.\n. Oh, I messed around with the tracks setting a bit, which might have broken something. I'll make sure the tests pass before I assign back to you, sorry.\n. Fixed the tests, Sam seems happy on Slack.\n. Suspect this is an evolved mistake - @jonathantneal orignally configured it as just v10, when there probably wasn't a v11. Then it became * - 10, but actually Promises aren't supported by any version of IE mob, so * covers it nicely.\n. Bit of a delay on this while we sort out a memory use issue.  Memory use is climbing due to support for libVersion and caching of UA lookups.  A refactor is solving this and a new RC will be made shortly.\n. RC2 is now on qa.polyfill.io\n. Prepublish task might be broken, thanks for that.\nAlso have just realised that the async refactor has changed the Node API, so we'll need to make this a 2.0 release.\n. 2.0.0-rc.1 released.  This issue updated with latest release notes.\n. Pushed to prod.\n. The libVersion param has been deprecated and is not supported in v2 of the API, and v1 will be turned off in the new year so I will be going ahead with this.  @matthew-andrews @wheresrhys any thoughts?\n. Done in #559\n. See https://github.com/Financial-Times/polyfill-service/pull/475\n. Nice, thanks!\n. No impact on polyfill output or API, so I'm going to sneak this into 1.6 without a new RC.\n. Updated to latest master to get CI working\n. Often, these issues turn out to be problems in host site code.  To help us debug this problem, it would be appreciated if you could add a test to our test suite for this polyfill that fails under the conditions you describe.\nFailing that, create a page that includes the polyfill service and just enough additional code to demonstrate the problem (ideally not more than a dozen lines of markup and JS)\n. Most code bins/pens have an output mode that doesn't load the editor UI so that avoids any browser support problems of the app itself.  I'm afraid we aren't going to dig through the minified version of your library but if you can extract the code that triggers the issue I'd be glad to take a look.\n. I'm afraid I can't reproduce the issue.\nAgain, I'd suggest reducing the problem.  You have thousands of lines of code in this page that is not coming from the polyfill service, and you're also loading multiple polyfills.  If you can find a problem state that requires only a few lines of code and a single polyfill, we'd be happy to look into that.\nAlternatively, others may be willing to offer commercial support if you'd like someone else to do the debugging for you.\n. this polyfill has never been in the default set.  It's easy enough to check:\nhttps://github.com/Financial-Times/polyfill-service/commits/master/polyfills/getComputedStyle/config.json\nIt's a fairly large polyfill, which is why it's not there by default.\n. Confirmed, it became native in 45. Thanks @phaistonian.\n. It looks like we currently target Array.from to all versions of chrome.  But it's not included by default, which is probably why you aren't getting it.  Treating this bug as the failure to suppress the polyfill on Chrome 45, which does support the feature natively.\n. Thanks for the bug report.  Can you help us out with:\n- what is the symptom of the problem?\n- do our tests pass? (/test/tests?feature=Intl)\n- are there any errors reported to the console?\n- can you provide the CDN URL you are using to test?\n. @shivjm can we have the UA string of the device you are testing in?\n. The version you need is currently a release candidate on the QA CDN:\nhttp://qa.polyfill.io/v1/polyfill.js?unknown=polyfill&features=Promise,fetch&ua=Mozilla/5.0%20(Windows%20NT%2010.0)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/42.0.2311.135%20Safari/537.36%20Edge/12.10136\nHowever, we are pushing a major async refactor into this to sort out a memory issue, so there'll be another RC before we can go live.\n. See https://github.com/Financial-Times/polyfill-service/issues/460\n. Do you know that these polyfills work in IE mobile?\nAlso note that some version constraints are less-than, so in some cases you are, for example, applying a polyfill to ie_mob < 11, which would include versions under 9.\n. Yes, that would be fine.  It wouldbe useful if you could also drop some screenshots of your test results.\n. OK, LGTM,\n. See #317\n. Erroring in IE6 and 7\n\nThis is because the XHR polyfill creates an object that doesn't have a prototype, and the new code in Event uses instanceof.  Needs to be slightly more defensive.\n. This has been raised before in relation to FFOS here: https://github.com/Financial-Times/polyfill-service/issues/449.  There seems to be something weird going on. I have FF38 handy, so I typed Intl in the console and it is definitely defined:\n\nThe response from the polyfill service is totally expected because we believe that Firefox supports Intl from version 29:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Intl/config.json\n. Please do :-)\n. Hm, so are you suggesting that we recognise firefox_mobile as a separate UA, but apply firefox polyfills to firefox_mobile UAs as well?\nIf so, I don't like it :-)  Seems very arbitrary, and makes it a lot harder for newcomers to understand the matching logic.\n. There's a decent amount of script on that page.  Can you reproduce in a JSBin with just the polyfill service and a couple of lines of code to invoke the error?\n. @samgiles I've re-added you to the FT org just as a member of the polyfill service collaborators group, so you should be able to create local branches (and please do consider yourself a committer).  Do you want this in 2.0.0?\nThe leaver process seems to be quite efficient at removing people from Github :-)\n. OK. Looks like you've changed whitespace from tabs to spaces.\n. polyfills/Array/from/config.json is an example that's gone from tabs to spaces. I take your point, but since the standard is tabs, this PR should at least not introduce corrections that go the wrong way :-)\n. Ok, looks fine. I'm going to wait and deploy 2.0.0 first as we're nearing the end of the RC period, so after that I'll merge this asn release it as part of 2.1.\n. 2.0.0 released.  Merging this for 2.1\n. Cross ref: #477\n. Did you say on twitter, that IE11 is passing the tests without the polyfill loaded?  If so, we need to fix the test so that we can be more confident that the polyfill is (and continues to be) effective in IE/Edge\n. Ah, gotcha, yes when test suite is run in targeted mode we skip tests for browsers that we don't think we have a polyfill for. But our creature grid already shows ie11 is polyfillable, meaning the tests fail without the polyfill and pass with it, so you're right we just need to correct the config.\n. Restarted.\nSauce has been really flakey for ages.  I do have an open source account from Browserstack that they're keen for us to use but I haven't found time yet to port the test runner to work with browserstack.\n. OK, we're good here.\n. @ivoreis thanks for this - could you add a test for it as well?\n. I'm not sure this is polyfillable.  We can obviously ship implementations of the SHA algorithms, but is it possible to stop a browser loading and parsing a script that has been written into the markup?\n. I'm not sure I understand what you mean, sorry.  HTML5 parsers ignore all unknown attributes automatically so if we're not doing anything with the integrity attribute there should be no need to explicitly 'support' it...\n. Thanks David, that is really very helpful, and I'd agree with you.\n. What was the problem?  I can't see an issue with it from what you've posted...\n. Thanks for this issue report.  I'm happy to investigate, but to help me reproduce, could you give me a reduced test case, ideally in a jsbin.com bin?  The bin should include the polyfill service script tag that you are using, and either no other code or the minimum amount of code needed to trigger the error.\n. Ah yes, looking at the screenshot, that's an error we're throwing on purpose.  Unfortunately IE8's devtools doesn't show you the text of the exception message!  I have added a note to our docs to warn people about this (#681).\n. @thednp sorry we didn't reply to this at the time.  To look into it we ideally need some test cases - can you post some example code, ideally just including the polyfill service with a single polyfill, and a couple of lines of code to trigger the problem you want to demonstrate.\n. Ok, thanks, I appreciate it's hard to be more specific after so much time.  I think we would need to narrow this down to a specific polyfill to investigate further.\n. Released\n. Whoops, thanks for that.\n. Yes, we do identify opera mini as op_mini.  But I suspect the targeting of our polyfills is very incomplete.  Please do add the additional metadata that is needed to target the right polyfills at Opera Mini.\n. Sent a quick note to Bruce Lawson.\n. We only target localstorage at IE currently:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/localStorage/config.json\nI don't know if our LS polyfill is effective in Opera Mini, or what it would achieve. I would generally advocate not using JS at all in proxy browsers like Opera Mini.  But if the polyfill does work, feel free to do a PR to add opera mini targeting.\nContribution guidelines:\nhttp://cdn.polyfill.io/v2/docs/contributing\n. Closing this since we do support Opera Mini so that question seems well answered.\n. My reading of the spec suggests that SVGElement should extend Element - is this a bug in IE or my misunderstanding of the spec?\n. Closing on assumption that my read of the spec is correct and the polyfill is therefore spec-compliant where the IR behaviour is not.. Hi @jhiswin, thanks for this.  The polyfill service uses the useragent module to identify browers, which ultimately uses the browscap data.  This does not appear to include 360safe, so someone with knowledge of that browser will need to add it to browscap before we can support it in the polyfill service.\n. Ultimately it uses browscap. Start with an issue there.\n. Promise support in chrome sounds unrelated to 360safe, so please raise that\nas a fresh issue. Happy to look into it.\n. OK, if we idenfity 360safe as chrome, then that's fine.\n. Yes it does:\nhttp://cdn.polyfill.io/v2/polyfill.js?ua=chrome/31&features=Promise\nIt's just not in the default set, because it's big.  See the docs to find out which polyfills are served by default.\n. I think we're right here already actually.  The config says we serve the polyfill to * - 31, and MDN says Promises became native in 32.  The numbers are inclusive - 31 in our config means everything < 32, following standard semver conventions.\n. See #501.  Re browserstack, I have been thinking of moving over from Sauce to Browserstack but I don\\t know anything about their platform.  If you'd like to submit a PR to add a browserstack.js task to tasks/ that would be super appreciated.  The current CI task is sauce.js\n. Thanks @mathiasbynens.  Can I clarify what versions mean in relation to mini?  Is everyone on the latest version regardless of the age of their client, or is the client version used to determine which version of the server component to run?\nSo in practical terms, what does it mean to say 'users of Opera mini 5'?\n. OK, I think I've gotten my head around this:\n- When I request a polyfill bundle from the service through Opera Mini on a generic fruit based telecommunications device (model 6), I get identified as op_mini/12.0.0\n- According to the Opera Mini request headers doc, this appears to be parsing correctly\n- The last server upgrade was in March 2015, and all Opera Mini users will be on the same version\n- This PR targets Opera Mini up to v11, which no-one will be using\nSo it seems to make sense to me for all our Opera Mini targets to be *, unless the polyfill is for something related to the core rendering engine, in which case we can set it to the presto version in which that feature is introduced and then we should automatically stop serving the polyfill once the Big Machine is updated to a version of Presto greater than that.\nBut for localStorage, it's presumably not in the rendering engine but in your JS engine, which I imagine is very custom for Mini and not comparable with a desktop version series.\nSo, TLDR: this should probably be *, not 5 - 11.  WDYT?\n. Paging @brucelawson and @mathiasbynens see update above (soz for not mentioning you in it)\n. @mathiasbynens can you change it then?  This PR in in your fork.\n. The high response times might be resulting from a blocked event loop, in which case maybe https://www.npmjs.com/package/blocked might be useful to debug this.\n. Will open more specific issues for this\n. An interesting example of running Browserstack on Travis here:\nhttps://travis-ci.org/9ikhan/travis-browserstack-example\nLooks like the tunnel is set up via shell commands, which is actually quite a nice separation of concerns, so potentially we could simplify the saucelabs.js task. I've not been able to find any docs that show how to use webdriver directly with browserstack though.\n. We identify both of those UA identifiers as chrome/34, and do not serve the Intl polyfill.  Since we use the useragent npm module for UA identification, we'd need to either recognise it as a separate browser, or alias it to a browser that matches its behaviour more closely.\n. The UA referenced in this issue is now being recognised as samsung internet/2.1.0. If someone can figure out the closest alias for this in the families that we support, then we could do something there.  An imperfect but reasonable starting point would be to alias samsung internet to early versions of Chrome, which would mean potentially serving unnecessary polyfills, but false positives here are much less important than false negatives. And aliasing is cheap.  Maintaining a whole new family is expensive.\nTake a look at https://github.com/Financial-Times/polyfill-service/blob/master/lib/UA.js#L45.\n. @AdaRoseEdwards Problem is Chrome has had Intl since 22 (http://caniuse.com/#search=intl), so maybe the SS fork removed support for Intl, somehow?  Anyway basically the solution is simply to choose a sufficiently old version of Chrome.\n@torgo do you think we could get some official determination on this from Samsung as a stopgap until we have proper support data?  It's very simple for us to say 'treat version X of SB as an alias of version Y of Chrome', and it adds no maintenance overhead, so if there's a version combination of Chrome and SB where SB's featureset is a superset of Chrome's, we can use that for now and the only issue is that we will over-polyfill Samsung.\nI really want to fix this as we have a fair number of people reporting it. I'll put this out as a suggestion:\nsamsung internet/2.1.0 == chrome/21\nWDYT?\n. if we identify the browser as chrome already an alias won't help, as we'd be changing the targeting for chrome as well. The solution is either to submit a PR to the ua-core project (if those early versions have any distinguishing characteristics in the UA at all), to make them distinguishable, or serve Intl to chrome < 34.  I'm reluctant to do that because it's a large polyfill and Chrome doesn't need it after 24.\nThat said, serving it to an extra ten versions of Chrome that virtually no-one actually uses (due to auto-update) is not really a big deal...\nWhy are there so many Samsung 2.1s in the wild?  Does Samsung have an auto-update mechanism?\n. Thanks!\n. Not waiting for CI: None of our CI tests are granular enough with browser versions to be affected by this change.\n. Deployed.\n. Ooh, thanks.  Can you add a test maybe for both the add and remove listeners?\n. @donatasbacius doodlemoonch if one of you could sort out a couple of tests here that would be appreciated.\n. Seems pointless to keep this hanging around.\n. #84 \n. Yes please.  @jonathan-fielding also mentioned that he was interested in working on this.\n. https://github.com/Financial-Times/polyfill-service/pull/531\n. We'd certainly welcome a submission that adds this polyfill.\n. @Ikkyu-os well volunteered :-)  We really appreciate your help.\nContributor guide is here: http://cdn.polyfill.io/v2/docs/contributing\n. @Ikkyu-os are you still working on this?\n. This happens when you combine targeted test mode with a polyfill that is not targeted to the current browser.  Try either:\n- mode=all; or\n- Update your config.json to target more browsers\nIt looks from your config like it ought to be serving to IE, so I don't know why that's not happening.  Is your IE VM definitely being recognised as ie/8?\nFinally, we seem to often have issues with the <= semver operator. We encourage use of < or - instead.\n. Hm, that's weird. I think your earlier issues were related to directory creation as well, right? So it's possible that this is a Windows thing.  Your __dist directory should build flat:\n\n. @jonathan-fielding I haven't forgotten about this but if there's no viable feature detect I don't think we can have it in the service.  What do you want to do here?\n. OK, let me look at this a bit more closely then.\n1. The polyfill puts two very generically named functions into the parent scope - embed and loadreadystatechange.  Other polyfills could easily define similarly named functions.  The polyfill should define these inside of a closure and it actually need not export anything.\n2. It uses a very tight loop in browsers that do not support requestAnimationFrame, firing timer events every 17ms.  We would never want a polyfill that does timer stuff that aggressively to be in the default set, and at the very least it needs a warning note in the config.json.\n3. The name is wrong, because there's no JavaScript global called SVGExternalContent.  You could call it ~svg-external-content which is the convention for polyfills that target features without an API.  The name does seem descriptive enough.\n4. I'm still bothered by the inability to detect.  People who use the always flag because they want to bundle the polyfills with their code will end up with a pointless tight raf loop in their code, and maybe it would even disrupt the native implementation, not sure.\nOn balance I think (2) and (4) mean I'm unhappy to accept this polyfill in its current form. Maybe @jonathantneal would consider revising it a bit.\n. I'd say we have just as many gaps if not more than datasets like caniuse.  I did have a brief email exchange with @fyrd last year but it didn't amount to any closer integration at the time.  I'll ping him again to see if he's interested in talking again.  I'm not convinced an API in the service makes sense, but using the data to enhance a more canonical dataset like caniuse definitely does.\n. Sent Alexis an email but didn't get a reply.\n. This is covered by CI - need a local test branch.\n. Nope, just a note-to-self\n. Ah, sorry Darren, didn't realise you had already done this in a local branch.\nThere is a test failure in IE8:\nFailed tests:\n - ie 8 (Sauce results: https://saucelabs.com/tests/7189cee7ebe046ec8e698450ccdc6a0f)\n    -> HTMLPictureElement\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=HTMLPictureElement\nBrowsers tested with no failures: chrome/46, chrome/35, firefox/41, firefox/30, ie/12, ie/11, ie/10, ie/9, ie/7, ie/6, safari/9, safari/8, android/4.4\n\n. Ping @ironsidevsquincy \n. There's a guide to testing in the contrib guide: http://cdn.polyfill.io/v2/docs/contributing#running-tests\nCould you try running the picture tests on IE8?\n. Here's the issue, we discussed it a bit here:\nhttps://github.com/Financial-Times/polyfill-service/pull/448\nAnd then we quizzed Scott on twitter:\nhttps://twitter.com/JonthanFielding/status/627121322989121536\nIn summary, the polyfill does not populate HTMLPictureElement, but does add srcset and sizes to the <source> element, so that detect should be good for both the native and the polyfilled variants.  The fact that it's failing suggests that maybe the polyfill isn't working completely in IE8.  @ironsidevsquincy why are we trying to use this in IE8 anyway, doesn't Next FT start JS support at IE9?\n. So it seems our only option is to chuck in the proprietary API and make the detect something like:\n'HTMLPictureElement' in this || 'picturefill' in this\n. Look fine in principle.  I'm phasing out variants, so can you combine these into a single polyfill that detects mozVisibilityState and webkitVisibilityState and acts accordingly?  Suspect you can remove much of the repetition.\n. It's a problem with Sauce. I can't get to the bottom of it.\n. I'll run the tests (which Sauce seems to be OK with from my local env).\n. Test failure on Android 4.4\n\n. CI passing now (Travis not working)\n. You can already run the tests for a single polyfill in a single local browser.  The thing I think you want to do is run a test on one polyfill using Sauce, right?\n. ok, I'll add it.  To run a test on a single polyfill, just load eg. /test/test?feature=Promise&mode=targeted\n. The issue here is misidentification of Firefox mobile as Android.  We use the ua-parser module to identify browsers so this issue could be reported there.  Also Mozillians like @samgiles might be interested.\nIf this UA string were recognised as firefox mobile, we would serve the Intl polyfill to it.\n. Hmm, according to caniuse iOS added support for raf in 6.1, so this should be <= 6.0.  What tests have you done?\n. OK, understood.\nWhat testing have you done?\n. :+1: \n. Thanks\n. There is already a kitchen sink alias, all.  I strongly recommend not using it - the bundle will be huge, including massive polyfills like Intl with every single language pack, and will also pick up all polyfills we add in future, even those for experimental features where standards are not yet stable.\nRenaming to focus on the es7/es2016 alias - happy to have this, feel free to add it!\n. Page not found.  Feed free to reopen with:\n- Working link or URL of polyfill service bundle that you are using\n- Details of what errors you see (a screenshot of the console would also be helpful)\n- Exactly which version numbers of IE8 and 9 that you are testing.\n. Travis is broken due to issues tunnelling to Sauce Labs, unfortunately.\n. I'll look into the build problem that you're having though\n. Hm, I've never tried building on Windows, so maybe there's a path issue that doesn't work with Windows' filesystem.  I just confirmed that a fresh checkout of master builds fine for me.\n. Can anyone reproduce this problem?\n. Take a look at the gruntfile for the build process.  Your problem is probably somewhere in the installcollections task, or possibly in buildsources.  Adding logs is just a matter of dropping grunt.log.writeln wherever you want to log.\n. Thanks for this - well done on the diagnosis. We refactored the polyfills directory for the 3.0 release to remove all the old versions of the library - so can you test master and rebase your PR on that if it's still needed?\n. Does it work in those browsers?\n. OK, fine.\n. :+1: \n. This is generally excellent. I'll come back to this in more detail when it's not Christmas Day...\n. Fails in all versions of IE:\nFailed tests:\n - ie 11 (Sauce results: https://saucelabs.com/tests/2fd3457f1f454047b8ee9d7b9c7708c4)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 10 (Sauce results: https://saucelabs.com/tests/026fdda06162445fbc8ce9aadd6da179)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 9 (Sauce results: https://saucelabs.com/tests/30d270f42a6d4f50a31b04d30b42f5fe)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 8 (Sauce results: https://saucelabs.com/tests/826b0a3b4e9e4ec5aafbc82356c9b612)\n    -> console (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console (timeout after 10000ms, 2 retries)\n - ie 7 (Sauce results: https://saucelabs.com/tests/b56c27adb8274905af7c89af68078481)\n    -> console (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console (timeout after 10000ms, 2 retries)\n - ie 6 (Sauce results: https://saucelabs.com/tests/47e86e02dd2b4aa3af8b87803c56fd1c)\n    -> console (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console (timeout after 10000ms, 2 retries)\n(except Edge)\n. We're actually finding Sauce to be a bit of a problem, particularly in CI, and are looking at moving to Browserstack, but finding the time...\nI'm a bit dubious of the capitalisation of Throw, is that supported by Expect? Anyway I'd suggest changing it to throwException - according to the Expect docs, it's a synonym of throw.\nYou then have an issue with your detect, because it is passing in IE11, which doesn't have all the console methods that you are testing for.  I made the detect more specific.\n. See my PR from the local branch.\n. Happy to support the granular approach.\n. Actually since my PR was merged and Jake's is an improvement on the architecture, the issue of adding the polyfill is done, so closing this.\n. https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Math/acosh/polyfill.js\nIt's more the principle that it will be increasingly common in future\n. Thinking more about this - the need to transpile is a property of the target UA's syntax support, not the polyfill source's use of particular syntax.  In theory, when you get a request from a UA that supports no more than ES5, you pass all polyfills that you intend to serve to that browser through a 'make sure this works in ES5' transpilation.  So the behaviour varies on the UA, not on the polyfill.\nHowever, currently, we do the opposite: Transpilation depends on the properties of the polyfill, not the UA.  This is for two reasons:\n1. We currently make an assumption that all browsers support ES5 and none support any syntax more advanced than that, so essentially there's no variation to be had between UAs.\n2. Transpiling the majority of polyfills is unnecessary as their syntax is compatible with ES5, so doing so would slow down the build unnecessarily.\nPoint 1 can be expected to change at some point in future. But point 2 is an optimisation that we should avoid losing.  So a better implementation is probably something like willTranspile = polyfill.esVersion > ua.maxEsSyntaxSupport.  On that basis we should stick to the current naming and location of theesVersion` property.\nAnother option, theoretically more ideal, would have us able to use granular data on specific syntax support (eg from Kangax tables) and transpile only the specific features not implemented in the browser.  But that's likely to be fiddly, error prone and not worth it.\nSo on balance I think we stick with esVersion as it is and review again when we want to add a polyfill that requires more advanced transpilation.\n. Current test failures:\n- ie 8 (Sauce results: https://saucelabs.com/tests/78c577be1db34211bac7e7728881fd99)\n    -> XMLHttpRequest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=XMLHttpRequest\n    -> URL\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=URL\n    -> Element.prototype.classList\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.classList\n    -> Node.prototype.contains\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Node.prototype.contains\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n    -> Event.DOMContentLoaded\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event.DOMContentLoaded\n    -> CustomEvent\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=CustomEvent\n    -> matchMedia\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=matchMedia\n    -> ~viewport\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=~viewport\n - ie 7 (Sauce results: https://saucelabs.com/tests/e4ee64f7c1494a3ba007f6236f8dfafa)\n    -> Element.prototype.matches\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.matches\n    -> Element.prototype.append\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n    -> Element.prototype.prepend\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n    -> XMLHttpRequest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=XMLHttpRequest\n    -> Element.prototype.classList\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.classList\n    -> ~viewport\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=~viewport\n    -> Element.prototype.before\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n    -> Element.prototype.closest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.closest\n    -> Node.prototype.contains\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Node.prototype.contains\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n    -> document.querySelector\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=document.querySelector\n    -> Element.prototype.remove\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.remove\n    -> Event.DOMContentLoaded\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event.DOMContentLoaded\n    -> Event.hashchange\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event.hashchange\n    -> Element.prototype.after\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n    -> CustomEvent\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=CustomEvent\n    -> Element.prototype.replaceWith\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.replaceWith\n    -> fetch\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=fetch\n    -> matchMedia\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=matchMedia\n - ie 6 (Sauce results: https://saucelabs.com/tests/e44c3d5cf8fc4b2f90b67265d1916be7)\n    -> Element.prototype.matches\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.matches\n    -> Element.prototype.append\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n    -> Element.prototype.prepend\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n    -> XMLHttpRequest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=XMLHttpRequest\n    -> Element.prototype.classList\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.classList\n    -> ~viewport\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=~viewport\n    -> Element.prototype.before\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n    -> Element.prototype.closest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.closest\n    -> Node.prototype.contains\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Node.prototype.contains\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n    -> document.querySelector\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=document.querySelector\n    -> Element.prototype.remove\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.remove\n    -> Event.DOMContentLoaded\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event.DOMContentLoaded\n    -> Event.hashchange\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event.hashchange\n    -> Element.prototype.after\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n    -> CustomEvent\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=CustomEvent\n    -> Element.prototype.replaceWith\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.replaceWith\n    -> fetch\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=fetch\n    -> matchMedia\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=matchMedia\n. YES.  With six minutes to Christmas:\nProgress (browsers): 14 / 14 (0 browsers remaining, 0 test failures so far)\nAll jobs complete\nFailed tests:\n - None!\nBrowsers tested with no failures: chrome/46, chrome/35, firefox/41, firefox/30, ie/12, ie/11, ie/10, ie/9, ie/8, ie/7, ie/6, safari/9, safari/8, android/4.4\n. Full test suite passes.  Still need to sort out Travis.\n. ok, this is easy enough - seems like the UA parser recognises the FB browser but we don't support it in the service.  What does the 46 refer to in the UA string and is it bound to the iOS version or the FB app version?\n. Agreed.  This is probably one to raise in ua-parser.\n. OK, fair point. I am totally fine with aliasing the Facebook browser version sequence to the versions we already recognise for ios_saf, which are iOS version numbers.  We have an existing mechanism for aliasing, but it would need to be tweaked to use os data for the target version.\nUltimately this would enable the Facebook browser to be recognised by us as ios_saf/8 or whatever iOS version.  You could start by taking a look at service/UA.js.\n. I think the solution here is likely to be as proposed in https://github.com/Financial-Times/polyfill-service/issues/561#issuecomment-169111053\n. Thanks!\n. I think this bug is papering over a different problem.  The specifier as it exists already should match 44:\n\nI agree it doesn't, though:\nhttp://cdn.polyfill.io/v2/polyfill.js?features=Array.prototype.find&ua=chrome/44\n/* For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: chrome/44.0.0\n * Features requested: Array.prototype.find\n *  */\nSo this needs a bit more investigation, probably starting here.\n. Looks like there was a bug in the version of the semver parser that we were using.  I updated it and it looks good now.\n. I didn't realise Edge has a different UA on mobile.  But it probably uses the same rendering engine as Edge desktop, right? (hopes)...\n. OK, so currently that UA is being parsed as edge mobile/12, which is a great start.  I think we need a bit of expert help here.  Is @jacobrossi in the house?\nMy instinct is that Edge mobile must be a closer match for Edge desktop than IE mobile, but I would really hate to have to create a separate set of polyfill targeting for it, so hopefully either IE mobile or desktop is close enough?\nJacob - it'd actually be super helpful if you could help us with Edge versioning in general.  I believe your official version number is currently 20 but your UA string says 12 and we refer to Edge as ie/12 right now.\n. Cheers Jacob!  If you have a UA for v13 to hand that would be very helpful.\n@craigbilner TLDR here is that we should alias edge mobile to ie in the UA module, which is what we're calling Edge for simplicity (and because helpfully it's first release version is v12, while the last release of IE is 11)\n. Superb, thanks Jacob.  I appreciate that Edge is not the same animal as IE, we just have a considerable admin overhead in defining a new browser family, so we are taking a shortcut here by assuming that IE will never have another release, and typically an IE11 user's upgrade path takes them to Edge.  We test compatibility, so lumping them in the same family has no impact on the polyfills we serve for them.\n@craigbilner would you care to make a PR here?\n. #571 \n. No, I don't believe we have a utility for camelcasing (or uncamelcasing) CSS property names. I didn't write this polyfill and am not familiar with it, but if it interests you please do take a look.\n. The node bug is now fixed in Node 6, allowing us to respond with a 400 when a bad request is issued.\n. Branch passes CI from my machine.  Travis still not working.\n. This still feels a bit repetitive.  This pattern, for example:\n```\nthis.console.info = function info() {\nvar fn = console.log;\nvar hasApply = false;\n\ntry {\n    hasApply = !!fn.apply;\n} catch (e) { /* do nothing */ }\n\nif (hasApply) {\n    return function () {\n        fn.apply(console, arguments);\n    };\n}\n\nreturn function (arg1, arg2, arg3) {\n    fn(arg1, arg2, arg3);\n};\n\n};\n```\nappears several times.  Could we shorten it to:\n```\nthis.console.info = function info() {\nvar fn = console.log;\n\ntry {\n    !!fn.apply &&\n    return function () {\n        fn.apply(console, arguments);\n    };\n} catch (e) { /* do nothing */ }\n\nreturn function (arg1, arg2, arg3) {\n    return fn(arg1, arg2, arg3);\n};\n\n};\n```\nor even:\nthis.console.info = this.console.log;\n. @JakeChampion are you done with this one?\n. @JakeChampion lots of issues here that needed thinking about:\n- Several methods included were not actually part of any console standard.  I removed these\n- Some methods require arguments, and (correctly) throw exceptions in implementing browsers if they are not supplied, which was failing tests\n- The root console polyfill had a dependency on itself, which created a circular dependency graph.  I removed that and am creating a check for this in the buildsources task.\nThe inclusion of console polyfills still crashes iOS on Sauce, though it now passes locally on my iPhone.  I'm yet to dig into the Sauce situation because I can't do it offline, but meantime, comments welcome.\n. OK, found the problematic polyfill on Sauce - console.profile crashes the emulator.  Works fine on a physical device. I've excluded those polyfills from CI.\n. Perfect, thanks.  Yes, CI is currently kaput. Working on it.\n. I don't think that's new behaviour, I think it's because in a recent release we updated our copy of the useragent library and it's now able to recognise more weird and wonderful UAs.  We've never actually applied the unknown policy if the browser is known but unsupported.  This seems like a weird policy in retrospect, so I'm going to change that behaviour to treat all unsupported browser families as 'unknown'.\n. That's the real version sequence.  After 4.4.4, they started using chrome version numbers.  So you do need <46.\n. This requires the polyfill service to have a runtime, ie code that we always ship in addition to the polyfills themselves.  I'm very reluctant to do this because it feels like the thin end of the wedge. I think as Jake says there are already a decent number of options here.\n. Whoops, sorry I didn't look at this at the time of the release.  It's now been almost 7 days so the issue is moot, but we can discuss what to do next time...\nMy preference is to just leave it as-is, and purge proactively if we need to.  Picking a different TTL is unlikely to satisfy everyone, and if we shorten the TTL to 2 days we need approximately double the number of backends.\nPurging on deploy is an option, but it vastly increases the risks associated with deploys, and also we need to bear in mind that the service runs on infrastructure that cannot possibly handle the full load of public traffic if the whole CDN were to disappear. So we would need to deploy, scale out the number of nodes to handle the full brunt of traffic (go from 2 backends to maybe 50), then purge the cache, then scale them back again once the cache is re-primed.  That seems overly complicated vs simply waiting a week!\nObviously developers also have the option of a version query param, though I'm keeping an eye on this as it's also a DOS mechanism and we may want to strip all non-recognised query params at the CDN to guard against this risk.  Maybe if we do that we could shorten the TTL as a compromise?\n. Well there's a third party service to do it: https://www.hirefire.io/.  I'm reluctant to acknowledge that this is a significant problem though. Currently we allow cache-busting query params, so as long as those are not abused there's always a solution for the impatient.\nI'm inclined to close this - but will leave for a day or so for people to tell me how wrong I am.\n. There's no budget for this, incidentally, and the resulting logo would need to be contributed to the project under an MIT or compatible licence.\n. Suggestion from @ComedyTomedy:\n\n. Suggestion from Ross Mackay:\n\n(sadly probably ruled out by copyright issues, plus possibly a bit unfair on IE)\n. More from @didoo:\n\n. I really like 'the missing element' as a strapline, but Jake's ill-fitting triangle is still my fav.\n. Chatted with George and he is going to play around with colour options for the second Origami P.\n. New idea:\n\n. OK, we're going with the last one.\n. Ah, this is pretty easy, by the looks of it.  We identify it as mobile safari uiwebview, so we just need to alias that to ios_saf.\n. Looking at @jonathantneal's comment here I'm wondering why this is a bug. If boolean attributes are not allowed to have values, and so a value of false is equivalent to true (because it's the presence of the key rather than anything to do with the value), hiding an element when it has a hidden property would be correct behaviour, no?\n. Ah, I see.  OK, in that case a PR with @jonathantneal's solution would be welcome.\n. Any way we can test this in mocha?  I'm struggling to see how, the result being primarily visual...\n. OK, fair enough, I can't think of a good test mechanism that doesn't require quite a substantial investment of time.  Could you just post a JSBin/JSfiddle/Codepen with a test case and I'll verify it on IE8 and 9 VMs I have here?\nAlso a couple of linting failures to address.\nThanks for the contribution - much appreciated!\n. Linters are not loaded by default, but we do provide the .jshintrc file so if you have jshint in your editor it should pick up the settings and lint automatically\n. OK, test case works fine.  If you could fix the linting I'm happy to merge this.\n. Hmm, that's odd.  I'll put that on the list to look into :-)\nMeanwhile this is great, thanks!\n. @JakeChampion is this ready to review? If so can you talk me through it?  And do you want to target 3.4?\n. Where did you get to with this?\n. Can't really see any benefit in the well-known symbols being defined separately to the Symbol polyfill.\n. The polyfill itself is beyond me, but I've reviewed what I can understand and :+1: \n. This is a very high quality PR. Thanks for taking so much care over our contrib guidelines, it makes my life a lot easier.\nI've tested on Sauce, and locally on an older Opera version, and I'm happy.  Could you make the two small changes I've suggested?\n. Fixed by https://github.com/Financial-Times/polyfill-service/pull/618\n. Hmm, tricky. The browser targeting you've got here doesn't reflect support for setImmediate, it reflects the support for Promises which is currently the only polyfill in which we use setImmediate. This feels like a bad precedent to set, but if we're going to fix it by not including dependencies if the browser doesn't require the parent, then this could be OK as a temporary solution. But if it's fairly easy to fix the dep loading issue I'd rather jump directly to that.\n. Sure, absolutely remove targeting from browsers that actually have the\nfeature natively.  But I don't think that's what the current PR does, is\nit? Sorry if I've jumped to the wrong conclusion.\n. You can use the callback query param to fire a function call when the polyfill bundle is loaded, and you can use the gated flag to wrap every polyfill in a feature detect\n. I believe it IS sorted alphabetically, but it places all uppercase chars before all lowercase ones.  This is the same way Github does it.\n. Hmm. It's not a JS API. We do have precedent for polyfilling non JS stuff, like ~html-elements for the HTML5shiv, but is fastclick comparable to HTML5Shiv?\n. Have you asked Rowan about it?\n. @rowanbeentje no, the service can only distinguish based on UA, so it would need to err to the false positive and read the meta tags within the polyfill.  Does it do this, or does it apply fastclick behaviour by default regardless of the meta tag values?\n. OK, I'd accept a PR for this.\n. Yes, it's a good change, imho.\n. @jonathantneal only dips into the project intermittently so may not get to this for some time.  If you have a suggested fix I'm happy to review.\n. sorry, Jake and I are not looking at this at the moment. Contributions always welcomed though.\n. @rwwagner90 I've updated this issue several times in response to your chasing, and reminded you each time that you are very welcome to work on this.  If you can't solve the problem yourself you might also consider paying for a qualified developer to investigate and solve the problem for you.  This is one of the great advantages of open source software - anyone can be involved.\nMeanwhile, it seems none of the core team is able or willing to help with this.  Personally, I simply don't have enough knowledge of the way event propagation is supposed to work, and my team is not affected by this problem.\n. OK, good luck.\n. We call this concept aliases rather than tags, since an alias may just be another name for a single polyfill, but as Jonathan says it's also a great way to group together polyfill collections like es5, es6 etc.\nYes @jonathantneal go ahead and accept if a PR just adds aliases to existing polyfills, provided that Lea is happy to keep that alias up to date.\n. Also I'd slightly prefer an alias of bliss.js rather than just bliss since bliss is a dictionary word that might conflict with other naming.\n. :+1: \n. Not yet.  You can see the active CDN version at https://cdn.polyfill.io/__about under the appVersion property.\n. Will try for this week.  Currently a bit busy moving to Japan, bear with me.\n. OK, sorry for delay, moving continents turns out to be hard.\n3.3 is now in QA: qa.polyfill.io, and I'm tracking the release to live at https://github.com/Financial-Times/polyfill-service/issues/625\n. window.html5 is annoying but I guess we'll live with it.  I suppose the simple answer here is to modify the html5-elements polyfill to invoke html5shiv with 'svg' added to tagNames, or suggest that it be added in html5shiv by default?\nWe're entering the twilight of people caring about IE8, so unless this causes sites to be unusable in IE8, I think it's probably not worth it.  @wheresrhys does FT need this?  If so can you add the FT label?\n. OK, if someone wants to PR the svg element into html5shiv, I think that would be a great idea.  But no action on our side.\n. We provide detects for almost all our polyfills.  See the gated option in the docs.\n. Thanks!\n. Not convinced, unless we have another environment.  QA is designed to test tagged pre-release versions, not CD deploys of master.  Given that we have a 7-day notice stable release process, what's the benefit of this?\n. Moving to the PR...\n. Which BB versions have you tested?\n. In that case you can either change the config to target 10+, or test in earlier versions :-)\n. Thanks for the suggestion. It does sound a bit ambitious to me. If you're willing to do the work I'm happy to consider a PR, but I don't see many people being that interested in this so if it's just a request id prefer to close and wait for someone to come along with an implementation.\n. No recent activity on this so I'm closing it, but please do feel free to submit a WebGL polyfill if you create one.\n. I have no need for it and I have not heard any +1s from anyone else, but I'm very happy to see new polyfills so don't let me discourage you if you want to add it to the service.\n. Hey, sorry we broke your setup again :-(\nYes, we do have an engine specified in the travis file but not in package.json, which is where it probably should be.  Feel free to add it, or I'll get round to it at some point.\n. #587\n. We run with 5.0.0 in production, so I'd probably prefer to specify that.\n. The CI failure is because it's running on your fork, which doesn't have our Sauce credentials available. \nYour update seems to change a lot of whitespace.  Any way you can avoid that?\n. Thanks for the update, by the way, much appreciated!\n. https://github.com/Financial-Times/polyfill-service/pull/624\n. Thanks for this.  A few comments for you to deal with.  I am working on a proper contributor agreement, but in the meantime would you please confirm your agreement to the following:\n- This code is all your own work\n- You are publishing it under an MIT licence\nThanks.\n. There's a dodgy indent now, but I'll let you off that :-).  Thanks so much for the contribution!\n. Fixed in #610, thanks again to @netsgnut and @Ikkyu-os \n. How is this different from just running the test director in all mode?\n. How about an additional column on the compatibility chart page showing 'Your browser'?\n. Proposed solution in #641\n. Tested, happy with this.\n. Hi Andy, thanks for this.  Could you consider making a PR for this? You can find pretty detailed contrib guidelines on the hosted docs at https://cdn.polyfill.io.  You probably need to alias the fxios browser to firefox or firefox_mob.\n. Good point. Andy, the first step is to check what normalised name we give\nto the browser: load https://cdn.polyfill.io/v2/polyfill.js and look at the\ncomment at the top. Then remap that browser to ios_saf in the lib/UA.js\nmodule.\n. Don't want to add more distinct UAs.\n. Yeah, also @wheresrhys I would disagree that these kinds of changes require less oversight.  We serve 360 million requests a month, so it's important that we don't suddenly break some of those users browsers.\n. Yes, this idea works for me. If it parses the FFiOS UA correctly as ios_saf then I'm happy.\n. I think this is fine.\n. Thanks @jonathan-fielding, that's great.  @jonathantneal I would prefer outside contributors to use MIT because:\n- It's shorter than CC0 - around 4x fewer words in the licence\n- Most polyfills we absorb into the service are MIT licensed already, so it is more consistent\n- CC0 actually confers more restrictions on use than MIT - for example if the work contains any trademarks, those are excluded. MIT gives confidence that the entire work is covered by the same rules.  See CC0 vs MIT in detail.\n- The only requirement that MIT has which CC0 does not is the requirement to state the license. We should do this anyway as a matter of course because otherwise you wouldn't know what the copyright status of the work was.\n@jonathantneal are you able to review the rest of the content?\n. Thanks James.  I think that's a decent enough review now, let's do it.\n. Thanks for raising this. I hadn't appreciated that this would cause a problem for sites using the service. Our intention was just to avoid pointlessly indexing polyfill bundles, but if you need them for the site to be read by Google, I think that trumps it.\n. Thanks for this.\n. Hi @philippevk, thanks for raising this and for the suggestion.  We are adopting a policy of not keeping feature-request issues open for long periods of time, if no-one seems keen to implement them, so this issue will be closed now.  Of course we always welcome contributions and that includes a contribution that adds this feature.. Lack of HTTPS on QA is intentional because I don't want people to use QA in production (which they might do in an effort to get access to a release faster).  No HTTPS on the apex domain is an annoying artefact of Fastly's lack of support for Apex domains.  I'll raise it with them again.\n. Deployed to live.\n. Cache time is a week.  You can verify this by viewing the HTTP response headers (include -v in your curl command)\n. No, but you are very welcome to do so.  The contributor guide can be found at https://cdn.polyfill.io/v2/docs/contributing\n. No need to take account of the baseline.  <29 is fine.\n. Thanks!\n. Looks good to me!\n. Docs are going through a big refactor at the moment.  It's a good idea but could you add it to the docs branch instead?\n. I think this needs a bit more context. If it stays in the features page, we're saying \"for more information about native browser support for the features above, consult one of these resources\". But I wonder how common that use case is relative to a contributor wanting to check browser support when writing or updating a config file. If you wanted to improve that area then it would be the authoring polyfills doc (though I think we do cover that quite well in the refactored docs). What are you mainly trying to achieve here?\n. Didn't mean to put you off this change, Andy, sorry. It's probably a good idea, I'm just looking to understand the perspective better, since I'm obviously a bit deeper into it and can't see the wood for the trees.  If you're still keen on it do persevere and we'll find a good place for it.\n. This code is syntactically invalid so would have thrown immediately if you'd tried to run it.  I am happy to accept this change in pinciple.\n. Yes, that would be a great idea.\n. yes, see http://cdn.polyfill.io/v2/docs/contributing\n. Thanks for raising this and for the suggestion. We are adopting a policy of not keeping feature-request issues open for long periods of time, if no-one seems keen to implement them, so this issue will be closed now. Of course we always welcome contributions and that includes a contribution that adds this feature.. Looks OK.  MDN docs are https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click, though for some reasonn they've called it HTMLElement.click not HTMLElement.prototype.click (they've done this with other things too, and when I asked about it on IRC I didn't really understand the answer :-(\nWrite some tests and we'll add it.\n. I might write these tests on a flight tomorrow.\n. Never got around to this.  @JakeChampion why is this one [FT] ?  Is it still wanted by us?\n. Ah, yes, fair enough.\n. In fact our docs show polyfillable in Chrome, missing in FF:\n\nChrome makes sense. It has only fully supported URL since 49, which we are not yet showing on our compat table.  Firefox claims full support since 29, but is failing one of our tests on its native implementation:\n\nSo we could skip this test, on the basis that the bug is not important enough to stop us showing the native support exists.\n. Yes\n. @DavidBruant we have data for FF41 so it's somewhere between 42 and 47.\nAs a footnote to this, an alternative solution is to add this test to the detect.js file, which makes passing this test part of the definition of whether the feature is present or not. That would mean that we would serve the polyfill to FF < ~47, on the basis that the native impl is not detectable. However, it's a judgement call, and I take the view that it unnecessary to polyfill a feature that has a native implementation which for most use cases is not broken.\n. Ping @wheresrhys \n. Poke @wheresrhys\n. It looks like this polyfill just needs a configuration update.\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Object/assign/config.json\nThis is a very easy PR, why not give it a try?\nhttp://cdn.polyfill.io/v2/docs/contributing\n. Your PR was assigned to the 3.4 release.  You can track that release here:\nhttps://github.com/Financial-Times/polyfill-service/issues/666\n. @rowanmanning maybe you could review this?  Or someone else that wants to know more about the polyfill service?\n. This has been addressed in the es6 update branch.  Needed doing, so thanks for suggesting it, but we will probably just wait on #643\n. Go ahead, thanks :-)\nJust be aware that we don't (yet) support HTTPS on the apex domain, only on cdn.polyfill.io subdomain, for Fastly-related reasons.\n. ah, sorry: apex domain means polyfill.io, vs cdn.polyfill.io which is a\nsubdomain. If you load http://polyfill.io, you get redirected to\nhttps://cdn.polyfill.io. I'm happy to have HSTS apply to the latter.\n. OK, I understand. polyfill.io's redirect is not handled by the code in the repo - the response comes directly from our DNS provider.  This repo's code is used only to serve cdn.polyfill.io.  Basically, all I'm saying is that includeSubDomains should not be set in the HSTS header.\n. See my comments on #531\n. Hi Jim.  We did previously have that feature, and it was removed because it completely decimated both our cache perf, and also our ability to push releases cheaply.  However, we do have a QA site at qa.polyfill.io and we commit to pushing to qa at least seven days before we push to cdn.  This is intended to give site authors like yourself the opportunity to test your sites before the release.\nAs an alternative you can obviously run your own version of the service and then you can stick with whichever version you like.\n. There are now!  Follow @polyfillio on twitter.\n. What's the UA?\n. Doing (b) is supported as long as the browser identifies itself as something other than generic android.  What's the UA?  Related to https://github.com/Financial-Times/polyfill-service/pull/652\n. Need the full string to debug useragent normalisation\n. That's part of the UA normalisation. \n. Those UAs report as samsung browser.  See #671\n. If you need to extend targeting of a polyfill to a browser we do not currently target, see https://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. I agree with this in principle, and worth saying that we added all before we took in all the Intl craziness. It would be hard to argue that this is removable without moving to a new API version, unfortunately. Also there are a fair number of people using it so we also ought to try and address whatever is driving that behaviour.\nAssorted ideas:\n1. Add console.log(\"Requesting all polyfills from polyfill.io is a really bad idea\"); to the all response.\n2. Operate all as a blacklist alias rather than a whitelist one, and mark some polyfills as excluded from it.  Then the Intl locales could be excluded, but new polyfills would automatically be included. It should probably be renamed to almost-all but would need to continue to support all for compat.\n3. Reassess which polyfills should be in the default set, to try and address the demand that leads to use of 'all'.  A good way to start this might be to look at what blissfulljs added their alias to, because they had previously advised their users to use all.\n. I opened https://github.com/Financial-Times/polyfill-service/pull/659 for adding the warning to all.\nI've also added more polyfills to the default set in https://github.com/Financial-Times/polyfill-service/pull/660\n. Still want to figure out the best approach for this, but if you want to make some process with it, feel free.  My focus will be on Map and then IntersectionObserver until I've shipped those\n. Struggling with issues like grunt compatgen which needs the runtime environment to run.  For the moment we will use docker just for deployment, so I'll modify this PR to limit itself to deployment.\nStart with a git clean -fxd?\n. Hi Rowan - in Jake's absence can you look over this?  Jake and I decided to use docker just for deployment on the polyfill service.  I can build the image and run it locally, and I think I have the correct tasks configured for deployment, but I get this output from Heroku:\n$ npm run deploy\n... snip ...\nThe push refers to a repository [registry.heroku.com/ft-polyfill-service-qa/web]\n0d48b43af4d4: Preparing \n6d64942ab833: Preparing \n976b0b9ce8a3: Preparing \n538e81ce30d6: Preparing \nea74409b057b: Preparing \nc56b7dabbc7a: Waiting \nno basic auth credentials\nThere don't seem to be any public docs on using Heroku's docker registry for deployment so I assume you guys found out how to do this direct from Heroku somehow, or else are just smarter than me.  Anyway feel free to deploy (npm run deploy will deploy to QA) and if it works please let me know how to configure auth!\n. Thanks.  I tried that and got this:\nSuccessfully built c15e9da43fcf\nThe push refers to a repository [registry.heroku.com/ft-polyfill-service-qa/web]\ncda391d7472d: Pushed \ne4d18a9393e5: Pushed \n08a4cceb4026: Pushed \n538e81ce30d6: Pushed \nea74409b057b: Pushed \nc56b7dabbc7a: Pushed \nreceived unexpected HTTP status: 500 Internal Server Error\nCould you try it?\n. OK, I'm signed up to the beta now and deployment works perfectly.  Since the haikro method is broken for me for some reason, I'm merging so I can resume deploying.\n. This is a fairly common approach to making code with multiple module system compatibility. In the polyfill service it is ineffective and will always export the API to Promise on the global object, because there is no module.exports in the browser.\nWe prefer to retain polyfill source as originally written if it is not causing a problem, since it makes it easier for us to update.\n. Hi Kent,\nThere are no TOS for the CDN, I'm afraid.  It's an at-will collaboration between the FT and Fastly, and could be withdrawn at any time.  That said, we have no plans to do so and are very happy that we're serving an increasing amount of traffic, in fact we're approaching 1 million requests per hour.\nProviding some kind of availability assurance would require buy in from Fastly on that, and I'm meeting Artur in a couple of weeks so I will mention it.  Is your project an official PayPal thing?\nAndrew\n. The best I can offer you is that the service is an active dependency of FT's own web products. If it goes down, ft.com breaks, amongst many other FT sites. I don't imagine the FT or Fastly would ever provide a contractual SLA on a service we are offering to the community for free, and we've no plans to charge for pro support.\nI think the solution for people who have concerns here is really just run it yourself :-)\n. That's really cool and very concise.  I often find videos drag on but you cover the material at a perfect speed; love the attention to detail in the editing.  I tweeted a link to it.\n. Hi Ashley!\nYou probably want something like this:\nhtml\n<script src=\"https://cdn.polyfill.io/v2/...\" onerror=\"loadFallback()\"></script>\nYou should really attach the event handler via addEventListener, and also bear in mind that slow responses rather than immediate failures will not invoke your fallback until you hit the browser timeout which is probably 30-60s.\nI'm on a phone so I haven't tested this but let us know if it works and helps you out, or if you find some other solution.\n. Fixes https://github.com/Financial-Times/polyfill-service/issues/420 ?\n. I don't know enough about the mechanics of array-like objects in ES6 but as long as the concerns raised in #420 are addressed and we add some tests for the cases that this polyfill seeks to cover, that's all fine with me.\nAlso - a lingering concern: are there any browsers that ship support for Set but not Array.from?  If not, this polyfill is pointless.\n. Ok, this is good. With the tests, it's sensible to test for features that might not be supported, if those are not features we're trying to polyfill. The alternative is to make this polyfill depend on Map and Set but if they are only used in tests, that's hugely wasteful. So this approach is fine.\n. Ominously, this is issue 666...\n. Apart from nitpicking comments, this is really excellent.\n. This is fine, thanks :+1:\n. Still working on test failures in IE6-8.\n. OK, testing old IE:\n- Native impl isn't quite there in IE11, so have extended the detect to fail in IE11 and targeted 11 in config.  We could polyfill IE11 selectively, but easier just to replace the dodgy native impl with the polyfill.\n- The polyfill already worked in old IE (as far back as 5!) but the tests required some more modern things like use of reserved words as object properties (so mapinst.delete => mapinst['delete']) and JSON encoding/decoding (so dropped use of JSON.stringify and replaced with string concat)\n. OK, I think I've addressed all these comments.\n. Adding a family is a major maintenance overhead. I think we can only do this, particularly for a niche browser not available on sauce, if someone takes responsibility for maintaining the polyfill targets.\nI reached out to Samsung about this but haven't made much progress yet.\n. I haven't had a response from Samsung on this.  In the absence of either well maintained feature support tables (eg caniuse, MDN or kangax) or commitment from the vendor to maintain the targeting for their family, I don't want to add a new family for this browser - it would reflect badly on the service to suggest that we have assessed polyfill compatibility for all features for all versions of a browser when in fact we've just looked at a single feature and haven't tested it (in CI) in any versions of the browser.\nSo I propose to close and revisit if/when Samsung provides support or publishes feature compat data.\n. @caridy I think this issue is about the need for Intl polyfilling in Samsung browser, not whether the particular Intl polyfill that we carry works in that browser or not.  Currently we don't serve it to Samsung browser so even if it did work it wouldn't be applied.\n. Having discussed this on the call with @JakeChampion today, we're going to go ahead and close this.  Adding a browser family is a big deal, as we covered earlier, and we want to do it properly.  So this would involve:\n- Having more than one polyfill that we can target at the browser\n- Access to a good, reliable source of support data (eg caniuse, MDN or the vendor maintaining the targeting directly)\n- Access to instances of the browser in the cloud for testing\n. Hi @ncri, see https://github.com/Financial-Times/polyfill-service/pull/671#issuecomment-218274792 for a possible solution, and bear in mind that we are in the process of updating the version of the Intl polyfill that we host, so any issues with the polyfill itself are separate to the ability to load it in Samsung browsers.\n. The existence of an up to date polyfill is not related to this issue.  We are working on that here: https://github.com/Financial-Times/polyfill-service/pull/698 and will ship it when it passes the tests.\n. LGTM\n. Do we really need an additional dependency to write a single line, static HTTP header?\n. Ok, this looks fine. No need for the moment upgrade but no harm I guess. Not sure it's obvious to me why you chose 18 weeks, so if there was a reason, a comment in the code would be useful.\n. @rwwagner90 The code you've cited is from the Symbol polyfill.  The Symbol polyfill is not part of the standard bundle for ie/11:\nhttps://cdn.polyfill.io/v2/polyfill.js?ua=ie/11\n/* Polyfill service v3.5.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: ie/11.0.0\n * Features requested: default\n * \n * - URL, License: CC0 (required by \"default\")\n * - Event, License: CC0 (required by \"CustomEvent\", \"default\")\n * - Element.prototype.matches, License: CC0 (required by \"Element.prototype.closest\", \"default\")\n * - Number.isNaN, License: MIT (required by \"default\")\n * - String.prototype.endsWith, License: CC0 (required by \"default\")\n * - Array.prototype.fill, License: CC0 (required by \"default\")\n * - DOMTokenList, License: CC0 (required by \"default\")\n * - String.prototype.startsWith, License: CC0 (required by \"default\")\n * - String.prototype.includes, License: CC0 (required by \"default\")\n * - Array.of, License: CC0 (required by \"default\")\n * - Element.prototype.closest, License: CC0 (required by \"default\")\n * - Promise, License: MIT (required by \"default\")\n * - _mutation, License: CC0 (required by \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.prepend\", \"Element.prototype.remove\", \"Element.prototype.replaceWith\", \"default\")\n * - Element.prototype.remove, License: CC0 (required by \"default\")\n * - Object.assign, License: CC0 (required by \"default\")\n * - Element.prototype.after, License: CC0 (required by \"default\")\n * - Element.prototype.append, License: CC0 (required by \"default\")\n * - Element.prototype.before, License: CC0 (required by \"default\")\n * - CustomEvent, License: CC0 (required by \"default\")\n * - Array.from, License: CC0 (required by \"default\")\n * - Element.prototype.prepend, License: CC0 (required by \"default\")\n * - Node.prototype.contains, License: CC0 (required by \"default\")\n * - Element.prototype.replaceWith, License: CC0 (required by \"default\") */\nSo we are interested to know why you are getting the Symbol polyfill in IE/11. If you'd like us to investigate this, please load cdn.polyfill.io/v2/polyfill.js in the affected browser and open a new issue with the content displayed in the comment at the top of the output, similar to that shown above.\nSeparately, to help you with your JS error, we need an example that reproduces the problem. If you have one, feel free to open a new issue for that.  The example should include just the Polyfill and the code needed to reproduce the issue (ie we won't spend time debugging your own code)\nEIther way, this issue covers the 3.5 release which is now out, so any followup should be in a new issue.  Hope that helps.\n. No, but please feel free to add one, it would be very welcome.\n. Redirecting in Fastly would be the best method. I'll submit a PR and also add an on-deploy task to publish the VCL to Fastly.\n. https://github.com/Financial-Times/polyfill-service/pull/682\n. @onishiweb can you describe the symptom a bit more?  I'm aware that DOMTokenList is a private constructor, and we can't replicate that so the polyfilled version is public.  How is that proving to be a problem?\n. That code will indeed throw on native implementations of DOMTokenList.  Are we causing that behaviour somewhere though?  We should be serving DTL polyfill whenever we serve the CL one, making the constructor public.\n. OK, this is happening when we load the service in a browser that supports DOMTokenList natively and which either does not support classlist, or (more likely) where we are loading the classlist polyfill without the gated flag.  Classlist polyfill cannot use a native DTL because the spec says the constructor is private.\nOptions:\n- bring the DTL functionality into CL and consider it part of the same polyfill.  Not great since DTL is used by other APIs too (although none that we have polyfills for)\n- create a private polyfill that creates a guaranteed-public DTL constructor that polyfills can use (probably the best option)\n- Put a mandatory feature detect into classList polyfill, so we don't try to polyfill it if it already exists (easiest - one line change - and probably avoids the problem but does not technically fix it)\n. OK, I went with the second solution.  See branch domtokenlist-fix.\n. See https://github.com/Financial-Times/polyfill-service/pull/693\n. Well, the good news is the Mocha upgrade didn't break all the tests.  The bad news is IO is still failing on CI in every browser...\n- firefox 30 (Sauce results: https://saucelabs.com/tests/7b9fd71ab31944259db97a7bb81de360)\n    -> IntersectionObserver (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 10000ms, 2 retries)\n - ie 10 (Sauce results: https://saucelabs.com/tests/2d7d7854a017429cae65763788e3dbfc)\n    -> IntersectionObserver (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 10000ms, 2 retries)\n - ie 8 (Sauce results: https://saucelabs.com/tests/30442fd52afc4555a57949cd23a8c1c9)\n    -> IntersectionObserver (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 10000ms, 2 retries)\n - ie 7 (Sauce results: https://saucelabs.com/tests/174b4605f43245f38588be4980254500)\n    -> IntersectionObserver (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 10000ms, 2 retries)\n - safari 9 (Sauce results: https://saucelabs.com/tests/8d6bde2276974d91882748675d701fcf)\n    -> IntersectionObserver (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 10000ms, 2 retries)\n - safari 8 (Sauce results: https://saucelabs.com/tests/ad5db24cc1004f6f992afca6c4ca1ccd)\n    -> IntersectionObserver (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 10000ms, 2 retries)\n - android 4.4 (Sauce results: https://saucelabs.com/tests/9a16f4b275d2422fb8f86a543b43ac74)\n    -> IntersectionObserver (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 10000ms, 2 retries)\n. OK, looks like Sauce can't load Sinon?\nhttps://saucelabs.com/tests/c505172bd62a4f2798ead79483a97042\n\n. Fixed that.  Now there's a simple expectation failure...\n\n. Posted https://github.com/WICG/IntersectionObserver/pull/135#issuecomment-226473998 to query test failures with Google team.\n. It works!\n. @JakeChampion are you happy for us to line this up for 3.8?\n. Note that https://github.com/Financial-Times/polyfill-service/pull/685/commits/e27b4083d390454a98fd3738e8e00aa4133e6435 is already in master.\n. Proposed https://github.com/miguelmota/Navigator.sendBeacon/pull/4, and will commit the equivalent change directly to our copy.\n. Also note that if you want the default set PLUS fetch, you can do features=default,fetch.\n. I haven't checked but I thought the Symbol.iterator polyfill covered that\nuse case.\nOn Tue, 10 May 2016 at 16:03, Callum Locke notifications@github.com wrote:\n\nAFAICT, it's not possible to use the polyfill service to ensure that\narrays are 'iterable' as per ES2015.\nFor an example of why this matters, look at how Babel compiles the\nfollowing code:\nconst arr = [1, 2, 3];\nfor (const num of arr) {\n  console.log(num);\n}\nThe compiled output\nhttps://babeljs.io/repl/#?evaluate=true&lineWrap=false&presets=es2015&code=const%20arr%20%3D%20%5B1%2C%202%2C%203%5D%3B%0A%0Afor%20(const%20num%20of%20arr)%20%7B%0A%20%20console.log(num)%3B%0A%7D%0A\nincludes the expression arrSymbol.iterator which is likely to fail in\nold browsers (even if you've polyfilled Symbol and Array using the polyfill\nservice).\nI think something like this is needed:\n// feature detect:typeof Array.prototype[Symbol.iterator] === 'function'\n// polyfill:Array.protoype[Symbol.iterator] = function () {\n  return new ArrayIterator(this);\n};// ...where ArrayIterator is something like this:// https://github.com/medikoo/es6-iterator/blob/master/array.js\nLet me know if interested in a PR.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/692\n. Ah yes, sorry, I remember the conversation about this now.  Jake and I couldn't work out how to create a polyfill for this - whether it belongs in the Array polyfill or in the Symbol one or in a dedicated Array.prototype[Symbol.iterator] polyfill (which I think might be an invalid name on the filesystem).\n\nNot a great reason not to polyfill this though, and if we can agree on where it goes, we'd love a PR.\n. If all the latest browsers support it, I'm completely in favour of chucking it in the default set.  I think Jake's polyfill is also really good and more people should benefit from it :-)\n@callumlocke can you land this soon so we can ship it in 3.7?\n. No date for 3.7, but Wednesday is fine with me :-)\n. Yes.  I didn't have connectivity when I wrote this so couldn't check compat tables.  Now added data based on MDN and am awaiting CI\n. OK, all good.\n. Some test failures here need investigation\n. Not that I'm aware, all the browsers we support for JS have MutationObserver.  I wanted it because it was a useful part of the implementation of IntersectionObserver but Philip ended up doing that in a different way.  This PR is almost there but has some IE test failures.  Some community members have declared an interest - @drKnoxy and @thedrew12 would you like to pick this up?  Otherwise I guess we can close it.\n. Over in #397, @hipkiss97 said they wanted to look into this issue, so I'll hold it open for another couple of weeks.\n. IIRC, the problem is that MOs are not spec-compliant in IE11, so the polyfill is there to correct for the buggy behaviour.\n. Hmm, I don't know why my earlier commit didn't have my author metadata. @JakeChampion shall we close this one?. Duplicate of #561.  There's a solution proposed there, so please do submit a PR.  It would be much appreciated.\n. @JakeChampion I move to drop this from 3.6 so we can make a 3.6 release tomorrow without blockers.\n. @caridy what should we do here?  Do we need another version bump?\nWe have a fair number of test failures currently:\n- ie 10 (Sauce results: https://saucelabs.com/tests/d5d23f1f751f4480a834a0568ed1fb68)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - ie 9 (Sauce results: https://saucelabs.com/tests/4370e2c0dfd14123a21076c211aff4cd)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - ie 8 (Sauce results: https://saucelabs.com/tests/00dd0c4925cb42079509c2dcad1ef6d3)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - ie 7 (Sauce results: https://saucelabs.com/tests/9792ab3740ac4b96b16ce8e3880d70d6)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - safari 9 (Sauce results: https://saucelabs.com/tests/0d1e35a8ed914a889ff31c201c36fdb5)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - safari 8 (Sauce results: https://saucelabs.com/tests/93c4c09755014529a8f08a2f8f2ba9c6)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n. @caridy can we progress this?\n. Hi @ying22.  Thanks for raising the issue. Please load this URL in the affected browser and tell us what the comment at the top of the output says:\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en\n. If you'd like to improve support for Opera, we'd welcome it.  See https://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers for details.\n. See https://github.com/azproduction/autopolyfiller for one solution, albeit a bit out of date now.  We don't have any plans to build this feature but it should be possible for you to build it on top of our project.\n. Thanks for reporting.  It sounds like an issue with some potential niche UA strings not being correctly identified as android.  To investigate we really need to get the raw UA strings that are being sent by the devices you believe are being wrongly classified.\nAnd yes of course you can drop in the always flag as a workaround.\n. That UA is detected as android/4.1.0.  It actually looks like the main problem is that we are not targeting Android:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/requestAnimationFrame/config.json\nTo fix:\nhttps://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. I just updated #509 with a suggestion for a maintainable solution, so if you can contribute there you might get a fix.  Also consider adding target config for raf on Android stock browser!\n. @falsandtru hi, thanks for reporting this.  I don't recognise this test, is this a third party test suite?  Can you give us a live example URL at which to run the test?  We ideally are looking for a test that includes only code from our service and as little code as possible to reproduce the issue.\n. That really doesn't give me all the info I need.  For example I don't know what polyfills you're loading.  A live test URL is the best way for me to help you here.  Could you use a tool like JSBin to demo the problem?\n. Ah, OK. So in IE11, the Event object is not a constructor, so you can't do new Event. This is fixed by the polyfill, but a side effect is that because it redefines Event, the prototype chain between constructors that inherit from Event and the Event object is broken, so your PointerEvent instance is no longer an instance of Event.  I think I can fix this with https://github.com/Financial-Times/polyfill-service/pull/713.\nWhat do you think?\n. Ouch, this is a serious issue. I'll hotfix this in VCL in the next 30 mins.\n. Deployed to Fastly.\n. @richtier sorry about this and thanks for reporting the issue.\n. Looks OK to me.\n. Here are instructions for doing that: https://cdn.polyfill.io/v2/docs/contributing/common-scenarios#update-polyfill.  We would welcome the contribution.\n. There are actually very few examples of accessor properties being used in Intl.  I found three from a Github search:\nhttps://github.com/andyearnshaw/Intl.js/blob/master/src/11.numberformat.js#L372\nhttps://github.com/andyearnshaw/Intl.js/blob/master/src/12.datetimeformat.js#L787\nhttps://github.com/andyearnshaw/Intl.js/blob/master/src/12.datetimeformat.js#L792\nAlso the way Intl detects a native implementation of defineProperty is pretty good:\nhttps://github.com/andyearnshaw/Intl.js/blob/master/src/util.js#L3-L8\nHowever, it is happy to use any existing implementation that can create a blank property.  If that doesn't work, it falls back to a bundled polyfill that just ignores getter definitions. Because of the likelihood of side effects, we don't do this in the general polyfill, and instead throw an error.\nPossible solutions:\n1. Polyfill service changes the general defineProperty polyfill to not throw if you try to define a getter or setter in an environment where that won't work. We could do something less aggressive like a console.warn (though the browser concerned probably doesn't implement console), but basically the effect would be that it would silently not work.  This would mirror the functionality implemented by the Intl polyfill's bundled defineProperty.\n2. Intl polyfill could update its test for native defineProperty support to try and define a getter. This would (currently) cause our defineProperty polyfill to throw, and would then fall back to the more forgiving bundled dP implementation within Intl.\n3. Intl polyfill could stop using accessor properties entirely.  Since they only use them very sparingly, this seems like not a massive amount of work, though given how sparingly they are used I suspect they're only used where they're essential.\n/cc @caridy \n. @andyearnshaw thanks for the pointer on DOM object accessors. I believe we already have that covered by using the native impl in IE8 when the target is a DOM object:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Object/defineProperty/polyfill.js#L10\nDo you think we can improve on this?\n. well, our polyfill might throw an error - if the definition of the property includes a getter or setter.  Otherwise it would work, and therefore be better than the native version if the target is not a DOM object.  Interesting tip though - so {} instanceOf Object is false in IE8?  Wow.\nMaybe the simplest solution is that if there's a native impl we could always try using it, wrap it in a try...catch and polyfill in the catch.  I could give that a go but it's probably not the best use of time.\nGoing to close this since you have an issue to update your feature detect.  When you merge the change we will pull in an update.\n. Actually on second thought we have a flag for tracking an upstream issue...\n. @davidpelayo Good point, but different issue.  Please raise separately.  If you could do it in a PR that updates the detect.js file, even better!\n. Agreed.\n. Sure.  I just reached out to @getify to see if this solution is non-bonkers enough to fly, and if so tests will ensue.\n. Quick response from @getify on twitter:\n\nfirst glance, i think there may be an issue where you need to use defineProperty instead, but will play w/ it ASAP\n. Can you define the prototype property using defineProperty?  I guess so!  Maybe what I've done makes it enumerable?\n. We no longer support polyfilling IE6, and a native Event.prototype only exists in IE10+ anyway, so we'll only be attempting to run this code path in 10+ of IE.  It passes our test suite in IE 6-13 (where 12 and 13 are Edge!).  I've never seen anyone define a prototype with defineProperty before, which is why this form seemed likely to be 'more right'.  I'll try using defineProperty.\n. Happy to have a polyfill.  Can you submit one?\n. thanks for raising this and for the suggestion. We are adopting a policy of not keeping feature-request issues open for long periods of time, if no-one seems keen to implement them, so this issue will be closed now. Of course we always welcome contributions and that includes a contribution that adds this feature.  If you need any help, please feel free to open a new issue and we'll do our best to assist.  We're also happy to hear any suggestions that would make contributing to the project easier.. @robwierzbowski we serve Map and Set to IE11 because its native implementation is buggy/incomplete.\n\nIt seems like it's a common use case to attach an iterator to a DOM collection and if that works natively then the polyfill should not fall over if you try and do it.  I think it's worth trying to fix this issue, especially as it's still a problem for FT sites too.\n. Here's a JSBin that reproduces this problem:\nhttp://jsbin.com/momuqi/edit?js,output\nAs we've established, this is a problem of attempting to attach an iterator to NodeList.prototype.  Since NodeLists appear to natively act as iterators in Chrome, I assume a full polyfill would cover this case, though I think we didn't polyfill this because it's outside the Symbol object.  @wheresrhys was planning to make those objects iterable.\n. Closing this on the basis that it is fixed in prod.  @victorwhy please feel free to post a followup with your results if it's not working for you.\n. We removed this feature because it was actually preventing us from pushing bugfixes. Every time we pushed to prod, we had to bundle yet another complete copy of the polyfill collection. Since the app reads the collection into memory for fast performance, this meant rampant increases in memory consumption over time.\nIf you want the reliability of something you'd update on demand using a build tool, you really should be running your own version of the service.\nHowever, this does make me think that there's potentially another solution: we could define fixed default collections. These problems have happened because we changed what's in the default collection. If we created a new alias default-3.5 and tagged all the polyfills that were previously default, and also default-3.7 on all the polyfills that have default, then you can choose to evolve with the collection, or stick to the set that was in the default collection when you first started using the service.\nYou would still be subject to changes in polyfill targeting and bugfixes in the polyfills themselves but this is considerably lower risk than gaining new polyfills that you hadn't previously tested with your site.\nWhat do you think?\n. > When you say update on demand using a build tool, do you mean installing this module as a dependency and generating polyfills at runtime, i.e. running a specific version of the polyfill service myself ? Yes that is a viable solution.\nYes - either run it as a dependency and use it as a library via the Node API, or run it as an independent SaaS platform like we do, but just for your benefit.\n\nI think releasing a versioned default bundle is a great idea, but I don't see how someone would be subject to bugfix changes as those would be different versions if you follow semver.\n\n/polyfill.min.js?features=default-3.5 would be the same set of features forever.  Those features' polyfills might change, however.  If any changes are released to their polyfill.js files, those changes will be reflected in the response you see.  However if we choose to change what features are included by default, you don't get that change if you are using one of these theoretical 'frozen' alias names.\nI think it's a pretty decent compromise actually. @JakeChampion what do you think?\n. Implemented immutable set definitions in #725\n. Lots of tests failing currently:\n- firefox 30 (Sauce results: https://saucelabs.com/tests/b94ad354298f4f3b803e6ec1bfb98775)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n - ie 11 (Sauce results: https://saucelabs.com/tests/de467c61f62d49edbe23e95b3319e915)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n - ie 10 (Sauce results: https://saucelabs.com/tests/8f42561637e34d149f4f8c1e52ca46cb)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n - ie 9 (Sauce results: https://saucelabs.com/tests/dfa51b33f0274befb07f9356db687bf7)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n - ie 8 (Sauce results: https://saucelabs.com/tests/e721637860a34aeca55ba6a0685f5440)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n - ie 7 (Sauce results: https://saucelabs.com/tests/4ec1be175ecc4dc4a552f2be70695919)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n - safari 8 (Sauce results: https://saucelabs.com/tests/d4aba873dbeb4aa78543ff44a21f8d07)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n - android 4.4 (Sauce results: https://saucelabs.com/tests/7b64a699a63b45848b48bdc39ebc6e69)\n    -> Array.prototype.@@iterator\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.prototype.@@iterator\n@callumlocke can you finish this off?\n. @callumlocke referendum over.\n. Source code currently fails to parse in CI:\nWarning: Error parsing source code for NodeList.prototype.@@iterator feature detect from /home/ubuntu/polyfill-service/polyfills/NodeList/prototype/@@iterator/detect.js\u0007 Use --force to continue.\n. Wow, we're using registerElement in origami?  Where?!\nIf this is no longer on standards track I would be against putting it in the polyfill service unless to not do so would cause issues for FT\n. @antoligy did you get anywhere looking into this?  I'm tempted to close if registerElement is dead.  From the diffs it looks like defineElement still lives, but I haven't read all the changes in detail so I don't know where customElements.define sits in relation to defineElement.  Maybe this is something to defer for now - I've no objection to hosting polyfills for features that are not yet stable, but it's a lot of work to keep up.\n. Ah yes, o-share is a testing ground for web components, but I don't think we intended the WC version to actually be used in production.  I think we're a fair way off that.  If you want to contribute a customElements.define method it would be gratefully received!\n. Hi Alex, thanks for this!\nYou need to turn on the commonjs build option in config.json (build.commonjs = true) to make commonjs requires work correctly.\n. Incidentally, I thought you had push rights on FT repos. If you do, can you create a branch local to this fork so that the CI can run?  \n(It would also be very helpful if you could check and update the browser support!)\n. I opened a local branch for this in #728 so we can use CI.  There's a problem with IE7 and 8, but it seems to be originating in our Document polyfill, not the fetch one.\n. @wheresrhys regarding your comment, the issue i'm having with commonjs builds is that something in the browserify wrapper code is interfering with some of our very-legacy polyfills, potentially because it is already polyfilling those things.  I didn't get any further than confirming that reverting to copy-pasting the source code into the polyfill.js file in the case of fetch fixes the problem.\nBut it seems worth being aware of the fact that browserifying a bundle might cause issues in polyfills that don't themselves require browserifying.  I'm a bit worried about this, and how we aren't really testing those scenarios, so I'm leaning towards backing out the commonjs support unless we can control these risks more effectively.\n. We do have a solution to that - private polyfills, essentially shared dependency functions.  See https://cdn.polyfill.io/v2/docs/contributing/authoring-polyfills#update-tasks, specifically the bullet point \"private dependencies\"\n. Sorry about that. I don't have IE mobile available for testing.  If you do, can you try it and add the appropriate configuration?\nhttps://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. Also @nolanlawson may have devices / support data to hand?\n. Even better if you can run the director without a feature filter (to test all features) with mode=all and mode=control.  This gives us results for native implementations and results after polyfilling.\nThe work that then needs to happen is to diff the two resultsets, compare to the existing config.json files and PR the necessary changes.\n. I suspect if that's the case we'd have similar problems to you trying to programmatically extract results from the phone.  But I certainly won't say no to test devices.  I'm in Tokyo and my colleagues are in London, but probably best to send them to London.  I'll send you the details by email.\nMeanwhile if you know the rough support data for those devices feel free to just send us a PR.  Over-polyfilling is not normally a problem and helps people out quickly.\n. @JakeChampion potentially bad news about commonjs builds.  In debugging this issue, I found that something in browserify's boilerplate is interfering with our Document constructor polyfill in IE8.\nIt's possible that when browserifying the bundle we need to make changes to some of the fundamental constructor polyfills like Document.  But in the meantime I copied the latest tagged source from the fetch repo and it now parses in IE8 without errors (our test suite is just a feature detect, but no errors are thrown)\nInterestingly, the only other commonjs-build polyfill we have currently in master is HTMLPictureElement, so I ran that test in IE8 and it passes - possibly because it has no dependency on Document, but possiblly because browserify seems to be outputting far less boilerplate.  For the fetch polyfill it appears to need to add polyfills for process.nextTick, for example.\nSeems like we need to be quite careful with commonjs builds, because they raise the possibility that polyfills that work on their own might not work when in combination with another polyfill that causes the whole bundle to be browserified.\n. Beaconing real-would detection stats was discussed as part of https://github.com/Financial-Times/polyfill-service/issues/366, and I'd be in favour of trying it out, strictly as an opt-in.\n. The current issue is https://github.com/Financial-Times/polyfill-service/issues/107\n. You've reignited my interest here so I'm posting a proposal over at #107.  I think the title of that issue better captures the problem so I'll close this one.\n. There's an update to the latest fetch here: https://github.com/Financial-Times/polyfill-service/pull/728.  It is currently failing in older IE, but I think this is because of a problem with some of our dependency polyfills, on which it now depends.  It's on my list to look at, but right now we're using a version of the polyfill that still has IE8 and 9 compatibility, and we won't likely merge the update until we achieve passes in those browsers.\n. 3.7.0-rc.2 deployed to QA and npm to address #734, though it has no effect on production code since we build our deployment container locally.\n. Thanks for this. I'm extremely glad that you caught it and vey much appreciate it. It's happened because I am currently working on a project with some private packages that use that registry and my ~/.npmrc has gotten updated with this registry address. I will push a correction shortly.\nThat said I don't believe this change is a security issue since my organisation controls this registry, but it's a bad mistake that we'll fix imminently!\n. Fixed in https://github.com/Financial-Times/polyfill-service/commit/eb04e02c38acc6b7bf1c095b14a1ab68e35de857\n. Aliases are in https://github.com/Financial-Times/polyfill-service/blob/master/lib/UA.js\n. I've raised this with the Vivaldi browser folks:\nhttps://twitter.com/triblondon/status/819198359986544640. @nifgraup thanks.  If I test that UA we already recognise it specifically as vivaldi:\nhttps://polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(X11;%20Linux%20x86_64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/55.0.2883.98%20Safari/537.36%20Vivaldi/1.6.689.46\nThe problem is we have no polyfills for vivaldi. I could alias it to chrome but it has a different version scheme so we'd need to map each version.  Would the best solution be to remove the vivaldi/n.n.n token from the UA before parsing?\nIf I do that, the UA above gets picked up as chrome 55:\nhttps://polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(X11;%20Linux%20x86_64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/55.0.2883.98%20Safari/537.36\nIs that good enough for polyfill purposes?. Hi Nolan - thanks for raising this. Mistargeting is a common problem, and easy to fix.  We've posted instructions here:\nhttps://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\nBasically, edit the config files such as this one for Promise, to adjust the browser targeting.\nI would love to see more contribution from browser vendors like MS to the polyfill service.  We're currently just concluding a successful effort with Google to add a polyfill for IntersectionObserver, we're serving around 500m polyfills a month from our CDN service, and obviously there are many other features we could be polyfilling but don't as yet. If you like the way the service works and what we are doing we'd be delighted to welcome contributions from the Edge team.\n. Automatic configuration has come up before and I do intend to implement it soonish, initially just as a mechanism for highlighting potential errors in the configuration, but maybe at some point to do the configuration automatically.  More info in https://github.com/Financial-Times/polyfill-service/issues/107\n. Since Edge 13 is a browser we already test in CI, support is actually already indicated on our feature matrix.  Looks like it works in 13, but not in IE7:\n\nIf you want to make the polyfill work in IE7, great, otherwise you probably want to start targeting at IE8.\nTo merge a change like this we normally ask for you to follow the simple steps in \nhttps://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers. But in this case both browsers concerned are actively tested by our CI, so the testing steps are not required.\n. Many of the polyfills do work in IE7, but this one doesn't.\n. Great.  Thanks for this.  It will be released in 3.8.\n. Updated the resolve thing. OK with that and the next thing?\n. This is actually already fixed in master - https://github.com/Financial-Times/polyfill-service/commit/0cfd3269df5b19b556fdd1fda0711a96355cad8f#diff-9196b807a42aa88966f3ce475292b219.  Thanks for pointing it out and sorry this got through.  Will be released in 3.8.\n. Jake - I've got more to do here but interested in what you make of it so far.  Also paging @wheresrhys\n. https://github.com/Financial-Times/polyfill-service/commit/471ddf842dc4d672dbf3b09702d91b850d04e4b9\n. @JakeChampion Is this something you've discussed within the Origami team?  If we are going to offer support on a gitter channel, we need to ensure that it's regularly checked or staffed, and that we cover its existence and use in our documentation.  It is an extra responsibility which I'm cautious about and I wouldn't want people to get frustrated with the project because they were trying to talk to us in gitter and we're not there.\n. Hi @niphor can you try to include only enough polyfills to generate the problem?  Rather than using excludes, try using features to only include the features you want.  If you can nail it down to one feature that would help us figure out the problem (and even better if you can trace the code in jQuery which is triggering the problem).\n. I don't think compatibility with jQuery 1.x is going to make it to the top of our priority list, unfortunately. Of course we always welcome contributions and that includes a contribution that resolves this issue. Glad to hear that the issue is at least partly resolved by 3.9.0, and if you're still experiencing the second part of the issue we'd welcome a PR with a proposed fix.. No problem.  See https://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers for how to fix this.\n. We don't have anyone stepping up to test this, and FT devs are not supporting blackberry devices with script, so closing.  If anyone wants this, please see #945 and do the testing to complete this work.. I updated us to the latest version of the useragent library and it is still parsing this UA as ios_saf 0.0.0.  If you replace the iPod touch token with iPhone it parses correctly, so I think this requires a PR to the ua-parser project.  This is the file that needs to be updated:\nhttps://github.com/ua-parser/uap-core/blob/master/regexes.yaml\nIt looks like ipod touch is not a recognised token.  Could you push a PR there and to the useragent module?  I'm happy to pull a new useragent release as soon as it's updated.\n. Endpoints to purge:\n/v2/\n/v2/docs/\n/v2/docs/features/\n/v2/docs/api/\n/v2/docs/examples/\n/v2/docs/usage/\n/v2/docs/contributing/\n/v2/docs/contributing/authoring-polyfills/\n/v2/docs/contributing/testing/\n/v2/docs/contributing/common-scenarios/\n. No problem, thanks for raising an issue, Alex.\nOn Wed, 6 Jul 2016 at 20:35, Alex Wilson notifications@github.com wrote:\n\nClosed #752\nhttps://github.com/Financial-Times/polyfill-service/issues/752.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/752#event-714205789,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/ABp636bJSJ9XmyAntgpwJvvcMg1t9wY0ks5qS5McgaJpZM4JF9Uy\n.\n. Thanks!\n. It'll be a while. We're about to release 3.8 to live.  Expect 3.9 in a few weeks.\n. Fine with this.  Our CI does not cover mobile IE so there's nothing here to test.\n. Agree, an explanation of the bug would be useful.\n. > IE11 uses the patched Object inside the iframe\n\nWhat.\nI can't comment on this extensively, but it looks OK as a defence against that behaviour.\n. Looks like @JakeChampion has added the indexOf dependency and it's now passing!  This is really superb work.  Thanks for letting us know about the update.  See #762 for the PR.\n. PR merged.\n. Great news that IO is now available from the npm registry.\nI have a few niggles with this approach:\n- installpolyfill is only used as part of tasks, but it's in lib.  It would be better in a subfolder of tasks, I think.\n- Do we need installpolyfill to be a separate module, rather than just improving the update task?  Maybe we could consider putting some config in the config.json file for a common install pattern, eg an install section that contains something like {\"module\":\"intersection-observer\", \"paths\": [...], \"postinstall\":\"update.task.js\"}.  This would cause the generic update task to install the module, concat the files in paths together and copy the result to the polyfill.js file.  If necessary, a local script could run to do anything specific either pre or post install.\n- The installpolyfill script is more functional than the rest of the polyfill service code. I'm not opposed to FP, but using eg. ary instead of a closure, and sum to conat strings is not intuitive to me. May be worth asking the rest of the Origami team to make sure the code is easy enough to maintain.\n. > it would also mean the polyfill's source code would no longer be in our repository as it would be pulled in when running npm install\nAh, no, I hadn't thought of going that far actually.  I suppose with shrinkwrap, this would be OK, but I hate shrinkwrap and was thinking that we could now get rid of it - our deployment process now ships the same container to prod as the one that we test on staging, so there's no possibility of a change in deps.  I guess that possibility still exists between CI and the QA deploy though.\nThe problem with shrinkwrapping is that nothing ever gets updated, plus the shrinkwrap file appears to change based on the individual developers' npm client version and settings, which means the diff is often huge and useless.\nI'm willing to feel more positively about shrinkwrap if you want to pursue this, or we could otherwise keep the polyfill.js around.  Maybe in that case the config.json property should be called update rather than install.\n. Review complete.  Feel free to merge it once you've taken those comments in. I don't need to review again (i'm also about to get on a plane so can't anyway)\n. OK, keeping a reference to a pre-patch version of a native property definitely makes sense, and we do the same in Object.defineProperty.  Is there any other benefit to the abstraction?\n. OK, I guess there's no need for any code or docs changes, just wanted to discuss it.\n. Great idea.  This is a third party polyfill, so the best place to start is https://github.com/inexorabletash/polyfill, and if they're happy with the idea maybe raise a PR there?  If the polyfill is updated to expose URLSearchParams, we would update our copy, and add URLSearchParams as an alias of URL, since they are actually both independent web APIs but contained in one polyfill.\n. Thanks!  I'm confused about why that variable is called eventElement since it seems to be (expected to be) a handler function.  I'd be happy to merge this.  @JakeChampion could you run CI and merge if you're OK with it?\n. Do we need both the build and installpolyfills tasks?  Feel free to consolidate if possible.  Otherwise \ud83d\udc4d \n. They were ported from there so our tests are essentially a fork of an older\nversion from the source repo.\n. @JakeChampion does this still happen?. @matthew-andrews you know about this issue, right?\n. @matthew-andrews why not?\n. Yes, we have quite a lot of those.  In this case I don't think the polyfill will maintain the data from one page view to the next, it's just an in-memory store.  Having said that, it does something with DOM elements that I don't really understand.\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/localStorage/polyfill.js\nIf it works well enough for normal environments, I see no reason not to allow it to be loaded in private browsing mode if it works there.  @lelledaniele have you tested it?\n. @lelledaniele to test this in private browsing mode you'd need to force-load the polyfill, using https://polyfill.io/v2/polyfill.js?features=localStorage&flags=always\n. So it looks like the polyfill does not override the native (lack of) implementation even when force-included.  It seems like that's because the polyfill includes a feature detect:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/localStorage/polyfill.js#L73\nI'm really uncomfortable with this polyfill, the more I look at it.  I have no idea why we're using a DOM element to hang properties on.  Does this give us some kind of persistence in some weird way that I'm not able to understand?  I'm tempted to swap out a simpler polyfill which doesn't include an inline detect, since the only real use case for a localStorage polyfill is private browsing.  Something like:\njavascript\nwindow.localStorage = (function() {\n   var protected = [\"setItem\", \"getItem\", \"removeItem\", \"clear\"];\n   return {\n      setItem: function(id, val) { this[id] = String(val); },\n      getItem: function(id) { return this.hasOwnProperty(id) ? this[id] : undefined; },\n      removeItem: function(id) { (this.hasOwnProperty(id) && !protected.includes(id)) ? delete this[id] : undefined; },\n      clear: function() { Object.keys(this).forEach(this.removeItem, this); }\n   };\n}());\nNot tested. \n. I've done more of a review here.  The bottom line is:\n- You cannot detect server side whether a browser is in private browsing mode (which is partly by design, so unlikely to ever change)\n- Currently we don't target Safari with the localStorage polyfill because (outside of private browsing) it does support localStorage\n- Our existing polyfill wouldn't take effect even if we did serve it in PBM because it contains a simplistic feature detect\nSo the best option we have here is:\n- Rewrite the localStorage polyfill to incorporate a more intelligent feature detect\n- Serve it in all versions of Safari regardless of PBM, and rely on the feature detect to avoid activating it outside of PBM\n. @georgecrawford read the PR description :-)\n. @philipwalton\n. Posted a reminder in that issue. \ud83d\udc4d \n. - No Intl?\n- What's the naming rational for samsung_mob rather than just samsung?  Is samsung planning to make multiple browsers or would that at least be a viable possibility?  If not why do we need to be specific here?\n- Missing docs in https://github.com/Financial-Times/polyfill-service/blob/ae4aa7477c211a699cf0b700c0124a976ad8b4ea/docs/contributing/authoring-polyfills.html\n- Will Samsung be officially supporting this config for future versions?\n. Since we have separate polyfills for each locale, don't we already solve this with individual detects?\n. \ud83d\udc4d \n. \ud83d\udc4d \n. It's been a couple of weeks.  Let's close this and @FredyC can reopen if he has further comment\n. Hi there,\nYou can easily fix this by adding the appropriate browser configurations to our target files.  Instructions here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. OK, we have a few issues here:\n- Missing polyfills for some browsers: adjust the configs.  You have PRs for this, awesome.\n- Incorrect identification of Android as Chrome.  You may need to raise this in the ua-parser project (example: https://github.com/ua-parser/uap-core/pull/155)\n- Not serving non-default polyfills when not explicitly requested: You need to request them, which you're now doing.\nI'm going to close this issue as I think we've gotten to the bottom of these points.\n. Agree with Rhys.  I think we should ship this change in 3.9 otherwise we'll have a problem with Samsung.\n. Picturefill ambitiously claims \"No known unsupported browsers\"\nhttps://github.com/scottjehl/picturefill#support\nWe do not host the tests for picturefill and I don't know if they run them in IE7.  I'm pretty relaxed about serving this in IE7 though, especially since its not in the default set.\n@debugwand have you tested the picturefill polyfill in IE7?\n. OK. I'd be more comfortable with this if you could create a simple reduced test case and test it in standalone IE10 compat mode and also in real IE7, just to make sure it doesn't throw any errors.  Typically I use jsbin.com for this.  The JSBin UI does not work in IE7, but you can view the output of the bin only by replacing the /edit with /quiet on the URL.\nI'm also having trouble testing your change because you have not created a branch, and my git-fu doesn't seem to be good enough to figure out how to push your branch to our main fork in a way that keeps it associated with this pull request.  Do you know how to do that?\n. @3LOK thanks for this.  Can you provide the polyfill URL you are using and paste the contents of the comment from the top of the polyfill service output (remove .min if necessary)?\n. @3LOC @oscar-b can either of you provide the UA string of the browser affected by this issue?\nAlso note that as a workaround, if the browsers concerned already have defineProperty, you can force the bundle to include protective feautre-detects by adding flags=gated to your polyfill.io querystring.. Yep, will look at those.  I lazily relied on the PR to run CI rather than running it from my local machine first.\n. @JakeChampion success! I had to disable number of tests because of buggy native implementations in Firefox and edge, and because some of the features tested are not actually implemented by the polyfill.  But I also added a slew of extra tests by updating from the upstream repo. Ended up removing edge targeting because native support is almost perfect in edge, and adding iOS Safari targeting because URL is not supported on Safari on any platform.\nCould you merge if you're happy with this, and tag for whatever your next release is?\n. New polyfill is about 3x the size of the current one.  Good to delegate maintenance to someone else but is that necessary?\n. shirnkwrap always seems to change more than I expect it to...\n. \ud83d\udc4d \n. I've never actually used this and no-one has ever reported any issues with it.  So I don't think it's one that gets used all that much.  The code looks to be fine, assuming the linked polyfill works!\n. How about third party polyfills whose sources we are currently hosting?  I wouldn't want to cause test failures just by upgrading them from the original source.\n. All the ones with repo properties in their config.json files.\n. Can't see any flex support in Philip's project, it just provides hooks to your own flexbox polyfill.  Flexibility looks like it could work.  We'd accept a PR adding this feature.\nWe've recently updated our documentation on how to add a new feature, and haven't deployed it yet, so apologies for not offering a rendered version.\nhttps://github.com/Financial-Times/polyfill-service/blob/master/docs/contributing/common-scenarios.html#L45-L66\n. Older version of the docs: https://polyfill.io/v2/docs/contributing/common-scenarios\n. Nice.  Thanks for updating these.  I only discovered npm-check recently and am using it at Nikkei but hadn't gotten around to thinking about the polyfill service.\n. > Disclaimer: Everytime I touch VCL I have to read through the documentation on what each function is meant to do.\nYou're not the only one.\nLooks like a great idea apart from the line that breaks everything.\n. Reassigning to me there was a bit overcautious!  It's fine now :-)\n. - Good to get improved compatibility and active development / bug fixing \ud83d\udc4d \n- Internally maintained is good and bad - though I appreciate Rowan doesn't make Proclaim on FT time, it would be fair for him to do so if we're using it.  It's obviously cheaper for us to use an expectation library that is a large community project rather than something we have to maintain. However, we also get to prioritise bug fixes if we're sponsoring them!\n- I do prefer the syntax style of expect.  It is easier to remember which way around the candidate value and  the expected value go if you write expect(foo).to.be(42) than if you write proclaim.equal(foo, 42).  Is there any proclaim support for that / do you violently hate the expect syntax?  I wouldn't veto the change though.\nI assume you automated all those commits!?\n. Super useful if you could drop in a screengrab of the compat table you're using to derive these numbers.  Cautious here as we don't test Opera, ie mobile or FF mobile in CI.\n. Example for Map from https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map:\n\nWe'd like to make sure that proposed changes to targeting configs are not guesses, but are based on tests. A screenshot of our tests running in that browser before and after the polyfill is ideal. but failing that, citing an authoritative source of compat data is good enough.\n. We'll announce this on twitter, see Jake's comment: https://github.com/Financial-Times/polyfill-service/issues/820#issuecomment-238654741.\n. @brenoferreira @vojtech-dobes @nmaves I've pushed the fix to QA.  Does this resolve your symptoms?  Here's @nmaves's URL on the QA host:\nhttp://qa.polyfill.io/v2/polyfill.min.js?features=default,Intl.~locale.fr,Intl.~locale.en,Intl.~locale.es\n. If you could chime in on #824 that'd be grand.\n. @jswift are you sure this is not a local caching or network issue?  I evaluated the output from that URL in Safari 8 and got no SyntaxErrors.  Could you add a &ua=safari/8 or whatever version you are using to lock the output to the detected version and see if you get the same output.  If not, please diff it and tell us how it differs.\nFinally, your syntax is out of date, so you may want to look at updating that:\n//cdn.polyfill.io/v2/polyfill.min.js?features=es5,Intl.~locale.en-AU&flags=always,gated\n. @JakeChampion I couldn't make this code work for me, either in QA or locally, or in a simple reduced test case.  Weird.  I ended up doing this:\nhttps://github.com/Financial-Times/polyfill-service/compare/v3.9.0...v3.9.2\nIf you're happy with that, I'll make the same change to master.\n. @egoldblum thanks for raising this.  We noticed this problem and have a fix ready:\nhttps://github.com/Financial-Times/polyfill-service/pull/821\nIt is currently slated for 3.10.  In the meantime an effective workaround is to use non-minified polyfills (ie remove the .min from the URL).  @JakeChampion can we push this fix as a 3.9.1 patch?\n. Working on a release now.\n. Promoted to prod, caches cleared.\n. Thanks, pushing to a local branch for CI...\nYou may also be interested in https://github.com/Financial-Times/polyfill-service/issues/107, which I'm working hard on at the moment.\n. Can you cite some compat data here?  CI is fine, and I'm happy to merge if you can confirm that your proposed targeting matches documented compatibility,\n. We welcome a PR to add the missing polyfills for Android browser.\n. Classlist is not required in chrome 52.  You are loading it with the always flag, but not the gated flag, which means you're trying to overwrite a native implementation with a polyfill.  In this case, the polyfill cannot overwrite the native implementation, but we don't consider this a problem.  Either include the gated flag, or remove the always one.\n. Thanks, much appreciated!\n. You changed the choice of polyfill here, are we still using the right browser targeting?\n. This is fine.  In my rum branch i'll move this into tasks/node\n. I'll try this out next week, when I get my cast shortened so I can straighten my arm :-(\n. I think this is a good idea, though i think it could be lighter, both in terms of our code and number of new dependencies.  Also maybe you could consider offering an option to built the boilerplate that glues together detect and polyfill into detect? \n. Wow, this is like templating system in VCL.  You could do a lot with this, but I'm not sure it would achieve much in this particular use case because I don't think we suffer much cache fragmentation as a result  of the callback param\n. @wheresrhys but feel free to offer us a PR for this if you like.\n. @andrepereiradasilva Sounds feasible.  Can you do some tests and submit a PR?\n. So now #840 is closed, what's the status of this problem now?\n. @zslabs try here:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/lib/UA.js#L46\n. @MartijnHols we'd also be delighted if you would consider helping us to improve our browser targeting. We prepared a document to help people get started if they want to correct browser targeting configuration:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. Currently we don't support Googlebot as a browser family.  We still recommend using the unknown=polyfill config parameter if you want to polyfill for search crawlers.  We would welcome any efforts to either add and maintain a googlebot browser family, or create aliases to the appropriate versions of chrome or webkit. However, I'm aware that Google doesn't publicly disclose which browser engine version is used by Googlebot, so it is kinda hard to do that.. Done the perf visualisation:\n\n. Updated:\n\nthere is still a hardcoded AWS role in the Apex project.json file\n\nThere's precedent for this, and @matthew-andrews recommended using Apex's 'environments' feature, which I've done\n\nDeploying the Lambda functions requires the AWS credentials to be in your ~/.aws/credentials file as polyfill and polyfill-qa profiles, and for the RUM_MYSQL_DSN and RUM_MYSQL_DSN_QA env vars to be defined in your .env file (possible solution from @JakeChampion: use env vars on command line when invoking apex deploy)\n\nUsed Jake's suggestion.\n\nHTTP API docs are shown even if RUM env var is not set.  Should probably suppress these.\n\nDone.\n. Regarding tests, what do you want to test, and how?  I'm not bothered about breaking RUM.  I appreciate that we don't want to break the service, but that should already be tested.\n. > The AWS credentials are in Lastpass but they need sharing with the origami team.\nDone\n. Agree that if we are using RUM to directly affect targeting automatically, it needs to be tested and monitored, but right now it's an experiment.  I just want to collect some data and see if it makes sense.\nAgain, I don't know how you'd test it effectively.  The most serious failure is taking down the service (already covered by tests) and I'd say the second most serious is producing incorrect data, and it's impossible to know if the reported data is right until we collect some.  I'm open to suggestions though - what tests would you suggest we implement before merging?\n. I don't know how I would unit test the RUM reporting routes, they require MySQL and hook directly into Express router meaning they can really only be subject to an integration test. I could unit test the lambda function but I just don't really care if it breaks, and it's totally isolated from heroku.  My tests would also probably not cover the failure scenarios because I don't know what they are yet.  The function leaves behind any files it cannot process so I can monitor for unprocessable logs.\nIf you can highlight exactly what you want tested, I'll look at doing that.\n. we'd be delighted if you would consider helping us to improve our browser targeting. We prepared a document to help people get started if they want to correct browser targeting configuration:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. Currently we don't support Googlebot as a browser family. We still recommend using the unknown=polyfill config parameter if you want to polyfill for search crawlers. We would welcome any efforts to either add and maintain a googlebot browser family, or create aliases to the appropriate versions of chrome or webkit. However, I'm aware that Google doesn't publicly disclose which browser engine version is used by Googlebot, so it is kinda hard to do that.. @zslabs Hey Zack.  Currently your change will map every version of uc browser to IE10 (including all future versions of UC Browser).  That seems like it might not be a great match.  I think a couple of specific version mappings would be OK, but as proposed I think this change would make targeting worse over time (because the gap between UC latest and IE10 would widen)\n. @zslabs can you screenshot and paste the docs that you're using as a reference for those figures?  And also a sample uc browser UA string which we can use to test the browser identification?\n. OK.  I tweeted at UC to ask them if this seems like a reasonable mapping to them:\nhttps://twitter.com/triblondon/status/774065264736415745\nIf they are OK with it or don't respond then I'm happy to merge it.\n. @tinovyatkin the current behaviour is intentional, but we will be changing to make it more in line with your expectations in an upcoming release.\n. I think the change in the rum-lambda branch is a better option than this - we moved grunt into tasks/grunt and lambda into tasks/lambda\n. We've pushed a new version that adds more RUM improvements, 3.12.0-1.  We don't expect any impact on the core service.\n. @Merri we'd be delighted if you would consider helping us to improve our browser targeting. We prepared a document to help people get started if they want to correct browser targeting configuration: \nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. Tweeted at Opera: https://twitter.com/triblondon/status/819450967141675009\nHowever they recently disbanded their entire devrel team so I'm not optimistic.. The problem is that page doesn't tell me what was supported in earlier versions.  Taking the requestAnimationFrame example cited by @merri above, this is what caniuse says:\n\nAnd therefore we do this:\nhttps://github.com/Financial-Times/polyfill-service/blob/v3.16.0/polyfills/requestAnimationFrame/config.json#L18\nThis may well be because caniuse doesn't have enough granularity on Opera versions, and isn't necessarily wrong.  Probably the easiest solution for us is to 'over-polyfill' Opera by targeting raf at <15.  Is there anything else that change might apply to?. @zcorpan That's brilliant, thanks!  We'll get these updates applied.. > The third-party polyfill mechanism is really cool ! But I'd really rather use some config to add / replace some polyfills instead of doing a PR. This is so much effortless for your users ! And I don't even talk about the polyfill replacement use / case. My point is I don't think maintaining a \"perfect for all\" polyfills collection is doable.\nIf you are hosting your own version of the service, you can add whatever polyfills you like :-).  You literally just create a folder for the polyfill and stick the necessary files on it and restart the service. Did you want something different?\nI'm certain that we will definitely not consider allowing people to serve their own polyfills through our CDN, as that sounds like an origin security nightmare to me!\n\nAs for the CDN caching, I don't use Faslty, and don't intend to. Am I doomed ? \ud83d\udc80\n\nNo, you're fine! We are really pleased with the way that we use Fastly to improve our cash it ratio, but that doesn't mean that those optimisations are essential, and in your use case might be considered premature anyway.\n\nLast but not least, I prefer feature detection as it seems to me safer to detect what a browser supports by testing it directly instead of adding a middleware catalog (that needs maintenance) between a browser and its polyfills. But this doesn't means that UA sniffing don't have its own use-cases ! Also, feature detection can be more performant as when a browser doesn't need polyfills, it doesn't make any polyfill call at all instead of making a call for an empty file.\n\nWell, you still need to make the call for the feature detect, unless you put all your feature detects in line, and that could be quite a lot of code by itself. We are pursuing two different angles on this: Jake is looking at building a feature detect bundle endpoint, so for those people who really can't stand user agent sniffing, they can use client side feature detection (though to be clear, we think the UA approach is far more performant).  Meanwhile, I am working on a real user monitoring solution, which runs feature detects on the client side and beacons the results back to our server so we can test that our user agent configuration settings are correct, and update them when they need to change.\n. If you want to add your own polyfills but want to commit them, then yes you'd need to fork.  Since both of the things we're discussing here are covered by existing issues I'll close this thread.  Good luck with your project, and do consider contributing to the core effort if you have time.\n. Hmm. The challenge here is that the polyfill (or indeed the native feature) does not pass the detect.  So our test framework will conclude that modern browsers do not have DOMContentLoaded.\nMaybe support for this feature is not detectable?  Removing the detect is an option, unless you have any other suggestions?\n. This is the kind of polyfill which will create a problem if it takes effect when it is not needed, because it may result in us firing two instances of the DOMContentLoaded Event.  The current detect is conservative in this regard: we are taking the view that it is better to fail to polyfill where needed than to double polyfill. This is actually the reverse of our normal policy, because normally \"over polyfilling\" has no obvious negative effect, other than inflating the size of the bundle.\nSo if the browser support for DCL is the same as for addEventListener, then yep, combining them makes total sense.  Otherwise I'm not sure.\n. OK, @andrepereiradasilva would you like to merge them together?  Happy with that.\n. Looks like we already have a reasonable detect that would catch this poor implementation and fail, but we don't target Saf 8.  And it looks like our compat matrix already acknowledges this issue:\n\nSo feel free to extend Map to Saf 8.\n. Does the polyfill work in Saf 8?  I don't have 8 handy, unfortunately.\n. Thanks.  We'll merge this for 3.13.  We're just pushing 3.12 out the door at the moment\n. Good consolidation.  Weird combination of tenses imported from the previous doc though.  I'll tidy those up and merge.\n. I tested this using http://jsbin.com/suyafi/1/ in Safari on iOS 9.3.5, and there was no error.  I'm going to assume this is an error in your own code, but if you can adjust this JSBin to reproduce the error, feel free to reopen.\n. Hmm, I don't really understand why this would be the case:\n``` javascript\n\nvar a = [1,2,3];\nvar i = a.values();\ni\nArrayIterator {}\n'value' in i\nfalse\n'value' in a\nfalse\n```\n\nNo errors thrown.  I was using Chrome 53 and polyfilling values().  And a jsbin has no errors.  Are you sure this is not an error in your code?  If not can you post a JSBin demo?\n. Assuming this was an error in the application's code.. I'm going to close this one - it's rather old, and a quick look at the spec does not turn up any suggestion that this parsing behaviour is part of the standard.. @JakeChampion that's a bit broad :-)  Do you have a list of examples we should discuss?. Please review https://github.com/Financial-Times/polyfill-service/pull/894\n. Thanks.  Should be released in 3.13.\n. I apologise unreservedly for the shameless meme use.\n. This behaviour is definitely not desirable in many cases like the one you've highlighted, but it is currently the expected behaviour.  There's a proposal to change it in the next major release:\nhttps://github.com/Financial-Times/polyfill-service/issues/892.  We'll continue to track this proposal there.\n. Not sure, hadn't given it any thought at the time.  Looks like originally this polyfill was written by Jonathan, and I made this change to it in response to the lack of a Text constructor in IE 6/7:\nhttps://github.com/Financial-Times/polyfill-service/commit/b80fbc6d83a14e68aad0d3cc2932c12d4204448b\nIn fact it looks like there is still a lack of support generally for this constructor:\nhttps://developer.mozilla.org/en-US/docs/Web/API/Text#Browser_compatibility\nI think the short term solution is remove the dependency - we should not be listing a dependency that we don't have.  These are the polyfills that list it:\npolyfills/_mutation/config.json:20:     \"Text\"\npolyfills/Element/prototype/after/config.json:26:       \"Text\",\npolyfills/Element/prototype/before/config.json:26:      \"Text\",\npolyfills/Element/prototype/remove/config.json:25:      \"Text\",\npolyfills/Element/prototype/replaceWith/config.json:26:     \"Text\",\nHappy to do that if you agree.\n. Rhys, can you quantify 'not insignificant'?  Average length of a detect is about 50 bytes.  There are longer ones, I concede, but it will be slightly annoying to minify these and I am not sure it is worth the bother.\n. Does it work if you append flags=always,gated to your polyfill url?  If so, we can update the browser targeting for those polyfills to target Opera Mini.\n. @kdzwinel would you consider doing a PR adding all the Opmini targets that we need to resolve this issue and #927 as well?. I didn't change html5-elements because I suspect the detection of HTML5 styling support is not perfect science. Feel free to check whether html5shivoffers any benefits in ie9 and if not we can definitely remove it.\n. Also currently getting Caught exception Error: not implemented for each request, with no obvious impact and none of the stack entries are in my code :-(\n. Yes, I'll add some tests that request the stream mode output\n. I updated the OP with the new approach and commented some specific changes.  Sorry for the overall length.\n. OK, I'll start looking at that.\n. Fixed issue raised above. Tests are now updated and passing locally.  And whoo - also on CI.\nI'm happy to consider merging this now.  @JakeChampion could you re-review?  Outstanding issues from the previous comments:\n- Build time - buildsources now takes longer because we write three files per polyfill\n- Backwards compatibility of the Sources module - are we promising to maintain compatibility in all module exports, or only in the main export?\n- You mentioned releasing the stream combiner as an independent npm module.  I've no objection, and happy to do that along with an independent test suite next time I'm on a plane, but let's decouple that from this.\n. OK, made buildsources async.  Now takes 15-19s vs 39s previously.  Are you OK with this being merged now?\n. Sure, will do that today.  By the way, I just noticed you're in Tokyo, Japan based on your profile.  I am also based in Tokyo.  If you'd be interested in speaking face to face feel free to drop me a mail or come along to one of our meetups (https://frontend.connpass.com)!\n. Well, your written English is nearly perfect.  EventListenerOptions is interesting.  If it is exposed as a global we could use it for feature detection, but there are already browsers that support capture and passive listeners without supporting them via a specialised interface.  So I guess you'd need both that and your more complex detect (which is very clever, by the way).\nLike I said in https://github.com/Financial-Times/polyfill-service/issues/857, it's not ideal to have to serve the Event polyfill to browsers that don't need it, so do you have a strong preference for doing it this way instead of creating a separate EventListenerOptions polyfill?\n. Hmm, something not working on CircleCI... @JakeChampion any idea what's going on?\n. Looks like some sauce labs timeouts.  Sorry about this @falsandtru, but we refactored the node tests and there's a conflict there.  Could you resolve, and then we'll try again?\n. @falsandtru will you be finishing this work?. Closing this one as we haven't heard from @falsandtru, who is probably too busy to complete the work. Feel free to reopen if you want to finish this.. @rubencodes you need to add a browser target to https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/console/info/config.json.\nSee https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. performance.now is the duration since navigationStart, isn't it?  So in that case if you have a native performance.now, polyfilling navigationStart in the way @rubencodes describes would not depend on it being loaded as the first subresource on the page.\nHowever, I'm reluctant to attempt to polyfill this API because even with performance.now available, most of the properties of navigation timing are impossible to determine if they are not exposed - properties like connectStart for example.\n. I don't think we can do anything here but feel free to reopen if you want to continue the discussion.\n. @caridy FT doesn't support/run JS in IE8, but this service does support those browsers, so we have a similar prioritisation problem.  We can't merge the update knowing that there are service users who depend on us fixing IE8, but we can't invest FT time in fixing Intl issues in that browser.  If no-one comes forward wanting to fix those issues, we can just drop the targeting of IE 7 and 8, so the polyfill will only be delivered in 9+.\n. Think this will have to wait for 3.14 now that we've shipped 3.13 to QA, but we can try and speed up the cycle time for the next release.\n. Fair point.  Currently we are using console for logging throughout the app, where needed.  That is probably the only one that gets executed if you use the polyfill service as a node library.  I have no objection to removing it.\n. All the polyfill service browsers have family identifiers, and we chose to continue using the same family identifier when IE changed to Edge, mostly because of a combination of:\n- maintaining another family is more work\n- IE ends at v11, Edge starts at v12, there's a sense of continuity\n- to my knowledge, support in Edge is a superset of IE, so you've not dropped anything in the move to Edge that we have a polyfill for\nOf course I may have been wrong in these assumptions.  We do have a note about this at the bottom of the feature table.  I appreciate that there's room for confusion here and we probably ought to change it.\n. Sorry, hit the wrong button there.\n. Actually that's a great idea and very easy to do, so let's start with that, and it should deal with the perception issue which I think is largely the root of the problem (correct me here if I'm wrong @jdalton)\n. There have been on and off discussions about using a parser/tokeniser to figure out what APIs are used by a string of JavaScript and then generating an appropriate polyfill.io URL. See https://github.com/Financial-Times/polyfill-service/issues/163 and the linked issue on autopolyfiller.\n. Pushed to local branch for CI.\n. @JakeChampion good to merge but will leave with you since you're managing the 3.13 release from master at the moment.\n. Adding additional browsers as targets for a particular polyfill is easy.  Here's the process:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. Chrome 49 already has fetch natively, so it seems unlikely that in global scope fetch would be undefined.  Can you reproduce the error yourself, and if so could you tell us:\n- The UA string (of your test browser - I do see the one above)\n- Whether the polyfill response included the fetch polyfill\n- Whether fetch is defined\n- In what scope you are attempting to use fetch (has it been redefined at a higher scope?)\n. @hannesj Hmm, maybe.  I don't suppose you have a unit to test?  Those UAs you posted are both normalised as android/5.1.  We don't target fetch to that version of Android.  So unless you are using an always flag, any errors you're seeing are just issues with native implementations.\n. @zslabs in your case the UA in your BugSnag data is normalised as chrome/49 and we don't target fetch to that browser.\nSo like @hannesj, I think the issue here is that you're dealing with a browser that is not really the one it claims to be. If this is a common problem for you, you could consider switching from user-agent based feature selection to client side feature detection, though at a cost of more bootstrap code in your frontend:\nhttps://polyfill.io/v2/docs/examples#feature-detection\nI don't think there's anything for us to do here, but feel free to follow up if you have anything more to add!. Don't know why IntersectionObserver would be failing on this branch...\n. Right, but I think that in Android >=5, the webviews identify themselves as android/<chrome_version_number> not an android version number.\n. Yes, I think so, but I don't have a handset handy either.  Can I ask what problem are you trying to solve here?\n. The problem is we don't define the version scheme here - we get the version numbers from the ua-parser project, and they continued the android browser sequence with the chrome versions when Google switched to using Chrome.  So I think it's correct for us to jump from 4.4 to the chrome numbers,\n. Looks like CI failed because of the missing Edge variant.  I think we updated those defs on master, so I pulled from master and am rerunning CI\n. Thanks for raising - there's a syntax error in the semver expression for targeting IE.  I've proposed a fix.\n. ah, they do that. It's annoying, I don't know why they remove browsers, especially IE/Edge variants\nhttps://saucelabs.com/platforms#windows8-10\nWe will need to remove that browser, and add the new Edge version.\n. I haven't been in touch with them for some time.  I'd suggest just going through the support ticket system.\n. @hipkiss91 Jake probably merged this into the MO branch because that's an easy way to get our sauce tests to run on the right fork, and we're comfortable with being trigger-happy on merging into non-master branches.  Looks like following your changes we're failing the ESLint at the moment: https://circleci.com/gh/Financial-Times/polyfill-service/1156.\n. @hipkiss91 we use editorconfig (http://editorconfig.org/) so your editor should configure itself automatically, but in short we should be using real tabs everywhere, not spaces.  You can see the inconsistency when you view the diff on Github, assuming your preferred tab size is < 8 spaces.  Some files may be incorrectly indented with spaces - I try and correct them when I can, but the most important thing is that we don't mix two styles in one file :-)\n. No problem, go for it!  Here's a guide:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#new-polyfill\n. Hi @ruiaraujo, can you give us a but more info here?\nhttps://cdn.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\nParticularly we need to know we're not going to break older versions of Android if they choke on the polyfill code.  If you have devices to hand and can run some tests, that would be very helpful.\n. Hi @ruiaraujo, thanks for this.  Can you follow the steps listed here to help us merge this?\n. Does the detect pass in Edge?  We should try to ensure the detect fails where we want the polyfill to take effect.\n. Does https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/URL/detect.js return false in Edge?  If so, the proposed change is fine.\n. Looks like detect fails in Edge, so we're good:\n\n. @JakeChampion can you review?. The detect that we would need to be sensitive to the broken implementation in Edge includes actually invoking a fetch.  This obviously has massive overhead, will cause console logs to be printed and could in any case violate CSP.   I tried some experiments with fetching a data: URI on the basis that we might get away with that, if it worked, but you can't POST to a data: URI.\nhttps://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8475223/ is the Edge bug.  To be honest I think there might not be anything we can do here.\n. OK, well, all we're doing here is removing an unnecessary built in detect, which transfers the decision on whether to feature detect back to the developer, so I'm happy.\n. Pushed to a local branch for CI\n. @falsandtru https://github.com/Financial-Times/polyfill-service/pull/954\n. Pushed to local branch for CI.  Note to self: because it was rebased I had to force push.\n. Hi James. Sorry for the delay on this. It's a tricky one: it is indeed possible to force-include a polyfill in all browsers (and many people do this) using the always flag. This is not normally recommended but it makes sense in some cases.\nSo in this case you want to ship a polyfill that depends on defineProperty, but only works in browsers that already have it. if there are any cases where including defineProperty would actually offer any value (e.g. In cases where your polyfill is being force loaded in inappropriate browsers) then I'd agree that on the safe side you should list it as a dependency. However if it makes no difference (your polyfill still fails, and no more or less gracefully) then there'a no benefit to drawing the relationship between the two.\n. @falsandtru I'm not sure about that.  It might cause passing tests to start failing without any changes on our end, which would start to block releases.  I see the other side too so if @JakeChampion feels strongly about it maybe we can have a chat internally.\nAlso you might be interested in http://frontend.connpass.com/event/42323/ which we're running next week with the TAG at the Nikkei building. 75% of the talks are in Japanese, and there's translation for the English one.  I think polyfills will come up.\n. OK, CI is working, but a full compatgen is failing.  I need to do some more work here before merging.\n. @tuespetre  This does look like a very elegant refactoring of the build task, thank you.  I have a question though - it looks like we are still doing all the file writes asynchronously, so how does this avoid the limit on number of open files?\n. More info: https://polyfill.io/v2/docs/contributing/common-scenarios#new-polyfill. Hi, thanks for raising this.  We love to see people wanting to extend the polyfill service to accommodate new features.  We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea.  In this case, the feature you've suggested is very appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. @JakeChampion can we close this one?. Thanks for this.  I think our options here are, in order of preference:\n1. (best) find a way of detecting that a locale is available, and use that instead of the current detect.js for locale directories\n2. Remove the detect files from the locales, so they are not subject to feature detection\n. This is the update task for Intl, by the way, where the change would be needed:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Intl/update.task.js\n. If the behaviour is a web standard, sure!\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#new-polyfill. Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is moderately appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor.  We would need to ensure that the polyfill is filling for a standard feature of the web platform, which we're not sure is the case here.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. Ugh, that UI code is dreadful, sorry about that. I'll fix. Hmm.  I can't see anything to suggest that the notes elements are not present on page load. We do render them on the server.  But you're probably spot on with the second observation.. I don't have good enough knowledge of the language semantics to recognise what's going on here - @JakeChampion can you explain it?. Confirmed on MDN\nhttps://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Browser_compatibility\n. I happen to be in a TAG meeting with three browser vendors and the google and msft folks we're pretty happy with this.\n. @qwemaze https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\n. @thisguychris also bear in mind that even if you did that, you would get a polyfill bundle in the 10s of megabytes.  Since there's basically no situation in which that's a good idea, we don't enable that use.\n. Sounds easy, let's do it! Can you do a PR?\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#new-polyfill. I also can't reproduce. That last URL does include the findIndex polyfill... can you attach the full output that you're getting?. Looks like you're getting a truncated response.  That first one is not complete.  Maybe take a look at the response headers?  I'd be looking for the declared content length, gzip, and which CDN node served it.  Try clearing any local caches too.. @andyburke I suggest you first find out how we are classifying that browser by sending the browser directly to the polyfill URL (without .min), or if FB refuses to directly load and display a script file, by downloading the polyfill.io resource using fetch and adding the raw source to the document body, eg something like:\n<script>\nfetch(\"https://polyfill.io/v2/polyfill.js\")\n  .then(resp => resp.text())\n  .then(text => document.body.innerText = text)\n;\n</script>\nIt seems likely that we are not recognising the browser, which might be a change we've made to our UA module, but more likely either a change in the useragent module we depend on, or in the actual string Facebook uses as their UA header.. OK, I think the solution to this is to remove the Facebook-added [FB_IAB/FB4A;FBAV/35.0.0.48.273;] token from the UA string before parsing.  This will then cause the UA to be recognised as Chrome on Android, and Safari on iOS.  I'd like to do this after https://github.com/Financial-Times/polyfill-service/pull/1050 is merged.. @Cavitt We haven't yet released a change to the CDN that I'm aware of.  #799 describes a slightly different issue with defineProperty.. See #1147. Some issues remain to resolve:\n- [x] Some browsers regularly timeout before we start receiving results, notably Android\n- [ ] Event loop blocking notifications get in the way of the console rewriting, so I disabled in all except prod, which is not ideal\n- [x] Yet to fully test what happens when there are failures to report\n- [x] Progress meter output fails pretty spectacularly when you try and do a compatgen because the tests don't fit on the console window\n. Android: turns out this browser typically takes ~45 seconds to start up.  My timeout was simply too short.\n. Dealt with Jake's feedback and my earlier issues.. This is great, thanks - now we just need the solution!. That would be great.  Here's how to do that: https://polyfill.io/v2/docs/contributing/common-scenarios#new-polyfill. Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is very appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. Going to pause this to see if @JakeChampion thinks it's worth finishing / is going in the right direction.. Reasoning:\n\nNo other Origami services use grunt (do they?) so it creates a learning curve\nGrunt isn't really very popular anymore so it might limit community participation\nIt adds dependencies. I don't like unnecessary dependencies :-)\nGenerally the non-grunt versions of tasks are actually shorter than the grunt version\n\nDisplaying tasks: yes, run npm run. Oh, I thought you'd want to discuss this!  But great.  Do the tasks work for you?. Raised PR for the fix, thanks for spotting this.\nThe CLA for this project is actually extremely short compared to other OSS projects, and CLAs are needed for good governance - they give users confidence that we have the legal right to offer this software for use by anyone that wants to enjoy it.  If we accept a contribution from someone who has not signed a CLA, they might in theory be able to reserve copyright over their portion of the code in future, and extract financial redress from anyone who has used it.  We're happy that our CLA offers a good balance of brevity and security of ownership.. I am also not a legal expert but the person who advised us on our contribution rules is.. HTMLTemplateElement would be the correct name, but looking at that polyfill, it does not create window.HTMLTemplateElement so detecting that the polyfill has been applied is quite difficult.. Oh dear, that's not good at all.  Thanks for reporting it.  Of course an easy workaround is not to set the rum param at all, and that's what most people in fact do (or don't do - we have virtually no requests that set rum=0).  However, this clearly needs to work as expected right away.. @asilvas hope the vacation was good :-)  Are you able to follow up on this?. Nice \"screenshot\". I am mildly against this idea on the grounds that it may suppress contributions.. The difference between the compatibility data and the targeting data has always been a bit of a weird one.  They really should be the same - I mean, it makes sense that we are targeting polyfills at the browsers that we are advertising support for, but since we don't verify that, there are probably anomalies.  We could change the compat task so that at the end of the process, it checks the results against the polyfill config files and outputs any discrepancies.  If we then fixed those discrepancies, the documentation would reflect tested results and targeting too.\nThis still doesn't make it right to confuse the two concepts in the docs.  I'd be in favour of doing something like this:\n\nI don't do web design, but when I do, I do it in Preview.. @wheresrhys @JakeChampion new idea inspired by discussion on https://github.com/Financial-Times/polyfill-service/issues/1065:\nScrap the plan above and instead augment the Live test mode with an extra column showing whether the specified polyfill is targeted to your browser or not.  This is better than the compat task idea because we only test a minority of browsers in automation, and doing this would make it way easier to, for example, work out what needs updating when a new browser is released (paging @AdaRoseEdwards for thoughts on this too).\nThis doesn't solve the problem of 'minor' browsers being forgotten but lowers the barrier to adding them.  I'm against enforcing a full sweep of browser target config, displaying all the targeting info for all browsers alongside the testing data produces an unwieldy UI, and in any case we are aiming for sync between the testing data and targeting data; so I think this is a better solution.\nMockup:\n\nI don't do web design, but when I do, I do it in devtools.. @JakeChampion what do you think?. Some further thoughts.  Caniuse solves a similar UX problem to this by pivoting on feature name, so you have a different table for each feature, and then each table has browsers as columns and versions as rows.  That definitely makes it easier to include more browsers, but harder to see the range of features available.\nThe other issue is surfacing targeting info where it differs from compat info, and/or where we don't have compat data but we do have targeting data.  \nThis reminds me a bit of when I used to work on air traffic display systems.  Each aircraft is detected by two systems: primary radar, which also detects stuff like trees, helicopters and weather balloons; and 'secondary radar' (transponder signal) which detects only aircraft with an active transponder.  The two systems were meshed on screen by using a + for primary echos, and x for transponders.  This means that all commercial aircraft should appear as * because they register on both systems.\nI'd love to be able to scrap all our targeting data and replace it with results from RUM, and there's an open issue for that: https://github.com/Financial-Times/polyfill-service/issues/107.  So to resolve the targeting vs compat data point, we should either make more progress towards using RUM, or figure out a good UX for meshing the two datasets (it's also worth remembering that the targeting data does not differentiate between no support and native support, it just says do or don't serve the polyfill, whereas the compat data has three states). @kdzwinel can you provide some trigger code?  Or are you saying that these errors are thrown on pageload simply by including the polyfill.io script tag in an otherwise empty pagE?. I think there's an argument for forcing gated to be on whenever unknown=polyfill and the request is coming from an unknown browser.  This is highly likely to produce a net reduction in issues experienced in the wild, though of course it's technically a breaking change so could cause some issues too.  To be safe, yes we could add a new option value for the unknown param, but I think trying to explain the options in docs would be quite hard. Never heard of this RFC, but it sounds like a good idea if it's a common standard.  Do you know of other popular API docs that use this format?. Hmm, but their method documentation actually uses basically the same convention that we already use:\n\n. Jake, you're keen on this?  I am mildly against because it means writing the params in two places and they are likely to get out of date.  I don't hear anyone else saying the docs are unclear and I don't see any popular examples of services documenting their APIs like this...  I do appreciate the suggestion but I'm not totally sold tbh.. OK, let's stick with the format we have.  @tpluscode I'm sorry to decline your suggestion and thanks for making it, we do appreciate the input and hope you feel we gave it a fair hearing!. Closing this as our tests and public compat tables say it's native.  Please do reopen with a test case if you can show it is not.. @JakeChampion I'd like to go with this solution.  Could you review again and consider my comment in response to your earlier review?  If you're happy, I will change the Facebook approach in the branch for #990 after merging in this PR.. So you're saying here that Android 4.4 is being misidentified as Chrome?  Please post the UA string so we can take a look at the parsing.. Hi @ruiaraujo are you able to provide the info to help us unblock this?. Something like this would be OK, but it needs to look more like this:\n\n. This is a known... situation :-)  I hesitate to call it a bug because detects are so small that minifying them makes virtually no difference to the size of the bundle.  Just neatness?. Fair enough.  It would slow down the build to write a minified file for every detect.js, but not significantly.  Basically it's a relatively insignificant cost for a relatively insignificant gain :-). Or a contributor!  I don't think this is going to be a priority for us - but if it is an annoyance to you, please go for it and we'd certainly accept the change in principle.  You'd mostly want to take a look at https://github.com/Financial-Times/polyfill-service/blob/master/tasks/node/buildsources.js. @JakeChampion any reason not to merge this?. Since we're not distributing it, I don't think there's actually any opportunity for us to relicense it. I think this is just a low-priority question to raise with legal when you get a chance, but I don't think it stops us merging this.. Thanks @asilvas, very generous of you.  I don't know enough about symbols to take this on but hopefully someone else can help.  It looks like we are using a modified version of https://github.com/WebReflection/get-own-property-symbols, so testing with that source might be a good place to start.. The features you've targeted to IE8 - do they work in 7 or 6?  Consider using <9 if the feature was introduced in 9 and the polyfill works in earlier browsers.  Otherwise this looks good.  Will leave to @JakeChampion to push a local branch for CI.. @kdzwinel Could you run the standalone test pages on your test browser and report back to enable us to merge this?. We don't target this polyfill to IE mobile at all.  If you can test it and see that it works, feel free to add that browser family here:\nhttps://github.com/Financial-Times/polyfill-service/blob/v3.16.0/polyfills/Element/prototype/matches/config.json#L11-L23\nSee here for instructions:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers. @CheloXL we may have broken the build process on Windows.  I'm very sorry about that, the core team are all OSX and Linux and we don't regularly need to build on Windows.  But we'd be very grateful for any fixes you can contribute - eg by replacing the offending shell exec with a cross platform npm module?\nRegarding your second question, you're seeing the result of testing, not targeting.  They should be the same, but sometimes if the targeting is wrong (or the tests are not able to identify an issue for which we've intentionally tweaked the targeting) they may differ.\nIt would actually be pretty cool to augment the live test feature to report not just whether we're able to make the feature work in your browser but whether it is currently targeted too.  See https://github.com/Financial-Times/polyfill-service/issues/1042#issuecomment-276549454 for more details.\nIf you want to pursue the Windows build issue, could you raise that separately, and we'll keep this thread for the IE11 / matches targeting issue.. Ok, great!. dataset is not a default polyfill.  To get it you need to add Element.prototype.dataset to the features argument of the request.  I hope that helps and sorry this was not intuitive.\nSee https://cdn.polyfill.io/v2/docs/features/ for a list of all features, those marked with a star are in the default set.  I think in this case adding dataset to the default set would be good.  Maybe we need to do another level-up of features that are shipped by default.  I'll talk to @JakeChampion about it.. @CheloXL yes, it does seem likely that the polyfills fails to support creating a map from another map.  It looks like in this situation we should clone the map.. Fixes Financial-Times/polyfill-service#1068. @JakeChampion mergeable now?. Fixes #1065 . \u2714\ufe0f  Tests present on the upstream repo\n\u2714\ufe0f  Upstream repo is well followed, released recently\nWe'd prefer the Android Semver constraint to be <, not <=, so if evensource was added in 4.4, make it <4.4.  Otherwise this looks good to me..  Hi @siassaj,\nI think this is an interesting idea, and we're not opposed to having it.  This is the part of the code that builds the list of features that are included in the bundle, so you could add an alternative mode here to output that data in a machine readable form.  I'd consider activating this based on the presence of the RUM opt-in, rum=1 on the query string, since that mode is for instrumenting the operation of the service.  Alternatively, maybe we could have a new param, debug=1 which would export debug data onto a Polyfill_IO global object.. I'm going to close this as we don't like to leave feature request issues open if no-one is working on them. If you want to make a PR for this though we'd be delighted to see it.. https://github.com/Financial-Times/polyfill-service/pull/1082. Closing issue since we now have PR.. @asilvas we're battling with a CI issue at the moment, so bear with us.. OK, this is because of a comment:\n//# sourceMappingURL=Intl.min.js.map})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\nWe've previously added newlines before the start of a polyfill to avoid concatenating code onto the end of a comment, and we obviously need to do that again with the boilerplate code and outer closure.. Scheduled for 3.17 release, follow polyfillio on twitter for release notification.. Thanks, we'd gladly accept a contribution to fix the appropriate browser targets:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers. Currently awaiting edits in the PR. See PR #1103.. @JounQin Are you able to finish off this PR and help us get it merged into the project?. To see how we parse the UA for a browser, you can use the ua param:\nhttps://polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(Windows%20NT%2010.0;%20WOW64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/49.0.2623.22%20Safari/537.36%20SE%202.X%20MetaSr%201.0\n\nThis means that currently we recognise this browser as its own family - sogou explorer, and we have no polyfills for it.  The easiest solution is to create an alias to an existing browser family, but I don't think there's a version-compatible mapping to another browser.  Do you know anyone from Sogou who might be able to help here?. OK, in the absence of interest from Sougou, the only thing we can suggest is to use the unknown attribute to change the policy you want to apply to unknown browsers.  unknown=polyfill will serve all the polyfills to the unknown browser.. Service workers can load URLs from foreign origins like polyfill.io, but the response will be 'opaque'.  For most purposes this is fine.  I suggest you experiment with that, and if it doesn't meet your needs, you can always run the service yourself.. Looks like it was merged but no release yet.  When there's a release we can update our dependency.. @JakeChampion let me know when you want a fresh review of this. Looks like it!  When they release a new version, we just need to update the Intl deps and then the new version will ship in our next release.. Upstream PR has been merged but no release yet.  @caridy could you poke this?. I think we'd be very happy to see someone provide this information, but I'm not confident that we could keep it up to date if we made it part of our official docs, and of course there are many other libraries that would then make sense to document integration with as well.\nClosing this because it's unlikely any of the core team would do this, and if a third party wants to provide it we'd probably prefer they maintain it outside of the project (but we'd be very happy to link to it). https://github.com/Financial-Times/babel-polyfill-silencer may also be helpful here.. OK, so regarding the native shim, I think I didn't put enough effort into explaining how we could host this.  Basically I'm suggesting you create a subfolder of customElements, and a new config.json file inside it, which pulls in the native shim from the custom elements polyfill repo.  When we run the build process, you would then end up with two registered polyfills, customElements, and (maybe) customElements.~native-shim.\nYou could then either list the latter in the dependencies array of the main polyfill's config, or leave it to the user to consume it explicitly by adding it to the features parameter of their polyfill.io request.  Making it a dependency would ensure that we sort it before the polyfill in the output.  However, whether you need the native shim or not seems unrelated to the browser you're using and more to do with whether you are transpiling your code, right?\nI think the options would be:\n\nIt's not a dependency, and the config for the shim targets all browsers.  The user has to explicitly request it.  Ordering is not guaranteed.\nMake it a dependency, but target no browsers.  The user has to explicitly request it and additionally include the always flag in order to get it.  The shim is guaranteed to be before the polyfill in the bundle\n. This looks great, and I should have suggested the dependency the other way around, sorry that didn't occur to me and well done for recognising it.\n\nYou can't force a polyfill to include a detect unless you bake it in.  For the next major version of the service we plan to make inclusion of detects the default bahaviour, but right now you need to add the flags=gated param to wrap the polyfills in the detects.  Obviously many of our third party polyfills ship with detects already.\nThe problem with the eval() solution is that it won't work in any page that has an active Content-Security-Policy.  I made some efforts a while back to remove all polyfills that use eval or new Function(\"\") but ended up realising that the only polyfills that use those patterns are ones that are required in browsers that don't support CSP.  So we're OK.  But in this case, there are CSP-supporting browsers that you would need native-shim in, right?  If that's the case you may run into trouble.\nPulling a dependency from a git URL is not ideal.  I'd ideally like to wait until the version you need is published before we merge.\nRegarding the use of babili, can you run that reasoning past me another way - I'm struggling to grok your comment in the update task.. Can you document the compat info here?  Some quick research suggests this was shipped in stable and then withdrawn due to a compat issue.  In that case we should consider a) targeting only the versions that did not ship the native impl (multi-range semver statement), and b) adding a notes entry to the config to point to the bugzilla entry.. https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers has a checklist of stuff to cover off in the PR.. @Siddharth11 will you be able to help us finish this?. Because we are modifying the polyfill, automating this is a bit tricky.  What you could do is create a patch file for the changes we need to make (ie, removing the detect), then write an update.task.js in the polyfill folder to apply the patch after any update.  Then we'd update the source automatically and apply the patch each time.  If the patch failed to apply you'd abort the task, and we'd have to revert to an earlier version of the dependency or update the patch.\nIf you fancy doing this, it would certainly be appreciated.  Here's the documentation on writing update tasks:\nhttps://cdn.polyfill.io/v2/docs/contributing/authoring-polyfills#update-tasks. @colthreepv you don't need to download the source.  Looking at the docs, they are misleading on this point and I'll update them.  Basically, you want to do this:\n\nPut the whatwg-fetch module in our dependencies, or update its semver range, or just update the shrinkwrapped version - as appropriate\nPut an install section into the fetch config.json file, to pull out the right file from the dependency.  This will create a polyfill.js file in the appropriate polyfill directory\nNow create a synchronous update.task.js to transform the polyfill.js file as you need - in this case to remove the simplistic detect.  I'd prefer to do this by having an update.patch file in the polyfill directory alongside the update.task.js file, and use the task to just apply the patch to the polyfil.js file.  If the patch does not apply, exit with a non-zero exit code to signal the failure.. Looks good.  CI failed for the usual spurious reasons, I just manually restarted it.. This polyfill was originally written by @jonathantneal.  Jonathan, are you able to confirm whether you think it's OK to replace instances of window in your polyfill with this, which is our safe reference to the global scope (works across node, workers and browsers). Polyfill source is at https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Event/polyfill.js. Hmm, actually we're defining properties of window, Window, Element and document.  We serve this polyfill to some surprisingly recent browsers - I think in IE's case this is because the Event constructor is not instantiable and the polyfill fixes that (see https://github.com/Financial-Times/polyfill-service/issues/705).\n\nI have never used web workers, but docs suggest that neither window nor document is available.  We could therefore define Event but can't define event related prototype methods of window and document like addEventListener.. In fact, even our implementation of the Event constructor depends on document.createEventObject so I think all we can do here is probably to prevent this polyfill running in workers.. @tschaub does the Promise polyfill work in the worker if you specifically exclude the Event polyfill from being loaded using our exclude parameter? (Docs). Perhaps, but since I don't think Jake or I make much use of workers, it would be tough to maintain, unless someone else steps up to help us with that.  Thanks for trying it, let me know if it works without the Event polyfill. Hi, thanks for raising this.  We love to see people wanting to extend the polyfill service to accommodate new features.  We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea.  In this case, the feature you've suggested is very appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. Duplicate of https://github.com/Financial-Times/polyfill-service/pull/1101?. Merged upstream.  We need to update to >=0.17.9.  . Just chatting to Nikkei team and they are blocked on this issue shipping to prod.. @matt-ville @lepture @rubencodes Thanks for reporting this.  First of all, if you have production sites relying on our CDN service it's a good idea to regularly run against our QA service in your CI or test environment so you can be warned if we release something that inadvertently breaks your app.  You can swap out polyfill.io or cdn.polyfill.io for qa.polyfill.io to get the QA service.  All our minor and major releases are made available in QA for 7 days before being promoted to production.\nObviously please don't use the QA service in production, it is not highly available.\nRegarding this issue, we are ideally looking for the console log of the error that you're seeing, the UA string of the browser that is exhibiting the problem, and a reduced test case in JSBin.com that we can use to reproduce the problem on the affected browser.. @JakeChampion can you link the PR or issue in which we're tracking the solution?. PR is scheduled for release in 3.18. @rubencodes do you know what browser/family we were previously detecting this UA as?. It looks like if we remove the Electron/X.Y.Z tag, it detects your UAs as Chrome 53.  Would that be appropriate for Electron?. See #1147 . The VCL used here comes from a Fastly doc page, I think. If so a comment with a URL would be very useful.. Apologies, I failed to understand the original cause of the problem, which led to its recurrence. PR is scheduled for 3.18.  Unlikely to recur since I'm no longer working on the project that used the private repo but @timseverien please do feel free to contribute a test.. Sounds like a good plane job.  I'll do this, and also write up the policy in docs.. Hi @shtse8.  To help us debug this, could you give us some more information:\n\nThe full User-Agent header of the browser in which you observed the problem\nA reduced test case using a tool like jsbin.com that loads only polyfill.io and as much inline script as is needed to trigger the issue\n\nWithout this, I can make an educated guess that Facebook browser is being treated as an unknown UA, and that's why you need unknown=polyfill to make it work.  However, unknown=polyfill gives you all polyfills, which may include those that don't work in that browser.  Results may be unpredictable.  I would suggest adding flags=gated when using this mode.\nWe are already tracking an issue with identifying Facebook browser as #990, so if that's your issue you can follow it there, otherwise feel free to reopen with the info above.. Hi @hbrls.  One of the reasons for using our service is that we only serve content to browsers that need it, so most code designed for IE8 will only appear if requested from IE8.  In odd cases we do have tiny fragments of code for old browsers that are embedded in polyfills that we target at more recent browsers.  The fragment you've extracted is from our Element polyfill, which we only serve to IE 6-8.\nhttps://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/Element/config.json. I don't think what you're suggesting is applicable to our service because we already only serve code that is needed by the browser.  If you choose to use always, then you transfer the code bloat issue onto yourself, but since we already provide a solution I don't think we're interested in providing another one.. Sorry, I submitted my review before I'd finished commenting :-). See #1157. Our targeting of IntersectionObserver correctly matches the declared support range of the polyfill.  If you can do further testing to show that it works on earlier browsers, you can submit a PR to expand the range, but in that case it is also highly desirable to also get the polyfill authors to update the range of browsers they support so that future releases of the polyfill do not regress that support.\nFor the moment, no action for us since our support range matches the advertised support range on the polyfill.. @philipwalton for info \u261d\ufe0f . Also see https://github.com/WICG/IntersectionObserver/pull/209. See #1179. @jonashaag Our Array.prototype.@@iterator tests are passing in iOS 10.2 with no polyfill.  I also copied your repo code into a JSBin:\nhttp://jsbin.com/binuzotehe/\nThis runs without error in desktop and iOS safari 10.  Feel free to reopen if you can provide a JSBin with a reproducible test case.. OK, the problem here is that Array.from() doesn't work on our polyfilled sets in IE.\n```javascript\n\nvar s = new Set([1,2,3,4]);\nconsole.log(Array.from(s));\n< []\n```. See #1161. When a PR is merged, it's assigned to a release, and then we release periodically. You'll get at least 7 days notice because we push to qa.polyfill.io a week ahead of cdn.polyfill.io, and announce on twitter.. @JoyceBabu Our preferred option would be to update the existing polyfill and extend the targeting if appropriate.. @msteitle Thanks for raising this, though I do think we make this reasonably clear already. Regardless of how obvious you make something there will be a proportion of people who miss it, through no fault of their own, but it does say it right here in the center of the homepage:\n\n\nI suppose we could reverse the order of those two sentences.  Would that help?. @msteitle Maybe just make a PR to throw some more stuff into the default set.  We don't have a defined methodology for it, and are happy to move more stuff in as browsers evolve beyond the need for many of them.\nWill close this as I think we will probably not update docs, but I'd encourage the update to the default set as a fresh PR.. @slawiko I set up a JSBin to load your code in IE11 and it does not produce an error:\nhttp://jsbin.com/qumewixoxu/1/edit\nI suspect the error is triggered by something in your own code.  If you can post a JSBin link to a reduced test case, we'll investigate the cause, as there might be a bug we should report to the upstream repo.  Feel free to reopen with that info.\nSome polyfills are minified regardless of whether you request minified or not, because the original source that we import from is already minified.. https://github.com/Financial-Times/polyfill-service/issues/213 describes some earlier issues that we had with focusin in FF.  My theory was that the behaviour depended on the stage at which the event got called.  It seemed like if it happened during the page load, you could not dispatchEvent on target.\nI'm not sure I got to the bottom of what target is when this error occurs.  Do you have a record of that?  Or can you log it?. Moved to https://github.com/Financial-Times/polyfill-service/pull/1173. Hmm, ok, will do.. I'm not actually sure what the right solution is here.   Is it:\n\nCurrent solution (subject to investigating the CI failures - which I'm struggling with because I not longer have access to a paid browserstack or sauce labs account)\nChange Array.from to use a different method to test for a Set\n\nInvestigate possible issue with Function.prototype.name polyfill in IE11?. @joycebabu as you noted there is a reason for this exception, and otherwise we do stick to the naming scheme. I don't think we plan to change it. Is it causing a problem?. Duplicate of https://github.com/Financial-Times/polyfill-service/issues/1099. Thanks for the report.  None of the core contributors to polyfill.io use Midori, but if you would like to submit a pull request to fix the experience for Midori users, we would be happy to accept it.. Including stuff in the default set is based on:\n\n\nDemand (should be high)\n\nPolyfill size (should be small)\nNumber of browsers with native support (should be at least 2)\n\nIn the case of dataset I think it meets those criteria, but if we issue an updated default set I think it would make sense to run through the list and consider adding several more.  If you want to do that and propose a change to the default set in a PR, we'd be happy to consider merging that for the next release.. Hi @MartinMuzatko, indeed we don't currently have a formdata polyfill.  Adding new polyfills to the service is a great activity for new contributors and we'd encourage you to give it a try, using the process that you found in our contributors guide.  We don't keep feature request issues open if they're not actively being worked on but we'd welcome and provide support to help merge a pull request.. We do that already in the bundle sizes section\nOn Fri, 26 May 2017 at 06:48, Jake Champion notifications@github.com\nwrote:\n\nWe could calculate the size of the default bundle for the browsers listed\non the features page, that is a nice idea :-)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1210#issuecomment-304286865,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABp63-6QJhYgH8mxe1OPb1Ms025PZIoWks5r9tgqgaJpZM4NnfSD\n.\n. @drnkwati it sounds like you should probably find a different solution.  Good luck!. I'm also not sure how this would work.  I think the OP would need to outline how they imagine it to work for polyfill.io and then someone might like to work on it.. Possibly duplicates https://github.com/Financial-Times/polyfill-service/issues/857. No, we will definitely not be resuming support for all.  Notably this is because using all in a browser that does not support Intl results in a 25MB polyfill bundle with every single locale dataset included.  It is also problematic if we consider adding more such enormous polyfills in the future (which would then automatically roll out to anyone that had unwisely opted for all.. We already include Vary: User-Agent in the HTTP response, but it looks as though this is now split across multiple headers:\n\n\n@JakeChampion Is that intentional?  I am not sure whether user agents will honour multiple vary headers (I should test this!). See https://polyfill.io/v2/docs/api:\n\nSetting the value \"all\" will select every feature in the library (this is an extremely bad idea and will be removed in a future version)\n\nPlease don't use 'all'.  Today that will deliver a bundle of up to 25MB in size, and you should assume that in future it might deliver new features in WASM modules which might be even larger.  Basically if you set 'all' today and forget about it, you should assume that the file will grow to 1GB+ in future.. Doesn't this make it super hard for anyone to run their own polyfill service?. @christopherdarling we had an issue with a deploy just now.  We rolled it back, and are now back up.  We're doing a fuller analysis and will post more details here.. This would have been an isolated issue because it only affected origin fetches during a 10 minute period, and bundles are cached for a week. The biggest impact would have been as a result of stale-while-revalidate requests that pulled the 404 response from heroku and considered it a valid replacement for the stale object in cache. Jake and I are working on a PR to resolve that.\nCanary VCL would introduced more forked paths through the code based on environment, which is rarely a good thing, so I'd prefer to make the QA VCL a better test of what will happen in prod.. @TimVevida it should be easy to follow progress on the PR.  The PR gets assigned to the release version so you can see when it goes out.  We close the issue to avoid duplication and people tracking things that don't have the most up to date or accurate info. Test failures:\n- ie/11:\n    -> Element.prototype.classList Should be configurable\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.classList\n       Unable to get property 'configurable' of undefined or null reference\n - ie/10:\n    -> Element.prototype.classList Should be configurable\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.classList\n       Unable to get property 'configurable' of undefined or null reference. A few questions about this:\n\nIt looks like we already had a polyfill specific to the isintersecting problem in Edge, and this change adds a full implementation of IntersectionObserverEntry separate from IntersectionObserver and serves it to lots of browsers.  I can't see how this change relates to the isIntersecting issue...\nCan you provide some info on the circle config file?. It seems incorrect to say that Ghostery has a policy of blocking polyfill.io.  They don't, they have a policy of indexing all services that are used by websites as third party scripts, which is the way polyfill.io is designed to be used.  So it seems unlikely that Ghostery will remove us.  As they said, they've put us in the essentials category, and I just validated that:\n\n\nIt's unclear why we're in there because right now, in accordance with the privacy policy, polyfill.io does not log any IP-derived information.  It used to, and when our first privacy policy was published, we stopped doing that because it seemed unnecessary.  Now, we would like to enable logging of an anonymised, aggregated, IP-derived hash, in order to identify patterns of usage and abuse of the service.  This violates the privacy policy, which is why the FT is working on a new one.\nIf logging a hash of 16 bits of the IP using code that is publicly inspectable, and only on websites that have opted in, is not acceptable to Ghostery to remove us entirely from their database then I think it's likely we will remain on their list albeit in the Essentials category.\nThere's a world of difference between Polyfill.io's behaviour and that of an behavioural ad tracking network, or even an analytics provider like Google Analytics, which logs many orders of magnitude more information that we do.  In fact, if possible, we hope to make the information we're logged completely public, because if we're confident that it doesn't infringe privacy, then there should be no reason to keep it confidential.. Some misunderstanding here might result from the fact that Ghostery refers to all third party scripts as 'trackers', regardless of whether or not they do any tracking (which, right now, polyfill.io does not).. I'm afraid I don't work at the FT anymore and haven't managed to stay involved with the project.  I believe Jake is still the primary maintainer.. Remove this - aliasOf is now added by the aliasResolver if required.\n. Should be an empty array.  There's no longer a maybe flag, and the default behaviour is maybe.\n. Not convinced by this.  Shouldn't the alias module be able to cope with a resolver returning null if a polyfill has no aliases?\n. remove the flags property here?  maybe flag no longer exists.\n. We just discussed this and agreed to go with returning undefined for no\nalias, to avoid creating a false alias chain.  But consider returning\nundefined explicitly, to make code intent easier to understand.\n. Nice idea.  Why not apply it outside of the feature gating, to check syntax of the non-gated version too?\n. Bit messy?  Could do:\ncurrentPolyfills[polyfill.name] = polyFillSource[(options.minify?'mini':'')+(shouldGate?'gated':'')+'file'];\nthough you would need consistent capitalisation of gated to do that.\n. So you're saying here that this polyfill should be applied to all versions of these browsers, but will it really work in IE < 6?  You can rely on the APIs you're listing as dependencies, but if you're assuming any others that we don't have polyfills for, you should only serve your polyfill to browsers that support those APIs correctly.\n. Options isn't shown in the example syntax above\n. This is the context in which I think we might want to say 'features'.  As in, 'get a list of the polyfills required to support x features in y browser'\n. There has to be a default variant, so we have something to serve if you append |always to your request.  Whichever one is least browser-specific should be the default.\n. Could we have a comment here to record why this is better as part of HTMLDocument rather than a separate document.querySelector polyfill?\n. Oh, got it, because querySelector is actually a property of HTMLDocument.  Developers probably don't make that association, so maybe we should add \"queryselector\" as an alias (especially so the modernizr alias, which should be modernizr:queryselector)\n. Here we need at least one variant to be default.\n. eek, I should have spotted this bug.  Thanks.\n. Yes, absolutely.  default  = polyfill.js, and any config outside of\nvariants will be considered part of default.\nI've tried to put together some better guidelines on this, see this branch:\nhttps://github.com/Financial-Times/polyfill-service/blob/contributing-guide/CONTRIBUTING.md\n. FYI, This is for backwards compatibility, since the service previously had a polyfill called html5shiv.\n. what is this number anyway!?  A comment here would be good.\n. probably don't need the extra describes here.  The test harness will already wrap the tests in a describe.\n. but i guess this one is useful.\n. again a comment on the magic number would be good.\n. I've now added support in the service for adding these comments, so no need to include them in the source.\n. suggest remove.\n. should this be a known element?\n. I'd prefer commented out code to be removed prior to merge or commented with an explanation.\n. I actually did all the existing ones already :-)\n. Ah, dammit, yes of course.  And we can't do that if we want any kind of decent cache perf.\nI might have to come up with an alternative way of doing this.\n. it is infinity, not less than infinity - presumably either error message or conditional is wrong.\n. should this parseInt include the base?\n. is this parseInt intended to catch undefined and nulls and convert them to 0?\n. Should this be Number && Number.MAX_SAFE_INTEGER?\n. I did consider that, but I think that the callback is part of how you choose to deliver the polyfill string, not the string itself.\n. Remove this?\n. There needs to be a default, even if it's an empty file.\n. Ah, there is a default.  So just add default: { browers: {} }\n. Actually, you could implement a default polyfill pretty easily.  Something like:\nwindow.screen.orientation = window.screen.width > window.screen.height ? 'landscape-primary' : 'portrait-primary'\n. Thanks, wilco\n. Should this be ie_mob?\n. This seems a bit specific to your workflow.  Remove?\n. The negative case for this detect sometimes returns false and sometimes undefined.  It could easily be consistent so I think it would benefit from that.  Currently L19-21 are basically irrelevant, no?\n. You could have a personal gitignore outside of the project\nhttps://help.github.com/articles/ignoring-files/#create-a-global-gitignore\n. It returns true if global.URL is undefined?\n. I think this should be end to end.  Currently there's nothing in between the start and stop points that has any chance of being slow - there's no IO of any kind, other than the final HTTP response.  The current data shows an average time of 2ms, while the total RTT will be more like 20 at a minimum.\n. It just acts as a mock and doesn't do anything.\n. This could be a bit more concise:\njavascript\n(function() {\ntry {\n  var test;\n  return URL && test = new URL('http://example.com')) && 'href' in test && 'searchParams' in test;\n} catch(e) {};\n})()\n. With node-measured this turns out to be really easy so I added it back.\n. This value will leak into all other polyfills.  We don't put a closure around each polyfill since many have their own anyway.  In this case you don't really need one, you could just move the expression inline on line 5.\n. I think a way of expressing this that's more consistent with our existing detects would be:\njavascript\n'origin' in window.location\nIf this isn't good enough, wouldn't lots of our other detects be flawed for the same reason?  We should potentially have something in the contributors' guide about a standard way of testing for the presence of an object property.\n. I suggest returning the new function from an IIFE into which you pass the existing native impl to avoid creating a variable that exists across all polyfills.\n. Don't edit this file - it's generated by a grunt task.\n. Possible indentation issues here\n. Hey, hold on a minute. Read the spec!\n\n. Don't edit this file.  It gets generated automatically by automation.\n. This note could be removed - it doesn't signal any important gotchas\n. it needs to be committed - it's used to display the compatibility chart in\nthe documentation.  I suppose we could add it during deployment but the\nfull compat test takes about 2 hours, so I'd rather not block deploys on\nthat.\n. do we even need minified here?  The check for req.params[2] seems to do the job.\n. This will disallow documentation pages, which we want to allow to be scraped.  Also I'm not totally convinced that deploying robots.txt in a subfolder will work for all robots.  I'd suggest publishing it at the root but specifying the specific path patterns that we want to exclude.  Can you do path patterns in robots?\n. It's just for consistency.  Will change all lexically bound functions to arrows at some point.\n. This feature detect is unnecessary - you can assume the native properties are undefined.\n. No need for this wrapper.\n. I'd put this in a function, and call it from the event handler to avoid repeating the assignment code.\n. props\n. Not necessarily the log method.\n. Can't we use Function.prototype.apply here rather than checking for apply on fn?\n. Whoops, this change is actually in master pre-branch, but I hadn't pushed master up to date.  Have now, but I think Github will continue to show this change on the PR.\n. No, for convenience we define a baseline, so we ignore any range under the baseline.  Makes it easier to raise the baseline without having to adjust all the configs.\n. I dropped support for classlist in IE < 8, because it relied on a crazy implementation from Jonathan to support object getters, which is super clever but would make the browser reallly slow.\n. OK, will make the next release 3.0 and will include the API v1 decommissioning\n. Line break before }, whitespace after function().\nWe have linting rules in the root of the project.  Can you run them?\n. Prefer this to window, since we do not guarantee that window will not have been overridden.\n. Can you add an appropriate docs link, eg https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API?\n. Lots of mandatory requirements reduces demand to participate, so we have to strike a balance.\n. Not especially. I'm pretty relaxed about indent conventions for markup.\n. The headings are long, and I didn't want them to appear in the left nav.  Fairly lousy reason but it does produce a better UX for most.\n. looks like these tests have some copy/paste remnants that need sorting out.\n. Also add a spec link if possible.\n. incorrectly described tests.  I suggest either drop the describes and call the nested test cases \"returns true for NaNs\" and \"returns false for valid numbers and non-number data types\"; or create an it for each value, eg returns false with... string, undefined, empty object.\nSorry for the hassle. Hopefully this will help others understand the tests.\n. Agree, we should only browserify if at least one polyfill has build.commonjs = true\n. Yes!  Thanks for pointing it out. Looks like Jake jumped in like a champ to fix it.\n. Actually on 5.2.0 I get the same result as @rowanmanning so we should probably stick to let here for the moment. We'll need to ignore the eslint warning then\n. I am starting to see arrow functions as a way of declaring that a function cannot change the context in which it is run.  So it's actually a stricter form of declaration than function and should probably be preferred in this case.\n. It probably can just use grunt.log like everything else does.  It's just because the code came from a third party with a different style.\n. I'm not sure. But it's not enough of an issue to prevent us recognising it as supported.\n. If we're importing from a third party repo, this would be fine, but since the polyfill service is to be the canonical home for this polyfill, the syntax should ahere to the jshint config provided, which includes no multi var declarations.\n. Leaking a global here\n. Generally the README is now quite confused over the use of 'we' and 'our'.  Particularly here, where the system concerned is the personal environment of the reader, so 'our' makes it sound like the clone is being done in some kind of cloud service operated by the polyfill service maintainers.  I suggest using 'you' and 'your' to refer to the reader, and 'we' and 'our' to refer to the maintainers.\n. Probably worth using a consistent Markdown header syntax.\n. \"into for\"\n. Continuous integration testing runs on CircleCI.\n. \"Only tagged releases should hit production, which ensures\".\nAlso /__about\n. We now publish everything under MIT, so we should update this.  CC0 work can be re-licensed as MIT so the whole thing can be treated as MIT, except specific third party polyfills.  Also we still use the license so it should be present tense.  I suggest:\n\"Except where indicated in selected polyfill config files, the polyfill service codebase is licensed under the terms of the [MIT license].  Contributors must accept our [contribution terms].\n. Leaking a global here.  Use anonymous fn, or for slightly simpler architecture, bring the parseIterable fn inside the Object.defineProperty getter fn \n. Ah, I'd forgotten about that, thanks. Is that true in all the browsers we support? (IE6+, FF3.6, Saf4, Chrome1)?\n. I didn't use Symbol because private symbols are not really private, so a basic empty object seems better to me.\nhttps://mail.mozilla.org/pipermail/es-discuss/2014-January/035604.html\n. OK, so what are the benefits of that?\n. I'm not sure there's a benefit here in introducing a Symbol dependency, but very happy to type check the forEach prop.\n. Yes, it's consistency.\n. Added to notes\n. Yeah, this was a pain.\n. Not sure. Although I wrote the polyfill from scratch I actually largely stole the test cases from https://github.com/WebReflection/es6-collections (which I've now credited in the notes), and he had that guard in there.  I've removed it.\n. Ok, thanks.  I'm linking to a fixed tag so we should be OK with this one.  I'm not sure whether we are moving towards or away from CLI tools at the moment, with haikro on it's way out once we get a docker architecture we like, so for the moment i'd be pretty happy using a grunt task that fits in with our existing task architecture.\nAlso the fastly-tools thing appears not to support dry running a VCL without activating it.\n. Yup, I suggested to @surma that he publish on npm.\n. Initially I made a mistake in index.js and referred to the sock var as socket.  Until I added the code above, all I saw on the console was this:\n3 May 12:38:09 - uncaughtException: db42aa429377452ebe9a3a5ad36fee73\n. Seems sentry actually already logs it\nhttps://app.getsentry.com/nextftcom/polyfill-service-dev/issues/126700489/\n. @JakeChampion what do you think about the global ref to navigator here?  I think it should be:\nroot.navigator.sendBeacon = sendBeacon;\nAnd it should probably be in a final else on the UMD below, so it does not expose the global if in commonJS or AMD environments (though that's irrelevant to us)\n. Separate vars for each target, or do we expect the env to manage the right token?\nSo ie. FASTLY_SERVICE_ID or FASTLY_SERVICE_ID_[QA|PROD]?\n. It's not doing any harm, and I'd rather keep the polyfill aligned with the third party source.  I'll push the navigator change upstream.\n. A good pattern I've been using is <, because then you can list the version number the feature was added in, rather than the one before that, and it makes like easier when comparing our configs to MDN, caniuse etc.\n. This needs to be a bit more defensive - iterator may not exist on Symbol (we don't load the polyfill's dependencies for the detect)\n. If you're importing this from a third party source then fine (but you need to add repo and licence props to the config), but if you're authoring, then one var dec per line please :-)\nThere's a .jshintrc to lint stuff.\n. You're extending this polyfill to IE7 here.  I don't believe the polyfill works in IE7.\n. I think if we do that, the error will cause express to bail.  If you pass an object to next it tells express to skip all remaining route middleware and jump to the first error middleware.\n. Oooooooooooooooooooo\n. Ah, except it doesn't quite.  It gives you the main file.\n. At the lower end, you want to set the version constraint to the first version of the browser that is capable of applying the polyfill. This is currently set to 8 for Promise in IE, which seems to be right, since our CI shows it doesn't pass tests in IE7.  At the higher end, you want to set it to the last version of the browser that doesn't have the feature you're polyfilling, and that's where I think you want to make the change, right?\nSo you probably want 8 - 12 (which will include everything <13.0.0)\n. Oh, sorry, I didn't spot that commit\n. Thanks.  I'll stick with this for now but if it does get unwieldy I'll switch to something like that.\n. I think just throwing in all situations is probably best.  If you don't want a mySQL connectionn you can just not set the DSN\n. Yes, it works when I run it locally.  The DC and geoip stats just get set to null.\n. Yes.  Added specific cache headers to these endpoints to tune that.\n. No, but I think we're a fair way away from doing that.  One possibility is to run the RUM recording and reporting endpoints as a separate Heroku app, which would enable us to scale it separately, push releases with much lower QA overhead, and also prevent failures in the RUM code from affecting the main app.  But what we have should be fine for the moment.\n. This seems almost as inconsequential as left-pad.  As long as it doesn't have lots of dependencies, fine.\n. official name for this is ~html5-elements.  html5shiv is an alias.\n. I think module and paths should be grouped under something like install or update, like we do with build.\n. As above, I'd group these under a single property, possibly update, if we are keeping the local source.\n. I know it wasn't there before, but a brief header comment describing what the postinstall task is needed for would add some useful context.\n. consider renaming to postupdate?\n. No access to grunt.log?\n. This all looks like it basically does the same thing and you just refactored it to modernise the code?\n. I'd be tempted to call this function md5()\n. Consider renaming to loadSource?\n. This is a lot more obvious now, thanks.\n. use grunt.log if possible?\nConsider starting the comment with our polyfill feature name, I can't see that we're outputting that otherwise.\n. nit: polyfills, plural.\n. So here I think it's more appropriate to be looking for a section, like update\n. Sorry.  I should not file a PR in a hurry and then run to lunch.\n. Is this valid?  Is it worth using a real element to avoid possible rarely tested edge cases?\n. Should we sort this list?\n. Not sure I follow the reason for this fork?\n. Can we make this a grunt task?  It seems like making a confusing situation more confusing to define this task in package scripts.\n. Are there indent issues here?\n. Some polyfills in devdeps, some in deps.  Should be the same?\n. Sure, just wondering if that might be more likely to run into unknown browser bugs.  Not a strong point.\n. div?\n. Removing this line will break everything :-)\n. indent?\n. Line spacing here seems a bit strange.\nIs it possible to have .gitignore files at sublevels within the repo?  If so we could put it in the polyfill directory.  Alternatively, we could have a different name for polyfill files that are auto-installed, so that they can be ignored with a single pattern.  But that's probably unnecessary.\n. Need to add repo and licence fields\n. Are you sure about this?  Seems like if anything it should be checking the inverse of this condition.\n. Isn't this kind of just reimplementing getPolyfillString?  Could the existing getPolyfillString be abstracted into something like buildOutputString and then be called in two different modes?  You could also avoid adding the co dependency.  I'm not against using third party code but if we already have a way of doing something in one part of the code it seems like a good idea to be consistent with that.\n. Where would this return statement be returning to?\n. A template string inside another template string strikes me as confusing code.  It might seem weird to use a library over the built in feature, but we already have handlebars as a dependency of the project,and id be tempted to use it here like i've done in the RUM template.  This then also avoids strings of client side code being interspersed with servr side code in the same file, and means you can avoid adding a dependency (common-tags) to the project.\n. This seems a bit out of place in this PR\n. Callback is needed for this feature to work, right?  May be worth considering what happens if its missing.\n. Uncommon semver syntax - we would commonly write8 - *. Does the polyfill work without aStyleSheetListpolyfill?\n. I would suggest adding a test forStyleSheetList` as well.\n. I wanted to make as few changes to the tests as possible.  I don't really mind either of those options, or just leaving it as-is.\n. Yes, they're in Lastpass - created by Cloud enablement team today, and configuring them is documented in the changes I made to README.md.  I've also added a TODO to the PR OP to share the lastpass secret appropriately.\n. Which should be fine - it's tested for whenver it is used (because it is also null until a connection is made)\n. We should both read down before we comment, it seems :-)\n. I think so - it's not a credential.  I don't think Apex provides an option to configure roles using env vars.\n. There's precedent...\nhttps://github.com/Financial-Times/next-url-management-api/blob/master/project.json\n. I think line-number-anchored links are highly fragile, so would prefer not to.\n. Unless we linked to the file at a commit ref\n. only a small portion of this is actually AWS, the rest is node and heroku.  My preference is not to make it more complicated (or learn another tool, admittedly)\n. Yes, it's a devdep\n. Possibly.  I'll look into that.\n. Although the docs are versioned, we currently only support v2, so this makes sense,but we should retain the ability to have separate docs for v2 and a potential v3.\n. Good point, wilco.\n. Yes, most likely it's a 404 - an unmatched route.\n. hm, I don't know.  I can't remember where I learnt about it, possibly from Fastly's boilerplate VCL.\n. Thought about it, but can't test it on qa if we do that.\n. Agree. We should avoid using the new Function form if possible. There was an issue some time ago to remove all existing instances.\nHowever, it's ok if the polyfill is only required in browsers that also don't support CSP. This should be marked with a comment.\n. It would be useful to know in what way it scares you.\n. it looks like every function stirng is in a try...catch, so that's something, but it would be worth testing in a browser that fails the array.from detect, and supports CSP, with a CSP header present.\n. No, I admit I'm slightly extrapolating from the data for endsWith\n. For this kind of range we prefer <10.  This is because 10 is the significant number - the version in which the feature was first supported.  0 - 9 requires you to remember a) that semver requires spaces around the -, which is a gotcha, and b) that 9 is the last version that does not have the feature, not the first version that does.\n. It's because if you don't specify a UA, the CDN will do a normalisation and then add your UA to the URL.  So adding one yourself will skip that process and be an optimisation.  If you don't hard code a supported UA, then you would need to add unknown=polyfill instead, in case your users have browsers that are not in our supported list.\n. Speedup: previously we would re-iterate the entire collection if any new items were added.  Now we add new items to the end of a queue, and only process the new ones.  This reduced the number of calls to the nameResolverFunction for dependencies from 1700 to 800.\n. Speedup: Assigning to the existing Set instead of forming a new array by merging and sorting multiple existing arrays.  20-40x speedup on the dependencies alias resolver.\n. This fn is still async, but currently the process has been made synchronous, so this is a bit legacy.  I wonder if it's worth sticking with this in case the resolver needs to become async again in future (eg to insert some nextTick breaks)\n. Making these resolvers sync.\n. Speedup: previously we ran the full always set of feature definitions even when the user didn't specify always, because we need the full dependency tree for RUM.  We now do this only when rum=1 is specified.\n. Speedup: Only request the full feature set needed for RUM if we're doing RUM.\n. The output.queue method can take a string, promise, stream, or a function that returns one of those.  The streamcombiner will wait for the current stream to end, then take the next thing off the queue.  If it's a function, it calls it and then looks again at the return value.  If the thing is a string, the string is transferred into the output stream and we move on to the next thing.  If it's a promise, we wait on the promise, transfer the result into the output stream and move on.  If it's a stream, we pipe it to the output, wait on the end of the stream, and then move on to the next thing.\nThe upshot of this is that you can queue anything, using a function wrapper to only initialise streams when we're ready to read from them, and weave those streams together with precomposed strings, which are only streamed out at the right point, and held in the queue until then.\n. This is a syntactic sugar for output.queue(null)\n. This is quite a nice example of weaving together strings and a lazy-loaded stream.\n. Continue to support string output for backwards compat.\n. I don't think RUM was working before :-O.  I think we may be about to release a broken version in 3.13 unfortunately.\n. Writing three files per polyfill means the build process now takes a lot longer.  Not sure what to do about that.\n. Done in eef1764\n. Confirmed:\nhttp://qa.polyfill.io/v2/polyfill.js?rum=1\n(function(undefined) {\n(function() {\n    var beacon = new Image();\n    beacon.src = '//qa.polyfill.io/v2/recordRumData?X';\n    \"&Array.from=\" + ...\nSo we will need to fix that in a patch release before deploying 3.13 to prod.  I'll make a separate PR for that since this one is obviously not likely to make it for 3.13. @JakeChampion \n. we don't offer sources as an external interface to the library... if you require('polyfill-service') you don't see that module, right?  Agree that we would be breaking it if you required that module individually.\n. There's stream-concat which I used as inspiration but there's basically none of it left in my module.  No objection to publishing it as a standalone module but keen to ship this for the polyfill service first.\n. There are some indentation issues here, @hipkiss91 could you configure your editor to respect our .editorconfig settings?  cc @JakeChampion \n. You could remove the old-code comments\n. Oh, sorry.\n. I think these error labels are a bit confusing now.  Maybe call them:\nerror 751 \"Redirect to prod HTTPS\"\nerror 752 \"Redirect to QA HTTPS\"\n. You could make this a bit less repetitive:\n```\nRedirect to canonical prod/qa origins\nif (obj.status == 751 || obj.status == 752) {\n    set obj.status = 301;\n    set obj.response = \"Moved Permanently\";\n    set obj.http.Location = \"https://\" if(obj.status == 752, \"qa.\", \"\") \"polyfill.io\" req.url;\n    synthetic {\"\"};\n    return (deliver);\n  }\n```\n. https://github.com/rowanmanning/proclaim/issues/44\n. Issue raised\n. Right, well, thanks for that :-)\nI think restricting callback names to ASCII and allowing use of reserved words is fine.  If someone wants to alert the result of the jsonp call, I have no objection!\n. No, I didn't consider that.  What would you suggest?\n. Agreed:\n\n. wrapper unnecessary?\n. The polyfill service already offers a guarantee that this is a global\n. Indentation issues\n. This is quite a new API to use for a detect.  Is it possible to detect without using ES5?\n. hmm, I don't know that that's universally true, eg. for RUM beacon code... https://polyfill.io/v2/polyfill.js?rum=1&ua=chrome/50 (see top section).  We will probably want to close that loophole (and figure out if there are any others), or ensure that detects are always ES3 compatible.\nOne thing that could be done in the RUM case is putting each detect in a try...catch, but that will bloat the code a fair bit.\n. Possible to call this something else?  Miss seems a bit counter-intuitive.\nHow about:\nconst pipe = require('mississippi').pipe;\n. Mississippi is a collection of other stuff that is inividually requireable.  Do we need all of it?  Pipe is actually the pump module.   Through is actually the through2 module.\n. Do we have to use transform streams in a pipe like this?  It seems to be complicating the logic to push the whole contents of the output through the jsonP-callback-adding stream, then pass the whole lot on again to the response stream.  Previously we were listening for the end of stream event and then writing to the output stream, without seeing any of the stream content, which strikes me as a slightly better pattern, but I don't know a lot about streams.\n. Consider renaming callbackWrapper to jsonpWrapper to be more descriptive?\n. Sorry for being slow... what does that correlation tell us?  I'm concerned about browsers that have neither getOwnPropertyDescriptor nor dataset.  The detect for dataset will error in browsers that don't have getOwnPropertyDescriptor, unless a polyfill for getOwnPropertyDescriptor is loaded first.  It will be most of the time, but I am concerned that there are edge cases, eg. RUM, where it is not.\n. You could use a higher level lib here like stream-to-string: https://www.npmjs.com/package/stream-to-string\n. I much prefer this solution to the one in the other PR - the source order still matches the order of output which makes it easier to grok.\n. Shouldn't we at least assert that it implements ReadableStream?\n. Fine\n. Yeah, actually you're right, the mobile/desktop split is ambiguous.  Let me take another look at that.. tr.feature is probably more performant?. Also I'd consider building a simple object map to allow faster lookups, so you store this:\n{\n   \"array.map\": [element],\n   \"fetch\": [element],\n   ...\n}. Consider paste here as well, for better accessibility?. This reverses a change I made recently. Sorry if I didn't understand what I was doing. Can you explain why we need to specifically exclude the polyfill.js files rather than the whole generated folder? Is it because you want to lint detects and tests for imported polyfills?. Should this have a scheme?. This is ignored everywhere?  Maybe just at the root of the project tree?  Also maybe a comment to say what it is.. Small point but Sauce Labs write their name with a space.. Is there a browserstack docs page you could ref here as well?. Not keen on this name, how about testProviderName. Also is it needed at all or could you simplify to \nrequire('./' + ['browserstack', 'saucelabs'].filter(x => x in argv)[0] || 'browserstack');\nAnd it might be slightly less obscure (and more forwards compatible) to name that CLI arg:\nrequire('./' + (['browserstack', 'saucelabs'].contains(argv.provider) && argv.provider) || 'browserstack');. RUM suggests Chrome 54 doesn't have it:\n\"Event.hashchange\",\"chrome\",\"54.0.0\",\"0\",\"128\",\"8\",\"234\",\"No\",\"False negative - add targeting\". Same for the other hashchange records in RUM - they are false negs, not false positives.. This is weird because the RUM suggests it was falsely served to iOS 10 before:\n\"Symbol\",\"ios_saf\",\"10.0.0\",\"100\",\"280\",\"4\",\"493\",\"Yes\",\"False positive - remove targeting\". Yep, but I don't understand why we were serving it to 10 before. Wonder if this was just people using the always flag. Ah, OK, that makes sense then. If anything, I'd say <12 because we prefer < syntax to <=.  I don't see a record of Event in ie_mob in the compat data, maybe it's fallen out of the 30-day window.. Can you add targeting for the remaining browser families here?  Does the polyfill work on iOS or Android, for example?  Blackberry, samsung?\n[also applies to all the other configs included in this PR]. repo links should be to the base of the repo, in this case https://github.com/Alhadis/Fix-IE.  I appreciate that the link to the file itself may be more useful, but we should follow the schema here. Good point.  I'd forgotten we could use functions for aliasing.  And it looks like we're already using this for Facebook for iOS, but there's an open issue for Facebook for Android: #990. I'm not really convinced that the function approach works, because it requires that we act on the initial parsed results of the UA string - and in the case of facebook for iOS, that's sort of OK because we can use what the ua module reports as the OS version, as if it's ios_saf.  That's a bit weird though.\nIdeally, you want to say 'if this UA is identified as facebook, strip the bit that identifies it as facebook and re-parse it', or even better, turn off the bit of the ua module that matches facebook, in the hope that it would then match chrome or safari instead.\nFailing that though, the most reliable option seems to be to strip the Facebook token before we parse it.\n. Docs is a string property, so you can only link to one of these pages. You could put the rest in notes.. The name here is a problem because ElementTraversal is not a web platform specced global. You can either use a descriptive name prefixed with ~ as we've done for ~html5-elements, or use one of the real properties exported by the polyfill, eg Element/protoype/firstElementChild and list the others as aliases in the config.  This configuration option is documented in the contributors guide.\nMy preference would be for you to do the latter because then I can request any of the included features individually using their real API names in the features URL argument, eg /v2/polyfill.js?features=Element.prototype.firstElementChild.. If you are importing a 3rd party polyfill using the config install mechanism, you don't need to commit the original source, it's imported automatically at build time.. Yep, I saw this.  I wasn't able to run the tests locally as I don't have the browserstack credentials and there are three sets in lastpass (not clear which one to use) and when I found out which one to use, it didn't work.  So it would be helpful to fix that.\nI'll look into trying to fix this, but if not I'll roll back that dependency.. After some investigation I found the source of the problem and raised a bug on js-polyfills.  @inexorabletash pushed a fix and released a new version, so I've pushed that update to rerun our CI.. What's the thinking here?. Some weird indentificationing going on here?. Asserting the exact error text seems a tad pedantic - maybe enough to confirm that we log something?. Can this be expressed simply as\n\"customElements\" in this. These comments should ideally be written in the third person form for consistency, eg. \"When using ES2015 modules that are transpiled to ES5, the native shim detailed in the polyfill's README must be included manually\"\nComments also support markdown so that comment could link to the README. These are ignored at any point in the project tree.  Did you want to ignore them only at the root?. Should we remove these aliases if they are not working?. Why move this to a larger scope?. \"...should resolve false for user agents that are from known families and above our baseline\"\nExisting wording a bit confusing.. There's a bit of extraneous whitespace in these closing braces.  Also, personally I preferred the more compressed format for the data which make it more likely that you could fit the entire test on the screen at once, but it's not a big point, and I don't really care that much. Still think this is a fragile test. TODO?. Is ES2017 technically ES8?  I'm losing track.  We currently have a lot of polyfills aliased to es6, but not many attached to the year-based names and none attached to es7 or es8.  We might need some policy here, @JakeChampion - thoughts?. enumerate is not a valid object descriptor property.  Should be enumerable.  It is already false by default, but technically required, so we should include it.. You could inline the function anonymously here to avoid creating the overhead of an additional symbol.. Wondering whether we should be using NODE_ENV here. Maybe hoist this def to the top and name it as a constant, eg CDN_SURROGATE_KEY.  Also since this needs to be in sync between this task and the lib code, should it be an env var?. Is this a breaking change?  Previously returned a promise?. Hm, this is probably accidental debug that we should remove. Should this be using the sources lib directly rather than the external API, I wonder?. Move semicolon to next line to avoid jumping two indent levels?. Are you sure your indentation is right here?. Maybe no need to reassign these anymore?  It now feels inconsistent with the treatment of config.hasTests. Could do.  It's safe not to since it's an own-goal if you set it to something invalid.  It only affects you.. This is the approach we advocate in https://docs.fastly.com/guides/performance-tuning/serving-stale-content.  Another approach might be to change beresp.status from 404 to 503, which should trigger varnish's default stale-if-error logic.  You could experiment with that if you want.. No reason to cast it to an int when we actually need a string anyway.  But there's a hole here: if the regex doesn't match you end up dumping the entire querystring into the output.  I'm refactoring it.. ",
    "samgiles": "I've began to compile a list of potential aliases, unfortunately there isn't a convention that covers all of the polyfills at the moment but there is nothing stopping us using both given the convention: modernizr:xyz and caniuse:xyz.\n. In progress in branch modernizrnames\n. Removing '.min' from the URL would give you the information you'd want.  My primary concern is shipping licensed code without the licenses intact.\n. It would be I think.\n. Happy to keep this in memory and not persistent?  If persistent, I'll just write the metrics to disk every now and then as some JSON rather than use a database or anything complicated.\n. 1 hour seems short for a service such as this. Polyfills are rarely going to change except perhaps after a deployment, is there any reason in particular for 1 hour?\n. We could add a Last-Modified header and a shorter TTL?\n. Closed by #40 \n. Do Origami endpoints (__about and friends) require this as well?\n. Note: We should include this repository as a submodule into an FT Platform service module.  Currently the pattern tends to include the code along with the service module code.  The reason for keeping it separate is: I'd prefer to keep the service module closed source as it is likely to be specific to our infrastructure and shouldn't be required for a third party to get the application running.\n. See build/deploy pipelines on Labs' Platform server: http://ftjen02990-lvpr-uk-p:8181/\n. Unable to deploy to live.  Forge is not updating with new version as semantic version in the .semver file in the service module is not being updated (In the build job configuration this step seems to be commented out).  Opening to follow up.\n. To make a release the .semver file needs to be bumped in the service module.  Latest is live.\n. kangax/compat-table may be slightly more useful for Javascript features (ES*).\n. Just noticed the caniuse data is  CC BY 3.0 licensed.  I'm unsure how that would factor here, I think it means we must attribute it's use which is fine.\n. It seemed that the other pull request messed up this merge.  My fault, I set the pull request up to pull into the other pull request branch, which I'd hoped would just work when they are both merged.  But I was wrong.  Fixed now.\n. Would it be better to support origami modules as names? e.g:  \n/polyfills.min.js?maybe=origami:ft-header\nThis then expands to the features defined by the Modernizr names in the origami.json's browserFeatures key.\n. Exactly. Without a version assume latest, otherwise:\n/polyfills.min.js?maybe=origami:ft-header@{{semver_string}}  (?maybe=origami:ft-header@0.2.x)\n. @commuterjoy Isn't the ft-nodejstemplate module already using forever? (http://git.svc.ft.com/projects/FPC/repos/ft-nodejstemplate/browse/templates/init-script.erb#33)\n. Ah ok, so I was thinking it might be better to simply use npm start, npm restart, npm run-script status, and npm stop, specifying these in the package.json, deferring the process management to the developer.  It seems to give the most flexibility.\n. One potential issue here is the inability for npm to pass command line parameters to run-scripts in the package.json:  npm/npm#3494\n. Commit contains an example using the package.json scripts to manage the process.\n. Trivial commit, no review.\n. Nice solution :smile:, thanks!\n. Merged in https://github.com/Financial-Times/polyfill-service/commit/a204f062d70b0aa419d6806d87b46438e1dbbf5e\n. Updated in #44 \n. Addressed in #50 \n. Normalise to caniuse browser names.\n. @triblondon I can't help but think this could be made simpler by using a PolyfillIdentifier class thing, at least then a Polyfill object is a thing rather than a loose description of the members of an object literal?\nMost of the problem I'm having when trying to step back and think about the code critically is that the Polyfill object isn't clearly explained, do you think this simple constructor and prototype would help?\nJS\nfunction PolyfllIdentifier(name, flags) {\n  this.name = name;\n  this.flags = flags;\n  this.aliases = [];\n}\nPolyfllIdentifier.prototype.isCanonical = function() { return this.aliases.length === 0; /* ??? */ };\nPolyfllIdentifier.prototype.aliasedBy = function() { return this.aliases; };\nPolyfllIdentifier.prototype.appliedFlags = function() { return this.flags; };\n. Interesting thought for having opt in only polyfills, it makes sense here.  The default behaviour is to serve everything based on the UA.  Perhaps we could have a config key in config.json to specify alternate behaviour: default: false?  Thoughts @triblondon ?\n. @triblondon not sure if it notifies you of additional commits.  Good to go?\n. I haven't look too much at the dependency resolution yet but it seems that Element.prototype.matches/config.json should contain a dependencies key that lists alternate, or dependent polyfills that should be included based on the UA (such as Element.prototype.matches.ms).\nEven with this, dependencies are not included automatically <- this is a bug by the definition of dependencies.\n. Adding to milestone 1, for me this is important; if polyfills we need aren't getting served to browsers we need to support, it's pretty useless.\n. @wheresrhys I've pushed a change to production: http://polyfill.webservices.ft.com/v1/polyfill.js?features=Element.prototype.matches\nLeaving this open as it's still a problem.\n. Closed by #66 \n. Merging so I can get this into production for workshop tomorrow.\n. Basically we needed to include this for an internal workshop we held today. We knew we needed the shiv but weren't 100% sure the existing polyfills covered the functionality - so to be on the safe side it was added. I do intend to remove it as it's supposed to be a quick, cover all, solution.\nI just took some time to go through the existing polyfills and can't obviously see anything missing that's in html5shiv, if this is correct, then great! I'll revert this commit :smiley: \n. @AlbertoElias  I thought this might be misleading: ua-parser parses the Android default browser as 'android' which is already the caniuse browser name.  Therefore we don't need to perform the lookup.\nIt might be worth adding it anyway for clarity.\n. @triblondon how does this look?\n. Do we really need to do this? I just thought: the developer could just use an non minified version by changing the URL, the developer wouldn't normally be able to step through native APIs so does it make sense to step through polyfills assuming the polyfill is correct?\n. @triblondon we should prioritise this, I noticed a dev version of an FT product requiring html5shiv.\n. Added test case in https://github.com/Financial-Times/polyfill-service/blob/functionbind_test/polyfills/Function.prototype.bind/tests.js\n. Thanks!  Live!\n. Thanks! I didn't spot this :o and I've just pushed a fix for it.  I think this is desired behaviour here so I will merge anyway and consider reverting my fix.\n. Pretty trivial commit really, worth noting that ranges must be node-semver compatible however.\n. You may need to update the shrink wrap.\n. The build output seems different from the output when running the tests manually.  This is the only thing left to investigate before merging.\n. For the dynamic case you could dynamically install a route at service startup from a specifically named file.  In the geolocation case, we'd end up with lot's of unnecessary traffic hitting the backend unless we add geolocation headers in the CDN and give some 'close enough' estimate based on the location of the POP.\n. I've made a release to NPM for the 1.1.0 version (see Milestone 1.1: https://github.com/Financial-Times/polyfill-service/milestones/1.1).\n. I think this is a good idea.  Shouldn't be too difficult to add either  How would this work with our CTM?\n. I like this idea.  We're basically just adjusting where '0' is for a set of browsers.  We should suggest a baseline for all the browsers listed in the readme.\nI think the assumption for ios_saf is a bad one :(, unfortunately.  My Dad uses a ios 3 still on an old iPhone 3, and a friend who has an old iPod touch on a fairly old version of ios.  \nIf we can support a browser, we should try.  Particularly as soon as we set the low bar, we can't move it lower.  We should aim to be as low as possible in the first instance.\n. I like the idea of not having to specify any parameters.  Plus it probably makes caching a little easier.  Can we say, if there are no parameters the default set is included?\n. Sorry of course, I missed this line: https://github.com/Financial-Times/polyfill-service/blob/baseline/service/index.js#L140\n:+1:\n. The service is licensed under CC0.  Which I thought is pretty flexible.  I can't pretend to know much about license compatibilities tbh.\nA work released under CC0 is dedicated to the public domain to the fullest extent permitted by law.. (https://www.gnu.org/licenses/license-list.html#CC0)\nWe do have individual polyfills packaged with different licenses and I would've thought that consumption in a bundle of polyfills from the service is covered by the license they are marked with, working much the same way as bundling an individual polyfill at build time using a dependency manager.  \nI would've thought the license for the service code can be separate from the bundles it serves.  I'm clearly no lawyer, so would like to know the correct way of licensing polyfills and the service.\n. The tests for this API aren't failing on the CI.\n. These tests aren't failing.\n. I've just made a quick diff of the test results before and after this branch was merged.  Some of it doesn't look quite right.\n| Browser | Status | Feature |\n| --- | --- | --- |\n| IE6 | Fixed | Element.prototype.classList |\n| IE6 | Broken | Window.prototype.getComputedStyle |\n| IE6 | Broken | Window.prototype.viewport |\n| IE6 | Fixed | Window.prototype.Event.ie8 |\n| IE7 | Fixed | Element.prototype.classList |\n| IE7 | Broken | Element.prototype.matches |\n| IE7 | Broken | Window.prototype.getComputedStyle |\n| IE7 | Broken | Window.prototype.viewport |\n| IE7 | Fixed | Window.prototype.Event.ie8 |\n| IE8 | Broken | Window.prototype.devicePixelRatio |\n. Any reason to remove the baseline support documentation for each browser?\n. :+1: \n. There are a few failing tests in Safari 6 and 7, and IEs 7,8,9, take a look at the end of the Travis output.  I wouldn't worry about the FF 3.6 failure.  But IEs 8 and 9 and Safaris 6 and 7 should pass these tests. It may be the case that Safari 6 and 7 don't need targeting for this Polyfill.\n. I've taken a quick look in a VM and it seems to work in isolation, (when using the &feature= flag or the director) in IE7 at least.  It seems like something is breaking when all of the polyfills are bundled.  I have a feeling it's the placeholder polyfill as it relies on Element.polyfill which appears to be undefined.\n. I think we should be ok to merge these changes.  I can't reproduce any failing tests completely in isolation in IE7 or 8 nor Safari 7 following the fix I made above.  Merging would make further test fixing easier as we begin to remove uses of 'Window.prototype'.\n. The detect.js will make this really difficult.  Maybe we should have detect variants too?\n. Completely missed this branch sorry.  The tests in FF beta and 32 are now passing for Array.from, nice.\nEvent tests seem to be passing in all browsers tested now too. Except for FF 3.6 (but not many are working over there).\n. The only page that can update frequently is the usage page, I though it would makes more sense to cache them for longer?  Particularly if the /docs/features/ needs to be generated each time.\n. No major breakages, no change in test pass/failures, so.. merged.\n. Will close this once deployed.  Thanks for that Jonathan, nice work. I'd completely missed that branch.\n. Weirdly Event in IE7 seems to have regressed:  https://travis-ci.org/Financial-Times/polyfill-service/builds/40312538#L735  .  Don't see how these changes could affect that, so I'll skim over the changes and merge if it looks good.\n. LGTM :+1:   Thanks!\n. Wow, nice work! Seems to work everywhere targeted according to the tests!\n. Closing as a duplicate of #111.  Feel free to open discussion there.\n. See https://github.com/azproduction/autopolyfiller/issues/18\n. Seems like this section: https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Document/polyfill-ie8.js#L3\n. Seems like there could be some duplication of logic with lib/sources.js? \nIt probably would help if the methods had documentation.. but:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/lib/sources.js#L97\ngetPolyfill(polyfillName) will return an object with much of the information you're enumerating here.\n. > A browser is considered compliant only if it passes all the tests, so this is a reasonably comprehensive test rather than a naive feature-detect. \nhttps://cdn.polyfill.io/test/tests?feature=Element.prototype.classList\nThe chart indicates the necessity of a Polyfill in IE10 to make the implementation as standard as possible (according to those tests).  If a version of IE supports classList but is missing some important features of classList, a variant could be created to reduce the size of the Polyfill for these browsers.\n. There is probably not much we can do about clashes unfortunately, we can however write tests that verify the implementation we have works as expected.\nCan you reproduce using a smaller test case that includes jQuery?\n. Need to update the Shrinkwrap to include 6to5.\n. The config would need to include two pieces of information:  for each variant it would need to specify whether it was written using ES6 syntax, and additionally we'd need to specify the range of browsers that need compilation to ES5 and those that don't.  Take the config for rAF as an example:\nJS\n{\n    \"aliases\": [\n        \"default\",\n        \"caniuse:requestanimationframe\",\n        \"modernizr:requestanimationframe\"\n    ],\n    \"browsers\": {\n        \"bb\": \"7\",\n        \"chrome\": \"1 - 9\",\n        \"ie\": \"6 - 9\",\n        \"ios_saf\": \"3.2 - 5.1\",\n        \"firefox\": \"3.6\",\n        \"opera\": \"9 - 12.1\",\n        \"op_mini\": \"5 - 7\",\n        \"op_mob\": \"10 - 12.1\",\n        \"safari\": \"3.1 - 5.1\"\n    },\n    \"esversion\": \"5\",\n    \"variants\": {\n        \"moz\": [{\n            \"browsers\": {\n                \"firefox\": \"4 - 22\"\n            },\n            \"esversion\": \"6\",\n            \"requiresversion\": \"5\"\n        },\n        {\n            \"browsers\": {\n                \"firefox\": \"23 - 36\"\n            },\n            \"esversion\": \"6\",\n            \"requiresversion\": \"6\"\n        }],\n        \"webkit\": {\n            \"browsers\": {\n                \"chrome\": \"10 - 23\",\n                \"safari\": \"6\"\n            },\n            \"esversion\": \"5\"\n        }\n    },\n    \"dependencies\": [\n        \"Date.now\",\n        \"performance.now\"\n    ],\n    \"license\": \"requestAnimationFrame polyfill by Erik M\u00f6ller, fixes from Paul Irish, Tino Zijdel, and Jonathan Neal\"\n}\nIn this example, the variant for moz is written using ES6 syntax and must be compiled to ES5 for '4 - 22' and can remain as ES6 for '23 - 36' (example values).   This doesn't seem too clean to me.\n. Apart from comment LGTM.\n. This seems sensible.  We should run the build process (transpiling, minification, etc) using the 'install' script in the package.json.\nconfig.json syntax checks should be a separate process run as part of the CI test. \n. Looks good to me.   We will need make the loading of sources not sync (and mostly offline), it would simplify some of this code I think, see #233.\n. The spec says String.prototype.contains should throw an exception if the first argument is a RegExp.  Other than that the algorithm is identical to string.indexOf(searchString) !== -1\n. Looks good.  I think we should include a contributing guide somewhere that documents all the polyfills that require tests and rank them based on difficulty, these String polyfills would be good candidates for beginners.\n. Potentially.  getPolyfillString however really doesn't do anything asynchronously, we don't do any IO beyond network.  I'd like to measure it but it might add unnecessary latency if we make it async using process.nextTick or something.  The response time we get on the node process is on average 3ms at the moment, (we should measure 95th and 99th percentile) but the max as of right now is 88ms.\n. Thanks :)\n. Can we just use an existing endpoint?\n. Ah, sorry, I did review this but forgot to actually press 'Comment'.\nThis looks good, I think I still prefer the idea of having the tasks separate but can't remember the concrete reason why.  This makes sense as it is now.\n. ~I only see one .jshintrc?~\nIgnore me\n. Bar inline comment, LGTM.\n. Maybe we could continuously deploy to latest.polyfill.io or something\nsimilar?\nOn 11 February 2015 at 17:46, Andrew Betts notifications@github.com wrote:\n\nIt doesn't hit the CDN until we release 1.3, but as soon as it's merged\nyou could check out and use master if you wanted the fix right away.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/289#issuecomment-73927521\n.\n\n\nSam Giles\nDeveloper\nFT Labs\nFor Origami questions: origami.support@ft.com\nNumber One Southwark Bridge, London SE1 9HL\n\n\nThis email was sent by a company owned by Pearson plc, registered office at \n80 Strand, London WC2R 0RL.  Registered in England and Wales with company \nnumber 53723.\n. We should look at http://github.com/Financial-Times/next-metrics.  StatsD isn't really the one true way.\n. Closing for now.  I still think this module is a good idea (particularly for 'Next'), but we should revisit this when the changes to the endpoints have been finalised..\n. Not really, because MutationObserver covers single browser versions and the default has an upper bound.  There's quite a lot missing (Safari 7 for example), this covers everything that isn't in a variant.  (I've tested the variants still work).\n. Just need to update the config, there are ideas floating around to automate the collection of these configs.\n- https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/CustomEvent/config.json\n. Our full test suite does, but, it's quite unreliable.  We also don't automatically generate targeting data from the tests, yet.\n. iirc CI only tests targeted browsers, so it would've been skipped for CustomEvent as it's not targeted.\n. You can include 'default' as a feature to include the default set\nadditionally:\nhttp://cdn.polyfill.io/v1/polyfill.js?features=Element.prototype.closest,default\nOn Tue, May 5, 2015 at 2:10 PM, Andy Burke notifications@github.com wrote:\n\nI see, I misunderstood the 'features' parameter, I didn't expect that to\nstop it loading the defaults.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/395#issuecomment-99074141\n.\n\n\nSam Giles\nDeveloper\nFT Labs\nFor Origami questions: origami.support@ft.com\nNumber One Southwark Bridge, London SE1 9HL\n\n\nThis email was sent by a company owned by Pearson plc, registered office at \n80 Strand, London WC2R 0RL.  Registered in England and Wales with company \nnumber 53723.\n. Nice spot.  See inline comment.  I think we could do with some tests for this feature :).\n. Thanks!\n. @jonathantneal re-assigning to arguments is a bad idea if you're using arguments. I think it's generally safer to create an alias.\nA while loop may perform better in older browsers only because you can remove an operation, otherwise the interpreted code is mostly the same.  To realise this with while, count backwards because 0 is falsey - incidentally, when optimising C, this pattern is also suggested as a comparison with 0 is suggested to avoid an extra lt or gt instruction:\n``` JS\nvar index = arguments.length;\nwhile (index--) {\n  // ... access[index]\n}\n```\nAlthough it's arguably less clear.\nOn allocating key only when necessary, I'm pretty sure that doesn't matter, typically, afaik, stack space will be allocated anyway to avoid having to allocate on an as need basis, allocating space for an extra variable is way cheaper than allocating for each variable.\nIn engines where there is a JIT, all of this is invalid anyway.  I've confirmed that this function is optimisable by V8 using optical https://github.com/samgiles/optical\n. Phantom JS isn't a target browser. What's the User Agent for the version you're using?\n. Just rename the 'test.js' file to 'tests.js' :).\nThe SauceLabs build we'll do will test on older browsers.\nNo need to change compat.json we automatically generate this from the tests run on SauceLabs.\nThanks for the PR!\n. We've updated this in the current master branch, ios_chr should now look like the underlying UIWebView based on the version of Safari.\n. Should we alias ios_chr to chrome.  I have no idea what the feature parity is like but I suspect they are the same.  Although I notice we don't set a baseline for ios_chr and claim to support it: http://cdn.polyfill.io/v1/docs/contributing#browser-support\n. So it does :disappointed:..  maybe we should just try and do the safest thing for chrome ios, as we can't easily say Chrome on iOS at 43 is equivalent to this particular version of UIWebView.  There isn't a correlation :/\n. Ok, I think the way forward is to simply:\nJS\nvar userAgent = ua.replace(/(CriOS\\/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+))/, '');\n/* ... parse(userAgent); ... */\nThe useragent module seems to then parse it as ios_safari at an appropriate version.  Will make a PR.\n. Ok, Opera Mini is easy to fix.  What is Puffin doing with that UA :disappointed:?  That's going to be harder as it's reporting X11 rather than anything to do with iOS.  Is that UA correct for the iOS version?\nEDIT: Turns out the two letter code at the end of the UA indicates the platform.  Unfortunately no platform version exists. This might not matter as it seems like the page is cloud rendered. May actually be Chrome 30.\n. PR updated to strip OPiOS.  Any further issues related to CriOS or OPiOS specfically, report in the PR or open a new issue.\n. Updated master to support CriOS and OPiOS.   Puffin and friends may remain, let's open issues on a case by case basis.\n. Great, thanks!\n. Missing Symbol.prototype.toString (19.4.3.2 ) and String(_sym_) (21.1.1.1) tests? Only mention it because it covers the abstract operation: SymbolDescriptiveString which is probably useful for debugging.\n. @callumlocke your particular issue is fixed in the RC (http://qa.polyfill.io/v1/polyfill.js?features=default,Promise&ua=Mozilla/5.0%20(iPad;%20CPU%20OS%207_0%20like%20Mac%20OS%20X)%20AppleWebKit/537.51.1%20(KHTML,%20like%20Gecko)%20Version/7.0%20Mobile/11A465%20Safari/9537.53)\nWill be going live after the QA grace period.\n. Looks good.  Feel free to merge.\nNo other assets for CI I believe.\n. LGTM, maybe we should add a test to cover the first conditional branch, maybe test whether null and undefined throws the exception?\n. Thanks!\n. Hey, is it possible to let us know which version of FxOS you're on and what the user agent string is?\n. I've restarted the tests a couple of times but they still seem to hang.  Not sure how it could be related to this change.\n. > In the node tests, the \"should understand the 'all' alias\" test regularly takes ~700ms. Not sure why. This underlying slowness slows down any test with mode=targeted.\nThis is weird, I can reproduce, but only if the request to the polyfill endpoint is made through a page: \n\nMight be worth trying this: http://www.brendangregg.com/blog/2014-09-17/node-flame-graphs-on-linux.html?  (Only I don't want to spend time setting up a Linux VM or an environment on an existing one (shell01 maybe?)).\n\nWhen running the service with grunt dev, console output is delayed. It appears in real time if running the service with node bin/polyfill-service\n\nI don't think this is as weird, most likely a problem with the stdout multiplexing grunt is probably doing - only speculation.  Probably a grunt bug.\n. Looks good.\nI'm a little worried some of the code is getting a little dense.\n. Blocked by: https://bugzilla.mozilla.org/show_bug.cgi?id=864843\n. At the moment Firefox for mobile is aliased as  \"firefox\": \nhttps://github.com/Financial-Times/polyfill-service/blob/master/lib/UA.js#L45\nWould the project maintainers be willing to expand the baseline browser support to include Firefox for Mobile as is done for Chrome on iOS?\nI could send a PR? :)\n. So I've had a quick look at this - to avoid duplicating all the config for firefox and firefox_mobile it seems to make sense to be able to use both if the UA is parsed as firefox_mobile. Is that something that would work or would you rather duplicate config?\n. Duplicate config it is then :).\n. I don't think I have contributor permissions anymore.. so the build failed as it's my repo.\n. Annoyingly Saucelabs don't support anything but the default browser on Android (whether that be Chrome or the Android stock browser)....\n. If this could go into 2.0 it would be cool :)\n. Easy to change except, it's because the changeset was waaaaaaaaaay larger when I made the white space consistent :P, some files are spaces, some are tabs.  I'd prefer to make the whitespace consistent as part of a separate commit, I can do that with automation.\n. Updated spaces -> tabs across all of the config files.\n. comment this.  Applies to just the default alias resolver?\n. Comment could be improved.\n. AB: Won't work if polyfill.aliasOf is already an array?  Also comment to make the alias labelling stragegy clear, ie A->B->C would return C with A as alias.\n. AB: I think of it as running resolvers until no aliases remain.\n. AB: objects with metadata = polyfill objects with potential aliasOf property.\n. AB: is there an Object.values?\nSG: @triblondon No Object.values in Javascript. Can use the following as an implementation which is a little cleaner (1 line versus 6!)\nJS\nObject.values = function(obj) { return Object.keys(obj).map(function(key) { return obj[key]; }); };\n. AB: standardise names?\n. It depends on the definition of this function.  We can handle that case but is the developer then missing the point of these chained functions?  The function should return an array of polyfill identifier names expanded from the polyfill identifier name.  If the expansion can not occur you should not expand and return the argument, or at the very least return a base case explicitly.  \nIn this case, relying on configuredAliases[polyfillIdentifierName] to be undefined when expansion can not occur then catching that one layer above is too much obfuscation for me.\n. I've removed it in the commit below.\n. Yeh that's a good idea.  It's probably a good idea to avoid doing too much in one PR, however as this is easy to do and won't affect any other part of the code shall I add it in this?\n. I'm not fan of generating property names, and you lose the ability to fall back nicely if the property doesn't exist in cases where detect.js files are not available.\n. Going to do it as a separate PR.\n. http://jsperf.com/array-indexof-vs-object-lookup2 \nWon't we need to vary on Referer?\n. I think we should move this into getPolyfillString.  Seems like a feature that should be available to the Javascript API.\n. Should we include a dependency on Array.prototype.forEach?  (Although technically 'data' can be the more generic iterable).\n. Can we keep the config keys lower case for consistency?\n. Need to use require('es6-promise').polyfill(); or Promise is undefined in denodeify.\n. I reckon we should still monitor this?\n. What's the behaviour if this env var isn't set?\n. Where's the current data?  If it's based on the stuff in Heroku it's more likely to be how fast node responds to the __gtg, which v8 will have JIT'd for us.  I still think measuring this here makes sense.\n. I'd suggest using timer.unref() \nFrom nodejs.org docs:\n\nThe opaque value returned by setTimeout and setInterval also has the method timer.unref() which will allow you to create a timer that is active but if it is the only item left in the event loop won't keep the program running\n. This looks like the same algorithm which is called by graphite.write, I don't think this is required.\n. When we require TLS we'll have to update this:\n\n``` JS\nvar tls = require('tls');\nvar GraphiteClient = require('graphite');\nvar CarbonClient = require('graphite/lib/CarbonClient');\nvar socket = tls.connect(2003, {\n    rejectUnauthorized: false\n}, function() {\n    console.log('client connected: ', socket.authorized ? 'authorized' : 'unauthorized');\n});\nvar graphiteClient = new GraphiteClient({ \n    carbon: new CarbonClient({\n        socket: socket\n    }) \n});\n```\n. This doesn't seem to be in the spec: http://origami.ft.com/docs/syntax/js/#syntax-convention-rules\nDisclaimer: I'm anti-single line branching statements.\n. src is never used.  Did you intend to change references to source to src?\n. You might want to do something like var testData = [...]; testData.forEach(..);  Because I was seeing undefined is not a function errors otherwise.\n. Isn't there a possibility that 'a' could be in the global symbol registry?  Not sure we can guarantee the order of execution: the test at line 85 running before this test might cause this one to fail erroneously.\n. ~~I wonder if there is slowness because nameResolverFunction is sync.~~  Doubt it\n. This comment is out of date.\n. ",
    "patrickkettner": "wouldn't a link to that information be sufficient?\n. It would be great to be able to override this in the case of inaccurate data from caniuse\n. if we assume latest on no version, what would happen if a polyfill releases a backwards incompatible change?\n. > wouldn't a backwards incompatible polyfill sort of defeat the point of polyfilling\nI was thinking of the css shapes and picture element polly(prolly?)fills. They have changed several times throughout history due to changes in their specs.\ntotally misunderstood your meaning of module, however, so excuse me\n\n. just meant for this one issue, but if you insist\n\n\nbecause then it will match implementations in conformant browsers when they emerge\n\nand break any sites currently coded to and using the old ones. \nI guess the issue is really wether or not to support prollyfills\nI will be happy to - was my weekend plans\n. totally cool with the idea, but curious as to why \"fake ua headers\" is a bad thing?\n. (My laptop has died, so I have been relinquished to an iPad so I am not\ngoing to be able to be quite as helpful as it would be otherwise, but here\nit goes\u2026)\nModernizer could absolutely be included. The 3.0 version has an AMD\nstructure that would make it pretty easy just to require in the bits and\npieces that you actually need. As far as how to test actual CSS values, (as\nopposed to just properties which can be exposed on the DOM) we literally\ninsert a div and a CSS string and check to see if a value has been met with\njavascript.\nI will gladly work on a proof of concept once I get back up and running on\nan actual laptop.\nOn Monday, October 6, 2014, Andrew Betts notifications@github.com wrote:\n\nAssigned #117\nhttps://github.com/Financial-Times/polyfill-service/issues/117 to\n@patrickkettner https://github.com/patrickkettner.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/117#event-174871185\n.\n\n\npatrick\n. finally got back up and running today - playing catch up at work, but then\nI will be all over this.\nOn Wed, Oct 8, 2014 at 11:03 AM, Andrew Betts notifications@github.com\nwrote:\n\nYes please!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/117#issuecomment-58371875\n.\n\n\npatrick\n. So unless I misunderstand how the tests are actually being uses/run - modernizr inclusion should be real straightforward. The biggest decision is how do we want to include the detects, and format detect.js. We could either\n1. maintain the current style, and have a detect.js be a property that is looked up on a global attribute, in this case Modernizr.foo\n2. have each detect.js file be its own instance of Modernizr, and the entire function declaration. \nThe first would be a bit cleaner feeling, however it would mean the possibility of false results from not having maintained the detect metadata in multiple locations properly (unless we generated Modernizr's config.js by parsing all of the detect.js files looking for references to Modernizr and build it dynamically...).\nThe second would mean more code bloat and it being a bit harder to approach, but they would be self contained, and wouldn't ever risk the false results that the above could have (outside of modernizr just being wrong about something, of course).\nThoughts?\n. > We'd have to create a custom build of Modernizr that shipped the right feature-detects.\nModernizr has a node api that could be used to create things on the fly - not sure how much that extra building step would affect serving time.\n\nI can't see putting a complete copy of Modernizr in each detect.js as a viable alternative. \n\nTotally. Perhaps if Modernizr is detected in the bundle, a thin wrapper with just Modernizr.addTest (and any other api noticed) is created as a sibling to all of the other bundles, and then the detect.js just use Modernizr.addTest on the relevant test?\n\nYou'd benefit from gzip wiping out most of the repetitive excess data on the wire, but even so the parsing overhead would potentially be non-trivial in legacy browsers, wouldn't it?\n\nEh...the point at which parsing modernizr becomes and issue means you are probably polyfilling a shitton of features, and will have way bigger perf issues with that.\n\nOne other thing worth considering - we have multiple features for things that Modernizr detects as a single thing, eg es5array. How would those map?\n\nPretty sure that is a non issue. The only reason to be using modernizr (that you have mentioned) is for when things are hard to feature detect. All of the detects that are grouped together are things that are just groups of property lookups (Array.map && Array.forEach && ...). Or am I misunderstanding/forgetting something?\n. what 3.0 calls touchevents (2.x calls touch) is the most frequently included feature, however that is almost certainly because a lot of people think that it means a touch screen. The input detect (which is actually mutliple detects) is second, followed by css transforms and css transitions. \n. @JakeChampion not 100%, no. @jdalton did a good swing at a feature detect here, but safari is still an issue\n. ",
    "commuterjoy": "This thread does raise the question of versioning (in the URL). You don't want to be waiting an hour (or a day) for anything critical to be pushed out.\n. PS. I've got a card on my desk to add forever to the ft-nodejstemplate puppet module, if that's what you are using to deploy it.\n. Yup, it uses it - but it requires users of the module to package forever as part of the application, which is a bit odd.\n. Fastly annotates the request headers with geo information to at least city level IIRC.\n. You can overwrite the methods though,\njs\nwindow.localStorage.setItem = function () { console.log(1) }\n. Out of interest, does this get merged then released? Or do we need to work around it locally for a bit. \n. :) +1\n. ",
    "Bockit": "Hi, I'm completely unaffiliated with you guys so feel free to ignore this!\nI've got a fork of this running at the moment for my company's own use, with a couple of fixes for some shims (pull requests pending, if you're cool with that) and topological sorting of shim dependencies (at the moment it's the order in which you request them). \nIf the topological dependency sorting is something you'd also be interested in then it would be worth keeping in mind how the dependencies part of the config objects would work (or not work, it may be fine just leaving them as is) with these databases to avoid circular dependencies.\nAlso, thanks for your work on this project.\n. Referencing https://github.com/Financial-Times/polyfill-service/issues/24\n. https://github.com/Financial-Times/polyfill-service/pull/49\nAn alternative may be to add an alias, for example 'all', to every polyfill, and to request that alias for all polyfills. Would that be ok?\n. @jonathantneal:\n\n@Bockit, how would you feel about referencing getAttribute('class') over checking and potentially diving into the object?\n\nHaha, I didn't think of that, it's much cleaner and removes the need to really figure out what's going on with the object.\nI ran some quick tests in ie9 and ie10, get the following results:\n<svg width=\"500\" height=\"500\"></svg>\n``` javascript\nsvg = $('svg')[0]\nsvg.getAttribute('class') // null\nsvg.setAttribute('class', 'foo')\nsvg.getAttribute('class') // 'foo'\nsvg.setAttribute('class', null)\nsvg.getAttribute('class') // ''\n```\nOnly have to check for null this way.\n. Yep, much cleaner.\n. Sorry these have all slipped by me. I think I eyeballed that last commit, poor form on my part.\n. Some of what I was addressing in https://github.com/Financial-Times/polyfill-service/pull/34 fixed this behaviour. It's good to split it up into specific issues though\n. I'm finding a weird behaviour in IE8 that's related to the shiv.\nIn a virtual-machine IE8 (actual IE8, not simulated, the behaviour doesn't occur in IE10 simulating IE8) including <script src=\"http://cdn.polyfill.io/v1/polyfill.js\"></script> actually blocks any further page rendering. Take the following HTML and run it in IE8. \nhtml\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Polyfill Test</title>\n    </head>\n    <body>\n        <script src=\"http://cdn.polyfill.io/v1/polyfill.js\"></script>\n        <h1>Hello World</h1>\n        <script>\n            alert('a')\n        </script>\n    </body>\n</html>\nMy results:\n- Hello World doesn't render on the page\n- The alert doesn't fire\n- I get the following page error:\n```\nWebpage error details\nUser Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727)\nTimestamp: Thu, 11 Dec 2014 01:03:16 UTC\nMessage: HTML Parsing Error: Unable to modify the parent container element before the child element is closed (KB927917)\nLine: 0\nChar: 0\nCode: 0\nURI: http://192.168.178.54:3001/\n```\n- My DOM inspector looks like this:\n  \nDoing some research, it looks like calling appendChild on IE8 and below on elements that haven't finished being parsed yet, in their case the head, causes the scripts to stop working.\nLooking into the polyfills for IE8, I see in the Document polyfill-ie8.js on line 20:\njavascript\ndocument.documentElement.appendChild(shivStyle.lastChild);\nCommenting out this line removes the issue, but I'm guessing it breaks some of the functionality of the shiv. I don't know enough about how it works to comment on that.\nTemporarily merging the changes in https://github.com/Financial-Times/polyfill-service/pull/218 fixes the issue. By this I mean only replacing Document/polyfill-ie8.js with the new html5shiv code, not the rest of the changes.\nI bring this up because at the moment, it's not just speed. In IE8 it can break your whole page below the polyfill script :(\n. Looks like my IE8 VM was broken in some way. Downloading the latest XP-IE8 vm and tested that script again, it's working. Thanks for following up on that.\n. At the moment, Event/polyfill-ie8.js adds addEventListener and removeEventListener to Document.prototype.\nWithout polyfilling window.Document the Event/polyfill-ie8.js shim causes an error. \nEDIT: I'm going to assume there are errors in IE7 polyfills as well, because IE7 also polyfills window.Document in it's Document/polyfill-ie7.js variant.\n. I'm testing the IE8 stuff now and when I run the server I notice the server logs Invalid config for: Element when you start it up. I believe the changes in 6311987 cause this.\nI'm not able to determine what the current policy is, if it's to remove the variant:\n{\n    \"aliases\": [\n        \"default\"\n    ],\n    \"browsers\": {\n        \"ie\": \"6 - 7\"\n    },\n    \"dependencies\": [\n        \"Document\"\n    ]\n}\nand rename polyfill-ie7.js to polyfill.js\nOr remove the default:\n{\n    \"aliases\": [\n        \"default\"\n    ],\n    \"variants\": {\n        \"ie7\": {\n            \"browsers\": {\n                \"ie\": \"6 - 7\"\n            },\n            \"dependencies\": [\n                \"Document\"\n            ]\n        }\n    }\n}\n. I hope I've done that correctly, sorry if I haven't. https://github.com/Financial-Times/polyfill-service/pull/220\nI'm a little confused though, wouldn't making it the default polyfill but limiting the browsers to 6 and 7 stop it being served to other browsers? Or is there something more at play, like other polyfills depending on it.\n. There's an interesting interplay between this pull request and the html5shiv pull request https://github.com/Financial-Times/polyfill-service/pull/218. If you create a branch from master and merge them both in, calling cloneNode() on an element will cause a stack overflow.\nWith both of these merged into my testing branch and this code I get a stack overflow.\nhtml\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Polyfill Test</title>\n    </head>\n    <body>\n        <div id=\"hello\"></div>\n        <script src=\"polyfill-ie8-compatibility.js\"></script>\n        <script>\n            document.getElementById('hello').cloneNode()\n        </script>\n    </body>\n</html>\nReplace polyfill-ie8-compatibility.js with the path to your local polyfill-service instance.\nThis pull request's cloneNode calls document.createElement, and html5shiv overrides document.createElement in a way that calls cloneNode.\nI'm not really sure how to fix this. Most of the reasons why some native functions are called vs others are not are beyond my knowledge I'm afraid. Any fixes I try and make may break other parts I'm unaware of. But I'll keep looking into it and post anything I find.\n. I've tested this against our normal use-cases and it's working fine. The split makes sense to me, looks good!\nI did have to make one syntax change, HTMLDocument/config.json has a trailing comma in the JSON object which blocks my service from running. I'll make a quick pull request for it.\n. Grats!\n. I haven't had time to do anything exhaustive but testing a couple of sites it was working fine. No objections here.\n. ",
    "jonathanong": "caniuse doens't really work because a lot of the polyfills are ES polyfills and caniuse primarily only has browser features. i started https://github.com/polyfills/db/blob/master/lib/polyfills.js, but for different reasons as well\n. ",
    "jonathantneal": "Could this issue be dropped now that we automate feature testing?\n. @samgiles, I consider the Web Audio API polyfill a genuine polyfill in the same way I consider the matches polyfill a genuine polyfill, even though all they do is forward existing, equivalent behavior.\nAs I understand it, a polyfill is an artificially produced feature in a browser that replicates a native feature, as seen in another browser or a specification. Technically, we can polyfill .webkitMatchesSelector in Firefox. However, this project has been in the business of polyfilling web standards, aka browser agnostic behaviors.\nAs @triblondon has alluded, I think there needs to be more categories of polyfills. For instance, there are polyfillable features that exist in a spec but not in any browser, like closest. @samgiles, we could also categorize polyfills by their source code, and I just haven\u2019t thought a lot about it before.\nWhat do you think? Should we qualify polyfills by their appearance in a spec, or by their appearance in a browser, or by their source code, or by some / all of these things?\n. The window.polyfill polyfills, much like the html5shiv, are bulk fixes, and I would prefer to break them into individual parts, like hasAttribute, querySelectorAll, etc.\nThe object exists because IE6-7 have no Element constructor, nor do they have the concept of defineProperty, so this is where all the polyfills are tossed before they are applied to the DOM.\nThe IE8 version does two things; it forwards a few constructors, and it applies a unique html5shiv shiv that is superior to the ie6-7 version. On the html5shiv side of things, we have debated releasing this kind of shiv for IE8 users, as there\u2019s little interest with IE8 on its way out.\nIn short, this could be done better.\n. I've been working on this. https://gist.github.com/jonathantneal/5ca2cf0d5b0c39c2450d\n. > If it\u2019s not a spec-compliant polyfill, then it\u2019s not really a \u2018polyfill\u2019 but rather a utility method.\nTotally agreed, and it was hard to identify which of my polyfills were not spec-compliant due to their not having tests. Hopefully, as we pull or at least patch from @mathiasbynens\u2019 work, we can also add feature tests.\n\nPolyfills should reflect the spec and be well-tested. File size is irrelevant.\n\nAgreed in that file size is irrelevant to functionality, but still relevant to quality, maintenance, and performance. Like readability, file size is secondary to the polyfill results matching native results.\n. Wow! I need to port some of this into my version. Great work!\n. Will review shortly.\n. @Bockit Yes, IE has this kind of weirdness when it comes to shivved elements. I would like to run some tests, but this looks good so far.\n. I wonder if we could get around the noCloneOverride by changing their parent container, eg this.document.createElement('tr'), etc.\n. Is this resolved by Element/polyfill-ie8.js?\n. Will review shortly.\n. Nice catch! Another way to do this is to fetch the class attribute. I\u2019ll run some tests and get back to you.\n. And the nice thing about null and empty strings is that they are both falsey!\n. @Bockit, since this polyfill would load in IE7-8, would you remove the String.prototype.trim dependency?\n``` js\nvar className = (classList.getAttribute('class') || '').replace(/^\\s+|\\s+$/g, '');\nif (className) {\n    Array.prototype.push.apply(classList, className.split(/\\s+/));\n}\n``\n. So, this is, say, for testing purposes, in order to calculate the size of a given polyfill for a given browser? If so, I could totally appreciate such a request.\n. During this change, was config'sorderproperty dropped?\n. Oh! My bad confusing this refactoring. I'll clean those leftoverorder` properties up. I'm moving my remaining issues to #124. Thanks!\n. Yes, we need this. I would request a slight change in your syntax in order to reduce some redundancy.\njson\n{\n    \"aliases\": [\n        \"modernizr:es5object\"\n    ],\n    \"browsers\": {\n        \"firefox\": \"3.6\",\n        \"safari\": \"5.1 - *\",\n        \"ios_saf\": \"4.3\"\n    },\n    \"alternatives\": {\n        \"ie7\": {\n            \"browsers\": {\n                \"ie\": \"6 - 7\"\n            }\n        },\n        \"webkit\": {\n            \"browsers\": {\n                \"safari\": \"4 - 5\"\n            },\n            \"license\": \"MIT/GPL John Appleseed\"\n        }\n    }\n}\nAn alternatives object holds alternative polyfills. An alternative's key represents the suffix of the file it references (e.g. ie8 references polyfill-ie8.js). Alternative polyfills do not inherit the author or license, but aliases still apply. This keeps singular polyfills simple and requires minimal markup to generate alternatives.\nEDIT: I think we should use - as the delimiter between polyfill and thealternative. By avoiding a valid variable character _ or a child character . you'll read it like a filename versus Object.defineProperty which we read like a property name. Does that make sense?\n. Makes perfect sense. I look very forward to the switch.\n. Some of the IE polyfills already cover this functionality. Which features do you need? I\u2019m a co-author of html5shiv.\n. This is great!\n. I merged this because String.prototype.trim isn\u2019t mentioned DOMTokenList\u2019s config.json.\nThat being said, we have three options. 1. Keep it as is, 2. utilize trim (to reduce code duplication) and list it as a dependency, or 3. make it more standalone by dropping the dependency on Array.prototype.indexOf. Thoughts?\n. I see what you mean now. Thanks.\n. > trim() polyfill helps the service dogfood itself\n\nMany polyfills have unavoidable dependencies\n\nGreat points, and, in many instances, referencing other polyfills improves the reliability, readability, and overall file size of the polyfill source.\nIn the case of DOMTokenList and classList, one could reasonably use those without needing ECMA5 Array prototype methods, and indexOf and trim are easily avoidable in this polyfill. Both are easily substituted with a less code than the polyfills themselves, and indexOf can be simplified and refactored for its specific use-case.\n. @triblondon, almost anytime today after 10am EST (-5).\n. Is this synchronous observe or does it leverage the timeout I see in the code?\n. Really awesome work! So, @triblondon and team, how do you want to handle third-party contributions like this, seeds from other projects (https://github.com/jdarling/Object.observe). Should they follow our editorconfig and jshintrc practices?\n. How's the refactor going, @jdarling?\n. Hi, @jdalton! Thanks for the find. This reveals that all shims (and shams) need tests. In the meantime, I\u2019ll try the Array prototypes a refresher.\n. Okay, I have fixes for Array ready. Will review with @triblondon.\n. Okay, I\u2019ve made three changes to the Array polyfills. The first corrects some issues pointed out by @jdalton and updates a few references. The second and third improve arity conformance and error conformance.\n. I've been working on this. I will post current status this evening.\n. The problem is that the Window constructor is not exposed in certain browsers.\n1. Window is missing in Safari \u22645, and window.constructor is Object. Emulation is required.\n2. Window is not exposed in Safari 5.1 and Chrome 14-18, but window.constructor is Window. A redirect is required.\n3. Once I resolve 1 and 2, this issue is moot.\n4. This PR doesn't solve the problem because it swaps out Window.prototype for window.prototype, which isn't a real thing. It does prevent an error from being thrown.\n. After testing native bind against our polyfill and the MDN polyfill, I\u2019m afraid I can\u2019t replicate the issue you are having.\nNative:\nnew (String.bind('test')) === new (String.bind('test')) // returns false\nOur polyfill:\nnew (String.bind('test')) === new (String.bind('test')) // returns false\nMDN Polyfill:\nnew (String.bind('test')) === new (String.bind('test')) // returns false\nNative:\nnew (function (e) { console.log(e) }.bind(null, 'test')) // logs \"test\", returns Object {}\nOur polyfill:\nnew (function (e) { console.log(e) }.bind(null, 'test')) // logs \"test\", returns bound {}\nMDN Polyfill:\nnew (function (e) { console.log(e) }.bind(null, 'test')) // logs \"test\", returns fBound {}\nWould you provide more details and perhaps a test?\n. @adamhavel, thank you so much for filing this right away. I have corrected the error. I also test with a real XP image. The issue was a naming conflict that I did not observe when I loaded just the polyfills I was updating. I need to either add or update my tests, as this should have been easily avoided. Thanks again.\n. This was resolved by 83274f7\n. It\u2019s time to populate the config on this. When the first Promise polyfill was committed, it followed the old DOM Promise spec, before A+ became the defacto.\n. This will be in soon! We\u2019re just working out the commit.\n. Thanks for requesting this. Would you mind squashing these commits into one and adjusting your syntax?\nThe \"browsers\" object in config.json uses one or two versions numbers, optionally represented as asterisks. e.g. \"5.1 - 7\" for version 5.1 through version 7, \"9 - *\" for version 9 and up, or \"*\" for all versions.\n. Thanks! I\u2019m still seeing 6 commits. Let me know if you need help squashing.\n. Woohoo! Thanks so much for collecting these stats and mapping out the configuration, @davidchase.\n. Resolved by 8c237f0?\n. @abozhilov, that exception would be thrown by Array http://es5.github.io/#x15.4.2.2, which we're only using to assist in our implementation. It is not required by String.prototype.repeat http://people.mozilla.org/~jorendorff/es6-draft.html#sec-string.prototype.repeat and I will address the ES6 exceptions mentioned there.\nSorry if I'm missing something, but Mathias\u2019 implementation does not use Array, so did you intend to file an issue against his repo?\n. :+1: \n. Thanks! Reviewing.\n. This made perfect sense.\n. @arthurvr, I hope this helps:\njs\nMath.sign = function sign(x) {\n    return !(x= parseFloat(x)) ? x : x > 0 ? 1 : -1;\n};\nAnd for the config:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign#Browser_compatibility\nEDIT: swapped number for x to match http://people.mozilla.org/~jorendorff/es6-draft.html#sec-math.sign\n. @arthurvr, you rock for getting this pull request in, and yes, both work! Once you turn x into a number, 0 and NaN are both falsey, so we don't need to check for either case. I like that it makes sense as a short, one-liner. Also, admittedly, sometimes I just avoid isNaN because of things like isNaN(' '); // false.\n. If you have time, setup some tests @ http://jsperf.com/ to compare parseFloat, parseInt, Number, and +. Otherwise, I can test it later, and we'll pick from whichever one performs the best.\n. The Number constructor performs 2x faster in Chrome and 1.3x faster in Firefox than the + operator. However, the + operator performs 3x faster in Safari and 1.3x faster in Internet Explorer than the Number constructor. We can forget about Firefox, since it supports Math.sign.\nI think we should decide whether stick with the greatest overall gain across browsers (the + operator) or consider multiple polyfills for the best results for each browser (as we do with some IE polyfills and vendor-forwarding polyfills). Thoughts?\n. Thanks again, everyone! I updated to the Shorthand Number constructor version, and padded the config with a Shorthand plus operator version that will kick in once #59 is implemented. Every browser wins.\n. :+1:\n. :+1: I definitely like the idea of a global baseline.\nA couple thoughts.\n1. Historically, my browser support standards were: the browsers I could test in, filtered by my interpretation of browser statistics outside of polyfill.io. Moving forward, it may be wise to factor in actual usage from cdn.polyfill.io.\n2. You've shared a private document outlining your own browser support standards. May this project rely on something public, preferably written or referenced in the repository?\n3. In general, it's hard for developers to create their own browser baselines. They often do not have access to many browsers (across their respective operating systems). I would like to update the contribute document to outline a few of my testing techniques. I would also like to encourage polyfill pull requests that include a conservative, empty config file.\n4. I love that services like MDN, caniuse, and kangax tell us which browsers have feature X. However, they do not tell us which browsers support polyfill X. I would like to update the contribute document to point this out, as developers may be quick to, say, copy the baseline from the browser compatibility section of MDN.\nThoughts?\n. This looks good, are we sure we want to go with default over baseline since we're calling it a baseline?\n. Oh, okay. Yea, I agree.\n. Element.prototype has no effect on text nodes, no?\n. This requires a bit more review.\n. Thankfully, we no longer use Window.polyfill, and the new cloneNode does not rely on creating a parent element and setting its innerHTML.\n. Wonderful! What would you think about updating the documentation to point this out to beginners like me?\n\nInstalling as a service\nTo install polyfill as a service:\n1. Install git and Node\n2. Fork this repository, or clone it (Run git clone git@github.com:Financial-Times/polyfill-service.git)\n3. Run npm install\nTo run polyfill as a service:\n1. Run npm start\n2. Alternatively, monitor changes in your source with nodemon nodemon -e js,json service/index.js\n3. Navigate to http://localhost:3000 in your browser\n. I\u2019ve just pushed a change that should have resolved this. Also, the reorganization of the Window constructor gave me the opportunity to reorganize the HTMLDocument constructor and the HTMLElement constructor. As a result, there will soon no longer be a need for the Window.polyfill polyfills and methods.\n. I\u2019ll make sure I\u2019m running the latest. If it passes, I\u2019ll push. Otherwise, I wouldn\u2019t want to commit something that would break on older browsers, at least not on master.\n. Okay, it\u2019s working. Commits coming soon, little by little because it\u2019s already late for me.\nI realize how that ordering dependencies is tricky, especially when you have vendor or agent specific polyfills. I wonder if it would have been better to have multiple polyfill.js files (e.g. polyfill.ie8.js) and a config option than multiple folders.\nFor instance, when I have a polyfill that extends Window, HTMLDocument, or HTMLElement, I need to specify all the vendor specific versions of them (e.g. HTMLDocument, HTMLDocument.ie8, or Object.defineProperty, Object.defineProperty.ie8, etc.). That requires me to remember all the versions.\n. This is resolved, but #59 remains.\n. IMHO, we are discussing 3 moving parts: the library, the laboratory, and the service. They all share a common pattern that currently consists of:\n- config.json\n  - browsers: the support matrix for the feature\n  - aliases: associated common names or groups for the feature\n  - dependencies: references to other polyfills\n  - variants: variations on the same polyfill that leverage particular techniques\n- detect.js: executable check for the existence of the feature\n- polyfill[.variant].js: the polyfill itself\n- tests.js: a spec-compliant expectation of the feature\nThis pattern is still being fleshed out. Since it's just a pattern, it can be used inside and outside of our project.\nThe moving parts are more refined, and, as Juan points out, they can (at least in theory) run autonomously or dependently.\n- Polyfill Library: A collection of polyfills that follow the common pattern.\n  - e.g. Array.prototype.forEach, Element.prototype.classList, etc.\n- Polyfill Laboratory: A testing framework for polyfills that follow the common pattern.\n  - Validates polyfills and polyfill groups/combinations across all browsers (AMAZING, btw)\n- Polyfill Service: A system for distributing polyfill collections that follow the common pattern.\n  - This repo is written in Node\n  - The old repo was written in PHP\n  - Other repos or subrepos could exist - Rails, WordPress, etc.\nThe Polyfill Service can has 2 major versions; the first one being the old service I wrote in PHP, and the second one being the new service written in Node.\n- cdn.polyfill.io: a publically hosted Node instance of the polyfill service.\n- polyfill.io: a publically hosted PHP instance of the polyfill service (which is being deprecated).\n. We need tests. Would  someone be able to turn https://github.com/promises-aplus/promises-tests into a tests.js?\n. Our current Promise polyfill has gone through a lot of evolution, as it's been around since DOM Promises.\nI'm trying to better understand those promises-aplus tests before I drop our current implementation.\nLong term, I would love to add an ability for polyfill-service providers to easily swap alternative polyfills, but that's a separate subject.\nAFAIK, we do include licenses when that polyfill is sent to the browser, as every polyfill is technically conditional.\n. Thanks for the insight. I've spent the day reviewing Promises/A+ and updating the existing polyfill.\n. I\u2019m game with that, but your numbers don\u2019t add up: 266 + 593 = 859 ... vs 872? + 55 own tests?\nWould you setup something like you\u2019ve done with https://octane.github.io/promise/ to show us the 859 to 872 plus 55 tests? Depending on the severity difference (like, if all your failing tests hang on one feature) we can fix ours or adopt yours.\n. That\u2019s awesome. I\u2019m sure Juan or someone will setup some tests so we can take a look. Great work, both of you.\n. I\u2019m with you, @juandopazo. Having looked over the code, this is probably the most readable Promise polyfill I have seen. We\u2019ll all have our biases (I think it could be shorter and more streamlined), but if the tests are true, then this is fantastic, and I would be very open and eager to adopting this polyfill.\nI\u2019m still not comfortable with asap, @juandopazo =) but I think @Octane\u2019s work is cleanly compatible with many deferred solutions, even our current one.\n. Good stuff, and thanks for the rename!\n. I was able to temporarily patch the issue by changing sources.js#L40 to the following:\njs\nv.rawSource = fs.readFileSync(path.join(polyfillPath, 'polyfill' + (polyfillVariant === 'default' ? '' : '-' + polyfillVariant) + '.js'), 'utf8');\n. @AlbertoElias, this is so great! Thank you. If I have some time, I will look into the failures as well. I've left you some notes and questions in the commit.\n. Agreed.\n. Resolved by b259e42\n. Hi Andrew,\nI just read your email regarding this issue, and committed my solution before I saw this pull request.\nMy only issue with using html5shiv is that both polyfill and html5shiv end up overwriting the createElement and createDocumentFragment methods, polyfill being a little more verbose.\nPerhaps there's a better way to use both scripts together without a significant performance impact (because overwriting an overwritten method seems like it would be one).\nAlso, there was some debate regarding whether html5shiv should add default styling instead of leaving it to reset or normalize. Having been the one who added it into html5shiv, I leaned toward inclusion in the script. When I refactored HTMLDocument, I leaned the other way. I've added the default styles via JS back into the project, as there's no performance impact in having another stylesheet overwrite these defaults.\n. Should be resolved by 0d2b3c7\n. I altered our polyfill and tests to follow the spec in this manner. \nI asked some WHATWG folks about invalid lengths and confirmed that Infinity and negative lengths were okay.\nFirefox does not conform to the spec, it seems. Should we have partial polyfills (like, a wrapper for the native implementation)? We could also use one for DOMTokenList.prototype.toggle which does not have a second in older Safari browsers).\nOn the other hand, throwing errors for things Infinity and negative numbers seems useful and practical to me.\n. https://bugzilla.mozilla.org/show_bug.cgi?id=924058\n. @triblondon, gone ahead and made those updates, sans the ToLength note on array polyfills.\n. Is this resolved by https://github.com/Financial-Times/polyfill-service/pull/148 ? There was an update to Events.\nIf so, I'd love a peer review of the pull in its current state, to see if it nets us less fails than the current master branch.\n. I think you're looking for matchMedia, but let me know if this was not what you were looking for.\njs\nmql = window.matchMedia(mediaQueryString)\nMDN Documentation\nOur Polyfill\n. At the moment, polyfilling CSS is out of scope, same as with position: fixed, display: flex, and other goodies.\nNow, I'd love to tackle this, but to do that I'd probably need a really good, really light-weight CSS parser, and I don't think even Respond.js has a fully fledged one, let alone something lightweight. Most of the time, the pristine CSS is AJAX'd in, and then very specific string sniffers go in and do their magic.\n. I agree that a list should be included somewhere.\nNow, this is strange for me to say, because it's probably all my doing, but I just looked into this a bit further, and the results were confusing.\nMost ES5 polyfills (at least those labeled as such) make the cut.\n- Array.isArray\n- Array#every\n- Array#filter\n- Array#forEach\n- Array#indexOf\n- Array#lastIndexOf\n- Array#map\n- Array#reduce\n- Array#reduceRight\n- Array#some\n- Date.now\n- Date#toISOString\n- Function#bind\n- String#trim\n- atob\n- btoa\nThe exceptions to this are Object methods like Object.create, Object.defineProperty, Object.defineProperties, Object.getOwnPropertyNames, Object.getPrototypeOf, and Object.keys. Except this isn't entirely accurate, because Object.defineProperty is required by the defaults Array.isArray and Element#classList.\nThen, only one ES6 polyfill makes the cut.\n- String#contains\nBut this is odd, because all the other ES6 String methods are cut, like String#endsWith, String#repeat, and String#startsWith. Other Array and Math ES6 methods are also cut.\nNext, we have some DOM constructors:\n- Document\n- DOMTokenList\n- Element\n- Window\nAnd this beauty:\n- document.querySelector\nNext, a few useful core methods:\n- CustomEvent\n- Event\n- JSON\n- requestAnimationFrame\n- XMLHttpRequest\nNext, a few Element methods:\n- Element#classList\n- Element#closest\n- Element#matches\nBut this is a bit odd because Element#closest, from the DOM Living Standard makes the cut, but the arguably more abundant Element#append, Element#prepend, Element#before, Element#after, Element#replace, and Element#remove don't.\nSo, that is where we're at, and I'm open to suggestions on how to manage the default list.\n. No functional changes, but I would still appreciate a review, @samgiles or @triblondon\n. Sweet! Thanks!\n. Resolves #126 and possibly https://github.com/Financial-Times/next-dobi/pull/134 @triblondon, @samgiles\n. Sorry, for some reason an unfinished version of the polyfill was committed, so I lost a lot of work that had to be redone. Regardless, @juandopazo's comments were invaluable, and most of them would have been needed anyway.\nRegarding performance, I respectfully disagree that setTimeout is too slow for any serious use of promises, but I also recognize that it pales in comparison to, say, setImmediate.\nWhat would you think if Promise had a dependency on setImmediate? IE10 has it natively. Chrome, Firefox, and Safari can polyfill using postMessage, while IE6-9 can polyfill using onreadystatechange.\n. I think I understand better now, @juandopazo. Thank you.\nIMHO, this new Promise polyfill (with the minor tweaks Juan pointed out applied) can replace the older frankenstein Promise polyfill, but afterward I would want to look at which solution solves the problem best, mine+ASAP or Juan's+ASAP or Jake's (the probable winner). At the end of the day, for most of us I think, accuracy matters over performance or size (not saying the others are worse off there, but I've been skeptical when glancing at Jake's or ASAP).\n. The tricky thing about getElementsByClassName is that it's supposed to return a live HTMLCollection, unlike querySelectorAll. As a result, there would be no functional benefit to a proprietary method over the existing query selector polyfill. Thoughts?\n. @triblondon updated\n. Good call. I'll put a polyfill together.\nPrepare yourself for slight disappointment, because contains returns true if a node is a descendant of a given node or the node itself (and they didn't mention that). It's silly, but document.contains(document) is true, and document.body.contains(document.body) is true. You can try it for yourself, in Chrome or IE.\nInternet Explorer has supported something like Element.prototype.contains since IE5. In fact, in IE11 document.body.contains === HTMLElement.prototype.contains is true.\nSo, the polyfill for Node.prototype.contains targets document.contains. I'm mentioning this because the polyfill for older IE will actually target Element and Document. Older IE cannot polyfill Node because text nodes can't be polyfilled.\n. @dfcreative it's in. thanks so much for finding this.\n. Are you referring to polyfills like Element.prototype.matches? Are we missing others? Would this target CSSStyleDeclaration or actual CSS (related to Issue #1)?\n. I would be okay with this, if for no other reason than the perfect excuse to write fancy new ES6.\n. Yea, this makes sense and is a great improvement.\n. This commit contains 3 great things for the polyfill itself:\n- correct an invalid reference to arraylike\n- add Promise.reject\n- allow reject on Promise.race\nUnfortunately, it removes support for thenables:\njs\nPromise.resolve({\n    then: function (fulfill, reject) {\n        fulfill('then-fulfill-value');\n    }\n});\nWas there a reason you removed support for this? I acknowledge that it reveals some browser inconsistencies, as a thenable.then fires immediately in Firefox (and this polyfill), whereas in Chrome it does not fire until the first .then is made on the returned Promise.\nThe fact that they still work so differently in major browsers is pretty wild to me, but still, I'd rather have support for thenables than not.\n. @juandopazo, let me know how I might help, even if it's just with testing.\nI wonder if the newly formatted tc262 tests could be linked to from config.json. For example:\n``` json\n{\n    \"aliases\": [\n        \"default\",\n        \"es5\",\n        \"modernizr:es5array\"\n    ],\n    ...,\n    \"tests\": {\n        \"tc39\": \"Array/isArray\"\n    }\n}\n```\nI also wonder if something like Yahoo\u2019s graded support could be done for feature tests.\n| Grade | Description |\n| --- | --- |\n| A | Functionally complete, perfect configuration. Returns expected .name, .length, enumerability, and no stray objects. |\n| B | Functionally complete. Returns and throws as expected in strict or loose mode when called with any object |\n| C | Functional. Returns as expected with expected objects. |\n| D | Not functional. Does not exist, but is polyfill-able, or is redirect-able from a vendor-prefixed property. |\n| F | Not functional Does not (and cannot) exist in the browser. |\n. Whatever happened with this request?\n. In IE8 for XP and 7, I\u2019m getting an error from within Essentials - Deferred, A handy tool for organizing waiting for something.. Do we have a page showing a polyfill / jQuery failure?\n. The undefined assignment is there to trip checks for 'onhashchange' in window, so this will suffice. Bummer about that bug, though!\n. We do have a replace polyfill in mutation. I\u2019ll make an update now.\nAnd kudos to @mislav for making clear issues that lead me to feel like I can checkin on GitHub again.\n. This looks good, thanks @roland-vachter!\n. I would like to address another issue, too. These polyfills should target childnode and parentnode elements, which in HTML roughly translate to:\nParentNode => Document, DocumentFragment (HTMLDocument in IE8), Element\nChildNode => Element, Text, HTMLCommentElement, DocumentType (HTMLCommentElement in IE8)\n. Splitting out each method would be helpful from an organizational standpoint. However, there is a low-level API required by all of these polyfills that is not exposed to the browser. How do we solve this problem?\nOne solution might be to expose these low-level APIs to polyfills as private methods.\njson\n\"private\": {\n    \"mutation\": \"mutationMacro\"\n}\njs\nElement.prototype.prepend = function prepend() {\n    this.insertBefore(mutation(arguments), this.firstChild);\n};\nWhich compiles to something like:\njs\n(function (mutation) {\n    Element.prototype.prepend = function prepend() {\n        this.insertBefore(mutation(arguments), this.firstChild);\n    };\n})(function theMutationMacroMethod() {});\nArray polyfills would benefit from separating themselves from the api that calculates the maximum value of a length property. The Promise polyfill would benefit from separating themselves from the api that creates asynchronous tasks. Any polyfill wrapped by a function could be unwrapped, improving its readability.\nWhat do you think?\nI brought up a similar issue earlier. There are also low-level objects. My earlier comment about the ParentNode object may have confused you. ParentNode is a kind of low-level object that does not actually exist in the browser. It represents Document, DocumentFragment and Element simultaneously.\njs\nParentNode.prototype.prepend = function prepend() {};\nExcept I see no sane way to compile that into what is required:\njs\nDocument.prototype.prepend = DocumentFragment.prototype.prepend = Element.prototype.prepend = function prepend() {};\nIdeas? Do my previous comments make more sense now?\n. @juandopazo, good, that\u2019s what I hoped. I think it would be better to move the function outside the loop to remove the ambiguity. Any concerns?\n``` js\nPromise.all = function (values) {\n    return new Promise(function (resolve, reject) {\n        var\n        fulfilledCount = 0,\n        promiseCount = 0,\n        index = -1,\n        anything, length, value;\n    function onFulfilled(index) {\n        return function (value) {\n            values[index] = value;\n\n            ++fulfilledCount;\n\n            if (fulfilledCount === promiseCount) {\n                resolve(values);\n            }\n        };\n    }\n\n    if (isArray(values)) {\n        values = values.slice(0);\n        length = values.length;\n\n        while (++index < length) {\n            value = values[index];\n            anything = toPromise(value);\n\n            if (isPromise(anything)) {\n                ++promiseCount;\n\n                anything.then(onFulfilled(index), reject);\n            } else if (isInternalError(anything)) {\n                reject(anything[ORIGINAL_ERROR]);\n            } else {\n                //[1, , 3] \u2192 [1, undefined, 3]\n                values[index] = value;\n            }\n        }\n\n        if (!promiseCount) {\n            resolve(values);\n        }\n    } else {\n        reject(new TypeError(NOT_ARRAY));\n    }\n});\n\n};\n```\n. Yes, my polyfill was more like the MDN one. John Dalton even tried to warn me about this long long ago. Unfortunately, I did not yet fully understand prototype inheritance at that time. So, I\u2019ve been reviewing those notes and these and refactoring the polyfill early this morning. I needed to break for my daily work, but I expect to complete the update tonight.\nHere\u2019s a snippet of where I left off, and my new thinking for the polyfill:\n``` js\nfunction Empty() {}\nvar splice = Array.prototype.splice;\nFunction.prototype.bind = Function.prototype.bind || function bind(scope) {\n    var\n    callback = this,\n    args = splice.call(arguments, 1),\n    index = -1,\n    length = 0,\n    buffer = 'return function (',\n    binder = function () {\n        var\n        self = this,\n        isNew = self instanceof bound,\n        result = callback.apply(isNew ? self : scope, args.concat(splice.call(arguments, 0)));\n    return !isNew || Object(result) !== result ? result : self;\n};\n\nif (!(callback instanceof Function)) {\n    throw new TypeError(callback + ' is not a function');\n}\n\nlength = Math.max(length, callback.length - args.length);\n\nwhile (++index < length) {\n    buffer += '$' + index;\n}\n\n/* final magic */\n\n};\n```\nI\u2019ve also been referencing @jussi-kalliokoski ref and @ljharb\u2019s es5-shim implementations. I believe the major fault in my and MDN\u2019s implementation was inheritance. However, I also noticed in the ES5 shim that native bind properly preserves/calculates the new bound function length.\n. You are correct. Any polyfill that uses a function (be they event listeners, array prototype methods, etc.) limit themselves to the same frame. Should we support cross-frame polyfilling, it needs to be addressed in a separate issue. Something like (or exactly as) what you\u2019ve shared would need to be added as a private dependency and then integrated into the dozen or more polyfills that use the current check. It would not be wise to integrate this check here, and then slowly duplicate such a verbose check across every other polyfill.\nAlso, I\u2019m naive to the use case for this kind of cross frame scripting. Could someone show me an example?\n@triblondon, @juandopazo, thoughts?\n. :+1:\n. Related to #240, we may wish to breakout the microtask library as well, which is quite simple now that I look at it.\n. I\u2019ve created a branch with a polyfill called enqueueMicrotask which would handle the abstract operation of microtasks used in Promise, MutationObserver, and Object.observe. However, since we should not expose this private method to the global scope, resolution may depend on #280.\n. AFAIK, this polyfill library attempts to maintain modularity down to the method (at least), whereas WebReflection\u2019s does not.\n. Array.prototype.includes was still using the withdrawn name Array.prototype.contains. I\u2019ve filed a pull request #291. Not to interrupt your request, but thanks for the catch.\n. Before you give up entirely, @roland-vachter, have you tried:\nOverriding the element\u2019s closest constructor\u2019s prototype? HTMLAnchorElement.prototype.addEventListener = function () {};\nOverriding the element\u2019s method? someElement.addEventListener = function () {};\n. This sounds like how we handled things before.\nTo be more accurate to the spec, I actually think more things should require Object.defineProperty, especially those affecting Array.prototype where users may actually depend on enumerability. As users migrate away from IE\u22648, this will be especially helpful.\nIn the case of Array.isArray, let\u2019s consider the most basic polyfill:\njs\nArray.isArray = function (object) {\n    return Object.prototype.toString.call(object) === '[object Array]';\n};\nThat\u2019s 107 bytes. Readable, but not totally performant. Depending on usage, the bit about Object.prototype.toString could be improved.\njs\n(function (toString) {\n    Array.isArray = function (object) {\n        return toString.call(object) === '[object Array]';\n    };\n})(Object.prototype.toString);\nThat\u2019s 122 bytes. Still readable and now performance optimized. The wrapping function is perhaps the only part of this polyfill that reads less easily.\njs\n(function (toString) {\n    Object.defineProperty(Array, 'isArray', {\n        configurable: true,\n        value: function isArray(object) {\n            return toString.call(object) === '[object Array]';\n        },\n        writable: true\n    });\n})(Object.prototype.toString);\nThat\u2019s 177 bytes. Still readable, performance optimized, and now far more compliant. The wrapping function is still perhaps the only part of this polyfill that reads less easily.\nIn total, the difference is 170B. Our largest Object.defineProperty polyfill is 369B. No connection will feel these things, as I\u2019ve read most transfers occur in chunks of at least 14KB. \nReadability is awesome and I am all for it, but I do not think this is where we should optimize.\n. Yes, it does. I especially love the globalstrict.\n. Initial thoughts:\n- We should avoid polluting the global scope.\n- An automated task can assemble closures / Polyfills should be closure-free.\n- We could use config.json or create a closure.js file to assign private methods and variables.\nIf the polyfill service wraps every response in a closure, then this becomes even easier.\n. That\u2019s great. Could you explain the reason behind the PolyfillService object?\nWe have an example of the wrapped closure in Array.isArray.\njs\n(function (toString) {\n    Object.defineProperty(Array, 'isArray', {\n        configurable: true,\n        value: function isArray(object) {\n            return toString.call(object) === '[object Array]';\n        },\n        writable: true\n    });\n})(Object.prototype.toString);\nWith one great big closure, we could now do something like:\n``` js\nvar ObjectToString = Object.prototype.toString;\nObject.defineProperty(Array, 'isArray', {\n    configurable: true,\n    value: function isArray(object) {\n        return ObjectToString.call(object) === '[object Array]';\n    },\n    writable: true\n});\n```\nI figure JavaScript compressor can go in later and reduce these declarations for the minified version if they occur multiple times (I could imagine this for Element.prototype).\n. > I'm not sure why you wouldn't simply use Object.prototype.toString in the Array.isArray code:\nWe do it for performance. Using local variables to cache deep properties prevents class checks. Whether this is needed in modern browsers is another question.\n\nI'm leaning more towards thinking that a grouping namespace is unnecessary.\n\nI agree! An underscore would be familiar to developers (sorry, Papa Crockford).\n. I\u2019ll do that now.\nmutation => _mutation\nenqueueMicrotask => _enqueueMicrotask\nI\u2019ll also check the other polyfills to make sure they attach themselves to the global this. If they don\u2019t already, they should.\n. The variables and references have been updated in both branches.\n. Could we follow semver?\n. @mislav good catch. The quick fix is to add a check before every method in both variations of the polyfill. However, if any browser implements another mutation method unlike our existing sets, we\u2019ll have even more fragmented polyfills.\nEach method (append, prepend, before, after, replaceWith, remove) should be its own dependency, and the mutation macro should be its own private dependency ala #280.\nThis would also make transitions like #254 all the easier.\n. @mislav, I didn\u2019t mean to miscommunicate; this is not about total size.\nThis is about keeping the polyfills organized and easily maintainable. What if Firefox begins supporting the ParentNode methods prepend and append? What if Chrome finishes supporting the remaining ChildNode methods after, before, and replaceWith? What if after is implemented in one browser but then becomes appendAfter? We could have 3 to 5 versions of the same polyfill.\nAll of those scenarios have happened in one way or another already, because we\u2019re dealing with prollyfills. It\u2019s an exciting new game to play, and this project has always benefited from keeping its polyfills modular. \n. I was getting the best speed tests with setInterval, but I left setTimeout in there because it\u2019s closer to how ASAP did it. It has been removed.\n. Fatal error: Cannot read property 'browserName' of undefined\u0007\nIs that due to my commit, or due to Travis?\n. I\u2019m on my fifth or sixth attempt of the day. Even after I removed an unused file in #287, that one has ceased passing as well. Could something else be wrong? It\u2019s always the same error.\n. Awesome blossom!\n. @jamesnicholls, you\u2019re exactly right, and that\u2019s exactly the fix. Did our tests not catch this?\n. I avoided the need for Array.isArray as a check or a dependency. It\u2019s just a typo. We should fix the typo. We should also make sure we have tests that would have prevented this kind of typo from even being committed.\n. Thanks, @triblondon!\n. Thanks for pointing out that this was missing.\nSo, this is probably a deeper discussion for FT, but why are there author fields? Are we encouraging users to license polyfills? I\u2019m not even sure how licenses work when a polyfill fulfills an existing specification.\nOn the one hand, @Casao is being super helpful and is following the contributors guide as I read it. On the other hand, I have never encountered a scenario where someone MIT\u2019d a well known one liner.\n@Casao, @triblondon, thoughts?\n. Yes, you followed the documentation I see; only trading one relatively unused probably-not-well-understood license for a more-common-and-better-understood license. Thanks for being so reasonable about this!\nIMO, the spirit of licensing a polyfill in any fashion is to credit original contributions that are not apparent or explicit in the specification. There are a handful of instances \u2014 enqueuing a microtask, parsing a CSS file, transforming data into base64  \u2014 where I see the steps being taken to accomplish the task are neither intuitive nor explicitly stated.\nPerhaps that could be put into writing somewhere more official? I\u2019m also sorry to anyone out there I could be offending, as licenses can be touchy subject.\n. On closures for each polyfill: what are the guidelines for polyfills now that we maintain a global iife? \nOn licensing: Had it not been for the base64 polyfill, I would have drawn a hard-line on not accepting anything non-public-domain. How many polyfills have licenses now (maybe two or three at most; base64, Promise, and the html5shiv)? Licenses should be the exception, not the rule. Most projects do not accept contributions that do not already conform to the project itself. Hopefully all contributors are celebrated, and eternally credited in the history and contributions section of this repository.\n. I only ask that you honor and encourage the public domain spirit of this service, which it totally seems like you\u2019ll be doing.\nUnless I learn otherwise, I\u2019ve also thought polyfills were inherently public domain, as they are implementations that follow specific directions which are licensed public domain.\n. Dear @jshalton,\nWHAT HE SAID\nYou\u2019res cordially, e.g.\n. @triblondon, all is well with Travis. Would you review and merge?\n. Isn't this already handled by the document.head polyfill?\n. Is there a CSP-safe way to check for the real global scope?\nIs this always declared? Is self always declared (WorkerGlobalScope.self)?\njs\nthis || self || {}\nIf this and self are always declared, but there is no CSP-safe way to check for the global scope, may we fall back on a new object? If we fall back on a new object, should we expose it as self?\njs\nself = this || self\n. A browser and a worker will expose self even when this is undefined.\nNode will expose global even when this is undefined.\nTherefore, the CSP-safest way to catch the global may be this:\njs\nthis || 'object' === typeof self && self || 'object' === typeof global && global || {}\n- Use this.\n- If this is falsey then use self.\n- If self is not a declared object or is falsey then use global.\n- If global is not a declared object or is falsey then use a new object.\nUsing typeof protects us from undeclared variables and non-objects. Using || protects us from null objects.\nAll together, if we want a very safe IIFE, it may look like this:\n``` js\n(function () {\n    'use strict';\n(function (undefined) {\n    // polyfills\n}).call(this || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n})();\n```\nStill, can\u2019t the outermost IIFE be cool like this:\n``` js\n(function (undefined) {\n    'use strict';\n// polyfills\n\n}).call('object' === typeof global && global || this);\n```\nJust a thought.\n. Variants are not just about file size. Variants are about performance and maintainability. Also, variants are becoming less common. They were especially useful for old browsers like IE\u22648. Variants are used to quickly and clearly referencing the most performant or most capable thing in a particular browser that is used to create a polyfill.\nThe name of the game is writing the most accurate, most readable, fastest running, and fastest initializing polyfill, in that order of priorities IMHO. Maintainability is up to the community surrounding this project, no matter how you slice it (third-party / as-is vs originals / retooled), IMHO.\n. @hgl, using the ES6 import and transpiling the code to work in ES5 would be dreamy. Could you create a simple example?\n. Optimization questions:\n- Would reusing the source variable declared in the parameters perform better? cite\n- Would a while loop perform better? cite\n- Would moving the declaration of key to within the loop when it is first needed perform better? cite\n``` js\nObject.assign = function assign(target, source) {\n    var index = 0;\nwhile (++index < arguments.length) {\n    source = arguments[index];\n\n    for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    }\n}\n\nreturn target;\n\n};\n``\n- WouldObject.prototype.hasOwnPropertyperform better if it were abstracted to_hasOwnProperty, like_enqueueMicrotaskand_mutation`?\n``` js\nObject.assign = function assign(target, source) {\n    var index = 0;\nwhile (++index < arguments.length) {\n    source = arguments[index];\n\n    for (var key in source) {\n        if (_hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n        }\n    }\n}\n\nreturn target;\n\n};\n``\n. :+1: the work so far looks great\n. Why was the _enqueueMicrotask polyfill removed? I recall some discussion aboutsetImmediate` not being the correct fallback. Is there an issue you can point me to to learn more about what happened?\n. I\u2019m okay with this. I only ask that its done upfront and with due diligence in the reasons. It takes a lot of effort to support older browsers, and maybe we don\u2019t have the devpower to pull it off. That\u2019s fair.\nLet\u2019s not be cavalier with percentages. How many people is .5% in real life? For instance, when Wikipedia describes 0.69% of users being on older Android devices, that is like 109 million people.\nIt\u2019s easy to lose touch of the numbers and forget these are people. So, if the numbers justify the cut, then all I ask if that we identify which people/regions will be most impacted. Then, if no one can step up to support those users, we know it can\u2019t be done. And again, I think that\u2019s fair, and I\u2019d hope it does not require significant research into your usage statistics. I can look into browser usage, if that helps.\n\n. @samgiles is there something I can do to help?\n. Great work, @deddu. I wrote the polyfill originally. Feel free to throw tomatoes or ask questions of me.\n. I like the second origami \"p\" and the \"pf\" guitar pick.\n. Since IE9 and IE10 support addEventListener, there is not any polyfilling of stopPropagation going on that I know of. Would you please setup a test page so I can recreate this myself?\n. There is no polyfill for stopPropagation in IE9 because IE9 already supports stopPropagation. IE does not expose stopPropagation to Event.prototype. This is not an error in polyfill.io, it\u2019s just how IE implements stopPropagation. I\u2019m not certain what you are asking for.\n. @LeaVerou, every polyfill comes with tags that let you narrow down what you\u2019re looking to polyfill. For example, if I wanted to polyfill es5 features, I could use https://cdn.polyfill.io/v2/polyfill.js?features=es6.\nTo that end, it would be possible to tag the features you want with bliss and then recommend something like https://cdn.polyfill.io/v2/polyfill.js?features=bliss. What do you think?\n. There\u2019s a great use case for tagging things as bliss (or jquery2), given the adoption of these libraries. There are tags for modernizr and caniuse as well.\n@triblondon, would you :+1:  me accepting a PR for this?\n. @triblondon, has a deploy happened since PR #596? I still don\u2019t see any polyfills when I hit https://cdn.polyfill.io/v2/polyfill.js?features=blissfuljs\n. Awesome! Looks good.\n. @maximilianschmitt, awesome. I did not know about this one.\n. I could have forgotten something, but why no mention of CC0 and the recommendation of MIT?\n. Well done, @jonathan-fielding . Yes, as long as you are okay with Event being assigned to that global space. Also, note that Window is a presumed object. That may need to be adjusted as well.. I think I agree to everything, but I could use 2 small clarifications.\n\nAll contributions to the polyfill service are made under the MIT licence\n\n\nBy agreeing to this, am I retroactively relicensing all of my other contributions to this repository? I think the answer is \u201cno\u201d.\nDo I need to license my work to myself first, and then submit it to this repository? I think the answer is \u201cthat\u2019s up to me\u201d, and so if I wish to CC0 license my work, I need to first do that in config.json, similar to the URL polyfill.\n\nI apologize for being sheepish with licenses. It\u2019s one of the reasons I\u2019ve always used CC0.. Can the default variant go on the root of the config and always point to polyfill.js?\n. I believe it's due to the bit limit in JavaScript. It's required by the spec here, https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n\nIf len \u2264 +0, then return +0.\nReturn min(len, 2^53-1).\n\nOnce 2^53-1 is crossed, not all integers are representable as IEEE doubles\n. Wonderful! I'll have some cleaning up to do. Though, sometimes the function arrives in a different line of the file. I guess it's an unnecessary convention to highlight \"this is where the magic happens\". No one is looking that closely.\n. I could probably do this on the overall service as a separate commit. Would that be all right?\n. It makes no difference to Element.prototype.classList, so I like not to confuse anyone when the tag name has no meaning.\n. Will do. Thanks.\n. I was not paying attention in class. Will fix. Thank you.\n. I believe we solved this in many of our Array prototype polyfils, e.g. https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Array.prototype.every/polyfill.js\n. I believe this is handled on line 148.\n. I will simplify the call to resolve, now that resolve is configured correctly.\n. Oh, thanks. I can remove the if statement and the else block entirely then. Also, I'm noticing browsers don't handle a string as an iterable Promise.race in the same as, say, Array.from.\n. I see, so iterables are not handled the same as they are in arrays? Are only array and array-like objects (not strings, numbers, etc) iterated?\n. It seems very particular. It only handles arrays then, right?\njs\nPromise.all({ 0: '42', length: 1 }).catch(console.error.bind(console));\n. They don't handle iterable objects either. We're sure that's a bug in the real-life implementation? If so, kudos for finding this, and it's not hard for us to do right.\n. Number will always be available.\n. These are being reset because they were never published?. @caub, thanks for looking at my code. How would you handle the secondary depth argument? https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat#Syntax\nPerhaps that is why my solution is more involved? Also, I will gladly update this PR with any and all superior solutions. \ud83d\ude04 . ",
    "mathiasbynens": "https://github.com/jonathantneal/polyfill/issues/44#issuecomment-35062292\n. Ref. https://github.com/Financial-Times/polyfill-service/issues/20\n. I feel like this has been discussed here before: https://github.com/jonathantneal/polyfill/issues/44 (and in some of the issues that are being linked to there)\nAnyway, feel free to use any of my well-tested standalone/dependency-free polyfills as part of this project!\n. > polyfill not just the thing they are for but all their dependent APIs too, resulting in multiple polyfills on the same page potentially duplicating the polyfilling of lower-level APIs\nThe es{5,6}-shim projects are all-in-one grab-bags, indeed. But there are also a few standalone shims that sounds like a good fit for this project IMHO. Some examples:\n- https://github.com/mathiasbynens/String.fromCodePoint\n- https://github.com/mathiasbynens/String.prototype.codePointAt\n- https://github.com/mathiasbynens/String.prototype.repeat\n- https://github.com/mathiasbynens/String.prototype.contains\n- https://github.com/mathiasbynens/String.prototype.startsWith\n- https://github.com/mathiasbynens/String.prototype.endsWith\n\ntypically do not offer an easy method of only shipping the polyfill to browsers that lack a native implementation.\n\nThat\u2019s where this project comes in, no? You already decide whether or not said polyfill would be included.\n\nrequire developers to know that a polyfill is needed\n\nWhat do you mean exactly? This project takes care of that, right?\n. > should we not try to solve the testing problem in the polyfill-service at all (instead treat it as an aggregator of already-tested polyfills)?\nThis. :+1: \n\nThe latter seems dangerous, since if the service becomes popular people will invariably want to contribute patches directly to the copy of the polyfill we host.\n\nHmm, I disagree. The contribution guide could state that problems with the individual polyfills should be reported on the upstream repos.\n. An Object.defineProperty polyfill would define Object.defineProperty. My codePointAt polyfill merely includes a shim, an internal function named defineProperty, that is tailored specifically for the purposes of the polyfill it\u2019s part of. It\u2019s not exposed globally and it doesn\u2019t aim to be an Object.defineProperty polyfill. Given that, I don\u2019t really see the problem here.\n. @arthurvr Note how all the tests (millions of operations) exit early due to the if(typeof Math.sign !== 'function') { check except for the very first one that is run. As a result, the results of this benchmark are meaningless.\nBesides, even without that error, that test case would be measuring how long it takes to execute the polyfill code itself, which will only ever happen once in a real-world scenario. \nI think @jonathantneal meant to ask for a benchmark that compares the parseFloat, parseInt, Number, and + based solutions, i.e. what happens when the Math.sign function gets called. For that, you could move the polyfill implementations into the \u201cpreparation code\u201d field as functions with different names, and then just call those functions with different arguments for each test. Would you mind editing your test case accordingly? Let me know if anything is unclear!\n. @arthurvr Still the same issue. http://jsperf.com/math-sign-polyfill is benchmarking Math.sign = function() { \u2026 }; but it should be benchmarking mathSignPolyfill1(\u2026) with various polyfill implementations and various arguments.\n. @jonathantneal You may want to use x !== x instead of isNaN (feels like it would be faster). See https://gist.github.com/kitcambridge/1086528 by @kitcambridge.\n. @kitcambridge Ah, I had expected the difference to be greater.\n. The polyfill seems to load just fine in Opera Mini and creates the global localStorage object correctly.\nLet\u2019s enable the polyfill in Opera Mini, as that prevents pages from failing in the case @kdzwinel mentioned. I\u2019ll submit a PR.\n. cc @brucelawson\n. +1 to using * instead of 5 - 11.\n. Done.\n. ",
    "tmaslen": "Hello :-)\nDocumentMode is detectable in the DOM, we do this...\nvar browserType;\nif ('querySelector' in document && 'localStorage' in window && 'addEventListener' in window) {\n    browserType = 'html5';\n}\nelse if (\n    (document.documentMode && (document.documentMode < 9)) ||\n    (/MSIE (7)/.test(navigator.userAgent))\n) {\n    browserType = 'legacyie';\n}\nWe load in a slightly different JS app if its legacy IE. \nIt's an adaptation of our original CTM but for the interactive specials content I mostly work on now.\n/t\n. Yes that would work.  DocumentMode is definitely an edge case and causes IEs to behave strangely.  I've stopped using conditional comments because of it as they stop reporting accurately too.\n. I can't speak for the whole of BBC News and I'd have to look at it more but it does sound like we're trying to address similar issues as the FT.com right now.  We'll need to support at least IE8 with all of our modern JS.  Speak with John Cleveley, he'll have a better idea of what is going on for the responsive news' support of IE8.\nIt's definitely something I'm considering for my bespoke interactives.\n. ",
    "matthew-andrews": "Not right away, but would love to migrate the web app to this service as part of journey optimisation.\n. Is this possible now?  @triblondon seemed to suggest it might be.  Would be great to be able to promote this next week with velocity.\n. The integration already exists the other way around \u2014\u00a0OBT will add the features listed in browserFeatures polyfill service to the demos.  I think that's probably enough incentive to list out the features.  Maybe enough to achieve the encouragement you're looking for already?\n. I tried more or less the same earlier, got more or less the same result - also thought I was being naive.  That's a shame.\n. It doesn't need to be cross browser - it only needs to work on iOS (I think).\n. @commuterjoy you're right - and I think that would be good enough.  We just need to put a big warning somewhere saying that we only 'polyfix' setItem not directly writing to the localStorage object.\nhttp://jsbin.com/yefeh/1/edit\n\n. I think so.  I have a feeling it there might be a similar Android thing.  (Will check and we can expand this later)\nOn ChriOS/iOS UAs only something like this:-\njs\n(function() {\n  ['localStorage','sessionStorage'].forEach(function (storage)  {\n    var pseudoStorage = {};\n    try {\n      var key = 'storageworkstest';\n      window[storage][key] = true;\n      window[storage].removeItem(key);\n    } catch {\n      window[storage].clear = function(key, value) {\n        pseudoStorage = {}:\n      };\n      window[storage].setItem = function(key, value) {\n        pseudoStorage[key] = value;\n      };\n      window[storage].getItem = function(key) {\n        return pseudoStorage[key];\n      };\n      window[storage].removeItem = function(key) {\n        pseudoStorage[key] = undefined;\n      };\n    }\n  });\n}());\n. I agree that as we aren't able to fix it properly this definitely shouldn't be there by default.\nI think it would be quite inadvisable to use localStorage without considering this bug but I can't think of a better approach than this\n(Superstore is a pretty horrid hack, maybe fixing it individually in every project that uses localStorage and is likely to be used by the public on iOS private browsing isn't a bad approach, but that seems a shame - I know in Labs we've had to fix this problem at least 4 times as each time a standalone new component that relies on localStorage is created and this case isn't considered our product breaks :disappointed:)\n. It would be nice if the polyfills stayed where they were and polyfill-service pulled them in as dependencies - then each could take care of its testing on a per-polyfill basis.  Not sure how easy this would work in practise though - and we'd probably need to support the concept of some polyfills being in this repo, some being in other repos - at least for the time being.\n. Even after it was 'finalised' IndexedDB continued to be a moving target for quite a while...  I fear part of the problem is that because there's nowhere for people to try it [only usable in ServiceWorkers] that it will constantly get a drip feed of changes.\nI sort of think that making a polyfill would be a huge leap towards pinning down the spec because it would enable a much larger audience a chance to use it in much more realistic applications.\nSo if you were able to get it started I'd be more than happy to help keep it up to date :-) - I'm sure others would too.\n. Hmm..  @juandopazo let alone being up to date the Raynos streams don't seem to be functioning on their own at the moment :-/.\nhttps://travis-ci.org/Raynos/whatwg-streams/jobs/17716784\n. This totally exists now: https://github.com/github/fetch and is per spec, but spec not finalised.  Definitely not one to include by default but maybe if it were optional :grinning: \n. From FT's perspective the bare minimum is our browser support standards (critically, IE 8+, Mobile Safari 6+ for future projects) and anything additional on top of that would be a nice thing to do for the community but not essential for internal purposes... Just to be clear :+1: for the principle.\n. [I've updated my comment to reflect the key idea I wanted to reference from the doc - apologies!]\n. :+1: to using @jakearchibald's polyfill\n. I've run into a bug today when using the polyfill service's Promise polyfill with fetch\u2026\njs\nPromise.resolve().then(function() {\n  return Promise.resolve('[\"i output therefore i am\"]').then(JSON.parse);\n}).then(function(a) { console.log(a[0]); });\n// Should output \u201ci output therefore i am\u201d\nNative Promise (Chrome)\n\nES6-Promise in Node\n\nES6-Promise in IE9\n\nPolyfilled Promise in IE9\n\nThis is affecting FT stuff\u2026\nThanks!\n. @juandopazo For what it's worth, subclassing is not possible with native promises at the moment.  (I wanted to subclass for Promise.prototype.finally \u2014\u00a0https://twitter.com/stefanpenner/status/520991861444734976\n. I guess the point is though that it wouldn't be unreasonable for the  polyfill.io Promise not to support subclassing if browsers also don't support it :)\n. A lost opportunity to fix something in a way that would only be usable in old browsers?  I don't think it would cause any harm but I can't see how it could be useful to anyone\u2026\n. Oops \u2014\u00a0check now?\n. trouble with heroku was my bad \u2014 sorry @roland-vachter \n. Sorry to bikeshed but could this be an option?\nGET /v1/polyfill.js?ua=sparta/1&fallback=ie/9&features=promises\n. I think the empty response solution is very much compatible with cuts the mustard approach we take at FT. Other people don't use same approach so something like enableUnknown seems sensible.\nI'd slightly prefer unknown=enable or unknown=polyfill or I'd even be comfortable with making it the default but I'm an outsider on this project to some extent so definitely defer to you all that have put much more thought into this service than I have.\nSorry not perfect English. Github mobile sucks and I had to rewrite this answers three times!!!\n. You can push this branch to a non master branch on the main repo - as long as a collaborator does the push, the sauce labs creds will be available to the build\n. Sorry when I said you I meant @triblondon. Yes it's a security feature of travis.\n. does it fail if you load over https on a http page?\n. my bad, fixed now. https://github.com/matthew-andrews/haikro/commit/e57ff2888746c582469dcbc953afbf584dcc9200\n. i think in this case we have a workaround\n. varying behaviour based on the hostname of the page including the polyfill service is a little scary.  if you spot an issue on live and then want to debug locally to figure out what's going on you wouldn't want the behaviour of the polyfill service to change\u2026  that'd confuse me more than help me i think\u2026\nhave you considered making the release batches smaller and optimising the process to minimise the overhead of making releases?  continuous delivery, an approach that many teams at the FT are independently converging on, encourages each individual feature to be released individually\u2026  each release is smaller and therefore carries less risk.\nalso i would advocate decoupling the npm releases from the cdn.polyfill.io releases because people using packages in npm registry already have some responsibility to test the packages they're using \u2014 and upgrading a package involves a degree of manual intervention (even if that is often just hitting a rebuild button on Jenkins/Travis).\n1. The release candidate is tested with the full grunt compatgen task to generate an updated compatibility table.\n2. The commit is tagged vX.Y.Z-rcN where N is initially 1, which automatically spins up and deploys to qa.polyfill.io and automatically publishes to npm, this automatically create a tweet on the @polyfllio account.  (You can eliminate the update package.json step with npm-prepublish)\n3. Wait some number of days for feedback. If necessary, make fixes, increment N, and return to step 1\n4. Push to cdn.polyfill.io\n. do we not have stock android on SauceLabs?\n. how come the customevent polyfill never failed on android stock then?\n. @wheresrhys yup\n. Next team don't really have the equipment / resources to fix this\u2026\u2026 Can Origami help? @triblondon \n. weird error \u2026\u2026 suspect there may be a bug in travis at the moment where environment variables are not available to pull request builds\u2026\u2026\u2026\n. got this back from travis:-\n\nHey Matthew,\nThanks for reporting and sorry about the troubles.\nIt looks like a bug on our side, which our devs are already looking into it. We'll write a follow-up e-mail as soon as we know some more.\nThanks again for you help and if you run into any other issues - please let us know, we'll be happy to help.\nCheers,\nMar\u00eda\n\nup to @triblondon whether to merge this or not but i would suggest not not merging because of the failed pr build :smile: \n. you could eliminate the package.json one too :) https://github.com/matthew-andrews/npm-prepublish\n. oh npm-prepublish doesn't necesarily force you to publish from Travis.  it just eliminates the need for version in package.json.  publishing from travis is something that doing this enables and you might like to do in addition :)\n. This line https://github.com/Financial-Times/o-overlay/blob/master/origami.json#L13 should mean that o-overlay's demos work\u2026  And consumers of any origami components should look at the polyfills they rely on and update their usage of the polyfill service\n. \nI believe this only applies to the webkit prefixed polyfill \u2014 which for Safari applies to 6.0 and 6.1 only \n. @laurieboyes has been coordinating this and i believe he's off today.  i suspect this can wait until he's back.\n. As a long term solution it would be good not to rely on purges \u2026  Perhaps it would be better to reduce the cache to 48 hours from 1 week?\n. Hm, I do but I don't think it would be a good idea to try to polyfill in this case.\n. hmm, i guess if the polyfill works it's ok, it's just that the function is there, the browser thinks it can support it \u2014\u00a0it's just that it doesn't work.  are there other polyfills that fix broken implementations of things rather than just add missing ones?\n. \u4f60\u597d @TOP-Chao, \u6211\u4eec\u8fd9\u91cc\u80fd\u770b\u5f97\u61c2\u4e00\u70b9\u70b9\u4e2d\u6587\uff0c\u6240\u4ee5\u5982\u679c\u4f60\u60f3\u7528\u8bf4\u660e\u4f60\u7684\u95ee\u9898\uff0c\u4e5f\u8bb8\u6211\u4eec\u53ef\u4ee5\u8bd5\u8bd5\u5e2e\u52a9\u4f60\u3002. \u8c22\u8c22\u4f60\u7684\u56de\u590d\uff0c\u6211\u7406\u89e3\u4f60\u7684\u95ee\u9898\u3002\uff08\u6211\u5148\u8981\u8bf4\u6211\u7684\u4e2d\u6587\u6bd4\u8f83\u5dee\u6240\u4ee5\u6211\u4e0b\u9762\u7684\u56de\u590d\u53ef\u80fd\u6709\u5f88\u591a\u9519\u8bef\uff0c\u5982\u679c\u4e0d\u6e05\u695a\u7684\u8bdd\u5c31\u544a\u8bc9\u6211\u7136\u540e\u6211\u80fd\u9610\u660e\uff09\n\n\npolyfill.io\u7684https\u662f\u88ab\u6211\u4eec\u7684CDN (Fastly)\u63d0\u4f9b\u4e86\uff0c\u6240\u4ee5\u6211\u89c9\u5f97\u8fd9\u4e2arepo\u6ca1\u6709https\u6709\u5173\u7cfb\u7684code\u3002\u8fd9\u4e2aservice\u662f\u4e00\u4e2a\u6807\u51c6\u7684nodejs (express) app\uff0c\u4f60\u4ee5\u524d\u67b6\u8bbe\u8fc7\u4e00\u4e2ahttps+nodejs app\u5417\uff1f\u5e73\u65f6\u600e\u4e48\u67b6\u8bbe\uff1f\n\n\n\u4f60\u770b\u5230API ?unknown=polyfill property\u4e86\u4e48\uff1f\u5982\u679c\u7528\u8fd9\u4e2aproperty\u7684\u8bddpolyfill.io\u4e0d\u8ba4\u8bc6\u6d4f\u89c8\u5668\u65f6\u4f1a\u8ddf\u6240\u6709polyfills\u56de\u7b54\u3002\u800c\u4e14\u5982\u679c\u4f60\u613f\u610f\u5e2e\u52a9\u6211\u4eec\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u8d77\u6162\u6162\u5730\u8fdb\u6b65polyfill.io\u4e2d\u56fd\u6d41\u884c\u7684\u6d4f\u89c8\u5668\u652f\u6301\u3002\u6211\u4eec\u60f3\u63d0\u9ad8\u6211\u4eec\u7684\u4e2d\u56fd\u6d4f\u89c8\u5668\u652f\u6301\u3002. \u4e0d\u5ba2\u6c14\uff0c\u5982\u679c\u78b0\u5230\u95ee\u9898\u8bf7\u518d\u8ddf\u6211\u4eec\u804a\u5929\uff01. \u6211\u4eec\u5f88\u5f00\u5fc3\u4f60\u4f1a\u89e3\u51b3\u4e86\u4f60\u7684\u95ee\u9898\u3002\u5982\u4f55\u6709\u5176\u5b83\u95ee\u9898\uff0c\u8bf7\u968f\u65f6\u518d\u8ddf\u6211\u4eec\u8054\u7cfb\u3002\n\n\nWe're very happy that you were able to solve your problem.  If you have any other questions, please don't hesitate to contact us.. Thanks for reporting, have escalated to FT's teams. The team is working on it now.. ?\n. ?\n. this one's probably safe\n. ?\n. ?\n. ?\n. probably could think of this like local dev too\n. I think in the options of child_process exec you can specify which direction to run the command in\n. i don't think fetch is ES6?\n. the stale bits don't really do anything anymore :relaxed: \n. oh wow ok , sorry for the confusion @richard-still-ft  \u2026\n. should this be caniuse:pagevisibility ?\n. okidoke\n. i recommend this for fastly deployments:- https://github.com/Financial-Times/fastly-tools\nwe don't really maintain this other one anymore i think.\n. hm, not really sure i follow what you mean about grunt and cli tools.  fastly-tools performs an identical role in an equivalent way to the financial-times/fastly module \u2014\u00a0only it's a bit more supported+tested.\n\ndry running a VCL without activating it\n\nthat sounds like a useful thing we should re-add.\n. ",
    "AlbertoElias": "What about the Android default browser? \n. As long the whole list is available in the Readme, I think it's fine.\n. Closing #141 \n. I had tested in all IEs and in the latest Safari. I'll take a look\n. We do that in some Origami modules that we need to polyfill in CI. For example o-table We compared Safari Webkit versions to the one in PhantomJS, and that seemed like the closest match.\n. Of course, that would be great, I was just mentioning which Safari version we found was closest to the latest PhantomJs\n. I meant Native Objects\n. @triblondon how's that?\n. Oops! Let me remove those files!\n. Done\n. The :not selector isn't supported in IE8 I believe, so there's probably not much you can do there except for finding another selector which does work nicely in IE8. We removed our :not selectors in Origami modules\n. It is not polyfilled, no\n. o-header is now on v4, would it be worth updating it?\n. Yup, not necessary anymore\n. Closing this in favour of #708 \n. @JakeChampion is on holiday but he gave the ok before leaving\n. \ud83d\udc4d \n. individual browsers it's missing the s\n. closing tag?\n. ",
    "JakeChampion": "@Financial-Times/origami-core @Financial-Times/origami-collaborators \nIs this still wanted?\n. I can not reproduce this bug using the current Object.create polyfill within this project. \nClosing the ticket, feel free to reopen if you like.\n. @aendrew In case you missed it, we now have a dataset polyfill :-). Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is moderately appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor. We would need to ensure that the polyfill is filling for a standard feature of the web platform, which we're not sure is the case here.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. This will be fixed via https://github.com/Financial-Times/polyfill-service/pull/1347. This seems like it may be an important thing to work on. Do we know the current state of affairs? The website mentions the contribution terms are a work in progress and links to this issue -- https://cdn.polyfill.io/v2/docs/contributing#contribution-terms\n. Polyfills which still include new Function():\nDocument\nElement\nHTMLPictureElement\nmatchMedia\nObject.create\nsetImmediate\nWindow\n. Is it possible to change name's descriptor to be write only?\n. Closing this as the Intl polyfill provides a Number.prototype.toLocaleString method - https://github.com/andyearnshaw/Intl.js/blob/20f322dcb47624cec6ba72addcef107c2de94e71/src/core.js#L40\n. Work for Map can be found in #670 \n. We should take one of our applications which use babel and replace core-js polyfill with polyfill-service and see if it works.\n. Closing this issue since the features requested are now implemented. If you find an application which uses babel and doesn't work using our polyfills please create a new issue covering the specific case.\n. Unfortunately we don't have a FormData polyfill, we will gladly accept a pull-request if you know of one or are willing to create one yourself. Here are our guidelines for authoring a polyfill. If you get stuck at any step, feel free to create an issue and we will aim to help :-)\n. @triblondon Should this be closed?\n. Hi @thasmo, do you mean that Firefox 52 supports this feature natively? If so, could you open a new issue which links to the MDN page showing the browser support or similar please. This issue was about our browser feature page (https://polyfill.io/v2/docs/features/) showing the wrong information.. This was added in version 3.17 https://github.com/Financial-Times/polyfill-service/releases/tag/v3.17.0. Closing this as it turns out to not be possible.\n. Is this still an issue? I see that CustomEvent targets IE mobile 10 and higher\n. It's available on QA -- http://qa.polyfill.io/v2/docs/features/\n. The acid test page is now on the live cdn.polyfill.io\n. Closing as #419 supercedes this PR.\n. @caridy I have pushed a copy of your branch subfolder-structure into the Financial-Times remote. This is the PR that contains the commits you have added.\n. @kennethaa This feature is in the next release which is currently within the qa period, today being the first day of qa. It can be found via http://qa.polyfill.io/v1/polyfill.js?features=Intl%7Calways\nhttps://github.com/Financial-Times/polyfill-service/issues/328#issue-59561080 describes our release model in detail.\n. Maybe this?\njs\nif (typeof Set === \"function\" && source instanceof Set) {\n    var a = source.values();\n    var i;\n    var array = [];\n    var length;\n    for (i = 0; ; ++i) {\n        var next = a.next();\n        if (next.done) {\n            break;\n        }\n        var value = next.value;\n        array[i] = value;\n        length = i;\n    }\n}\n. We can avoid the dependency of an iterator polyfill if we only care about the standard iterable objects. If we want Array.from to work with custom iterables then we would need Array.from to be aware of iterable objects.\n. Note - es6-shim supports iterables.\n. @zloirock You raise a good point about iterating over strings. Normal strings would be easy enough. Strings containing surrogate pairs would require some extra effort, mathiasbynens/String.prototype.at should resolve that issue.\nDo you think catering to the standard iterable objects would require more code in the shim than making Symbol a dependency? I'm thinking it would.\n. Work for this is being done in #665 \n. A PR for this work is at https://github.com/zloirock/core-js/pull/88\n. Initial work on this - https://github.com/Financial-Times/polyfill-service/pull/568\n. Here is the latest version -- https://github.com/Financial-Times/polyfill-service/pull/585 -- code reviews welcome!\n. core-js is a large polyfill and not really sensible to import only a part of it's feature set due to size. If all of core-js' polyfills were included in polyfill-service I think then the size trade-off may be worth it for more robustly tested polyfills. The reasoning behind why the size doesn't matter as much when we include all the polyfills is because many of them require the same modules, which will get bundled together, keeping the size from growing too large.\n. Work has moved over to -- https://github.com/Financial-Times/polyfill-service/pull/585\n. @triblondon If I understand the release process correctly, the shrinkwrap file is required because we don't push the same artifact from qa to live. Since we do not re-use the artifact, during our QA period of 7 days if any of our dependencies pushes an update that is within our specified semver ranges, we would be using an untested dependency in production.\n. @matthew-andrews @triblondon \n As the push build has passed, is this okay to merge?\n. I have ran the test suite from my machine and all passed. :+1: \n. @bedeoverend The process that I use is: \n- Write tests for the native feature to ensure any polyfill is working correctly\n- View the license of potential polyfills and see if they allow for the polyfill to be used inside this project without also affecting our licensing model.\n- If multiple polyfills pass our test suite and have a permissive license, I pick the one which looks to be maintained more or looks to be easier to maintain.. @hannesj we were discussing today about publishing RC versions to NPM. You can track this work at https://github.com/Financial-Times/polyfill-service/pull/431 \n. ### New release - v1.5.0-rc.2 (Changelog)\nThis release fixes an issue with the appVersion key containing the wrong version.\nIt is now also available on NPM for testing.\n/cc @hannesj \n. Once this is merged we will need to bump the rc version up and publish to QA as well as NPM.\n@triblondon What do you think about using @matthew-andrews' npm-prepublish package? As you are the owner of the NPM package it's really down to if you mind Travis publishing packages under your account.\n. Confirmed via user agent query string override\n. Next FT seem to be specifying _enqueueMicrotask with the always flag, this may be why Chrome got the polyfill.\nhttps://github.com/Financial-Times/next-js-setup/blob/30d4c5ad506b6b7b3b7be014246c94f7a7832ceb/templates/js-snippets/polyfills-url.html#L1\n. Have we come to a conclusion on this issue?\n. @eek \nBoth of the given UA strings get the Intl polyfill when requested.\nWould you be able to comment on this issue with the information @triblondon has requested? Once we have that information we should be able to help with your issue.\n. The script url you posted does not include Intl in the features array. The Intl polyfill team have documentation on how to use Intl and the Polyfill-service - \nhttps://github.com/andyearnshaw/Intl.js#intljs-and-ft-polyfill-service\nThe reason the tests page only has 'has testing suite' and 'has feature detection' is because the canonical polyfill lives in a different repository.\nTo check that a polyfill is served to your UA, you can pass the UA string as a query parameter - this url will check for Intl and the english locale with the UA you posted -\n https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en&ua=Mozilla/5.0%20(iPhone;%20CPU%20iPhone%20OS_9_2_1%20like%20Mac%20OS%20X)%20AppleWebKit/601.1.46%20(KHTML,%20like%20Gecko)%20Version/9.0%20Mobile/13D15%20Safari/601.1\n. Pinging @eek, was your problem the same as @shivjm's? If so, we can close this issue. If it is not the same, could you respond with this information:\n\nWhat is the symptom of the problem?\nDo our tests pass? (/test/tests?feature=Intl)\nAre there any errors reported to the console?\nCan you provide the CDN URL you are using to test?\n. That's an intentional error being thrown. This feature is not fully implementable as a polyfill and as such we throw an error when the behaviour being requested is not possible. I would advise wrapping your code in a try/catch.\n. @piuccio There is a pull request that seems to be adding the functionality you are after - https://github.com/Financial-Times/polyfill-service/pull/494\n. We have moved CI to Circle CI and are no longer seeing SauceLab issues. Closing this issue, please re-open if you think there are other reasons to move to BrowserStack.\n. The useragent module can now detect Samsung, we need to update the module in our project and add Samsung into the config.json files for the polyfill/s in question.\n. #671 Should resolve this issue, please review :-)\n. @bonimba Could you make a new issue for that please? I don't think it is to do with Samsung browsers, looking at the useragent it does look like a Chrome useragent.\n. There is a PR for this functionality but it is on hold until we get support from Samsung to own that part of the effort -- https://github.com/Financial-Times/polyfill-service/pull/671\n. I believe this is solved by https://github.com/Financial-Times/polyfill-service/pull/783\n. I think we can instead opt to do some custom aliasing work like we have for Facebook's In-App browser #775\n. PR for this --> https://github.com/Financial-Times/polyfill-service/pull/1028. Closing as work was merged in #608 \n. Is there a way to detect this via feature detection rather than UA sniffing?\n. I think we could have it in the service but would have to warn user's that it doesn't come with a detect.\nAs long as the config.json has a restricted browser set it should be okay.\n. I am currently looking into lowering the barrier to entry for adding polyfills to this service. This is a great feature request.\n\nWould you expect the same sort of tasks as we currently have for testing? A quick task grunt saucelabs:quick --polyfill my-polyfill; A more comprehensive task grunt saucelabs:ci --polyfill my-polyfill; And a task to test against everything grunt saucelabs:all --polyfill my-polyfill\n. In another pull-request (#538) I am trying to remove the need to add polyfills directly to this repository and instead have them be their own packages. What do you think to that idea? I'm thinking (hoping) it will make creating/submitting/updating polyfills easier for contributors.\n. The failures are coming from polyfills which come bundled with feature detections. I'm submitting pull requests to see if the upstream dependencies would be willing to separate the feature detection from the polyfill. So far I have made one pull request with the changes required -- https://github.com/mathiasbynens/Array.from/pull/21\n. Superseded by - https://github.com/Financial-Times/polyfill-service/pull/585\n. @alicoding I can confirm the polyfill does not load.\nHere is how you can request the polyfill with that useragent explicitly set:\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Intl&ua=Mozilla/5.0%20(Android%206.0;%20Tablet;%20rv:42.0)%20Gecko/42.0%20Firefox/42.0\n. It is being detected as Android 6.0.\nThe polyfill table does not show if it works on Android.\nThe browsers the polyfill states it works with does not include Android -- \n\"ie\": \"<11\",\n\"ie_mob\": \"10\",\n\"firefox\": \"<29\",\n\"opera\": \"<15\",\n\"chrome\": \"<24\",\n\"safari\": \"*\",\n\"ios_saf\": \"*\",\n\"firefox_mob\": \"*\"\nIf Android was added to the list, it would work.\nUntil then, you can request to always returns the polyfill and have it behind a feature detection - this is achieved by adding &flags=always,gated to the request.\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Intl&ua=Mozilla/5.0%20(Android%206.0;%20Tablet;%20rv:42.0)%20Gecko/42.0%20Firefox/42.0&flags=always,gated\n. This has been fixed - https://cdn.polyfill.io/v2/polyfill.js?features=Intl&ua=Mozilla/5.0%20(Android%206.0;%20Tablet;%20rv:42.0)%20Gecko/42.0%20Firefox/42.0\n. Since the move from ES5/6/7 to ES5/2015/2016 I would imagine the alias being ES2016. \n. I think this issue has been resolved and can be closed.\nThere were two additions to the spec with ES7/ES2016:\n- Array.prototype.includes\n- Exponentiation Operator\nWe cannot polyfill the Exponentiation Operator and we have a polyfill for Array.prototype.includes which has the alias es7.\n. You can provide the full polyfill set by adding the unknown query parameter with the value polyfill to the url. \nI.E. <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?unknown=polyfill\"></script>\n. @whitneyit I like the recent comment you made -- https://github.com/whitneyit/polyfill-service/commit/52d377b36a5f7b4e7f6339419ef0fbd4186d318f\n@triblondon What do you think about the separation of methods into their own folders?\n. @whitneyit I've made a subsequent pr with your changes and removing the monolithic polyfill. I will run the tests locally as it seems SauceLabs is being flakey\n. Did you run grunt ci?\n. Perfect work. I will assign the PR to Andrew and see if it can be merged in the morning (GMT)\n. Thanks\n. I don't know of any polyfills that require compiling to older ES environments. Do you have any you could link to?\n. Other than the previous comments - LGTM :santa: :+1: \n. LGTM :+1: \nBTW I've got basic test suite running on browserstack, I'll be carrying that on at some later point\n. This is fixed, please open a new issue with a reduced test case if you are having issues.\nHere is the PR which resolved the issue -- https://github.com/Financial-Times/polyfill-service/pull/775\n. Sorry, I haven't reproduced this yet, I need to locate an iOS device and download Facebook. Could you please open this as a new issue, that way it will be easier for other contributors to see the issue and attempt to reproduce it also.\n. Should we add this as a test case? \n. LGTM -- @triblondon happy for this to go in?\n. Superseded by https://github.com/Financial-Times/polyfill-service/pull/585\n. It's been tested locally by @whitneyit and all passed\nUpdate: I've also ran the suite of tests grunt ci and it all passed. Not sure why this works locally  and not on Travis.\n. @triblondon Yup, seems to have conflicts now though.\n. Good catch on the non standard methods. It's a bit annoying that the spec lives in a markdown document on Github and not within a standards body such as ECMA, W3C or WHATWG.\nMost of the methods here are proposed methods, which I think is fine to go into polyfill-service so long as have a plan of action if they are not accepted as part of a standard.\nThe defacto standard methods are console.debug, console.info, console.warn, console.error, console.log, console.dir and console.assert.\nI'm in favour of merging this PR.\n. LGTM\n. The steps I use to debug such browsers:\nFind the user agent \nCopy the polyfill-service url, remove the .min if present and add the user agent as a query parameter &ua=xxxxxxx\nI think your approach may be less steps but not as useful because the debugging happens on the device itself whereas the approach I've described can happen on any device.\n. I don't believe I have the privileges required to purge the cache. I've assigned @triblondon as I believe he will know who can do this for us.\n. Does Heroku offer any form of automated scaling that we could use? In previous projects I've used AWS and had the services scale automatically based on real-time load/cpu-usage/messages in a queue.\n. Attempt: We could add some text onto this. I.E. \"Polyfill Service\".\n\n. I like that one Andrew. It's got my vote.\nOn 23 Feb 2016 20:36, \"Andrew Betts\" notifications@github.com wrote:\n\nNew idea:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/1735391/13265834/79ff1d76-dab8-11e5-833d-5379a77b4f00.png\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/578#issuecomment-187891216\n.\n. @bdmac This is live.\n The way to tie live back to the repo is to visit http://cdn.polyfill.io/__about and look at the appVersion key, the value of this key is linked to a milestone on Github.\n. @bdmac This works for me\n\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Intl&ua=Mozilla/5.0%20(iPad;%20CPU%20OS%209_2%20like%20Mac%20OS%20X)%20AppleWebKit/601.1.46%20(KHTML,%20like%20Gecko)%20Mobile/13C75\n. Hmm, that UA works when sent via a query parameter:\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en,Intl.~locale.es,Intl.~locale.de,Intl.~locale.fr,Intl.~locale.it,Intl.~locale.pt,Intl.~locale.ru&ua=Mozilla/5.0%20(iPhone;%20CPU%20iPhone%20OS%209_2_1%20like%20Mac%20OS%20X)%20AppleWebKit/601.1.46%20(KHTML,%20like%20Gecko)%20Mobile/13D15\nThe curl command you sent also seems to work for me.\n\n. Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is moderately appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor. We would need to ensure that the polyfill is filling for a standard feature of the web platform, which we're not sure is the case here.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. If you remove .min from the request you get this returned:\n/* For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: midori/0.5.0 (unknown/unsupported; using policy `unknown=ignore`)\n * Features requested: CustomEvent,Element.prototype.matches,Event,Function.prototype.bind,Object.assign,requestAnimationFrame,~html5-elements\n *  */\nThis shows that Midori is not a supported UA for the service and is treated as an unknown. Unknown UAs are not returned polyfills by default. You can add unknown=polyfill to return all polyfills requested for any UA which is unknown to the service.\nE.G. Midori request with unknown UAs polyfilled https://cdn.polyfill.io/v2/polyfill.js?features=~html5-elements%2CElement.prototype.matches%2CObject.assign%2CrequestAnimationFrame%2CFunction.prototype.bind%2CEvent%2CCustomEvent%7Calways&ua=Mozilla/5.0%20(X11;%20Linux)%20AppleWebKit/538.15+%20Midori/0.5&unknown=polyfill\n. I'd recommend making an issue/pull-request to uap-core to let the useragent module detect Midori successfully. Once the issue has been resolved in that project, we can then look into what polyfills should be served to Midori. If it is a version of Webkit, we could alias it in a similar manner to what we do for Yandex.\nWhilst all this work is yet to be done, you can choose to use unknown=polyfill but be warned that the polyfill being served will be rather large as we cannot assume any features are supported natively.\n. Looking at this issue again it does seem we do recognise Midori, we however do not support it.\n* UA detected: midori/0.5.0 (unknown/unsupported; using policy `unknown=ignore`)\nTo enable support for Midori we require it to be defined in a polyfills config.json.\n. @mehcode @triblondon - currently failing tests in ie 8/11/12 and android 4.4. \n- ie 12 (Sauce results: https://saucelabs.com/tests/c281d470d7d04f7783b833d52c2f9b72)\n    -> Symbol\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Symbol\n - ie 11 (Sauce results: https://saucelabs.com/tests/d4755eeddd1548b28294f3822050a246)\n    -> Symbol\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Symbol\n - ie 8 (Sauce results: https://saucelabs.com/tests/6ddc723dbbe14429a6d2a34fb8891084)\n    -> Symbol (timeout after 10000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Symbol (timeout after 10000ms, 2 retries)\n - android 4.4 (Sauce results: https://saucelabs.com/tests/9984af1685ac453da1b0aa913343a34b)\n    -> Symbol\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Symbol\n. @triblondon This is ready for review\n. > safari/8:  results received (163 passed, 12 failed), closing remote browser\nI'll look into this ^\n. Not yet looked into the Safari issue, that will be this weekend\n. Some Chrome versions ship Symbol but not the well-known Symbols\n. @ithinkihaveacat This is because the config for setImmediate is set to be included on everything except Internet Explorer 9 and above.\nThanks for spotting this. I'll be submitting a patch to fix this shortly.\n. Thinking about this a bit more, it seems that dependant polyfills should not be included in the response if the actual polyfill is not required. This will take a bit longer to fix. I will submit a patch to restrict setImmediate for the time being.\n. Patch for this is in https://github.com/Financial-Times/polyfill-service/pull/588\n. @triblondon I agree with finding a solution to the actual problem (loading polyfills which are not required) however I do believe the config for setImmediate is too open. For instance, Chrome Stable has setImmediate.\n. Updated the config to reflect the data in caniuse\n. Polyfills included from the polyfill-service can be requested with a gated option which will ensure they are only loaded if they do not already exist. E.G. https://cdn.polyfill.io/v2/polyfill.js?flags=gated\nHere are the docs which describe the features available for the service -- https://cdn.polyfill.io/v2/docs/api\n. If a polyfill is incorrectly included it is a sign that the config.json file for the particular polyfill has an incorrect range set for the requesting browser. I can see that Chrome is not included in the list of browsers which require the defineProperty polyfill.\nThe issue you're experiencing is becaed of the |always flag, that will pull down every polyfill that is required for Promise to load.\nWe don't deliver gated polyfills by default as the main aim of the polyfill-service is to servce each browser the polyfills they specifically need, which means that a gate isn't required.\n. Yep, &flags=always,gated would enable that.\nTo bring the conversation back to the changes you've made to the code, the changes look good to me.\n@triblondon Happy for this to be merged into master?\n. 3.3 is now live :-)\n. If requested in a modern browser then none of the polyfill for blissfuljs\nare required.\nIf requested using ie9 you will get polyfills -\nhttps://cdn.polyfill.io/v2/polyfill.js?features=blissfuljs&ua=ie/9\nOn 28 Sep 2017 9:35 pm, \"Jean-Fran\u00e7ois Beauchamp\" notifications@github.com\nwrote:\n\nThe path suggested on the Bliss homepage (https://cdn.polyfill.io/v2/\npolyfill.min.js?features=blissfuljs) does not output any polyfills...\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/594#issuecomment-332956364,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa9Q6OUJJFNQ1UdZVsbxMHi-2WVMfks5snAMngaJpZM4HUoJz\n.\n. Is this a duplicate of #519 / #531 ?\n. This feature will be out when 3.3 is deployed. The deployment process is currently manually done.\n. I've created an issue to track automatic deployments - https://github.com/Financial-Times/polyfill-service/issues/599\n. Added tests and they pass on CI. Ready for review/merging @jonathantneal @triblondon @rowanmanning \n. 3.3 is now in QA which is located at qa.polyfill.io. You can track the release to live/production at issue #625\n. 3.3 is now live :-)\n. LGTM :+1: \n\nThanks for this pull request :-)\n. Which ones require custom js/templates? If a polyfill's detect is not accurate then that is a bug.\nI like the idea of a page which can show which features the browser has natively which are spec compliant. I'm thinking  that CanIUse and Kangax's ES website could benefit from such a service.\n. The page would be more user friendly and would only run the detect scripts\n. Much like Kangax's tables\n. LGTM :+1: \n. @Yuripetusko May I enquire as to why you closed this PR?\n. According to caniuse your change is correct. I'll run the suite of tests on this which will answer the question for us :-)\n. @triblondon As it is on ios, should we alias it to ios_saf as I believe ios devices don't allow other engines to be installed.\n. A pull request for this issue is open at https://github.com/Financial-Times/polyfill-service/pull/615\n. 3.3 is now in QA: qa.polyfill.io, release to live is being tracked at #625\n. 3.3 is now live :-)\n. I've done a test using the UA provided by their documentation -- https://developer.mozilla.org/en-US/docs/Web/HTTP/Gecko_user_agent_string_reference#Firefox_for_iOS\nI can check on a real device as well if wanted\n. Code looks good to me, I will run the CI tests locally and merge if successful.\n. The url is qa.polyfill.io\n. We don't seem to support https on our QA environment\n. I like it. @triblondon how do you feel about adding this section to the docs?\n. This came about through discussing how to find out which browsers support a feature prior to running tests on all the browsers. I think it would make sense in a section to do with creating or updating polyfills.\n. @AlbertoElias Wanted it for polyfilling PhantomJS' lack of a click method on DOM elements. I think we are in the middle of updating PhantomJS from V1 to V2, we might not require this anymore.\n. It passes on CI :tada: \n. LGTM -- Currently running the tests on my machine whilst I look into the CI issues.\nThanks for the pull request!\n. That's perfectly fine with me. You have prompted me to look into the CI issues :-)\nThanks again for ensuring we have strict usage throughout our codebase.\n. The work for this is in #673 - please test and review\n. Should we also discuss the possibility of auto-enforcing HTTPS connections using https://github.com/aredo/express-enforces-ssl ?\n. Closing as HSTS is now live. Will create a new issue for discussing redirecting to https and adding to preload list.\n. New issue for HTTP -> HTTPS - https://github.com/Financial-Times/polyfill-service/issues/677\n. We should probably push for Samsung Android detection in the useragent module instead of this blanket change for all Android devices - https://github.com/ua-parser/uap-core/pull/123\n. It currently does not polyfill any CSS. I'm not sure how we could go about polyfilling CSS.\n. I like ideas 1 & 3 a lot. We should definitely reassess the default set, if we changed it would that require a major version bump? (specifically, if we removed items).\nDo we have graphs/data on the usage of each individual polyfill?\n. What's the state of this PR? Should we resolve the conflicts and merge or close it?\n. The origami build service should have documentation on how to deploy a\ndocker image to herokus registry, you need to be a part of the beta and\nthen register via the docker Cli herokus registry\nOn Thursday, 26 May 2016, Andrew Betts notifications@github.com wrote:\n\nHi Rowan - in Jake's absence can you look over this? Jake and I decided to\nuse docker just for deployment on the polyfill service. I can build the\nimage and run it locally, and I think I have the correct tasks configured\nfor deployment, but I get this output from Heroku:\n$ npm run deploy\nThe push refers to a repository [registry.heroku.com/ft-polyfill-service-qa/web]\n0d48b43af4d4: Preparing\n6d64942ab833: Preparing\n976b0b9ce8a3: Preparing\n538e81ce30d6: Preparing\nea74409b057b: Preparing\nc56b7dabbc7a: Waiting\nno basic auth credentials\nThere don't seem to be any public docs on using Heroku's docker registry\nfor deployment so I assume you guys found out how to do this direct from\nHeroku somehow, or else are just smarter than me. Anyway feel free to\ndeploy (npm run deploy will deploy to QA) and if it works please let me\nknow how to configure auth!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/658#issuecomment-221784457\n. Could you add some tests for the feature?\n\nI'd recommend looking at other Array.from polyfills which support iterators such as https://github.com/studio-b12/array-from\n. > Also - a lingering concern: are there any browsers that ship support for Set but not Array.from? If not, this polyfill is pointless.\nMathias Bynens has explained a need for this in the past -- https://github.com/mathiasbynens/Array.from/issues/4#issuecomment-51221192\n. The environment for tests is every browser that polyfill service supports.\n. The test authoring guidelines should hopefully explain everything -- https://cdn.polyfill.io/v2/docs/contributing#test-authoring-guidelines\n. That also wouldn't work for an endless iterator such as an iterator for even numbers.\n. Deployed to live.\n. No reason, feel free to submit a PR with the change and I'll see that it gets merged :-)\n. @okonet I've added Promise to the es6 set in #672 - please test and review :-)\n. Updated readme, ready for another review @triblondon \n. LGTM \ud83d\udc4d \n. There is two workarounds that I can think of:\n- You can request the polyfill to always be returned using |always after the specific polyfill - https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en|always\nOr\n- Request the polyfill-service polyfills dynamically using Javascript. Before making the request, sniff the browser's useragent, if it is a Samsung device, make the request using |always otherwise make the request as normal. This will help ensure browser which have the locale/s you are wanting to use don't download the locale pack/s from the polyfill-service. - \njs\nvar script = document.createElement('script');\nvar alwaysPolyfillUrl = 'https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en|always';\nvar polyfillUrl = 'https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en';\nvar url = navigator.userAgent.includes('SAMSUNG') ? alwaysPolyfillUrl : polyfillUrl;\nscript.setAttribute('src', url);\ndocument.head.appendChild(script)\n. The polyfill itself is maintained by a different team and in a different repository on Github. If the polyfill has an issue, could you open an issue at https://github.com/andyearnshaw/Intl.js describing the issue and with an small reproducible example? Thanks for taking the time to look into this with us\n. @triblondon I removed the module and added the header. Ready for review.\n. @triblondon Switched to one_year\n. Deployed to Live.\n. What url are you requesting from the polyfill-service? It's not possible to request an older version.\n. You can install an older version via npm or by cloning a tagged commit on github.\n. We used to support it but was removed, here is the issue on removal - https://github.com/Financial-Times/polyfill-service/issues/461\nI'll look to publish 3.4.2 to npm\n. Yep, the line you mentioned before is in the Symbol polyfill, which is not in the default set of polyfills, I'm looking into why it was included in your request.\n. Also, when I run the test suite on IE11, it all passes. I'm not sure what could be causing the issue. Are you including any polyfills from a different service which may be clashing somehow?\n. This is the test link -- https://cdn.polyfill.io/v2/tests/test/director?mode=targeted\nThe one you pasted is a control test which applies all the polyfills to see what the browser doesn't support natively.\n. Yes, 323 passing for ie11. It should not be including Symbol unless you are for it explicitly, which you have not.\n. It was spotted on some flaky tests in o-tabs I believe.\nThis is the error being thrown and how the error is being thrown:\njs\nnew DOMTokenList\nUncaught TypeError: Illegal constructor(\u2026)\n. The fix for that issue was applied in the polyfill. Could you supply a test case?\n. LGTM \ud83d\udc4d \n. Yes, definitely!\n. \ud83c\udf89 \n. LGTM \ud83d\udc4d \n. @wheresrhys Are you getting this error with the latest version of the polyfill-service?\n. I'm not sure fetch is in the default set of polyfills. The features in\nthis table which have a star\nnext to them are in the default set of polyfills you receive when\nrequesting cdn.polyfill.io/v2/polyfill.js\nOn 7 May 2016 08:56, \"Rong Sen Ng\" notifications@github.com wrote:\n\nDescription\nInserting  failed to load fetch polyfill on IE11 and above.\nHowever, \ndid sort out the problem.\nExpected outcome\nfetch API should be usable after loading the polyfill.min.js.\nActual outcome\nfetch is undefined was thrown at the console.\nBrowsers Affected\n- Edge\n- IE 11\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/691\n. It doesn't. It creates the Symbol.iterator symbol but does not add it to any Objects' prototypes as that would go against our polyfill authoring guidelines.\n. I do prefer your approach to naming @callumlocke. The name of the polyfill doesn't matter too much.\n\nAs we are now adding more and more ES6/2015 polyfills, many of these polyfills require Symbol in some form or another. I think the biggest issue here is deciding when we include the polyfill. As @callumlocke has pointed out, Array and String make use of Symbol.iterator, should we include polyfills for these in the default set thereby allowing developers to start using ES6/2015 features without requiring them to construct a custom polyfill.io url?\n. This is now in QA.\n. LGTM \ud83d\udc4d \n. @triblondon Is this needed by FT?\n. @hipkiss91 It seems we are targeting ie 11 with this polyfill. Should we not be doing this?\n. @hipkiss91 mocha provides the decribe and it functions. proclaim provides the assertions. They are all we are using :-)\n. @hipkiss91 It seems these tests are rather old and use the expectation library we used to use. We have since switched to proclaim, most of the api is the same as our old assertion library, you will need to change theexpects to proclaims.\n. @hipkiss91 That's something only we can do, will do it now :-)\n. @hipkiss91 Can you make a PR with your changes?\n. @hipkiss91 I fixed the ESLint errors and sorted out the proclaim issues in the tests. \n. @hipkiss91 This PR now has all the tests running correctly, I can see that the polyfill/tests fails for IE9. If you or another contributor can get the tests passing in IE 9 then I think we would be able to merge this into master :-)\n. This feature was added in #1056 . @caridy, would you be able to review this change?\n. @caridy I can't install that version for some reason.\n```\nnpm i intl\nnpm ERR! Darwin 15.4.0\nnpm ERR! argv \"/Users/jake.champion/.nvm/versions/node/v6.1.0/bin/node\" \"/Users/jake.champion/.nvm/versions/node/v6.1.0/bin/npm\" \"i\" \"intl\"\nnpm ERR! node v6.1.0\nnpm ERR! npm  v3.8.6\nnpm ERR! No compatible version found: intl@~1.2.2\nnpm ERR! Valid install targets:\nnpm ERR! 1.1.0, 1.0.1, 1.0.0, 1.0.0-rc-4, 1.0.0-rc-3, 1.0.0-rc-2, 1.0.0-rc-1, 0.1.4, 0.1.3, 0.1.2, 0.1.1, 0.1.0, 0.0.2, 0.0.1\nnpm ERR!\nnpm ERR!\nnpm ERR! If you need help, you may report this error at:\nnpm ERR!     https://github.com/npm/npm/issues\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /Users/jake.champion/Code/work/origami/polyfill-service/npm-debug.log\n``\n. It turned out to be a caching issue. Resolved vianpm cache clean`.\n. @triblondon The latest version of Intl doesn't seem to pass our detect test on Safari 8-9 & IE 7-10.\n. This is what we get from CI:\n\nFailed tests:\n - ie 10 (Sauce results: https://saucelabs.com/tests/adab4b0b7675494ea87b115718a13153)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - ie 9 (Sauce results: https://saucelabs.com/tests/f047a9adb85a457c9c06bbbb101ace2a)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - ie 8 (Sauce results: https://saucelabs.com/tests/4bd4de77741c4daab8fdba47e28e2738)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - ie 7 (Sauce results: https://saucelabs.com/tests/3ac14f4ed5e74cd890fa69592edd2fd3)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - safari 9 (Sauce results: https://saucelabs.com/tests/f7379671b2114fe0a5f54f2763d62e82)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - safari 8 (Sauce results: https://saucelabs.com/tests/c0b5ec4e9ad34785ac45dd5fd8c3d42b)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n\nTo see the results from a locally running version of the polyfill-service you can visit http://localhost/v2/test/tests?mode=all&feature=Intl and to view the current version in production you can visit https://cdn.polyfill.io/v2/test/tests?mode=all&feature=Intl\n. This PR is now using the new third-party polyfill system which has resulted in a dramatic decrease in the amount of committed files :-)\n. This has now been deployed to production as version 3.6.0\n. I believe this issue can be closed now. I will create a new issue for the detect.js suggestion.\n. @triblondon Could you add a test for this bug-fix?\n. @dfcreative What are the issues you are having with contribution? I'd love to help smooth those out and make the experience better for new committers to the project.\n. The tests for that repository are rather lacking. I also believe that not all those Array methods are implemented by all browsers meaning we will need to include polyfills for those as well. I think we would require those polyfills to be included first before being able to bring in your TypedArray polyfill set.\n. Yes, we are also seeing the issue on our sites. Our fix was to exclude the Symbol polyfill (which is required by Map and Set) by adding &excludes=Symbol,Symbol.iterator,Symbol.species. It is only a temporary fix whilst we investigate the issue in more detail.\nDoes this fix it for you? \n. You are correct, Symbol is not in the default set directly but, Map and Set are dependant upon Symbol being present, if your browser has Symbol then the polyfill won't be included in the bundle from cdn.polyfill.io. However, there are no browsers which have Symbol and don't have Map or Set.\nIf you could find the piece of code in your application's JS which is surfacing the error that would help us a lot in our efforts on fixing this issue.\n. Thanks, that definitely helps. I believe the underlying issue is the same as #690. @wheresrhys, could you confirm whether these issues are one and the same? If they are, I'm happy to close either issue.\n. I believe this issue has been resolved with the 3.8.1 release. @victorwhy, are you still seeing this problem?\n. We publish to http://qa.polyfill.io 7 days before publishing to http://cdn.polyfill.io. That should be what your staging environment uses, you can also track releases via Twitter or Github for when we release to QA for testing.\nWe used to have legacy polyfills, it was removed as it was not used and added complexity to the codebase -- https://github.com/Financial-Times/polyfill-service/pull/560/commits/66385a12200c9671b21e5d818b7fa9cfdd3e57f5\n. Closing this PR as https://github.com/Financial-Times/polyfill-service/pull/726 has superseded it.\n. @wheresrhys Are these all still needed by FT?\n. I will close this issue then and we can add these other polyfills if and when they are required.\n. I've added a commit which shows one polyfill migration using this approach.\n@wheresrhys, @callumlocke, @triblondon - What are your opinions on this?\n. This PR will allow consuming commonjs modules which are located in node_modules, it doesn't yet do relative requires. After reading through the Browserify docs it seems we can have relative requires by passing a basedir configuration.\nThere would be no duplication of code in the bundle of polyfills as the whole bundle is ran through browserify, not each individual polyfill. \nThis means:\n\nall polyfills in a bundle share a single copy of the shared components\n. @wheresrhys I've added the ability to have relative requires however they all are relative from the same location which is the polyfills directory.\n. Thanks for spotting this, I've created a PR for this work over at #721.\n. One comment about the documentation.\nThe solution itself is perfect. \ud83d\udc4d \n. @hannesj How are you getting on with adding ie_mob to these?\n. Live Symbol tests:\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.iterator\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.search\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.toPrimitive\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.match\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.species\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.toStringTag\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.hasInstance\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.split\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.unscopables\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.isConcatSpreadable\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol.replace\nhttps://cdn.polyfill.io/test/director?mode=all&feature=Symbol\n\nYou can also visit https://cdn.polyfill.io/v2/docs/features/ and click the \"Live test\" radio input that is on the Features list table. This will given you the results for every feature we have within the service.\n. Yes, globalresults is the global results object.\n. Could you write up a strawman proposal for reportRedundancy, I'm quite intrigued with that idea.\nI think for the first part of this issue, configs missing browsers, we could add another query param to turn that on, much like the unknown=polyfill query param.\n. This is now live. https://github.com/Financial-Times/polyfill-service/releases/tag/v3.7.0\n. @nifgraup The regex is using case-insensitive matching. Tests for this are running at - https://circleci.com/gh/Financial-Times/polyfill-service/312\n. It passed! \ud83c\udf89 \n. Tested locally, passes.\n. Yup, LGTM \ud83d\udc4d \n. Tests are now passing :-)\n. Thanks for this! \ud83d\udc4d \n. No, I didn't even notice this. I just created a Gitter account and this was a recommended channel alongside other repositories I contribute to. \u00af(\u30c4)/\u00af\n. Closing as this has since been released to production -- https://github.com/Financial-Times/polyfill-service/releases/tag/v3.8.0\n. This is now in master\n. That shouldn't be required, why did you need to cd into the installed dependency?\n. Build passing :-)\n. @hannesj It is available on NPM via polyfill-service@next\n. This has now been pushed to production \ud83c\udf89 \n. LGTM \ud83d\udc4d \n. This bug appears on pages which make use of iframes, an example would be ft.com which has ~29 iframes on it.\nIt appears that somehow IE11 uses the patched Object inside the iframe and can no longer access the code which originated from a different domain.\n. I had a thought - This should probably be a part of the Object.getOwnPropertyNames polyfill and configuring that polyfill to target IE11. What do you think?\n. I've made a PR for this work - https://github.com/Financial-Times/polyfill-service/pull/762\n. The latest version doesn't seem to work in IE 7 & 8 according to our CI results:\n- ie 8 (Sauce results: https://saucelabs.com/tests/e682c14868774352a3725e9ef3f8a4fd)\n    -> IntersectionObserver\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver\n - ie 7 (Sauce results: https://saucelabs.com/tests/45d5251169e747388113f4d1b873b52a)\n    -> IntersectionObserver\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver\n. > Great news that IO is now available from the npm registry.\n\nI have a few niggles with this approach:\n- installpolyfill is only used as part of tasks, but it's in lib.  It would be better in a subfolder of tasks, I think.\n\nGood point, I'll move it there. I thought I should move it as it no longer makes a reference to Grunt however it is still used as a build-step, makes more sense to be in the tasks directory.\n\n\nDo we need installpolyfill to be a separate module, rather than just improving the update task?  Maybe we could consider putting some config in the config.json file for a common install pattern, eg an install section that contains something like {\"module\":\"intersection-observer\", \"paths\": [...], \"postinstall\":\"update.task.js\"}.  This would cause the generic update task to install the module, concat the files in paths together and copy the result to the polyfill.js file.  If necessary, a local script could run to do anything specific either pre or post install.\n\n\nI like this idea, if I've read this correctly it would also mean the polyfill's source code would no longer be in our repository as it would be pulled in when running npm install. Is that what you had in mind?\n\n\nThe installpolyfill script is more functional than the rest of the polyfill service code. I'm not opposed to FP, but using eg. ary instead of a closure, and sum to conat strings is not intuitive to me. May be worth asking the rest of the Origami team to make sure the code is easy enough to maintain.\n\n\nThis is true, I'll refactor those parts of the code.\n. @triblondon This is ready for another round of code reviewing.\n. I'll explain that specific snippet which is from the Symbol polyfill.\nWe can definitely give the variable a more verbose name.\nThe benefit to assignment is that we have a reference to the native method which is required because we need to modify this method on the Object object to filter out Symbol properties which is done in lines 140-143.\n. There may be a minification benefit but I haven't tested that assumption. \n. @triblondon Updated the PR based on feedback given. What do you think about https://github.com/Financial-Times/polyfill-service/pull/770#discussion_r72587903 ? \n. What do we think about moving the tests back upstream to the original polyfill's repository?\n. Yes, still happens :-(. May I ask why it is in IE7 compat mode? Can they move to a browser version the FT supports such as IE8 or higher?\n. Updated this PR to use a div element\n. Hi @lelledaniele, are you wanting to carry on work with this PR or is it okay to close it?\n. There is an upstream PR for this -- https://github.com/WICG/IntersectionObserver/pull/155\n. I think this is because it is not using array notation for the property v.prototype.catch, catch is a reserved word in IE8. I'll look into why this is happening now and didn't before.\n. It seems uglify-js version 2.7.0 turned on screw-ie8 by default. I'll be submitting a PR to polyfill-service shortly which explicitly turns it off.\n. Because we test for correct function names which would fail on minified code\n. Yep, I saw that option but didn't want to implement it as it results in a bigger file size.\n. I added and then removed the promises a+ and promises es6 test suites from this PR as those tests require functions such as Object.create/Object.key/[].forEach which we would need to polyfill. Another reason for their removal is that Yaku runs all these tests in it's own repository meaning we don't need to here, this is in line with how we handle the tests for the third-party polyfill Intl.\n. This should resolve #509 and #652\n. @AdaRoseEdwards I thought Samsung Browser supported Intl natively, is that not the case?\n. We use useragent to give use browser versions. We also just recently added the ability to configure the versions within the polyfill-service itself\n. You can test what our service thinks the UA is, here is an example URL using the older Samsung UA:\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Promise&ua=Mozilla/5.0%20(Linux;%20Android%204.4.4;%20en-au;%20SAMSUNG%20SM-N915G%20Build/KTU84P)%20AppleWebKit/537.36%20(KTHML,%20like%20Gecko)%20Version/2.0%20Chrome/34.0.1847.76%20Mobile%20Safari/537.36\n. @AdaRoseEdwards When would we expect these to be added? We are wanting to cut a release by end of today if that is possible.\n. Can you make a PR for this?\n. I don't think we can update the detect.js file with this suggestion as each application would want a different set of locales, we can't cater for this with how we currently serve polyfills.\nIf we could build the detect.js file on demand and had a whitelist of all locales as to avoid remote code injection then we could take the locales passed in the url to the polyfill-service and place them in the detect.js file however, that is possibly a lot of work to be done and I'm not sure if we would accept such a feature.\n. Yep, we do, silly me, we can definitely add this in.\n. PR for this -- https://github.com/Financial-Times/polyfill-service/pull/1027. 3.9.0-rc2 has been released which includes Samsung browser support for the Array iterator methods. This has been published to NPM under the next label and can be installed via npm i polyfill-service@next.\n. This is now live.\n. That's a syntax issue I believe. Ie11 doesn't look like it supports this\nsyntax - https://msdn.microsoft.com/en-us/library/dn858238(v=vs.94).aspx\nOn 3 Aug 2016 6:04 p.m., \"shiftie\" notifications@github.com wrote:\n\nI have the problem with this code\nhttps://gist.github.com/shiftie/e501556c7dbf9e22649b35ba3a318f4f for\ninstance.\nps.: I don't want to use for-in :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/792#issuecomment-237276555,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa2LoyEKrlLMcpZcL_BPHvWhPgijjks5qcMS3gaJpZM4JZdRm\n.\n. @FredyC - It sounds like you want the default set plus the es6 set and possibly even the es5 set. You can request the default set plus other features in one request, here is an example which asks for the default,es5 and es6 set -- https://polyfill.io/v2/polyfill.js=features=default,es5,es6.\n\nIt also looks like we have not added the es6 alias to the configuration for Array.prototype.@@iterator polyfill. \nWith regards to the Set issue you also mentioned. Our polyfill does include a method for Set.prototype[Symbol.iterator]. Would you be able to create a separate issue for this bug with some code to replicate it, preferably a jsbin.com page. \nThanks for reporting these issues.\n. The default set includes the well-known symbol Symbol.iterator as it is a dependency of Set and Map which are included in the default set.\nI haven't added anything to the default set as of yet, I'm not sure how we decide what gets added. I imagine an RFC to add a polyfill to the default set would be a good approach to take. Is there anything else you think should be added to the default set?\n. Set was added a while before Array.prototype.@@iterator was added. \n@FredyC are you able to confirm that your issue using for ( of ) {} syntax compiled to ES5 syntax works when you include our Array.prototype.@@iterator polyfill? If that is the case I believe we can close this issue. We can also raise a new issue about updating the default set.\n. If I use the useragent string you provided in the issue description and request WeakSet, it is returned correctly.\nWe can also see in the comment block at the top of the response returned by the polyfill.io request that the browser being detected is chrome 30. Are you 100% sure that the browser being used is not chrome?\nEdit: Here is a polyfill.io request which asks for Map, Set, WeakMap, WeakSet with the useragent string you posted, all the polyfills are returned successfully. \n. I see you open https://cdn.polyfill.io/v2/polyfill.js - this is the default set, which does not include WeakMap or WeakSet. Documentation over what features are in the default set can be found here.\n. If you included WeakSet and WeakMap in the features being requested then it will work as expected. E.G. https://cdn.polyfill.io/v2/polyfill.js?features=default,WeakMap,WeakSet\n. The link Andrew posted in this issue about contributing a polyfill user\nagent configuration change explains how to add Android to the weak map and\nweak set polyfills. If you have time,  I recommend following that guide and\nsubmitting a pull request otherwise it may get done by another contributer\nbut I can't be sure when.\nOn 7 Aug 2016 23:37, \"falsandtru\" notifications@github.com wrote:\n\nOh, I did not know it default restriction. Thanks a lot! However, when I\nrequest as Android 4.4 using Mozilla/5.0 (Linux; Android 4.4.2; KYY24\nBuild/108.1.2110) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile\nSafari/537.36 (Chrome was removed), its response does not have WeakMap\nand WeakSet. Is this a correct behavior?\n/* Polyfill service v3.8.1\n- For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n  \n- UA detected: android/4.4.0\n- Features requested: WeakMap,WeakSet,default\n  \n- - _mutation, License: CC0 (required by \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.prepend\", \"Element.prototype.remove\", \"Element.prototype.replaceWith\", \"default\")\n- - Element.prototype.after, License: CC0 (required by \"default\")\n- - Element.prototype.append, License: CC0 (required by \"default\")\n- - Element.prototype.before, License: CC0 (required by \"default\")\n- - Element.prototype.matches, License: CC0 (required by \"Element.prototype.closest\", \"default\")\n- - Element.prototype.closest, License: CC0 (required by \"default\")\n- - Element.prototype.prepend, License: CC0 (required by \"default\")\n- - Element.prototype.remove, License: CC0 (required by \"default\")\n- - Element.prototype.replaceWith, License: CC0 (required by \"default\")\n- - Number.isNaN, License: MIT (required by \"Set\", \"default\")\n- - Object.assign, License: CC0 (required by \"default\")\n- - setImmediate, License: CC0 (required by \"Promise\", \"default\")\n- - Promise, License: MIT (required by \"default\")\n- - Set, License: CC0 (required by \"default\")\n- - String.prototype.endsWith, License: CC0 (required by \"default\")\n- - String.prototype.includes, License: CC0 (required by \"default\")\n- - String.prototype.startsWith, License: CC0 (required by \"default\")\n- - URL, License: CC0 (required by \"default\")\n- - document.visibilityState, License: CC0 (required by \"default\") */\nAnother, how should we do about a browser family detection problem? I'm\nworried about ReferenceError: WeakMap is not defined on Android 4.x.\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/793#issuecomment-238112927,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa_hTDvOs_x0_McwOIKRaO0Pp1PN1ks5qdl3VgaJpZM4JZvvT\n.\n. This work is in master and will be released in next release - 3.10\n. Good catch Clemens, you are correct, this looks like it will break some\nwebsites which currently work. Rhys, your idea makes sense, I would think a\nmore descriptive name for the configuration option would be unsupported\ninstead of unknown but that may cause more complexity with configurations.\nI'm unsure what issues we may run into if we change what the unknown\nconfiguration currently does.\n\nOn 2 Aug 2016 11:47, \"Clemens Stolle\" notifications@github.com wrote:\n\nI know some Samsung support is being tackled in 3.9.0, but hear me out :D\nWith the following UA string\nMozilla/5.0 (Linux; Android 5.0.2; SAMSUNG SM-A500FU/A500FUXXU1BOL1\nBuild/LRX22G) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.3\nChrome/38.0.2125.102 Mobile Safari/537.36\nWe currently get this response:\n/* Polyfill service v3.8.1\n- For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n  \n- UA detected: other/0.0.0 (unknown/unsupported; using policy unknown=ignore)\n- Features requested: default\n-  /\nwhich is okay, because with unknown=polyfill I can request the entire\nshebang and get it to work on those devices. With 3.9.0 (\nhttp://qa.polyfill.io/v2/polyfill.js) on the other hand, I get:\n/* Polyfill service v3.9.0-rc3\n- For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n  \n- UA detected: samsung_mob/3.3.0 (unknown/unsupported; using policy unknown=ignore)\n- Features requested: default\n  \n- Version range for polyfill support in this family is: >=4\n-  */\nwhich I don't seem to be able to work around with unknown=polyfill:\n/* Polyfill service v3.9.0-rc3\n- For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n  \n- UA detected: samsung_mob/3.3.0 (unknown/unsupported; using policy unknown=polyfill)\n- Features requested: default\n  \n- Version range for polyfill support in this family is: >=4\n-  */\nIs this a bug or am I doing something wrong?\nThank you for this great service :)\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/795, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa_o8KOHcKJLGaj36aK0DwvfiiSHEks5qbyAtgaJpZM4JaekK\n.\n. This is now live on qa.polyfill.io and on npmjs under the next tag.\n. Demo of this working -- http://qa.polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(Linux;%20Android%205.0.2;%20SAMSUNG%20SM-A500FU/A500FUXXU1BOL1%20Build/LRX22G)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20SamsungBrowser/3.3%20Chrome/38.0.2125.102%20Mobile%20Safari/537.36&unknown=polyfill\n. It was an issue from uglifyjs' latest minor version release which turned on\nscrew_ie8 by default. This is fixed in master and in the release\ncandidate currently on qa.polyfill.io and will be out to production on\nFriday if no issues are found in the release prior to that day.\n\nOn 2 Aug 2016 18:26, \"Rhys Evans\" notifications@github.com wrote:\n\nIt should be configured correctly\nhttps://github.com/Financial-Times/polyfill-service/blob/master/tasks/buildsources.js#L98-L100.\nWhat's the polyfill.io url you're calling?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/796#issuecomment-236977897,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa-03GGgErnjQGVJlt7Lbx9sxYUmvks5qb32zgaJpZM4Jag28\n.\n. That's okay, thank you very much for taking the time to create an issue\nabout this. Without users like you this bug could have been around for a\nlot longer than it currently has.\n\nAgain, thank you for filing the issue and please feel free to file any\nothers you come across.\nOn 2 Aug 2016 21:19, \"G\u00f6khan Kurt\" notifications@github.com wrote:\n\nOk, it is my bad that this is actually a duplicate issue of #778\nhttps://github.com/Financial-Times/polyfill-service/issues/778.\nBtw, I was using https://cdn.polyfill.io/v2/polyfill.min.js http://url\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/796#issuecomment-237030252,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa6UnTOC0lRS7MAR0wbToPNuoJWq2ks5qb6YMgaJpZM4Jag28\n.\n. Didn't mean to merge this Pull Request, apologies. I have reverted and will recreate it.\n\nI've now learnt how to push master branches from forks into our repository without automatically merging them. Pasting here for others to read. It uses Github's hub tool.\nbash\n\u276f hub checkout https://github.com/Financial-Times/polyfill-service/pull/797\nBranch debugwand-master set up to track remote branch master from debugwand.\nSwitched to a new branch 'debugwand-master'\n\u276f git push -u origin debugwan-master:debugwan\n. It is in version 3.10, which is yet to be released.\n. @bjfletcher Yes :-) -- https://github.com/Financial-Times/polyfill-service/issues/835\n. I think you need to execute the function expression on line 5 of\npolyfills/DOMTokenList/prototype/@@iterator/detect.js &\npolyfills/NodeList/prototype/@@iterator/detect.js, I believe they are\ncurrently returning either a boolean or a function when they need to only\nreturn a boolean.. Looks good to me. I'm away from a machine so cannot merge it. Feel free to\nmerge in to master.. Merging this in, @AdaRoseEdwards can add the Samsung configurations in a later PR :-)\n. Looks like there was some change in the definition of the function between es5 and es6\nhttp://ecma-international.org/ecma-262/5.1/#sec-15.2.3.6\nhttp://ecma-international.org/ecma-262/6.0/#sec-object.defineproperty\n. This was fixed via #1147. This seems to fail in IE 8/12/13 :\nbash\n - ie 13 (Sauce results: https://saucelabs.com/tests/842735ead22d42cf9eaeb9424189bf2d)\n    -> URL       http://127.0.0.1:3000/test/tests?mode=targeted&feature=URL\n - ie 12 (Sauce results: https://saucelabs.com/tests/49bbe4a2c26f4bedb589c07c2d18b30f)\n    -> URL       http://127.0.0.1:3000/test/tests?mode=targeted&feature=URL\n - ie 8 (Sauce results: https://saucelabs.com/tests/99688b1ce0624bd1931ad3cd6e75cd95)\n    -> URL       http://127.0.0.1:3000/test/tests?mode=targeted&feature=URL\n. Initial review is good. I made some comments, happy for this to be merged. \ud83d\udc4d \n. Great idea! Thanks for bringing this to our attention :-)\n. This work is in master and will be released in next release - 3.10\n. It is necessary as ours is not fully spec compliant. Our polyfill would not let a user pass a different constructor to the function which is defined in step 4a.\n. @triblondon Do you happen to know which polyfills those would be?\n. @rowanmanning Happy for this to be merged in?\n. bash\n\u276f npm-check --skip-unused\n\u2764\ufe0f  Your modules look amazing. Keep up the great work. \u2764\ufe0f\n. I've made a PR to Proclaim to add automated browser testing against every version of every browser that SauceLabs has available at the time of testing -- https://github.com/rowanmanning/proclaim/pull/32\n. Thanks, yes this project requires node 6 to run. I will get this tested on CI for you :-) Thanks again for taking the time to create a pull request and testing it.\n. @simevidas Your commit now passes CI \ud83d\ude04  \ud83c\udf89 \n. I've resolved this issue by bring your forked repository's branch into our origin repository. CI now passes :-)\n. Would you be able to add a test to cover this change?\n. Ah yes, that is because we only install the polyfills which the requested polyfill needs to function. Array.from does not need Set or Map polyfills to function so they are not downloaded. This in turn means those tests you linked to would not run as Set and Map would not be present.\nIf we create a custom iterable object and use that in the tests then we can test this code path in older browsers which don't have Set or Map.\n. Great work @falsandtru !\n. @falsandtru I forgot to ask if you are okay with our contribution terms, apologies for that. Our terms can be found here.\n. Of course :-) Thanks for responding so swiftly!\n. Thanks for improving our browser support coverage for these polyfills. This will be released as part of version 3.11.0.\n. Looking into this :-) Thanks for reporting the issue. Have you considered trying out our QA service on your website? It would help us capture these regressions before rolling out to production. This version of the project has been on QA for over a week and we had no issues about this reported.\n. The intl polyfill now seems to include a sourcemap comment at the end, this is causing all polyfills after it to be commented out when requested in minified form.\n. Correct, they are now returning the same version. This is because this went to QA over 7 days ago for public testing, no issues were reporting which meant we went to production with the changes made.\n. We can see that the version we had before did not include the sourcemap comment and the new version does.\n. @nmaves If you use qa.polyfill.io instead of cdn.polyfill.io then you will be using our QA version. We create issues on this repository when we cut a new release to QA, an example of this can be found here.\n. PR for this issue https://github.com/Financial-Times/polyfill-service/pull/821\n. @nmaves We also tweet when releases go to QA or to production -- https://twitter.com/polyfillio\n. This is the PR which introduced the sourcemap in Intl. @caridy, do you think this is better solved here (what this PR proposes) or by Intl?\n. Great idea @caridy, thanks for suggesting the package, it works as expected. I've updated the PR with your recommendation :-)\n. This looks to be a duplicate of #820\nOn 10 Aug 2016 05:52, \"Ethan Goldblum\" notifications@github.com wrote:\n\nWe noticed a large increase in errors right around UTC midnight today in\nsafari when polyfilling Intl alongside Intl.~locale.es and Intl.~locale.en\n.\nThe problematic combined file can be fetched with the following.\ncurl 'https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl|always,Intl.~locale.en|always,Intl.~locale.es|always&unknown=polyfill' 'Accept-Encoding: gzip, deflate, sdch, br' -H 'User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 9_3_3 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13G34 Safari/601.1' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,/;q=0.8'\nNot sure if this a polyfill-service bug or a bug in the polyfill itself (\nhttps://github.com/andyearnshaw/Intl.js), but it looks like concatenation\nof https://github.com/andyearnshaw/Intl.js/blob/master/dist/Intl.min.js#L3\nwith additional files causes a syntax error in safari.\nhttps://github.com/andyearnshaw/Intl.js/blob/master/dist/Intl.min.js#L3\ndoes not have a trailing newline and it does not appear that the\npolyfill-service concatenation enforces that joined files exist on new\nlines.\nWe were able to work around by splitting the concatenated request into\nseparate requests, but this is obviously not ideal from a performance\nperspective.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/822, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa2efdtI5XTqYR5A9FdopQb0XRg9Sks5qeVi9gaJpZM4Jgw3h\n.\n. This is a duplicate of #820\n\nOn 10 Aug 2016 11:32, \"Vojt\u011bch Dobe\u0161\" notifications@github.com wrote:\n\nIt seems like something happened and suddenly some of our users are\ngetting error in polyfill.min.js in Safari 9.1.2 on last line that looks\nlike this:\n//# sourceMappingURL=Intl.min.js.mapIntlPolyfill.__addLocaleData({locale:\"cs\",date ...\n//# sourceMappingURL=Intl.min.js.mapIntlPolyfill.__addLocaleData({locale:\"cs\",date:{ca:[\"gregory\",\"buddhist\",\"chinese\",\"coptic\",\"dangi\",\"ethioaa\",\"ethiopic\",\"generic\",\"hebrew\",\"indian\",\"islamic\",\"islamicc\",\"japanese\",\"persian\",\"roc\"],hourNo0:true,hour12:false,formats:{short:\"{1} {0}\",medium:\"{1} {0}\",full:\"{1} {0}\",long:\"{1} {0}\",availableFormats:{\"d\":\"d.\",\"E\":\"ccc\",Ed:\"E d.\",Ehm:\"E h:mm a\",EHm:\"E H:mm\",Ehms:\"E h:mm:ss a\",EHms:\"E H:mm:ss\",Gy:\"y G\",GyMMM:\"LLLL y G\",GyMMMd:\"d. M. y G\",GyMMMEd:\"E d. M. y G\",GyMMMMd:\"d. MMMM y G\",GyMMMMEd:\"E d. MMMM y G\",\"h\":\"h a\",\"H\":\"H\",hm:\"h:mm a\",Hm:\"H:mm\",hms:\"h:mm:ss a\",Hms:\"H:mm:ss\",hmsv:\"h:mm:ss a v\",Hmsv:\"H:mm:ss v\",hmv:\"h:mm a v\",Hmv:\"H:mm v\",\"M\":\"L\",Md:\"d. M.\",MEd:\"E d. M.\",MMM:\"LLL\",MMMd:\"d. M.\",MMMEd:\"E d. M.\",MMMMd:\"d. MMMM\",MMMMEd:\"E d. MMMM\",ms:\"mm:ss\",\"y\":\"y\",yM:\"M/y\",yMd:\"d. M. y\",yMEd:\"E d. M. y\",yMMM:\"LLLL y\",yMMMd:\"d. M. y\",yMMMEd:\"E d. M. y\",yMMMM:\"LLLL y\",yMMMMd:\"d. MMMM y\",yMMMMEd:\"E d. MMMM y\",yQQQ:\"QQQ y\",yQQQQ:\"QQQQ y\"},dateFormats:{yMMMMEEEEd:\"EEEE d. MMMM y\",yMMMMd:\"d. MMMM y\",yMMMd:\"d. M. y\",yMd:\"dd.MM.yy\"},timeFormats:{hmmsszzzz:\"H:mm:ss zzzz\",hmsz:\"H:mm:ss z\",hms:\"H:mm:ss\",hm:\"H:mm\"}},calendars:{buddhist:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"led\",\"\u00fano\",\"b\u0159e\",\"dub\",\"kv\u011b\",\"\u010dvn\",\"\u010dvc\",\"srp\",\"z\u00e1\u0159\",\"\u0159\u00edj\",\"lis\",\"pro\"],long:[\"ledna\",\"\u00fanora\",\"b\u0159ezna\",\"dubna\",\"kv\u011btna\",\"\u010dervna\",\"\u010dervence\",\"srpna\",\"z\u00e1\u0159\u00ed\",\"\u0159\u00edjna\",\"listopadu\",\"prosince\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"BE\"],short:[\"BE\"],long:[\"BE\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},chinese:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"],long:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},coptic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],short:[\"Tout\",\"Baba\",\"Hator\",\"Kiahk\",\"Toba\",\"Amshir\",\"Baramhat\",\"Baramouda\",\"Bashans\",\"Paona\",\"Epep\",\"Mesra\",\"Nasie\"],long:[\"Tout\",\"Baba\",\"Hator\",\"Kiahk\",\"Toba\",\"Amshir\",\"Baramhat\",\"Baramouda\",\"Bashans\",\"Paona\",\"Epep\",\"Mesra\",\"Nasie\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"ERA0\",\"ERA1\"],short:[\"ERA0\",\"ERA1\"],long:[\"ERA0\",\"ERA1\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},dangi:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"],long:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},ethiopic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],short:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"],long:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"ERA0\",\"ERA1\"],short:[\"ERA0\",\"ERA1\"],long:[\"ERA0\",\"ERA1\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},ethioaa:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],short:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"],long:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"ERA0\"],short:[\"ERA0\"],long:[\"ERA0\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},generic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"],long:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"ERA0\",\"ERA1\"],short:[\"ERA0\",\"ERA1\"],long:[\"ERA0\",\"ERA1\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},gregory:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"led\",\"\u00fano\",\"b\u0159e\",\"dub\",\"kv\u011b\",\"\u010dvn\",\"\u010dvc\",\"srp\",\"z\u00e1\u0159\",\"\u0159\u00edj\",\"lis\",\"pro\"],long:[\"ledna\",\"\u00fanora\",\"b\u0159ezna\",\"dubna\",\"kv\u011btna\",\"\u010dervna\",\"\u010dervence\",\"srpna\",\"z\u00e1\u0159\u00ed\",\"\u0159\u00edjna\",\"listopadu\",\"prosince\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"p\u0159.n.l.\",\"n.l.\",\"BCE\",\"CE\"],short:[\"p\u0159. n. l.\",\"n. l.\",\"BCE\",\"CE\"],long:[\"p\u0159. n. l.\",\"n. l.\",\"BCE\",\"CE\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},hebrew:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"7\"],short:[\"Tishri\",\"Heshvan\",\"Kislev\",\"Tevet\",\"Shevat\",\"Adar I\",\"Adar\",\"Nisan\",\"Iyar\",\"Sivan\",\"Tamuz\",\"Av\",\"Elul\",\"Adar II\"],long:[\"Tishri\",\"Heshvan\",\"Kislev\",\"Tevet\",\"Shevat\",\"Adar I\",\"Adar\",\"Nisan\",\"Iyar\",\"Sivan\",\"Tamuz\",\"Av\",\"Elul\",\"Adar II\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"AM\"],short:[\"AM\"],long:[\"AM\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},indian:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Chaitra\",\"Vaisakha\",\"Jyaistha\",\"Asadha\",\"Sravana\",\"Bhadra\",\"Asvina\",\"Kartika\",\"Agrahayana\",\"Pausa\",\"Magha\",\"Phalguna\"],long:[\"Chaitra\",\"Vaisakha\",\"Jyaistha\",\"Asadha\",\"Sravana\",\"Bhadra\",\"Asvina\",\"Kartika\",\"Agrahayana\",\"Pausa\",\"Magha\",\"Phalguna\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"Saka\"],short:[\"Saka\"],long:[\"Saka\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},islamic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Muh.\",\"Saf.\",\"Rab. I\",\"Rab. II\",\"Jum. I\",\"Jum. II\",\"Raj.\",\"Sha.\",\"Ram.\",\"Shaw.\",\"Dhu\u02bbl-Q.\",\"Dhu\u02bbl-H.\"],long:[\"Muharram\",\"Safar\",\"Rabi\u02bb I\",\"Rabi\u02bb II\",\"Jumada I\",\"Jumada II\",\"Rajab\",\"Sha\u02bbban\",\"Ramadan\",\"Shawwal\",\"Dhu\u02bbl-Qi\u02bbdah\",\"Dhu\u02bbl-Hijjah\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"AH\"],short:[\"AH\"],long:[\"AH\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},islamicc:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Muh.\",\"Saf.\",\"Rab. I\",\"Rab. II\",\"Jum. I\",\"Jum. II\",\"Raj.\",\"Sha.\",\"Ram.\",\"Shaw.\",\"Dhu\u02bbl-Q.\",\"Dhu\u02bbl-H.\"],long:[\"Muharram\",\"Safar\",\"Rabi\u02bb I\",\"Rabi\u02bb II\",\"Jumada I\",\"Jumada II\",\"Rajab\",\"Sha\u02bbban\",\"Ramadan\",\"Shawwal\",\"Dhu\u02bbl-Qi\u02bbdah\",\"Dhu\u02bbl-Hijjah\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"AH\"],short:[\"AH\"],long:[\"AH\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},japanese:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"led\",\"\u00fano\",\"b\u0159e\",\"dub\",\"kv\u011b\",\"\u010dvn\",\"\u010dvc\",\"srp\",\"z\u00e1\u0159\",\"\u0159\u00edj\",\"lis\",\"pro\"],long:[\"ledna\",\"\u00fanora\",\"b\u0159ezna\",\"dubna\",\"kv\u011btna\",\"\u010dervna\",\"\u010dervence\",\"srpna\",\"z\u00e1\u0159\u00ed\",\"\u0159\u00edjna\",\"listopadu\",\"prosince\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"Taika (645\u2013650)\",\"Hakuchi (650\u2013671)\",\"Hakuh\u014d (672\u2013686)\",\"Shuch\u014d (686\u2013701)\",\"Taih\u014d (701\u2013704)\",\"Keiun (704\u2013708)\",\"Wad\u014d (708\u2013715)\",\"Reiki (715\u2013717)\",\"Y\u014dr\u014d (717\u2013724)\",\"Jinki (724\u2013729)\",\"Tenpy\u014d (729\u2013749)\",\"Tenpy\u014d-kamp\u014d (749-749)\",\"Tenpy\u014d-sh\u014dh\u014d (749-757)\",\"Tenpy\u014d-h\u014dji (757-765)\",\"Tenpy\u014d-jingo (765-767)\",\"Jingo-keiun (767-770)\",\"H\u014dki (770\u2013780)\",\"Ten-\u014d (781-782)\",\"Enryaku (782\u2013806)\",\"Daid\u014d (806\u2013810)\",\"K\u014dnin (810\u2013824)\",\"Tench\u014d (824\u2013834)\",\"J\u014dwa (834\u2013848)\",\"Kaj\u014d (848\u2013851)\",\"Ninju (851\u2013854)\",\"Saik\u014d (854\u2013857)\",\"Ten-an (857-859)\",\"J\u014dgan (859\u2013877)\",\"Gangy\u014d (877\u2013885)\",\"Ninna (885\u2013889)\",\"Kanpy\u014d (889\u2013898)\",\"Sh\u014dtai (898\u2013901)\",\"Engi (901\u2013923)\",\"Ench\u014d (923\u2013931)\",\"J\u014dhei (931\u2013938)\",\"Tengy\u014d (938\u2013947)\",\"Tenryaku (947\u2013957)\",\"Tentoku (957\u2013961)\",\"\u014cwa (961\u2013964)\",\"K\u014dh\u014d (964\u2013968)\",\"Anna (968\u2013970)\",\"Tenroku (970\u2013973)\",\"Ten\u2019en (973\u2013976)\",\"J\u014dgen (976\u2013978)\",\"Tengen (978\u2013983)\",\"Eikan (983\u2013985)\",\"Kanna (985\u2013987)\",\"Eien (987\u2013989)\",\"Eiso (989\u2013990)\",\"Sh\u014dryaku (990\u2013995)\",\"Ch\u014dtoku (995\u2013999)\",\"Ch\u014dh\u014d (999\u20131004)\",\"Kank\u014d (1004\u20131012)\",\"Ch\u014dwa (1012\u20131017)\",\"Kannin (1017\u20131021)\",\"Jian (1021\u20131024)\",\"Manju (1024\u20131028)\",\"Ch\u014dgen (1028\u20131037)\",\"Ch\u014dryaku (1037\u20131040)\",\"Ch\u014dky\u016b (1040\u20131044)\",\"Kantoku (1044\u20131046)\",\"Eish\u014d (1046\u20131053)\",\"Tengi (1053\u20131058)\",\"K\u014dhei (1058\u20131065)\",\"Jiryaku (1065\u20131069)\",\"Enky\u016b (1069\u20131074)\",\"Sh\u014dho (1074\u20131077)\",\"Sh\u014dryaku (1077\u20131081)\",\"Eih\u014d (1081\u20131084)\",\"\u014ctoku (1084\u20131087)\",\"Kanji (1087\u20131094)\",\"Kah\u014d (1094\u20131096)\",\"Eich\u014d (1096\u20131097)\",\"J\u014dtoku (1097\u20131099)\",\"K\u014dwa (1099\u20131104)\",\"Ch\u014dji (1104\u20131106)\",\"Kash\u014d (1106\u20131108)\",\"Tennin (1108\u20131110)\",\"Ten-ei (1110-1113)\",\"Eiky\u016b (1113\u20131118)\",\"Gen\u2019ei (1118\u20131120)\",\"H\u014dan (1120\u20131124)\",\"Tenji (1124\u20131126)\",\"Daiji (1126\u20131131)\",\"Tensh\u014d (1131\u20131132)\",\"Ch\u014dsh\u014d (1132\u20131135)\",\"H\u014den (1135\u20131141)\",\"Eiji (1141\u20131142)\",\"K\u014dji (1142\u20131144)\",\"Ten\u2019y\u014d (1144\u20131145)\",\"Ky\u016ban (1145\u20131151)\",\"Ninpei (1151\u20131154)\",\"Ky\u016bju (1154\u20131156)\",\"H\u014dgen (1156\u20131159)\",\"Heiji (1159\u20131160)\",\"Eiryaku (1160\u20131161)\",\"\u014cho (1161\u20131163)\",\"Ch\u014dkan (1163\u20131165)\",\"Eiman (1165\u20131166)\",\"Nin\u2019an (1166\u20131169)\",\"Ka\u014d (1169\u20131171)\",\"Sh\u014dan (1171\u20131175)\",\"Angen (1175\u20131177)\",\"Jish\u014d (1177\u20131181)\",\"Y\u014dwa (1181\u20131182)\",\"Juei (1182\u20131184)\",\"Genryaku (1184\u20131185)\",\"Bunji (1185\u20131190)\",\"Kenky\u016b (1190\u20131199)\",\"Sh\u014dji (1199\u20131201)\",\"Kennin (1201\u20131204)\",\"Genky\u016b (1204\u20131206)\",\"Ken\u2019ei (1206\u20131207)\",\"J\u014dgen (1207\u20131211)\",\"Kenryaku (1211\u20131213)\",\"Kenp\u014d (1213\u20131219)\",\"J\u014dky\u016b (1219\u20131222)\",\"J\u014d\u014d (1222\u20131224)\",\"Gennin (1224\u20131225)\",\"Karoku (1225\u20131227)\",\"Antei (1227\u20131229)\",\"Kanki (1229\u20131232)\",\"J\u014dei (1232\u20131233)\",\"Tenpuku (1233\u20131234)\",\"Bunryaku (1234\u20131235)\",\"Katei (1235\u20131238)\",\"Ryakunin (1238\u20131239)\",\"En\u2019\u014d (1239\u20131240)\",\"Ninji (1240\u20131243)\",\"Kangen (1243\u20131247)\",\"H\u014dji (1247\u20131249)\",\"Kench\u014d (1249\u20131256)\",\"K\u014dgen (1256\u20131257)\",\"Sh\u014dka (1257\u20131259)\",\"Sh\u014dgen (1259\u20131260)\",\"Bun\u2019\u014d (1260\u20131261)\",\"K\u014dch\u014d (1261\u20131264)\",\"Bun\u2019ei (1264\u20131275)\",\"Kenji (1275\u20131278)\",\"K\u014dan (1278\u20131288)\",\"Sh\u014d\u014d (1288\u20131293)\",\"Einin (1293\u20131299)\",\"Sh\u014dan (1299\u20131302)\",\"Kengen (1302\u20131303)\",\"Kagen (1303\u20131306)\",\"Tokuji (1306\u20131308)\",\"Enky\u014d (1308\u20131311)\",\"\u014cch\u014d (1311\u20131312)\",\"Sh\u014dwa (1312\u20131317)\",\"Bunp\u014d (1317\u20131319)\",\"Gen\u014d (1319\u20131321)\",\"Genk\u014d (1321\u20131324)\",\"Sh\u014dch\u016b (1324\u20131326)\",\"Karyaku (1326\u20131329)\",\"Gentoku (1329\u20131331)\",\"Genk\u014d (1331\u20131334)\",\"Kenmu (1334\u20131336)\",\"Engen (1336\u20131340)\",\"K\u014dkoku (1340\u20131346)\",\"Sh\u014dhei (1346\u20131370)\",\"Kentoku (1370\u20131372)\",\"Bunch\u016b (1372\u20131375)\",\"Tenju (1375\u20131379)\",\"K\u014dryaku (1379\u20131381)\",\"K\u014dwa (1381\u20131384)\",\"Gench\u016b (1384\u20131392)\",\"Meitoku (1384\u20131387)\",\"Kakei (1387\u20131389)\",\"K\u014d\u014d (1389\u20131390)\",\"Meitoku (1390\u20131394)\",\"\u014cei (1394\u20131428)\",\"Sh\u014dch\u014d (1428\u20131429)\",\"Eiky\u014d (1429\u20131441)\",\"Kakitsu (1441\u20131444)\",\"Bun\u2019an (1444\u20131449)\",\"H\u014dtoku (1449\u20131452)\",\"Ky\u014dtoku (1452\u20131455)\",\"K\u014dsh\u014d (1455\u20131457)\",\"Ch\u014droku (1457\u20131460)\",\"Kansh\u014d (1460\u20131466)\",\"Bunsh\u014d (1466\u20131467)\",\"\u014cnin (1467\u20131469)\",\"Bunmei (1469\u20131487)\",\"Ch\u014dky\u014d (1487\u20131489)\",\"Entoku (1489\u20131492)\",\"Mei\u014d (1492\u20131501)\",\"Bunki (1501\u20131504)\",\"Eish\u014d (1504\u20131521)\",\"Taiei (1521\u20131528)\",\"Ky\u014droku (1528\u20131532)\",\"Tenbun (1532\u20131555)\",\"K\u014dji (1555\u20131558)\",\"Eiroku (1558\u20131570)\",\"Genki (1570\u20131573)\",\"Tensh\u014d (1573\u20131592)\",\"Bunroku (1592\u20131596)\",\"Keich\u014d (1596\u20131615)\",\"Genna (1615\u20131624)\",\"Kan\u2019ei (1624\u20131644)\",\"Sh\u014dho (1644\u20131648)\",\"Keian (1648\u20131652)\",\"J\u014d\u014d (1652\u20131655)\",\"Meireki (1655\u20131658)\",\"Manji (1658\u20131661)\",\"Kanbun (1661\u20131673)\",\"Enp\u014d (1673\u20131681)\",\"Tenna (1681\u20131684)\",\"J\u014dky\u014d (1684\u20131688)\",\"Genroku (1688\u20131704)\",\"H\u014dei (1704\u20131711)\",\"Sh\u014dtoku (1711\u20131716)\",\"Ky\u014dh\u014d (1716\u20131736)\",\"Genbun (1736\u20131741)\",\"Kanp\u014d (1741\u20131744)\",\"Enky\u014d (1744\u20131748)\",\"Kan\u2019en (1748\u20131751)\",\"H\u014dreki (1751\u20131764)\",\"Meiwa (1764\u20131772)\",\"An\u2019ei (1772\u20131781)\",\"Tenmei (1781\u20131789)\",\"Kansei (1789\u20131801)\",\"Ky\u014dwa (1801\u20131804)\",\"Bunka (1804\u20131818)\",\"Bunsei (1818\u20131830)\",\"Tenp\u014d (1830\u20131844)\",\"K\u014dka (1844\u20131848)\",\"Kaei (1848\u20131854)\",\"Ansei (1854\u20131860)\",\"Man\u2019en (1860\u20131861)\",\"Bunky\u016b (1861\u20131864)\",\"Genji (1864\u20131865)\",\"Kei\u014d (1865\u20131868)\",\"M\",\"T\",\"S\",\"H\"],short:[\"Taika (645\u2013650)\",\"Hakuchi (650\u2013671)\",\"Hakuh\u014d (672\u2013686)\",\"Shuch\u014d (686\u2013701)\",\"Taih\u014d (701\u2013704)\",\"Keiun (704\u2013708)\",\"Wad\u014d (708\u2013715)\",\"Reiki (715\u2013717)\",\"Y\u014dr\u014d (717\u2013724)\",\"Jinki (724\u2013729)\",\"Tenpy\u014d (729\u2013749)\",\"Tenpy\u014d-kamp\u014d (749-749)\",\"Tenpy\u014d-sh\u014dh\u014d (749-757)\",\"Tenpy\u014d-h\u014dji (757-765)\",\"Tenpy\u014d-jingo (765-767)\",\"Jingo-keiun (767-770)\",\"H\u014dki (770\u2013780)\",\"Ten-\u014d (781-782)\",\"Enryaku (782\u2013806)\",\"Daid\u014d (806\u2013810)\",\"K\u014dnin (810\u2013824)\",\"Tench\u014d (824\u2013834)\",\"J\u014dwa (834\u2013848)\",\"Kaj\u014d (848\u2013851)\",\"Ninju (851\u2013854)\",\"Saik\u014d (854\u2013857)\",\"Ten-an (857-859)\",\"J\u014dgan (859\u2013877)\",\"Gangy\u014d (877\u2013885)\",\"Ninna (885\u2013889)\",\"Kanpy\u014d (889\u2013898)\",\"Sh\u014dtai (898\u2013901)\",\"Engi (901\u2013923)\",\"Ench\u014d (923\u2013931)\",\"J\u014dhei (931\u2013938)\",\"Tengy\u014d (938\u2013947)\",\"Tenryaku (947\u2013957)\",\"Tentoku (957\u2013961)\",\"\u014cwa (961\u2013964)\",\"K\u014dh\u014d (964\u2013968)\",\"Anna (968\u2013970)\",\"Tenroku (970\u2013973)\",\"Ten\u2019en (973\u2013976)\",\"J\u014dgen (976\u2013978)\",\"Tengen (978\u2013983)\",\"Eikan (983\u2013985)\",\"Kanna (985\u2013987)\",\"Eien (987\u2013989)\",\"Eiso (989\u2013990)\",\"Sh\u014dryaku (990\u2013995)\",\"Ch\u014dtoku (995\u2013999)\",\"Ch\u014dh\u014d (999\u20131004)\",\"Kank\u014d (1004\u20131012)\",\"Ch\u014dwa (1012\u20131017)\",\"Kannin (1017\u20131021)\",\"Jian (1021\u20131024)\",\"Manju (1024\u20131028)\",\"Ch\u014dgen (1028\u20131037)\",\"Ch\u014dryaku (1037\u20131040)\",\"Ch\u014dky\u016b (1040\u20131044)\",\"Kantoku (1044\u20131046)\",\"Eish\u014d (1046\u20131053)\",\"Tengi (1053\u20131058)\",\"K\u014dhei (1058\u20131065)\",\"Jiryaku (1065\u20131069)\",\"Enky\u016b (1069\u20131074)\",\"Sh\u014dho (1074\u20131077)\",\"Sh\u014dryaku (1077\u20131081)\",\"Eih\u014d (1081\u20131084)\",\"\u014ctoku (1084\u20131087)\",\"Kanji (1087\u20131094)\",\"Kah\u014d (1094\u20131096)\",\"Eich\u014d (1096\u20131097)\",\"J\u014dtoku (1097\u20131099)\",\"K\u014dwa (1099\u20131104)\",\"Ch\u014dji (1104\u20131106)\",\"Kash\u014d (1106\u20131108)\",\"Tennin (1108\u20131110)\",\"Ten-ei (1110-1113)\",\"Eiky\u016b (1113\u20131118)\",\"Gen\u2019ei (1118\u20131120)\",\"H\u014dan (1120\u20131124)\",\"Tenji (1124\u20131126)\",\"Daiji (1126\u20131131)\",\"Tensh\u014d (1131\u20131132)\",\"Ch\u014dsh\u014d (1132\u20131135)\",\"H\u014den (1135\u20131141)\",\"Eiji (1141\u20131142)\",\"K\u014dji (1142\u20131144)\",\"Ten\u2019y\u014d (1144\u20131145)\",\"Ky\u016ban (1145\u20131151)\",\"Ninpei (1151\u20131154)\",\"Ky\u016bju (1154\u20131156)\",\"H\u014dgen (1156\u20131159)\",\"Heiji (1159\u20131160)\",\"Eiryaku (1160\u20131161)\",\"\u014cho (1161\u20131163)\",\"Ch\u014dkan (1163\u20131165)\",\"Eiman (1165\u20131166)\",\"Nin\u2019an (1166\u20131169)\",\"Ka\u014d (1169\u20131171)\",\"Sh\u014dan (1171\u20131175)\",\"Angen (1175\u20131177)\",\"Jish\u014d (1177\u20131181)\",\"Y\u014dwa (1181\u20131182)\",\"Juei (1182\u20131184)\",\"Genryaku (1184\u20131185)\",\"Bunji (1185\u20131190)\",\"Kenky\u016b (1190\u20131199)\",\"Sh\u014dji (1199\u20131201)\",\"Kennin (1201\u20131204)\",\"Genky\u016b (1204\u20131206)\",\"Ken\u2019ei (1206\u20131207)\",\"J\u014dgen (1207\u20131211)\",\"Kenryaku (1211\u20131213)\",\"Kenp\u014d (1213\u20131219)\",\"J\u014dky\u016b (1219\u20131222)\",\"J\u014d\u014d (1222\u20131224)\",\"Gennin (1224\u20131225)\",\"Karoku (1225\u20131227)\",\"Antei (1227\u20131229)\",\"Kanki (1229\u20131232)\",\"J\u014dei (1232\u20131233)\",\"Tenpuku (1233\u20131234)\",\"Bunryaku (1234\u20131235)\",\"Katei (1235\u20131238)\",\"Ryakunin (1238\u20131239)\",\"En\u2019\u014d (1239\u20131240)\",\"Ninji (1240\u20131243)\",\"Kangen (1243\u20131247)\",\"H\u014dji (1247\u20131249)\",\"Kench\u014d (1249\u20131256)\",\"K\u014dgen (1256\u20131257)\",\"Sh\u014dka (1257\u20131259)\",\"Sh\u014dgen (1259\u20131260)\",\"Bun\u2019\u014d (1260\u20131261)\",\"K\u014dch\u014d (1261\u20131264)\",\"Bun\u2019ei (1264\u20131275)\",\"Kenji (1275\u20131278)\",\"K\u014dan (1278\u20131288)\",\"Sh\u014d\u014d (1288\u20131293)\",\"Einin (1293\u20131299)\",\"Sh\u014dan (1299\u20131302)\",\"Kengen (1302\u20131303)\",\"Kagen (1303\u20131306)\",\"Tokuji (1306\u20131308)\",\"Enky\u014d (1308\u20131311)\",\"\u014cch\u014d (1311\u20131312)\",\"Sh\u014dwa (1312\u20131317)\",\"Bunp\u014d (1317\u20131319)\",\"Gen\u014d (1319\u20131321)\",\"Genk\u014d (1321\u20131324)\",\"Sh\u014dch\u016b (1324\u20131326)\",\"Karyaku (1326\u20131329)\",\"Gentoku (1329\u20131331)\",\"Genk\u014d (1331\u20131334)\",\"Kenmu (1334\u20131336)\",\"Engen (1336\u20131340)\",\"K\u014dkoku (1340\u20131346)\",\"Sh\u014dhei (1346\u20131370)\",\"Kentoku (1370\u20131372)\",\"Bunch\u016b (1372\u20131375)\",\"Tenju (1375\u20131379)\",\"K\u014dryaku (1379\u20131381)\",\"K\u014dwa (1381\u20131384)\",\"Gench\u016b (1384\u20131392)\",\"Meitoku (1384\u20131387)\",\"Kakei (1387\u20131389)\",\"K\u014d\u014d (1389\u20131390)\",\"Meitoku (1390\u20131394)\",\"\u014cei (1394\u20131428)\",\"Sh\u014dch\u014d (1428\u20131429)\",\"Eiky\u014d (1429\u20131441)\",\"Kakitsu (1441\u20131444)\",\"Bun\u2019an (1444\u20131449)\",\"H\u014dtoku (1449\u20131452)\",\"Ky\u014dtoku (1452\u20131455)\",\"K\u014dsh\u014d (1455\u20131457)\",\"Ch\u014droku (1457\u20131460)\",\"Kansh\u014d (1460\u20131466)\",\"Bunsh\u014d (1466\u20131467)\",\"\u014cnin (1467\u20131469)\",\"Bunmei (1469\u20131487)\",\"Ch\u014dky\u014d (1487\u20131489)\",\"Entoku (1489\u20131492)\",\"Mei\u014d (1492\u20131501)\",\"Bunki (1501\u20131504)\",\"Eish\u014d (1504\u20131521)\",\"Taiei (1521\u20131528)\",\"Ky\u014droku (1528\u20131532)\",\"Tenbun (1532\u20131555)\",\"K\u014dji (1555\u20131558)\",\"Eiroku (1558\u20131570)\",\"Genki (1570\u20131573)\",\"Tensh\u014d (1573\u20131592)\",\"Bunroku (1592\u20131596)\",\"Keich\u014d (1596\u20131615)\",\"Genna (1615\u20131624)\",\"Kan\u2019ei (1624\u20131644)\",\"Sh\u014dho (1644\u20131648)\",\"Keian (1648\u20131652)\",\"J\u014d\u014d (1652\u20131655)\",\"Meireki (1655\u20131658)\",\"Manji (1658\u20131661)\",\"Kanbun (1661\u20131673)\",\"Enp\u014d (1673\u20131681)\",\"Tenna (1681\u20131684)\",\"J\u014dky\u014d (1684\u20131688)\",\"Genroku (1688\u20131704)\",\"H\u014dei (1704\u20131711)\",\"Sh\u014dtoku (1711\u20131716)\",\"Ky\u014dh\u014d (1716\u20131736)\",\"Genbun (1736\u20131741)\",\"Kanp\u014d (1741\u20131744)\",\"Enky\u014d (1744\u20131748)\",\"Kan\u2019en (1748\u20131751)\",\"H\u014dreki (1751\u20131764)\",\"Meiwa (1764\u20131772)\",\"An\u2019ei (1772\u20131781)\",\"Tenmei (1781\u20131789)\",\"Kansei (1789\u20131801)\",\"Ky\u014dwa (1801\u20131804)\",\"Bunka (1804\u20131818)\",\"Bunsei (1818\u20131830)\",\"Tenp\u014d (1830\u20131844)\",\"K\u014dka (1844\u20131848)\",\"Kaei (1848\u20131854)\",\"Ansei (1854\u20131860)\",\"Man\u2019en (1860\u20131861)\",\"Bunky\u016b (1861\u20131864)\",\"Genji (1864\u20131865)\",\"Kei\u014d (1865\u20131868)\",\"Meiji\",\"Taish\u014d\",\"Sh\u014dwa\",\"Heisei\"],long:[\"Taika (645\u2013650)\",\"Hakuchi (650\u2013671)\",\"Hakuh\u014d (672\u2013686)\",\"Shuch\u014d (686\u2013701)\",\"Taih\u014d (701\u2013704)\",\"Keiun (704\u2013708)\",\"Wad\u014d (708\u2013715)\",\"Reiki (715\u2013717)\",\"Y\u014dr\u014d (717\u2013724)\",\"Jinki (724\u2013729)\",\"Tenpy\u014d (729\u2013749)\",\"Tenpy\u014d-kamp\u014d (749-749)\",\"Tenpy\u014d-sh\u014dh\u014d (749-757)\",\"Tenpy\u014d-h\u014dji (757-765)\",\"Tenpy\u014d-jingo (765-767)\",\"Jingo-keiun (767-770)\",\"H\u014dki (770\u2013780)\",\"Ten-\u014d (781-782)\",\"Enryaku (782\u2013806)\",\"Daid\u014d (806\u2013810)\",\"K\u014dnin (810\u2013824)\",\"Tench\u014d (824\u2013834)\",\"J\u014dwa (834\u2013848)\",\"Kaj\u014d (848\u2013851)\",\"Ninju (851\u2013854)\",\"Saik\u014d (854\u2013857)\",\"Ten-an (857-859)\",\"J\u014dgan (859\u2013877)\",\"Gangy\u014d (877\u2013885)\",\"Ninna (885\u2013889)\",\"Kanpy\u014d (889\u2013898)\",\"Sh\u014dtai (898\u2013901)\",\"Engi (901\u2013923)\",\"Ench\u014d (923\u2013931)\",\"J\u014dhei (931\u2013938)\",\"Tengy\u014d (938\u2013947)\",\"Tenryaku (947\u2013957)\",\"Tentoku (957\u2013961)\",\"\u014cwa (961\u2013964)\",\"K\u014dh\u014d (964\u2013968)\",\"Anna (968\u2013970)\",\"Tenroku (970\u2013973)\",\"Ten\u2019en (973\u2013976)\",\"J\u014dgen (976\u2013978)\",\"Tengen (978\u2013983)\",\"Eikan (983\u2013985)\",\"Kanna (985\u2013987)\",\"Eien (987\u2013989)\",\"Eiso (989\u2013990)\",\"Sh\u014dryaku (990\u2013995)\",\"Ch\u014dtoku (995\u2013999)\",\"Ch\u014dh\u014d (999\u20131004)\",\"Kank\u014d (1004\u20131012)\",\"Ch\u014dwa (1012\u20131017)\",\"Kannin (1017\u20131021)\",\"Jian (1021\u20131024)\",\"Manju (1024\u20131028)\",\"Ch\u014dgen (1028\u20131037)\",\"Ch\u014dryaku (1037\u20131040)\",\"Ch\u014dky\u016b (1040\u20131044)\",\"Kantoku (1044\u20131046)\",\"Eish\u014d (1046\u20131053)\",\"Tengi (1053\u20131058)\",\"K\u014dhei (1058\u20131065)\",\"Jiryaku (1065\u20131069)\",\"Enky\u016b (1069\u20131074)\",\"Sh\u014dho (1074\u20131077)\",\"Sh\u014dryaku (1077\u20131081)\",\"Eih\u014d (1081\u20131084)\",\"\u014ctoku (1084\u20131087)\",\"Kanji (1087\u20131094)\",\"Kah\u014d (1094\u20131096)\",\"Eich\u014d (1096\u20131097)\",\"J\u014dtoku (1097\u20131099)\",\"K\u014dwa (1099\u20131104)\",\"Ch\u014dji (1104\u20131106)\",\"Kash\u014d (1106\u20131108)\",\"Tennin (1108\u20131110)\",\"Ten-ei (1110-1113)\",\"Eiky\u016b (1113\u20131118)\",\"Gen\u2019ei (1118\u20131120)\",\"H\u014dan (1120\u20131124)\",\"Tenji (1124\u20131126)\",\"Daiji (1126\u20131131)\",\"Tensh\u014d (1131\u20131132)\",\"Ch\u014dsh\u014d (1132\u20131135)\",\"H\u014den (1135\u20131141)\",\"Eiji (1141\u20131142)\",\"K\u014dji (1142\u20131144)\",\"Ten\u2019y\u014d (1144\u20131145)\",\"Ky\u016ban (1145\u20131151)\",\"Ninpei (1151\u20131154)\",\"Ky\u016bju (1154\u20131156)\",\"H\u014dgen (1156\u20131159)\",\"Heiji (1159\u20131160)\",\"Eiryaku (1160\u20131161)\",\"\u014cho (1161\u20131163)\",\"Ch\u014dkan (1163\u20131165)\",\"Eiman (1165\u20131166)\",\"Nin\u2019an (1166\u20131169)\",\"Ka\u014d (1169\u20131171)\",\"Sh\u014dan (1171\u20131175)\",\"Angen (1175\u20131177)\",\"Jish\u014d (1177\u20131181)\",\"Y\u014dwa (1181\u20131182)\",\"Juei (1182\u20131184)\",\"Genryaku (1184\u20131185)\",\"Bunji (1185\u20131190)\",\"Kenky\u016b (1190\u20131199)\",\"Sh\u014dji (1199\u20131201)\",\"Kennin (1201\u20131204)\",\"Genky\u016b (1204\u20131206)\",\"Ken\u2019ei (1206\u20131207)\",\"J\u014dgen (1207\u20131211)\",\"Kenryaku (1211\u20131213)\",\"Kenp\u014d (1213\u20131219)\",\"J\u014dky\u016b (1219\u20131222)\",\"J\u014d\u014d (1222\u20131224)\",\"Gennin (1224\u20131225)\",\"Karoku (1225\u20131227)\",\"Antei (1227\u20131229)\",\"Kanki (1229\u20131232)\",\"J\u014dei (1232\u20131233)\",\"Tenpuku (1233\u20131234)\",\"Bunryaku (1234\u20131235)\",\"Katei (1235\u20131238)\",\"Ryakunin (1238\u20131239)\",\"En\u2019\u014d (1239\u20131240)\",\"Ninji (1240\u20131243)\",\"Kangen (1243\u20131247)\",\"H\u014dji (1247\u20131249)\",\"Kench\u014d (1249\u20131256)\",\"K\u014dgen (1256\u20131257)\",\"Sh\u014dka (1257\u20131259)\",\"Sh\u014dgen (1259\u20131260)\",\"Bun\u2019\u014d (1260\u20131261)\",\"K\u014dch\u014d (1261\u20131264)\",\"Bun\u2019ei (1264\u20131275)\",\"Kenji (1275\u20131278)\",\"K\u014dan (1278\u20131288)\",\"Sh\u014d\u014d (1288\u20131293)\",\"Einin (1293\u20131299)\",\"Sh\u014dan (1299\u20131302)\",\"Kengen (1302\u20131303)\",\"Kagen (1303\u20131306)\",\"Tokuji (1306\u20131308)\",\"Enky\u014d (1308\u20131311)\",\"\u014cch\u014d (1311\u20131312)\",\"Sh\u014dwa (1312\u20131317)\",\"Bunp\u014d (1317\u20131319)\",\"Gen\u014d (1319\u20131321)\",\"Genk\u014d (1321\u20131324)\",\"Sh\u014dch\u016b (1324\u20131326)\",\"Karyaku (1326\u20131329)\",\"Gentoku (1329\u20131331)\",\"Genk\u014d (1331\u20131334)\",\"Kenmu (1334\u20131336)\",\"Engen (1336\u20131340)\",\"K\u014dkoku (1340\u20131346)\",\"Sh\u014dhei (1346\u20131370)\",\"Kentoku (1370\u20131372)\",\"Bunch\u016b (1372\u20131375)\",\"Tenju (1375\u20131379)\",\"K\u014dryaku (1379\u20131381)\",\"K\u014dwa (1381\u20131384)\",\"Gench\u016b (1384\u20131392)\",\"Meitoku (1384\u20131387)\",\"Kakei (1387\u20131389)\",\"K\u014d\u014d (1389\u20131390)\",\"Meitoku (1390\u20131394)\",\"\u014cei (1394\u20131428)\",\"Sh\u014dch\u014d (1428\u20131429)\",\"Eiky\u014d (1429\u20131441)\",\"Kakitsu (1441\u20131444)\",\"Bun\u2019an (1444\u20131449)\",\"H\u014dtoku (1449\u20131452)\",\"Ky\u014dtoku (1452\u20131455)\",\"K\u014dsh\u014d (1455\u20131457)\",\"Ch\u014droku (1457\u20131460)\",\"Kansh\u014d (1460\u20131466)\",\"Bunsh\u014d (1466\u20131467)\",\"\u014cnin (1467\u20131469)\",\"Bunmei (1469\u20131487)\",\"Ch\u014dky\u014d (1487\u20131489)\",\"Entoku (1489\u20131492)\",\"Mei\u014d (1492\u20131501)\",\"Bunki (1501\u20131504)\",\"Eish\u014d (1504\u20131521)\",\"Taiei (1521\u20131528)\",\"Ky\u014droku (1528\u20131532)\",\"Tenbun (1532\u20131555)\",\"K\u014dji (1555\u20131558)\",\"Eiroku (1558\u20131570)\",\"Genki (1570\u20131573)\",\"Tensh\u014d (1573\u20131592)\",\"Bunroku (1592\u20131596)\",\"Keich\u014d (1596\u20131615)\",\"Genna (1615\u20131624)\",\"Kan\u2019ei (1624\u20131644)\",\"Sh\u014dho (1644\u20131648)\",\"Keian (1648\u20131652)\",\"J\u014d\u014d (1652\u20131655)\",\"Meireki (1655\u20131658)\",\"Manji (1658\u20131661)\",\"Kanbun (1661\u20131673)\",\"Enp\u014d (1673\u20131681)\",\"Tenna (1681\u20131684)\",\"J\u014dky\u014d (1684\u20131688)\",\"Genroku (1688\u20131704)\",\"H\u014dei (1704\u20131711)\",\"Sh\u014dtoku (1711\u20131716)\",\"Ky\u014dh\u014d (1716\u20131736)\",\"Genbun (1736\u20131741)\",\"Kanp\u014d (1741\u20131744)\",\"Enky\u014d (1744\u20131748)\",\"Kan\u2019en (1748\u20131751)\",\"H\u014dreki (1751\u20131764)\",\"Meiwa (1764\u20131772)\",\"An\u2019ei (1772\u20131781)\",\"Tenmei (1781\u20131789)\",\"Kansei (1789\u20131801)\",\"Ky\u014dwa (1801\u20131804)\",\"Bunka (1804\u20131818)\",\"Bunsei (1818\u20131830)\",\"Tenp\u014d (1830\u20131844)\",\"K\u014dka (1844\u20131848)\",\"Kaei (1848\u20131854)\",\"Ansei (1854\u20131860)\",\"Man\u2019en (1860\u20131861)\",\"Bunky\u016b (1861\u20131864)\",\"Genji (1864\u20131865)\",\"Kei\u014d (1865\u20131868)\",\"Meiji\",\"Taish\u014d\",\"Sh\u014dwa\",\"Heisei\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},persian:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Farvardin\",\"Ordibehesht\",\"Khordad\",\"Tir\",\"Mordad\",\"Shahrivar\",\"Mehr\",\"Aban\",\"Azar\",\"Dey\",\"Bahman\",\"Esfand\"],long:[\"Farvardin\",\"Ordibehesht\",\"Khordad\",\"Tir\",\"Mordad\",\"Shahrivar\",\"Mehr\",\"Aban\",\"Azar\",\"Dey\",\"Bahman\",\"Esfand\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"AP\"],short:[\"AP\"],long:[\"AP\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}},roc:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"led\",\"\u00fano\",\"b\u0159e\",\"dub\",\"kv\u011b\",\"\u010dvn\",\"\u010dvc\",\"srp\",\"z\u00e1\u0159\",\"\u0159\u00edj\",\"lis\",\"pro\"],long:[\"ledna\",\"\u00fanora\",\"b\u0159ezna\",\"dubna\",\"kv\u011btna\",\"\u010dervna\",\"\u010dervence\",\"srpna\",\"z\u00e1\u0159\u00ed\",\"\u0159\u00edjna\",\"listopadu\",\"prosince\"]},days:{narrow:[\"N\",\"P\",\"\u00da\",\"S\",\"\u010c\",\"P\",\"S\"],short:[\"ne\",\"po\",\"\u00fat\",\"st\",\"\u010dt\",\"p\u00e1\",\"so\"],long:[\"ned\u011ble\",\"pond\u011bl\u00ed\",\"\u00fater\u00fd\",\"st\u0159eda\",\"\u010dtvrtek\",\"p\u00e1tek\",\"sobota\"]},eras:{narrow:[\"P\u0159ed R. O. C.\",\"R.O.C.\"],short:[\"P\u0159ed R. O. C.\",\"R.O.C.\"],long:[\"P\u0159ed R. O. C.\",\"R.O.C.\"]},dayPeriods:{am:\"dop.\",pm:\"odp.\"}}}},number:{nu:[\"latn\"],patterns:{decimal:{positivePattern:\"{number}\",negativePattern:\"{minusSign}{number}\"},currency:{positivePattern:\"{number} {currency}\",negativePattern:\"{minusSign}{number} {currency}\"},percent:{positivePattern:\"{number} {percentSign}\",negativePattern:\"{minusSign}{number} {percentSign}\"}},symbols:{latn:{decimal:\",\",group:\" \",nan:\"NaN\",plusSign:\"+\",minusSign:\"-\",percentSign:\"%\",infinity:\"\u221e\"}},currencies:{AUD:\"AU$\",BRL:\"R$\",CAD:\"CA$\",CNY:\"CN\u00a5\",CSK:\"K\u010ds\",CZK:\"K\u010d\",EUR:\"\u20ac\",GBP:\"\u00a3\",HKD:\"HK$\",JPY:\"JP\u00a5\",KRW:\"\u20a9\",MXN:\"MX$\",NZD:\"NZ$\",TWD:\"NT$\",USD:\"US$\",XAF:\"FCFA\",XCD:\"EC$\",XEU:\"ECU\",XOF:\"CFA\",XPF:\"CFPF\"}}});IntlPolyfill.__addLocaleData({locale:\"en\",date:{ca:[\"gregory\",\"buddhist\",\"chinese\",\"coptic\",\"dangi\",\"ethioaa\",\"ethiopic\",\"generic\",\"hebrew\",\"indian\",\"islamic\",\"islamicc\",\"japanese\",\"persian\",\"roc\"],hourNo0:true,hour12:true,formats:{short:\"{1}, {0}\",medium:\"{1}, {0}\",full:\"{1} 'at' {0}\",long:\"{1} 'at' {0}\",availableFormats:{\"d\":\"d\",\"E\":\"ccc\",Ed:\"d E\",Ehm:\"E h:mm a\",EHm:\"E HH:mm\",Ehms:\"E h:mm:ss a\",EHms:\"E HH:mm:ss\",Gy:\"y G\",GyMMM:\"MMM y G\",GyMMMd:\"MMM d, y G\",GyMMMEd:\"E, MMM d, y G\",\"h\":\"h a\",\"H\":\"HH\",hm:\"h:mm a\",Hm:\"HH:mm\",hms:\"h:mm:ss a\",Hms:\"HH:mm:ss\",hmsv:\"h:mm:ss a v\",Hmsv:\"HH:mm:ss v\",hmv:\"h:mm a v\",Hmv:\"HH:mm v\",\"M\":\"L\",Md:\"M/d\",MEd:\"E, M/d\",MMM:\"LLL\",MMMd:\"MMM d\",MMMEd:\"E, MMM d\",MMMMd:\"MMMM d\",ms:\"mm:ss\",\"y\":\"y\",yM:\"M/y\",yMd:\"M/d/y\",yMEd:\"E, M/d/y\",yMMM:\"MMM y\",yMMMd:\"MMM d, y\",yMMMEd:\"E, MMM d, y\",yMMMM:\"MMMM y\",yQQQ:\"QQQ y\",yQQQQ:\"QQQQ y\"},dateFormats:{yMMMMEEEEd:\"EEEE, MMMM d, y\",yMMMMd:\"MMMM d, y\",yMMMd:\"MMM d, y\",yMd:\"M/d/yy\"},timeFormats:{hmmsszzzz:\"h:mm:ss a zzzz\",hmsz:\"h:mm:ss a z\",hms:\"h:mm:ss a\",hm:\"h:mm a\"}},calendars:{buddhist:{months:{narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],short:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],long:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"BE\"],short:[\"BE\"],long:[\"BE\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},chinese:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Mo1\",\"Mo2\",\"Mo3\",\"Mo4\",\"Mo5\",\"Mo6\",\"Mo7\",\"Mo8\",\"Mo9\",\"Mo10\",\"Mo11\",\"Mo12\"],long:[\"Month1\",\"Month2\",\"Month3\",\"Month4\",\"Month5\",\"Month6\",\"Month7\",\"Month8\",\"Month9\",\"Month10\",\"Month11\",\"Month12\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},coptic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],short:[\"Tout\",\"Baba\",\"Hator\",\"Kiahk\",\"Toba\",\"Amshir\",\"Baramhat\",\"Baramouda\",\"Bashans\",\"Paona\",\"Epep\",\"Mesra\",\"Nasie\"],long:[\"Tout\",\"Baba\",\"Hator\",\"Kiahk\",\"Toba\",\"Amshir\",\"Baramhat\",\"Baramouda\",\"Bashans\",\"Paona\",\"Epep\",\"Mesra\",\"Nasie\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"ERA0\",\"ERA1\"],short:[\"ERA0\",\"ERA1\"],long:[\"ERA0\",\"ERA1\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},dangi:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Mo1\",\"Mo2\",\"Mo3\",\"Mo4\",\"Mo5\",\"Mo6\",\"Mo7\",\"Mo8\",\"Mo9\",\"Mo10\",\"Mo11\",\"Mo12\"],long:[\"Month1\",\"Month2\",\"Month3\",\"Month4\",\"Month5\",\"Month6\",\"Month7\",\"Month8\",\"Month9\",\"Month10\",\"Month11\",\"Month12\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},ethiopic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],short:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"],long:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"ERA0\",\"ERA1\"],short:[\"ERA0\",\"ERA1\"],long:[\"ERA0\",\"ERA1\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},ethioaa:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\"],short:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"],long:[\"Meskerem\",\"Tekemt\",\"Hedar\",\"Tahsas\",\"Ter\",\"Yekatit\",\"Megabit\",\"Miazia\",\"Genbot\",\"Sene\",\"Hamle\",\"Nehasse\",\"Pagumen\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"ERA0\"],short:[\"ERA0\"],long:[\"ERA0\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},generic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"],long:[\"M01\",\"M02\",\"M03\",\"M04\",\"M05\",\"M06\",\"M07\",\"M08\",\"M09\",\"M10\",\"M11\",\"M12\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"ERA0\",\"ERA1\"],short:[\"ERA0\",\"ERA1\"],long:[\"ERA0\",\"ERA1\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},gregory:{months:{narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],short:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],long:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"B\",\"A\",\"BCE\",\"CE\"],short:[\"BC\",\"AD\",\"BCE\",\"CE\"],long:[\"Before Christ\",\"Anno Domini\",\"Before Common Era\",\"Common Era\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},hebrew:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"7\"],short:[\"Tishri\",\"Heshvan\",\"Kislev\",\"Tevet\",\"Shevat\",\"Adar I\",\"Adar\",\"Nisan\",\"Iyar\",\"Sivan\",\"Tamuz\",\"Av\",\"Elul\",\"Adar II\"],long:[\"Tishri\",\"Heshvan\",\"Kislev\",\"Tevet\",\"Shevat\",\"Adar I\",\"Adar\",\"Nisan\",\"Iyar\",\"Sivan\",\"Tamuz\",\"Av\",\"Elul\",\"Adar II\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"AM\"],short:[\"AM\"],long:[\"AM\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},indian:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Chaitra\",\"Vaisakha\",\"Jyaistha\",\"Asadha\",\"Sravana\",\"Bhadra\",\"Asvina\",\"Kartika\",\"Agrahayana\",\"Pausa\",\"Magha\",\"Phalguna\"],long:[\"Chaitra\",\"Vaisakha\",\"Jyaistha\",\"Asadha\",\"Sravana\",\"Bhadra\",\"Asvina\",\"Kartika\",\"Agrahayana\",\"Pausa\",\"Magha\",\"Phalguna\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"Saka\"],short:[\"Saka\"],long:[\"Saka\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},islamic:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Muh.\",\"Saf.\",\"Rab. I\",\"Rab. II\",\"Jum. I\",\"Jum. II\",\"Raj.\",\"Sha.\",\"Ram.\",\"Shaw.\",\"Dhu\u02bbl-Q.\",\"Dhu\u02bbl-H.\"],long:[\"Muharram\",\"Safar\",\"Rabi\u02bb I\",\"Rabi\u02bb II\",\"Jumada I\",\"Jumada II\",\"Rajab\",\"Sha\u02bbban\",\"Ramadan\",\"Shawwal\",\"Dhu\u02bbl-Qi\u02bbdah\",\"Dhu\u02bbl-Hijjah\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"AH\"],short:[\"AH\"],long:[\"AH\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},islamicc:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Muh.\",\"Saf.\",\"Rab. I\",\"Rab. II\",\"Jum. I\",\"Jum. II\",\"Raj.\",\"Sha.\",\"Ram.\",\"Shaw.\",\"Dhu\u02bbl-Q.\",\"Dhu\u02bbl-H.\"],long:[\"Muharram\",\"Safar\",\"Rabi\u02bb I\",\"Rabi\u02bb II\",\"Jumada I\",\"Jumada II\",\"Rajab\",\"Sha\u02bbban\",\"Ramadan\",\"Shawwal\",\"Dhu\u02bbl-Qi\u02bbdah\",\"Dhu\u02bbl-Hijjah\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"AH\"],short:[\"AH\"],long:[\"AH\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},japanese:{months:{narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],short:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],long:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"Taika (645\u2013650)\",\"Hakuchi (650\u2013671)\",\"Hakuh\u014d (672\u2013686)\",\"Shuch\u014d (686\u2013701)\",\"Taih\u014d (701\u2013704)\",\"Keiun (704\u2013708)\",\"Wad\u014d (708\u2013715)\",\"Reiki (715\u2013717)\",\"Y\u014dr\u014d (717\u2013724)\",\"Jinki (724\u2013729)\",\"Tenpy\u014d (729\u2013749)\",\"Tenpy\u014d-kamp\u014d (749-749)\",\"Tenpy\u014d-sh\u014dh\u014d (749-757)\",\"Tenpy\u014d-h\u014dji (757-765)\",\"Tenpy\u014d-jingo (765-767)\",\"Jingo-keiun (767-770)\",\"H\u014dki (770\u2013780)\",\"Ten-\u014d (781-782)\",\"Enryaku (782\u2013806)\",\"Daid\u014d (806\u2013810)\",\"K\u014dnin (810\u2013824)\",\"Tench\u014d (824\u2013834)\",\"J\u014dwa (834\u2013848)\",\"Kaj\u014d (848\u2013851)\",\"Ninju (851\u2013854)\",\"Saik\u014d (854\u2013857)\",\"Ten-an (857-859)\",\"J\u014dgan (859\u2013877)\",\"Gangy\u014d (877\u2013885)\",\"Ninna (885\u2013889)\",\"Kanpy\u014d (889\u2013898)\",\"Sh\u014dtai (898\u2013901)\",\"Engi (901\u2013923)\",\"Ench\u014d (923\u2013931)\",\"J\u014dhei (931\u2013938)\",\"Tengy\u014d (938\u2013947)\",\"Tenryaku (947\u2013957)\",\"Tentoku (957\u2013961)\",\"\u014cwa (961\u2013964)\",\"K\u014dh\u014d (964\u2013968)\",\"Anna (968\u2013970)\",\"Tenroku (970\u2013973)\",\"Ten\u2019en (973\u2013976)\",\"J\u014dgen (976\u2013978)\",\"Tengen (978\u2013983)\",\"Eikan (983\u2013985)\",\"Kanna (985\u2013987)\",\"Eien (987\u2013989)\",\"Eiso (989\u2013990)\",\"Sh\u014dryaku (990\u2013995)\",\"Ch\u014dtoku (995\u2013999)\",\"Ch\u014dh\u014d (999\u20131004)\",\"Kank\u014d (1004\u20131012)\",\"Ch\u014dwa (1012\u20131017)\",\"Kannin (1017\u20131021)\",\"Jian (1021\u20131024)\",\"Manju (1024\u20131028)\",\"Ch\u014dgen (1028\u20131037)\",\"Ch\u014dryaku (1037\u20131040)\",\"Ch\u014dky\u016b (1040\u20131044)\",\"Kantoku (1044\u20131046)\",\"Eish\u014d (1046\u20131053)\",\"Tengi (1053\u20131058)\",\"K\u014dhei (1058\u20131065)\",\"Jiryaku (1065\u20131069)\",\"Enky\u016b (1069\u20131074)\",\"Sh\u014dho (1074\u20131077)\",\"Sh\u014dryaku (1077\u20131081)\",\"Eih\u014d (1081\u20131084)\",\"\u014ctoku (1084\u20131087)\",\"Kanji (1087\u20131094)\",\"Kah\u014d (1094\u20131096)\",\"Eich\u014d (1096\u20131097)\",\"J\u014dtoku (1097\u20131099)\",\"K\u014dwa (1099\u20131104)\",\"Ch\u014dji (1104\u20131106)\",\"Kash\u014d (1106\u20131108)\",\"Tennin (1108\u20131110)\",\"Ten-ei (1110-1113)\",\"Eiky\u016b (1113\u20131118)\",\"Gen\u2019ei (1118\u20131120)\",\"H\u014dan (1120\u20131124)\",\"Tenji (1124\u20131126)\",\"Daiji (1126\u20131131)\",\"Tensh\u014d (1131\u20131132)\",\"Ch\u014dsh\u014d (1132\u20131135)\",\"H\u014den (1135\u20131141)\",\"Eiji (1141\u20131142)\",\"K\u014dji (1142\u20131144)\",\"Ten\u2019y\u014d (1144\u20131145)\",\"Ky\u016ban (1145\u20131151)\",\"Ninpei (1151\u20131154)\",\"Ky\u016bju (1154\u20131156)\",\"H\u014dgen (1156\u20131159)\",\"Heiji (1159\u20131160)\",\"Eiryaku (1160\u20131161)\",\"\u014cho (1161\u20131163)\",\"Ch\u014dkan (1163\u20131165)\",\"Eiman (1165\u20131166)\",\"Nin\u2019an (1166\u20131169)\",\"Ka\u014d (1169\u20131171)\",\"Sh\u014dan (1171\u20131175)\",\"Angen (1175\u20131177)\",\"Jish\u014d (1177\u20131181)\",\"Y\u014dwa (1181\u20131182)\",\"Juei (1182\u20131184)\",\"Genryaku (1184\u20131185)\",\"Bunji (1185\u20131190)\",\"Kenky\u016b (1190\u20131199)\",\"Sh\u014dji (1199\u20131201)\",\"Kennin (1201\u20131204)\",\"Genky\u016b (1204\u20131206)\",\"Ken\u2019ei (1206\u20131207)\",\"J\u014dgen (1207\u20131211)\",\"Kenryaku (1211\u20131213)\",\"Kenp\u014d (1213\u20131219)\",\"J\u014dky\u016b (1219\u20131222)\",\"J\u014d\u014d (1222\u20131224)\",\"Gennin (1224\u20131225)\",\"Karoku (1225\u20131227)\",\"Antei (1227\u20131229)\",\"Kanki (1229\u20131232)\",\"J\u014dei (1232\u20131233)\",\"Tenpuku (1233\u20131234)\",\"Bunryaku (1234\u20131235)\",\"Katei (1235\u20131238)\",\"Ryakunin (1238\u20131239)\",\"En\u2019\u014d (1239\u20131240)\",\"Ninji (1240\u20131243)\",\"Kangen (1243\u20131247)\",\"H\u014dji (1247\u20131249)\",\"Kench\u014d (1249\u20131256)\",\"K\u014dgen (1256\u20131257)\",\"Sh\u014dka (1257\u20131259)\",\"Sh\u014dgen (1259\u20131260)\",\"Bun\u2019\u014d (1260\u20131261)\",\"K\u014dch\u014d (1261\u20131264)\",\"Bun\u2019ei (1264\u20131275)\",\"Kenji (1275\u20131278)\",\"K\u014dan (1278\u20131288)\",\"Sh\u014d\u014d (1288\u20131293)\",\"Einin (1293\u20131299)\",\"Sh\u014dan (1299\u20131302)\",\"Kengen (1302\u20131303)\",\"Kagen (1303\u20131306)\",\"Tokuji (1306\u20131308)\",\"Enky\u014d (1308\u20131311)\",\"\u014cch\u014d (1311\u20131312)\",\"Sh\u014dwa (1312\u20131317)\",\"Bunp\u014d (1317\u20131319)\",\"Gen\u014d (1319\u20131321)\",\"Genk\u014d (1321\u20131324)\",\"Sh\u014dch\u016b (1324\u20131326)\",\"Karyaku (1326\u20131329)\",\"Gentoku (1329\u20131331)\",\"Genk\u014d (1331\u20131334)\",\"Kenmu (1334\u20131336)\",\"Engen (1336\u20131340)\",\"K\u014dkoku (1340\u20131346)\",\"Sh\u014dhei (1346\u20131370)\",\"Kentoku (1370\u20131372)\",\"Bunch\u016b (1372\u20131375)\",\"Tenju (1375\u20131379)\",\"K\u014dryaku (1379\u20131381)\",\"K\u014dwa (1381\u20131384)\",\"Gench\u016b (1384\u20131392)\",\"Meitoku (1384\u20131387)\",\"Kakei (1387\u20131389)\",\"K\u014d\u014d (1389\u20131390)\",\"Meitoku (1390\u20131394)\",\"\u014cei (1394\u20131428)\",\"Sh\u014dch\u014d (1428\u20131429)\",\"Eiky\u014d (1429\u20131441)\",\"Kakitsu (1441\u20131444)\",\"Bun\u2019an (1444\u20131449)\",\"H\u014dtoku (1449\u20131452)\",\"Ky\u014dtoku (1452\u20131455)\",\"K\u014dsh\u014d (1455\u20131457)\",\"Ch\u014droku (1457\u20131460)\",\"Kansh\u014d (1460\u20131466)\",\"Bunsh\u014d (1466\u20131467)\",\"\u014cnin (1467\u20131469)\",\"Bunmei (1469\u20131487)\",\"Ch\u014dky\u014d (1487\u20131489)\",\"Entoku (1489\u20131492)\",\"Mei\u014d (1492\u20131501)\",\"Bunki (1501\u20131504)\",\"Eish\u014d (1504\u20131521)\",\"Taiei (1521\u20131528)\",\"Ky\u014droku (1528\u20131532)\",\"Tenbun (1532\u20131555)\",\"K\u014dji (1555\u20131558)\",\"Eiroku (1558\u20131570)\",\"Genki (1570\u20131573)\",\"Tensh\u014d (1573\u20131592)\",\"Bunroku (1592\u20131596)\",\"Keich\u014d (1596\u20131615)\",\"Genna (1615\u20131624)\",\"Kan\u2019ei (1624\u20131644)\",\"Sh\u014dho (1644\u20131648)\",\"Keian (1648\u20131652)\",\"J\u014d\u014d (1652\u20131655)\",\"Meireki (1655\u20131658)\",\"Manji (1658\u20131661)\",\"Kanbun (1661\u20131673)\",\"Enp\u014d (1673\u20131681)\",\"Tenna (1681\u20131684)\",\"J\u014dky\u014d (1684\u20131688)\",\"Genroku (1688\u20131704)\",\"H\u014dei (1704\u20131711)\",\"Sh\u014dtoku (1711\u20131716)\",\"Ky\u014dh\u014d (1716\u20131736)\",\"Genbun (1736\u20131741)\",\"Kanp\u014d (1741\u20131744)\",\"Enky\u014d (1744\u20131748)\",\"Kan\u2019en (1748\u20131751)\",\"H\u014dreki (1751\u20131764)\",\"Meiwa (1764\u20131772)\",\"An\u2019ei (1772\u20131781)\",\"Tenmei (1781\u20131789)\",\"Kansei (1789\u20131801)\",\"Ky\u014dwa (1801\u20131804)\",\"Bunka (1804\u20131818)\",\"Bunsei (1818\u20131830)\",\"Tenp\u014d (1830\u20131844)\",\"K\u014dka (1844\u20131848)\",\"Kaei (1848\u20131854)\",\"Ansei (1854\u20131860)\",\"Man\u2019en (1860\u20131861)\",\"Bunky\u016b (1861\u20131864)\",\"Genji (1864\u20131865)\",\"Kei\u014d (1865\u20131868)\",\"M\",\"T\",\"S\",\"H\"],short:[\"Taika (645\u2013650)\",\"Hakuchi (650\u2013671)\",\"Hakuh\u014d (672\u2013686)\",\"Shuch\u014d (686\u2013701)\",\"Taih\u014d (701\u2013704)\",\"Keiun (704\u2013708)\",\"Wad\u014d (708\u2013715)\",\"Reiki (715\u2013717)\",\"Y\u014dr\u014d (717\u2013724)\",\"Jinki (724\u2013729)\",\"Tenpy\u014d (729\u2013749)\",\"Tenpy\u014d-kamp\u014d (749-749)\",\"Tenpy\u014d-sh\u014dh\u014d (749-757)\",\"Tenpy\u014d-h\u014dji (757-765)\",\"Tenpy\u014d-jingo (765-767)\",\"Jingo-keiun (767-770)\",\"H\u014dki (770\u2013780)\",\"Ten-\u014d (781-782)\",\"Enryaku (782\u2013806)\",\"Daid\u014d (806\u2013810)\",\"K\u014dnin (810\u2013824)\",\"Tench\u014d (824\u2013834)\",\"J\u014dwa (834\u2013848)\",\"Kaj\u014d (848\u2013851)\",\"Ninju (851\u2013854)\",\"Saik\u014d (854\u2013857)\",\"Ten-an (857-859)\",\"J\u014dgan (859\u2013877)\",\"Gangy\u014d (877\u2013885)\",\"Ninna (885\u2013889)\",\"Kanpy\u014d (889\u2013898)\",\"Sh\u014dtai (898\u2013901)\",\"Engi (901\u2013923)\",\"Ench\u014d (923\u2013931)\",\"J\u014dhei (931\u2013938)\",\"Tengy\u014d (938\u2013947)\",\"Tenryaku (947\u2013957)\",\"Tentoku (957\u2013961)\",\"\u014cwa (961\u2013964)\",\"K\u014dh\u014d (964\u2013968)\",\"Anna (968\u2013970)\",\"Tenroku (970\u2013973)\",\"Ten\u2019en (973\u2013976)\",\"J\u014dgen (976\u2013978)\",\"Tengen (978\u2013983)\",\"Eikan (983\u2013985)\",\"Kanna (985\u2013987)\",\"Eien (987\u2013989)\",\"Eiso (989\u2013990)\",\"Sh\u014dryaku (990\u2013995)\",\"Ch\u014dtoku (995\u2013999)\",\"Ch\u014dh\u014d (999\u20131004)\",\"Kank\u014d (1004\u20131012)\",\"Ch\u014dwa (1012\u20131017)\",\"Kannin (1017\u20131021)\",\"Jian (1021\u20131024)\",\"Manju (1024\u20131028)\",\"Ch\u014dgen (1028\u20131037)\",\"Ch\u014dryaku (1037\u20131040)\",\"Ch\u014dky\u016b (1040\u20131044)\",\"Kantoku (1044\u20131046)\",\"Eish\u014d (1046\u20131053)\",\"Tengi (1053\u20131058)\",\"K\u014dhei (1058\u20131065)\",\"Jiryaku (1065\u20131069)\",\"Enky\u016b (1069\u20131074)\",\"Sh\u014dho (1074\u20131077)\",\"Sh\u014dryaku (1077\u20131081)\",\"Eih\u014d (1081\u20131084)\",\"\u014ctoku (1084\u20131087)\",\"Kanji (1087\u20131094)\",\"Kah\u014d (1094\u20131096)\",\"Eich\u014d (1096\u20131097)\",\"J\u014dtoku (1097\u20131099)\",\"K\u014dwa (1099\u20131104)\",\"Ch\u014dji (1104\u20131106)\",\"Kash\u014d (1106\u20131108)\",\"Tennin (1108\u20131110)\",\"Ten-ei (1110-1113)\",\"Eiky\u016b (1113\u20131118)\",\"Gen\u2019ei (1118\u20131120)\",\"H\u014dan (1120\u20131124)\",\"Tenji (1124\u20131126)\",\"Daiji (1126\u20131131)\",\"Tensh\u014d (1131\u20131132)\",\"Ch\u014dsh\u014d (1132\u20131135)\",\"H\u014den (1135\u20131141)\",\"Eiji (1141\u20131142)\",\"K\u014dji (1142\u20131144)\",\"Ten\u2019y\u014d (1144\u20131145)\",\"Ky\u016ban (1145\u20131151)\",\"Ninpei (1151\u20131154)\",\"Ky\u016bju (1154\u20131156)\",\"H\u014dgen (1156\u20131159)\",\"Heiji (1159\u20131160)\",\"Eiryaku (1160\u20131161)\",\"\u014cho (1161\u20131163)\",\"Ch\u014dkan (1163\u20131165)\",\"Eiman (1165\u20131166)\",\"Nin\u2019an (1166\u20131169)\",\"Ka\u014d (1169\u20131171)\",\"Sh\u014dan (1171\u20131175)\",\"Angen (1175\u20131177)\",\"Jish\u014d (1177\u20131181)\",\"Y\u014dwa (1181\u20131182)\",\"Juei (1182\u20131184)\",\"Genryaku (1184\u20131185)\",\"Bunji (1185\u20131190)\",\"Kenky\u016b (1190\u20131199)\",\"Sh\u014dji (1199\u20131201)\",\"Kennin (1201\u20131204)\",\"Genky\u016b (1204\u20131206)\",\"Ken\u2019ei (1206\u20131207)\",\"J\u014dgen (1207\u20131211)\",\"Kenryaku (1211\u20131213)\",\"Kenp\u014d (1213\u20131219)\",\"J\u014dky\u016b (1219\u20131222)\",\"J\u014d\u014d (1222\u20131224)\",\"Gennin (1224\u20131225)\",\"Karoku (1225\u20131227)\",\"Antei (1227\u20131229)\",\"Kanki (1229\u20131232)\",\"J\u014dei (1232\u20131233)\",\"Tenpuku (1233\u20131234)\",\"Bunryaku (1234\u20131235)\",\"Katei (1235\u20131238)\",\"Ryakunin (1238\u20131239)\",\"En\u2019\u014d (1239\u20131240)\",\"Ninji (1240\u20131243)\",\"Kangen (1243\u20131247)\",\"H\u014dji (1247\u20131249)\",\"Kench\u014d (1249\u20131256)\",\"K\u014dgen (1256\u20131257)\",\"Sh\u014dka (1257\u20131259)\",\"Sh\u014dgen (1259\u20131260)\",\"Bun\u2019\u014d (1260\u20131261)\",\"K\u014dch\u014d (1261\u20131264)\",\"Bun\u2019ei (1264\u20131275)\",\"Kenji (1275\u20131278)\",\"K\u014dan (1278\u20131288)\",\"Sh\u014d\u014d (1288\u20131293)\",\"Einin (1293\u20131299)\",\"Sh\u014dan (1299\u20131302)\",\"Kengen (1302\u20131303)\",\"Kagen (1303\u20131306)\",\"Tokuji (1306\u20131308)\",\"Enky\u014d (1308\u20131311)\",\"\u014cch\u014d (1311\u20131312)\",\"Sh\u014dwa (1312\u20131317)\",\"Bunp\u014d (1317\u20131319)\",\"Gen\u014d (1319\u20131321)\",\"Genk\u014d (1321\u20131324)\",\"Sh\u014dch\u016b (1324\u20131326)\",\"Karyaku (1326\u20131329)\",\"Gentoku (1329\u20131331)\",\"Genk\u014d (1331\u20131334)\",\"Kenmu (1334\u20131336)\",\"Engen (1336\u20131340)\",\"K\u014dkoku (1340\u20131346)\",\"Sh\u014dhei (1346\u20131370)\",\"Kentoku (1370\u20131372)\",\"Bunch\u016b (1372\u20131375)\",\"Tenju (1375\u20131379)\",\"K\u014dryaku (1379\u20131381)\",\"K\u014dwa (1381\u20131384)\",\"Gench\u016b (1384\u20131392)\",\"Meitoku (1384\u20131387)\",\"Kakei (1387\u20131389)\",\"K\u014d\u014d (1389\u20131390)\",\"Meitoku (1390\u20131394)\",\"\u014cei (1394\u20131428)\",\"Sh\u014dch\u014d (1428\u20131429)\",\"Eiky\u014d (1429\u20131441)\",\"Kakitsu (1441\u20131444)\",\"Bun\u2019an (1444\u20131449)\",\"H\u014dtoku (1449\u20131452)\",\"Ky\u014dtoku (1452\u20131455)\",\"K\u014dsh\u014d (1455\u20131457)\",\"Ch\u014droku (1457\u20131460)\",\"Kansh\u014d (1460\u20131466)\",\"Bunsh\u014d (1466\u20131467)\",\"\u014cnin (1467\u20131469)\",\"Bunmei (1469\u20131487)\",\"Ch\u014dky\u014d (1487\u20131489)\",\"Entoku (1489\u20131492)\",\"Mei\u014d (1492\u20131501)\",\"Bunki (1501\u20131504)\",\"Eish\u014d (1504\u20131521)\",\"Taiei (1521\u20131528)\",\"Ky\u014droku (1528\u20131532)\",\"Tenbun (1532\u20131555)\",\"K\u014dji (1555\u20131558)\",\"Eiroku (1558\u20131570)\",\"Genki (1570\u20131573)\",\"Tensh\u014d (1573\u20131592)\",\"Bunroku (1592\u20131596)\",\"Keich\u014d (1596\u20131615)\",\"Genna (1615\u20131624)\",\"Kan\u2019ei (1624\u20131644)\",\"Sh\u014dho (1644\u20131648)\",\"Keian (1648\u20131652)\",\"J\u014d\u014d (1652\u20131655)\",\"Meireki (1655\u20131658)\",\"Manji (1658\u20131661)\",\"Kanbun (1661\u20131673)\",\"Enp\u014d (1673\u20131681)\",\"Tenna (1681\u20131684)\",\"J\u014dky\u014d (1684\u20131688)\",\"Genroku (1688\u20131704)\",\"H\u014dei (1704\u20131711)\",\"Sh\u014dtoku (1711\u20131716)\",\"Ky\u014dh\u014d (1716\u20131736)\",\"Genbun (1736\u20131741)\",\"Kanp\u014d (1741\u20131744)\",\"Enky\u014d (1744\u20131748)\",\"Kan\u2019en (1748\u20131751)\",\"H\u014dreki (1751\u20131764)\",\"Meiwa (1764\u20131772)\",\"An\u2019ei (1772\u20131781)\",\"Tenmei (1781\u20131789)\",\"Kansei (1789\u20131801)\",\"Ky\u014dwa (1801\u20131804)\",\"Bunka (1804\u20131818)\",\"Bunsei (1818\u20131830)\",\"Tenp\u014d (1830\u20131844)\",\"K\u014dka (1844\u20131848)\",\"Kaei (1848\u20131854)\",\"Ansei (1854\u20131860)\",\"Man\u2019en (1860\u20131861)\",\"Bunky\u016b (1861\u20131864)\",\"Genji (1864\u20131865)\",\"Kei\u014d (1865\u20131868)\",\"Meiji\",\"Taish\u014d\",\"Sh\u014dwa\",\"Heisei\"],long:[\"Taika (645\u2013650)\",\"Hakuchi (650\u2013671)\",\"Hakuh\u014d (672\u2013686)\",\"Shuch\u014d (686\u2013701)\",\"Taih\u014d (701\u2013704)\",\"Keiun (704\u2013708)\",\"Wad\u014d (708\u2013715)\",\"Reiki (715\u2013717)\",\"Y\u014dr\u014d (717\u2013724)\",\"Jinki (724\u2013729)\",\"Tenpy\u014d (729\u2013749)\",\"Tenpy\u014d-kamp\u014d (749-749)\",\"Tenpy\u014d-sh\u014dh\u014d (749-757)\",\"Tenpy\u014d-h\u014dji (757-765)\",\"Tenpy\u014d-jingo (765-767)\",\"Jingo-keiun (767-770)\",\"H\u014dki (770\u2013780)\",\"Ten-\u014d (781-782)\",\"Enryaku (782\u2013806)\",\"Daid\u014d (806\u2013810)\",\"K\u014dnin (810\u2013824)\",\"Tench\u014d (824\u2013834)\",\"J\u014dwa (834\u2013848)\",\"Kaj\u014d (848\u2013851)\",\"Ninju (851\u2013854)\",\"Saik\u014d (854\u2013857)\",\"Ten-an (857-859)\",\"J\u014dgan (859\u2013877)\",\"Gangy\u014d (877\u2013885)\",\"Ninna (885\u2013889)\",\"Kanpy\u014d (889\u2013898)\",\"Sh\u014dtai (898\u2013901)\",\"Engi (901\u2013923)\",\"Ench\u014d (923\u2013931)\",\"J\u014dhei (931\u2013938)\",\"Tengy\u014d (938\u2013947)\",\"Tenryaku (947\u2013957)\",\"Tentoku (957\u2013961)\",\"\u014cwa (961\u2013964)\",\"K\u014dh\u014d (964\u2013968)\",\"Anna (968\u2013970)\",\"Tenroku (970\u2013973)\",\"Ten\u2019en (973\u2013976)\",\"J\u014dgen (976\u2013978)\",\"Tengen (978\u2013983)\",\"Eikan (983\u2013985)\",\"Kanna (985\u2013987)\",\"Eien (987\u2013989)\",\"Eiso (989\u2013990)\",\"Sh\u014dryaku (990\u2013995)\",\"Ch\u014dtoku (995\u2013999)\",\"Ch\u014dh\u014d (999\u20131004)\",\"Kank\u014d (1004\u20131012)\",\"Ch\u014dwa (1012\u20131017)\",\"Kannin (1017\u20131021)\",\"Jian (1021\u20131024)\",\"Manju (1024\u20131028)\",\"Ch\u014dgen (1028\u20131037)\",\"Ch\u014dryaku (1037\u20131040)\",\"Ch\u014dky\u016b (1040\u20131044)\",\"Kantoku (1044\u20131046)\",\"Eish\u014d (1046\u20131053)\",\"Tengi (1053\u20131058)\",\"K\u014dhei (1058\u20131065)\",\"Jiryaku (1065\u20131069)\",\"Enky\u016b (1069\u20131074)\",\"Sh\u014dho (1074\u20131077)\",\"Sh\u014dryaku (1077\u20131081)\",\"Eih\u014d (1081\u20131084)\",\"\u014ctoku (1084\u20131087)\",\"Kanji (1087\u20131094)\",\"Kah\u014d (1094\u20131096)\",\"Eich\u014d (1096\u20131097)\",\"J\u014dtoku (1097\u20131099)\",\"K\u014dwa (1099\u20131104)\",\"Ch\u014dji (1104\u20131106)\",\"Kash\u014d (1106\u20131108)\",\"Tennin (1108\u20131110)\",\"Ten-ei (1110-1113)\",\"Eiky\u016b (1113\u20131118)\",\"Gen\u2019ei (1118\u20131120)\",\"H\u014dan (1120\u20131124)\",\"Tenji (1124\u20131126)\",\"Daiji (1126\u20131131)\",\"Tensh\u014d (1131\u20131132)\",\"Ch\u014dsh\u014d (1132\u20131135)\",\"H\u014den (1135\u20131141)\",\"Eiji (1141\u20131142)\",\"K\u014dji (1142\u20131144)\",\"Ten\u2019y\u014d (1144\u20131145)\",\"Ky\u016ban (1145\u20131151)\",\"Ninpei (1151\u20131154)\",\"Ky\u016bju (1154\u20131156)\",\"H\u014dgen (1156\u20131159)\",\"Heiji (1159\u20131160)\",\"Eiryaku (1160\u20131161)\",\"\u014cho (1161\u20131163)\",\"Ch\u014dkan (1163\u20131165)\",\"Eiman (1165\u20131166)\",\"Nin\u2019an (1166\u20131169)\",\"Ka\u014d (1169\u20131171)\",\"Sh\u014dan (1171\u20131175)\",\"Angen (1175\u20131177)\",\"Jish\u014d (1177\u20131181)\",\"Y\u014dwa (1181\u20131182)\",\"Juei (1182\u20131184)\",\"Genryaku (1184\u20131185)\",\"Bunji (1185\u20131190)\",\"Kenky\u016b (1190\u20131199)\",\"Sh\u014dji (1199\u20131201)\",\"Kennin (1201\u20131204)\",\"Genky\u016b (1204\u20131206)\",\"Ken\u2019ei (1206\u20131207)\",\"J\u014dgen (1207\u20131211)\",\"Kenryaku (1211\u20131213)\",\"Kenp\u014d (1213\u20131219)\",\"J\u014dky\u016b (1219\u20131222)\",\"J\u014d\u014d (1222\u20131224)\",\"Gennin (1224\u20131225)\",\"Karoku (1225\u20131227)\",\"Antei (1227\u20131229)\",\"Kanki (1229\u20131232)\",\"J\u014dei (1232\u20131233)\",\"Tenpuku (1233\u20131234)\",\"Bunryaku (1234\u20131235)\",\"Katei (1235\u20131238)\",\"Ryakunin (1238\u20131239)\",\"En\u2019\u014d (1239\u20131240)\",\"Ninji (1240\u20131243)\",\"Kangen (1243\u20131247)\",\"H\u014dji (1247\u20131249)\",\"Kench\u014d (1249\u20131256)\",\"K\u014dgen (1256\u20131257)\",\"Sh\u014dka (1257\u20131259)\",\"Sh\u014dgen (1259\u20131260)\",\"Bun\u2019\u014d (1260\u20131261)\",\"K\u014dch\u014d (1261\u20131264)\",\"Bun\u2019ei (1264\u20131275)\",\"Kenji (1275\u20131278)\",\"K\u014dan (1278\u20131288)\",\"Sh\u014d\u014d (1288\u20131293)\",\"Einin (1293\u20131299)\",\"Sh\u014dan (1299\u20131302)\",\"Kengen (1302\u20131303)\",\"Kagen (1303\u20131306)\",\"Tokuji (1306\u20131308)\",\"Enky\u014d (1308\u20131311)\",\"\u014cch\u014d (1311\u20131312)\",\"Sh\u014dwa (1312\u20131317)\",\"Bunp\u014d (1317\u20131319)\",\"Gen\u014d (1319\u20131321)\",\"Genk\u014d (1321\u20131324)\",\"Sh\u014dch\u016b (1324\u20131326)\",\"Karyaku (1326\u20131329)\",\"Gentoku (1329\u20131331)\",\"Genk\u014d (1331\u20131334)\",\"Kenmu (1334\u20131336)\",\"Engen (1336\u20131340)\",\"K\u014dkoku (1340\u20131346)\",\"Sh\u014dhei (1346\u20131370)\",\"Kentoku (1370\u20131372)\",\"Bunch\u016b (1372\u20131375)\",\"Tenju (1375\u20131379)\",\"K\u014dryaku (1379\u20131381)\",\"K\u014dwa (1381\u20131384)\",\"Gench\u016b (1384\u20131392)\",\"Meitoku (1384\u20131387)\",\"Kakei (1387\u20131389)\",\"K\u014d\u014d (1389\u20131390)\",\"Meitoku (1390\u20131394)\",\"\u014cei (1394\u20131428)\",\"Sh\u014dch\u014d (1428\u20131429)\",\"Eiky\u014d (1429\u20131441)\",\"Kakitsu (1441\u20131444)\",\"Bun\u2019an (1444\u20131449)\",\"H\u014dtoku (1449\u20131452)\",\"Ky\u014dtoku (1452\u20131455)\",\"K\u014dsh\u014d (1455\u20131457)\",\"Ch\u014droku (1457\u20131460)\",\"Kansh\u014d (1460\u20131466)\",\"Bunsh\u014d (1466\u20131467)\",\"\u014cnin (1467\u20131469)\",\"Bunmei (1469\u20131487)\",\"Ch\u014dky\u014d (1487\u20131489)\",\"Entoku (1489\u20131492)\",\"Mei\u014d (1492\u20131501)\",\"Bunki (1501\u20131504)\",\"Eish\u014d (1504\u20131521)\",\"Taiei (1521\u20131528)\",\"Ky\u014droku (1528\u20131532)\",\"Tenbun (1532\u20131555)\",\"K\u014dji (1555\u20131558)\",\"Eiroku (1558\u20131570)\",\"Genki (1570\u20131573)\",\"Tensh\u014d (1573\u20131592)\",\"Bunroku (1592\u20131596)\",\"Keich\u014d (1596\u20131615)\",\"Genna (1615\u20131624)\",\"Kan\u2019ei (1624\u20131644)\",\"Sh\u014dho (1644\u20131648)\",\"Keian (1648\u20131652)\",\"J\u014d\u014d (1652\u20131655)\",\"Meireki (1655\u20131658)\",\"Manji (1658\u20131661)\",\"Kanbun (1661\u20131673)\",\"Enp\u014d (1673\u20131681)\",\"Tenna (1681\u20131684)\",\"J\u014dky\u014d (1684\u20131688)\",\"Genroku (1688\u20131704)\",\"H\u014dei (1704\u20131711)\",\"Sh\u014dtoku (1711\u20131716)\",\"Ky\u014dh\u014d (1716\u20131736)\",\"Genbun (1736\u20131741)\",\"Kanp\u014d (1741\u20131744)\",\"Enky\u014d (1744\u20131748)\",\"Kan\u2019en (1748\u20131751)\",\"H\u014dreki (1751\u20131764)\",\"Meiwa (1764\u20131772)\",\"An\u2019ei (1772\u20131781)\",\"Tenmei (1781\u20131789)\",\"Kansei (1789\u20131801)\",\"Ky\u014dwa (1801\u20131804)\",\"Bunka (1804\u20131818)\",\"Bunsei (1818\u20131830)\",\"Tenp\u014d (1830\u20131844)\",\"K\u014dka (1844\u20131848)\",\"Kaei (1848\u20131854)\",\"Ansei (1854\u20131860)\",\"Man\u2019en (1860\u20131861)\",\"Bunky\u016b (1861\u20131864)\",\"Genji (1864\u20131865)\",\"Kei\u014d (1865\u20131868)\",\"Meiji\",\"Taish\u014d\",\"Sh\u014dwa\",\"Heisei\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},persian:{months:{narrow:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"],short:[\"Farvardin\",\"Ordibehesht\",\"Khordad\",\"Tir\",\"Mordad\",\"Shahrivar\",\"Mehr\",\"Aban\",\"Azar\",\"Dey\",\"Bahman\",\"Esfand\"],long:[\"Farvardin\",\"Ordibehesht\",\"Khordad\",\"Tir\",\"Mordad\",\"Shahrivar\",\"Mehr\",\"Aban\",\"Azar\",\"Dey\",\"Bahman\",\"Esfand\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"AP\"],short:[\"AP\"],long:[\"AP\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}},roc:{months:{narrow:[\"J\",\"F\",\"M\",\"A\",\"M\",\"J\",\"J\",\"A\",\"S\",\"O\",\"N\",\"D\"],short:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],long:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]},days:{narrow:[\"S\",\"M\",\"T\",\"W\",\"T\",\"F\",\"S\"],short:[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],long:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]},eras:{narrow:[\"Before R.O.C.\",\"Minguo\"],short:[\"Before R.O.C.\",\"Minguo\"],long:[\"Before R.O.C.\",\"Minguo\"]},dayPeriods:{am:\"AM\",pm:\"PM\"}}}},number:{nu:[\"latn\"],patterns:{decimal:{positivePattern:\"{number}\",negativePattern:\"{minusSign}{number}\"},currency:{positivePattern:\"{currency}{number}\",negativePattern:\"{minusSign}{currency}{number}\"},percent:{positivePattern:\"{number}{percentSign}\",negativePattern:\"{minusSign}{number}{percentSign}\"}},symbols:{latn:{decimal:\".\",group:\",\",nan:\"NaN\",plusSign:\"+\",minusSign:\"-\",percentSign:\"%\",infinity:\"\u221e\"}},currencies:{AUD:\"A$\",BRL:\"R$\",CAD:\"CA$\",CNY:\"CN\u00a5\",EUR:\"\u20ac\",GBP:\"\u00a3\",HKD:\"HK$\",ILS:\"\u20aa\",INR:\"\u20b9\",JPY:\"\u00a5\",KRW:\"\u20a9\",MXN:\"MX$\",NZD:\"NZ$\",TWD:\"NT$\",USD:\"$\",VND:\"\u20ab\",XAF:\"FCFA\",XCD:\"EC$\",XOF:\"CFA\",XPF:\"CFPF\"}}});}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/823, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa1a3zFs63hqcdJif2G496AcPpmw5ks5qeaifgaJpZM4JhASY\n.\n. @falsandtru, thanks for the PR. The changes look good, thanks for supplying the support data. Before I can merge this in, I need to check that you have read and agreed to our contribution terms:\nAll contributions to the polyfill service are made under the MIT licence. It is important therefore that you agree to the following when contributing code to the service:\n- Any contribution I make to the polyfill service by way of Pull Request contains only data that is:\n  - wholly my own work, upon which I am legally permitted to grant a licence; or\n  - wholly the work of individuals within the same organisation to which the copyright in all work created by employees is assigned, of which I am a current employee and authorised representive for the purposes of this contribution, and which is legally permitted to grant a licence; or\n  - licensed by the original author under the MIT licence or equivalent terms\n- In respect of any part of my contribution that is not already available under an MIT or compatible licence, I hereby grant to the Financial Times Limited (FT) and to recipients of software distributed by the FT a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable license to make, have made, use, offer to sell, sell, import, and otherwise transfer the data.\nIt is helpful to us if you can clearly state your agreement to the above terms when creating a pull request. If you don't, you may be asked to post a followup comment to accept the terms, before we can merge your PR.\n. Thanks for helping improve our browser support for these polyfills. Your changes will be released as part of version 3.11.0. \n\nIn case you are not aware, this project has a set of contribution rewards awarded to community members who have a pull request merged into the project.\n\nContribution rewards\nWe want to encourage more people to get involved in the polyfill service, so the Financial Times is pleased to offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository. Claim your free access.\n. It actually targets even more browsers :-)\n. @mudcube, thanks for the PR. The code looks good. Before I can merge this in, I need to check that you have read and agreed to our contribution terms:\nAll contributions to the polyfill service are made under the MIT licence. It is important therefore that you agree to the following when contributing code to the service:\n- Any contribution I make to the polyfill service by way of Pull Request contains only data that is:\n  - wholly my own work, upon which I am legally permitted to grant a licence; or\n  - wholly the work of individuals within the same organisation to which the copyright in all work created by employees is assigned, of which I am a current employee and authorised representive for the purposes of this contribution, and which is legally permitted to grant a licence; or\n  - licensed by the original author under the MIT licence or equivalent terms\n- In respect of any part of my contribution that is not already available under an MIT or compatible licence, I hereby grant to the Financial Times Limited (FT) and to recipients of software distributed by the FT a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable license to make, have made, use, offer to sell, sell, import, and otherwise transfer the data.\nIt is helpful to us if you can clearly state your agreement to the above terms when creating a pull request. If you don't, you may be asked to post a followup comment to accept the terms, before we can merge your PR.\n. Thanks for contributing this polyfill. It will be released in version 3.11.0. \n\nIn case you are not aware, this project has a set of contribution rewards awarded to community members who have a pull request merged into the project.\n\nContribution rewards\nWe want to encourage more people to get involved in the polyfill service, so the Financial Times is pleased to offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository. Claim your free access.\n\nAgain, thanks for this pull request :-)\n. This is now live on https://polyfill.io\n. @falsandtru I've been working on full iterator support for Array.from on the upstream polyfill. You may be interested in checking that out :-) https://github.com/mathiasbynens/Array.from/pull/27\n. Not for a while, we need to add support for polyfills written in using module systems such as commonjs before we will be able to use the upstream polyfill directly. Perhaps we can copy some of the changes in the upstream pull request into our local polyfill? Namely the Safari browser support for Set and Map iteration.\n. Fixing here for now, I can take on the work to push upstream :-)\n. I'm running the tests on CI for this PR, thanks for the contribution!\n. I will be attempting to complete my pull-request made upstream by the end of this week. I have two tasks left to do on it:\n- Get the polyfill working across different realms\n- Fix the failing tests that are present on master\nIf you like, you can help by cloning Array.from and running the tests against a browser such safari ios 7, the test no setters are called for indexes fails.\n. You are more than welcome. Thank you for taking the time to create a pull request, you've been quite active on this project recently, I'm very happy that you find it useful. How have you found contributing to this project? Was there anything in the documentation or contribution guide that you found was confusing or could be worded in a better way? We're are always trying to make contributing easier for members of the community and love hearing feedback and how we can improve :-)\n. @falsandtru Re-running the tests for you now :-)\n. Re-running :-)\n. @falsandtru I think it would be better to copy the upstream polyfill into the polyfill-service and modify it to work with Symbol polyfills.\n. @simevidas, I know it was a long time ago when you requested this feature, apologies if you no longer need it. If you are still interested in this feature, would you be able to give this branch a spin and see if it is what you are wanting?\n. Could you explain the pros and cons of implementing callbacks this way?\n. Just to update this issue, #884 was closed\n. Will be fixed in 7 minutes :-)\n. Is it working for you?\n. Can you do a hard refresh? I'm visiting the url you posted -- https://cdn.polyfill.io/v2/polyfill.min.js?unknown=polyfill&features=default,es6,Intl.~locale.de%7Calways,Object.assign%7Calways%7Cgated,requestAnimationFrame%7Calways%7Cgated,Array.prototype.fill%7Calways%7Cgated,Array.prototype.find%7Calways%7Cgated,Array.prototype.findIndex%7Calways%7Cgated,String.prototype.startsWith&excludes=Map,Set,Symbol,Symbol.iterator,Symbol.species and can see that the line //# sourceMappingURL=Intl.min.js.map is now on it's own line, which resolves the issue.\n. Okay, I purged the cache for that particular request, should be working now\n. Did you do a hard-reload, your browser cache might still have the bad response.\n. @FredyC, if this is merged, you will be able to use the es6 set to return the Array iterator polyfill you wanted - https://polyfill.io/v2/polyfill.js=features=default,es5,es6\n. @AdaRoseEdwards Are you able to test this on Samsung Browser?\n. @AdaRoseEdwards Have you had time to check this out for Samsung?\n. This can be solved in a few ways:\n- include unknown=polyfill in your querystring to polyfill.io\nunknown=polyfill makes polyfill.io return all polyfills if it doesn't know what browser the client is. Here is the explanation from our documentation:\n\nWhat to do when the user agent is not recognised. Set to polyfill to return default polyfill variants of all qualifying features, ignore to return nothing. Use caution when setting this argument to 'polyfill' on large feature sets, since huge polyfill bundles may cause crashes or lockups in extremely old or underpowered user agents. Defaults to ignore.\n- Wait on https://github.com/Financial-Times/polyfill-service/issues/107 to be completed.\n. @williamoliveira We alias Googlebot to Chrome 41 :-) -- https://github.com/Financial-Times/polyfill-service/blob/8ae2f6fa5b1a169aab01cad3b88bd577d67f8294/packages/polyfill-library/lib/UA.js#L145. Hi @msokk, Samsung 4 and above is what the Samsung contributors are offering to support.\n\nQuote from https://medium.com/samsung-internet-dev/samsung-and-the-polyfill-service-d6e70a9f1684#.t0j1ur5jw :\n\nThe Samsung Developer Advocate team will continue to maintain the Samsung bits of the polyfill service so that Samsung Internet 4 and above will always be able to use latest language features not already available in the browser.\n. Is it possible to cover these new features with tests?\n. I think we should be bothered about breaking RUM, if in the future we are going to use it to inform us what features each browser supports. It is easier to add tests for it now, before it is in master than later on down the road.\n. unit level tests would be good, we can worry over intergration tests later \n. Hi @zslabs, thanks for taking the time to create a pull request to this project, I'm always happy to see new faces offering to help out :-)\n\nYou can ignore the CI issues, they are happening because your fork doesn't contain SauceLabs environment variables.\nAre you able to test this on UC browser and confirm your assumption that we can alias UC to IE? It would help us have confidence that this is in fact true.\nI also need to check that you have read and agreed to our contribution terms (pasted inline for convenience):\n\nAll contributions to the polyfill service are made under the MIT licence. It is important therefore that you agree to the following when contributing code to the service:\n- Any contribution I make to the polyfill service by way of Pull Request contains only data that is:\n  - wholly my own work, upon which I am legally permitted to grant a licence; or\n  - wholly the work of individuals within the same organisation to which the copyright in all work created by employees is assigned, of which I am a current employee and authorised representive for the purposes of this contribution, and which is legally permitted to grant a licence; or\n  - licensed by the original author under the MIT licence or equivalent terms\n- In respect of any part of my contribution that is not already available under an MIT or compatible licence, I hereby grant to the Financial Times Limited (FT) and to recipients of software distributed by the FT a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable license to make, have made, use, offer to sell, sell, import, and otherwise transfer the data.\nIt is helpful to us if you can clearly state your agreement to the above terms when creating a pull request. If you don't, you may be asked to post a followup comment to accept the terms, before we can merge your PR.\n\nThanks again for this, if there is anything I can help with, feel free to ask.\n. @zslabs This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. Array.prototype.includes is not in the default set of polyfills. \nYou can add it to your request as follows:\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.includes\"></script>\n. Hi, can you post the polyfill.io url you are using to get your polyfill bundle please? The one in the image looks to not has a ? for the querystring parameters\n. The useragent string looks to be facebook's in-app browser, which we have not got coverage for on Android as of yet.\n. Apologies for not explaining fully. The browser is unknown/unsupported by polyfill.io, which means we default to not serving polyfills to it. You can override this setting by passing the query parameter unknown with the value polyfill.\nThis is your polyfill url with the unknown=polyfill added on:\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=Promise,Symbol,Event,CustomEvent,URL,Symbol.iterator,Array.prototype.@@iterator,Event.hashchange,Node.prototype.contains,Element.prototype.classList,Object.create,Object.setPrototypeOf,IntersectionObserver&flags=gated,always&callback=window.onPolyfilLoaded&unknown=polyfill.\nHere is the documentation for unknown (taken from https://polyfill.io/v2/docs/api):\n\nWhat to do when the user agent is not recognised. Set to polyfill to return default polyfill variants of all qualifying features, ignore to return nothing. Use caution when setting this argument to 'polyfill' on large feature sets, since huge polyfill bundles may cause crashes or lockups in extremely old or underpowered user agents. Defaults to ignore.\n. You can see the difference between the bundle responses here:\n\nFacebook Android in-app browser without unknown=polyfill\nFacebook Android in-app browser with unknown=polyfill\n. Good point, your PR should be merged soon, I will close this in anticipation.\n. This is now live on https://polyfill.io\n. Hi, thanks for the nice words :-)\nI'll respond to each bullet point individually:\n\nit doesn't seem possible to use custom polyfills (I want to add a polyfill not yet in your list)\n\nIf a feature is not currently polyfilled by this project, you can add it via a PR in one of two ways:\n- Implement a custom polyfill yourself (docs)\n- If a third-party polyfill exists on NPM, you can add that using our new third-party polyfill mechanism (example)\n\nyou seem to have cracked the \"variable response caching\" issue, but if I want to self host the server I must crack this too\n\nOur Varnish configuration is in this repository. It is tied to Fastly and requires a change to one line in-order for it to redirect to HTTPS for domains which are not on polyfill.io.\n\nI'd rather use feature detection in the browser than UA detection (and with feature detection, my cache issue disappears as each polyfill bundle as its own URL)\n\nMay I ask why you want to use feature detection instead of UA sniffing? You currently can not do this with our service but we do have a PR open for it #841. You can however do feature detection in combination with UA sniffing by adding unknown=polyfill&flags=always,gated.\n. @hannesj This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. LGTM \ud83d\udc4d \n. @hannesj Could you change it from * to < 15?\n. @hannesj This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. They all come back as Chrome 49:\n\nSamsung Galaxy S6\n\n\n\n\nGoogle Nexus 6\n\n\n\n\nMoto X 2nd Gen\n\n\n\n\nMoto G 2nd Gen\n\n\n. I agree \ud83d\udc4d \n. @falsandtru This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. @falsandtru What prompted this change? Is it a spec violation?\n. @falsandtru Could you add a test to cover this change to ensure we don't regress on this?\n. @falsandtru I refactored your test to use proclaim. It is currently running the suite on CI :-)\n. Hi @Mosho1, would it be possible for you to add a test for this new feature? Thanks for the PR :-)\n. Running the test suite :-)\n. @Mosho1 We do offer the ability to use polyfills from npm, here is an example of how it is done -- https://github.com/Financial-Times/polyfill-service/pull/805/files\nWe also have documentation on authoring polyfills -- https://polyfill.io/v2/docs/contributing/authoring-polyfills\n. Thanks!\n. Could you provide some more information at all? Which browser and version?\nWhat is your polyfill.io URL? It would also be good if you could provide a\nminimal test case, jsbin.com is a good place to create a test case on.\nOn 14 Sep 2016 7:03 p.m., \"Daniel Pereira\" notifications@github.com wrote:\n\nSame here :(\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/875#issuecomment-247102407,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxayZHTU5UyawlJewyMEROuemCBBNiks5qqDaxgaJpZM4J9Azq\n.\n. Element polyfill shouldn't load in any major browsers, it should only load in ie6/7/8. I'll look into this, thanks for the report.\n. I found the regression -- https://github.com/Financial-Times/polyfill-service/commit/60d4a7dcf8ec761e3eeca03db690b0867b9e38c7#commitcomment-19026572\n\nI've made a PR to revert that change -- https://github.com/Financial-Times/polyfill-service/pull/878\nI've tested this url in Chrome Stable -- /v2/polyfill.js?features=Element,Promise&flags=always,gated\nPlease send any other URLs you think I should test and any browsers you want me to test. I will test as many as possible before merging that PR and releasing it to production.\n. I tested all the URLs mentioned in this issue across the stable desktop browsers, all work with the patch.\nThe PR has been merged, a patch release is being made. It will go live to QA in 10 minutes where I will test it once more before promoting it to production. I expect it hitting production at midnight UK time.\nTo help identify this issues before they hit production, I advice you follow our twitter account where we announce new releases to qa (http://qa.polyfill.i)o and to production (https://polyfill.io). We release to qa and wait for at least 7 days before promoting to production as to allow our users to report any issues/regressions. \n. I'm testing http://qa.polyfill.io right now across as many browsers as I can before promoting to production.\nMy testing consists of visiting https://jsbin.com/joqoqebeve/edit?html,js,console,output and checking that an error may occur when I comment out lines 9 or 10 and that an error is not thrown when lines 12 or 13 execute.\nI will update this comment with the results as I get them.\n- [x] Chrome stable - passed\n- [x] Firefox stable - passed\n- [x] IE 11 - passed\n- [x] IE 8 - passed (jsbin.com doesn't work in IE8, have to use the output mode to test https://output.jsbin.com/joqoqebeve)\n- [x] Edge 13 - passed\n- [x] Edge 14 - passed\n- [x] Safari stable - passed\n- [x] Opera stable - passed\n- [x] Yandex stable - passed\n- [x] Android 6 - passed\n- [x] Android 5 - passed\n- [x] Android 4.4 - passed\n- [x] iOS 10 - passed\n- [x] iOS 9 - passed\n- [x] iOS 8 - passed\n- [x] Windows Phone 8.1 - passed\n. Latest version has been pushed to NPM and is currently being deployed to https://polyfill.io\nOnce it is deployed I will test on a couple of browsers and then close this ticket if they all pass.\n. Issue looks to be resolved, closing this ticket.\n. These have been added #1139 . @dhaselhan This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. It will head to qa.polyfill.io tomorrow and if no issues are reported for 7\ndays then it is promoted to production. If all goes smoothly it will hit\nproduction next Friday.\n. @bhandfast This is now released onto http://qa.polyfill.io, apologies it took longer than I expected.\n. @falsandtru - would you like to review this? This is the Array.from polyfill from upstream but with modifications to enable it to work with Symbol polyfills.\n. @piuccio I've added a PR for this -- #888 \n. The first part of this issue is great, thanks for spotting the misconfiguration for Opera!\n@wheresrhys Could you help with the second part of this issue at all? I seem to remember you solved this issue for Next, apologies if I've got the wrong person. If I remember correctly this is an issue with how Babel handles Symbol, it seems to want to be closely linked to core-js Symbol polyfill implementation.\n. @dlebech This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. Thanks for the quick response @dlebech, I'm glad it worked and thanks again for your pull request!\nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. @triblondon Are you suggesting we remove it as a dep?\n. I agree with your proposal \ud83d\udc4d . PR for this work here -- https://github.com/Financial-Times/polyfill-service/pull/899\n. @rubencodes This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. There is not anything we can do for arrow functions or template strings as\nthey are syntactic changes in the specification, they are impossible to\npolyfill. You will need to precompile your code to es5 using something like\nbabel.\nOn 30 Sep 2016 8:36 p.m., \"Pascal AOMS\" notifications@github.com wrote:\n\nArrow functions and Template strings are not being polyfilled.\nUsing these in IE11 breaks the script.\nIs there a way to handle these?\nThanks.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/900, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa_yoBCb1RGwAdPre47mKWEHBLGlPks5qvWSFgaJpZM4KLb-_\n.\n. This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. @zetlen Could you make a new issue which decribes the bug you are seeing? \n\nThanks for this work by the way :-)\nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. Hmm, probably not then, thanks for investigating :-)\n. This is so good! Great work!\n. Could we have some tests around the stream functionality?\n. Making a request for /v2/polyfill.js?features=all&flags=always is returning far lass than it should. I've not looked into why this happens but figured it was worth a comment.\n\n\nList of features which are being returned by this branch.\n\n\n\n```\n/* Polyfill service DEVELOPMENT MODE - for live use set NODE_ENV to 'production'\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: chrome/53.0.0\n * Features requested: all\n * \n * - AudioContext, License: CC0 (required by \"all\")\n * - Window, License: CC0 (required by \"all\", \"Event\", \"CustomEvent\", \"console\", \"getComputedStyle\", \"IntersectionObserver\", \"localStorage\")\n * - Document, License: CC0 (required by \"all\", \"Element\", \"Event\", \"CustomEvent\", \"_mutation\", \"~html5-elements\", \"HTMLPictureElement\")\n * - Element, License: CC0 (required by \"all\", \"Event\", \"CustomEvent\", \"_mutation\")\n * - Event, License: CC0 (required by \"all\", \"CustomEvent\", \"Promise\", \"XMLHttpRequest\", \"matchMedia\")\n * - CustomEvent, License: CC0 (required by \"all\")\n * - _DOMTokenList, License: CC0 (required by \"all\", \"DOMTokenList\")\n * - DOMTokenList, License: CC0 (required by \"all\")\n * - HTMLDocument, License: CC0 (required by \"all\")\n * - ~html5-elements, License: MIT (required by \"all\", \"HTMLPictureElement\")\n * - HTMLPictureElement, License: MIT (required by \"all\")\n * - getComputedStyle, License: CC0 (required by \"all\", \"IntersectionObserver\")\n * - IntersectionObserver, License: CC0 (required by \"all\")\n * - Intl, License: MIT (required by \"all\")\n * - JSON, License: MIT (required by \"all\")\n * - Symbol, License: MIT (required by \"all\", \"Map\", \"Set\", \"_ArrayIterator\")\n * - Map, License: CC0 (required by \"all\")\n * - setImmediate, License: CC0 (required by \"all\", \"Promise\")\n * - Promise, License: MIT (required by \"all\", \"fetch\")\n * - Set, License: CC0 (required by \"all\")\n * - URL, License: CC0 (required by \"all\")\n * - UserTiming, License: MIT (required by \"all\")\n * - WeakMap, License: https://github.com/webcomponents/webcomponentsjs/blob/master/LICENSE.md (required by \"all\")\n * - WeakSet, License: https://github.com/webcomponents/webcomponentsjs/blob/master/LICENSE.md (required by \"all\")\n * - XMLHttpRequest, License: CC0 (required by \"all\", \"fetch\")\n * - _ArrayIterator, License: MIT (required by \"all\")\n * - _mutation, License: CC0 (required by \"all\")\n * - atob, License: MIT (required by \"all\")\n * - console, License: CC0 (required by \"all\")\n * - devicePixelRatio, License: CC0 (required by \"all\")\n * - fetch, License: MIT (required by \"all\")\n * - localStorage, License: CC0 (required by \"all\")\n * - matchMedia, License: CC0 (required by \"all\")\n * - requestAnimationFrame, License: MIT (required by \"all\")\n * - ~viewport, License: CC0 (required by \"all\")\n * \n * Using the `all` alias with polyfill.io is a very bad idea. In a future version of the service, `all` will deliver the same behaviour as `default`, so we recommend using default instead. */\n```\n\n\n\n\nList of features which are being returned by QA.\n\n\n\n```\n/* Polyfill service DEVELOPMENT MODE - for live use set NODE_ENV to 'production'\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: chrome/53.0.0\n * Features requested: all\n * \n * - Object.defineProperty, License: CC0 (required by \"Array.from\", \"Array.isArray\", \"Array.of\", \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.fill\", \"Array.prototype.find\", \"Array.prototype.findIndex\", \"Array.prototype.keys\", \"Array.prototype.values\", \"CustomEvent\", \"DOMTokenList.prototype.@@iterator\", \"Element.prototype.classList\", \"Element.prototype.placeholder\", \"Event\", \"Event.DOMContentLoaded\", \"Event.focusin\", \"Event.hashchange\", \"Function.prototype.bind\", \"IntersectionObserver\", \"Map\", \"NodeList.prototype.@@iterator\", \"Object.create\", \"Object.defineProperties\", \"Object.getOwnPropertyDescriptor\", \"Object.setPrototypeOf\", \"Promise\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"URL\", \"WeakMap\", \"WeakSet\", \"XMLHttpRequest\", \"_ArrayIterator\", \"all\", \"document.visibilityState\", \"location.origin\", \"matchMedia\", \"screen.orientation\", \"~viewport\")\n * - Array.from, License: CC0 (required by \"all\")\n * - Array.isArray, License: CC0 (required by \"IntersectionObserver\", \"Promise\", \"all\", \"fetch\")\n * - Array.of, License: MIT (required by \"all\")\n * - Function.prototype.bind, License: MIT (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"IntersectionObserver\", \"Map\", \"NodeList.prototype.@@iterator\", \"Object.getOwnPropertyDescriptor\", \"Object.setPrototypeOf\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"_ArrayIterator\", \"all\")\n * - Object.assign, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"NodeList.prototype.@@iterator\", \"_ArrayIterator\", \"all\")\n * - Object.defineProperties, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"Map\", \"NodeList.prototype.@@iterator\", \"Object.create\", \"Object.setPrototypeOf\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"URL\", \"_ArrayIterator\", \"all\", \"location.origin\", \"~viewport\")\n * - Object.create, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"Map\", \"NodeList.prototype.@@iterator\", \"Object.setPrototypeOf\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"_ArrayIterator\", \"all\")\n * - Array.prototype.forEach, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"IntersectionObserver\", \"Map\", \"NodeList.prototype.@@iterator\", \"Object.setPrototypeOf\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"URL\", \"WeakMap\", \"WeakSet\", \"_ArrayIterator\", \"all\", \"fetch\")\n * - Object.getPrototypeOf, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"DOMTokenList.prototype.@@iterator\", \"NodeList.prototype.@@iterator\", \"Object.setPrototypeOf\", \"_ArrayIterator\", \"all\")\n * - Object.getOwnPropertyNames, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"Map\", \"NodeList.prototype.@@iterator\", \"Object.setPrototypeOf\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"_ArrayIterator\", \"all\", \"fetch\")\n * - Object.getOwnPropertyDescriptor, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"Map\", \"NodeList.prototype.@@iterator\", \"Object.setPrototypeOf\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"_ArrayIterator\", \"all\")\n * - Object.setPrototypeOf, License: MIT (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"NodeList.prototype.@@iterator\", \"_ArrayIterator\", \"all\")\n * - String.prototype.includes, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"DOMTokenList.prototype.@@iterator\", \"NodeList.prototype.@@iterator\", \"String.prototype.contains\", \"_ArrayIterator\", \"all\")\n * - String.prototype.contains, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"NodeList.prototype.@@iterator\", \"_ArrayIterator\", \"all\")\n * - Array.prototype.filter, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"IntersectionObserver\", \"Map\", \"NodeList.prototype.@@iterator\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"_ArrayIterator\", \"all\")\n * - Array.prototype.map, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"IntersectionObserver\", \"Map\", \"NodeList.prototype.@@iterator\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"_ArrayIterator\", \"all\")\n * - Object.keys, License: CC0 (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"Map\", \"NodeList.prototype.@@iterator\", \"Set\", \"Symbol\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"_ArrayIterator\", \"all\")\n * - Symbol, License: MIT (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"Map\", \"NodeList.prototype.@@iterator\", \"Set\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\", \"_ArrayIterator\", \"all\")\n * - Symbol.iterator, License: MIT (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"Map\", \"NodeList.prototype.@@iterator\", \"Set\", \"_ArrayIterator\", \"all\")\n * - Symbol.toStringTag, License: MIT (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"NodeList.prototype.@@iterator\", \"_ArrayIterator\", \"all\")\n * - _ArrayIterator, License: MIT (required by \"Array.prototype.@@iterator\", \"Array.prototype.entries\", \"Array.prototype.keys\", \"Array.prototype.values\", \"DOMTokenList.prototype.@@iterator\", \"NodeList.prototype.@@iterator\", \"all\")\n * - Array.prototype.@@iterator, License: CC0 (required by \"Array.prototype.values\", \"all\")\n * - Array.prototype.includes, License: CC0 (required by \"Array.prototype.contains\", \"all\")\n * - Array.prototype.contains, License: CC0 (required by \"all\")\n * - Array.prototype.entries, License: CC0 (required by \"all\")\n * - Array.prototype.every, License: CC0 (required by \"all\")\n * - Array.prototype.fill, License: CC0 (required by \"all\")\n * - Array.prototype.find, License: CC0 (required by \"all\")\n * - Array.prototype.findIndex, License: CC0 (required by \"all\")\n * - Array.prototype.indexOf, License: CC0 (required by \"IntersectionObserver\", \"Map\", \"Set\", \"all\")\n * - Array.prototype.keys, License: CC0 (required by \"all\")\n * - Array.prototype.lastIndexOf, License: CC0 (required by \"all\")\n * - Array.prototype.reduce, License: CC0 (required by \"all\")\n * - Array.prototype.reduceRight, License: CC0 (required by \"all\")\n * - Array.prototype.some, License: CC0 (required by \"IntersectionObserver\", \"all\")\n * - Array.prototype.values, License: MIT (required by \"all\")\n * - AudioContext, License: CC0 (required by \"all\")\n * - Window, License: CC0 (required by \"CustomEvent\", \"Event\", \"Event.DOMContentLoaded\", \"Event.focusin\", \"Event.hashchange\", \"IntersectionObserver\", \"Promise\", \"XMLHttpRequest\", \"all\", \"console\", \"console.assert\", \"console.clear\", \"console.count\", \"console.debug\", \"console.dir\", \"console.dirxml\", \"console.error\", \"console.exception\", \"console.group\", \"console.groupCollapsed\", \"console.groupEnd\", \"console.info\", \"console.log\", \"console.markTimeline\", \"console.profile\", \"console.profileEnd\", \"console.profiles\", \"console.table\", \"console.time\", \"console.timeEnd\", \"console.timeStamp\", \"console.timeline\", \"console.timelineEnd\", \"console.trace\", \"console.warn\", \"document.visibilityState\", \"getComputedStyle\", \"localStorage\", \"matchMedia\")\n * - Document, License: CC0 (required by \"CustomEvent\", \"Element\", \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.classList\", \"Element.prototype.cloneNode\", \"Element.prototype.closest\", \"Element.prototype.matches\", \"Element.prototype.placeholder\", \"Element.prototype.prepend\", \"Element.prototype.remove\", \"Element.prototype.replaceWith\", \"Event\", \"Event.DOMContentLoaded\", \"Event.focusin\", \"Event.hashchange\", \"HTMLPictureElement\", \"Node.prototype.contains\", \"Promise\", \"XMLHttpRequest\", \"_mutation\", \"all\", \"document.getElementsByClassName\", \"document.head\", \"document.querySelector\", \"document.visibilityState\", \"matchMedia\", \"navigator.geolocation\", \"~html5-elements\")\n * - Element, License: CC0 (required by \"CustomEvent\", \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.classList\", \"Element.prototype.cloneNode\", \"Element.prototype.closest\", \"Element.prototype.matches\", \"Element.prototype.placeholder\", \"Element.prototype.prepend\", \"Element.prototype.remove\", \"Element.prototype.replaceWith\", \"Event\", \"Event.DOMContentLoaded\", \"Event.focusin\", \"Event.hashchange\", \"Node.prototype.contains\", \"Promise\", \"XMLHttpRequest\", \"_mutation\", \"all\", \"document.getElementsByClassName\", \"document.querySelector\", \"document.visibilityState\", \"matchMedia\")\n * - Event, License: CC0 (required by \"CustomEvent\", \"Event.DOMContentLoaded\", \"Event.focusin\", \"Event.hashchange\", \"Promise\", \"XMLHttpRequest\", \"all\", \"document.visibilityState\", \"fetch\", \"matchMedia\", \"navigator.sendBeacon\")\n * - CustomEvent, License: CC0 (required by \"all\", \"document.visibilityState\")\n * - _DOMTokenList, License: CC0 (required by \"DOMTokenList\", \"Element.prototype.classList\", \"all\")\n * - DOMTokenList, License: CC0 (required by \"all\")\n * - DOMTokenList.prototype.@@iterator, License: MIT (required by \"all\")\n * - Date.now, License: CC0 (required by \"WeakMap\", \"WeakSet\", \"all\", \"performance.now\", \"requestAnimationFrame\")\n * - Date.prototype.toISOString, License: CC0 (required by \"all\")\n * - _mutation, License: CC0 (required by \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.prepend\", \"Element.prototype.remove\", \"Element.prototype.replaceWith\", \"all\")\n * - Element.prototype.after, License: CC0 (required by \"all\")\n * - Element.prototype.append, License: CC0 (required by \"all\")\n * - Element.prototype.before, License: CC0 (required by \"all\")\n * - Element.prototype.classList, License: CC0 (required by \"all\")\n * - Element.prototype.cloneNode, License: CC0 (required by \"all\")\n * - document.querySelector, License: CC0 (required by \"Element.prototype.closest\", \"Element.prototype.matches\", \"Element.prototype.placeholder\", \"all\", \"document.getElementsByClassName\")\n * - Element.prototype.matches, License: CC0 (required by \"Element.prototype.closest\", \"all\")\n * - Element.prototype.closest, License: CC0 (required by \"all\")\n * - Element.prototype.placeholder, License: CC0 (required by \"all\")\n * - Element.prototype.prepend, License: CC0 (required by \"all\")\n * - Element.prototype.remove, License: CC0 (required by \"all\")\n * - Element.prototype.replaceWith, License: CC0 (required by \"all\")\n * - Event.DOMContentLoaded, License: CC0 (required by \"all\")\n * - Event.focusin, License: CC0 (required by \"all\")\n * - Event.hashchange, License: CC0 (required by \"all\")\n * - HTMLDocument, License: CC0 (required by \"all\")\n * - ~html5-elements, License: MIT (required by \"HTMLPictureElement\", \"all\")\n * - HTMLPictureElement, License: MIT (required by \"all\")\n * - getComputedStyle, License: CC0 (required by \"IntersectionObserver\", \"all\")\n * - IntersectionObserver, License: CC0 (required by \"all\")\n * - Intl, License: MIT (required by \"Intl.~locale.af\", \"Intl.~locale.af-NA\", \"Intl.~locale.af-ZA\", \"Intl.~locale.agq\", \"Intl.~locale.agq-CM\", \"Intl.~locale.ak\", \"Intl.~locale.ak-GH\", \"Intl.~locale.am\", \"Intl.~locale.am-ET\", \"Intl.~locale.ar\", \"Intl.~locale.ar-001\", \"Intl.~locale.ar-AE\", \"Intl.~locale.ar-BH\", \"Intl.~locale.ar-DJ\", \"Intl.~locale.ar-DZ\", \"Intl.~locale.ar-EG\", \"Intl.~locale.ar-EH\", \"Intl.~locale.ar-ER\", \"Intl.~locale.ar-IL\", \"Intl.~locale.ar-IQ\", \"Intl.~locale.ar-JO\", \"Intl.~locale.ar-KM\", \"Intl.~locale.ar-KW\", \"Intl.~locale.ar-LB\", \"Intl.~locale.ar-LY\", \"Intl.~locale.ar-MA\", \"Intl.~locale.ar-MR\", \"Intl.~locale.ar-OM\", \"Intl.~locale.ar-PS\", \"Intl.~locale.ar-QA\", \"Intl.~locale.ar-SA\", \"Intl.~locale.ar-SD\", \"Intl.~locale.ar-SO\", \"Intl.~locale.ar-SS\", \"Intl.~locale.ar-SY\", \"Intl.~locale.ar-TD\", \"Intl.~locale.ar-TN\", \"Intl.~locale.ar-YE\", \"Intl.~locale.as\", \"Intl.~locale.as-IN\", \"Intl.~locale.asa\", \"Intl.~locale.asa-TZ\", \"Intl.~locale.ast\", \"Intl.~locale.ast-ES\", \"Intl.~locale.az\", \"Intl.~locale.az-Arab\", \"Intl.~locale.az-Cyrl\", \"Intl.~locale.az-Cyrl-AZ\", \"Intl.~locale.az-Latn\", \"Intl.~locale.az-Latn-AZ\", \"Intl.~locale.bas\", \"Intl.~locale.bas-CM\", \"Intl.~locale.be\", \"Intl.~locale.be-BY\", \"Intl.~locale.bem\", \"Intl.~locale.bem-ZM\", \"Intl.~locale.bez\", \"Intl.~locale.bez-TZ\", \"Intl.~locale.bg\", \"Intl.~locale.bg-BG\", \"Intl.~locale.bm\", \"Intl.~locale.bm-ML\", \"Intl.~locale.bm-Nkoo\", \"Intl.~locale.bn\", \"Intl.~locale.bn-BD\", \"Intl.~locale.bn-IN\", \"Intl.~locale.bo\", \"Intl.~locale.bo-CN\", \"Intl.~locale.bo-IN\", \"Intl.~locale.br\", \"Intl.~locale.br-FR\", \"Intl.~locale.brx\", \"Intl.~locale.brx-IN\", \"Intl.~locale.bs\", \"Intl.~locale.bs-Cyrl\", \"Intl.~locale.bs-Cyrl-BA\", \"Intl.~locale.bs-Latn\", \"Intl.~locale.bs-Latn-BA\", \"Intl.~locale.ca\", \"Intl.~locale.ca-AD\", \"Intl.~locale.ca-ES\", \"Intl.~locale.ca-ES-VALENCIA\", \"Intl.~locale.ca-FR\", \"Intl.~locale.ca-IT\", \"Intl.~locale.ce\", \"Intl.~locale.ce-RU\", \"Intl.~locale.cgg\", \"Intl.~locale.cgg-UG\", \"Intl.~locale.chr\", \"Intl.~locale.chr-US\", \"Intl.~locale.ckb\", \"Intl.~locale.ckb-IQ\", \"Intl.~locale.ckb-IR\", \"Intl.~locale.cs\", \"Intl.~locale.cs-CZ\", \"Intl.~locale.cu\", \"Intl.~locale.cu-RU\", \"Intl.~locale.cy\", \"Intl.~locale.cy-GB\", \"Intl.~locale.da\", \"Intl.~locale.da-DK\", \"Intl.~locale.da-GL\", \"Intl.~locale.dav\", \"Intl.~locale.dav-KE\", \"Intl.~locale.de\", \"Intl.~locale.de-AT\", \"Intl.~locale.de-BE\", \"Intl.~locale.de-CH\", \"Intl.~locale.de-DE\", \"Intl.~locale.de-LI\", \"Intl.~locale.de-LU\", \"Intl.~locale.dje\", \"Intl.~locale.dje-NE\", \"Intl.~locale.dsb\", \"Intl.~locale.dsb-DE\", \"Intl.~locale.dua\", \"Intl.~locale.dua-CM\", \"Intl.~locale.dyo\", \"Intl.~locale.dyo-SN\", \"Intl.~locale.dz\", \"Intl.~locale.dz-BT\", \"Intl.~locale.ebu\", \"Intl.~locale.ebu-KE\", \"Intl.~locale.ee\", \"Intl.~locale.ee-GH\", \"Intl.~locale.ee-TG\", \"Intl.~locale.el\", \"Intl.~locale.el-CY\", \"Intl.~locale.el-GR\", \"Intl.~locale.en\", \"Intl.~locale.en-001\", \"Intl.~locale.en-150\", \"Intl.~locale.en-AG\", \"Intl.~locale.en-AI\", \"Intl.~locale.en-AS\", \"Intl.~locale.en-AT\", \"Intl.~locale.en-AU\", \"Intl.~locale.en-BB\", \"Intl.~locale.en-BE\", \"Intl.~locale.en-BI\", \"Intl.~locale.en-BM\", \"Intl.~locale.en-BS\", \"Intl.~locale.en-BW\", \"Intl.~locale.en-BZ\", \"Intl.~locale.en-CA\", \"Intl.~locale.en-CC\", \"Intl.~locale.en-CH\", \"Intl.~locale.en-CK\", \"Intl.~locale.en-CM\", \"Intl.~locale.en-CX\", \"Intl.~locale.en-CY\", \"Intl.~locale.en-DE\", \"Intl.~locale.en-DG\", \"Intl.~locale.en-DK\", \"Intl.~locale.en-DM\", \"Intl.~locale.en-Dsrt\", \"Intl.~locale.en-ER\", \"Intl.~locale.en-FI\", \"Intl.~locale.en-FJ\", \"Intl.~locale.en-FK\", \"Intl.~locale.en-FM\", \"Intl.~locale.en-GB\", \"Intl.~locale.en-GD\", \"Intl.~locale.en-GG\", \"Intl.~locale.en-GH\", \"Intl.~locale.en-GI\", \"Intl.~locale.en-GM\", \"Intl.~locale.en-GU\", \"Intl.~locale.en-GY\", \"Intl.~locale.en-HK\", \"Intl.~locale.en-IE\", \"Intl.~locale.en-IL\", \"Intl.~locale.en-IM\", \"Intl.~locale.en-IN\", \"Intl.~locale.en-IO\", \"Intl.~locale.en-JE\", \"Intl.~locale.en-JM\", \"Intl.~locale.en-KE\", \"Intl.~locale.en-KI\", \"Intl.~locale.en-KN\", \"Intl.~locale.en-KY\", \"Intl.~locale.en-LC\", \"Intl.~locale.en-LR\", \"Intl.~locale.en-LS\", \"Intl.~locale.en-MG\", \"Intl.~locale.en-MH\", \"Intl.~locale.en-MO\", \"Intl.~locale.en-MP\", \"Intl.~locale.en-MS\", \"Intl.~locale.en-MT\", \"Intl.~locale.en-MU\", \"Intl.~locale.en-MW\", \"Intl.~locale.en-MY\", \"Intl.~locale.en-NA\", \"Intl.~locale.en-NF\", \"Intl.~locale.en-NG\", \"Intl.~locale.en-NL\", \"Intl.~locale.en-NR\", \"Intl.~locale.en-NU\", \"Intl.~locale.en-NZ\", \"Intl.~locale.en-PG\", \"Intl.~locale.en-PH\", \"Intl.~locale.en-PK\", \"Intl.~locale.en-PN\", \"Intl.~locale.en-PR\", \"Intl.~locale.en-PW\", \"Intl.~locale.en-RW\", \"Intl.~locale.en-SB\", \"Intl.~locale.en-SC\", \"Intl.~locale.en-SD\", \"Intl.~locale.en-SE\", \"Intl.~locale.en-SG\", \"Intl.~locale.en-SH\", \"Intl.~locale.en-SI\", \"Intl.~locale.en-SL\", \"Intl.~locale.en-SS\", \"Intl.~locale.en-SX\", \"Intl.~locale.en-SZ\", \"Intl.~locale.en-Shaw\", \"Intl.~locale.en-TC\", \"Intl.~locale.en-TK\", \"Intl.~locale.en-TO\", \"Intl.~locale.en-TT\", \"Intl.~locale.en-TV\", \"Intl.~locale.en-TZ\", \"Intl.~locale.en-UG\", \"Intl.~locale.en-UM\", \"Intl.~locale.en-US\", \"Intl.~locale.en-VC\", \"Intl.~locale.en-VG\", \"Intl.~locale.en-VI\", \"Intl.~locale.en-VU\", \"Intl.~locale.en-WS\", \"Intl.~locale.en-ZA\", \"Intl.~locale.en-ZM\", \"Intl.~locale.en-ZW\", \"Intl.~locale.eo\", \"Intl.~locale.eo-001\", \"Intl.~locale.es\", \"Intl.~locale.es-419\", \"Intl.~locale.es-AR\", \"Intl.~locale.es-BO\", \"Intl.~locale.es-CL\", \"Intl.~locale.es-CO\", \"Intl.~locale.es-CR\", \"Intl.~locale.es-CU\", \"Intl.~locale.es-DO\", \"Intl.~locale.es-EA\", \"Intl.~locale.es-EC\", \"Intl.~locale.es-ES\", \"Intl.~locale.es-GQ\", \"Intl.~locale.es-GT\", \"Intl.~locale.es-HN\", \"Intl.~locale.es-IC\", \"Intl.~locale.es-MX\", \"Intl.~locale.es-NI\", \"Intl.~locale.es-PA\", \"Intl.~locale.es-PE\", \"Intl.~locale.es-PH\", \"Intl.~locale.es-PR\", \"Intl.~locale.es-PY\", \"Intl.~locale.es-SV\", \"Intl.~locale.es-US\", \"Intl.~locale.es-UY\", \"Intl.~locale.es-VE\", \"Intl.~locale.et\", \"Intl.~locale.et-EE\", \"Intl.~locale.eu\", \"Intl.~locale.eu-ES\", \"Intl.~locale.ewo\", \"Intl.~locale.ewo-CM\", \"Intl.~locale.fa\", \"Intl.~locale.fa-AF\", \"Intl.~locale.fa-IR\", \"Intl.~locale.ff\", \"Intl.~locale.ff-CM\", \"Intl.~locale.ff-GN\", \"Intl.~locale.ff-MR\", \"Intl.~locale.ff-SN\", \"Intl.~locale.fi\", \"Intl.~locale.fi-FI\", \"Intl.~locale.fil\", \"Intl.~locale.fil-PH\", \"Intl.~locale.fo\", \"Intl.~locale.fo-DK\", \"Intl.~locale.fo-FO\", \"Intl.~locale.fr\", \"Intl.~locale.fr-BE\", \"Intl.~locale.fr-BF\", \"Intl.~locale.fr-BI\", \"Intl.~locale.fr-BJ\", \"Intl.~locale.fr-BL\", \"Intl.~locale.fr-CA\", \"Intl.~locale.fr-CD\", \"Intl.~locale.fr-CF\", \"Intl.~locale.fr-CG\", \"Intl.~locale.fr-CH\", \"Intl.~locale.fr-CI\", \"Intl.~locale.fr-CM\", \"Intl.~locale.fr-DJ\", \"Intl.~locale.fr-DZ\", \"Intl.~locale.fr-FR\", \"Intl.~locale.fr-GA\", \"Intl.~locale.fr-GF\", \"Intl.~locale.fr-GN\", \"Intl.~locale.fr-GP\", \"Intl.~locale.fr-GQ\", \"Intl.~locale.fr-HT\", \"Intl.~locale.fr-KM\", \"Intl.~locale.fr-LU\", \"Intl.~locale.fr-MA\", \"Intl.~locale.fr-MC\", \"Intl.~locale.fr-MF\", \"Intl.~locale.fr-MG\", \"Intl.~locale.fr-ML\", \"Intl.~locale.fr-MQ\", \"Intl.~locale.fr-MR\", \"Intl.~locale.fr-MU\", \"Intl.~locale.fr-NC\", \"Intl.~locale.fr-NE\", \"Intl.~locale.fr-PF\", \"Intl.~locale.fr-PM\", \"Intl.~locale.fr-RE\", \"Intl.~locale.fr-RW\", \"Intl.~locale.fr-SC\", \"Intl.~locale.fr-SN\", \"Intl.~locale.fr-SY\", \"Intl.~locale.fr-TD\", \"Intl.~locale.fr-TG\", \"Intl.~locale.fr-TN\", \"Intl.~locale.fr-VU\", \"Intl.~locale.fr-WF\", \"Intl.~locale.fr-YT\", \"Intl.~locale.fur\", \"Intl.~locale.fur-IT\", \"Intl.~locale.fy\", \"Intl.~locale.fy-NL\", \"Intl.~locale.ga\", \"Intl.~locale.ga-IE\", \"Intl.~locale.gd\", \"Intl.~locale.gd-GB\", \"Intl.~locale.gl\", \"Intl.~locale.gl-ES\", \"Intl.~locale.gsw\", \"Intl.~locale.gsw-CH\", \"Intl.~locale.gsw-FR\", \"Intl.~locale.gsw-LI\", \"Intl.~locale.gu\", \"Intl.~locale.gu-IN\", \"Intl.~locale.guz\", \"Intl.~locale.guz-KE\", \"Intl.~locale.gv\", \"Intl.~locale.gv-IM\", \"Intl.~locale.ha\", \"Intl.~locale.ha-Arab\", \"Intl.~locale.ha-GH\", \"Intl.~locale.ha-NE\", \"Intl.~locale.ha-NG\", \"Intl.~locale.haw\", \"Intl.~locale.haw-US\", \"Intl.~locale.he\", \"Intl.~locale.he-IL\", \"Intl.~locale.hi\", \"Intl.~locale.hi-IN\", \"Intl.~locale.hr\", \"Intl.~locale.hr-BA\", \"Intl.~locale.hr-HR\", \"Intl.~locale.hsb\", \"Intl.~locale.hsb-DE\", \"Intl.~locale.hu\", \"Intl.~locale.hu-HU\", \"Intl.~locale.hy\", \"Intl.~locale.hy-AM\", \"Intl.~locale.id\", \"Intl.~locale.id-ID\", \"Intl.~locale.ig\", \"Intl.~locale.ig-NG\", \"Intl.~locale.ii\", \"Intl.~locale.ii-CN\", \"Intl.~locale.is\", \"Intl.~locale.is-IS\", \"Intl.~locale.it\", \"Intl.~locale.it-CH\", \"Intl.~locale.it-IT\", \"Intl.~locale.it-SM\", \"Intl.~locale.iu-Latn\", \"Intl.~locale.ja\", \"Intl.~locale.ja-JP\", \"Intl.~locale.jgo\", \"Intl.~locale.jgo-CM\", \"Intl.~locale.jmc\", \"Intl.~locale.jmc-TZ\", \"Intl.~locale.ka\", \"Intl.~locale.ka-GE\", \"Intl.~locale.kab\", \"Intl.~locale.kab-DZ\", \"Intl.~locale.kam\", \"Intl.~locale.kam-KE\", \"Intl.~locale.kde\", \"Intl.~locale.kde-TZ\", \"Intl.~locale.kea\", \"Intl.~locale.kea-CV\", \"Intl.~locale.khq\", \"Intl.~locale.khq-ML\", \"Intl.~locale.ki\", \"Intl.~locale.ki-KE\", \"Intl.~locale.kk\", \"Intl.~locale.kk-KZ\", \"Intl.~locale.kkj\", \"Intl.~locale.kkj-CM\", \"Intl.~locale.kl\", \"Intl.~locale.kl-GL\", \"Intl.~locale.kln\", \"Intl.~locale.kln-KE\", \"Intl.~locale.km\", \"Intl.~locale.km-KH\", \"Intl.~locale.kn\", \"Intl.~locale.kn-IN\", \"Intl.~locale.ko\", \"Intl.~locale.ko-KP\", \"Intl.~locale.ko-KR\", \"Intl.~locale.kok\", \"Intl.~locale.kok-IN\", \"Intl.~locale.ks\", \"Intl.~locale.ks-IN\", \"Intl.~locale.ksb\", \"Intl.~locale.ksb-TZ\", \"Intl.~locale.ksf\", \"Intl.~locale.ksf-CM\", \"Intl.~locale.ksh\", \"Intl.~locale.ksh-DE\", \"Intl.~locale.kw\", \"Intl.~locale.kw-GB\", \"Intl.~locale.ky\", \"Intl.~locale.ky-KG\", \"Intl.~locale.lag\", \"Intl.~locale.lag-TZ\", \"Intl.~locale.lb\", \"Intl.~locale.lb-LU\", \"Intl.~locale.lg\", \"Intl.~locale.lg-UG\", \"Intl.~locale.lkt\", \"Intl.~locale.lkt-US\", \"Intl.~locale.ln\", \"Intl.~locale.ln-AO\", \"Intl.~locale.ln-CD\", \"Intl.~locale.ln-CF\", \"Intl.~locale.ln-CG\", \"Intl.~locale.lo\", \"Intl.~locale.lo-LA\", \"Intl.~locale.lrc\", \"Intl.~locale.lrc-IQ\", \"Intl.~locale.lrc-IR\", \"Intl.~locale.lt\", \"Intl.~locale.lt-LT\", \"Intl.~locale.lu\", \"Intl.~locale.lu-CD\", \"Intl.~locale.luo\", \"Intl.~locale.luo-KE\", \"Intl.~locale.luy\", \"Intl.~locale.luy-KE\", \"Intl.~locale.lv\", \"Intl.~locale.lv-LV\", \"Intl.~locale.mas\", \"Intl.~locale.mas-KE\", \"Intl.~locale.mas-TZ\", \"Intl.~locale.mer\", \"Intl.~locale.mer-KE\", \"Intl.~locale.mfe\", \"Intl.~locale.mfe-MU\", \"Intl.~locale.mg\", \"Intl.~locale.mg-MG\", \"Intl.~locale.mgh\", \"Intl.~locale.mgh-MZ\", \"Intl.~locale.mgo\", \"Intl.~locale.mgo-CM\", \"Intl.~locale.mk\", \"Intl.~locale.mk-MK\", \"Intl.~locale.ml\", \"Intl.~locale.ml-IN\", \"Intl.~locale.mn\", \"Intl.~locale.mn-MN\", \"Intl.~locale.mn-Mong\", \"Intl.~locale.mr\", \"Intl.~locale.mr-IN\", \"Intl.~locale.ms\", \"Intl.~locale.ms-Arab\", \"Intl.~locale.ms-BN\", \"Intl.~locale.ms-MY\", \"Intl.~locale.ms-SG\", \"Intl.~locale.mt\", \"Intl.~locale.mt-MT\", \"Intl.~locale.mua\", \"Intl.~locale.mua-CM\", \"Intl.~locale.my\", \"Intl.~locale.my-MM\", \"Intl.~locale.mzn\", \"Intl.~locale.mzn-IR\", \"Intl.~locale.naq\", \"Intl.~locale.naq-NA\", \"Intl.~locale.nb\", \"Intl.~locale.nb-NO\", \"Intl.~locale.nb-SJ\", \"Intl.~locale.nd\", \"Intl.~locale.nd-ZW\", \"Intl.~locale.ne\", \"Intl.~locale.ne-IN\", \"Intl.~locale.ne-NP\", \"Intl.~locale.nl\", \"Intl.~locale.nl-AW\", \"Intl.~locale.nl-BE\", \"Intl.~locale.nl-BQ\", \"Intl.~locale.nl-CW\", \"Intl.~locale.nl-NL\", \"Intl.~locale.nl-SR\", \"Intl.~locale.nl-SX\", \"Intl.~locale.nmg\", \"Intl.~locale.nmg-CM\", \"Intl.~locale.nn\", \"Intl.~locale.nn-NO\", \"Intl.~locale.nnh\", \"Intl.~locale.nnh-CM\", \"Intl.~locale.nus\", \"Intl.~locale.nus-SS\", \"Intl.~locale.nyn\", \"Intl.~locale.nyn-UG\", \"Intl.~locale.om\", \"Intl.~locale.om-ET\", \"Intl.~locale.om-KE\", \"Intl.~locale.or\", \"Intl.~locale.or-IN\", \"Intl.~locale.os\", \"Intl.~locale.os-GE\", \"Intl.~locale.os-RU\", \"Intl.~locale.pa\", \"Intl.~locale.pa-Arab\", \"Intl.~locale.pa-Arab-PK\", \"Intl.~locale.pa-Guru\", \"Intl.~locale.pa-Guru-IN\", \"Intl.~locale.pl\", \"Intl.~locale.pl-PL\", \"Intl.~locale.prg\", \"Intl.~locale.prg-001\", \"Intl.~locale.ps\", \"Intl.~locale.ps-AF\", \"Intl.~locale.pt\", \"Intl.~locale.pt-AO\", \"Intl.~locale.pt-BR\", \"Intl.~locale.pt-CV\", \"Intl.~locale.pt-GW\", \"Intl.~locale.pt-MO\", \"Intl.~locale.pt-MZ\", \"Intl.~locale.pt-PT\", \"Intl.~locale.pt-ST\", \"Intl.~locale.pt-TL\", \"Intl.~locale.qu\", \"Intl.~locale.qu-BO\", \"Intl.~locale.qu-EC\", \"Intl.~locale.qu-PE\", \"Intl.~locale.rm\", \"Intl.~locale.rm-CH\", \"Intl.~locale.rn\", \"Intl.~locale.rn-BI\", \"Intl.~locale.ro\", \"Intl.~locale.ro-MD\", \"Intl.~locale.ro-RO\", \"Intl.~locale.rof\", \"Intl.~locale.rof-TZ\", \"Intl.~locale.root\", \"Intl.~locale.ru\", \"Intl.~locale.ru-BY\", \"Intl.~locale.ru-KG\", \"Intl.~locale.ru-KZ\", \"Intl.~locale.ru-MD\", \"Intl.~locale.ru-RU\", \"Intl.~locale.ru-UA\", \"Intl.~locale.rw\", \"Intl.~locale.rw-RW\", \"Intl.~locale.rwk\", \"Intl.~locale.rwk-TZ\", \"Intl.~locale.sah\", \"Intl.~locale.sah-RU\", \"Intl.~locale.saq\", \"Intl.~locale.saq-KE\", \"Intl.~locale.sbp\", \"Intl.~locale.sbp-TZ\", \"Intl.~locale.se\", \"Intl.~locale.se-FI\", \"Intl.~locale.se-NO\", \"Intl.~locale.se-SE\", \"Intl.~locale.seh\", \"Intl.~locale.seh-MZ\", \"Intl.~locale.ses\", \"Intl.~locale.ses-ML\", \"Intl.~locale.sg\", \"Intl.~locale.sg-CF\", \"Intl.~locale.shi\", \"Intl.~locale.shi-Latn\", \"Intl.~locale.shi-Latn-MA\", \"Intl.~locale.shi-Tfng\", \"Intl.~locale.shi-Tfng-MA\", \"Intl.~locale.si\", \"Intl.~locale.si-LK\", \"Intl.~locale.sk\", \"Intl.~locale.sk-SK\", \"Intl.~locale.sl\", \"Intl.~locale.sl-SI\", \"Intl.~locale.smn\", \"Intl.~locale.smn-FI\", \"Intl.~locale.sn\", \"Intl.~locale.sn-ZW\", \"Intl.~locale.so\", \"Intl.~locale.so-DJ\", \"Intl.~locale.so-ET\", \"Intl.~locale.so-KE\", \"Intl.~locale.so-SO\", \"Intl.~locale.sq\", \"Intl.~locale.sq-AL\", \"Intl.~locale.sq-MK\", \"Intl.~locale.sq-XK\", \"Intl.~locale.sr\", \"Intl.~locale.sr-Cyrl\", \"Intl.~locale.sr-Cyrl-BA\", \"Intl.~locale.sr-Cyrl-ME\", \"Intl.~locale.sr-Cyrl-RS\", \"Intl.~locale.sr-Cyrl-XK\", \"Intl.~locale.sr-Latn\", \"Intl.~locale.sr-Latn-BA\", \"Intl.~locale.sr-Latn-ME\", \"Intl.~locale.sr-Latn-RS\", \"Intl.~locale.sr-Latn-XK\", \"Intl.~locale.sv\", \"Intl.~locale.sv-AX\", \"Intl.~locale.sv-FI\", \"Intl.~locale.sv-SE\", \"Intl.~locale.sw\", \"Intl.~locale.sw-CD\", \"Intl.~locale.sw-KE\", \"Intl.~locale.sw-TZ\", \"Intl.~locale.sw-UG\", \"Intl.~locale.ta\", \"Intl.~locale.ta-IN\", \"Intl.~locale.ta-LK\", \"Intl.~locale.ta-MY\", \"Intl.~locale.ta-SG\", \"Intl.~locale.te\", \"Intl.~locale.te-IN\", \"Intl.~locale.teo\", \"Intl.~locale.teo-KE\", \"Intl.~locale.teo-UG\", \"Intl.~locale.th\", \"Intl.~locale.th-TH\", \"Intl.~locale.ti\", \"Intl.~locale.ti-ER\", \"Intl.~locale.ti-ET\", \"Intl.~locale.tk\", \"Intl.~locale.tk-TM\", \"Intl.~locale.to\", \"Intl.~locale.to-TO\", \"Intl.~locale.tr\", \"Intl.~locale.tr-CY\", \"Intl.~locale.tr-TR\", \"Intl.~locale.twq\", \"Intl.~locale.twq-NE\", \"Intl.~locale.tzm\", \"Intl.~locale.tzm-MA\", \"Intl.~locale.ug\", \"Intl.~locale.ug-CN\", \"Intl.~locale.uk\", \"Intl.~locale.uk-UA\", \"Intl.~locale.ur\", \"Intl.~locale.ur-IN\", \"Intl.~locale.ur-PK\", \"Intl.~locale.uz\", \"Intl.~locale.uz-Arab\", \"Intl.~locale.uz-Arab-AF\", \"Intl.~locale.uz-Cyrl\", \"Intl.~locale.uz-Cyrl-UZ\", \"Intl.~locale.uz-Latn\", \"Intl.~locale.uz-Latn-UZ\", \"Intl.~locale.vai\", \"Intl.~locale.vai-Latn\", \"Intl.~locale.vai-Latn-LR\", \"Intl.~locale.vai-Vaii\", \"Intl.~locale.vai-Vaii-LR\", \"Intl.~locale.vi\", \"Intl.~locale.vi-VN\", \"Intl.~locale.vo\", \"Intl.~locale.vo-001\", \"Intl.~locale.vun\", \"Intl.~locale.vun-TZ\", \"Intl.~locale.wae\", \"Intl.~locale.wae-CH\", \"Intl.~locale.xog\", \"Intl.~locale.xog-UG\", \"Intl.~locale.yav\", \"Intl.~locale.yav-CM\", \"Intl.~locale.yi\", \"Intl.~locale.yi-001\", \"Intl.~locale.yo\", \"Intl.~locale.yo-BJ\", \"Intl.~locale.yo-NG\", \"Intl.~locale.zgh\", \"Intl.~locale.zgh-MA\", \"Intl.~locale.zh\", \"Intl.~locale.zh-Hans\", \"Intl.~locale.zh-Hans-CN\", \"Intl.~locale.zh-Hans-HK\", \"Intl.~locale.zh-Hans-MO\", \"Intl.~locale.zh-Hans-SG\", \"Intl.~locale.zh-Hant\", \"Intl.~locale.zh-Hant-HK\", \"Intl.~locale.zh-Hant-MO\", \"Intl.~locale.zh-Hant-TW\", \"Intl.~locale.zu\", \"Intl.~locale.zu-ZA\", \"all\")\n * - Intl.~locale.af-NA, License: MIT (required by \"all\")\n * - Intl.~locale.af-ZA, License: MIT (required by \"all\")\n * - Intl.~locale.af, License: MIT (required by \"all\")\n * - Intl.~locale.agq-CM, License: MIT (required by \"all\")\n * - Intl.~locale.agq, License: MIT (required by \"all\")\n * - Intl.~locale.ak-GH, License: MIT (required by \"all\")\n * - Intl.~locale.ak, License: MIT (required by \"all\")\n * - Intl.~locale.am-ET, License: MIT (required by \"all\")\n * - Intl.~locale.am, License: MIT (required by \"all\")\n * - Intl.~locale.ar-001, License: MIT (required by \"all\")\n * - Intl.~locale.ar-AE, License: MIT (required by \"all\")\n * - Intl.~locale.ar-BH, License: MIT (required by \"all\")\n * - Intl.~locale.ar-DJ, License: MIT (required by \"all\")\n * - Intl.~locale.ar-DZ, License: MIT (required by \"all\")\n * - Intl.~locale.ar-EG, License: MIT (required by \"all\")\n * - Intl.~locale.ar-EH, License: MIT (required by \"all\")\n * - Intl.~locale.ar-ER, License: MIT (required by \"all\")\n * - Intl.~locale.ar-IL, License: MIT (required by \"all\")\n * - Intl.~locale.ar-IQ, License: MIT (required by \"all\")\n * - Intl.~locale.ar-JO, License: MIT (required by \"all\")\n * - Intl.~locale.ar-KM, License: MIT (required by \"all\")\n * - Intl.~locale.ar-KW, License: MIT (required by \"all\")\n * - Intl.~locale.ar-LB, License: MIT (required by \"all\")\n * - Intl.~locale.ar-LY, License: MIT (required by \"all\")\n * - Intl.~locale.ar-MA, License: MIT (required by \"all\")\n * - Intl.~locale.ar-MR, License: MIT (required by \"all\")\n * - Intl.~locale.ar-OM, License: MIT (required by \"all\")\n * - Intl.~locale.ar-PS, License: MIT (required by \"all\")\n * - Intl.~locale.ar-QA, License: MIT (required by \"all\")\n * - Intl.~locale.ar-SA, License: MIT (required by \"all\")\n * - Intl.~locale.ar-SD, License: MIT (required by \"all\")\n * - Intl.~locale.ar-SO, License: MIT (required by \"all\")\n * - Intl.~locale.ar-SS, License: MIT (required by \"all\")\n * - Intl.~locale.ar-SY, License: MIT (required by \"all\")\n * - Intl.~locale.ar-TD, License: MIT (required by \"all\")\n * - Intl.~locale.ar-TN, License: MIT (required by \"all\")\n * - Intl.~locale.ar-YE, License: MIT (required by \"all\")\n * - Intl.~locale.ar, License: MIT (required by \"all\")\n * - Intl.~locale.as-IN, License: MIT (required by \"all\")\n * - Intl.~locale.as, License: MIT (required by \"all\")\n * - Intl.~locale.asa-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.asa, License: MIT (required by \"all\")\n * - Intl.~locale.ast-ES, License: MIT (required by \"all\")\n * - Intl.~locale.ast, License: MIT (required by \"all\")\n * - Intl.~locale.az-Arab, License: MIT (required by \"all\")\n * - Intl.~locale.az-Cyrl-AZ, License: MIT (required by \"all\")\n * - Intl.~locale.az-Cyrl, License: MIT (required by \"all\")\n * - Intl.~locale.az-Latn-AZ, License: MIT (required by \"all\")\n * - Intl.~locale.az-Latn, License: MIT (required by \"all\")\n * - Intl.~locale.az, License: MIT (required by \"all\")\n * - Intl.~locale.bas-CM, License: MIT (required by \"all\")\n * - Intl.~locale.bas, License: MIT (required by \"all\")\n * - Intl.~locale.be-BY, License: MIT (required by \"all\")\n * - Intl.~locale.be, License: MIT (required by \"all\")\n * - Intl.~locale.bem-ZM, License: MIT (required by \"all\")\n * - Intl.~locale.bem, License: MIT (required by \"all\")\n * - Intl.~locale.bez-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.bez, License: MIT (required by \"all\")\n * - Intl.~locale.bg-BG, License: MIT (required by \"all\")\n * - Intl.~locale.bg, License: MIT (required by \"all\")\n * - Intl.~locale.bm-ML, License: MIT (required by \"all\")\n * - Intl.~locale.bm-Nkoo, License: MIT (required by \"all\")\n * - Intl.~locale.bm, License: MIT (required by \"all\")\n * - Intl.~locale.bn-BD, License: MIT (required by \"all\")\n * - Intl.~locale.bn-IN, License: MIT (required by \"all\")\n * - Intl.~locale.bn, License: MIT (required by \"all\")\n * - Intl.~locale.bo-CN, License: MIT (required by \"all\")\n * - Intl.~locale.bo-IN, License: MIT (required by \"all\")\n * - Intl.~locale.bo, License: MIT (required by \"all\")\n * - Intl.~locale.br-FR, License: MIT (required by \"all\")\n * - Intl.~locale.br, License: MIT (required by \"all\")\n * - Intl.~locale.brx-IN, License: MIT (required by \"all\")\n * - Intl.~locale.brx, License: MIT (required by \"all\")\n * - Intl.~locale.bs-Cyrl-BA, License: MIT (required by \"all\")\n * - Intl.~locale.bs-Cyrl, License: MIT (required by \"all\")\n * - Intl.~locale.bs-Latn-BA, License: MIT (required by \"all\")\n * - Intl.~locale.bs-Latn, License: MIT (required by \"all\")\n * - Intl.~locale.bs, License: MIT (required by \"all\")\n * - Intl.~locale.ca-AD, License: MIT (required by \"all\")\n * - Intl.~locale.ca-ES-VALENCIA, License: MIT (required by \"all\")\n * - Intl.~locale.ca-ES, License: MIT (required by \"all\")\n * - Intl.~locale.ca-FR, License: MIT (required by \"all\")\n * - Intl.~locale.ca-IT, License: MIT (required by \"all\")\n * - Intl.~locale.ca, License: MIT (required by \"all\")\n * - Intl.~locale.ce-RU, License: MIT (required by \"all\")\n * - Intl.~locale.ce, License: MIT (required by \"all\")\n * - Intl.~locale.cgg-UG, License: MIT (required by \"all\")\n * - Intl.~locale.cgg, License: MIT (required by \"all\")\n * - Intl.~locale.chr-US, License: MIT (required by \"all\")\n * - Intl.~locale.chr, License: MIT (required by \"all\")\n * - Intl.~locale.ckb-IQ, License: MIT (required by \"all\")\n * - Intl.~locale.ckb-IR, License: MIT (required by \"all\")\n * - Intl.~locale.ckb, License: MIT (required by \"all\")\n * - Intl.~locale.cs-CZ, License: MIT (required by \"all\")\n * - Intl.~locale.cs, License: MIT (required by \"all\")\n * - Intl.~locale.cu-RU, License: MIT (required by \"all\")\n * - Intl.~locale.cu, License: MIT (required by \"all\")\n * - Intl.~locale.cy-GB, License: MIT (required by \"all\")\n * - Intl.~locale.cy, License: MIT (required by \"all\")\n * - Intl.~locale.da-DK, License: MIT (required by \"all\")\n * - Intl.~locale.da-GL, License: MIT (required by \"all\")\n * - Intl.~locale.da, License: MIT (required by \"all\")\n * - Intl.~locale.dav-KE, License: MIT (required by \"all\")\n * - Intl.~locale.dav, License: MIT (required by \"all\")\n * - Intl.~locale.de-AT, License: MIT (required by \"all\")\n * - Intl.~locale.de-BE, License: MIT (required by \"all\")\n * - Intl.~locale.de-CH, License: MIT (required by \"all\")\n * - Intl.~locale.de-DE, License: MIT (required by \"all\")\n * - Intl.~locale.de-LI, License: MIT (required by \"all\")\n * - Intl.~locale.de-LU, License: MIT (required by \"all\")\n * - Intl.~locale.de, License: MIT (required by \"all\")\n * - Intl.~locale.dje-NE, License: MIT (required by \"all\")\n * - Intl.~locale.dje, License: MIT (required by \"all\")\n * - Intl.~locale.dsb-DE, License: MIT (required by \"all\")\n * - Intl.~locale.dsb, License: MIT (required by \"all\")\n * - Intl.~locale.dua-CM, License: MIT (required by \"all\")\n * - Intl.~locale.dua, License: MIT (required by \"all\")\n * - Intl.~locale.dyo-SN, License: MIT (required by \"all\")\n * - Intl.~locale.dyo, License: MIT (required by \"all\")\n * - Intl.~locale.dz-BT, License: MIT (required by \"all\")\n * - Intl.~locale.dz, License: MIT (required by \"all\")\n * - Intl.~locale.ebu-KE, License: MIT (required by \"all\")\n * - Intl.~locale.ebu, License: MIT (required by \"all\")\n * - Intl.~locale.ee-GH, License: MIT (required by \"all\")\n * - Intl.~locale.ee-TG, License: MIT (required by \"all\")\n * - Intl.~locale.ee, License: MIT (required by \"all\")\n * - Intl.~locale.el-CY, License: MIT (required by \"all\")\n * - Intl.~locale.el-GR, License: MIT (required by \"all\")\n * - Intl.~locale.el, License: MIT (required by \"all\")\n * - Intl.~locale.en-001, License: MIT (required by \"all\")\n * - Intl.~locale.en-150, License: MIT (required by \"all\")\n * - Intl.~locale.en-AG, License: MIT (required by \"all\")\n * - Intl.~locale.en-AI, License: MIT (required by \"all\")\n * - Intl.~locale.en-AS, License: MIT (required by \"all\")\n * - Intl.~locale.en-AT, License: MIT (required by \"all\")\n * - Intl.~locale.en-AU, License: MIT (required by \"all\")\n * - Intl.~locale.en-BB, License: MIT (required by \"all\")\n * - Intl.~locale.en-BE, License: MIT (required by \"all\")\n * - Intl.~locale.en-BI, License: MIT (required by \"all\")\n * - Intl.~locale.en-BM, License: MIT (required by \"all\")\n * - Intl.~locale.en-BS, License: MIT (required by \"all\")\n * - Intl.~locale.en-BW, License: MIT (required by \"all\")\n * - Intl.~locale.en-BZ, License: MIT (required by \"all\")\n * - Intl.~locale.en-CA, License: MIT (required by \"all\")\n * - Intl.~locale.en-CC, License: MIT (required by \"all\")\n * - Intl.~locale.en-CH, License: MIT (required by \"all\")\n * - Intl.~locale.en-CK, License: MIT (required by \"all\")\n * - Intl.~locale.en-CM, License: MIT (required by \"all\")\n * - Intl.~locale.en-CX, License: MIT (required by \"all\")\n * - Intl.~locale.en-CY, License: MIT (required by \"all\")\n * - Intl.~locale.en-DE, License: MIT (required by \"all\")\n * - Intl.~locale.en-DG, License: MIT (required by \"all\")\n * - Intl.~locale.en-DK, License: MIT (required by \"all\")\n * - Intl.~locale.en-DM, License: MIT (required by \"all\")\n * - Intl.~locale.en-Dsrt, License: MIT (required by \"all\")\n * - Intl.~locale.en-ER, License: MIT (required by \"all\")\n * - Intl.~locale.en-FI, License: MIT (required by \"all\")\n * - Intl.~locale.en-FJ, License: MIT (required by \"all\")\n * - Intl.~locale.en-FK, License: MIT (required by \"all\")\n * - Intl.~locale.en-FM, License: MIT (required by \"all\")\n * - Intl.~locale.en-GB, License: MIT (required by \"all\")\n * - Intl.~locale.en-GD, License: MIT (required by \"all\")\n * - Intl.~locale.en-GG, License: MIT (required by \"all\")\n * - Intl.~locale.en-GH, License: MIT (required by \"all\")\n * - Intl.~locale.en-GI, License: MIT (required by \"all\")\n * - Intl.~locale.en-GM, License: MIT (required by \"all\")\n * - Intl.~locale.en-GU, License: MIT (required by \"all\")\n * - Intl.~locale.en-GY, License: MIT (required by \"all\")\n * - Intl.~locale.en-HK, License: MIT (required by \"all\")\n * - Intl.~locale.en-IE, License: MIT (required by \"all\")\n * - Intl.~locale.en-IL, License: MIT (required by \"all\")\n * - Intl.~locale.en-IM, License: MIT (required by \"all\")\n * - Intl.~locale.en-IN, License: MIT (required by \"all\")\n * - Intl.~locale.en-IO, License: MIT (required by \"all\")\n * - Intl.~locale.en-JE, License: MIT (required by \"all\")\n * - Intl.~locale.en-JM, License: MIT (required by \"all\")\n * - Intl.~locale.en-KE, License: MIT (required by \"all\")\n * - Intl.~locale.en-KI, License: MIT (required by \"all\")\n * - Intl.~locale.en-KN, License: MIT (required by \"all\")\n * - Intl.~locale.en-KY, License: MIT (required by \"all\")\n * - Intl.~locale.en-LC, License: MIT (required by \"all\")\n * - Intl.~locale.en-LR, License: MIT (required by \"all\")\n * - Intl.~locale.en-LS, License: MIT (required by \"all\")\n * - Intl.~locale.en-MG, License: MIT (required by \"all\")\n * - Intl.~locale.en-MH, License: MIT (required by \"all\")\n * - Intl.~locale.en-MO, License: MIT (required by \"all\")\n * - Intl.~locale.en-MP, License: MIT (required by \"all\")\n * - Intl.~locale.en-MS, License: MIT (required by \"all\")\n * - Intl.~locale.en-MT, License: MIT (required by \"all\")\n * - Intl.~locale.en-MU, License: MIT (required by \"all\")\n * - Intl.~locale.en-MW, License: MIT (required by \"all\")\n * - Intl.~locale.en-MY, License: MIT (required by \"all\")\n * - Intl.~locale.en-NA, License: MIT (required by \"all\")\n * - Intl.~locale.en-NF, License: MIT (required by \"all\")\n * - Intl.~locale.en-NG, License: MIT (required by \"all\")\n * - Intl.~locale.en-NL, License: MIT (required by \"all\")\n * - Intl.~locale.en-NR, License: MIT (required by \"all\")\n * - Intl.~locale.en-NU, License: MIT (required by \"all\")\n * - Intl.~locale.en-NZ, License: MIT (required by \"all\")\n * - Intl.~locale.en-PG, License: MIT (required by \"all\")\n * - Intl.~locale.en-PH, License: MIT (required by \"all\")\n * - Intl.~locale.en-PK, License: MIT (required by \"all\")\n * - Intl.~locale.en-PN, License: MIT (required by \"all\")\n * - Intl.~locale.en-PR, License: MIT (required by \"all\")\n * - Intl.~locale.en-PW, License: MIT (required by \"all\")\n * - Intl.~locale.en-RW, License: MIT (required by \"all\")\n * - Intl.~locale.en-SB, License: MIT (required by \"all\")\n * - Intl.~locale.en-SC, License: MIT (required by \"all\")\n * - Intl.~locale.en-SD, License: MIT (required by \"all\")\n * - Intl.~locale.en-SE, License: MIT (required by \"all\")\n * - Intl.~locale.en-SG, License: MIT (required by \"all\")\n * - Intl.~locale.en-SH, License: MIT (required by \"all\")\n * - Intl.~locale.en-SI, License: MIT (required by \"all\")\n * - Intl.~locale.en-SL, License: MIT (required by \"all\")\n * - Intl.~locale.en-SS, License: MIT (required by \"all\")\n * - Intl.~locale.en-SX, License: MIT (required by \"all\")\n * - Intl.~locale.en-SZ, License: MIT (required by \"all\")\n * - Intl.~locale.en-Shaw, License: MIT (required by \"all\")\n * - Intl.~locale.en-TC, License: MIT (required by \"all\")\n * - Intl.~locale.en-TK, License: MIT (required by \"all\")\n * - Intl.~locale.en-TO, License: MIT (required by \"all\")\n * - Intl.~locale.en-TT, License: MIT (required by \"all\")\n * - Intl.~locale.en-TV, License: MIT (required by \"all\")\n * - Intl.~locale.en-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.en-UG, License: MIT (required by \"all\")\n * - Intl.~locale.en-UM, License: MIT (required by \"all\")\n * - Intl.~locale.en-US, License: MIT (required by \"all\")\n * - Intl.~locale.en-VC, License: MIT (required by \"all\")\n * - Intl.~locale.en-VG, License: MIT (required by \"all\")\n * - Intl.~locale.en-VI, License: MIT (required by \"all\")\n * - Intl.~locale.en-VU, License: MIT (required by \"all\")\n * - Intl.~locale.en-WS, License: MIT (required by \"all\")\n * - Intl.~locale.en-ZA, License: MIT (required by \"all\")\n * - Intl.~locale.en-ZM, License: MIT (required by \"all\")\n * - Intl.~locale.en-ZW, License: MIT (required by \"all\")\n * - Intl.~locale.en, License: MIT (required by \"all\")\n * - Intl.~locale.eo-001, License: MIT (required by \"all\")\n * - Intl.~locale.eo, License: MIT (required by \"all\")\n * - Intl.~locale.es-419, License: MIT (required by \"all\")\n * - Intl.~locale.es-AR, License: MIT (required by \"all\")\n * - Intl.~locale.es-BO, License: MIT (required by \"all\")\n * - Intl.~locale.es-CL, License: MIT (required by \"all\")\n * - Intl.~locale.es-CO, License: MIT (required by \"all\")\n * - Intl.~locale.es-CR, License: MIT (required by \"all\")\n * - Intl.~locale.es-CU, License: MIT (required by \"all\")\n * - Intl.~locale.es-DO, License: MIT (required by \"all\")\n * - Intl.~locale.es-EA, License: MIT (required by \"all\")\n * - Intl.~locale.es-EC, License: MIT (required by \"all\")\n * - Intl.~locale.es-ES, License: MIT (required by \"all\")\n * - Intl.~locale.es-GQ, License: MIT (required by \"all\")\n * - Intl.~locale.es-GT, License: MIT (required by \"all\")\n * - Intl.~locale.es-HN, License: MIT (required by \"all\")\n * - Intl.~locale.es-IC, License: MIT (required by \"all\")\n * - Intl.~locale.es-MX, License: MIT (required by \"all\")\n * - Intl.~locale.es-NI, License: MIT (required by \"all\")\n * - Intl.~locale.es-PA, License: MIT (required by \"all\")\n * - Intl.~locale.es-PE, License: MIT (required by \"all\")\n * - Intl.~locale.es-PH, License: MIT (required by \"all\")\n * - Intl.~locale.es-PR, License: MIT (required by \"all\")\n * - Intl.~locale.es-PY, License: MIT (required by \"all\")\n * - Intl.~locale.es-SV, License: MIT (required by \"all\")\n * - Intl.~locale.es-US, License: MIT (required by \"all\")\n * - Intl.~locale.es-UY, License: MIT (required by \"all\")\n * - Intl.~locale.es-VE, License: MIT (required by \"all\")\n * - Intl.~locale.es, License: MIT (required by \"all\")\n * - Intl.~locale.et-EE, License: MIT (required by \"all\")\n * - Intl.~locale.et, License: MIT (required by \"all\")\n * - Intl.~locale.eu-ES, License: MIT (required by \"all\")\n * - Intl.~locale.eu, License: MIT (required by \"all\")\n * - Intl.~locale.ewo-CM, License: MIT (required by \"all\")\n * - Intl.~locale.ewo, License: MIT (required by \"all\")\n * - Intl.~locale.fa-AF, License: MIT (required by \"all\")\n * - Intl.~locale.fa-IR, License: MIT (required by \"all\")\n * - Intl.~locale.fa, License: MIT (required by \"all\")\n * - Intl.~locale.ff-CM, License: MIT (required by \"all\")\n * - Intl.~locale.ff-GN, License: MIT (required by \"all\")\n * - Intl.~locale.ff-MR, License: MIT (required by \"all\")\n * - Intl.~locale.ff-SN, License: MIT (required by \"all\")\n * - Intl.~locale.ff, License: MIT (required by \"all\")\n * - Intl.~locale.fi-FI, License: MIT (required by \"all\")\n * - Intl.~locale.fi, License: MIT (required by \"all\")\n * - Intl.~locale.fil-PH, License: MIT (required by \"all\")\n * - Intl.~locale.fil, License: MIT (required by \"all\")\n * - Intl.~locale.fo-DK, License: MIT (required by \"all\")\n * - Intl.~locale.fo-FO, License: MIT (required by \"all\")\n * - Intl.~locale.fo, License: MIT (required by \"all\")\n * - Intl.~locale.fr-BE, License: MIT (required by \"all\")\n * - Intl.~locale.fr-BF, License: MIT (required by \"all\")\n * - Intl.~locale.fr-BI, License: MIT (required by \"all\")\n * - Intl.~locale.fr-BJ, License: MIT (required by \"all\")\n * - Intl.~locale.fr-BL, License: MIT (required by \"all\")\n * - Intl.~locale.fr-CA, License: MIT (required by \"all\")\n * - Intl.~locale.fr-CD, License: MIT (required by \"all\")\n * - Intl.~locale.fr-CF, License: MIT (required by \"all\")\n * - Intl.~locale.fr-CG, License: MIT (required by \"all\")\n * - Intl.~locale.fr-CH, License: MIT (required by \"all\")\n * - Intl.~locale.fr-CI, License: MIT (required by \"all\")\n * - Intl.~locale.fr-CM, License: MIT (required by \"all\")\n * - Intl.~locale.fr-DJ, License: MIT (required by \"all\")\n * - Intl.~locale.fr-DZ, License: MIT (required by \"all\")\n * - Intl.~locale.fr-FR, License: MIT (required by \"all\")\n * - Intl.~locale.fr-GA, License: MIT (required by \"all\")\n * - Intl.~locale.fr-GF, License: MIT (required by \"all\")\n * - Intl.~locale.fr-GN, License: MIT (required by \"all\")\n * - Intl.~locale.fr-GP, License: MIT (required by \"all\")\n * - Intl.~locale.fr-GQ, License: MIT (required by \"all\")\n * - Intl.~locale.fr-HT, License: MIT (required by \"all\")\n * - Intl.~locale.fr-KM, License: MIT (required by \"all\")\n * - Intl.~locale.fr-LU, License: MIT (required by \"all\")\n * - Intl.~locale.fr-MA, License: MIT (required by \"all\")\n * - Intl.~locale.fr-MC, License: MIT (required by \"all\")\n * - Intl.~locale.fr-MF, License: MIT (required by \"all\")\n * - Intl.~locale.fr-MG, License: MIT (required by \"all\")\n * - Intl.~locale.fr-ML, License: MIT (required by \"all\")\n * - Intl.~locale.fr-MQ, License: MIT (required by \"all\")\n * - Intl.~locale.fr-MR, License: MIT (required by \"all\")\n * - Intl.~locale.fr-MU, License: MIT (required by \"all\")\n * - Intl.~locale.fr-NC, License: MIT (required by \"all\")\n * - Intl.~locale.fr-NE, License: MIT (required by \"all\")\n * - Intl.~locale.fr-PF, License: MIT (required by \"all\")\n * - Intl.~locale.fr-PM, License: MIT (required by \"all\")\n * - Intl.~locale.fr-RE, License: MIT (required by \"all\")\n * - Intl.~locale.fr-RW, License: MIT (required by \"all\")\n * - Intl.~locale.fr-SC, License: MIT (required by \"all\")\n * - Intl.~locale.fr-SN, License: MIT (required by \"all\")\n * - Intl.~locale.fr-SY, License: MIT (required by \"all\")\n * - Intl.~locale.fr-TD, License: MIT (required by \"all\")\n * - Intl.~locale.fr-TG, License: MIT (required by \"all\")\n * - Intl.~locale.fr-TN, License: MIT (required by \"all\")\n * - Intl.~locale.fr-VU, License: MIT (required by \"all\")\n * - Intl.~locale.fr-WF, License: MIT (required by \"all\")\n * - Intl.~locale.fr-YT, License: MIT (required by \"all\")\n * - Intl.~locale.fr, License: MIT (required by \"all\")\n * - Intl.~locale.fur-IT, License: MIT (required by \"all\")\n * - Intl.~locale.fur, License: MIT (required by \"all\")\n * - Intl.~locale.fy-NL, License: MIT (required by \"all\")\n * - Intl.~locale.fy, License: MIT (required by \"all\")\n * - Intl.~locale.ga-IE, License: MIT (required by \"all\")\n * - Intl.~locale.ga, License: MIT (required by \"all\")\n * - Intl.~locale.gd-GB, License: MIT (required by \"all\")\n * - Intl.~locale.gd, License: MIT (required by \"all\")\n * - Intl.~locale.gl-ES, License: MIT (required by \"all\")\n * - Intl.~locale.gl, License: MIT (required by \"all\")\n * - Intl.~locale.gsw-CH, License: MIT (required by \"all\")\n * - Intl.~locale.gsw-FR, License: MIT (required by \"all\")\n * - Intl.~locale.gsw-LI, License: MIT (required by \"all\")\n * - Intl.~locale.gsw, License: MIT (required by \"all\")\n * - Intl.~locale.gu-IN, License: MIT (required by \"all\")\n * - Intl.~locale.gu, License: MIT (required by \"all\")\n * - Intl.~locale.guz-KE, License: MIT (required by \"all\")\n * - Intl.~locale.guz, License: MIT (required by \"all\")\n * - Intl.~locale.gv-IM, License: MIT (required by \"all\")\n * - Intl.~locale.gv, License: MIT (required by \"all\")\n * - Intl.~locale.ha-Arab, License: MIT (required by \"all\")\n * - Intl.~locale.ha-GH, License: MIT (required by \"all\")\n * - Intl.~locale.ha-NE, License: MIT (required by \"all\")\n * - Intl.~locale.ha-NG, License: MIT (required by \"all\")\n * - Intl.~locale.ha, License: MIT (required by \"all\")\n * - Intl.~locale.haw-US, License: MIT (required by \"all\")\n * - Intl.~locale.haw, License: MIT (required by \"all\")\n * - Intl.~locale.he-IL, License: MIT (required by \"all\")\n * - Intl.~locale.he, License: MIT (required by \"all\")\n * - Intl.~locale.hi-IN, License: MIT (required by \"all\")\n * - Intl.~locale.hi, License: MIT (required by \"all\")\n * - Intl.~locale.hr-BA, License: MIT (required by \"all\")\n * - Intl.~locale.hr-HR, License: MIT (required by \"all\")\n * - Intl.~locale.hr, License: MIT (required by \"all\")\n * - Intl.~locale.hsb-DE, License: MIT (required by \"all\")\n * - Intl.~locale.hsb, License: MIT (required by \"all\")\n * - Intl.~locale.hu-HU, License: MIT (required by \"all\")\n * - Intl.~locale.hu, License: MIT (required by \"all\")\n * - Intl.~locale.hy-AM, License: MIT (required by \"all\")\n * - Intl.~locale.hy, License: MIT (required by \"all\")\n * - Intl.~locale.id-ID, License: MIT (required by \"all\")\n * - Intl.~locale.id, License: MIT (required by \"all\")\n * - Intl.~locale.ig-NG, License: MIT (required by \"all\")\n * - Intl.~locale.ig, License: MIT (required by \"all\")\n * - Intl.~locale.ii-CN, License: MIT (required by \"all\")\n * - Intl.~locale.ii, License: MIT (required by \"all\")\n * - Intl.~locale.is-IS, License: MIT (required by \"all\")\n * - Intl.~locale.is, License: MIT (required by \"all\")\n * - Intl.~locale.it-CH, License: MIT (required by \"all\")\n * - Intl.~locale.it-IT, License: MIT (required by \"all\")\n * - Intl.~locale.it-SM, License: MIT (required by \"all\")\n * - Intl.~locale.it, License: MIT (required by \"all\")\n * - Intl.~locale.iu-Latn, License: MIT (required by \"all\")\n * - Intl.~locale.ja-JP, License: MIT (required by \"all\")\n * - Intl.~locale.ja, License: MIT (required by \"all\")\n * - Intl.~locale.jgo-CM, License: MIT (required by \"all\")\n * - Intl.~locale.jgo, License: MIT (required by \"all\")\n * - Intl.~locale.jmc-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.jmc, License: MIT (required by \"all\")\n * - Intl.~locale.ka-GE, License: MIT (required by \"all\")\n * - Intl.~locale.ka, License: MIT (required by \"all\")\n * - Intl.~locale.kab-DZ, License: MIT (required by \"all\")\n * - Intl.~locale.kab, License: MIT (required by \"all\")\n * - Intl.~locale.kam-KE, License: MIT (required by \"all\")\n * - Intl.~locale.kam, License: MIT (required by \"all\")\n * - Intl.~locale.kde-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.kde, License: MIT (required by \"all\")\n * - Intl.~locale.kea-CV, License: MIT (required by \"all\")\n * - Intl.~locale.kea, License: MIT (required by \"all\")\n * - Intl.~locale.khq-ML, License: MIT (required by \"all\")\n * - Intl.~locale.khq, License: MIT (required by \"all\")\n * - Intl.~locale.ki-KE, License: MIT (required by \"all\")\n * - Intl.~locale.ki, License: MIT (required by \"all\")\n * - Intl.~locale.kk-KZ, License: MIT (required by \"all\")\n * - Intl.~locale.kk, License: MIT (required by \"all\")\n * - Intl.~locale.kkj-CM, License: MIT (required by \"all\")\n * - Intl.~locale.kkj, License: MIT (required by \"all\")\n * - Intl.~locale.kl-GL, License: MIT (required by \"all\")\n * - Intl.~locale.kl, License: MIT (required by \"all\")\n * - Intl.~locale.kln-KE, License: MIT (required by \"all\")\n * - Intl.~locale.kln, License: MIT (required by \"all\")\n * - Intl.~locale.km-KH, License: MIT (required by \"all\")\n * - Intl.~locale.km, License: MIT (required by \"all\")\n * - Intl.~locale.kn-IN, License: MIT (required by \"all\")\n * - Intl.~locale.kn, License: MIT (required by \"all\")\n * - Intl.~locale.ko-KP, License: MIT (required by \"all\")\n * - Intl.~locale.ko-KR, License: MIT (required by \"all\")\n * - Intl.~locale.ko, License: MIT (required by \"all\")\n * - Intl.~locale.kok-IN, License: MIT (required by \"all\")\n * - Intl.~locale.kok, License: MIT (required by \"all\")\n * - Intl.~locale.ks-IN, License: MIT (required by \"all\")\n * - Intl.~locale.ks, License: MIT (required by \"all\")\n * - Intl.~locale.ksb-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.ksb, License: MIT (required by \"all\")\n * - Intl.~locale.ksf-CM, License: MIT (required by \"all\")\n * - Intl.~locale.ksf, License: MIT (required by \"all\")\n * - Intl.~locale.ksh-DE, License: MIT (required by \"all\")\n * - Intl.~locale.ksh, License: MIT (required by \"all\")\n * - Intl.~locale.kw-GB, License: MIT (required by \"all\")\n * - Intl.~locale.kw, License: MIT (required by \"all\")\n * - Intl.~locale.ky-KG, License: MIT (required by \"all\")\n * - Intl.~locale.ky, License: MIT (required by \"all\")\n * - Intl.~locale.lag-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.lag, License: MIT (required by \"all\")\n * - Intl.~locale.lb-LU, License: MIT (required by \"all\")\n * - Intl.~locale.lb, License: MIT (required by \"all\")\n * - Intl.~locale.lg-UG, License: MIT (required by \"all\")\n * - Intl.~locale.lg, License: MIT (required by \"all\")\n * - Intl.~locale.lkt-US, License: MIT (required by \"all\")\n * - Intl.~locale.lkt, License: MIT (required by \"all\")\n * - Intl.~locale.ln-AO, License: MIT (required by \"all\")\n * - Intl.~locale.ln-CD, License: MIT (required by \"all\")\n * - Intl.~locale.ln-CF, License: MIT (required by \"all\")\n * - Intl.~locale.ln-CG, License: MIT (required by \"all\")\n * - Intl.~locale.ln, License: MIT (required by \"all\")\n * - Intl.~locale.lo-LA, License: MIT (required by \"all\")\n * - Intl.~locale.lo, License: MIT (required by \"all\")\n * - Intl.~locale.lrc-IQ, License: MIT (required by \"all\")\n * - Intl.~locale.lrc-IR, License: MIT (required by \"all\")\n * - Intl.~locale.lrc, License: MIT (required by \"all\")\n * - Intl.~locale.lt-LT, License: MIT (required by \"all\")\n * - Intl.~locale.lt, License: MIT (required by \"all\")\n * - Intl.~locale.lu-CD, License: MIT (required by \"all\")\n * - Intl.~locale.lu, License: MIT (required by \"all\")\n * - Intl.~locale.luo-KE, License: MIT (required by \"all\")\n * - Intl.~locale.luo, License: MIT (required by \"all\")\n * - Intl.~locale.luy-KE, License: MIT (required by \"all\")\n * - Intl.~locale.luy, License: MIT (required by \"all\")\n * - Intl.~locale.lv-LV, License: MIT (required by \"all\")\n * - Intl.~locale.lv, License: MIT (required by \"all\")\n * - Intl.~locale.mas-KE, License: MIT (required by \"all\")\n * - Intl.~locale.mas-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.mas, License: MIT (required by \"all\")\n * - Intl.~locale.mer-KE, License: MIT (required by \"all\")\n * - Intl.~locale.mer, License: MIT (required by \"all\")\n * - Intl.~locale.mfe-MU, License: MIT (required by \"all\")\n * - Intl.~locale.mfe, License: MIT (required by \"all\")\n * - Intl.~locale.mg-MG, License: MIT (required by \"all\")\n * - Intl.~locale.mg, License: MIT (required by \"all\")\n * - Intl.~locale.mgh-MZ, License: MIT (required by \"all\")\n * - Intl.~locale.mgh, License: MIT (required by \"all\")\n * - Intl.~locale.mgo-CM, License: MIT (required by \"all\")\n * - Intl.~locale.mgo, License: MIT (required by \"all\")\n * - Intl.~locale.mk-MK, License: MIT (required by \"all\")\n * - Intl.~locale.mk, License: MIT (required by \"all\")\n * - Intl.~locale.ml-IN, License: MIT (required by \"all\")\n * - Intl.~locale.ml, License: MIT (required by \"all\")\n * - Intl.~locale.mn-MN, License: MIT (required by \"all\")\n * - Intl.~locale.mn-Mong, License: MIT (required by \"all\")\n * - Intl.~locale.mn, License: MIT (required by \"all\")\n * - Intl.~locale.mr-IN, License: MIT (required by \"all\")\n * - Intl.~locale.mr, License: MIT (required by \"all\")\n * - Intl.~locale.ms-Arab, License: MIT (required by \"all\")\n * - Intl.~locale.ms-BN, License: MIT (required by \"all\")\n * - Intl.~locale.ms-MY, License: MIT (required by \"all\")\n * - Intl.~locale.ms-SG, License: MIT (required by \"all\")\n * - Intl.~locale.ms, License: MIT (required by \"all\")\n * - Intl.~locale.mt-MT, License: MIT (required by \"all\")\n * - Intl.~locale.mt, License: MIT (required by \"all\")\n * - Intl.~locale.mua-CM, License: MIT (required by \"all\")\n * - Intl.~locale.mua, License: MIT (required by \"all\")\n * - Intl.~locale.my-MM, License: MIT (required by \"all\")\n * - Intl.~locale.my, License: MIT (required by \"all\")\n * - Intl.~locale.mzn-IR, License: MIT (required by \"all\")\n * - Intl.~locale.mzn, License: MIT (required by \"all\")\n * - Intl.~locale.naq-NA, License: MIT (required by \"all\")\n * - Intl.~locale.naq, License: MIT (required by \"all\")\n * - Intl.~locale.nb-NO, License: MIT (required by \"all\")\n * - Intl.~locale.nb-SJ, License: MIT (required by \"all\")\n * - Intl.~locale.nb, License: MIT (required by \"all\")\n * - Intl.~locale.nd-ZW, License: MIT (required by \"all\")\n * - Intl.~locale.nd, License: MIT (required by \"all\")\n * - Intl.~locale.ne-IN, License: MIT (required by \"all\")\n * - Intl.~locale.ne-NP, License: MIT (required by \"all\")\n * - Intl.~locale.ne, License: MIT (required by \"all\")\n * - Intl.~locale.nl-AW, License: MIT (required by \"all\")\n * - Intl.~locale.nl-BE, License: MIT (required by \"all\")\n * - Intl.~locale.nl-BQ, License: MIT (required by \"all\")\n * - Intl.~locale.nl-CW, License: MIT (required by \"all\")\n * - Intl.~locale.nl-NL, License: MIT (required by \"all\")\n * - Intl.~locale.nl-SR, License: MIT (required by \"all\")\n * - Intl.~locale.nl-SX, License: MIT (required by \"all\")\n * - Intl.~locale.nl, License: MIT (required by \"all\")\n * - Intl.~locale.nmg-CM, License: MIT (required by \"all\")\n * - Intl.~locale.nmg, License: MIT (required by \"all\")\n * - Intl.~locale.nn-NO, License: MIT (required by \"all\")\n * - Intl.~locale.nn, License: MIT (required by \"all\")\n * - Intl.~locale.nnh-CM, License: MIT (required by \"all\")\n * - Intl.~locale.nnh, License: MIT (required by \"all\")\n * - Intl.~locale.nus-SS, License: MIT (required by \"all\")\n * - Intl.~locale.nus, License: MIT (required by \"all\")\n * - Intl.~locale.nyn-UG, License: MIT (required by \"all\")\n * - Intl.~locale.nyn, License: MIT (required by \"all\")\n * - Intl.~locale.om-ET, License: MIT (required by \"all\")\n * - Intl.~locale.om-KE, License: MIT (required by \"all\")\n * - Intl.~locale.om, License: MIT (required by \"all\")\n * - Intl.~locale.or-IN, License: MIT (required by \"all\")\n * - Intl.~locale.or, License: MIT (required by \"all\")\n * - Intl.~locale.os-GE, License: MIT (required by \"all\")\n * - Intl.~locale.os-RU, License: MIT (required by \"all\")\n * - Intl.~locale.os, License: MIT (required by \"all\")\n * - Intl.~locale.pa-Arab-PK, License: MIT (required by \"all\")\n * - Intl.~locale.pa-Arab, License: MIT (required by \"all\")\n * - Intl.~locale.pa-Guru-IN, License: MIT (required by \"all\")\n * - Intl.~locale.pa-Guru, License: MIT (required by \"all\")\n * - Intl.~locale.pa, License: MIT (required by \"all\")\n * - Intl.~locale.pl-PL, License: MIT (required by \"all\")\n * - Intl.~locale.pl, License: MIT (required by \"all\")\n * - Intl.~locale.prg-001, License: MIT (required by \"all\")\n * - Intl.~locale.prg, License: MIT (required by \"all\")\n * - Intl.~locale.ps-AF, License: MIT (required by \"all\")\n * - Intl.~locale.ps, License: MIT (required by \"all\")\n * - Intl.~locale.pt-AO, License: MIT (required by \"all\")\n * - Intl.~locale.pt-BR, License: MIT (required by \"all\")\n * - Intl.~locale.pt-CV, License: MIT (required by \"all\")\n * - Intl.~locale.pt-GW, License: MIT (required by \"all\")\n * - Intl.~locale.pt-MO, License: MIT (required by \"all\")\n * - Intl.~locale.pt-MZ, License: MIT (required by \"all\")\n * - Intl.~locale.pt-PT, License: MIT (required by \"all\")\n * - Intl.~locale.pt-ST, License: MIT (required by \"all\")\n * - Intl.~locale.pt-TL, License: MIT (required by \"all\")\n * - Intl.~locale.pt, License: MIT (required by \"all\")\n * - Intl.~locale.qu-BO, License: MIT (required by \"all\")\n * - Intl.~locale.qu-EC, License: MIT (required by \"all\")\n * - Intl.~locale.qu-PE, License: MIT (required by \"all\")\n * - Intl.~locale.qu, License: MIT (required by \"all\")\n * - Intl.~locale.rm-CH, License: MIT (required by \"all\")\n * - Intl.~locale.rm, License: MIT (required by \"all\")\n * - Intl.~locale.rn-BI, License: MIT (required by \"all\")\n * - Intl.~locale.rn, License: MIT (required by \"all\")\n * - Intl.~locale.ro-MD, License: MIT (required by \"all\")\n * - Intl.~locale.ro-RO, License: MIT (required by \"all\")\n * - Intl.~locale.ro, License: MIT (required by \"all\")\n * - Intl.~locale.rof-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.rof, License: MIT (required by \"all\")\n * - Intl.~locale.root, License: MIT (required by \"all\")\n * - Intl.~locale.ru-BY, License: MIT (required by \"all\")\n * - Intl.~locale.ru-KG, License: MIT (required by \"all\")\n * - Intl.~locale.ru-KZ, License: MIT (required by \"all\")\n * - Intl.~locale.ru-MD, License: MIT (required by \"all\")\n * - Intl.~locale.ru-RU, License: MIT (required by \"all\")\n * - Intl.~locale.ru-UA, License: MIT (required by \"all\")\n * - Intl.~locale.ru, License: MIT (required by \"all\")\n * - Intl.~locale.rw-RW, License: MIT (required by \"all\")\n * - Intl.~locale.rw, License: MIT (required by \"all\")\n * - Intl.~locale.rwk-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.rwk, License: MIT (required by \"all\")\n * - Intl.~locale.sah-RU, License: MIT (required by \"all\")\n * - Intl.~locale.sah, License: MIT (required by \"all\")\n * - Intl.~locale.saq-KE, License: MIT (required by \"all\")\n * - Intl.~locale.saq, License: MIT (required by \"all\")\n * - Intl.~locale.sbp-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.sbp, License: MIT (required by \"all\")\n * - Intl.~locale.se-FI, License: MIT (required by \"all\")\n * - Intl.~locale.se-NO, License: MIT (required by \"all\")\n * - Intl.~locale.se-SE, License: MIT (required by \"all\")\n * - Intl.~locale.se, License: MIT (required by \"all\")\n * - Intl.~locale.seh-MZ, License: MIT (required by \"all\")\n * - Intl.~locale.seh, License: MIT (required by \"all\")\n * - Intl.~locale.ses-ML, License: MIT (required by \"all\")\n * - Intl.~locale.ses, License: MIT (required by \"all\")\n * - Intl.~locale.sg-CF, License: MIT (required by \"all\")\n * - Intl.~locale.sg, License: MIT (required by \"all\")\n * - Intl.~locale.shi-Latn-MA, License: MIT (required by \"all\")\n * - Intl.~locale.shi-Latn, License: MIT (required by \"all\")\n * - Intl.~locale.shi-Tfng-MA, License: MIT (required by \"all\")\n * - Intl.~locale.shi-Tfng, License: MIT (required by \"all\")\n * - Intl.~locale.shi, License: MIT (required by \"all\")\n * - Intl.~locale.si-LK, License: MIT (required by \"all\")\n * - Intl.~locale.si, License: MIT (required by \"all\")\n * - Intl.~locale.sk-SK, License: MIT (required by \"all\")\n * - Intl.~locale.sk, License: MIT (required by \"all\")\n * - Intl.~locale.sl-SI, License: MIT (required by \"all\")\n * - Intl.~locale.sl, License: MIT (required by \"all\")\n * - Intl.~locale.smn-FI, License: MIT (required by \"all\")\n * - Intl.~locale.smn, License: MIT (required by \"all\")\n * - Intl.~locale.sn-ZW, License: MIT (required by \"all\")\n * - Intl.~locale.sn, License: MIT (required by \"all\")\n * - Intl.~locale.so-DJ, License: MIT (required by \"all\")\n * - Intl.~locale.so-ET, License: MIT (required by \"all\")\n * - Intl.~locale.so-KE, License: MIT (required by \"all\")\n * - Intl.~locale.so-SO, License: MIT (required by \"all\")\n * - Intl.~locale.so, License: MIT (required by \"all\")\n * - Intl.~locale.sq-AL, License: MIT (required by \"all\")\n * - Intl.~locale.sq-MK, License: MIT (required by \"all\")\n * - Intl.~locale.sq-XK, License: MIT (required by \"all\")\n * - Intl.~locale.sq, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Cyrl-BA, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Cyrl-ME, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Cyrl-RS, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Cyrl-XK, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Cyrl, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Latn-BA, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Latn-ME, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Latn-RS, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Latn-XK, License: MIT (required by \"all\")\n * - Intl.~locale.sr-Latn, License: MIT (required by \"all\")\n * - Intl.~locale.sr, License: MIT (required by \"all\")\n * - Intl.~locale.sv-AX, License: MIT (required by \"all\")\n * - Intl.~locale.sv-FI, License: MIT (required by \"all\")\n * - Intl.~locale.sv-SE, License: MIT (required by \"all\")\n * - Intl.~locale.sv, License: MIT (required by \"all\")\n * - Intl.~locale.sw-CD, License: MIT (required by \"all\")\n * - Intl.~locale.sw-KE, License: MIT (required by \"all\")\n * - Intl.~locale.sw-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.sw-UG, License: MIT (required by \"all\")\n * - Intl.~locale.sw, License: MIT (required by \"all\")\n * - Intl.~locale.ta-IN, License: MIT (required by \"all\")\n * - Intl.~locale.ta-LK, License: MIT (required by \"all\")\n * - Intl.~locale.ta-MY, License: MIT (required by \"all\")\n * - Intl.~locale.ta-SG, License: MIT (required by \"all\")\n * - Intl.~locale.ta, License: MIT (required by \"all\")\n * - Intl.~locale.te-IN, License: MIT (required by \"all\")\n * - Intl.~locale.te, License: MIT (required by \"all\")\n * - Intl.~locale.teo-KE, License: MIT (required by \"all\")\n * - Intl.~locale.teo-UG, License: MIT (required by \"all\")\n * - Intl.~locale.teo, License: MIT (required by \"all\")\n * - Intl.~locale.th-TH, License: MIT (required by \"all\")\n * - Intl.~locale.th, License: MIT (required by \"all\")\n * - Intl.~locale.ti-ER, License: MIT (required by \"all\")\n * - Intl.~locale.ti-ET, License: MIT (required by \"all\")\n * - Intl.~locale.ti, License: MIT (required by \"all\")\n * - Intl.~locale.tk-TM, License: MIT (required by \"all\")\n * - Intl.~locale.tk, License: MIT (required by \"all\")\n * - Intl.~locale.to-TO, License: MIT (required by \"all\")\n * - Intl.~locale.to, License: MIT (required by \"all\")\n * - Intl.~locale.tr-CY, License: MIT (required by \"all\")\n * - Intl.~locale.tr-TR, License: MIT (required by \"all\")\n * - Intl.~locale.tr, License: MIT (required by \"all\")\n * - Intl.~locale.twq-NE, License: MIT (required by \"all\")\n * - Intl.~locale.twq, License: MIT (required by \"all\")\n * - Intl.~locale.tzm-MA, License: MIT (required by \"all\")\n * - Intl.~locale.tzm, License: MIT (required by \"all\")\n * - Intl.~locale.ug-CN, License: MIT (required by \"all\")\n * - Intl.~locale.ug, License: MIT (required by \"all\")\n * - Intl.~locale.uk-UA, License: MIT (required by \"all\")\n * - Intl.~locale.uk, License: MIT (required by \"all\")\n * - Intl.~locale.ur-IN, License: MIT (required by \"all\")\n * - Intl.~locale.ur-PK, License: MIT (required by \"all\")\n * - Intl.~locale.ur, License: MIT (required by \"all\")\n * - Intl.~locale.uz-Arab-AF, License: MIT (required by \"all\")\n * - Intl.~locale.uz-Arab, License: MIT (required by \"all\")\n * - Intl.~locale.uz-Cyrl-UZ, License: MIT (required by \"all\")\n * - Intl.~locale.uz-Cyrl, License: MIT (required by \"all\")\n * - Intl.~locale.uz-Latn-UZ, License: MIT (required by \"all\")\n * - Intl.~locale.uz-Latn, License: MIT (required by \"all\")\n * - Intl.~locale.uz, License: MIT (required by \"all\")\n * - Intl.~locale.vai-Latn-LR, License: MIT (required by \"all\")\n * - Intl.~locale.vai-Latn, License: MIT (required by \"all\")\n * - Intl.~locale.vai-Vaii-LR, License: MIT (required by \"all\")\n * - Intl.~locale.vai-Vaii, License: MIT (required by \"all\")\n * - Intl.~locale.vai, License: MIT (required by \"all\")\n * - Intl.~locale.vi-VN, License: MIT (required by \"all\")\n * - Intl.~locale.vi, License: MIT (required by \"all\")\n * - Intl.~locale.vo-001, License: MIT (required by \"all\")\n * - Intl.~locale.vo, License: MIT (required by \"all\")\n * - Intl.~locale.vun-TZ, License: MIT (required by \"all\")\n * - Intl.~locale.vun, License: MIT (required by \"all\")\n * - Intl.~locale.wae-CH, License: MIT (required by \"all\")\n * - Intl.~locale.wae, License: MIT (required by \"all\")\n * - Intl.~locale.xog-UG, License: MIT (required by \"all\")\n * - Intl.~locale.xog, License: MIT (required by \"all\")\n * - Intl.~locale.yav-CM, License: MIT (required by \"all\")\n * - Intl.~locale.yav, License: MIT (required by \"all\")\n * - Intl.~locale.yi-001, License: MIT (required by \"all\")\n * - Intl.~locale.yi, License: MIT (required by \"all\")\n * - Intl.~locale.yo-BJ, License: MIT (required by \"all\")\n * - Intl.~locale.yo-NG, License: MIT (required by \"all\")\n * - Intl.~locale.yo, License: MIT (required by \"all\")\n * - Intl.~locale.zgh-MA, License: MIT (required by \"all\")\n * - Intl.~locale.zgh, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hans-CN, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hans-HK, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hans-MO, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hans-SG, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hans, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hant-HK, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hant-MO, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hant-TW, License: MIT (required by \"all\")\n * - Intl.~locale.zh-Hant, License: MIT (required by \"all\")\n * - Intl.~locale.zh, License: MIT (required by \"all\")\n * - Intl.~locale.zu-ZA, License: MIT (required by \"all\")\n * - Intl.~locale.zu, License: MIT (required by \"all\")\n * - JSON, License: MIT (required by \"all\")\n * - Symbol.species, License: MIT (required by \"Map\", \"Set\", \"all\")\n * - Number.isNaN, License: MIT (required by \"Map\", \"Set\", \"all\")\n * - Map, License: CC0 (required by \"all\")\n * - Math.acosh, License: CC0 (required by \"all\")\n * - Math.asinh, License: CC0 (required by \"all\")\n * - Math.atanh, License: CC0 (required by \"all\")\n * - Math.cbrt, License: CC0 (required by \"all\")\n * - Math.clz32, License: CC0 (required by \"all\")\n * - Math.cosh, License: CC0 (required by \"all\")\n * - Math.expm1, License: CC0 (required by \"all\")\n * - Math.hypot, License: CC0 (required by \"all\")\n * - Math.imul, License: CC0 (required by \"all\")\n * - Math.log10, License: CC0 (required by \"all\")\n * - Math.log1p, License: CC0 (required by \"all\")\n * - Math.log2, License: CC0 (required by \"all\")\n * - Math.sign, License: CC0 (required by \"all\")\n * - Math.sinh, License: CC0 (required by \"all\")\n * - Math.tanh, License: CC0 (required by \"all\")\n * - Math.trunc, License: CC0 (required by \"all\")\n * - Node.prototype.contains, License: CC0 (required by \"all\")\n * - NodeList.prototype.@@iterator, License: MIT (required by \"all\")\n * - Number.MAX_SAFE_INTEGER, License: MIT (required by \"all\")\n * - Number.MIN_SAFE_INTEGER, License: MIT (required by \"all\")\n * - Number.isFinite, License: MIT (required by \"all\")\n * - Object.is, License: CC0 (required by \"all\")\n * - setImmediate, License: CC0 (required by \"Promise\", \"all\", \"fetch\")\n * - Promise, License: MIT (required by \"all\", \"fetch\")\n * - Set, License: CC0 (required by \"all\")\n * - String.prototype.endsWith, License: CC0 (required by \"all\")\n * - String.prototype.repeat, License: CC0 (required by \"all\")\n * - String.prototype.startsWith, License: CC0 (required by \"all\")\n * - String.prototype.trim, License: CC0 (required by \"all\")\n * - Symbol.hasInstance, License: MIT (required by \"all\")\n * - Symbol.isConcatSpreadable, License: MIT (required by \"all\")\n * - Symbol.match, License: MIT (required by \"all\")\n * - Symbol.replace, License: MIT (required by \"all\")\n * - Symbol.search, License: MIT (required by \"all\")\n * - Symbol.split, License: MIT (required by \"all\")\n * - Symbol.toPrimitive, License: MIT (required by \"all\")\n * - Symbol.unscopables, License: MIT (required by \"all\")\n * - URL, License: CC0 (required by \"all\")\n * - UserTiming, License: MIT (required by \"all\")\n * - WeakMap, License: https://github.com/webcomponents/webcomponentsjs/blob/master/LICENSE.md (required by \"all\")\n * - WeakSet, License: https://github.com/webcomponents/webcomponentsjs/blob/master/LICENSE.md (required by \"all\")\n * - XMLHttpRequest, License: CC0 (required by \"all\", \"fetch\", \"navigator.sendBeacon\")\n * - atob, License: MIT (required by \"all\")\n * - console, License: CC0 (required by \"all\", \"console.assert\", \"console.clear\", \"console.count\", \"console.debug\", \"console.dir\", \"console.dirxml\", \"console.error\", \"console.exception\", \"console.group\", \"console.groupCollapsed\", \"console.groupEnd\", \"console.info\", \"console.log\", \"console.markTimeline\", \"console.profile\", \"console.profileEnd\", \"console.profiles\", \"console.table\", \"console.time\", \"console.timeEnd\", \"console.timeStamp\", \"console.timeline\", \"console.timelineEnd\", \"console.trace\", \"console.warn\")\n * - console.assert, License: CC0 (required by \"all\")\n * - console.clear, License: CC0 (required by \"all\")\n * - console.count, License: CC0 (required by \"all\")\n * - console.log, License: CC0 (required by \"all\", \"console.debug\", \"console.error\", \"console.info\", \"console.warn\")\n * - console.debug, License: CC0 (required by \"all\")\n * - console.dir, License: CC0 (required by \"all\")\n * - console.dirxml, License: CC0 (required by \"all\")\n * - console.error, License: CC0 (required by \"all\")\n * - console.exception, License: CC0 (required by \"all\")\n * - console.group, License: CC0 (required by \"all\")\n * - console.groupCollapsed, License: CC0 (required by \"all\")\n * - console.groupEnd, License: CC0 (required by \"all\")\n * - console.info, License: CC0 (required by \"all\")\n * - console.markTimeline, License: CC0 (required by \"all\")\n * - console.profile, License: CC0 (required by \"all\")\n * - console.profileEnd, License: CC0 (required by \"all\")\n * - console.profiles, License: CC0 (required by \"all\")\n * - console.table, License: CC0 (required by \"all\")\n * - console.time, License: CC0 (required by \"all\", \"console.timeEnd\")\n * - console.timeEnd, License: CC0 (required by \"all\")\n * - console.timeStamp, License: CC0 (required by \"all\")\n * - console.timeline, License: CC0 (required by \"all\")\n * - console.timelineEnd, License: CC0 (required by \"all\")\n * - console.trace, License: CC0 (required by \"all\")\n * - console.warn, License: CC0 (required by \"all\")\n * - devicePixelRatio, License: CC0 (required by \"all\")\n * - document.getElementsByClassName, License: CC0 (required by \"all\")\n * - document.head, License: CC0 (required by \"all\", \"navigator.geolocation\")\n * - document.visibilityState, License: CC0 (required by \"all\")\n * - fetch, License: MIT (required by \"all\")\n * - localStorage, License: CC0 (required by \"all\")\n * - location.origin, License: CC0 (required by \"all\")\n * - matchMedia, License: CC0 (required by \"all\")\n * - navigator.geolocation, License: CC0 (required by \"all\")\n * - navigator.sendBeacon, License: MIT (required by \"all\")\n * - performance.now, License: CC0 (required by \"all\", \"requestAnimationFrame\")\n * - requestAnimationFrame, License: MIT (required by \"all\")\n * - screen.orientation, License: CC0 (required by \"all\")\n * - ~viewport, License: CC0 (required by \"all\")\n * \n * Using the `all` alias with polyfill.io is a very bad idea. In a future version of the service, `all` will deliver the same behaviour as `default`, so we recommend using default instead. */\n```\n\n\n. @triblondon - Great job on this refactor, I can't wait to get this merged and live. \n. This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. Thanks for the response @priithansen , I'm glad it worked and thanks again for your pull request!\nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. Rerunning now\n. @falsandtru This is what fails on CI:\n```\nFailures:\n \u2022 chrome/48 (targeted) [https://saucelabs.com/tests/51a40109f9f04b28b979b91dd31d1ace]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 firefox/44 (targeted) [https://saucelabs.com/tests/9f5741e0da0e44c8b24861f3a6beec3a]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 ie/14 (targeted) [https://saucelabs.com/tests/76b883ee2bd04de09f48dc174542988a]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 ie/13 (targeted) [https://saucelabs.com/tests/4588833e6708441bb218b3f1a5b6c689]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 ie/11 (targeted) [https://saucelabs.com/tests/ea4ca18048744a608b1c7e345ebef943]\n    -> IntersectionObserver (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 30000ms, 2 retries)\n    -> CustomEvent (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=CustomEvent (timeout after 30000ms, 2 retries)\n    -> Promise (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Promise (timeout after 30000ms, 2 retries)\n    -> fetch (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=fetch (timeout after 30000ms, 2 retries)\n    -> navigator.sendBeacon (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=navigator.sendBeacon (timeout after 30000ms, 2 retries)\n    -> Event (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event (timeout after 30000ms, 2 retries)\n \u2022 ie/10 (targeted) [https://saucelabs.com/tests/93df4461a27d4f06811648da5bd42cda]\n    -> IntersectionObserver (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 30000ms, 2 retries)\n    -> CustomEvent (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=CustomEvent (timeout after 30000ms, 2 retries)\n    -> Promise (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Promise (timeout after 30000ms, 2 retries)\n    -> fetch (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=fetch (timeout after 30000ms, 2 retries)\n    -> navigator.sendBeacon (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=navigator.sendBeacon (timeout after 30000ms, 2 retries)\n    -> Event (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event (timeout after 30000ms, 2 retries)\n \u2022 ie/9 (targeted) [https://saucelabs.com/tests/c3ef94f7a76040b599b9e5dc5294cd65]\n    -> IntersectionObserver (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver (timeout after 30000ms, 2 retries)\n    -> CustomEvent (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=CustomEvent (timeout after 30000ms, 2 retries)\n    -> Promise (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Promise (timeout after 30000ms, 2 retries)\n    -> fetch (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=fetch (timeout after 30000ms, 2 retries)\n    -> navigator.sendBeacon (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=navigator.sendBeacon (timeout after 30000ms, 2 retries)\n    -> Event (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event (timeout after 30000ms, 2 retries)\n    -> matchMedia (timeout after 30000ms, 2 retries)\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=matchMedia (timeout after 30000ms, 2 retries)\n \u2022 ie/8 (targeted) [https://saucelabs.com/tests/a9ca0f60779441cc9332ee2c31da4458]\n    -> XMLHttpRequest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=XMLHttpRequest\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 ie/7 (targeted) [https://saucelabs.com/tests/adcb718cd561438e8d07b75f6112ed3d]\n    -> XMLHttpRequest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=XMLHttpRequest\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 safari/9 (targeted) [https://saucelabs.com/tests/cefc1159438941b0b61c5f4abb4ef6c7]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 safari/8 (targeted) [https://saucelabs.com/tests/7c53fac69a364feba5c28dcf57c35aee]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 android/5.1 (targeted) [https://saucelabs.com/tests/a0581ba7bc434681bcbb795b56aaf057]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n \u2022 android/4.4 (targeted) [https://saucelabs.com/tests/a87ac45126674af89d81b15c36f3fb03]\n    -> Event\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event\n```. That would only work if the call to polyfill.io was one of the first network calls being made, correct?\n. It seems to be detected as samsung's browser and at a version we don't support. \nThe useragent you posted looks very similar to this useragent which is from a different Samsung Galaxy S4 and it's samsung browser.\nMozilla/5.0 (Linux; Android 5.0.1; SAMSUNG GT-I9506-ORANGE Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36\nIf you are certain you were using chrome for android and not samsung browser then this looks to be a bug in the useragent module we use. It would need to be fixed in the uap-core project which provides the regex to the useragent module. uap-core matches samsung browser before it matches chrome mobile, making a fix for this a little bit tricky.\n. It seems Intl no longer works with IE7/8.\nFailed tests:\n - ie 8 (Sauce results: https://saucelabs.com/tests/d3d67a36ea7b413fb35bc7fffca19c9a)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\n - ie 7 (Sauce results: https://saucelabs.com/tests/6e5ad0d70c5640c1b229aae333536168)\n    -> Intl\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Intl\nI imagine this isn't on purpose and probably we are missing a new polyfill dependency such as Object.defineProperty. @caridy, do you happen to know what would be causing the IE7/8 issues?\n. I think I found the Intl ticket for the IE7/8 issues we see on CI -- https://github.com/andyearnshaw/Intl.js/issues/189\n. @caridy it may not require it if the Intl polyfill brings it's own Object.defineProperty polyfill.\n. @rubencodes Would you be able to update this branch with the latest code from master? It seems they have fallen out of sync.\n. @wheresrhys Do you have screenshots of the tests passing on BB10?\n. @wheresrhys This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. It looks like this polyfill module also adds an extra non-spec function to the global environment -- https://github.com/blueimp/JavaScript-Canvas-to-Blob#api\nI'm not sure this is something we can bring in to the polyfill-service. Do they offer a version which doesn't add this function?\nThe CI issues are because the branch is from a fork and as such, cannot use our private environment variables. I'm not sure why it doesn't work locally if you've exported SAUCE_USER_NAME and SAUCE_API_KEY with valid SauceLabs credentials.\nI will push a copy of your branch to our remote to enable CI to run.\n. Currently failing on CI for these browsers:\nFailed tests:\n - ie 9 (Sauce results: https://saucelabs.com/tests/e1abbf97521d4f91baa9c531a625bad9)\n    -> HTMLCanvasElement.protoype.toBlob\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=HTMLCanvasElement.protoype.toBlob\n - ie 8 (Sauce results: https://saucelabs.com/tests/ea6ef969537046329a5df2b8cea4b7ad)\n    -> HTMLCanvasElement.protoype.toBlob\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=HTMLCanvasElement.protoype.toBlob\n - ie 7 (Sauce results: https://saucelabs.com/tests/d647b478b42c40678f7a03d003275d7d)\n    -> HTMLCanvasElement.protoype.toBlob\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=HTMLCanvasElement.protoype.toBlob\n. @pioug You can change the browser support for ie from <10 to 9 - 10.\n. @pioug Sorry for asking you to accept the CLA once again, once the bot sees your new acceptance of our CLA I will merge this into master :-)\n. This seems to be a replicate of https://github.com/Financial-Times/polyfill-service/issues/863 and will be fixed in the next release of the service - 3.13.0\n. @VladDubrovskis This is now live on http://qa.polyfill.io - would you be able to report back whether we have fixed your issue?\n. This is now live on https://polyfill.io\n. @falsandtru We can do that. SauceLabs has Android 5.1 available for use, what is it you want to test?\n. Thanks, rerunning tests.\n. Hi @nayaabkhan Would you be able to post the URL you were using to replicate this bug?\nI've opened https://cdn.polyfill.io/v2 in IE9 and I saw no certificate issues. Is there a step I am missing?\n\n. I have replicated the issue now, no idea why IE9 is seeing our certificate as being revoked. According to SSL Labs our certificate has not been revoked. \n. This is an issue with Fastly, they have issued an incident report -- https://status.fastly.com/incidents/2tf2hvkj2z50\n. @triblondon Is there a contact at SauceLabs we can speak to about this?\n. Yes, only users with push/write access to this repo can run the tests on CI annoyingly. I will do this now :-)\n. @dstarcev Thanks for the PR! You are correct, forks can not run our CI tests as the tests rely on environment variables to be set for SauceLabs. These environment variables are protected as we would not like to leak them. To enable CI to run on PRs, polyfill.io maintainers first review the code for anything which may leak the API keys, if nothing harmful is found we bring the commits into the upstream repository and push to github which triggers CI to run once again (this time with the environment variables set!).\nIt is rather annoying to do this, I hope that we can come up with a better solution in the future for this.\n. @fredj PR for this - #946 \n. I tried to find an Android 3 device, physical or emulated. I have no access to a physical device and browserstack, saucelabs, crossbrowser-testing do not offer android 3 emulators, I couldn't find one to install on my machines either. I then looked at gs.statcounter.com data for android 3 and found 0% usage.\nIf anyone has an android 3 device, would you be able to visit this page and post a screenshot of the result into this issue?\n. Thanks! The polyfill not working for 2.x is okay as our baseline support for android is >=3.\n. @ruiaraujo Could you post a screenshot showing that the polyfill works on blackberry 6, 7, 8, 9 and 10 please? We don't have blackberry in our automated testing, it is one of the few which need to be tested manually.. This is failing on IE7:\nFailed tests:\n - ie 7 (Sauce results: https://saucelabs.com/tests/bd7bb12d3f8e41f59dbb377114dc3ea8)\n    -> Event.hashchange\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Event.hashchange\n. Linking this PR to the commit comment which made it happen -- https://github.com/Financial-Times/polyfill-service/commit/dc8331a7e04c84f2cced7a383ff863d48ccd780f#commitcomment-19533201\n. @triblondon We may not be able to fix this for gated users but we can fix it for non-gated users.\n. Thanks for the PR @tuespetre, would you be able to add a test for this? I believe the code you posted in https://github.com/Financial-Times/polyfill-service/issues/949#issue-184732549 would suffice.\n. @tuespetre Looks good, would you be able to read through our contribution terms, if you agree to those then I can merge this in :-) -- https://polyfill.io/v2/docs/contributing#contribution-terms\n. Thanks for the contribution @tuespetre. Did you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. Thanks for the contribution @JamesMGreene! Did you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. @JamesMGreene Here is an example of adding another polyfill as a dependency -- https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Element/prototype/placeholder/config.json#L10\n. PR for this -- https://github.com/Financial-Times/polyfill-service/pull/947\n. This is live now, please open a new issue if the problem still occurs. It seems that saucelabs have a specific version of edge 14 which breaks on one of our defineproperty tests. This test passes on my local version and the version on browserstack.\n. Running a full grunt compatgen now with latest code from master merged into this branch.\n. This looks incredible @tuespetre <3 -- running on CI :-)\n. We would be very happy to accept a PR which adds these polyfills @tuespetre :-)\n. We need to update out Symbol configuration for ios_saf to not include ios_saf 9 or higher -- https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Symbol/config.json#L11\n. Didn't mean to close that, apologies.\n. it is overridden because the polyfill is requested without being wrapped in a feature detect. You can wrap it in a feature detect by adding |gated to the feature. \nhttps://cdn.polyfill.io/v2/polyfill.js?features=es6|gated\nI'm not sure why it doesn't work in ios 9, that is something we could investigate however, as ios 9 supports it natively this would not be a high priority. The higher priority is changing our config to not serve this polyfill to ios 9 browsers.\n. Thanks, we will fix all of these in the next release :-) The reason we have not spotted these issues is because our CI does yet run those browsers, it will once #954 is merged.\n. Yep :-). PR for this -- https://github.com/Financial-Times/polyfill-service/pull/1027. Can confirm it doesn't work on Edge 14. Thanks for fixing this :-)\n. It might be useful to add the bug ticket for String.prototype.contains -- https://bugzilla.mozilla.org/show_bug.cgi?id=789036\n. I can't remember when the change was made to console methods to make them autobound.\nI tried to find a spec which mentioned it but failed to. Do you have a link to a spec for this? The reason I ask is because I'm not sure if all console methods are now autobound to console or if it was a subset of them.\n. Yes, if you wanted to use a console method as a separate function you needed to bind it to the console object like so - console.log.bind(console), console methods are now autobound meaning you can use a console method as a separate function like so - console.log.\nTo implement this change isn't a lot of work I believe, would mean adding Function.prototype.bind as a dep to every console polyfill and binding the methods to the console object.. Our console polyfills are not tied to the console object, they do not need to be bound to be called directly.. Safari 10 is there --\nhttps://cdn.polyfill.io/v2/polyfill.js?features=fetch&ua=safari/10 --\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/fetch/config.json\nOn 20 Nov 2016 15:32, \"Carl-Erik Kopseng\" notifications@github.com wrote:\n\nAdd Safari 10 to that list.\n@triblondon https://github.com/triblondon, the weird thing is that the\ntest page says it should be polyfilled, but it is not!\ncurl 'https://cdn.polyfill.io/v2/polyfill.js' -XGET -H 'Referer: http://meny.local/Testsider/fleksibel-kampanjeside/' -H 'Accept: /' -H 'Cache-Control: max-age=0' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0.1 Safari/602.2.14'  | grep fetch\nReturns nothing.\nAs the test shows, it should have been served.\n[image: fetch safari]\nhttps://camo.githubusercontent.com/ac0e7c8fe45e59b8ccb73ac983d5a08918003b63/68747470733a2f2f7777772e64726f70626f782e636f6d2f732f387672636e7a35317170766c7a73362f66657463682e7361666172692e706f6c7966696c6c2e706e673f646c3d31\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/974#issuecomment-261784942,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa5VbazAZTzgOs6hwgtZWKEtTkuDrks5rAGgAgaJpZM4KkzF7\n.\n. Apologies if my previous reply seemed abrupt, I was using my mobile phone to reply.\n\nI will close this issue, thanks for taking the time to confirm it is all working.\nI also think we should add fetch to the default set as it seems many people are expecting it to be there.\n. Can you add a test for this?\n. @falsandtru This seems to currently fail in IE 8:\nFailed tests:\n - ie 8 (Sauce results: https://saucelabs.com/tests/6841a3ed79f1453a81b32aa57a5c4169)\n    -> document.currentScript\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=document.currentScript\n. Rerun the tests:\n```\nTunnel closed\nFailures:\n \u2022 ie/8 (targeted) [https://saucelabs.com/tests/ec5c1dcbf2db412495c299b8a7bbe8b8]\n    -> document.currentScript\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=document.currentScript\n. @falsandtru It passes CI now :-) Would you be able to [resign our CLA](https://github.com/Financial-Times/polyfill-service/pull/975#issuecomment-261414409), we added a bot to keep track of them and have decided to start afresh with the signatures.. Fails on CI:\nFailures:\n \u2022 chrome/48 (targeted) [https://saucelabs.com/tests/da5d8fcd7241499dada3db7ca719bc32]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 firefox/44 (targeted) [https://saucelabs.com/tests/24f4ef683e794f9081cbbef3d8d25327]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 ie/13 (targeted) [https://saucelabs.com/tests/80172f6fff2642f48a0681a338785cfe]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 ie/11 (targeted) [https://saucelabs.com/tests/7560fc116d544ced89b6fa18360a7b5b]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 ie/10 (targeted) [https://saucelabs.com/tests/32a5c77cdfbb435a97060f2a53205ec8]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 ie/9 (targeted) [https://saucelabs.com/tests/7109a4e346974b82b7647991ae13496f]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 safari/9 (targeted) [https://saucelabs.com/tests/43d8271548cb4852a40814994b857846]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 safari/8 (targeted) [https://saucelabs.com/tests/f6fec8310e654629a99ecdd5fe389c89]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 android/5.1 (targeted) [https://saucelabs.com/tests/5995ed188630468bbc55f45ea9270cbe]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n \u2022 android/4.4 (targeted) [https://saucelabs.com/tests/1d25e71cacdc41abae43520aa4250c3e]\n    -> Object.entries\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Object.entries\n``. Not yet, if you would like to take it from here you can, otherwise this will probably get looked at in the new year :-). Thanks @hannesj, we are a lot closer now :-) It seems to consistently fail on android 5.1 on circleci.. @hannesj I've been attempting to cut the release since Saturday but haven't been able to get Edge 14 on BrowserStack to execute correctly. I'm seeing UnknownError - An unknown server-side error occurred while processing the command` all the time. This is the only thing halting a beta release being cut.. Great work @umidbekkarimov! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. There is no flag for this unfortunately, if you only want Intl polyfills you will need to place them all in manually.\n. I can not replicate the issue on any devices. Can you click the red triangle in the address bar and paste a screenshot into this issue please?\n. @enyo Are you still seeing this issue?\n. @enyo Do you use the same machine at work and out of work? If not, it could be that your work machine has a bad cache of either our certificate or the certificate revocation list. Would you be able to empty the cache on the machine?\n. I see it in the first url when I add ua=ie/11 to mimic ie11 for the polyfill-service.\nHere is a polyfill.io requests for only findIndex to help show it is being served to ie11 in minified form -- https://cdn.polyfill.io/v2/polyfill.min.js?features=Array.prototype.findIndex&flags=gated&unknown=polyfill&callback=init&ua=ie/11\n. @triblondon updated the detect :-)\n. Thanks @lmk123!\n. @AdriVanHoudt That should be resolved now, sorry for the hiccup there.\n. This is now live \ud83c\udf89 \n. Thanks for the review @triblondon, useful feedback. I've made the changes you suggested and will merge this one CI passes.\n. Looks good, thanks @mbrevda, before I can merge this you'll also need to accept our contribution terms. Written agreement here in the PR would be fine.\n. @lenovouser That looks super useful! Thank you very much for sharing it! :-D\n. Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. @andyburke @jacklee0223 do you happen to know of a way to do automated testing against facebook's in-app browser? When we fix this I want to ensure we are unlikely to regress again in the future.. I've been thinking about this for the past year, it's something I've been meaning to post an issue about. The question I've had is \"should the polyfill-service stick with the latest ecmascript 262 specification version or should it have a separate polyfill implementation for each version?\". My current thinking is that we aim to always have our polyfills adhere to the latest specification as that is what browsers will eventually have.\nWith regards to Object.keys, we have an ES5 polyfill as you already know, if you add a failing test to this file, I'm sure we can get it passing and configured for the correct browsers :-)\n. This was added in https://github.com/Financial-Times/polyfill-service/pull/1033. From CircleCI:\n\u2022 android/5.1 (targeted): Error: Timed out at 'waiting for results'. This has been added in #1033. Seems good, what's the reasoning behind this? If this progresses could we test to see if it still works on Windows OS for development.\nWould you have a programmatic way of displaying what tasks are available?. This all sounds great. Origami services have started using Make and Makefiles, not sure if this project should move in that direction or not, happy either way.. @lu40 This PR will not resolve your issue as we don't have any detection in place for qupzilla.\nI don't think we would accept a PR to add qupzilla specific detection. If qupzilla is based on another browser such as Chromium etc then we would accept a PR which aliases qupzilla to a browser we do support. https://polyfill.io/v2/docs/contributing/common-scenarios#new-browser\nAnother solution to your issue would be to set the polyfill-service to polyfill unknown browsers, this can be done by adding &unknown=polyfill to your polyfill.io url. @triblondon I removed it from the dependencies section, if you add it to devDependencies in your less-grunt branch as it is only used for development tasks then I think there won't be a conflict.. Thanks! @kdzwinel . I've been ramping up the frequency of release cycles. I expect to cut another release for qa tomorrow, it will go live to production a minimum of 7 days after that.. @ironsidevsquincy Is this wanted by FT?. @sndrs We would be happy to accept a PR which would make these tests pass. . Linking to the issue: https://github.com/Financial-Times/polyfill-service/issues/1167. @ironsidevsquincy Would you be able to sign the CLA for this project? -- https://github.com/Financial-Times/polyfill-service/pull/1006#issuecomment-264141833. This is being worked on in a newer PR -- https://github.com/Financial-Times/polyfill-service/pull/1347. I think this looks great :-)\nMy opinion on the search bar is to have it visible on page load, I think that if it was hidden on page load then it could be easily missed.. @adamduncan Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. @ruiaraujo There are failing tests on CI for these changes:\nFailures:\n \u2022 ie/11 (targeted) [https://saucelabs.com/tests/7bd28a27475449d7b1a0a72d752d3588]\n    -> Number.parseInt\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseInt\n    -> Number.parseFloat\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseFloat\n \u2022 ie/10 (targeted) [https://saucelabs.com/tests/5791072f17ef49e581e62ea30302efba]\n    -> Number.parseInt\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseInt\n    -> Number.parseFloat\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseFloat\n \u2022 ie/9 (targeted) [https://saucelabs.com/tests/98df88c9e3424364929790f175dd8d7b]\n    -> Number.parseInt\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseInt\n    -> IntersectionObserver\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver\n    -> Number.parseFloat\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseFloat\n \u2022 ie/8 (targeted) [https://saucelabs.com/tests/1c5af72962cf46e5a2b6808905831384]\n    -> Number.parseInt\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseInt\n    -> Number.parseFloat\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseFloat\n \u2022 ie/7 (targeted) [https://saucelabs.com/tests/61c769b0508c478dad993d96b5e427f6]\n    -> Number.parseInt\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseInt\n    -> Number.parseFloat\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseFloat\n \u2022 safari/8 (targeted) [https://saucelabs.com/tests/bc72e943fb4246b28f95ca3a1d2aa9b0]\n    -> Number.parseInt\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseInt\n    -> Number.parseFloat\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseFloat\n \u2022 android/4.4 (targeted) [https://saucelabs.com/tests/d8a7713deb434526b6f3e3877ecb3af4]\n    -> Number.parseInt\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseInt\n    -> Number.parseFloat\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Number.parseFloat. The licensing side of this project is one I am not 100% sure of, we will have to ask @triblondon about that.\n. Waiting on a fix to yaku to enable IE8 support once again -- https://github.com/ysmood/yaku/pull/42. Could you post the polyfill.io url you are using please?. Thanks!\nJust so I am 100% certain on the issue, could you confirm whether this is correct please:\nWhen polyfilling Array.prototype.@@iterator ([][Symbol.iterator]) alongside polyfilling Symbol and using Safari 10, an error is thrown when it shouldn't be.\nI checked what polyfills are returned from your first polyfill.io url for safari 10 and we don't polyfill Symbol or Array.prototype.@@iterator for that browser. Can you create a reduced test case for this issue at all? You can see what we served a browser by removing the .min from the url.\nThese are what we serve to Safari 10 for default,es6:\n/* Polyfill service v3.15.0\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: safari/10.0.0\n * Features requested: default,es6\n * \n * - URL, License: CC0 (required by \"default\")\n * - Math.clz32, License: CC0 (required by \"es6\")\n * - Math.sign, License: CC0 (required by \"es6\")\n * - Object.is, License: CC0 (required by \"es6\")\n * - String.prototype.repeat, License: CC0 (required by \"es6\") */. @bkniffler we already have that feature, it is listed on our api page. adding &flags=gated to the end of the polyfill.io url you are using will apply the gated flag to all features requested in the features parameter. gated adds a feature detect around every polyfill, meaning the polyfills will only execute if the feature detect decides the browser does not have that feature natively.. Yup, our compat.json shows that it fails until 4.4 --> https://github.com/Financial-Times/polyfill-service/blob/master/docs/assets/compat.json#L4764\nHappy to accept a PR for this, the instructions for this are --> https://qa.polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers. @umidbekkarimov I'm not sure I understand, the string you posted identifies as safari 4, this issue is for Android 4.. If wanting to change the range of Android versions we target the performance.now polyfill at, you will need to modify the contents of polyfills/performance/now/config.json. We have instructions for this on our website to help new contributors, would you be able to give them a read and see if you can do the change? The instructions can be found here -- https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\nIf you have any questions at all, feel free to post them in here and I will do my best to help, we're trying to make contributing to this project as simple as possible :-) . Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-)\n. This is now live on https://polyfill.io -- https://github.com/Financial-Times/polyfill-service/releases/tag/v3.16.0. @caridy, could I have your opinion on this feature detect code for Intl locales please?. @ruiaraujo those devices are supported already by including &unknown=polyfill in the polyfill.io url. E.G. https://polyfill.io/v2/polyfill.js?features=Intl&ua=samsung_mob/2.1.0&unknown=polyfill. Getting for..of working requires compiling your code. I see you're using Babel to compile your code, Babel is can compile in many different ways, could you paste your babel configuration into this issue please?\nOne issue I've seen with Babel is that it sometimes outputs code which is tied to the core-js Symbol polyfill. If this is the issue, you can use babel-preset-env plugin and specify an exclude for es6.symbol. Another solution is to use https://github.com/Financial-Times/babel-polyfill-silencer.\nAbout NodeList iterator support, we have a polyfill for this, you can see the browsers it is sent to in the config file -- https://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/NodeList/prototype/%40%40iterator/config.json\nIf you are still finding issues, please post a reduced test case for us to help debug this with you. A reduced test case could be a jsbin.com link or a github repo made which only contains code to show the issue you are having.. This looks like it has been fixed but forgot to close the issue. ios 10 doesn't need Symbol, will update our configuration so we don't send it the polyfill. resolved in #1037 . @slawiko Great work on the PR, would it be possible to include a test for these changes?. Will do :-). Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-). Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-). @wheresrhys Could you follow the steps outlined on our contribution page please? https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers. we do not target a browser if we have not tested the polyfill on that browser. BlackBerry and Samsung are usually missed out as they are not on SauceLabs and so need to be manually tested. What is the issue with adding and testing them manually? Is the core issue the time it takes for a release to go live which contains the config change?. That table is used to display the compat data, not the target ranges. We are wanting to improve the table though -- https://github.com/Financial-Times/polyfill-service/issues/1024\n@wheresrhys Happy to accept a PR which has a more thought-out design\n@triblondon What are your thoughts on this?. I like the idea of having a UX similar to Caniuse however, I think progressing with RUM is the better choice out of the two.. @kdzwinel You can add feature detects using &flags=gated to the polyfill.io url you are using. This will check if a polyfill is needed before executing it.. @triblondon I think that is a great idea, one for the list of desirable breaking changes - https://github.com/Financial-Times/polyfill-service/issues/892. In version 3 of https://polyfill.io the browsers mentioned in this issue would now fall under the unsupported browser list and get the polyfills served with feature detects and no longer execute the polyfills which were causing the errors \ud83c\udf89 . Will be fixed by #1149 . I'm very happy to hear comments about our documentation, thanks for taking the time to give us feedback. I agree with the concern @triblondon has made about it potentially becoming out of date documentation as the parameters would exist in two places.. When we ran our tests, we saw ios 9 come back as reporting it is natively supported.\nKangax Compat Table also reports ios 9 as supporting Array.prototype[Symbol.iterator].\nWould you be able to write a test which shows it isn't supported on ios 9?. @triblondon Should we remove the function based aliasing approach?. @wheresrhys Can you post a screenshot of how this look please?. Closing this for now, feel free to re-open if you are carrying on developing it.. @triblondon Could you give this another review?. The WTFPL lets you relicense the work under any other license. What do you\nthink to relicensing to an OSI approved license?\nOn 17 Jan 2017 05:59, \"Andrew Betts\" notifications@github.com wrote:\n\n@triblondon approved this pull request.\nLooks like this polyfill has great test coverage already, so not including\ntests here is OK. The licence is not OSI approved and has potential issues\n(an OSI approved licence like MIT would be better), but I think the risk is\nlow, and in any case we no longer actually distribute the polyfill's code\nanyway.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/1056#pullrequestreview-16926073,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa6Z0spevdzpi2iF900OZbg-tKZLvks5rTFiIgaJpZM4Lh_2m\n.\n. @satazor Nice find! I'm happy to accept a PR which fixes the issue in the same manner as core-js' solution :-). Sorry @asilvas, I've been working on our selenium testing suite as their are two bugs in it which are stopping me from making a new release of the service. Once I've finished this work I will be taking a look through the issues on the project.\n\n@hannesj Thanks for offering to help out on this issue :-D If you need any help, feel free to message on this issue and tag me.. @satazor It will be out in v3.17 :-). @ganlanyuan I think our documentation needs to surface the simpler system for using third-party polyfills. -- https://polyfill.io/v2/docs/contributing/authoring-polyfills#configuration\n\ninstall: Object, used to specify how to install the third-party polyfill into the polyfill-service.\nmodule: String, name of the package on NPMJS to install.\npaths: Array, paths of the files inside the package to combine together to create the polyfill. If not included, defaults to the packages default entry point.\npostinstall: String, path to a javascript module to execute after creating the polyfill. This can be used to create any helper files for the polyfill.\n\nIt can be achieved via config.json completely :-)\nHere is how it would look:\njs\n{\n  \"browsers\": {\n    \"firefox\": \"<3.5\",\n    \"ie\": \"6 - 8\",\n    \"opera\": \"<10.0\",\n    \"safari\": \"<4\"\n  },\n  \"license\": \"ISC\",\n  \"repo\": \"https://github.com/Alhadis/Fix-IE/\",\n  \"spec\": \"https://www.w3.org/TR/ElementTraversal/#attribute-childElementCount\",\n  \"docs\": \"https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/childElementCount\",\n  \"install\": {\n    \"module\": \"fix-ie\",\n    \"paths\": [\"src/IE8-child-elements.js\"]\n  }\n}. Could you add tests for these features please? That way we know for certain\nthey work as expected :-)\nOn 24 Jan 2017 21:16, \"William Lin\" notifications@github.com wrote:\n\nHey,\nI decided to write these polyfills by myself since it's not that complex.\nPlease check!\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/1062#issuecomment-274940916,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa6d4dRpegl1ATuG99ABWtuM0xcRfks5rVmnvgaJpZM4LlfY6\n.\n. @ganlanyuan The tests seem to be failing on CI, would you be able to look into these?\n\nFailures:\n - ie/8:\n    -> Element.prototype.nextElementSibling\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.nextElementSibling\n    -> Element.prototype.previousElementSibling\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.previousElementSibling\n    -> Element.prototype.firstElementChild\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.firstElementChild\n - ie/7:\n    -> Element.prototype.textContent\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.textContent. @ganlanyuan You can run the application locally using npm start and then visiting the urls in the error block posted above. https://github.com/Financial-Times/polyfill-service/pull/1062#issuecomment-303223836. @ganlanyuan I'll need some more information to help with this:\n- Which operating system are you using?\n- Which version of Node (node -v) and npm (npm -v)are you using?\n- Have you ran npm install and was it successful?\nHopefully with that information I can help figure out why the build script is failing.. @ganlanyuan I think it is an issue with using npm5 and this project. I believe running the commands separately works:\n- npm run clean\n- node tasks/node/updatesources\n- node tasks/node/buildsources. @ganlanyuan Thanks for helping debug this issue, if you pull down the changes I've made to your branch, it should be working :-). The proposal is stage 2, I can see the specification document needs updating to reflect that, sorry for the confusion caused.\nI'll revert the Yaku change so that we carry on using the latest version (which includes Promise.prototype.finally). I'm tempted to not include the Promise.prototype.finally tests in the Promise test suite as it would show all modern browsers as not supporting Promises in our compat data which we display on the features page of the website.. Hi, thanks for the contribution, have you seen our documentation for updating the targeting of a polyfill? https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\nIf you could show some evidence that these polyfills perform correctly in the browsers targeting by your changes that would be really helpful :-) Ideally, by including a screenshot of the relevant browsers running our test suite for these polyfills/features.\n. We have documentation for using the test suite -- https://polyfill.io/v2/docs/contributing/testing#running-tests-locally\nMap: https://polyfill.io/test/tests?feature=Map&mode=all\nSet: https://polyfill.io/test/tests?feature=Set&mode=all\nArray.prototype.includes: https://polyfill.io/test/tests?feature=Array.prototype.includes&mode=all\nString.prototype.includes: https://polyfill.io/test/tests?feature=String.prototype.includes&mode=all\n. @kdzwinel Are you able to help us finish this PR. If you don't have the time anymore to work on this, that's okay, I will try and hunt down an opera mini device to test this on.. \nBrowser version op_mini/8:\n\nResults on live site:\n\nMap - tests don't run\n\n\n\nSet - tests fail\n\n\n\nArray - tests don't run\n\n\n\nString - basic existence tests pass (we don't have other tests)\n\n\nResults from PR:\n\nMap - tests pass\n\n\n\nSet - tests pass\n\n\n\nArray - tests pass\n\n\nString - basic existence tests pass\n\n. Promise finally issue will be resolved via #1063 . When promoting slugs between apps, Heroku will copy the slug verbatim between apps, without changes. Heroku will also not run any scripts when promoting.. @CheloXL This will also serve the polyfill to Edge mobile, is that the intention? If not, the range should be 10 - 11.. @jonathan-fielding It looks to fail in some browsers:\n- firefox/44:\n    -> WebAnimations\n - ie/14:\n    -> WebAnimations\n - ie/13:\n    -> WebAnimations\n - ie/11:\n    -> WebAnimations\n - ie/10:\n    -> WebAnimations\n - safari/9:\n    -> WebAnimations\n - android/4.4:\n    -> WebAnimations\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=WebAnimations. Hi @jonathan-fielding , this is now available for testing on https://qa.polyfill.io/ \ud83d\udc4d . Correct, you can serve polyfills to this browser and all unsupported\nbrowsers by adding &unknown=polyfill\nOn 28 Jan 2017 02:10, \"Andy Burke\" notifications@github.com wrote:\n\nHi, missing a polyfill when getting this UA:\nMozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-J320P Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.5 Chrome/38.0.2125.102 Mobile Safari/537.36\npolyfill.io detects this browser as:\n/ Polyfill service v3.16.0\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n \n * UA detected: samsung_mob/3.5.0 (unknown/unsupported; using policy unknown=ignore)\n * Features requested: default\n \n * Version range for polyfill support in samsung_mob is: >=4\n *  /\n/ No polyfills found for current settings /\nsentry.io detects this browser as:\nbrowser: Chrome Mobile 38.0.2125browser.name: Chrome Mobile\ndevice: SM-J320P\ndevice.family: Samsung SM-J320P\nos: Android 5.1.1\nIs there just no support for polyfilling on samsung mobile devices <4?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1075, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa8fUYOWQUxonGlxNAllMW6JCx_zRks5rWqNSgaJpZM4LwY8e\n.\n. @MikaFima Have you tried adding &unknown=polyfill to the end of your polyfill.io script url?\n\nI don't know much about UC browser, we are aliasing UC 9.9.* to IE 10 as they are similar. Do you know if UC browser 10 and 11 are similar to other IE versions?. @triblondon, this is ready for another review :-). Fetch is not included in the default set of polyfills -- https://cdn.polyfill.io/v2/docs/features/#fetch\nTo include fetch alongside the default set of polyfills you need to change your polyfill url to this: https://cdn.polyfill.io/v2/polyfill.js?features=default,fetch.. We serve fetch to all safari version -- https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/fetch/config.json#L9\nI believe their is no issue with our browser targeting for this polyfill and that this polyfill works correctly in Safari.\nI will close this issue, if the solution I've provided does not work, please feel free to re-open the issue :-). @bigslycat Thanks for the PR, would you be able to add a test which checks that MediaQueryList exists in the global scope, that way we can ensure the polyfill is working correctly and help avoid any future regressions.. I ran the tests on CI and can see this is failing in some browsers:\nFailures:\n - ie/9:\n    -> matchMedia\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=matchMedia\n - ie/8:\n    -> matchMedia\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=matchMedia\n - ie/7:\n    -> matchMedia\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=matchMedia\n@bigslycat would you be able to fix the failing tests at all?. @bigslycat Would you be able to add a test which covers the issue you are fixing?. They are not in the default set of polyfills, if you would like to include these in your polyfill bundle you will need to use this url.\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.find,Array.prototype.findIndex\nWe have a section in the documentation about the default sets -- https://polyfill.io/v2/docs/features/#default-sets\nA quick way to see if a feature is in the latest default set is by looking at the feature list, if the feature has a black star next to it, it is in the default set -- https://polyfill.io/v2/docs/features/#feature-list. This was landed in #1133 . @triblondon The existing tests are closer to integration tests than unit tests. There is definitely some cross-over between test/unit and test/node. With test/unit I'm looking to have fully isolated unit tests with which to run coverage reports against where we have purposefully hit a specific code path. Coverage reports will enable us to find out what parts of the code-base are not covered in test cases.\nI'm hoping we can split our tests up into unit and integration tests.. I think this is ready for another review @triblondon @rowanmanning :-). Next FT are moving away from their own proxy. Origami have moved their services to a path on ft.com. Having a version of the Polyfill-Service on a path on ft.com enables us to record logs and do other FT-specific changes to the service without impacting our users on https://polyfill.io. Can't merge this until https://github.com/Financial-Times/o-in-page-nav/issues/8 is fixed. Closing this issue as we will update Intl dependency once it has a new release.. @dlebech Thanks for the PR! Are you able to run our test suite against the minimum Opera version each polyfill is now no longer targeting and confirm the native features work as expected? You can do this by visiting https://polyfill.io/v2/docs/features/ and click the \"Live test\" radio button at the top of the table.. @dlebech Thanks for doing that!. First of, great work @alexlafroscia!\nHopefully I've understood correctly: \n\nMaybe we could do the feature-detection server-side and only serve the polyfill to browsers that we know can handle ES6? Can the browser version matching that the config.json uses handle something like \"only versions of {X browser} greater than Y\" etc.? We would need to flip the normal use case of \"only versions of {X browser} less than Y\" around, and I don't know if it supports that.\n\nThe browser version matching is based on semver ranges, we can do \"less than\" ranges, we do this for Promise.prototype.finally - https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Promise/prototype/finally/config.json\n. @alexlafroscia Is the table from https://github.com/Financial-Times/polyfill-service/pull/1101#issuecomment-283577394 what you are trying to achieve?. @alexlafroscia I believe it has to be done by requesting customElements,customElements.~native-shim explicitly? We can add this in the notes section of each polyfills config.. @alexlafroscia If we advise people to use https://github.com/WebReflection/babel-plugin-transform-builtin-classes, would that mitigate the need for the native shim?. This was landed in #1133 . @TOP-Chao What do you mean? Could you add some more detail please? If you want to use HTTPS for https://polyfill.io, we already redirect users from HTTP to HTTPS and set a HSTS header to ensure that subsequent requests hit HTTPS directly.. Hi @tschaub, this is now available for testing on https://qa.polyfill.io/ \ud83d\udc4d . This is now live on https://polyfill.io. I would be hesitant adding this as a polyfill in our service because it currently not does not have a champion in TC39 and is not being actively proposed (assumption made on looking at the proposals document -- https://github.com/tc39/proposals).. We are looking to follow the advice that the W3C TAG has written about polyfills. https://w3ctag.github.io/polyfills/#feature-life-cycle-and-the-role-of-polyfills. @jonbretman Thanks for the PR! Checking the compatibility charts, ios 9 might need the symbol polyfill because the native version doesn't ignore symbol primitives when calling JSON.stringify. Before we could accept your work into the project, we ask that you read and sign our contributor license agreement.. @jonbretman No tests covering this, the toString implementation is there to cater for that part of the specification. @jonbretman It looks like you made the commits with an email address which isn't linked to your github account, would you be able to link those two together?. Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-). Looks good @regiskuckaertz, thanks for doing this! :-). @regiskuckaertz The polyfill and/or tests are failing in some browsers:\n- chrome/56:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - chrome/48:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - firefox/52:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n \u2022 firefox/44 (targeted): Error: Timed out at 'polling for results'\n - ie/14:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - ie/13:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - ie/11:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - ie/10:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - ie/9:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - ie/8:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - ie/7:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - safari/9:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - safari/8:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart\n - android/4.4:\n    -> String.prototype.padEnd\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padEnd\n    -> String.prototype.padStart\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=String.prototype.padStart. Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-). There is a PR to update the dependencies in our shrinkwrap which will fix this -- https://github.com/Financial-Times/polyfill-service/pull/1136/files#diff-36018a6a9e1de1798516799b84841318R1893\nIt is probably best to update package.json as well with the version @triblondon has mentioned.. Resolved by #1150 . Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-). @triblondon Think I fixed the issues blocking a release, building the release now :-). Please open a new issue for the electron detection :-)\nOn 16 Mar 2017 19:33, \"Ruben Martinez Jr.\" notifications@github.com wrote:\n\nSo, not sure if this is related, but it seems like more than a\ncoincidence... My Electron web app broke yesterday, too, due to its User\nAgent being identified as \"unknown\". As stated above, it had been working\nsuccessfully until around middle of yesterday. The user agent is:\nUA detected: electron/1.4.0 (unknown/unsupported; using policy\nunknown=polyfill)\nShould I split this off into a separate issue?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1121#issuecomment-287167176,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa3bEQTekW2FmR5fQIpsbr7EtJ2MHks5rmY6AgaJpZM4Mej8U\n.\n. @callumj This should be fixed in the next release of the service. https://github.com/Financial-Times/polyfill-service/pull/1124. Chrome 45 has basic support for Array.from, have you got a reproducible example of their native implementation failing to work correctly?. @CheloXL Could you create a small reproducible test case for this? https://jsbin.com is a good place to store such a test case.. I use Browserstack for testing, Browserstack has Chrome 45.. @CheloXL It works on chrome 45 on windows. \n\n. Windows 10 @CheloXL . I've also tested on windows 8/7 and XP and it works as expected. I noticed this also, have the same fix in another PR -- https://github.com/Financial-Times/polyfill-service/pull/1092/files#diff-6f0f32bc2b556db6b5795e1ee9170443R93\n\nYour PR is much smaller and easier to land into the project, thanks for this work!. I don't think we need to pin the useragent dependency as we have an npm-shrinkwrap.json which should only be updated when all the tests pass. . @lepture That's okay, I will resolve that issue and get this merged :-). Thanks for the PR! \nDid you know we offer one month's free premium access to all FT content (normally $50) to anyone who has a pull request merged in this repository? If you want to claim it, there's one Google form to fill out :-). This should solve the issue -- https://github.com/Financial-Times/polyfill-service/pull/1126. Yes, I'm working on creating the next release. We have a bit of an issue with generating our compatibility data which is used on https://polyfill.io/v2/docs/features/. Once I have resolved that issue a release will make it's way to https://qa.polyfill.io and then onto https://polyfill.io if no issues are found during the QA period.. @sjparkinson Completely agree, I'm not sure what a better approach would be for that scenario.. PR for this --> https://github.com/Financial-Times/polyfill-service/pull/1136. My thoughts would be to follow ecmascript-262 and use the year-based names. We should go back and alias all es6 features to es2015, keeping the es6 alias for backwards compatibility.. Which browser was this on and which polyfills were you loading?. What is the user-agent of the browser which throws the error?. @DullReferenceException Are you using polyfill.io/v2/polyfill.js or polyfill.io/v3/polyfill.js? v3 would have this issue fixed by serving the polyfills wrapped in feature detects for the browser.. We do that by default, you are overriding that functionality by using the always flag.\n\nalways\nPolyfill should be included regardless of whether it is required by the user-agent making the request. If there are multiple browser-specific variants of the polyfill, the default one will be used for browser that doesn't actually require the polyfill. In some cases where the only way of implementing a polyfill is to use browser-specific proprietary technology, the default variant may be empty.\nhttps://polyfill.io/v2/docs/api\n\nWhat is the reason for using the always flag?. @phamann - What do you think about this idea?. We would be very happy to accept a pull request for this performance improvement @dcherman . The firefox user agents will be fixed in the next release -- https://github.com/Financial-Times/polyfill-service/pull/1120/files. Mozilla/5.0 (Linux; U; Android 4.1.1; zh-tw; GT-P3100 Build/JRO03C) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30 is Android 4.1, the polyfill targets Android 4.4 and higher.\nMozilla/5.0 (Linux; U; Android 4.1.2; en-gb; GT-P3100 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30 is Android 4.1, the polyfill targets Android 4.4 and higher.\nMozilla/5.0 (iPad; CPU OS 6_1_3 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Mobile/10B329 [FBAN/FBIOS;FBAV/8.0.0.28.18;FBBV/1665515;FBDV/iPad3,1;FBMD/iPad;FBSN/iPhone OS;FBSV/6.1.3;FBSS/2; FBCR/;FBID/tablet;FBLC/zh_TW;FBOP/1] is iOS Safari 6.1, the polyfill targets iOS Safari 7 and higher.\nMozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9B206 [FBAN/FBIOS;FBAV/6.5.1;FBBV/377040;FBDV/iPad1,1;FBMD/iPad;FBSN/iPhone OS;FBSV/5.1.1;FBSS/1; FBCR/;FBID/tablet;FBLC/zh_CN;FBOP/1] is iOS Safari 5.1, the polyfill targets iOS Safari 7 and higher.\nMozilla/5.0 (Linux; Android 5.1; CPH1605 Build/LMY47I) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.94 Mobile Safari/537.36 OPR/37.0.2192.112031 is Opera Mobile, the polyfill does not target Opera Mobile at all.\nMozilla/5.0 (Linux; Android 5.1.1; F1f Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.73 Mobile Safari/537.36 OPR/34.0.2044.99135 is Opera Mobile, the polyfill does not target Opera Mobile at all.\nMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2683.0 Safari/537.36 is Chrome 51, the polyfill targets Chrome up to version 50.\nYou can see what the polyfill supports here - https://github.com/WICG/IntersectionObserver/tree/gh-pages/polyfill#browser-support\nYou can see what we target the polyfill at here - https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/IntersectionObserver/config.json. Hi @forceuser & @christophehurpeau, do you have some code I can run to reproduce the issue at all?. This is in the next release which is currently open for testing via https://qa.polyfill.io. Thanks for the contribution @dcherman, this will definitely help on some large Sets and Maps!\nWould you be able to add the email address used for this commit to your account, then reading our Contributor License Agreement and signing it if you are happy with the terms.\n. @dcherman This is failing on CI, would you be able to look into this at all?\nFailures:\n - ie/8:\n    -> Map\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Map\n    -> Set\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Set\n - ie/7:\n    -> Map\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Map\n    -> Set\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Set. Hi @dcherman , this is now available for testing on https://qa.polyfill.io/ \ud83d\udc4d . @ctjhoa Would it be possible to add a test for this change at all?. @ctjhoa Tests failing on CI, would you be able to fix them?\n```\nFailures:\n - ie/8:\n    -> Element.prototype.prepend\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n - ie/7:\n    -> Element.prototype.prepend\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n```. I reran the tests on circle @ctjhoa, it looks like IE7 is still having issues with the polyfill and/or the tests.\nFailures:\n - ie/7:\n    -> Element.prototype.prepend\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend. @ctjhoa We now have a polyfill for just DocumentFragment and separate polyfills for it's methods. Could you update this PR to add a separate polyfill for this prepend method? If you don't have the time, I can look into this.\nhttps://github.com/Financial-Times/polyfill-service/tree/master/polyfills/DocumentFragment/prototype/append. From the features you have requested, ios safari 10.2 only gets served the URL polyfill. Should we be serving other polyfills to it from your list?\nhttps://cdn.polyfill.io/v2/polyfill.js?features=default,Symbol,Symbol.iterator,Array.prototype.@@iterator&ua=ios_saf/10.2\n/* Polyfill service v3.17.0\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: ios_saf/10.2.0\n * Features requested: Array.prototype.@@iterator,Symbol,Symbol.iterator,default\n * \n * - URL, License: CC0 (required by \"default\") */. We run the feature detection before polyfilling :-) If you look at the bundled response you can see this in action:\nhttps://polyfill.io/v2/polyfill.js?features=String.prototype.contains&rum=1&ua=chrome/56\n```js\n/ Polyfill service v3.17.0\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: chrome/56.0.0\n * Features requested: String.prototype.contains\n * \n * - String.prototype.contains, License: CC0 /\n(function(undefined) {\n(function() {\n    var beacon = new Image();\n    beacon.src = '//polyfill.io/v2/recordRumData?X' + \n    \"&String.prototype.contains=\" + (('contains' in String.prototype)?1:0) +    \"&String.prototype.includes=\" + (('includes' in String.prototype)?1:0) +\n    (('performance' in window && 'getEntriesByType' in window.performance && 'find' in Array.prototype) ? (function() {\n        var rec = window.performance.getEntriesByType(\"resource\").find(function(rec) { return rec.name.indexOf('/v2/polyfill.') !== -1; });\n        return rec ? '&dns='+(rec.domainLookupEnd-rec.domainLookupStart)+\n        '&connect='+(rec.connectEnd-rec.connectStart)+\n        '&req='+(rec.responseStart-rec.requestStart)+\n        '&resp='+(rec.responseEnd-rec.responseStart) : '';\n    }()) : '');\n}());\n// String.prototype.contains\nString.prototype.contains = String.prototype.includes;\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```. It looks like you are also compiling the code as IE11 does not support the spread operator, can you show us how you are compiling the code please? I'm interested in seeing if it is pulling in the babel-polyfills or similar.. You have lots of parts here, babel polyfills (which can conflict with our polyfills), compiling spread operator to the es5 equivalent (is that be replaced by Array.from or is babel doing something else?) and multiple babel presets. I'm not sure if any in particular are the surfacing the issue.\nA minimal code example which reproduces the bug and the polyfill.io url you are using to get your polyfill bundle would be really helpful.\nOur Set polyfill tests pass in IE11, perhaps you can look at the tests and see if you can add one which replicates what you are seeing?. @zslabs Where is the call to the polyfill service in that codepen example? Could you please tell me the polyfill.io url you are using to get your polyfill bundle.. @matthewsuan Please add to your URL &unknown=polyfill to serve polyfills to browsers which we do not support.. When testing locally, were you using the code in master? If so, that has changes which are not yet live on https://polyfill.io. If it works in master branch, it will be fixed in the next release \u2728 . I will close this issue as the fix will be in the next release :-) If you watch this repository or follow @polyfillio on twitter you will get notifications when we release new versions of the service.. @izar89 I tried to replicate but I could not, which version of Node and NPM are you using?\nbash\n\u279c  temp node -v\nv7.7.4\n\u279c  temp npm -v\n4.1.2\n\u279c  temp cat package.json\n{\n  \"name\": \"temp\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"polyfill-service\": \"^3.17.0\"\n  },\n  \"devDependencies\": {},\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n\u279c  temp cat index.js\nrequire('polyfill-service').listAllPolyfills().then(polyfills => console.log(polyfills.length));\n\u279c  temp node index.js\n882. I also checked using yarn instead of NPM, it is working as expected:\n\u279c cat package.json\n{\n  \"name\": \"temp\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"dependencies\": {\n    \"polyfill-service\": \"^3.17.0\"\n  },\n  \"devDependencies\": {},\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n\u279c  cat index.js\nrequire('polyfill-service').listAllPolyfills().then(polyfills => console.log(polyfills.length));\n\u279c  yarn\nyarn install v0.22.0\n[1/4] \ud83d\udd0d  Resolving packages...\n[2/4] \ud83d\ude9a  Fetching packages...\n[3/4] \ud83d\udd17  Linking dependencies...\n[4/4] \ud83d\udcc3  Building fresh packages...\n\u2728  Done in 6.61s.\n\u279c  node index.js\n882\nHere is the dependency tree that yarn generated\n\n\u279c  yarn list\nyarn list v0.22.0\n\u251c\u2500 accepts@1.3.3\n\u2502  \u251c\u2500 mime-types@~2.1.11\n\u2502  \u2514\u2500 negotiator@0.6.1\n\u251c\u2500 ajv@4.11.6\n\u2502  \u251c\u2500 co@^4.6.0\n\u2502  \u2514\u2500 json-stable-stringify@^1.0.1\n\u251c\u2500 align-text@0.1.4\n\u2502  \u251c\u2500 kind-of@^3.0.2\n\u2502  \u251c\u2500 longest@^1.0.1\n\u2502  \u2514\u2500 repeat-string@^1.5.2\n\u251c\u2500 amdefine@1.0.1\n\u251c\u2500 ansi-regex@2.1.1\n\u251c\u2500 ansi-styles@2.2.1\n\u251c\u2500 ansicolors@0.2.1\n\u251c\u2500 array-flatten@1.1.1\n\u251c\u2500 array-map@0.0.0\n\u251c\u2500 array-reduce@0.0.0\n\u251c\u2500 array.of@0.1.1\n\u251c\u2500 asn1@0.2.3\n\u251c\u2500 assert-plus@1.0.0\n\u251c\u2500 async@1.5.2\n\u251c\u2500 asynckit@0.4.0\n\u251c\u2500 audio-context-polyfill@1.0.0\n\u251c\u2500 aws-sign2@0.6.0\n\u251c\u2500 aws4@1.6.0\n\u251c\u2500 babel-code-frame@6.22.0\n\u2502  \u251c\u2500 chalk@^1.1.0\n\u2502  \u251c\u2500 esutils@^2.0.2\n\u2502  \u2514\u2500 js-tokens@^3.0.0\n\u251c\u2500 babel-core@6.24.1\n\u2502  \u251c\u2500 babel-code-frame@^6.22.0\n\u2502  \u251c\u2500 babel-generator@^6.24.1\n\u2502  \u251c\u2500 babel-helpers@^6.24.1\n\u2502  \u251c\u2500 babel-messages@^6.23.0\n\u2502  \u251c\u2500 babel-register@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-template@^6.24.1\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u251c\u2500 babel-types@^6.24.1\n\u2502  \u251c\u2500 babylon@^6.11.0\n\u2502  \u251c\u2500 convert-source-map@^1.1.0\n\u2502  \u251c\u2500 debug@^2.1.1\n\u2502  \u251c\u2500 debug@2.6.3\n\u2502  \u2502  \u2514\u2500 ms@0.7.2\n\u2502  \u251c\u2500 json5@^0.5.0\n\u2502  \u251c\u2500 lodash@^4.2.0\n\u2502  \u251c\u2500 minimatch@^3.0.2\n\u2502  \u251c\u2500 path-is-absolute@^1.0.0\n\u2502  \u251c\u2500 private@^0.1.6\n\u2502  \u251c\u2500 slash@^1.0.0\n\u2502  \u2514\u2500 source-map@^0.5.0\n\u251c\u2500 babel-generator@6.24.1\n\u2502  \u251c\u2500 babel-messages@^6.23.0\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-types@^6.24.1\n\u2502  \u251c\u2500 detect-indent@^4.0.0\n\u2502  \u251c\u2500 jsesc@^1.3.0\n\u2502  \u251c\u2500 lodash@^4.2.0\n\u2502  \u251c\u2500 source-map@^0.5.0\n\u2502  \u2514\u2500 trim-right@^1.0.1\n\u251c\u2500 babel-helper-call-delegate@6.24.1\n\u2502  \u251c\u2500 babel-helper-hoist-variables@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-helper-define-map@6.24.1\n\u2502  \u251c\u2500 babel-helper-function-name@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-types@^6.24.1\n\u2502  \u2514\u2500 lodash@^4.2.0\n\u251c\u2500 babel-helper-function-name@6.24.1\n\u2502  \u251c\u2500 babel-helper-get-function-arity@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-template@^6.24.1\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-helper-get-function-arity@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-helper-hoist-variables@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-helper-optimise-call-expression@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-helper-regex@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-types@^6.24.1\n\u2502  \u2514\u2500 lodash@^4.2.0\n\u251c\u2500 babel-helper-replace-supers@6.24.1\n\u2502  \u251c\u2500 babel-helper-optimise-call-expression@^6.24.1\n\u2502  \u251c\u2500 babel-messages@^6.23.0\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-template@^6.24.1\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-helpers@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-template@^6.24.1\n\u251c\u2500 babel-messages@6.23.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-check-es2015-constants@6.22.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-arrow-functions@6.22.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-block-scoped-functions@6.22.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-block-scoping@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-template@^6.24.1\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u251c\u2500 babel-types@^6.24.1\n\u2502  \u2514\u2500 lodash@^4.2.0\n\u251c\u2500 babel-plugin-transform-es2015-classes@6.24.1\n\u2502  \u251c\u2500 babel-helper-define-map@^6.24.1\n\u2502  \u251c\u2500 babel-helper-function-name@^6.24.1\n\u2502  \u251c\u2500 babel-helper-optimise-call-expression@^6.24.1\n\u2502  \u251c\u2500 babel-helper-replace-supers@^6.24.1\n\u2502  \u251c\u2500 babel-messages@^6.23.0\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-template@^6.24.1\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-computed-properties@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-template@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-destructuring@6.23.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-duplicate-keys@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-for-of@6.23.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-function-name@6.24.1\n\u2502  \u251c\u2500 babel-helper-function-name@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-literals@6.22.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-modules-amd@6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-modules-commonjs@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-template@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-modules-commonjs@6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-strict-mode@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-template@^6.24.1\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-modules-systemjs@6.24.1\n\u2502  \u251c\u2500 babel-helper-hoist-variables@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-template@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-modules-umd@6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-modules-amd@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-template@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-object-super@6.24.1\n\u2502  \u251c\u2500 babel-helper-replace-supers@^6.24.1\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-parameters@6.24.1\n\u2502  \u251c\u2500 babel-helper-call-delegate@^6.24.1\n\u2502  \u251c\u2500 babel-helper-get-function-arity@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-template@^6.24.1\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-shorthand-properties@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-spread@6.22.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-sticky-regex@6.24.1\n\u2502  \u251c\u2500 babel-helper-regex@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-plugin-transform-es2015-template-literals@6.22.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-typeof-symbol@6.23.0\n\u2502  \u2514\u2500 babel-runtime@^6.22.0\n\u251c\u2500 babel-plugin-transform-es2015-unicode-regex@6.24.1\n\u2502  \u251c\u2500 babel-helper-regex@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 regexpu-core@^2.0.0\n\u251c\u2500 babel-plugin-transform-regenerator@6.24.1\n\u2502  \u2514\u2500 regenerator-transform@0.9.11\n\u251c\u2500 babel-plugin-transform-strict-mode@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u2514\u2500 babel-types@^6.24.1\n\u251c\u2500 babel-preset-es2015@6.24.1\n\u2502  \u251c\u2500 babel-plugin-check-es2015-constants@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-arrow-functions@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-block-scoped-functions@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-block-scoping@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-classes@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-computed-properties@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-destructuring@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-duplicate-keys@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-for-of@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-function-name@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-literals@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-modules-amd@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-modules-commonjs@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-modules-systemjs@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-modules-umd@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-object-super@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-parameters@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-shorthand-properties@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-spread@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-sticky-regex@^6.24.1\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-template-literals@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-typeof-symbol@^6.22.0\n\u2502  \u251c\u2500 babel-plugin-transform-es2015-unicode-regex@^6.24.1\n\u2502  \u2514\u2500 babel-plugin-transform-regenerator@^6.24.1\n\u251c\u2500 babel-register@6.24.1\n\u2502  \u251c\u2500 babel-core@^6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 core-js@^2.4.0\n\u2502  \u251c\u2500 home-or-tmp@^2.0.0\n\u2502  \u251c\u2500 lodash@^4.2.0\n\u2502  \u251c\u2500 mkdirp@^0.5.1\n\u2502  \u2514\u2500 source-map-support@^0.4.2\n\u251c\u2500 babel-runtime@6.23.0\n\u2502  \u251c\u2500 core-js@^2.4.0\n\u2502  \u2514\u2500 regenerator-runtime@^0.10.0\n\u251c\u2500 babel-template@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-traverse@^6.24.1\n\u2502  \u251c\u2500 babel-types@^6.24.1\n\u2502  \u251c\u2500 babylon@^6.11.0\n\u2502  \u2514\u2500 lodash@^4.2.0\n\u251c\u2500 babel-traverse@6.24.1\n\u2502  \u251c\u2500 babel-code-frame@^6.22.0\n\u2502  \u251c\u2500 babel-messages@^6.23.0\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 babel-types@^6.24.1\n\u2502  \u251c\u2500 babylon@^6.15.0\n\u2502  \u251c\u2500 debug@^2.2.0\n\u2502  \u251c\u2500 debug@2.6.3\n\u2502  \u2502  \u2514\u2500 ms@0.7.2\n\u2502  \u251c\u2500 globals@^9.0.0\n\u2502  \u251c\u2500 invariant@^2.2.0\n\u2502  \u2514\u2500 lodash@^4.2.0\n\u251c\u2500 babel-types@6.24.1\n\u2502  \u251c\u2500 babel-runtime@^6.22.0\n\u2502  \u251c\u2500 esutils@^2.0.2\n\u2502  \u251c\u2500 lodash@^4.2.0\n\u2502  \u2514\u2500 to-fast-properties@^1.0.1\n\u251c\u2500 babylon@6.16.1\n\u251c\u2500 balanced-match@0.4.2\n\u251c\u2500 Base64@1.0.1\n\u251c\u2500 basic-auth@1.1.0\n\u251c\u2500 bcrypt-pbkdf@1.0.1\n\u2502  \u2514\u2500 tweetnacl@^0.14.3\n\u251c\u2500 blocked@1.2.1\n\u251c\u2500 bluebird@3.5.0\n\u251c\u2500 boom@2.10.1\n\u2502  \u2514\u2500 hoek@2.x.x\n\u251c\u2500 brace-expansion@1.1.7\n\u2502  \u251c\u2500 balanced-match@^0.4.1\n\u2502  \u2514\u2500 concat-map@0.0.1\n\u251c\u2500 browser-stdout@1.3.0\n\u251c\u2500 buffer-shims@1.0.0\n\u251c\u2500 camelcase@1.2.1\n\u251c\u2500 cardinal@1.0.0\n\u2502  \u251c\u2500 ansicolors@~0.2.1\n\u2502  \u2514\u2500 redeyed@~1.0.0\n\u251c\u2500 caseless@0.12.0\n\u251c\u2500 center-align@0.1.3\n\u2502  \u251c\u2500 align-text@^0.1.3\n\u2502  \u2514\u2500 lazy-cache@^1.0.3\n\u251c\u2500 chalk@1.1.3\n\u2502  \u251c\u2500 ansi-styles@^2.2.1\n\u2502  \u251c\u2500 escape-string-regexp@^1.0.2\n\u2502  \u251c\u2500 has-ansi@^2.0.0\n\u2502  \u251c\u2500 strip-ansi@^3.0.0\n\u2502  \u251c\u2500 supports-color@^2.0.0\n\u2502  \u2514\u2500 supports-color@2.0.0\n\u251c\u2500 cli-color@1.2.0\n\u2502  \u251c\u2500 ansi-regex@^2.1.1\n\u2502  \u251c\u2500 d@1\n\u2502  \u251c\u2500 es5-ext@^0.10.12\n\u2502  \u251c\u2500 es6-iterator@2\n\u2502  \u251c\u2500 memoizee@^0.4.3\n\u2502  \u2514\u2500 timers-ext@0.1\n\u251c\u2500 cliui@2.1.0\n\u2502  \u251c\u2500 center-align@^0.1.1\n\u2502  \u251c\u2500 right-align@^0.1.1\n\u2502  \u251c\u2500 wordwrap@0.0.2\n\u2502  \u2514\u2500 wordwrap@0.0.2\n\u251c\u2500 co@4.6.0\n\u251c\u2500 combined-stream@1.0.5\n\u2502  \u2514\u2500 delayed-stream@~1.0.0\n\u251c\u2500 commander@2.9.0\n\u2502  \u2514\u2500 graceful-readlink@>= 1.0.0\n\u251c\u2500 concat-map@0.0.1\n\u251c\u2500 content-disposition@0.5.2\n\u251c\u2500 content-type@1.0.2\n\u251c\u2500 convert-source-map@1.5.0\n\u251c\u2500 cookie-signature@1.0.6\n\u251c\u2500 cookie@0.3.1\n\u251c\u2500 core-js@2.4.1\n\u251c\u2500 core-util-is@1.0.2\n\u251c\u2500 cryptiles@2.0.5\n\u2502  \u2514\u2500 boom@2.x.x\n\u251c\u2500 d@1.0.0\n\u2502  \u2514\u2500 es5-ext@^0.10.9\n\u251c\u2500 dashdash@1.14.1\n\u2502  \u2514\u2500 assert-plus@^1.0.0\n\u251c\u2500 debug@2.6.1\n\u2502  \u2514\u2500 ms@0.7.2\n\u251c\u2500 decamelize@1.2.0\n\u251c\u2500 delayed-stream@1.0.0\n\u251c\u2500 denodeify@1.2.1\n\u251c\u2500 denque@1.1.1\n\u251c\u2500 depd@1.1.0\n\u251c\u2500 destroy@1.0.4\n\u251c\u2500 detect-indent@4.0.0\n\u2502  \u2514\u2500 repeating@^2.0.0\n\u251c\u2500 diff@1.4.0\n\u251c\u2500 dotenv@4.0.0\n\u251c\u2500 ecc-jsbn@0.1.1\n\u2502  \u2514\u2500 jsbn@~0.1.0\n\u251c\u2500 ee-first@1.1.1\n\u251c\u2500 encodeurl@1.0.1\n\u251c\u2500 end-of-stream@1.4.0\n\u2502  \u2514\u2500 once@^1.4.0\n\u251c\u2500 es5-ext@0.10.15\n\u2502  \u251c\u2500 es6-iterator@2\n\u2502  \u2514\u2500 es6-symbol@~3.1\n\u251c\u2500 es6-iterator@2.0.1\n\u2502  \u251c\u2500 d@1\n\u2502  \u251c\u2500 es5-ext@^0.10.14\n\u2502  \u2514\u2500 es6-symbol@^3.1\n\u251c\u2500 es6-symbol@3.1.1\n\u2502  \u251c\u2500 d@1\n\u2502  \u2514\u2500 es5-ext@~0.10.14\n\u251c\u2500 es6-weak-map@2.0.2\n\u2502  \u251c\u2500 d@1\n\u2502  \u251c\u2500 es5-ext@^0.10.14\n\u2502  \u251c\u2500 es6-iterator@^2.0.1\n\u2502  \u2514\u2500 es6-symbol@^3.1.1\n\u251c\u2500 escape-html@1.0.3\n\u251c\u2500 escape-string-regexp@1.0.5\n\u251c\u2500 esprima@3.0.0\n\u251c\u2500 esutils@2.0.2\n\u251c\u2500 etag@1.8.0\n\u251c\u2500 event-emitter@0.3.5\n\u2502  \u251c\u2500 d@1\n\u2502  \u2514\u2500 es5-ext@~0.10.14\n\u251c\u2500 exists-sync@0.0.4\n\u251c\u2500 express@4.15.2\n\u2502  \u251c\u2500 accepts@~1.3.3\n\u2502  \u251c\u2500 array-flatten@1.1.1\n\u2502  \u251c\u2500 content-disposition@0.5.2\n\u2502  \u251c\u2500 content-type@~1.0.2\n\u2502  \u251c\u2500 cookie-signature@1.0.6\n\u2502  \u251c\u2500 cookie@0.3.1\n\u2502  \u251c\u2500 debug@2.6.1\n\u2502  \u251c\u2500 depd@~1.1.0\n\u2502  \u251c\u2500 encodeurl@~1.0.1\n\u2502  \u251c\u2500 escape-html@~1.0.3\n\u2502  \u251c\u2500 etag@~1.8.0\n\u2502  \u251c\u2500 finalhandler@~1.0.0\n\u2502  \u251c\u2500 fresh@0.5.0\n\u2502  \u251c\u2500 merge-descriptors@1.0.1\n\u2502  \u251c\u2500 methods@~1.1.2\n\u2502  \u251c\u2500 on-finished@~2.3.0\n\u2502  \u251c\u2500 parseurl@~1.3.1\n\u2502  \u251c\u2500 path-to-regexp@0.1.7\n\u2502  \u251c\u2500 proxy-addr@~1.1.3\n\u2502  \u251c\u2500 qs@6.4.0\n\u2502  \u251c\u2500 range-parser@~1.2.0\n\u2502  \u251c\u2500 send@0.15.1\n\u2502  \u251c\u2500 serve-static@1.12.1\n\u2502  \u251c\u2500 setprototypeof@1.0.3\n\u2502  \u251c\u2500 statuses@~1.3.1\n\u2502  \u251c\u2500 type-is@~1.6.14\n\u2502  \u251c\u2500 utils-merge@1.0.0\n\u2502  \u2514\u2500 vary@~1.1.0\n\u251c\u2500 extend@3.0.0\n\u251c\u2500 extsprintf@1.0.2\n\u251c\u2500 fast-stats@0.0.3\n\u251c\u2500 finalhandler@1.0.1\n\u2502  \u251c\u2500 debug@2.6.3\n\u2502  \u251c\u2500 debug@2.6.3\n\u2502  \u2502  \u2514\u2500 ms@0.7.2\n\u2502  \u251c\u2500 encodeurl@~1.0.1\n\u2502  \u251c\u2500 escape-html@~1.0.3\n\u2502  \u251c\u2500 on-finished@~2.3.0\n\u2502  \u251c\u2500 parseurl@~1.3.1\n\u2502  \u251c\u2500 statuses@~1.3.1\n\u2502  \u2514\u2500 unpipe@~1.0.0\n\u251c\u2500 foreach@2.0.4\n\u251c\u2500 forever-agent@0.6.1\n\u251c\u2500 form-data@2.1.4\n\u2502  \u251c\u2500 asynckit@^0.4.0\n\u2502  \u251c\u2500 combined-stream@^1.0.5\n\u2502  \u2514\u2500 mime-types@^2.1.12\n\u251c\u2500 forwarded@0.1.0\n\u251c\u2500 fresh@0.5.0\n\u251c\u2500 from2-string@1.1.0\n\u2502  \u2514\u2500 from2@^2.0.3\n\u251c\u2500 from2@2.3.0\n\u2502  \u251c\u2500 inherits@^2.0.1\n\u2502  \u2514\u2500 readable-stream@^2.0.0\n\u251c\u2500 fs.realpath@1.0.0\n\u251c\u2500 generate-function@2.0.0\n\u251c\u2500 getpass@0.1.6\n\u2502  \u2514\u2500 assert-plus@^1.0.0\n\u251c\u2500 glob@7.1.1\n\u2502  \u251c\u2500 fs.realpath@^1.0.0\n\u2502  \u251c\u2500 inflight@^1.0.4\n\u2502  \u251c\u2500 inherits@2\n\u2502  \u251c\u2500 minimatch@^3.0.2\n\u2502  \u251c\u2500 once@^1.3.0\n\u2502  \u2514\u2500 path-is-absolute@^1.0.0\n\u251c\u2500 globals@9.17.0\n\u251c\u2500 graceful-fs@4.1.11\n\u251c\u2500 graceful-readlink@1.0.1\n\u251c\u2500 graphite@0.0.7\n\u2502  \u251c\u2500 lazy-socket@0.0.3\n\u2502  \u251c\u2500 request@2.1.1\n\u2502  \u2514\u2500 request@2.1.1\n\u251c\u2500 growl@1.9.2\n\u251c\u2500 handlebars@4.0.6\n\u2502  \u251c\u2500 async@^1.4.0\n\u2502  \u251c\u2500 optimist@^0.6.1\n\u2502  \u251c\u2500 source-map@^0.4.4\n\u2502  \u251c\u2500 source-map@0.4.4\n\u2502  \u2502  \u2514\u2500 amdefine@>=0.0.4\n\u2502  \u2514\u2500 uglify-js@^2.6\n\u251c\u2500 har-schema@1.0.5\n\u251c\u2500 har-validator@4.2.1\n\u2502  \u251c\u2500 ajv@^4.9.1\n\u2502  \u2514\u2500 har-schema@^1.0.5\n\u251c\u2500 has-ansi@2.0.0\n\u2502  \u2514\u2500 ansi-regex@^2.0.0\n\u251c\u2500 has-flag@1.0.0\n\u251c\u2500 hawk@3.1.3\n\u2502  \u251c\u2500 boom@2.x.x\n\u2502  \u251c\u2500 cryptiles@2.x.x\n\u2502  \u251c\u2500 hoek@2.x.x\n\u2502  \u2514\u2500 sntp@1.x.x\n\u251c\u2500 hoek@2.16.3\n\u251c\u2500 home-or-tmp@2.0.0\n\u2502  \u251c\u2500 os-homedir@^1.0.0\n\u2502  \u2514\u2500 os-tmpdir@^1.0.1\n\u251c\u2500 html5shiv@3.7.3\n\u251c\u2500 http-errors@1.6.1\n\u2502  \u251c\u2500 depd@1.1.0\n\u2502  \u251c\u2500 inherits@2.0.3\n\u2502  \u251c\u2500 setprototypeof@1.0.3\n\u2502  \u2514\u2500 statuses@>= 1.3.1 < 2\n\u251c\u2500 http-signature@1.1.1\n\u2502  \u251c\u2500 assert-plus@^0.2.0\n\u2502  \u251c\u2500 assert-plus@0.2.0\n\u2502  \u251c\u2500 jsprim@^1.2.2\n\u2502  \u2514\u2500 sshpk@^1.7.0\n\u251c\u2500 iconv-lite@0.4.15\n\u251c\u2500 indexof@0.0.1\n\u251c\u2500 inflight@1.0.6\n\u2502  \u251c\u2500 once@^1.3.0\n\u2502  \u2514\u2500 wrappy@1\n\u251c\u2500 inherits@2.0.3\n\u251c\u2500 intersection-observer@0.2.1\n\u251c\u2500 intl@1.2.5\n\u251c\u2500 invariant@2.2.2\n\u2502  \u2514\u2500 loose-envify@^1.0.0\n\u251c\u2500 ipaddr.js@1.3.0\n\u251c\u2500 is-buffer@1.1.5\n\u251c\u2500 is-finite@1.0.2\n\u2502  \u2514\u2500 number-is-nan@^1.0.0\n\u251c\u2500 is-promise@2.1.0\n\u251c\u2500 is-typedarray@1.0.0\n\u251c\u2500 isarray@1.0.0\n\u251c\u2500 isstream@0.1.2\n\u251c\u2500 jodid25519@1.0.2\n\u2502  \u2514\u2500 jsbn@~0.1.0\n\u251c\u2500 js-polyfills@0.1.33\n\u251c\u2500 js-tokens@3.0.1\n\u251c\u2500 jsbn@0.1.1\n\u251c\u2500 jsesc@1.3.0\n\u251c\u2500 json-schema@0.2.3\n\u251c\u2500 json-stable-stringify@1.0.1\n\u2502  \u2514\u2500 jsonify@~0.0.0\n\u251c\u2500 json-stringify-safe@5.0.1\n\u251c\u2500 json3@3.3.2\n\u251c\u2500 json5@0.5.1\n\u251c\u2500 jsonify@0.0.0\n\u251c\u2500 jsprim@1.4.0\n\u2502  \u251c\u2500 assert-plus@1.0.0\n\u2502  \u251c\u2500 extsprintf@1.0.2\n\u2502  \u251c\u2500 json-schema@0.2.3\n\u2502  \u2514\u2500 verror@1.3.6\n\u251c\u2500 kind-of@3.1.0\n\u2502  \u2514\u2500 is-buffer@^1.0.2\n\u251c\u2500 lazy-cache@1.0.4\n\u251c\u2500 lazy-socket@0.0.3\n\u251c\u2500 lazystream@1.0.0\n\u2502  \u2514\u2500 readable-stream@^2.0.5\n\u251c\u2500 lodash._baseassign@3.2.0\n\u2502  \u251c\u2500 lodash._basecopy@^3.0.0\n\u2502  \u2514\u2500 lodash.keys@^3.0.0\n\u251c\u2500 lodash._basecopy@3.0.1\n\u251c\u2500 lodash._basecreate@3.0.3\n\u251c\u2500 lodash._getnative@3.9.1\n\u251c\u2500 lodash._isiterateecall@3.0.9\n\u251c\u2500 lodash.create@3.1.1\n\u2502  \u251c\u2500 lodash._baseassign@^3.0.0\n\u2502  \u251c\u2500 lodash._basecreate@^3.0.0\n\u2502  \u2514\u2500 lodash._isiterateecall@^3.0.0\n\u251c\u2500 lodash.isarguments@3.1.0\n\u251c\u2500 lodash.isarray@3.0.4\n\u251c\u2500 lodash.keys@3.1.2\n\u2502  \u251c\u2500 lodash._getnative@^3.0.0\n\u2502  \u251c\u2500 lodash.isarguments@^3.0.0\n\u2502  \u2514\u2500 lodash.isarray@^3.0.0\n\u251c\u2500 lodash@4.17.4\n\u251c\u2500 long@3.2.0\n\u251c\u2500 longest@1.0.1\n\u251c\u2500 loose-envify@1.3.1\n\u2502  \u2514\u2500 js-tokens@^3.0.0\n\u251c\u2500 lru-cache@4.0.2\n\u2502  \u251c\u2500 pseudomap@^1.0.1\n\u2502  \u2514\u2500 yallist@^2.0.0\n\u251c\u2500 lru-queue@0.1.0\n\u2502  \u2514\u2500 es5-ext@~0.10.2\n\u251c\u2500 lsmod@1.0.0\n\u251c\u2500 marked@0.3.6\n\u251c\u2500 measured@1.1.0\n\u2502  \u2514\u2500 inherits@^2.0\n\u251c\u2500 media-typer@0.3.0\n\u251c\u2500 memoizee@0.4.4\n\u2502  \u251c\u2500 d@1\n\u2502  \u251c\u2500 es5-ext@^0.10.13\n\u2502  \u251c\u2500 es6-weak-map@^2.0.1\n\u2502  \u251c\u2500 event-emitter@^0.3.4\n\u2502  \u251c\u2500 is-promise@^2.1\n\u2502  \u251c\u2500 lru-queue@0.1\n\u2502  \u251c\u2500 next-tick@1\n\u2502  \u2514\u2500 timers-ext@0.1\n\u251c\u2500 merge-descriptors@1.0.1\n\u251c\u2500 merge2@1.0.3\n\u251c\u2500 methods@1.1.2\n\u251c\u2500 mime-db@1.27.0\n\u251c\u2500 mime-types@2.1.15\n\u2502  \u2514\u2500 mime-db@~1.27.0\n\u251c\u2500 mime@1.3.4\n\u251c\u2500 minimatch@3.0.3\n\u2502  \u2514\u2500 brace-expansion@^1.0.0\n\u251c\u2500 minimist@0.0.8\n\u251c\u2500 mkdirp@0.5.1\n\u2502  \u2514\u2500 minimist@0.0.8\n\u251c\u2500 mocha@3.2.0\n\u2502  \u251c\u2500 browser-stdout@1.3.0\n\u2502  \u251c\u2500 commander@2.9.0\n\u2502  \u251c\u2500 debug@2.2.0\n\u2502  \u251c\u2500 debug@2.2.0\n\u2502  \u2502  \u2514\u2500 ms@0.7.1\n\u2502  \u251c\u2500 diff@1.4.0\n\u2502  \u251c\u2500 escape-string-regexp@1.0.5\n\u2502  \u251c\u2500 glob@7.0.5\n\u2502  \u251c\u2500 glob@7.0.5\n\u2502  \u2502  \u251c\u2500 fs.realpath@^1.0.0\n\u2502  \u2502  \u251c\u2500 inflight@^1.0.4\n\u2502  \u2502  \u251c\u2500 inherits@2\n\u2502  \u2502  \u251c\u2500 minimatch@^3.0.2\n\u2502  \u2502  \u251c\u2500 once@^1.3.0\n\u2502  \u2502  \u2514\u2500 path-is-absolute@^1.0.0\n\u2502  \u251c\u2500 growl@1.9.2\n\u2502  \u251c\u2500 json3@3.3.2\n\u2502  \u251c\u2500 lodash.create@3.1.1\n\u2502  \u251c\u2500 mkdirp@0.5.1\n\u2502  \u251c\u2500 ms@0.7.1\n\u2502  \u2514\u2500 supports-color@3.1.2\n\u251c\u2500 moment@2.18.1\n\u251c\u2500 morgan@1.8.1\n\u2502  \u251c\u2500 basic-auth@~1.1.0\n\u2502  \u251c\u2500 debug@2.6.1\n\u2502  \u251c\u2500 depd@~1.1.0\n\u2502  \u251c\u2500 on-finished@~2.3.0\n\u2502  \u2514\u2500 on-headers@~1.0.1\n\u251c\u2500 ms@0.7.2\n\u251c\u2500 mutationobserver-shim@0.3.2\n\u251c\u2500 mysql2@1.2.0\n\u2502  \u251c\u2500 cardinal@1.0.0\n\u2502  \u251c\u2500 denque@^1.1.1\n\u2502  \u251c\u2500 generate-function@^2.0.0\n\u2502  \u251c\u2500 iconv-lite@^0.4.13\n\u2502  \u251c\u2500 long@^3.2.0\n\u2502  \u251c\u2500 lru-cache@^4.0.1\n\u2502  \u251c\u2500 named-placeholders@1.1.1\n\u2502  \u251c\u2500 object-assign@^4.1.1\n\u2502  \u251c\u2500 readable-stream@2.2.2\n\u2502  \u251c\u2500 readable-stream@2.2.2\n\u2502  \u2502  \u251c\u2500 buffer-shims@^1.0.0\n\u2502  \u2502  \u251c\u2500 core-util-is@~1.0.0\n\u2502  \u2502  \u251c\u2500 inherits@~2.0.1\n\u2502  \u2502  \u251c\u2500 isarray@~1.0.0\n\u2502  \u2502  \u251c\u2500 process-nextick-args@~1.0.6\n\u2502  \u2502  \u251c\u2500 string_decoder@~0.10.x\n\u2502  \u2502  \u2514\u2500 util-deprecate@~1.0.1\n\u2502  \u251c\u2500 safe-buffer@^5.0.1\n\u2502  \u251c\u2500 seq-queue@0.0.5\n\u2502  \u251c\u2500 sqlstring@^2.2.0\n\u2502  \u2514\u2500 string_decoder@0.10.31\n\u251c\u2500 named-placeholders@1.1.1\n\u2502  \u251c\u2500 lru-cache@2.5.0\n\u2502  \u2514\u2500 lru-cache@2.5.0\n\u251c\u2500 negotiator@0.6.1\n\u251c\u2500 next-tick@1.0.0\n\u251c\u2500 number-is-nan@1.0.1\n\u251c\u2500 oauth-sign@0.8.2\n\u251c\u2500 object-assign@4.1.1\n\u251c\u2500 object-keys@0.5.0\n\u251c\u2500 on-finished@2.3.0\n\u2502  \u2514\u2500 ee-first@1.1.1\n\u251c\u2500 on-headers@1.0.1\n\u251c\u2500 once@1.4.0\n\u2502  \u2514\u2500 wrappy@1\n\u251c\u2500 optimist@0.6.1\n\u2502  \u251c\u2500 minimist@~0.0.1\n\u2502  \u2514\u2500 wordwrap@~0.0.2\n\u251c\u2500 os-homedir@1.0.2\n\u251c\u2500 os-tmpdir@1.0.2\n\u251c\u2500 parseurl@1.3.1\n\u251c\u2500 path-is-absolute@1.0.1\n\u251c\u2500 path-to-regexp@0.1.7\n\u251c\u2500 performance-now@0.2.0\n\u251c\u2500 picturefill@3.0.2\n\u251c\u2500 polyfill-service@3.17.0\n\u2502  \u251c\u2500 array.of@^0.1.1\n\u2502  \u251c\u2500 audio-context-polyfill@^1.0.0\n\u2502  \u251c\u2500 babel-core@^6.23.1\n\u2502  \u251c\u2500 babel-preset-es2015@^6.1.18\n\u2502  \u251c\u2500 Base64@^1.0.0\n\u2502  \u251c\u2500 blocked@^1.1.0\n\u2502  \u251c\u2500 cli-color@^1.1.0\n\u2502  \u251c\u2500 convert-source-map@^1.3.0\n\u2502  \u251c\u2500 denodeify@^1.2.1\n\u2502  \u251c\u2500 dotenv@^4.0.0\n\u2502  \u251c\u2500 exists-sync@0.0.4\n\u2502  \u251c\u2500 express@^4.14.1\n\u2502  \u251c\u2500 fast-stats@0.0.3\n\u2502  \u251c\u2500 from2-string@^1.1.0\n\u2502  \u251c\u2500 glob@^7.1.1\n\u2502  \u251c\u2500 graceful-fs@^4.1.10\n\u2502  \u251c\u2500 graphite@0.0.7\n\u2502  \u251c\u2500 handlebars@^4.0.6\n\u2502  \u251c\u2500 html5shiv@^3.7.3\n\u2502  \u251c\u2500 intersection-observer@^0.2.1\n\u2502  \u251c\u2500 intl@^1.2.5\n\u2502  \u251c\u2500 js-polyfills@^0.1.33\n\u2502  \u251c\u2500 json3@^3.3.2\n\u2502  \u251c\u2500 lazystream@^1.0.0\n\u2502  \u251c\u2500 lodash@^4.17.4\n\u2502  \u251c\u2500 lru-cache@^4.0.2\n\u2502  \u251c\u2500 marked@^0.3.6\n\u2502  \u251c\u2500 measured@^1.0.0\n\u2502  \u251c\u2500 merge2@^1.0.3\n\u2502  \u251c\u2500 minimist@^1.2.0\n\u2502  \u251c\u2500 minimist@1.2.0\n\u2502  \u251c\u2500 mkdirp@^0.5.0\n\u2502  \u251c\u2500 mocha@^3.2.0\n\u2502  \u251c\u2500 moment@^2.17.1\n\u2502  \u251c\u2500 morgan@^1.8.1\n\u2502  \u251c\u2500 mutationobserver-shim@^0.3.2\n\u2502  \u251c\u2500 mysql2@^1.2.0\n\u2502  \u251c\u2500 picturefill@^3.0.1\n\u2502  \u251c\u2500 proclaim@^3.4.4\n\u2502  \u251c\u2500 pump@^1.0.2\n\u2502  \u251c\u2500 raven@^0.12.1\n\u2502  \u251c\u2500 request-promise@^4.1.1\n\u2502  \u251c\u2500 request@^2.79.0\n\u2502  \u251c\u2500 semver@^5.3.0\n\u2502  \u251c\u2500 stream-from-promise@^1.0.0\n\u2502  \u251c\u2500 stream-to-string@^1.1.0\n\u2502  \u251c\u2500 tsort@0.0.1\n\u2502  \u251c\u2500 useragent@^2.1.12\n\u2502  \u251c\u2500 usertiming@^0.1.8\n\u2502  \u2514\u2500 yaku@^0.17.8\n\u251c\u2500 private@0.1.7\n\u251c\u2500 process-nextick-args@1.0.7\n\u251c\u2500 proclaim@3.4.4\n\u2502  \u2514\u2500 util-inspect@^0.1.8\n\u251c\u2500 promise-polyfill@1.1.6\n\u251c\u2500 proxy-addr@1.1.4\n\u2502  \u251c\u2500 forwarded@~0.1.0\n\u2502  \u2514\u2500 ipaddr.js@1.3.0\n\u251c\u2500 pseudomap@1.0.2\n\u251c\u2500 pump@1.0.2\n\u2502  \u251c\u2500 end-of-stream@^1.1.0\n\u2502  \u2514\u2500 once@^1.3.1\n\u251c\u2500 punycode@1.4.1\n\u251c\u2500 qs@6.4.0\n\u251c\u2500 range-parser@1.2.0\n\u251c\u2500 raven@0.12.3\n\u2502  \u251c\u2500 cookie@0.3.1\n\u2502  \u251c\u2500 json-stringify-safe@5.0.1\n\u2502  \u251c\u2500 lsmod@1.0.0\n\u2502  \u251c\u2500 stack-trace@0.0.9\n\u2502  \u2514\u2500 uuid@3.0.0\n\u251c\u2500 readable-stream@2.2.9\n\u2502  \u251c\u2500 buffer-shims@~1.0.0\n\u2502  \u251c\u2500 core-util-is@~1.0.0\n\u2502  \u251c\u2500 inherits@~2.0.1\n\u2502  \u251c\u2500 isarray@~1.0.0\n\u2502  \u251c\u2500 process-nextick-args@~1.0.6\n\u2502  \u251c\u2500 string_decoder@~1.0.0\n\u2502  \u2514\u2500 util-deprecate@~1.0.1\n\u251c\u2500 redeyed@1.0.1\n\u2502  \u2514\u2500 esprima@~3.0.0\n\u251c\u2500 regenerate@1.3.2\n\u251c\u2500 regenerator-runtime@0.10.3\n\u251c\u2500 regenerator-transform@0.9.11\n\u2502  \u251c\u2500 babel-runtime@^6.18.0\n\u2502  \u251c\u2500 babel-types@^6.19.0\n\u2502  \u2514\u2500 private@^0.1.6\n\u251c\u2500 regexpu-core@2.0.0\n\u2502  \u251c\u2500 regenerate@^1.2.1\n\u2502  \u251c\u2500 regjsgen@^0.2.0\n\u2502  \u2514\u2500 regjsparser@^0.1.4\n\u251c\u2500 regjsgen@0.2.0\n\u251c\u2500 regjsparser@0.1.5\n\u2502  \u251c\u2500 jsesc@~0.5.0\n\u2502  \u2514\u2500 jsesc@0.5.0\n\u251c\u2500 repeat-string@1.6.1\n\u251c\u2500 repeating@2.0.1\n\u2502  \u2514\u2500 is-finite@^1.0.0\n\u251c\u2500 request-promise-core@1.1.1\n\u2502  \u2514\u2500 lodash@^4.13.1\n\u251c\u2500 request-promise@4.2.0\n\u2502  \u251c\u2500 bluebird@^3.5.0\n\u2502  \u251c\u2500 request-promise-core@1.1.1\n\u2502  \u2514\u2500 stealthy-require@^1.0.0\n\u251c\u2500 request@2.81.0\n\u2502  \u251c\u2500 aws-sign2@~0.6.0\n\u2502  \u251c\u2500 aws4@^1.2.1\n\u2502  \u251c\u2500 caseless@~0.12.0\n\u2502  \u251c\u2500 combined-stream@~1.0.5\n\u2502  \u251c\u2500 extend@~3.0.0\n\u2502  \u251c\u2500 forever-agent@~0.6.1\n\u2502  \u251c\u2500 form-data@~2.1.1\n\u2502  \u251c\u2500 har-validator@~4.2.1\n\u2502  \u251c\u2500 hawk@~3.1.3\n\u2502  \u251c\u2500 http-signature@~1.1.0\n\u2502  \u251c\u2500 is-typedarray@~1.0.0\n\u2502  \u251c\u2500 isstream@~0.1.2\n\u2502  \u251c\u2500 json-stringify-safe@~5.0.1\n\u2502  \u251c\u2500 mime-types@~2.1.7\n\u2502  \u251c\u2500 oauth-sign@~0.8.1\n\u2502  \u251c\u2500 performance-now@^0.2.0\n\u2502  \u251c\u2500 qs@~6.4.0\n\u2502  \u251c\u2500 safe-buffer@^5.0.1\n\u2502  \u251c\u2500 stringstream@~0.0.4\n\u2502  \u251c\u2500 tough-cookie@~2.3.0\n\u2502  \u251c\u2500 tunnel-agent@^0.6.0\n\u2502  \u2514\u2500 uuid@^3.0.0\n\u251c\u2500 right-align@0.1.3\n\u2502  \u2514\u2500 align-text@^0.1.1\n\u251c\u2500 safe-buffer@5.0.1\n\u251c\u2500 semver@5.3.0\n\u251c\u2500 send@0.15.1\n\u2502  \u251c\u2500 debug@2.6.1\n\u2502  \u251c\u2500 depd@~1.1.0\n\u2502  \u251c\u2500 destroy@~1.0.4\n\u2502  \u251c\u2500 encodeurl@~1.0.1\n\u2502  \u251c\u2500 escape-html@~1.0.3\n\u2502  \u251c\u2500 etag@~1.8.0\n\u2502  \u251c\u2500 fresh@0.5.0\n\u2502  \u251c\u2500 http-errors@~1.6.1\n\u2502  \u251c\u2500 mime@1.3.4\n\u2502  \u251c\u2500 ms@0.7.2\n\u2502  \u251c\u2500 on-finished@~2.3.0\n\u2502  \u251c\u2500 range-parser@~1.2.0\n\u2502  \u2514\u2500 statuses@~1.3.1\n\u251c\u2500 seq-queue@0.0.5\n\u251c\u2500 serve-static@1.12.1\n\u2502  \u251c\u2500 encodeurl@~1.0.1\n\u2502  \u251c\u2500 escape-html@~1.0.3\n\u2502  \u251c\u2500 parseurl@~1.3.1\n\u2502  \u2514\u2500 send@0.15.1\n\u251c\u2500 setprototypeof@1.0.3\n\u251c\u2500 slash@1.0.0\n\u251c\u2500 sntp@1.0.9\n\u2502  \u2514\u2500 hoek@2.x.x\n\u251c\u2500 source-map-support@0.4.14\n\u2502  \u2514\u2500 source-map@^0.5.6\n\u251c\u2500 source-map@0.5.6\n\u251c\u2500 sqlstring@2.2.0\n\u251c\u2500 sshpk@1.11.0\n\u2502  \u251c\u2500 asn1@~0.2.3\n\u2502  \u251c\u2500 assert-plus@^1.0.0\n\u2502  \u251c\u2500 bcrypt-pbkdf@^1.0.0\n\u2502  \u251c\u2500 dashdash@^1.12.0\n\u2502  \u251c\u2500 ecc-jsbn@~0.1.1\n\u2502  \u251c\u2500 getpass@^0.1.1\n\u2502  \u251c\u2500 jodid25519@^1.0.0\n\u2502  \u251c\u2500 jsbn@~0.1.0\n\u2502  \u2514\u2500 tweetnacl@~0.14.0\n\u251c\u2500 stack-trace@0.0.9\n\u251c\u2500 statuses@1.3.1\n\u251c\u2500 stealthy-require@1.0.0\n\u251c\u2500 stream-from-promise@1.0.0\n\u251c\u2500 stream-to-string@1.1.0\n\u2502  \u2514\u2500 promise-polyfill@^1.1.6\n\u251c\u2500 string_decoder@1.0.0\n\u2502  \u2514\u2500 buffer-shims@~1.0.0\n\u251c\u2500 stringstream@0.0.5\n\u251c\u2500 strip-ansi@3.0.1\n\u2502  \u2514\u2500 ansi-regex@^2.0.0\n\u251c\u2500 supports-color@3.1.2\n\u2502  \u2514\u2500 has-flag@^1.0.0\n\u251c\u2500 timers-ext@0.1.2\n\u2502  \u251c\u2500 es5-ext@~0.10.14\n\u2502  \u2514\u2500 next-tick@1\n\u251c\u2500 tmp@0.0.31\n\u2502  \u2514\u2500 os-tmpdir@~1.0.1\n\u251c\u2500 to-fast-properties@1.0.2\n\u251c\u2500 tough-cookie@2.3.2\n\u2502  \u2514\u2500 punycode@^1.4.1\n\u251c\u2500 trim-right@1.0.1\n\u251c\u2500 tsort@0.0.1\n\u251c\u2500 tunnel-agent@0.6.0\n\u2502  \u2514\u2500 safe-buffer@^5.0.1\n\u251c\u2500 tweetnacl@0.14.5\n\u251c\u2500 type-is@1.6.15\n\u2502  \u251c\u2500 media-typer@0.3.0\n\u2502  \u2514\u2500 mime-types@~2.1.15\n\u251c\u2500 uglify-js@2.8.22\n\u2502  \u251c\u2500 source-map@~0.5.1\n\u2502  \u251c\u2500 uglify-to-browserify@~1.0.0\n\u2502  \u2514\u2500 yargs@~3.10.0\n\u251c\u2500 uglify-to-browserify@1.0.2\n\u251c\u2500 unpipe@1.0.0\n\u251c\u2500 useragent@2.1.13\n\u2502  \u251c\u2500 lru-cache@2.2.4\n\u2502  \u251c\u2500 lru-cache@2.2.x\n\u2502  \u2514\u2500 tmp@0.0.x\n\u251c\u2500 usertiming@0.1.8\n\u251c\u2500 util-deprecate@1.0.2\n\u251c\u2500 util-inspect@0.1.8\n\u2502  \u251c\u2500 array-map@0.0.0\n\u2502  \u251c\u2500 array-reduce@0.0.0\n\u2502  \u251c\u2500 foreach@2.0.4\n\u2502  \u251c\u2500 indexof@0.0.1\n\u2502  \u251c\u2500 isarray@0.0.1\n\u2502  \u251c\u2500 isarray@0.0.1\n\u2502  \u251c\u2500 json3@3.3.0\n\u2502  \u251c\u2500 json3@3.3.0\n\u2502  \u2514\u2500 object-keys@0.5.0\n\u251c\u2500 utils-merge@1.0.0\n\u251c\u2500 uuid@3.0.0\n\u251c\u2500 vary@1.1.1\n\u251c\u2500 verror@1.3.6\n\u2502  \u2514\u2500 extsprintf@1.0.2\n\u251c\u2500 window-size@0.1.0\n\u251c\u2500 wordwrap@0.0.3\n\u251c\u2500 wrappy@1.0.2\n\u251c\u2500 yaku@0.17.9\n\u251c\u2500 yallist@2.1.2\n\u2514\u2500 yargs@3.10.0\n\u2502  \u251c\u2500 camelcase@^1.0.2\n\u2502  \u251c\u2500 cliui@^2.1.0\n\u2502  \u251c\u2500 decamelize@^1.0.0\n\u2502  \u2514\u2500 window-size@0.1.0\n\u2728  Done in 0.42s.\n\n\n. That's okay, I'm happy you have it working :-D. This will be resolved via https://github.com/Financial-Times/polyfill-service/pull/1347. It has not yet been released into production. You can see what features are\nin production by visiting https://polyfill.io/v2/docs/features/\nIt will be included in the next release :-)\nOn 13 Apr 2017 20:53, \"Matt Steitle\" notifications@github.com wrote:\n\nThe MDN compatibility table\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\nconfirms that Object.value is an es2017 feature and the polyfill config\nfile\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Object/values/config.json\nagrees. But even requesting the polyfill script via\nhttps://cdn.polyfill.io/v2/polyfill.js?features=es2017|always doesn't\ninclude it.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1169, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa8Od2vRidXxYu-HdcGUnkU5Hq0CMks5rvn1OgaJpZM4M9IYc\n.\n. @CheloXL Can you create a reproducible test case for this on jsbin? If not, I'm not sure how we can progress with fixing the issue.. We now only serve the focusin polyfill to firefox versions older than version 52, hopefully that would fix the issue you saw before.\n\nhttps://github.com/Financial-Times/polyfill-service/pull/1383. The CI check will not run from a fork of the repository. I will get this running on CI for you now.. Thanks, will get this updated \ud83d\udc4d . @joycebabu, the new yaku looks to fail our tests in android 4.4\nFailures:\n - android/4.4:\n    -> Promise\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Promise. Tests are rerunning with yaku 0.17.11 @JoyceBabu :-). We should fix of Array.from polyfill as it is not always safe to rely on the constructor property of an object.. @triblondon This is failing on CI, would you be able to look at this?\nFailures:\n - ie/8:\n    -> IntersectionObserver\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver\n - safari/8:\n    -> WeakMap\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=WeakMap\n    -> Map\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Map\n    -> Set\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Set\n - android/4.4:\n    -> Map\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Map\n    -> Set\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Set\n    -> WeakMap\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=WeakMap. @triblondon, @falsandtru and myself did look to add full spec compliance to another Array.from polyfill and hope to bring that polyfill into the polyfill-service. We can probably take another look at this effort.. @triblondon I updated our test runner to report which test has failed:\n- safari/8:\n    -> Map has valid constructor\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Map\n        == Map\n    -> Set has valid constructor\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Set\n        == Set\n    -> WeakMap has valid constructor\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=WeakMap\n        == WeakMap\n - android/4.4:\n    -> Map has valid constructor\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Map\n        == Map\n    -> Set has valid constructor\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Set\n        == Set\n    -> WeakMap has valid constructor\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=WeakMap\n        == WeakMap. Think I fixed the issues blocking a release, building the release now :-). What is the full polyfill url you are using? Do you know of a way to detect cloneNode that works in those browsers?. Will you be submitting a PR for this @JoyceBabu?. @ctjhoa This looks to be failing on IE7 and IE8:\nFailures:\n - ie/8:\n    -> XMLHttpRequest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=XMLHttpRequest\n - ie/7:\n    -> XMLHttpRequest\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=XMLHttpRequest. I do not, sorry. I would recommend downloading IE7/8 or using a remote testing system such as BrosterStack or SauceLabs in order to aid investigatin the issue.. @ctjhoa Running the tests on CI now. This is live on https://polyfill.io -- https://github.com/Financial-Times/polyfill-service/releases/tag/v3.18.0. @spencercarnage Would you be able to sign our CLA?. @spencercarnage It looks like the signing of the CLA didn't get recorded. Could you sign again using this link please?. Hi, thanks for reporting the issue. Could you please create a test case using an online tool like JSBin, which loads only the polyfill service script, and then includes inline any code required to trigger the problem (which should be no more than a few lines).\n. @JoyceBabu Could you post a screenshot of this working on UC Browser at all?. Thanks for reporting the issue!\nYes, Fastly dropped support for TLS 1.0 and TLS 1.1 on their general set-up. I have requested that polyfill.io Fastly services use the set-up which still supports TLS 1.0 and TLS 1.1.\nI've tested this in IE 9 and it looks to be working. Would you be able to confirm on your side of things that it is working as you expect?. @rupesh1 Thank you for the confirmation, I will be closing this issue now as it looks like the work has been completed by Fastly :-). Thanks for reporting the issue, it is back online. . Hi @jonashaag, the user-agent string you have in the polyfill.io url is detected as samsung_mob/2.1.0, which is a version of the samsung browser we do not support.\nIf you add &unknown=polyfill to the end of the polyfill.io url, we will serve all the polyfills requested when we do not support the browser that the request has come from.. That should be back now :-). I purged the cache at edge (Fastly). I will close this issue as it looks to be working correctly. Thanks for reporting the issue!. @JoyceBabu Can you post a screenshot of this working on UC Browser at all?. It is always nice to hear about a browser no longer requiring a polyfill :-). @PfxMobile We are happy to accept a PR which improves our feature detection inside the polyfill :-). @PfxMobile Can you submit that as a pull-request?. PR for this work https://github.com/Financial-Times/polyfill-service/pull/1345. We were changing the CNAME over on https://cdn.polyfill.io to a different Fastly host in order to support TLS 1.0/1.1, IPv4/6 and HTTP 1/2. When changing the DNS, a typo was made in the CNAME value (a 2 instead of a 3), which is what caused the outage on https://cdn.polyfill.io. The reason it took a while to fix this was because the DNS TTL was increased at the same time as the CNAME change. In the future the DNS TTL will not increase at the same time as any other DNS changes in order to avoid such a long outage for a domain.. It is compiled on the fly based upon the polyfills you are requesting and which ones the users' browser actually require.\nThere is not way we can compile a list for this, as there are too many combinations to go through.. We could calculate the size of the default bundle for the browsers listed on the features page, that is a nice idea :-). What do you mean @drnkwati, I don't understand.\nHere is the minified default bundle for IE 10 -- https://cdn.polyfill.io/v2/polyfill.min.js?ua=ie/10. I don't quite understand what you are wanting to achieve, could you please elaborate?. Hi, thanks for the report, could you follow the steps we posted in our issue template please? https://polyfill.io/v2/docs/contributing/common-scenarios#improve-polyfill.  Samsung Internet versions less than 4 are difficult for us to support because we don't have devices with that browser available to test on. We can't do a direct mapping to Chrome versions as Samsung Internet adds and removes feature from the Chrome version it is based upon.\nWe chose to only support Samsung Internet version 4 and above.\n@ruiaraujo's advice to include unknown=polyfill in your polyfill.io request should solve your issue.. @rubencodes Samsung Internet versions less than 4 are difficult for us to support because we don't have devices with that browser available to test on. We can't do a direct mapping to Chrome versions as Samsung Internet adds and removes feature from the Chrome version it is based upon. \nWe chose to only support Samsung Internet version 4 and above.\nIf you do not support the below browsers then you can exclude Object.defineProperty as @ruiaraujo has mentioned --\n\"firefox\": \"3.6\",\n\"safari\": \"4 - 4.1\",\n\"ios_saf\": \"4.3\",\n\"firefox_mob\": \"3.6\",\n\"ie\": \"6 - 8\"\nIf this answers your question, feel free to close the issue :-)\n. @AdaRoseEdwards, would you be able to review this PR at all? If not, that's okay :-) \n@ruiaraujo Could you provide screenshots of the tests for these polyfills passing in the samsung browser versions targeted by your PR please?. Hi, this is now available for testing on https://qa.polyfill.io/ \ud83d\udc4d . It is only on qa.polyfill.io right now. Will be on the production site this\nweek.\nOn 20 Jun 2017 7:18 pm, \"Cyril Auburtin\" notifications@github.com wrote:\n\nI don't have Safari, but my coworker has Safari Version 10.0.1\n(12602.2.14.0.7)\nand https://jsfiddle.net/aj4htd7r/4/ returns false, so there's an issue\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1216#issuecomment-309844182,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa66ri-Mr8FYtdeeI5Tn9GWtcPqdFks5sGAz_gaJpZM4NuoDc\n.\n. @caub Try using qa.polyfill.io, if that works then we know when we promote to the production site (cdn.polyfill.io) that the issue will be fixed.. @caub Ah yes, that is because fetch is not in the default set of polyfills which is what you are requesting. If you want fetch alongside the default set you can make a request like this https://cdn.polyfill.io/v2/polyfill.js?features=default,fetch. I think you are describing two issues. \n\nPolyfilling classList for IE10/11:\nclassList exists in IE10 and IE11, it however does not support multiple parameters to add and remove methods. The polyfill we use also does not support multiple add or remove. If we add support for mulitple parameters to add and remove methods, we would include IE10/11 in the polyfill targeting.\nclassList polyfill not working in IE9:\nYou haven't given us much information to go on. Could you please provide the minimum amount of code required to show the issue you are seeing, preferably in a jsbin or codepen page. With a reproducible test, we should be able to help diagnose if there is an issue and whether it can be resolved.. This should be fixed by https://github.com/Financial-Times/polyfill-service/pull/1347. A fix in the library would be great as well, happy to accept that as a separate PR. Thank you for reporting and fixing this!. @eboda This is now live on https://polyfill.io. Thanks for the work!. @Irmiz As soon as it passes the tests on CI :-). @JoyceBabu Good spot! If you could submit a PR which removes it that would be fantastic!. Merged the change in #1234 . That is because fetch is not in the default set of polyfills which is what you are requesting. If you want fetch alongside the default set you can make a request like this https://cdn.polyfill.io/v2/polyfill.js?features=default,fetch\nHere it is using the UA you provided, you can see that it supplies fetch polyfill -- https://cdn.polyfill.io/v2/polyfill.js?features=default,fetch&ua=Mozilla/5.0%20(Macintosh;%20Intel%20Mac%20OS%20X%2010_12_1)%20AppleWebKit/602.2.14%20(KHTML,%20like%20Gecko)%20Version/10.0.1%20Safari/602.2.14. A single polyfill for NodeList.prototype.foreach would be great. If you want to add all the other methods as other individual polyfills that would be very much appreciated :-). @gustavpursche Everything except forEach is inside the DOM specification: https://dom.spec.whatwg.org/#interface-nodelist. I think we should avoid adding forEach since it is not in a specification. Thanks for taking the time to find all this out.. @jakearchibald Thanks for the information and the link! If it is in IDL definition of Iterable then we should look to include a polyfill for it.\n@gustavpursche Are you okay to submit a PR which adds this feature?. Thank you @Loilo, it is difficult to remember which issues have been fixed in v3 :-). Hi @Konrud,\nIf you could post a small reproducible test case for this that would be really helpful. Until then, I will close this issue as we run our tests in IE11 and they are passing.. Windows when we test IE\nOn 7 Sep 2017 8:26 am, \"Konstantin Rouda\" notifications@github.com wrote:\n\n@JakeChampion https://github.com/jakechampion are you run in on Linux\nor Windows?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1236#issuecomment-327712440,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa6GylcpCZqk_7oRxzLYpxL-jQk3Aks5sf5qpgaJpZM4OPfst\n.\n. Hi @retyui, we don't keep feature request issues open if they're not actively being worked on but we'd welcome and provide support to help merge a pull request.. I'm not sure how it would work as we serve a different polyfill bundle to each user-agent.\n\n@triblondon, do you think this feature is possible and if so, something we should add?. Hi @Garbanas, would it be possible to add some tests for this polyfill at all?. Hi @WebReflection, thanks for the PR! Would you be able to add a test for this at all?. To ensure it works correctly across all the browsers we are serving the polyfill to as well as to ensure that we do not regress back to not supportinf document fragments. The tests are located in this file.. It looks like this is failing on some browsers:\n- ie/8:\n    -> Element.prototype.append\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n - ie/7:\n    -> Element.prototype.append\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append. Yes, that makes perfect sense @WebReflection and I am happy to do that work.. @WebReflection I got it working in IE8 using the DocumentFragment polyfill. The tests for append are still failing in IE7, are you able to look into this at all?\n- ie/7:\n    -> Element.prototype.append\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\nhttps://circleci.com/gh/Financial-Times/polyfill-service/2190. Hi, if you change your script tag to include the crossorigin attribute set to anonymous then you will start to see stack traces from errors inside of polyfills.\n<script crossorigin=\"anonymous\" src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default-3.6&unknown=ignore&callback=window._POLY\"></script>\nI'm not sure what is causing the error, hopefully when a stack trace is caught alongside the error that would help both of us investigate the issue.. Hi @Merri, I've tried to replicate this on IE9 but I can not, here is the small test case I made -- http://jsbin.com/?console#/xedaqetizi/1/edit\nI will close this issue for now as I can not replicate. If you can put together a small reproducible test case, we can re-open the issue and look at how to fix it.. @bsangster-classy I did, yes. It looks like the commit didn't get added into master somehow, I've added it again by cherry-picking the commit.. Hi @smdern, we are happy to accept a PR which uses typeof instead of instanceof.. @caub I'm not sure what using third party polyfills gain us for these features as the polyfill code for them is small. Could you explain the reasoning behind this please. I'm going to close this PR as we already have polyfills for these features, thanks for taking the time to create it and sorry it didn't get merged.. Hmm, the first user agent string you posted is identified as Android 4.4 and won't get served the polyfill.\nThe last user agent string you posted is identified as Chrome 30 which also does not get served the polyfill.\nThe MDN support table states that Android 4.4 supports requestAnimationFrame.\nDo you think we should bump the range for Android to <5?. Hi @caub, would you be able to sign our CLA?. Sounds great! Thanks for offering to do the work, that would be really helpful. If you get stuck or the documentation isn't helpful feel free to tag me in any PR or issue :-). Hi @onishiweb, we don't keep feature request issues open if they're not actively being worked on but we'd welcome and provide support to help merge a pull request.. Hi @aaronjensen, thanks for the question. This PR was merged into release 3.21 which goes to production on Thursday. It is currently on our QA service if you would like to test it out.. Hi @Ixl123, IE11 compatability mode is recognised as IE/7. The Intl polyfill supports IE 9 - 10.\nRegarding the polyfill URL you have mentioned, the ua parameter is used to tell the polyfill-service what browser to target the polyfills for. If you send us the IE/11 user-agent string, we will service polyfills for IE/11 to all your users, including those on Chrome, Safari etc. This is not recommended.\nWhat you can do is force the Intl.~locale.en-US polyfill to always be downloaded but only use it if the feature is not detected as natively supported. The way to do this is to include |always|gated after the specific polyfill. E.G. https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en-US|always|gated. This will mean that modern browser which support Intl will always download the polyfill but they wont ever use the polyfill.. This can not be solved by the polyfill-service until https://github.com/andyearnshaw/Intl.js/issues/189 is resolved upstream. Please follow that issue if you would like to know when a fix for this is released.. The logic around the Vary header hasn't changed for a very long time, I assume user agents support it as we have not had any issues raised around this before. . IE11 supports the basic usage but not the quality parameter. The polyfill supports the quality parameter, serving this to IE11 makes sense.\nThanks for spotting this @turadg!\nEDIT: IE11 has it prefixed with ms.. @turadg Can you edit the IE version range to be 10 - 11. We bundle Microsoft Edge into our IE browser detection, with the IE version range set to *, it will serve the polyfill to Microsoft Edge as well. We also haven't got this polyfill working in IE 7,8 or 9 which is why it only listed 10 in the version range.. Yes, thanks @turadg!. @amarinov Thanks for the comment and showing that the polyfill would infact make the tests pass. It looks like we have an issue open for Edge already -- https://github.com/Financial-Times/polyfill-service/issues/1437. @mcshaz As the PR related to this issue ( #1260 ) has been merged, can we close this issue?. @mcshaz The tests for this change are failing on a few browsers:\nFailures:\n    http://127.0.0.1:3000/test/tests?mode=targeted&feature=Array.from\n - ie/10:\n    -> Array.from passes a feature detect\n       false == true\n    -> Array.from returns an array with arrays\n       'Map' is undefined\n    -> Array.from returns an array with fills holes in arrays\n       'Map' is undefined\n    -> Array.from returns an array with objects\n       'Map' is undefined\n    -> Array.from returns an array with strings\n       'Map' is undefined\n    -> Array.from returns an array with numbers\n       'Map' is undefined\n    -> Array.from returns an array with regular expressions\n       'Map' is undefined\n    -> Array.from returns an array with objects with in-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with objects with out-of-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with mapping functions\n       'Map' is undefined\n    -> Array.from returns an array with this as an object\n       'Map' is undefined\n    -> Array.from returns an array with this as 42\n       'Map' is undefined\n    -> Array.from returns an array with this as false\n       'Map' is undefined\n - ie/9:\n    -> Array.from passes a feature detect\n       false == true\n    -> Array.from returns an array with arrays\n       'Map' is undefined\n    -> Array.from returns an array with fills holes in arrays\n       'Map' is undefined\n    -> Array.from returns an array with objects\n       'Map' is undefined\n    -> Array.from returns an array with strings\n       'Map' is undefined\n    -> Array.from returns an array with numbers\n       'Map' is undefined\n    -> Array.from returns an array with regular expressions\n       'Map' is undefined\n    -> Array.from returns an array with objects with in-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with objects with out-of-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with mapping functions\n       'Map' is undefined\n    -> Array.from returns an array with this as an object\n       'Map' is undefined\n    -> Array.from returns an array with this as 42\n       'Map' is undefined\n    -> Array.from returns an array with this as false\n       'Map' is undefined\n - ie/8:\n    -> Array.from passes a feature detect\n       false == true\n    -> Array.from returns an array with arrays\n       'Map' is undefined\n    -> Array.from returns an array with fills holes in arrays\n       'Map' is undefined\n    -> Array.from returns an array with objects\n       'Map' is undefined\n    -> Array.from returns an array with strings\n       'Map' is undefined\n    -> Array.from returns an array with numbers\n       'Map' is undefined\n    -> Array.from returns an array with regular expressions\n       'Map' is undefined\n    -> Array.from returns an array with objects with in-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with objects with out-of-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with mapping functions\n       'Map' is undefined\n    -> Array.from returns an array with this as an object\n       'Map' is undefined\n    -> Array.from returns an array with this as 42\n       'Map' is undefined\n    -> Array.from returns an array with this as false\n       'Map' is undefined\n - ie/7:\n    -> Array.from passes a feature detect\n       false == true\n    -> Array.from returns an array with arrays\n       'Map' is undefined\n    -> Array.from returns an array with fills holes in arrays\n       'Map' is undefined\n    -> Array.from returns an array with objects\n       'Map' is undefined\n    -> Array.from returns an array with strings\n       'Map' is undefined\n    -> Array.from returns an array with numbers\n       'Map' is undefined\n    -> Array.from returns an array with regular expressions\n       'Map' is undefined\n    -> Array.from returns an array with objects with in-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with objects with out-of-range lengths\n       'Map' is undefined\n    -> Array.from returns an array with mapping functions\n       'Map' is undefined\n    -> Array.from returns an array with this as an object\n       'Map' is undefined\n    -> Array.from returns an array with this as 42\n       'Map' is undefined\n    -> Array.from returns an array with this as false\n       'Map' is undefined\n - android/4.4:\n    -> Array.from passes a feature detect\n       false == true\n    -> Array.from returns an array with arrays\n       Map is not defined\n    -> Array.from returns an array with fills holes in arrays\n       Map is not defined\n    -> Array.from returns an array with objects\n       Map is not defined\n    -> Array.from returns an array with strings\n       Map is not defined\n    -> Array.from returns an array with numbers\n       Map is not defined\n    -> Array.from returns an array with regular expressions\n       Map is not defined\n    -> Array.from returns an array with objects with in-range lengths\n       Map is not defined\n    -> Array.from returns an array with objects with out-of-range lengths\n       Map is not defined\n    -> Array.from returns an array with mapping functions\n       Map is not defined\n    -> Array.from returns an array with this as an object\n       Map is not defined\n    -> Array.from returns an array with this as 42\n       Map is not defined\n    -> Array.from returns an array with this as false\n       Map is not defined. I completely agree that they should be separate packages, I have been thinking about doing this for quite some time. I've never used lerna, do you think a solution is possible without involving it? If you have the time and capacity to lend a hand, that is great! I'm happy to explain the codebase or answer any questions you may have.. This has been done. The library is at https://github.com/Financial-Times/polyfill-library and the service is at https://github.com/Financial-Times/polyfill-service. @marionebl I will think over the implications of this PR this weekend. I really appreciate the work you have put in to this in such a short amount of time.\nIf other people are reviewing this, you might find it simpler to review the change via the raw patch file instead of using Github's diff mode.. @marionebl I removed all the polyfills which are automatically built during npm install, this brought the diff down by quite a bit :-). @marionebl Hi, sorry this is taking a while to get through, we have some issues with our testing environment and some polyfills which are failing on master. I'm looking into this issues, when they are resolved I will look at getting this PR back on track.. @marionebl Yes, we are happy to merge this work once it is ready. @marionebl @SebastianS90, I've made an updated version of the pull request (https://github.com/Financial-Times/polyfill-service/pull/1693). Apologies for letting this one take so long to get through.. I am not sure that can be achieved by us (polyfill.io). You can ensure the callback is fired by adding an onerror event listener to the script tag, MDN has some advice about how to do this.. Thanks for this PR as well @caub! Is it possible to have tests for this?. Hi @caub, it looks like this PR has made some failing tests in IE7 and IE8:\nFailures:\n - ie/8:\n    -> Element.prototype.prepend\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n    -> Element.prototype.replaceWith\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.replaceWith\n    -> Element.prototype.append\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n    -> Element.prototype.before\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n    -> Element.prototype.after\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n - ie/7:\n    -> Element.prototype.prepend\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n    -> Element.prototype.replaceWith\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.replaceWith\n    -> Element.prototype.append\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n    -> Element.prototype.before\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n    -> Element.prototype.after\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\nDo you think you would have some time to look into making these tests pass?. @caub That is something we have considered for some time, yes. Do you have an idea of how we can get the web-platform-tests to work with this repo?. @caub I made the test runner return more description failure messages:\nFailures:\n - ie/8:\n    -> Element.prototype.after can insert elements after itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n       'Node' is undefined\n - ie/8:\n    -> Element.prototype.append can append elements to itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n       'Node' is undefined\n - ie/8:\n    -> Element.prototype.before can insert elements before itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n       'Node' is undefined\n - ie/8:\n    -> Element.prototype.prepend can prepend elements to itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n       'Node' is undefined\n - ie/8:\n    -> Element.prototype.replaceWith can replace itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.replaceWith\n       'Node' is undefined\n - ie/7:\n    -> Element.prototype.after can insert elements after itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n       'Node' is undefined\n - ie/7:\n    -> Element.prototype.append can append elements to itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n       'Node' is undefined\n - ie/7:\n    -> Element.prototype.before can insert elements before itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n       'Node' is undefined\n - ie/7:\n    -> Element.prototype.prepend can prepend elements to itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n       'Node' is undefined\n - ie/7:\n    -> Element.prototype.replaceWith can replace itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.replaceWith\n       'Node' is undefined. @caub _mutation is a global to the polyfills but not global to user code as it is wrapped in a closure. . @caub We're getting closer:\n- ie/8:\n    -> Element.prototype.after can insert elements after itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n       Function expected\n - ie/8:\n    -> Element.prototype.append can append elements to itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.append\n       Function expected\n - ie/8:\n    -> Element.prototype.before can insert elements before itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n       Function expected\n - ie/8:\n    -> Element.prototype.prepend can prepend elements to itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.prepend\n       Function expected. @caub I added an isDOM helper function, do you think it is acceptable?. @caub Thanks for this! Would you be able to add tests to cover this at all?. @caub It looks like this PR has some tests failing on CI:\n- ie/8:\n    -> Element.prototype.after can insert elements after itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n       Object doesn't support this property or method\n - ie/8:\n    -> Element.prototype.before can insert elements before itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n       Object doesn't support this property or method\n - ie/7:\n    -> Element.prototype.after can insert elements after itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.after\n       Object doesn't support this property or method\n - ie/7:\n    -> Element.prototype.before can insert elements before itself\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.before\n       Object doesn't support this property or method. I made the tests output some more information:\n```\nFailures:\n - ie/7:\n    -> DocumentFragment.prototype.append passes a feature detect\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=DocumentFragment.prototype.append\n       'DocumentFragment.prototype' is null or not an object\n - ie/7:\n    -> DocumentFragment.prototype.append has correct instance\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=DocumentFragment.prototype.append\n       undefined instanceof \nfunction Function() {\n    [native code]\n}\n\nie/7:\n    -> DocumentFragment.prototype.append has correct name\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=DocumentFragment.prototype.append\n       Function expected\nie/7:\n    -> DocumentFragment.prototype.append has correct argument length\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=DocumentFragment.prototype.append\n       'fragment.append.length' is null or not an object\nie/7:\n    -> DocumentFragment.prototype.append can append elements\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=DocumentFragment.prototype.append\n       Object doesn't support this property or method\n\n```. @WebReflection Here are some stats on a months worth of origin traffic for IE 7/8/9. In that month we had ~5 million hits to origin and ~2.5% of those were IE 7/8/9.\n\n. @kaelig We don't have Opera available in our testing environment. Would you be able to contribute this fix? We have a guide that you can follow -- https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers. @kaelig We have no tests for our Object.assign polyfill \ud83d\ude40. I have a PR which adds them (#1284). Once that is out, we can confirm whether Opera 46 requires the polyfill, I assume not based on @christophehurpeau's comment above \u261d\ufe0f. . @matthieusieben Kangax's ES6 table shows that iOS 9 does support Array.prototype[Symbol.iterator].. I've tested Array iterator support on iOS 9 and it works natively. Array.prototype.find is not in the default set, if you require it, please add it to the features list in your polyfill.io script call. Like so: https://polyfill.io/v2/polyfill.js?features=default,Array.prototype.find. This is the correct channel however, I will look into this next week \ud83d\udc4d . @romainmenke PR for this -- https://github.com/Financial-Times/polyfill-service/pull/1282. The release which has this fix will go out on Thursday \ud83d\udc4d . @bbuhler Looking at the MDN docs for these two methods it states they are supported in Chrome 45, how did you confirm that they are not working?. Thanks for the really good issue!\nPlease do submit that as a PR :-). Only use parentNode for SVGs \ud83d\udc4d . @Konrud When I rewrite the test case to not use dynamic script loading and instead to do a blocking script call it work -- https://jsfiddle.net/p44j37f5/1/\nI assume that you want to run your code after the polyfills load? If that is correct, you should ideally use our callback parameter. The callback parameter takes the name of the global function you want to run after the polyfills have loaded. E.G. https://polyfill.io/v2/polyfill.js?features=IntersectionObserver,Array.from&callback=startApplication.\n\n. @Konrud You can't use const and the function needs to be on the window object. Here is your code after I applied those fixes -- https://jsfiddle.net/p44j37f5/5/ -- it works.. @triblondon I've added back the host override options, process.env.HOST, falling back to host header of the request or falling back to https://polyfill.io if that doesn't exist. Do you think that is okay?. That's correct, we can't do anything here for that. It requires a compilation step with our specific polyfill implementations in-mind, I don't think anything like that currently exists.. That's correct, if wanting to support older environments whilst wanting to overload the instanceof keyword you need to compile instanceof into an abstraction over the native instanceof and Symbol.hasInstance. The alternative is to do what you suggest and avoid the compilation and always use the abstraction.\nWith regards to providing a polyfill, as Symbol.hasInstance is a specific symbol that is shipped in browsers, we should provide a polyfill for it. There are many places where Symbols are used indirectly via syntax, such as for..of loops using Symbol.iterator. These Symbols can be used without the special syntax, which is why we provide them.. This is how I would write your example without using instanceof:\n```js\n    class Foo {\n        static Symbol.hasInstance {\n            console.log('instanceof check');\n        }\n    }\n    var f = new Foo;\nreturn Foo[Symbol.hasInstance](f);\n\n``. Good idea! I'm going to close the issue as we agree that having these as polyfills is still useful.. @fooloomanzoo Can you please post the User-Agent string of the browser you saw this on? Also, this will happen as these feature are not available in a Worker context, I think you can resolve this by asking for each feature to be wrapped in a feature detect like so:https://cdn.polyfill.io/v2/polyfill.min.js?features=default,es5,es6&flags=gated`.. Will be fixed by https://github.com/Financial-Times/polyfill-service/pull/1394. 3.22 is not yet live, please follow the [twitter account] (https://twitter.com/polyfillio) or this repo for release announcements \ud83d\udc4d . @fooloomanzoo Have you tested those browser versions? Ideally we would like to see a screenshot of the tests passing on the minimum versions of the browsers you have set to serve the polyfills for.. @fooloomanzoo If opera is exactly the same as chrome, we can alias it which would mean we know longer need to keep updating config files for opera. @fooloomanzoo @christophehurpeau I've made a PR to alias many versions of opera to their chrome equivalent. What this means is we would not need to target opera explicitly  https://github.com/Financial-Times/polyfill-service/pull/1296. @fooloomanzoo It is not necessary to do anything with the configurations after that PR is merged :-). If all goes well, Monday \ud83d\udc4d . This is live on https://polyfill.io. Thanks for the issue @gaearon, I really appreciate the reproducible test case!. If all goes well, we will be looking to release 3.22 next week. @gajus It will be on https://qa.polyfill.io/v2/docs/ sometime this week, we will announe this as a github prerelease and tweet about it.. It is on qa now for testing -- https://github.com/Financial-Times/polyfill-service/releases/tag/v3.22.0-0. @gaearon Understood, we have a standard roll out plan for this service which is to have the next release go on qa.polyfill.io for our users to test with and after 7 days, if no issues are reported we promote to production.. @gaearon That should work already but just in case I have added a test with your code.. @gaearon There was still a bug in there, thanks for getting me to look at it even more thoroughly \ud83d\udc4d . \nScreenshots of tests passing in IE 7 and IE 8:\n\n\n. This issue was to do with a deployment of our vcl which contained a bug where the wrong Host header was being sent to Heroku. This meant that Heroku was routing the request to a non-existent application.\nSince this bug was introduced we have updated the VCL in order to allow us to test the VCL with the production backends prior to deploying the VCL to our production Fastly service. . It is present in our URL polyfill :-). Hi @Gidgidonihah, could you open a new issue which describes what the issue is you have come across and how you think it should be solved please? Thanks :-). It has been tried in the past, https://github.com/Financial-Times/polyfill-service/pull/1101, feel free to give it another go \ud83d\udc4d.. PR for this work -- https://github.com/Financial-Times/polyfill-service/pull/1393. This is now fixed, thanks for reporting the issue \ud83d\udc4d . @dcherman Thanks for the pull-request! Could you document this environment variable inside the readme please? It should be under the \"configuration\" section, thanks \ud83d\udc4d . Thanks for the issue, I am currently looking into this and should have a solution out shortly :-). This is now fixed and live \ud83d\udc4d https://polyfill.io/v2/docs/usage. Hi, this is because of a bug in npm https://github.com/npm/npm/issues/18341\nI will use an older version of npm and publish a patch releas with the test directory. I've also made a PR to fix the issue in NPM for other projects -- https://github.com/npm/npm/pull/18625. Test folder is now included in the 3.1.24 release \ud83d\udc4c . @matzimowski thanks for the PR! Before we can merge this we would need to know if the polyfills actually work in this browser. Could you run the tests on this browser and post a screenshot showing that they are passing at all?\nTo run the tests locally you need to:\n- clone the project from github\n- run npm install\n- run npm start\n- visit this url in the browser you are testing with localhost:3000/test/tests?feature=Symbol&grep=^Symbol(?!\\.). This will be fixed by #1347 . Thanks @triblondon I completely forgot about those tests, will look into them \ud83d\udc4d . @robdodson It will show up as supported when version 3.24 is released. Version 3.23 goes live on Friday, I am looking to make version 3.24 go to https://qa.polyfill.io on the same day. . @robdodson Just an update, this is now on https://qa.polyfill.io alongside some other changes -- https://github.com/Financial-Times/polyfill-service/releases/tag/v3.24.0-0. Thanks for the issue and PR @matzimowski :-)\nIt looks like the bug in the URL polyfill would be coming from https://github.com/inexorabletash/polyfill/blob/master/url.js#L276-L302.\nI'm not sure when I'll have time to look into the issue with using the base parameter in the URL constructor. Are you able to debug the issue at all?. Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is moderately appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor. We would need to ensure that the polyfill is filling for a standard feature of the web platform, which we're not sure is the case here.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. @worsnupd If you know how to implement them in O(1) time, we are happy to accept a pull request. We rewrite those polyfills as our versions can then depend upon the other polyfills in our service which in part makes the Map and Set polyfills smaller in size overall. The comment was removed as it doesn't aid in the conversation around this issue. Please make another issue for your discussion.. Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is moderately appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor. We would need to ensure that the polyfill is filling for a standard feature of the web platform, which we're not sure is the case here.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. Hi @jwerardi , it looks like you've got an error in your website that you've tracked down to the code you're loading from the polyfill service. It would be really useful if you could follow these steps.\n\nCreate a test case using an online tool like JSBin, which loads only the polyfill service script, and then includes inline any code required to trigger the problem (which should be no more than a few lines).\nRaise a new issue on our issue tracker, and include:\n            \nA description of the problem (what you expected, what actually happened)\nA link to your test case on JSBin (or jsfiddle/codepen/whatever)\nThe exact name and version number of the browser you're testing in\nIf relevant, the console output or a screenshot of the problem\n\nWe ask for a JSBin demo because often these kinds of errors are actually errors in the host website's code, and even if they are a problem in the polyfill, we don't have the resources to debug your application.  Please also make sure you disable any browser plugins when you are testing in JSBin, so you are certain that you are only running the test code.. Thanks for the work @Haroenv \ud83d\udc4d . @stsvilik Thanks, we are aware of the difference between DOMTokenList support for Element and SVGElement, I haven't added SVGElement support yet, it will be added later before the PR is merged.. This will be fixed via #1347 as it has SVG support now. Hi, I tried to replicate the issue but I see it working correctly in IE11 on Browserstack.\n\nYou've got an error in your website that you've tracked down to the code you're loading from the polyfill service.\nCould you create a test case using an online tool like JSBin, which loads only the polyfill service script, and then includes inline any code required to trigger the problem (which should be no more than a few lines).\nAfter you have made the test case, can you comment on this issue, and include:\n- A description of the problem (what you expected, what actually happened)\n- A link to your test case on JSBin (or jsfiddle/codepen/whatever)\n- The exact name and version number of the browser you're testing in\n- If relevant, the console output or a screenshot of the problem\nWe ask for a JSBin demo because often these kinds of errors are actually errors in the host website's code, and even if they are a problem in the polyfill, we don't have the resources to debug your application. Please also make sure you disable any browser plugins when you are testing in JSBin, so you are certain that you are only running the test code.. @kdzwinel Thanks for that jsbin! The last release was 14 days ago on October 3rd. I would think this is a Google Ads script issue. . Thanks for the bug report and everything @JamesSingleton  and @kdzwinel \ud83d\udc4d . Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is moderately appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor. We would need to ensure that the polyfill is filling for a standard feature of the web platform, which we're not sure is the case here.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. This looks to have been a bad merge that I did.\nIntersectionObserverEntry is currently not a dependency for IntersectionObserver, which means users need to specifically request it to ensure they support Edge 15.\nI thought if we make IntersectionObserverEntry a dependency of IntersectionObserver, we should probably place the whole of IntersectionObserverEntry into the polyfill. That does take away the somewhat elegant solution of serving a 4 line polyfill for Edge 15. If you think we should only have the Edge 15 fix in the IntersectionObserverEntry polyfill, I'm happy to do that.\nURL for Edge 15 and IntersectionObserver: https://polyfill.io/v2/polyfill.js?features=IntersectionObserver&ua=ie/15\nURL for Edge 15 and IntersectionObserverEntry: https://polyfill.io/v2/polyfill.js?features=IntersectionObserverEntry&ua=ie/15. It is meant to run npm run build automatically after it is installed. Which version of npm are you using @dcherman ?. Thanks for the bug report, the issue is the semver range was invalid, if no spaces are around the dash character, the semver module interprets it as specifically version 10-11 and not as versions 10.*.* to version 11.*.*. PR to fix this -- https://github.com/Financial-Times/polyfill-service/pull/1365. @AdriVanHoudt We are using WhiteSource to do the same thing that nodesecurity offers, this was the first time we have had it run.. @AdriVanHoudt I will definitely be adding it to our CI process though, that is the plan :-). @matzimowski it took a bit of time but we got the url polyfill working in opera mini \ud83d\udc4d . @0xR Hi, this project is not abandoned. We are actively working on a v3 and will not be deploying anything to the live version (v2) until v3 is finished. We are always happy to have people contribute polyfills. CustomElements is a tough one to polyfill, which is why it has yet to be merged.. @benib, would you be able to test whether the polyfill solves the bug in Edge?. Thanks for linking to the bug report :-)\nYour understanding of the polyfill is correct, as far as I can tell \ud83d\udc4d . Thanks for the pull request @JSteunou \ud83d\udc4d  This is looking good, I've done an initial review, I will run through the config.json at a later date. The way I usually create the config.json browser list is by checking the MDN page's browser support table.. @JSteunou I will run some tests on those browsers and update the config in this PR \ud83d\udc4d . @JSteunou The tests currently fail in IE7. You should be able to replicate this by starting the application via npm start and visiting the urls below in IE7.\n- ie/7:\n    -> Element.prototype.getAttributeNames should return an empty array when no attributes\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       85 == 0\n    -> Element.prototype.getAttributeNames should return the list of all attribute names\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       87 == 2\n    -> Element.prototype.getAttributeNames should return the list of all attribute names including id\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       85 == 1\n    -> Element.prototype.getAttributeNames should return the list of all attribute names including data attributes\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       87 == 2. @JSteunou I've updated the tests to work in IE7, they will fail though as the polyfill doesn't work in IE7 because in IE7 the attributes property on Element objects contains 85 items for empty elements. E.G. document.createElement('<div></div>').attributes.length === 85. Failing tests on IE7:\nFailures:\n - ie/7:\n    -> Element.prototype.getAttributeNames should return an empty array when no attributes\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       85 == 0\n - ie/7:\n    -> Element.prototype.getAttributeNames should return the list of all attribute names\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       87 == 2\n - ie/7:\n    -> Element.prototype.getAttributeNames should return the list of all attribute names including id\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       85 == 1\n - ie/7:\n    -> Element.prototype.getAttributeNames should return the list of all attribute names including data attributes\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.getAttributeNames\n       87 == 2. @JSteunou That error is because IE7 lists all options in the Element object attributes property instead of only the explicitly set attributes. It is a bug in IE7 that we would need to work around.. @simono Thanks for the PR! Would you be able to add some tests for the added feature to ensure we do not break/remove it in the future?. @simono Thanks, running the tests on CI now. Thank you for the great PR \ud83d\udc4d . This codebase has moved to https://github.com/Financial-Times/polyfill-library, feel free to open a pull-request on that codebase and I will review it \ud83d\udc4d . @JSteunou I think we may need to also update our tests based on the ones from the upstream repo. @paradoxxxzero Thanks for the PR, would you be able to sign our CLA? If not, we are not able to merge the pull-request. Hi, thanks for raising this. We love to see people wanting to extend the polyfill service to accommodate new features. We don't keep feature request issues open without a PR, but we do provide feedback on how enthusiastic we are to adopt the suggested idea. In this case, the feature you've suggested is moderately appealing to the core team, and we would be happy to receive a PR for it, and help you with reviews and testing, or with how to get started if you are a new contributor. We would need to ensure that the polyfill is filling for a standard feature of the web platform, which we're not sure is the case here.\nYou can find out more about common contribution scenarios and how to make the perfect PR here:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios\nIf you need any further help before you submit your PR, feel free to reopen this issue!. That's correct, it is fixed in master and will be out in the next release which I am preparing for testing right now \ud83d\udc4d . @shauns Thanks, could you open a separate issue up which mentions this potential incompatibility with babel code please? If you could also create a small test case on https://babeljs.io/repl/ that would be really helpful :-). @AdaRoseCannon Thanks for the PR! It looks like browserstack has version 5, they do not have version 6 just yet. When they do we can add it to our automated testing \ud83d\udc4d \nWith regards to the error about iltorb, could you write down the exact environment so that I can hopefully replicate the issue? \n\nNode.js version: node -v\nnpm version: npm -v\nUbuntu version: lsb_release -a\nKernel version: uname -a\nPython version: python --version\ngcc version: gcc --version\n. Hi, thanks for the issue, I would need some more information from you to help solve it.\n\nWhich browser and version was being used?\nWhat is the exact polyfill.io url being loaded?\nCould you be create a test case using an online tool like JSBin, which loads only the polyfill.io script, and then includes inline any code required to trigger the problem (which should be no more than a few lines preferably).. Thanks for the information.\nThe polyfill is being served because the url is explicitly asking to always serve the polyfill, regardless of the fact that a browser may not require it. When that is the case, we recommend also asking for the polyfills to be wrapped in feature detects. That can be done like so:\n\n//cdn.polyfill.io/v2/polyfill.js?features=Array.prototype.includes,modernizr:es5array|always|gated\n\nI will update the tests and polyfill to fix the bug around objects having no prototypes not being able to use the Object.defineProperty method.. This has been fixed via #1408 . This has been fixed via #1408 . @gustavpursche Thanks for reporting the issue. You are correct that it would serve the polyfill if it detected the browser version correctly.\nIt looks like this might be an issue with our user-agent normalisation. The useragent module correctly detects the version as Mobile Safari UI/WKWebView 2.0.1 / iOS 10.0.2, we have a bug it seems where we are mapping it to ios_saf/2.0.0, which is a browser version we do not support and why it does not serve the polyfill.\nA solution you can apply right now would be to include &unknown=polyfill onto the end of your polyfill.io request, that would tell the service to return polyfills for browsers which are unsupported or unknown.. You can leave this one open, I am looking into the issue now :-). @gustavpursche After some more digging it turns out this may be an issue inside the regex database that the useragent module is using. I have a PR to support AppleNews, if you have time to review that would be very helpful \ud83d\udc4d  -- https://github.com/ua-parser/uap-core/pull/283/files. Yes, we support facebook ios webview \ud83d\udc4d . This looks fixed in the new version of the service. Just incase it isn't working for you, that could be because you have not included Object.entries in the features query parameter.\nHere is an example curl request which shows the user-agent string getting normalised to ios_saf/10:\n\u279c  curl https://polyfill.io/v3/normalizeUa -H \"user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 10_0_2 like Mac OS X) AppleWebKit/602.1.50 (KHTML, like Gecko) AppleNews/608.0.1 Version/2.0.1\"\nios_saf/10.0.0\nHere is a link to polyfill.io with the feature and the normalised user-agent:\nhttps://polyfill.io/v3/polyfill.js?features=Object.entries&ua=ios_saf/10. Do you know what the user-agent strings are and if they update them when they update the version of Chrome being used by GoogleBot?. The PR for this work is https://github.com/Financial-Times/polyfill-service/pull/1433. It will be promoted to production tomorrow :-). Thanks for reporting this. PR for this work https://github.com/Financial-Times/polyfill-service/pull/1407. This should be resolved via https://github.com/Financial-Times/polyfill-service/pull/1411.\nFeel free to re-open this issue if that is not the case.. Hi @testerez, when making a request to https://cdn.polyfill.io/v2/polyfill.js without declaring specific features to polyfill, we will serve a default set of polyfills. The default set does not contain Object.values, if you want to include Object.values alongside the default set you can add the query parameter features=default,Object.values to the polyfill.io url.\nHere is an example of serving only the Object.values polyfill and forcing the polyfill service to target iOS safari 10.\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Object.values&ua=%7BMozilla/5.0%20(iPhone;%20CPU%20iPhone%20OS%2010_2%20like%20Mac%20OS%20X)%20AppleWebKit/602.3.12%20(KHTML,%20like%20Gecko)%20Version/10.0%20Mobile/14C92%20Safari/602.1%7D. @testerez This issue should hopefully explain how it is decided what goes into the default set -- https://github.com/Financial-Times/polyfill-service/issues/1203. These are now all fixed, thanks for the report. I've done some reading on this attribute and I'm not sure if it is even possible to polyfill the dominant-baseline svg attribute. If you know of a way to polyfill it or know of an already existing polyfill for it, we can definitely add it to the service.. @radev Have you ran the test suite on those browsers?. @tomdid thanks for the pr, before we can merge it we require the CLA to be signed. Are you able to sign our CLA?. Hi @ctjhoa, have you had a look through our contribution documentation with regards to serving a polyfill to a new browser? https://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\nWe would be really grateful if you could take a screenshot of the browser running the test suite for this polyfill. The url to run the tests with the polyfills is https://polyfill.io/test/tests?feature=MutationObserver&mode=all. Hi @kernow, thanks for taking the time to create an issue for this. Array.prototype.includes is not included in the default set of polyfills that are sent for the request https://cdn.polyfill.io/v2/polyfill.js. You can see what is in the default set of polyfills by looking on this page, they are labelled with a star symbol - https://polyfill.io/v2/docs/features/\nIf you are wanting features which are not in the default set of polyfills, you can add a query parameter to the url which specifies which you are wanting. Here is how to request the default set of polyfills and Array.prototype.includes - https://cdn.polyfill.io/v2/polyfill.js?features=default,Array.prototype.includes. @Loilo Thanks for the PR, it looks to fail the tests on IE7 & IE8, would you be able to look into fixing those?\nFailures:\n - ie/8:\n    -> Element.prototype.closest should return the first ancestor that matches selectors\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.closest\n       'SVGElement' is undefined\n - ie/8:\n    -> Element.prototype.closest should return null if there are no matches\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.closest\n       'SVGElement' is undefined\n - ie/7:\n    -> Element.prototype.closest should return the first ancestor that matches selectors\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.closest\n       'SVGElement' is undefined\n - ie/7:\n    -> Element.prototype.closest should return null if there are no matches\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=Element.prototype.closest\n       'SVGElement' is undefined. Thanks for this work @Loilo!. Hi @murdoch, we have a privacy policy which should explain everything you are wanting to know -- https://polyfill.io/docs/privacy-policy#what-information-do-we-collect-from-the-service\nI'm not sure how Ghostery decides what to block and not block. If you know a good next step to take to get polyfill.io unblocked that would be useful :-). I'm not sure what you meant by:\n\nThey obviously weren't expecting any developers to read it!\n\nThe information we log with regards to IP address is the country code associated with the IP range:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/vcl/main.vcl#L175\nWe also record a salted and hashed extract of 16 bits with a 16 bit offset, which is the first 16 bits of an IPv4 address and bits 96-114 of an IPv6 address. The code which extracts the IP bits is located in the file linked below:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/vcl/main.vcl#L170\n. @alonnberg I agree, you are absolutely correct. The code I have linked to is what is expected to go out in the next release however, noticing that it would violate our privacy policy I have put a hold on making the release.. To update this issue. We are going ahead with the release but have disabled the logging backends which means we would not be recording any data which would be in violation of our current privacy policy, the code is still in the repository but it does not do anything on our servers. \nThe reason to start recording this information is to enable the polyfill service to be able to decide based on the data it has collected, which polyfills should be served to which browsers. Currently that is a manual process and something which takes a long time to roll out. Making it an automatic process based on real world data means we could serve the correct polyfill combination to many different browsers that we currently do not support E.G. UCBrowser, OviBrowser, DolphinBrowser etc.\nWe will be updating the privacy policy before we implement this feature and definitely before we start recording this data.\nI will also be contacting Ghostery at some point to see what we can do to help get polyfill.io off of their blocklist.. @marc-bouvier Thank you for the detailed bug report! I think I know how to solve the issue because of your excellent reproduction steps :-). Hi all, I believe this is fixed in https://polyfill.io/v3/polyfill.js. I will be closing the issue as I can no longer reproduce the bug.\nIf you can still reproduce the bug using version 3 of the service, please comment on the issue and I will reopen it.. It is recommended to not use always on all polyfills without  also including gated on all polyfills for this very reason.\nWhat is your use-case for https://polyfill.io/v3/polyfill.js?flags=always? Perhaps we can solve your issue without having to resort to always including the polyfills even when a browser does not require them.. Yes, npm should automatically build these during the installation. I'm not sure why it would not do that, I've tried on my macbook using node 9 with npm 5 and it worked correctly.\nCould you try installing node-pre-gyp first and then install polyfill-service please, I'm wondering whether we need to include this as a dependency in order to find the correct pre-built binaries instead of building them on your machine manually.. Thanks for writing this all up @njbotkin, hopefully if someone else has the same issue they can find this issue and see how you solved it :-). This polyfill was added in #1686 \ud83d\udc4d . Thanks for the report. This is now fixed and works by default in polyfill.io/v3 \nhttps://cdn.polyfill.io/v3/polyfill.js?features=Object.assign&ua=Mozilla/5.0%20(Windows%20NT%206.1;%20WOW64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/39.0.2171.95%20Safari/537.36%20MicroMessenger/6.5.2.501%20NetType/WIFI%20WindowsWechat%20QBCore/3.43.691.400%20QQBrowser/9.0.2524.400. This will get promoted from qa.polyfill.io to production (cdn.polyfill.io and polyfill.io) tomorrow.. We do not know when a site is being developed and when it is not, which means we would not know when to replace methods with errors. I don't think this is a feature we would likely support. I'm going to close the issue for now, feel free to add comments to it if you think this can be implemented in a way that would be simple to understand.. This has been fixed in master and will go out in the next release. Thanks @amarinov for the pull-request \ud83d\udc4d . Thanks for the pull-request, the codebase has changed a lot and no longer has this file.. I've split this PR into lots of smaller PRs to make reviewing simpler. This is moved to https://github.com/Financial-Times/polyfill-library/pull/65. Somehow this has uncovered a bug in the native URL feature in Safari 10.1. I've submitted a pull-request to the URL polyfill implementation we use in order to have the polyfill work on Safari 10.1 -- https://github.com/inexorabletash/polyfill/pull/143. After we get this issue fixed we can look into a script to compare the compatibility data against our polyfill configurations to see if improvements can be made. I've done a first pass at this work and found many polyfill configurations (or polyfill tests/detects) that can be improved.. It is based on https://github.com/es-shims/es5-shim/blob/d6d7ff1b131c7ba14c798cafc598bb6780d37d3b/es5-shim.js#L182 but has been modified to make use of the other polyfills we have in the service. @gvonkoss It doesn't have any explicit steps, which is why I did not add any inline comments.. @loxtank It is being review now and we will make a release this week. @loxtank You would need to run your own version of the server. Having versioned polyfills is on our roadmap.. Not as of yet, it is marked to go out in release 3.26. We announce releases on the releases tab on GitHub (https://github.com/Financial-Times/polyfill-service/releases) and on our twitter page (https://twitter.com/polyfillio).. @SpadeAceman That's correct, you can explicitly request Object.entries or use the alias es2017.. @frazboyz We serve Object.entries to all chrome versions older than version 54. --> https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Object/entries/config.json#L8. This is now live in production on https://polyfill.io.. Middle of next week \ud83d\udc4d . @AchimKre Yes, if you add &excludes=Object.assign to the end of your polyfill.io script url, that will fix the issue.. Hi @kohesion, @LOK-Soft, @AchimKre, @Turbo87, @tolgabalci, @bthibault, @gavinlove. If you could please test out https://qa.polyfill.io, it contains the fix, once proven to work I can put it into production.. This is now live in production on https://polyfill.io.. I'm sorry to say I do not have a windows machine on hand to fix this or to check if it has already been fixed. We don't officially support running the service on windows.. Thanks for taking the time to create the pull-request. We already have a pull-request which fixes this issue.. @loxtank It is being review now and we will make a release this week\n. @prothweil Yes, adding &excludes=Object.assign to the end of your polyfill.io script url will fix the issue for you.. @TobiasBales Yes, if you load polyfill.io before loading your own Object.assign polyfill, that would likely happen. @SpadeAceman That's correct, you can explicitly request Object.entries or use the alias es2017.. This has been fixed in the recent releases of the service, please try them out \ud83d\udc4d . Waiting on https://github.com/ysmood/yaku/issues/56 to be resolved. Moved to https://github.com/Financial-Times/polyfill-library/pull/64. Moved to https://github.com/Financial-Times/polyfill-library/pull/80\n. Moved to https://github.com/Financial-Times/polyfill-library/pull/81\n. This is because Array.prototype.includes is not in the default set, you would need to have this url for it to work:\nhttps://cdn.polyfill.io/v3/polyfill.js?features=default,Array.prototype.includes. Hi @tambry, I believe we have IPv6 support for https://cdn.polyfill.io. It looks like we don't have it for https://polyfill.io, I will see if this is possible for us to support :-). IPv6 added to https://polyfill.io :-). I don't think we would be interested in adding a feature to enable users to configure a polyfill to always load in specific browsers.\nIf a browser has a buggy implementation of a feature, we should update our polyfill configuration to send a polyfill to that browser.\nIf you could open an issue on https://github.com/Financial-Times/polyfill-library with the bugs you have found in IntersectionObserver for Chrome, I will happily write tests for those and have the polyfill get served to those specific versions of Chrome :-). We won't be looking to support Google Apps Script directly as we have no way of automatically running our tests in that environment. Perhaps you could look into using https://github.com/zloirock/core-js/ instead?\nIf you know of a way for us to automatically test in Google Apps Script, comment on this issue and I will look into it.. Closed via #1694 . This polyfill was added in #1686 \ud83d\udc4d\n. Thanks for the pull-request! This is a sensible idea, I imagine lots of self-hosting users would prefer not to have the test-runner mounted.. This is because version 3.26 has yet to be released. We announce releases via Twitter as well on GitHub.. Hi @harryy2510, thanks for the issue.\nI need some more information before I can start helping with this.\n\nThe exact name and version number of the browser you're testing in.\nA test case using an online tool like JSBin, which loads only the polyfill.io script, and then includes inline any code required to trigger the problem (which should be no more than a few lines hopefully).. Closing due to lack of information from the original author. Hi, thanks for the issue.\n\nI need some more information before I can start helping with this.\n\nThe exact name and version number of the browser you're testing in.\nA test case using an online tool like JSBin, which loads only the polyfill.io  script, and then includes inline any code required to trigger the problem (which should be no more than a few lines hopefully).. Closing based on lack of information to reproduce the issue. @asilvas Thanks for opening the issue. We will be rotating the certificate before the expiration date. This is likely to happen sometime next week.. @mcfog Are you able to prove that this polyfill works on BlackBerry devices at all? A picture of a BlackBerry device loading the polyfill and passing all the tests in the test suite would be the best way to prove it is working :-). This has moved to https://github.com/Financial-Times/polyfill-library/pull/67. @skv-headless Thanks for the pull-request. Unfortunately we can not merge this as we do not offer support for Samsung Browser versions older than version 4. The reason we do not offer support for older Samsung Browser versions is because it would be too much of a maintenance burden manually testing across each version whenever a change to a polyfill is made.. Hi @starkwang, I believe this issue has been fixed some time ago, I forgot to close the ticket, sorry.\n\nLots of website that use polyfill.io are using react and not coming across this issue now.. Thanks for the issue @mikebridge. Could you post the full user-agent string of the browser that generated this error please?\nAlso, are you aware that the stack trace lists a different polyfill.io url to the ones you posted in the issue? Did you narrow the issue down to Set?. Hi @mikebridge, The user-agent string you posted gets detected by polyfill.io as uc browser/7.0.0, which is a version of uc browser we currently do not support. The only version that we've got support for is 9.9, which we alias over to IE 10, the reasoning behind the alias is documented in the pull-request which added it.\nI don't know much about UC Browser, in fact, I never knew they had a desktop version! You mention that the desktop version looks like it is based off of Chrome 55, how did you come to this conclusion? If that is the case, we can look to add another alias for UBrowser to Chrome.\nWith regards to the actual error and stack trace you have posted, could you post a small amount of code that enables me to replicate the issue? It would help me greatly in figuring out what the issue is  that causes the errors you are seeing in your web page.. I believe this is now fixed in polyfill.io/v3 as we detect that the browser is one we do not support and so we wrap all the polyfills in feature detects. Please comment on this issue if you think the issue has not been resolved.. @jdeniau I've never use jsdom, is it possible to include a script tag inside it? If so, something like this should work: https://polyfill.io/v2/polyfill.js?features=es5,es6,es7&unknown=polyfill. Thanks @scripter-co!. This has since been fixed :-). This has been fixed now :-). This is fixed \ud83d\udc4d . This has moved to https://github.com/Financial-Times/polyfill-library/pull/66. @sneakySiberian Only project collaborators with write access to the repository can trigger CI to run, this is due to the fact that someone could write a file which prints out our secret environment variables (API keys to Fastly etc) and abuse them.\nI have read through the changes you've made and can see no malicious code and have now triggered our CI to run. :-). Hi all, https://polyfill.io/v3 has this polyfill and serves it to Internet Explorer 11.\n```bash\n\u279c curl \"https://polyfill.io/v3/polyfill.js?features=NodeList.prototype.forEach&ua=ie/11\"\n/ Polyfill service v3.27.1\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * Features requested: NodeList.prototype.forEach\n * \n * - NodeList.prototype.forEach, License: CC0 /\n(function(undefined) {\n// NodeList.prototype.forEach\nNodeList.prototype.forEach = Array.prototype.forEach;})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```. NodeList.prototype.forEach is not in the default set, the url you should be using is https://polyfill.io/v3/polyfill.js?features=default,NodeList.prototype.forEach. You are likely using the wrong url because the website isn't listing what is in the default set, you can follow #1861 if you want to know when the website is updated with the information about what is in the default set.. @castilloandres Thanks for the pull-request :-) Would you be able to add a test case into https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/test/unit/lib/UA.js#L164 as well? That way we can be sure it is working as intended and that we won't accidentally break this alias.\nThanks again for taking the time to contribute this feature \ud83d\udc4d . Moved to https://github.com/Financial-Times/polyfill-library/pull/82\n. Thanks for opening the issue @94cstyles. We have Array.from configured to be served to iOS versions less than 9.\nTo help debug this issue could you please:\n- Post the full https://polyfill.io url you are using to serve the JS polyfills\n- Poost the full User-Agent header that you are seeing the issue with\nThanks in advance for your help with this :-). Hi @94cstyles, Array.prototype.find is configured to be served to chrome versions less than 45 and to all versions of Android.\nThe two user-agent strings you have posted are Android 5.1.1 and Chrome 33, which both would get Array.prototype.find if it is included in the https://polyfill.io url used to serve JS polyfills.\nTo help me debug this further with you, could you please:\n- Post the full https://polyfill.io url you are using to serve the JS polyfills. E.G. https://polyfill.io/v2/polyfill.js?features=default,Array.prototype.find\nThanks in advance for your help with this. @94cstyles, the reason you are not getting Array.prototype.find in your polyfill bundle is because you are requesting the default set of polyfills which does not include Array.prototype.find. To add Array.prototype.find to your polyfill bundle you can update the polyfill.io url to this:\nhttps://polyfill.io/v2/polyfill.js?features=default,Array.prototype.find&ua=Chrome/33.0.0.0\n. @radeno Thanks for the pull-request, in order for us to be able to accept your contribution, we require that you read and accept the contribution license agreement -- https://cla-assistant.io/Financial-Times/polyfill-service?pullRequest=1736. This has moved to https://github.com/Financial-Times/polyfill-library/pull/68. Thanks for taking the time to make a pull-request. I'm sorry I didn't get to it sooner, the codebase has since changed and the website polyfills urls are now working correctly.\n. @troy-lamerton Thanks for the pull-request! Could you explain/show how you came across this situation please? I'm surprised that this hasn't been an issue before. \nIf you could post a small reproducible test case on a site such as https://codepen.io or https://jsbin.com that would help us confirm what exactly is causing the issue. The test case should load only the https://polyfill.io script, and then any code required to trigger the problem (which should hopefully be no more than a few lines).\nAgain, thanks for taking the time to open a pull-request, it is great to see help from the community :-). Hi @jiayihu, I'm struggling to replicate the issue myself.\nIf you could post a small reproducible test case on a site such as https://codepen.io or https://jsbin.com that would help us confirm what exactly is causing the issue. The test case should load only the https://polyfill.io script, and then any code required to trigger the problem (which should hopefully be no more than a few lines).\n. The code that this PR was changed has been moved to https://github.com/Financial-Times/polyfill-library. The differences between the two are:\n- polyfill.io includes polyfills for more than ECMAScript features such as a polyfill for  elements and other DOM features.\n- polyfill.io will not serve polyfills to browsers which it knows already have the feature natively\n- polyfill.io has the polyfills separate to the code for your application\n\nBabel does not polyfill DOM features, it is only for ECMAScript.\nBabel adds the polyfills into your application code.\nBabel by default will add polyfills for the lowest browser you support and you would be serving those polyfills to browsers which don't require them.\n\nBabel and polyfill.io are both good services and both have their merits, I hope with this information you can decide which service is the one you want to use.. This has now been fixed \ud83d\udc4d . @gatimus If you know what features they need, we will gladly accept a pull-request to add the aliases. We have done this for blissfuljs already, happy to have other aliases. :-). This user-agent now works correctly in polyfill.io/v3. You should not worry about any of the warnings :-). Closing this as code has moved to https://github.com/Financial-Times/polyfill-library/\nI will make an issue for adding DateTimeFormat.prototype.formatToParts and NumberFormat.prototype.formatToParts \ud83d\udc4d \nIssue - https://github.com/Financial-Times/polyfill-library/issues/109. This has been fixed in the version 3 of polyfill.io available at https://polyfill.io/v3/polyfill.js?features=Array.from,Set. Hi @sleagon, thank you for the pull-request. After speaking with the team, we can't figure out what your need is. \nMay I ask why you are wanting to always apply Promise polyfill to all browsers? Is there a bug in some browsers native Promise and we are not serving those browsers the polyfill?\nIf we do add this feature as is, it would be a breaking change and require a new /v4 endpoint. Do you think there is a way we can add this feature without it being a breaking change?. I've moved this to the new polyfill-library repository --> https://github.com/Financial-Times/polyfill-library/pull/165. Hi @felixmosh, could you please update this issue with the steps outlined on https://polyfill.io/v2/docs/contributing/common-scenarios#bug-polyfill under the heading \"The polyfill bundle is causing an error in your app\". This has been fixed in polyfill.io/v3 \ud83c\udf89 . The service has been redeployed and this bug should now be fixed :-). In polyfill.io/v3 Edge is served the HTMLCanvasElement.prototype.toBlob polyfill \ud83d\udc4d . Please post the full polyfill.io url you are using and any other code that is necessary for this bug to occur. I won't be able to help if I don't know what code is being executed.. Sorry I took so long to get to this pull-request. This file no longer exists, we have a new project which does the user-agent normalisation in both JavaScript and VCL (Varnish Configuration Language) -- https://github.com/Financial-Times/polyfill-useragent-normaliser/\nI would gladly accept a pull-request there for this work. I have already opened one for the new Yandex browser aliases you added.. Hi @promptdev thanks for the nice words, we already have a polyfill for this feature -- https://polyfill.io/v2/docs/features/#Promise_prototype_finally\nYou can add this to your bundle like so https://polyfill.io/v2/polyfill.js?features=default,Promise.prototype.finally. It is served. https://polyfill.io/v2/polyfill.js?features=Array.prototype.includes&ua=ie/11. Correct, if you want to add extra features to the default features, you can do this: https://polyfill.io/v2/polyfill.js?features=default,Array.prototype.includes. This has been implemented as part of https://polyfill.io/v3 \nUnknown/Unsupported browsers by default now get served polyfills wrapped in feature detects.\nHere is an example showing the response for Internet Explorer 5 (unsupported browser) when asking for Object.defineProperty feature --> https://polyfill.io/v3/polyfill.js?features=Object.defineProperty&ua=ie/5. npm install polyfill-library --save and the code is hosted at https://github.com/Financial-Times/polyfill-library. The stats is now on the homepage, it is no longer a graph but some text :-). Hi all, I'm looking into this issue. We have made no changes to the production service so I am currently not sure what is causing the issue.. Update, we had a high amount of traffic bypass our CDN layer and overload our servers. I have scaled our servers to meet the large amount of traffic, the amount of errors has reduced completely to 0.. I have now added autoscaling to our backend servers to help avoid this situation happening again in the future. \ud83d\udc4d . @gwardwell You always can use this on any version of node that is greater that the supported version, this shouldn't be blocking you from moving to Node 10 LTS.\nThis is now fixed -- https://github.com/Financial-Times/polyfill-service/blob/a4d9434ae41eb11db7bf40c6ef8746873cceb3e3/package.json#L37. This looks to be a duplicate of #1691. Closing this issue in favour of tracking the feature request in one place.. This is already solved by having separate packages on npm, polyfill-library and polyfill-service.. The polyfill-library has been moved to it's own repo -- https://github.com/Financial-Times/polyfill-library. Moved to https://github.com/Financial-Times/polyfill-library/pull/83\n. Moved to https://github.com/Financial-Times/polyfill-library/pull/84. Moved to https://github.com/Financial-Times/polyfill-library/pull/85\n. Moved to https://github.com/Financial-Times/polyfill-library/pull/79\n. Moved to https://github.com/Financial-Times/polyfill-library/pull/76\n. Moved to https://github.com/Financial-Times/polyfill-library/pull/75. Moved to https://github.com/Financial-Times/polyfill-library/pull/74. Moved to https://github.com/Financial-Times/polyfill-library/pull/70. Thank you for the pull-request, I believe we already detect this user-agent as ios_saf.\n\u279c  curl https://polyfill.io/v3/normalizeUa -H \"user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 10_0_2 like Mac OS X) AppleWebKit/602.1.50 (KHTML, like Gecko) AppleNews/608.0.1 Version/2.0.1\"\nios_saf/10.0.0\nIf you have other user-agents which show this is not the case, please re-open this pull-request and we can look into improving the service with your change :-). I don't think we should change the range of support for Intl for Chrome, as we are polyfilling the correct versions of Chrome according to what the Chrome browser tests have shown.\nI'm not sure why those browsers would not have Intl, they definitely should.\nIf you could provide more information about the type of devices that are seeing this issue than perhaps we can find the real issue. It could for instance be a bug in the user-agent detection. . @kachkaev Do you have the full user-agent strings of the browsers which had this issue? Having those will help greatly in deciding how to move forward with this. Closing this pull-request as the code now lives at https://github.com/Financial-Times/polyfill-library.\nFeel free to open an issue over there, we would need the full user-agent strings of the browsers which have this issue in order to figure out what the underlying problem is.. Hi @szyablitsky, thanks for the issue. I have a few questions, if you could answer these it would help us be able to debug the issue with you :-)\nDo you know what the full user-agent is that are not getting the Intl polyfill? I'm wondering whether XiaoMi have modified the user-agent string and are being served a different polyfill bundle then the one we serve for Chrome.\nDo you know what the full url you are using to load the polyfill bundle is? It should look something like https://polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en-GB.\nHaving answers to these two questions should make more likely that we are able to reproduce the environment in which the error is occurring.. I can confirm this has been fixed in polyfill.io/v3. Thanks for the pull-request @jonathantneal \nThis feature has been implemented in the polyfill-library repo -- https://github.com/Financial-Times/polyfill-library/pull/93. The v2 site is no longer available, the links for privacy policy and terms and conditions are:\nhttps://polyfill.io/v3/privacy-policy\nhttps://polyfill.io/v3/terms. All the issues come from either the old polyfill-library or the development dependencies. I will look into the development dependencies issues but I am not sure we can alter the old polyfill-library as that specific version is required to keep polyfill.io/v2 urls working . I maintain polyfill-library and it should be completely up-to-date.\nWhat I was trying to explain was that the polyfill-service uses multiple versions of polyfill-library in order to support /v2/polyfill.js and /v3/polyfill.js endpoints, which means polyfill-service will always have that older version of polyfill-library which is the cause of those reports in yarn aduit.. Are you using polyfill-service as an npm module? If you are doing that, I think you are actually wanting to use polyfill-library now.\nWe only launched v3 at the start of this year, we will keep v2 running for at least another 12 months.. https://github.com/Financial-Times/polyfill-library is the npm package and should have the documentation you need :-). This is now open at https://github.com/Financial-Times/polyfill-library/pull/59. Hi @kud,\nThe reason we do not use feature detection is because that would require either:\n- Sending all the requested polyfills to the browser and only applying the ones which fail feature detection, which could be a large response and have no polyfills applied if the browser has all the features already.\n- Making two round-trips to the polyfill-service, once to get the feature detects and the second one to request the polyfills for the features which failed feature detection. \nUA detection is quite reliable, lots of websites are using this service and getting the benefit of our UA detection system.\nYou can follow issue #84 if you are wanting to know if/when we implement a simpler approach to using the service with feature detection.. All fixed now, looks to have been a bad deployment to our Fastly service which included a bug in the configuration. This is now fixed \ud83d\udc4d . This is now fixed \ud83d\udc4d . These should be fixed as part of the fix for #1853 . Hi all, I have found the issue, it is a bug in the Fastly config where we didn't use the features parameter if it was above 100 characters. This has been fixed in https://github.com/Financial-Times/polyfill-service/commit/44b0adab53333c48bf3f8d89893ecbb0f294ed06 and will go live soon.. polyfill.io v2 defaults to unknown=ignore, polyfill v3 defaults to unknown=polyfill. Your issue is likely the same as #1853 and should have been fixed \ud83d\udc4d  . V2 had the default of unknown user agents being ignored and it still has\nthe same default. v3 has the default of unknown user agents being\npolyfilled.\nOn Sat, 12 Jan 2019, 12:41 nldevis <notifications@github.com wrote:\n\n@JakeChampion https://github.com/JakeChampion, it was working with\nunknown user agents until yesterday (ie. v2 was behaving like\nunknown=polyfill). Can you please clarify: is it a breaking change\nintroduced recently?\nI see in the response the header normalized-user-agent: other/0.0.0 and\nno polyfills provided.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1855#issuecomment-453744386,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/ABfxa5sKQk0hjevIWc-nj1EWe9op-BZgks5vCdfdgaJpZM4Z8TNl\n.\n. This for the issue, this has now been fixed in v4.0.5\nhttps://github.com/Financial-Times/polyfill-service/blob/342627dff759c77f9e9ee5dfb32a28806451c03a/fastly/vcl/polyfill-service.vcl#L164-L172. >https://cdn.polyfill.io/v2/polyfill.minify.js redirects to a HTML page and thrashes every project we have that depends on polyfill.io!!!!\n\nThe only documented routes which work have always been .js and .min.js. .minify.js was never meant to work, the fact that it did was a bug in the routing logic.\n\nAnd why does https://cdn.polyfill.io/v3/url-builder always add default to the query? I know exactly which polyfills I want and I was under the impression that default adds a package of polyfills. Did something change? Or can I safely delete default from my query?\nMy query from url-builder is: https://polyfill.io/v3/polyfill.min.js?flags=gated&features=default%2CArray.prototype.find%2CArray.prototype.findIndex%2CPromise%2CArray.from%2CMap\nWhat happens if I query https://polyfill.io/v3/polyfill.min.js?flags=gated&features=Array.prototype.find%2CArray.prototype.findIndex%2CPromise%2CArray.from%2CMap?\n\nYou can choose to not include default, it will work as you expect it to. Most people want default, which is why it is there.\n. This is fixed now \ud83d\udc4d . Any zips on the releases page, you would need to run npm install and then npm start.\nThere is currently no documentation for this, it will be added at a later date.. https://github.com/Financial-Times/polyfill-service/releases/tag/v4.0.13. https://github.com/Financial-Times/polyfill-service/releases/tag/v4.0.13. That is because it was added in es2017, you would need to add es2017 to the features query parameter.\nhttps://polyfill.io/v3/polyfill.js?flags=always&features=es6,es7,es2017. You can view this build at https://origami-polyfill-service-dev.in.ft.com/v3/. That's an interesting bug, it has nothing to do with our Date.now polyfill though as Date.now has no dependencies. \nDate.now implementation is https://github.com/Financial-Times/polyfill-library/blob/master/polyfills/Date/now/polyfill.js\nAnother way to confirm it has no dependencies is to request only Date.now and pretend to be IE/8, like so:\nhttps://polyfill.io/v3/polyfill.js?features=Date.now&ua=ie/8\nI will keep this issue open as we should not be throwing an error in IE/8 for the default set of polyfills, which your screenshots makes me think we are.. I like this. It would be good for a v4 release. This is fixed now \ud83d\udc4d . This is fixed now \ud83d\udc4d . This is fixed now \ud83d\udc4d . This is now fixed, thanks for filing the issue :-). @MattiasBuelens Hmm, \"Filter polyfills\" works for me. How can I reproduce the issue you see?\n\n\n. This has now been fixed and is live on polyfill.io \n\n\n. This has now been fixed and is live on polyfill.io. we use 2.0.4 -- https://github.com/Financial-Times/polyfill-library/blob/master/package.json#L76. Closing pull request as Synk does not support package aliases in package.json --> https://github.com/snyk/snyk/issues/330. IE11 still gets polyfills on v2 -- https://cdn.polyfill.io/v2/polyfill.min.js?features=default,es5,es6,array.prototype.includes&ua=ie/11\nI'm not sure what issue you are seeing, could you please post a jsbin.com link which reproduces the issue for me?. Which version of IE11 are you seeing the issue in? I've tested a few different IE11s and they are all working correctly.\nCould you post the full useragent string for the browser you are seeing this issue in?\n\n. Could you post the user agent string as text please? I would like to use it for some further debugging :-). Hmm, using the user-agent you posted I can see that it does get parsed as ie 11, you can test that out by adding the querystring parameter ua with the user-agent string as the value, like so:\nhttps://polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(Windows%20NT%2010.0;%20WOW64;%20Trident/7.0;%20.NET4.0C;%20.NET4.0E;%20Tablet%20PC%202.0;%20rv:11.0)%20like%20Gecko\nYou should see the comment at the top of the response says UA detected: ie/11.0.0\nIn your screenshot I see the comment says: UA detected: other/0.0.0, which makes me think something else is going on \ud83e\udd14 . @AleksueiR That doesn't actually work because the querystring would no longer contain a parameter called features. It would has a querystring parameter called features=default,es5,es6,array.prototype.includes which has an empty string as it's value.\n\n\nWe can also show this is the case for our service by making a http request with the header fastly-debug set which enables extra debug information to be returned.\nUsing HTTPie as an example:\n\nhttp 'https://cdn.polyfill.io/v2/polyfill.min.js?features%3Ddefault%2Ces5%2Ces6%2Carray.prototype.includes%26ua%3Die%2F11' 'fastly-debug:1'\n\nThe response headers now has a header named Debug-VCL-Route which displays what the actual URL was that got forwarded to the origin servers. For the request above it was this:\nDebug-VCL-Route: VCL_RECV,VCL_HASH,VCL_HIT(origami-polyfill-service-eu.herokuapp.com/v3/polyfill.min.js?callback=&compression=gzip&excludes=&features=default&flags=&rum=0&ua=other%2F0.0.0&unknown=ignore&version=3.25.1),VCL_DELIVER. We can see the features parameter only has default and not the other features, this is because there was no actual features query parameter being sent since it was percent/url encoded.\n\n. @hklsiteimprove That also is not a valid querystring for the polyfill-service.\nfor (const [key, value] of new URL('https://cdn.polyfill.io/v2/polyfill.min.js?features%3Ddefault%2Ces5%2Ces6%2Carray.prototype.includes').searchParams) {\n    console.log(`key: \"${key}\" value: \"${value}\"`); // key: \"features=default,es5,es6,array.prototype.includes\" value: \"\"\n}\n\nDid that URL used to work for you?. @jacobgunnarsson I've been able to replicate that one! Excellent, I can look into fixing this for everyone now :-). The issue is that sometimes Fastly will run the VCL for this service multiple times and we had a part of the VCL which was not idempotent, I've submitted a PR to rectify this --> https://github.com/Financial-Times/polyfill-service/pull/1930. @munter The fix is already in a PR, just waiting for CI to give the green light \ud83d\udc4d \n@chaddugas v2 and v3 run off of the same codebase, v2 actually uses the public v3 api, which means fixing the v3 api will fix the v2 api as well. I support both of them and will do for the long foreseeable future.. The deployment is happening right now @martivel, it should be live around all our server globally in 30 seconds. This is now live on polyfill.io and looks to be fixed. I have also added a test to ensure this never regresses in the future.. Chrome 73 should not get any polyfill for Intl.~locale.nl .\nWe can test this by either opening the url in chrome 73:\n\nOr by adding ua=chrome/73 to the url:\n\nAny Chrome version higher than 34 does not get the polyfill -- https://github.com/Financial-Times/polyfill-library/blob/master/polyfills/Intl/config.json#L8\nIf you can post a screenshot and a jsbin.com page which reproduces your error that would be extremely helpful for me :-). If you can set a request header of fastly-debug: 1, then the response headers will contain lots of debug information which should hopefully help us figure out what is going on here.\nI've tested the urls you've posted on Chrome 73 in many different locations round the world (Thanks to BrowserStack's location feature) and they all seem to return the correct response.. Is this from a fresh clone of the repository? If so, I can't seem to replicate the issue. Could you let me know what node and npm version you are using please? :-)\nMy environment is:\n- Node v11.11.0\n- npm 6.9.0\nHere is the output from a fresh git clone and npm ci:\n```bash\n\u279c  ~ git clone git@github.com:Financial-Times/polyfill-service.git\nCloning into 'polyfill-service'...\nremote: Enumerating objects: 118, done.\nremote: Counting objects: 100% (118/118), done.\nremote: Compressing objects: 100% (86/86), done.\nremote: Total 33655 (delta 58), reused 77 (delta 32), pack-reused 33537\nReceiving objects: 100% (33655/33655), 22.04 MiB | 107.00 KiB/s, done.\nResolving deltas: 100% (21527/21527), done.\n\u279c  ~ cd polyfill-service \n\u279c  polyfill-service git:(master) node -v\nv11.11.0\n\u279c  polyfill-service git:(master) npm -v\n6.9.0\n\u279c  polyfill-service git:(master) npm ci\n\nfsevents@1.2.7 install /Users/jake.champion/polyfill-service/node_modules/fsevents\nnode install\n\nnode-pre-gyp info it worked if it ends with ok\nnode-pre-gyp info using node-pre-gyp@0.10.3\nnode-pre-gyp info using node@11.11.0 | darwin | x64\nnode-pre-gyp WARN Using request for node-pre-gyp https download \nnode-pre-gyp info check checked for \"/Users/jake.champion/polyfill-service/node_modules/fsevents/lib/binding/Release/node-v67-darwin-x64/fse.node\" (not found)\nnode-pre-gyp http GET https://fsevents-binaries.s3-us-west-2.amazonaws.com/v1.2.7/fse-v1.2.7-node-v67-darwin-x64.tar.gz\nnode-pre-gyp http 200 https://fsevents-binaries.s3-us-west-2.amazonaws.com/v1.2.7/fse-v1.2.7-node-v67-darwin-x64.tar.gz\nnode-pre-gyp info install unpacking node-v67-darwin-x64/fse.node\nnode-pre-gyp info tarball done parsing tarball\n[fsevents] Success: \"/Users/jake.champion/polyfill-service/node_modules/fsevents/lib/binding/Release/node-v67-darwin-x64/fse.node\" is installed via remote\nnode-pre-gyp info ok \n\npolyfill-library@3.27.4 postinstall /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4\nnpm run build\npolyfill-library@3.27.4 build /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4\nnpm run clean && node tasks/node/updatesources && node tasks/node/buildsources\npolyfill-library@3.27.4 clean /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4\nrimraf ./polyfills/__dist\n\nUpdating third-party polyfills...\n_TypedArray: New polyfill\n  from ../js-polyfills/typedarray.js\n~html5-elements: New polyfill\n  from ../html5shiv/dist/html5shiv.min.js\natob: New polyfill\n  from ../Base64/base64.js\nAudioContext: New polyfill\n  from ../audio-context-polyfill/AudioContext.js\nEventSource: New polyfill\n  from ../event-source-polyfill/eventsource.js\nfetch: New polyfill\n  from node_modules/whatwg-fetch/fetch.js\n * Running module-specific update task update.task.js\nHTMLPictureElement: New polyfill\n  from ../picturefill/dist/picturefill.min.js\n  from ../picturefill/dist/plugins/mutation/pf.mutation.min.js\nIntl: New polyfill\n  from ../intl/dist/Intl.min.js\n * Running module-specific update task update.task.js\nImporting Intl.~locale.* polyfill from /Users/jake.champion/polyfill-service/node_modules/intl/locale-data/jsonp\n716 imported locales\nIntl polyfill imported successfully\nJSON: New polyfill\n  from ../json3/lib/json3.js\nMutationObserver: New polyfill\n  from ../mutationobserver-shim/MutationObserver.js\nPromise: New polyfill\n  from ../yaku/dist/yaku.browser.global.min.js\nUserTiming: New polyfill\n  from ../usertiming/src/usertiming.js\nWebAnimations: New polyfill\n  from ../web-animations-js/web-animations.min.js\nPolyfills updated successfully\nWriting compiled polyfill sources to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4/polyfills/__dist/...\nWaiting for files to be written to disk...\nSources built successfully\n\nnode-zopfli-es@1.0.0 install /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/node-zopfli-es\nnode-gyp rebuild\n\ngyp info it worked if it ends with ok\ngyp info using node-gyp@3.8.0\ngyp info using node@11.11.0 | darwin | x64\ngyp info spawn /usr/bin/python\ngyp info spawn args [ '/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py',\ngyp info spawn args   'binding.gyp',\ngyp info spawn args   '-f',\ngyp info spawn args   'make',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/node-zopfli-es/build/config.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/usr/local/lib/node_modules/npm/node_modules/node-gyp/addon.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/.node-gyp/11.11.0/include/node/common.gypi',\ngyp info spawn args   '-Dlibrary=shared_library',\ngyp info spawn args   '-Dvisibility=default',\ngyp info spawn args   '-Dnode_root_dir=/Users/jake.champion/.node-gyp/11.11.0',\ngyp info spawn args   '-Dnode_gyp_dir=/usr/local/lib/node_modules/npm/node_modules/node-gyp',\ngyp info spawn args   '-Dnode_lib_file=/Users/jake.champion/.node-gyp/11.11.0/<(target_arch)/node.lib',\ngyp info spawn args   '-Dmodule_root_dir=/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/node-zopfli-es',\ngyp info spawn args   '-Dnode_engine=v8',\ngyp info spawn args   '--depth=.',\ngyp info spawn args   '--no-parallel',\ngyp info spawn args   '--generator-output',\ngyp info spawn args   'build',\ngyp info spawn args   '-Goutput_dir=.' ]\ngyp info spawn make\ngyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]\n  CC(target) Release/obj.target/nothing/../node-addon-api/src/nothing.o\n  LIBTOOL-STATIC Release/nothing.a\n  CXX(target) Release/obj.target/zopfli/src/zopfli-binding.o\n  CXX(target) Release/obj.target/zopfli/src/png/zopflipng.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/blocksplitter.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/cache.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/deflate.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/gzip_container.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/hash.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/katajainen.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/lz77.o\nIn file included from ../zopfli/src/zopfli/lz77.c:21:\n../zopfli/src/zopfli/symbols.h:38:12: warning: unused function 'ZopfliGetDistExtraBits' [-Wunused-function]\nstatic int ZopfliGetDistExtraBits(int dist) {\n           ^\n../zopfli/src/zopfli/symbols.h:61:12: warning: unused function 'ZopfliGetDistExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetDistExtraBitsValue(int dist) {\n           ^\n../zopfli/src/zopfli/symbols.h:138:12: warning: unused function 'ZopfliGetLengthExtraBits' [-Wunused-function]\nstatic int ZopfliGetLengthExtraBits(int l) {\n           ^\n../zopfli/src/zopfli/symbols.h:161:12: warning: unused function 'ZopfliGetLengthExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetLengthExtraBitsValue(int l) {\n           ^\n../zopfli/src/zopfli/symbols.h:222:12: warning: unused function 'ZopfliGetLengthSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetLengthSymbolExtraBits(int s) {\n           ^\n../zopfli/src/zopfli/symbols.h:231:12: warning: unused function 'ZopfliGetDistSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetDistSymbolExtraBits(int s) {\n           ^\n6 warnings generated.\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/squeeze.o\nIn file included from ../zopfli/src/zopfli/squeeze.c:28:\n../zopfli/src/zopfli/symbols.h:61:12: warning: unused function 'ZopfliGetDistExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetDistExtraBitsValue(int dist) {\n           ^\n../zopfli/src/zopfli/symbols.h:161:12: warning: unused function 'ZopfliGetLengthExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetLengthExtraBitsValue(int l) {\n           ^\n../zopfli/src/zopfli/symbols.h:222:12: warning: unused function 'ZopfliGetLengthSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetLengthSymbolExtraBits(int s) {\n           ^\n../zopfli/src/zopfli/symbols.h:231:12: warning: unused function 'ZopfliGetDistSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetDistSymbolExtraBits(int s) {\n           ^\n4 warnings generated.\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/tree.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/util.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/zlib_container.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/zopfli_lib.o\n  CXX(target) Release/obj.target/zopfli/zopfli/src/zopflipng/zopflipng_lib.o\n  CXX(target) Release/obj.target/zopfli/zopfli/src/zopflipng/lodepng/lodepng.o\n  CXX(target) Release/obj.target/zopfli/zopfli/src/zopflipng/lodepng/lodepng_util.o\n  SOLINK_MODULE(target) Release/zopfli.node\n  COPY ../lib/binding/zopfli.node\n  TOUCH Release/obj.target/action_after_build.stamp\ngyp info ok \n\niltorb@2.4.1 install /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/iltorb\nnode ./scripts/install.js || node-gyp rebuild\n\ninfo looking for cached prebuild @ /Users/jake.champion/.npm/_prebuilds/d6916f-iltorb-v2.4.1-node-v67-darwin-x64.tar.gz\ninfo found cached prebuild \ninfo unpacking @ /Users/jake.champion/.npm/_prebuilds/d6916f-iltorb-v2.4.1-node-v67-darwin-x64.tar.gz\ninfo unpack resolved to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/iltorb/build/bindings/iltorb.node\ninfo unpack required /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/iltorb/build/bindings/iltorb.node successfully\ninfo install Successfully installed iltorb binary!\n\noniguruma@6.2.1 install /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/oniguruma\nnode-gyp rebuild\n\ngyp info it worked if it ends with ok\ngyp info using node-gyp@3.8.0\ngyp info using node@11.11.0 | darwin | x64\ngyp info spawn /usr/bin/python\ngyp info spawn args [ '/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py',\ngyp info spawn args   'binding.gyp',\ngyp info spawn args   '-f',\ngyp info spawn args   'make',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/oniguruma/build/config.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/usr/local/lib/node_modules/npm/node_modules/node-gyp/addon.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/.node-gyp/11.11.0/include/node/common.gypi',\ngyp info spawn args   '-Dlibrary=shared_library',\ngyp info spawn args   '-Dvisibility=default',\ngyp info spawn args   '-Dnode_root_dir=/Users/jake.champion/.node-gyp/11.11.0',\ngyp info spawn args   '-Dnode_gyp_dir=/usr/local/lib/node_modules/npm/node_modules/node-gyp',\ngyp info spawn args   '-Dnode_lib_file=/Users/jake.champion/.node-gyp/11.11.0/<(target_arch)/node.lib',\ngyp info spawn args   '-Dmodule_root_dir=/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/oniguruma',\ngyp info spawn args   '-Dnode_engine=v8',\ngyp info spawn args   '--depth=.',\ngyp info spawn args   '--no-parallel',\ngyp info spawn args   '--generator-output',\ngyp info spawn args   'build',\ngyp info spawn args   '-Goutput_dir=.' ]\ngyp info spawn make\ngyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]\n  CC(target) Release/obj.target/oniguruma/deps/onig/regcomp.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regenc.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regerror.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regexec.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regext.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/reggnu.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regparse.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regposerr.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regposix.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regsyntax.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regtrav.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regversion.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/st.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/ascii.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/big5.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/cp1251.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/euc_jp.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/euc_kr.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/euc_tw.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/gb18030.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_1.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_2.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_3.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_4.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_5.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_6.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_7.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_8.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_9.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_10.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_11.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_13.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_14.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_15.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_16.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/koi8.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/koi8_r.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/mktable.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/sjis.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/unicode.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf16_be.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf16_le.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf32_be.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf32_le.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf8.o\n  LIBTOOL-STATIC Release/oniguruma.a\n  CXX(target) Release/obj.target/onig_scanner/src/onig-result.o\nIn file included from ../src/onig-result.cc:1:\nIn file included from ../src/onig-result.h:4:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n1 warning generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-reg-exp.o\nIn file included from ../src/onig-reg-exp.cc:1:\nIn file included from ../src/onig-reg-exp.h:7:\nIn file included from ../src/onig-result.h:4:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n1 warning generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-scanner.o\nIn file included from ../src/onig-scanner.cc:1:\nIn file included from ../src/onig-scanner.h:4:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-scanner.cc:42:76: warning: 'ToObject' is deprecated: Use maybe version [-Wdeprecated-declarations]\n    OnigString* onigString = node::ObjectWrap::Unwrap(info[0]->ToObject());\n                                                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2549:10: note: 'ToObject' has been explicitly marked\n      deprecated here\n  inline V8_DEPRECATED(\"Use maybe version\", Local ToObject() const);\n         ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-scanner.cc:61:23: warning: 'Utf8Value' is deprecated: Use Isolate version [-Wdeprecated-declarations]\n    String::Utf8Value utf8Value(sources->Get(i));\n                      ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2991:5: note: 'Utf8Value' has been explicitly marked\n      deprecated here\n    V8_DEPRECATED(\"Use Isolate version\",\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n3 warnings generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-scanner-worker.o\nIn file included from ../src/onig-scanner-worker.cc:1:\nIn file included from ../src/onig-scanner-worker.h:7:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-scanner-worker.cc:37:15: warning: 'Call' is deprecated [-Wdeprecated-declarations]\n    callback->Call(2, argv);\n              ^\n../../nan/nan.h:1654:3: note: 'Call' has been explicitly marked deprecated here\n  NAN_DEPRECATED inline v8::Local\n  ^\n../../nan/nan.h:102:40: note: expanded from macro 'NAN_DEPRECATED'\ndefine NAN_DEPRECATED attribute((deprecated))\n                                   ^\n\n../src/onig-scanner-worker.cc:43:15: warning: 'Call' is deprecated [-Wdeprecated-declarations]\n    callback->Call(2, argv);\n              ^\n../../nan/nan.h:1654:3: note: 'Call' has been explicitly marked deprecated here\n  NAN_DEPRECATED inline v8::Local\n  ^\n../../nan/nan.h:102:40: note: expanded from macro 'NAN_DEPRECATED'\ndefine NAN_DEPRECATED attribute((deprecated))\n                                   ^\n\n3 warnings generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-searcher.o\nIn file included from ../src/onig-searcher.cc:1:\nIn file included from ../src/onig-searcher.h:5:\nIn file included from ../src/onig-string.h:6:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n1 warning generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-string.o\nIn file included from ../src/onig-string.cc:1:\nIn file included from ../src/onig-string.h:6:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-string.cc:26:5: warning: 'Utf8Value' is deprecated: Use Isolate version [-Wdeprecated-declarations]\n  : utf8Value(value), utf8_length_(utf8Value.length()) {\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2991:5: note: 'Utf8Value' has been explicitly marked\n      deprecated here\n    V8_DEPRECATED(\"Use Isolate version\",\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-string.cc:33:19: warning: 'Value' is deprecated: Use Isolate version [-Wdeprecated-declarations]\n    String::Value utf16Value(value);\n                  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:3016:5: note: 'Value' has been explicitly marked deprecated\n      here\n    V8_DEPRECATED(\"Use Isolate version\", explicit Value(Local obj));\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-string.cc:30:40: warning: comparison of integers of different signs: 'int' and 'size_t'\n      (aka 'unsigned long') [-Wsign-compare]\n  hasMultiByteChars = (value->Length() != utf8_length_);\n                       ~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~\n4 warnings generated.\n  SOLINK_MODULE(target) Release/onig_scanner.node\ngyp info ok \n\npolyfill-service@3.25.3 postinstall /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nnpm run build\npolyfill-service@3.25.3 build /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nnpm run clean && node tasks/node/updatesources && node tasks/node/buildsources\npolyfill-service@3.25.3 clean /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nnpm run clean-dist && npm run clean-testdata\npolyfill-service@3.25.3 clean-dist /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nrimraf ./polyfills/__dist\npolyfill-service@3.25.3 clean-testdata /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nrimraf ./test/results\n\nUpdating third-party polyfills...\n_TypedArray: New polyfill\n  from node_modules/js-polyfills/typedarray.js\n~html5-elements: New polyfill\n  from node_modules/html5shiv/dist/html5shiv.min.js\nof: New polyfill\n  from node_modules/array.of/array-of.js\natob: New polyfill\n  from node_modules/Base64/base64.js\nAudioContext: New polyfill\n  from node_modules/audio-context-polyfill/AudioContext.js\nEventSource: New polyfill\n  from node_modules/event-source-polyfill/eventsource.js\nfetch: New polyfill\n  from node_modules/whatwg-fetch/fetch.js\n * Running module-specific update task update.task.js\nHTMLPictureElement: New polyfill\n  from node_modules/picturefill/dist/picturefill.min.js\n  from node_modules/picturefill/dist/plugins/mutation/pf.mutation.min.js\nIntl: New polyfill\n  from node_modules/intl/dist/Intl.min.js\n * Running module-specific update task update.task.js\nImporting Intl.~locale.* polyfill from /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/intl/locale-data/jsonp\n716 imported locales\nIntl polyfill imported successfully\nJSON: New polyfill\n  from node_modules/json3/lib/json3.js\nMutationObserver: New polyfill\n  from node_modules/mutationobserver-shim/MutationObserver.js\nPromise: New polyfill\n  from node_modules/yaku/dist/yaku.browser.global.min.js\nfromCodePoint: New polyfill\n  from node_modules/string.fromcodepoint/fromcodepoint.js\n * Running module-specific update task update.task.js\nURL: New polyfill\n  from node_modules/js-polyfills/url.js\nUserTiming: New polyfill\n  from node_modules/usertiming/src/usertiming.js\nWebAnimations: New polyfill\n  from node_modules/web-animations-js/web-animations.min.js\nPolyfills updated successfully\nWriting compiled polyfill sources to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/polyfills/__dist/...\nWaiting for files to be written to disk...\nSources built successfully\n\npolyfill-library@3.25.1 postinstall /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1\nnpm run build\npolyfill-library@3.25.1 build /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1\nnpm run clean && node tasks/node/updatesources && node tasks/node/buildsources\npolyfill-library@3.25.1 clean /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1\nrimraf ./polyfills/__dist\n\nUpdating third-party polyfills...\n_TypedArray: New polyfill\n  from node_modules/js-polyfills/typedarray.js\n~html5-elements: New polyfill\n  from ../html5shiv/dist/html5shiv.min.js\nof: No change\natob: New polyfill\n  from node_modules/Base64/base64.js\nAudioContext: New polyfill\n  from ../audio-context-polyfill/AudioContext.js\nEventSource: New polyfill\n  from ../event-source-polyfill/eventsource.js\nfetch: New polyfill\n  from node_modules/whatwg-fetch/fetch.js\n * Running module-specific update task update.task.js\nHTMLPictureElement: New polyfill\n  from node_modules/picturefill/dist/picturefill.min.js\n  from node_modules/picturefill/dist/plugins/mutation/pf.mutation.min.js\nIntl: New polyfill\n  from ../intl/dist/Intl.min.js\n * Running module-specific update task update.task.js\nImporting Intl.~locale.* polyfill from /Users/jake.champion/polyfill-service/node_modules/intl/locale-data/jsonp\n716 imported locales\nIntl polyfill imported successfully\nJSON: New polyfill\n  from ../json3/lib/json3.js\nMutationObserver: New polyfill\n  from ../mutationobserver-shim/MutationObserver.js\nPromise: New polyfill\n  from node_modules/yaku/dist/yaku.browser.global.min.js\nfromCodePoint: Polyfill updated, replacing old version\n  from ../string.fromcodepoint/fromcodepoint.js\n * Running module-specific update task update.task.js\nURL: New polyfill\n  from node_modules/js-polyfills/url.js\nUserTiming: New polyfill\n  from ../usertiming/src/usertiming.js\nWebAnimations: New polyfill\n  from node_modules/web-animations-js/web-animations.min.js\nPolyfills updated successfully\nWriting compiled polyfill sources to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1/polyfills/__dist/...\nWaiting for files to be written to disk...\nSources built successfully\n\niltorb@2.4.2 install /Users/jake.champion/polyfill-service/node_modules/iltorb\nnode ./scripts/install.js || node-gyp rebuild\n\ninfo looking for cached prebuild @ /Users/jake.champion/.npm/_prebuilds/70659e-iltorb-v2.4.2-node-v67-darwin-x64.tar.gz\ninfo found cached prebuild \ninfo unpacking @ /Users/jake.champion/.npm/_prebuilds/70659e-iltorb-v2.4.2-node-v67-darwin-x64.tar.gz\ninfo unpack resolved to /Users/jake.champion/polyfill-service/node_modules/iltorb/build/bindings/iltorb.node\ninfo unpack required /Users/jake.champion/polyfill-service/node_modules/iltorb/build/bindings/iltorb.node successfully\ninfo install Successfully installed iltorb binary!\n\ndeasync@0.1.14 install /Users/jake.champion/polyfill-service/node_modules/deasync\nnode ./build.js\n\ndarwin-x64-node-11 exists; testing\nBinary is fine; exiting\n\nparcel-bundler@1.11.0 postinstall /Users/jake.champion/polyfill-service/node_modules/parcel-bundler\nnode -e \"console.log('\\u001b[35m\\u001b[1mLove Parcel? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/parcel/donate\\u001b[0m')\"\n\n(node:80630) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGINT listeners added. Use emitter.setMaxListeners() to increase limit\nLove Parcel? You can now donate to our open collective:\n\nhttps://opencollective.com/parcel/donate\nnodemon@1.18.10 postinstall /Users/jake.champion/polyfill-service/node_modules/nodemon\nnode bin/postinstall || exit 0\n\nadded 2276 packages in 168.917s\n\u279c  polyfill-service git:(master) npm start\n\npolyfill-service@4.7.0 start /Users/jake.champion/polyfill-service\n./start_server.sh server/index.js\n\nStarted worker 1\nWarning: metrics are not being recorded for this application. Please provide a FT_GRAPHITE_APP_UUID environment variable\nWarning: errors are not being logged to Sentry for this application. Please provide a SENTRY_DSN environment variable\npolyfill-service configured (graphite=false logging=true sentry=false)\npolyfill-service started (env=development port=8080)\n```. I don't believe this will work as per 15.3.4.4 from the ES3 specification:\n\nFunction.prototype.call (thisArg [ , arg1 [ , arg2, \u2026 ] ] )\n...\nIf thisArg is null or undefined, the called function is passed the global object as the this value. Otherwise, the called function is passed ToObject(thisArg) as the this value.\n. For reference, it seems this was discussed somewhere else and came to the same conclusion - https://github.com/es-shims/es5-shim/issues/304#issuecomment-104705988\n. I think the dependency might be the ~html5-elements/polyfill.js\n. We are using node 5 now, can make use of arrow functions for binding this lexically now\n. I don't think we should bump the version inside PR. I also don't think this is a patch level change.\n. Shouldn't this be 6 - *?\n. Why the version change here?\n. Yep, Github is weird like that :-/\n. Ah yes, that is a better approach :-)\n. I think that this on its own would count as a breaking change. Should we put out an RFC to see if this is something people are okay with? (I have no idea how Polyfill-Service orchestrates dropping support)\n. The shadowing was by accident, the code has since been updated :-)\n. Could you change this to be a synchronous action instead of asynchronous? The reason being that this introduces a race condition where the directory creation happens after the file creation on line 199 in this file and an error would be thrown.\n. Ah, it's good as it is then. I assumed async as a callback was being passed in to the function.\n. The indentation doesn't seem correct, would you be able o change it from spaces to tabs?\n. Each polyfill is stored as a separate json structure on the filesystem, when a browser requests a set of polyfills the service will combine the necessary files together and return them as the response. Because of this approach, we can only run computations such as browserify for each individual polyfill.\n. If you run grunt buildsources you will see the /polyfills/__dist directory fill up with json files corresponding to the polyfills themselves.\n. Good point, I'll look into this, thanks for the feedback Denis :-) This will also help with ES Shim compliant modules which make use of helper modules.\n. :+1: \n. :+1: \n. According to Kangax's compatibility tableiOS 9 has partial support for Array.from - it is missing:\nArray[Symbol.species]\nArray.from, generator instances\nArray.from map function, generator instances\n\nOur polyfill does not support these features either IIRC.\n. @zloirock Happier with this approach?\n. Browserify is done on the server for each request, the reason it is not done during build for each polyfill is to enable deduplication of common required modules.\n. Removing an extra space\n. Adding a newline to end of file\n. Missing a semi-colon.\n. uglifyify should probably only be used when requesting .min.js\n. I should probably not have this run on every requested bundle, instead only running it on ones where polyfills are written in commonjs or ES6 modules.\n. We could look to using rollup when requesting .min.js\n. A helper function, this is probably already out in npmjs-land somewhere.\n. Mixing tabs and spaces here\n. This works, which version of Node are you using?\n. I don't think we get any benefit from them being arrow functions as the binding is not used inside the functions. Perhaps named functions?\n. Should this bind grunt as the context?\n. And the const stops the function being overridden :-)\n. They can declare other features in the dependencies array in config.json\n. It is not spec compliant, removed.\n. Reading the spec for ToLength shows it is this exact number --\n\n7.1.15 ToLength ( argument )\nThe abstract operation ToLength converts argument to an integer suitable for use as the length of an array-like object. It performs the following steps:\nReturnIfAbrupt(argument).\nLet len be ToInteger(argument).\nReturnIfAbrupt(len).\nIf len \u2264 +0, return +0.\nIf len is +\u221e, return 253-1.\nReturn min(len, 253-1).\n. Is that a browser bug?\n. Heroku do set it in the container, it would be better to set it ourselves\n. We should create a page (on polyfill.io or Github wiki/issue) which explains why it is a very bad idea to use the all alias. Thinking about it some more, maybe it should link to the Github issue which proposed removing the feature, that way users can comment on if they would like us to keep the feature around and what their use-cases are. An RFC from our users.\n. This looks to me like it is iterating through the arrayLike object once if it does not have an iterable interface and twice if it does have one.\n. I think this is better off in a closure as to avoid other polyfills getting access to the function\n. That's what I was aiming to explain by the previous sentence.\nWe run the tests on CI, we can see the [results on CircleCI][ci].\n\nHow should that be reworded to better explain this?\n. We could create a symbol using Symbol() because we have Symbol declared as a dependency for this polyfill.\n. Same as above, we can use Symbol() here.\n. As these are in a closure and not added to the returned object, the symbols wouldn't be surfaced via getOwnPropertySymbols().\n. Could we use the Symbol.iterator here prior to using this iterable detection technique? We should also detect the type of forEach is a function.\n(data && data[Symbol.iterator]) || (data && typeof data.forEach === 'function)\n. typo: easch -> each\n. Is the array notation being used for consistency? IIRC get is not a reserved word and would be safe to use in dot-notation.\n. Should this be a note in the polyfills config.json? I imagine many developers will forget about delete being a reserved word even if it is a method on the object being called upon.\n. why does this guard exist?\n. \ud83d\udc4d \n. We already depend upon Symbol directly by depending on Symbol.iterator and Symbol.species. The benefit would be that it would work with custom iterators which don't have a forEach method.\n. It's more declarative about it's purpose. No other benefit.\n. If this is published on NPM then we could use our update tasks to pull in the polyfill\n. What prompted the adding of this event handler?\n. Should we send the error to Sentry as well?\n. These could be env vars\n. Agree. Could we strip out the UMD wrapper?\n. I'd go with separate.\n. Is this the correct repository?\n. Seems so. \ud83d\udc4d \n. Is this the only missing part to the pr?\n. That's 9.1.1, correct?\n. This would need to be inlined, we don't use commonJS modules for the bundled polyfills\n. need to add this:\n\"repo\": \"https://github.com/medikoo/es6-iterator\",\n\"build\": {\n    \"commonjs\": true\n},\n. You'll also need to declare the ECMAScript version of the polyfill as you are using const.\nIf you add \"esversion\": 6 to this file then the service will run the polyfill through babel before creating the bundle for the browser.\n. Took me a bit too long to understand new default versions compose on top of old default versions.\n. I think we can pass next in to catch directly rather than wrapping in another function.\n.catch(next)\n. I think require.resolve('mocha') does the same job as path.join(__dirname, '/../../node_modules/mocha')\n. Same here, believe this can be replaced with require.resolve('expect.js')\n. If the connection fails to be made, should we catch that failure and either crash the process with an informative error or write to stdout/logs that it failed and carry-on?\nI think a combination of the two would work best. Write to stdout and carry-on if not in production, crash process with informative error if in production.\n. Would this work without Fastly or another CDN sat in-front of the application?\n. missing semi-colon here.\n. Will this route get cached by the CDN?\n. This route shouldn't be cached by the CDN, have we thought about how we will handle all the traffic when we come to turn this on by default?\n. We can pass grunt in to the exported function as a parameter, shall I do that?\n. Not quite, it now won't modify any files which have not changed, this is a good thing as before git would think every single file has been changed when in fact they had not.\n. \ud83d\udc4d \n. It has 0 dependencies.\n. Added.\n. should this be } else if (?\n. That does work, I pushed that change. Will merge.\n. In an attempt to reduce the amount of dependencies installed inside the Docker image, the buildsources,updatelibrary and clean tasks are required to install and build our polyfills. All the other grunt tasks are only required for development tasks.\n. This is valid, it will create an HTMLUnknownElement instead of a HTMLElement. \nPasted from MDN:\n\nThe HTMLUnknownElement interface represents an invalid HTML element and derives from the HTMLElement interface, but without implementing any additional properties or methods.\n. Possibly, what element would you suggest as an alternative?\n. CanIUse/MDN/Kangax could all be hyperlinks\n. The results of the CI test run will always be a failure as the pull request will be based from a forked git repository which does not have access to our secret environment variables. Perhaps we should write something which explains that the CI tests will fail in pull requests made by forks.\n. How did I remove that?! Thank goodness for your reviewing!\n. Has this been tested?\n. Same question for opera_mob.\n. I'd be tempted to not even have the polyfills copied to this location and instead have the coed in lib deal with the third party install method directly.\n. chrome 36 doesn't support new WeakSet(iterable) - could we revert this back to chrome 38?\n. android 5.1 does not have full WeakSet support, it is missing 3 features:\n- iterator closing\n- no WeakSet.prototype.clear method\n- .has and .delete methods accept primitives\n. android 5.1 does not have full WeakMap support, it is missing 3 features:\n- iterator closing\n- no WeakMap.prototype.clear method\n- .has and .delete methods accept primitives\n. Full WeakMap support was added in safari 9.\n. Full WeakMap support was added in ios safari 9\n. This will needs a skips option for browsers which don't support Symbol.iterator.\n. We can't assume Symbol will exist, Firefox has versions which use @@iterator instead.\n. No it doesn't, IE8 needs a StyleSheetList polyfill. I decided to not target IE8 for now.\n. When running the bundled detect code in NodeJS, it will fail because Document does not exist. This change resolves that issue :-)\n. The tests which use this function are commented out, should we comment this out or remove it?\n. If the connection fails to be made, mysql will be undefined.\n. Cool, we deal with an undefined mysql here. :+1:\n. Is it safe to commit this to a public repo?\n. Do you have an example of what these should be? Should we store them in LastPass?\n. Could we add #L22 to the link, that way we direct the reader to the part of the file which is doing this work.\n. Should we look into automating this orchestration using something like terraform?\n. Does this mean we require a global installation of Apex? Is it possible to have it as a development dependency and have the grunt task use it directly?\n. Could these instead live in a local .env file?\n. We should store the values inside LastPass.\n. It's a shame this can't be done via an API of some kind.\n. \ud83d\udc4d \n. Is it possible to not show these docs if the RUM_MYSQL_DSN is not set?\n. I can't see it in the dev-deps, are you sure? I can see grunt-shell was added but not apex.\n. I can't see a definition for the if function in the VCL docs. Is that a Fastly specific function?\n. Should we also add secure flag?\n. It is Fastly specific -- https://docs.fastly.com/guides/vcl/miscellaneous-VCL-extensions#if\n. My comment disappeared. Should we add secure flag here aswell?\n. I think we should get qa on https, Next can't test our qa as their csp policy doesn't allow http resources.\n. I think you need to add Symbol.iterator as a dependency in the config.json for this polyfill otherwise this will throw in any browser which don't support Symbol.iterator.\n. Thanks, rerunning the tests for this.\n. Thanks for reverting this. Polyfilling iterators is a rather tough challenge to get 100% correct.\n. Can we place this if statement inside the it function and add an else statement where we call this.skip();. This would let mocha know that a test was skipped and helps us when it comes to viewing the test reports.\n. Nearly, I would also check that Symbol itself exists.\n. This makes it work in Firefox but it will still fail in Safari versions which only support iteration via for...of - https://github.com/mathiasbynens/Array.from/blob/master/implementation.js#L168\n. This should do it:\n\njs\nvar map = new Map();\nmap.set(1, 2);\nvar y = Function('map', 'for (var x of map) {y = x} return y')(map); // eslint-disable-line no-new-func\nif (y[0] === 1 && y[1] === 2) {\n    forOfOnly = true;\n}\n. Good catch, it's a bug in my code where I confused the execution rules of eval with Function, this should be pushed back upstream.\n. If you have time to fix today that would be great, I'm busy for the rest of today on other work.\n. Yes, you will only enter this branch if you are Safari < 9\n. This is no other way to polyfill this correctly for those browsers without using either new Function or eval.\n. Actually, this will run in any browsers which don't have Symbol nor have an '@@iterator' property (Firefox), so this runs in lots of browsers.\n. We don't know the support for Samsung browser -- @AdaRoseEdwards could you help here?\n. We don't know the support for Samsung browser -- @AdaRoseEdwards could you help here?\n. Then there is no need to add it into this config file :-) Thanks @AdaRoseEdwards!\n. Not needed, see -- https://github.com/Financial-Times/polyfill-service/pull/885#discussion_r79589886\n. We support Samsung 4 & above -- https://cdn.polyfill.io/v2/docs/contributing/authoring-polyfills#browsers\n. This kind of scares me.\n. \ud83d\udc4d \n. Is the assignment necessary?\n. \ud83d\udc4d \n. I see safari 9.1 in the table, not safari 9, are we sure on this change?\n. When creating a ReadableStream you need to implement the _read method yourself. I believe this is why you are getting the exception Error: not implemented. The NodeJS docs explain it better than I can -- https://nodejs.org/api/stream.html#stream_implementing_a_readable_stream\n. I think this needs to be 10 - * to be valid semver.\n. Could we also add other browsers to this list such as:\n- Opera\n- IE\n- iOS\n- Android\n. The polyfill also makes use of atob, which we serve a polyfill for. Could you add \"atob\" to the list of dependencies please?\n. Is the ua=chrome/50 added to increase the likelihood that the response is in the CDN cache? Would it be better to not include a UA, that way the user doesn't need to change this src URL if we ever remove the UA they've added.\n. Should we add this as a comment to the code?\n. This would have to be a major version bump for the module as we are changing the library API in a backwards incompatible way.\n. Is there no stream module on NPM which does this already? If not, I think we should publish this as an individual module as it has lots of uses outside of this codebase.\n. It can't be this as it doesn't support IE 7 or 8.\n. Using .constructor !== Set makes subclasses of Set fail the assertion. Was this a conscious decision to rule-out consumers of the module from using subclassing?\n. Side-note: JS variable/function names can be a whole lot more than what regex defines as a word. If we wanted to be compliant with what JS expects a variable name to be, the regex would be over 3,000 characters. \n\n\nHere is what the regex would be (compiled by @mathiasbynens - https://mathiasbynens.be/demo/javascript-identifier-regex) \n\n\n\n``` js\n/^(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|await|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$)(?:[\\$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])(?:[\\$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*$/\n```\n\n\n. Does proclaim's deepEquals not work with Sets?\n. @triblondon Could you open an issue on the proclaim repo for this? We can definitely make time to update proclaim to work with ES6 objects.\n. We can make them async, that should help increase performance.\n. It seems it doesn't -- https://github.com/Financial-Times/polyfill-service/pull/903#discussion_r84587739\n. done\n. yup, it was needed at first, not after I simplified it down :-)\n. Good work spotting this, caught me copy pasting \ud83d\ude48.\nIt should be es2017.\n. Would it be possible to add a version for all our browsers? https://polyfill.io/v2/docs/contributing/authoring-polyfills#browsers\n. We could use __getter__ if getOwnPropertyDescriptor isn't there.\nI've included getOwnPropertyDescriptor in the dependencies which should mean that it is present for the detect.\n. According to MDN every browser which has dataset also has Object.getOwnPropertyDescriptor.\nhttps://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/dataset#Browser_compatibility\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor#Browser_compatibility\nShall I update the detect to fallback to __getter__ instead?\n. Agree. The only solution I can think of is to use getOwnPropertyDescriptor and fallback to __getter__ if it doesn't exist. Do you think that will be ok?\n. This detect should work in all browser environments.\n. \ud83d\udc4d \n. I think this should grab port from the process.env if it exists as that is what the service will use.\n. same here, not sure why we didn't do this before. Needs to use process.env.PORT if it is set.\n. I added a comment to the .eslintignore file which I hope explains my reasoning. Sorry for changing this, I didn't mean to revert your work. I guess we have conflicting views on this? My view is that we dont control the implementation of the polyfill.js files but we do control the implementation of the other files (config.json, detect.js, tests.js).. MDN says it was in version 25 of firefox. MDN says it was in version 25 of firefox. That would ignore all polyfills which we implement ourselves in the repository. That's okay, thanks for taking the time to review :-). The original file was renamed to remotetest.js. \nThis file now contains the configuration for running the tests on SauceLabs. Each provider has a different way to configure their tunnel, in order to simplify the remotetest.js code I've decided to have a standard interface for opening and closing tunnels. It is a basic object which has two methods which return Promises: openTunnel, closeTunnel.. android 5.1 and ios/9.2 have been removed as browserstack have not added these devices to their automated testing suite yet. I spoke with them on Twitter and this was their response - https://twitter.com/browserstack/status/818835556968833024. <10 should mean that ios 10 does not get the symbol polyfill but ios 9 does. Seems we are serving it to ios saf 10 -- https://polyfill.io/v2/polyfill.js?features=Symbol&ua=ios_saf/10&rum=1. In production the config is currently set to *, that is why ios saf 10 is getting symbol :-). Is this possible to do using our function based aliases? https://github.com/Financial-Times/polyfill-service/blob/master/lib/UA.js#L86. That's correct, \"chrome\": \"*\", will serve the polyfill to all chrome browsers. rogue debugger statement, can this be removed please. If you have a Map from an iframe or a worker or something, Map is different, and instanceof won't work. What do you think about assuming it is a Map if it has all the Map instance methods?\ntypeof Map.prototype.clear === 'function' &&\ntypeof Map.prototype.delete === 'function' &&\ntypeof Map.prototype.entries === 'function' &&\ntypeof Map.prototype.forEach === 'function' &&\ntypeof Map.prototype.get === 'function' &&\ntypeof Map.prototype.has === 'function' &&\ntypeof Map.prototype.keys === 'function' &&\ntypeof Map.prototype.set === 'function' &&\ntypeof Map.prototype.values === 'function'\nThis is very verbose, happy to discuss alternatives :-). @CheloXL Would you be able to post a screenshot of the tests passing on IE Mobile 10 & 11?. \ud83d\udc4d . To make multiple PRs, you would need to create a separate branch for each PR.\n@kentcdodds has made a great video tutorial on how to contribute to open source projects on Github. -- https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github. I would prefer it to be two separate PRs if that is possible. To revert the commit you can do this:\nbash\ngit revert 2b50affe49cd7157bbf67a792480dc2b1ab5f777\nIf you are struggling to do this, I am happy to accept it as one PR :-). With automatically imported polyfills, we ignore them in git. Could you add this file to our .gitignore please?. The repo field is used to specify the repository where the polyfill code can be found, it should be https://github.com/web-animations/web-animations-js. The spec link for web animations should be https://w3c.github.io/web-animations/. browser support section looks good, I looked at https://github.com/web-animations/web-animations-js/blob/dev/docs/support.md#browser-support & https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API#Browser_compatibility. This dependency is where our URL polyfill comes from, it looks to be failing in CI with this update.. require already handles all path related issues. May we also test negative lengths and undefined lengths please. They should both be no-ops.. May we also test non-string padString arguments. I believe they should get stringified.. We also need to test calls which do not pass in a padString, padString should default to a space.. According to MDN, Firefox has had padEnd since version 48 -- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd#Browser_compatibility. Same here, Firefox mobile apparently has had padEnd since version 48. Correct :-). It stops the method from appearing in the results of any enumeration such as for..in.\n```js\n\u279c  ~ node\n\nfor (var a in String.prototype) {\n...   console.log(a);\n... }\nundefined\nString.prototype.padEnd = function padEnd (targetLength, padString) {\n...   targetLength = targetLength | 0;\n...   if (targetLength <= this.length) return String(this);\n...   padString = String(padString || \" \");\n...   var repeat = Math.ceil((targetLength - this.length) / padString.length);\n...   while (repeat--) {\n.....     padString += padString;\n.....   }\n...   return String(this) + padString.substr(0, targetLength - this.length);\n... };\n[Function: padEnd]\nfor (var b in String.prototype) {\n...   console.log(b);\n... }\npadEnd\nundefined\ndelete String.prototype.padEnd;\ntrue\nObject.defineProperty(String.prototype, 'padEnd', {\n...   configurable: true,\n...   enumerable: false,\n...   value: function padEnd (targetLength, padString) {\n.....     targetLength = targetLength | 0;\n.....     if (targetLength <= this.length) return String(this);\n.....     padString = String(padString || \" \");\n.....     var repeat = Math.ceil((targetLength - this.length) / padString.length);\n.....     while (repeat--) {\n.......       padString += padString;\n.......     }\n.....     return String(this) + padString.substr(0, targetLength - this.length);\n.....   },\n...   writable: true\n... });\n[String: '']\nfor (var c in String.prototype) {\n...   console.log(c);\n... }\nundefined\n```. Yes, will be in a subsequent PR. (This caused a lot of needless garbage-collection pausing due to large polyfill strings in memory.)\n\nThis was added because we had lots of requests hitting our server, which was causing a lot of filesystem access. With the long surrogate-control (cdn caching), we should no longer need to have an in-memory cache of polyfills.. \ud83e\udd14 I have never used this npm registry.... Yes, removing getPolyfill from lib/sources.js is also a breaking change.. I am sure, seems the files was in spaces :-(. Seems the files was using spaces for indentation. I made it a non-breaking change now. Good idea!. I think the constructor property is added automatically upon construction of an object.\njs\nfunction Test() {} // => undefined\na = new Test // => Test {}\na.constructor // => function Test() {}. The value of this comes from Function.prototype.name, which I think we already have a polyfill for.. Where do we use result2?. Feel free to amend and push. No need to force push as I will squash all commits down to a single commit when I am merging :-). This code already exists on line 139. This code already exists on line 104.. Please could you not ignore the package lock file, this is a very important file to keep for this project as it ensures we pull in the exact versions of third party polyfills that we have tested on BrowserStack. How come this test is now using the map iterator instead of the map itself? Could we have a comment which explains the reasoning please. Do we need to cater for the case where nodes may be an empty array?. Removing the bin, main and npm start script would all count as a breaking change.. This file can be deleted as it is automatically built from the array.of npm package. I'm not too sure how it ended up being commited as it is included in the .gitignore file.. Same with this file, safe to delete as it is built during from an npm package when running npm install. This file is also included in the .gitignore file, perhaps this was commited before the .gitignore file was updated?. Safe to delete this file, it is built during npm install.. Safe to delete this file, it is built on demand when running npm install. Safe to delete this file, it is built via npm install. Safe to delete this file, it is built via npm install. Safe to delete this file, it is built via npm i. Safe to delete this file.. missing usertiming npm package. Ah, it looks like we have no tests for this polyfill at all :/. Are you sure about this? I think the Iterator Result Object does not have a prototype and always has a done property but may not have a value property -- https://tc39.github.io/ecma262/#table-55. \"text\" instanceof Element throws an error \"Function expected\". . This ensures that only one build is running this task at a time. We need this because we use all allowed BrowserStack browsers when running tests against one PR, if we are running tests against two PRs BrowserStack will error saying we are using too many browsers concurrently.. This looks to be missing the if before the statement. What do you think about ensuring X-Origin-Env is either prod or qa before using it?. Good point! I've amended this is a subsequent commit. Right now I don't think we want to add this polyfill to any of the default sets.\nIn the future we may add it into the default set \ud83d\udc4d . Array.from is a big polyfill, we can avoid the dependency on it by relying only on Element and Array.prototype.map like so:\njs\nElement.prototype.getAttributeNames = function() {\n  return Array.prototype.map.call(this.attributes, function(a) {\n    return a.name;\n  });\n};. We need this part because we the IntersectionObserverEntry polyfill is only a getter https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/IntersectionObserverEntry/polyfill.js. These helper functions were not fully correct as they did not take into consideration the fact that there can be any number of spaces between the function name and the opening parenthesis.. We have to use this because in environments where descriptors are not supported, you can not create a non-enumerable property.. Should we use std.atoi here?\n\nTakes a string (which represents an integer) as an argument and returns its value.Example:if (std.atoi(req.http.X-Decimal) == 42) { set req.http.X-TheAnswer = \"Found\"; }\nhttps://docs.fastly.com/guides/vcl/miscellaneous-VCL-extensions. 1) this.Symbol can be switched to Symbol since this is the global object. Would that be more understandable? . 2. This line is checking that Symbols are natively supported, if they are it will actually execute the step Get(C, @@species), otherwise it will returned undefined (which is okay to be returned as the operation will return defaultConstructor in that case as part of step 6).. It could be moved out, do you think it should be moved out? \nAs the variable declaration is done with var, it gets hoisted to the top of the function scope. This double declaration would get compiled away when users request the minified bundle. . Something I missed, good catch, I'll add it now \ud83d\udc4d . This will also make it enumerable, it should not be enumerable.. \ud83d\udc4d . suggestion\n     * @return {Object} options - opts merged with the defaults option values.. suggestion\n        \"firefox\": \"<25\",. suggestion\n        \"firefox_mob\": \"<25\",. This is likely incorrect, but I would rather serve a polyfill to a browser that doesn't need it than to not serve a polyfill to a browser that does. In a subsequent pull-request I will add a script that checks if polyfills are being served to browsers which do not require them, and I will have the script run in CircleCI, causing builds to break if it finds such a situation.. They were reset because the publishing workflow was going to use https://github.com/matthew-andrews/npm-prepublish#npm-prepublish. We have since moved away from this and we now use this -- https://github.com/Financial-Times/polyfill-service/tree/master/packages/polyfill-service#release-process. Fixed. \n",
    "steveworkman": "There's a lot of discussion about overriding localStorage, especially in a cross-browser way, in the Jasmine docs: https://github.com/pivotal/jasmine/issues/299\nIn summary, there's no reliable, cross-browser way to re-define local/sessionStorage methods\n. ",
    "akrymski": "I don't think there's anything wrong with iOS privacy behaviour.  In general storage availability in a browser varies based on a number of factors such as user privacy, browser settings, space remaining, permissions, etc, etc.  The spec assumes that it's up to the application to handle cases where a particular storage mechanism isn't available for whatever reason, and I think that's the correct behaviour.  If you want your app to fallback to other storage mechanisms, such as a memory-backed local storage mock as you suggest, it seems to me that that logic belongs inside your app (or a wrapper lib like superstore), not as a polyfill.\nSame goes for availability of IndexedDB and WebSQL.\n. Lots of people use code that relies on detecting the prefix for things like firing a webkitTransitionEnd event.  By modifying style properties - that code may break.  Also, style properties are updated by the browser automatically, so I struggle to imagine how you can have a non-prefixed version of webkit-transition-property for example ...\nHaving global strings like STYLE.transitionProperty = '-webkit-transition-property' isn't much cleaner than a JS function that sets styles for you (using an appropriate syntax) imo\nThere is some fine line between polyfiling just enough to make older browsers behave like a modern browser, and making all browsers behave the same.  I'd prefer this project to be the former, as the later typically introduces performance issues and is a rabbit hole generally speaking.\n. Seems like there's an error in the detection:\n'CustomEvent' in window && typeof window.CustomEvent === 'function'\nNative CustomEvent in Safari 8.0 is not a type function for some reason.  The first part returns true, but the later part - false.  Nevertheless, native CustomEvent works just fine.\n. ",
    "jdarling": "I don't have IE 6 handy to test this on, but long time ago in a world far away it worked fine on IE6 with a proper Object.defineProperty shim.  In fact, I don't have most of these browsers to test on, but am going off of projects that use the library and guessing that it would work.\nJust realized that it requires Object.keys too.  Will have to lookup support for that one.\n. If setImmediate is available it uses setImmediate to schedule scanning of objects.  If setImmediate is not available then it uses a small hack calling setTimeout(f, 10) instead.\nThe scanner will keep scanning all observed objects up to a 100ms window, after that window it queues up another window to scan.  Basically a rolling window scan that never exceeds more than 100ms blocking on the application.\nThere is no support for synchronous (Object.deliverChangeRecords) yet (currently Object.getNotifier(O).deliverChangeRecords is implemented), but in general any Object.observe shim is going to have to use either setTimeout or setImmediate.\n. Oh and if a supported implementation of getters and setters exists it will use that instead of using the timer.\n. Should think about updates too, as we are currently working on a refactor of the codebase to bring it more closely aligned with the spec internal objects and methods.  There are only two of us that maintain this shim so I don't have an ETA on those changes.\n. Unfortunately slow due to other commitments getting in the way of working on it.  I hope to get some more time over the next couple weeks, but it depends on work, wife and kids :)\n. Honestly, I'd rather find someone who is willing to take the library over.  I've had literally 0 time to work with and/or maintain the library.  Honestly I have little need for Object.observe making it hard to justify time spent against it.\nI've placed a public note on the library in hopes someone will take it over and keep it up to date, but if no maintainer is found I would guess there isn't much hope for it being updated to address the above concerns.\n. ",
    "mirceapiturca": "Ok, so in this case requesting the full lot should be:\ncdn.polyfill.io/v1/polyfill.js?features=requestAnimationFrame.webkit,requestAnimationFrame.moz,requestAnimationFrame\nand making sure that before you use timeOut to look for native prefixed.\nMakes sense.\nThanks\n. Oh, this is great. Thank you.\n. ",
    "jdalton": "This still seems like a lot of duplication of effort. Is there a reason you don't just use the shims provided by es-shims?\n. >  Can you suggest how we could better achieve that?\nActively engage the es-shims folks and work with them to modularize their shims that aren't already. \n. > The contribution guide could state that problems with the individual polyfills should be reported on the upstream repos.\n:+1:\n. >  then effectively this service would just be a package manager\nThat's really all it needs to be. Bundling up and cdn'ing the relevant shims (or subsets) associated with the given UA. There's still win in that.\n\nBut the sources are not consistently presented, which is part of the reason we have this problem in the first place.\n\nStart a discussion with them to make it consistent.\n\nSo that means manually maintaining slave copies, and I can see that limiting adoption\n\nWorse case maybe, though there may be ways to wrap/adapt without duplicating.\n\nif a developer has to report a bug upstream, wait for it to be fixed and released, then prod us to update our copy to the new version, that's not going to be quick enough for developers with a project to build\n\nI think the flow is fine. It's better to keep a quality single point of shim.\n\nHere's another scenario - say you write a classlist polyfill. You write tests, and in browsers that don't have domtokenlist, you include another polyfill for that. Say we disagree with your choice of domtokenlist polyfill for some reason and take someone else's.\n\nThat's a lot of what-ifs. The maintainers of es-shims are thorough and thoughtful. I'm sure something could be worked out or a compromise made.\n\nWhen someone requests classlist from the polyfill service, they get your classlist polyfill and someone else's domtokenlist. That combination is untested.\n\nThen in that bizarro case you'd write tests to cover that.\n. That check is roughly 90 characters minified. To put that in perspective the String.prototype property references in the shim are about 40 characters. I don't see that as being a big deal. If it becomes an issue things can always be further modularized.\n. Your bind will also error when attempting to bind a native method. This is because native methods don't have a prototype property so your bound function gets a prototype of undefined which then throws an error when you do the this instanceof Constructor check.\n. Hi @triblondon!\n\nmaintaining another family is more work\n\nIsn't it a fixed cost since IE is no longer updated or gaining features?\n\nIE ends at v11, Edge starts at v12, there's a sense of continuity\n\nThere's probably some marketing reason for not starting a browser at v1.\n\nto my knowledge, support in Edge is a superset of IE, so you've not dropped anything in the move to Edge that we have a polyfill for\n\nEdge doesn't have a lot of the traditional IE-only features/code-paths. It's a separate thing.\nIE 11 is really the only IE version still supported by MS and it's just waiting out the support clock.\nEdge is evergreen and where MS is putting its efforts.\n. It's a step in the right direction.\n. This looks like IE and then Edge Mobile.. ",
    "ocombe": "Only polyfills/Window.prototype.matchMedia/polyfill.js triggered an error, I'm not sure if other commits are necessary.\n. Ok good points ! Do you want me to open an issue then ?\n. ",
    "ashaffer": "+1 this is really making this service substantially less useful for us.\n. ",
    "ljharb": "You could use the standard test262 tests as acceptance tests, and then pull in any polyfills as packages. I'm not sure I understand the complication.\n. Any polyfill that stops short of the limits of technical possibility is quite simply broken, and should not be used. I think it's very critical that a polyfill's adherence to the original spec not vary - put another way, if it doesn't adhere to the spec tightly, it's not a polyfill, it's just a function full of lies.\n. fwiw callback instanceof Function is not a valid test for \"is a function\", because of iframes/other realms, as well as host objects. I'm afraid that all the awfulness in https://github.com/ljharb/is-callable/blob/master/index.js is what's required for a proper \"is callable\" check.\n. Why does this need shimming? Which engine that exists has differing behavior for Object#toString? (repeated from https://github.com/es-shims/es5-shim/issues/304#issuecomment-104720540)\n. My bad, I'd misread it. However, foo === null || foo === void 0 covers null/undefined in all browsers, and is very fast, so I don't see the advantage to shimming this one.\n. It's faster and clearer for a caller to explicitly check null and undefined anyways before using Object#toString\n. ",
    "abozhilov": "Sorry about my examples. As I told you built-in constructors have overloaded behavior depends how they are called . \nnew String('test'); //string object\nString('test'); //primitive string value\nYour bind implementation doesn't handle that. \nString(new (String.bind(null, 'test'))); //Native bind returns 'test'\nYour bind fails with error since String#toString is not generic.\n. See the issue https://github.com/mathiasbynens/String.prototype.repeat/issues/7 before using it. \n. ",
    "matthewwithanm": "I just bumped into the issue described by @jdalton. Here's the exact message for reference:\nUncaught TypeError: Function has non-object prototype 'undefined' in instanceof check\nAnd here's code to cause it:\njs\nRegExp.prototype.test.bind(/a/)('a');\n. ",
    "adamhavel": "Sorry, nothing online. But I get the error by simply adding the polyfill - no additional scripts of mine needed, so I think it should be the same in every IE8. I use the official Microsoft images for VirtualBox (Win XP + IE8) by the way. There was a commit on the polyfill in question three days ago so it would seem therein lies the rub.\n. Glad to help! Thanks for the quick fix.\n. Any idea when will it show up in the hosted service? Clearing cache didn't help.\n. Thanks for the info.\n. All of a sudden, it correctly recognizes Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.81 Safari/537.36 as chrome/43.0.0. But I still have to pass in the features property as noted above, or else I don't get any polyfills back.\n. Thanks! Sorry about the UA detection, I don't know how I missed that.\n. ",
    "davidchase": "@triblondon how far back do i need to look in terms of browser support ?\n. The browser numbers are from http://caniuse.com/#search=promise \n. Sure let me fix that :)\n. Sorry for the delay, let me know if it works\n. @jonathantneal no worries, I think we might need to adjust safari because 7.06 which I had doesn't have native Promises but 7.1 which is the update does so i think i messed that up. my versions only included 5.1-7\n. @triblondon yeah I can do that no problem as I as I get back from my trip \n. @juandopazo I downloaded versions of chrome 35 and 34 from here and on version 34 i noticed Promise.cast and false for the resolve test however on version 35 it was already fixed\nSo I guess i should download to the other versions of firefox to check which have the correct implementation.. nice catch\n. yeah noticing the same issue :+1: \n. ",
    "juandopazo": "There is a difference between just having a global Promise object and having a correct implementation. After the moment the first Promise implementations were released in browsers, TC39 made a change to the API, so there are some implementations that have an issue:\n- They have Promise.cast which was later removed\n- var p = Promise.resolve(); Promise.resolve(p) === p; this is false, when it should be true.\nChrome 32-35 had this issue. It was fixed in Chrome 36. The same happened in Firefox but I don\u00b4t remember the versions.\n. The enum bug can be fixed. You can take it from YUI's source: https://github.com/yui/yui3/blob/master/src/yui/js/yui-object.js.\n. @triblondon what I ended up doing for the Intl locale data is add it as a new polyfill, just to avoid writing more code :speedboat: \n. No, sorry. In my \"fork\" I set it up this way because I already support versions of polyfills. So I abused this fact to define each language as a specific version. The result is a request that looks like this: intl@0.1.4,locale-data@en-UK-0.1.4.\nI think in this project it\u00b4d be too complicated to add the locale data as polyfills because you\u00b4d end up with lots and lots of folders inside /polyfills. I think the assets folder makes sense, but it'd be a pity not to be able to include it in the same response as the polyfill. It doesn't need to be dynamically loaded, just loaded after the polyfill.\n. @triblondon we need to answer two questions:\n1. Do we want the Intl source code in this package or to just reuse it from the npm package?\n2. Do we treat locales as polyfills or as a special case like features=Intl&locales=en-US,fr-FR?\n. The problem is that there are a lot of locale files. See https://github.com/andyearnshaw/Intl.js/tree/master/locale-data/jsonp. We can't just create a folder under polyfills/ for each one.\n. Sounds good!\n. Yup!\n. I'm hoping to write one soon. But the IDL has been a moving target.\n. Sounds good. The first step would be to take a look at Raynos' https://github.com/Raynos/whatwg-streams to see if they're up to date with Domenic's latest changes at https://whatwg.github.io/streams/ (hint: it's probably not up to date :wink: ).\n. Not bad! I hadn't considered the option to skip the use of streams for now. Given that Streams are still a bit unstable, then it's probably a good idea.\n. There's nothing stopping us from using it as it is, no. My main motivation is reducing the dependency list so I can have faster builds. And I have the feeling it'd get more contributions this way, but it's just a feeling.\n. Oh, I remembered the other reason:\nI'd really like to see each polyfill versioned. This would allow us to use long cache rules for them by including the version in the URL.\n. One issue that I see with this is that there are polyfills that are written specifically with this service in mind, specially the ones that use a shorter version for some browsers, like requestAnimationFrame.\n. I've been wondering about the testing part. The current test suite tests both the behavior of the polyfill and the behavior of the service (it's not using the always flag). I'm guessing it shouldn't be very hard to test the polyfills without the optimization based on the browser.\nBut so far the only reason why separating them would be desirable would be to avoid installing the dependencies which makes build tasks slower. And that can be worked around. So for now using the service as it is seems to be working.\nAlso, if you start supporting versions we might just switch to using your service as a plain old npm dependency :smile: \n. I have a branch ready here: https://github.com/juandopazo/polyfill-service/compare/aplus?expand=1. I'll send a PR soon.\n. One issue is that there is a license incompatibility. There needs to be a change in the service's license to accommodate including code with different licenses.\n. I'm asking for advice at Yahoo. I think the service's license should include a part which acknowledges it uses code from other projects. This is what we used to do in YUI: https://github.com/yui/yui3/blob/master/LICENSE.md.\n. The A+ tests cover a lot of ground and edge cases. Here are some examples of basic concepts that the current polyfill doesn't do:\n1- then should always return a new promise:\njs\nvar p1 = Promise.resolve(42);\nvar p2 = p1.then(function (x) { return x + 1; });\np1 !== p2;\nThis is because then is essentially map for promises.\n2- Returning a promise inside then makes the value of the promised return by then the value of the promise returned inside then:\njs\nvar p1 = Promise.resolve('hello');\nvar p2 = Promise.resolve(42);\nvar p3 = p1.then(function () {\n  return p2;\n});\np3.then(function (value) {\n  // value is 42\n});\n3- Throwing inside then rejects the promise:\njs\nvar p2 = p1.then(function () {\n  throw new Error('hello');\n});\np2.then(undefined, function (err) {\n  // err.message === 'hello'\n});\n4- Returning inside the error callback fulfills the promise:\njs\nvar p1 = Promise.reject(new Error('hello'));\nvar p2 = p1.then(undefined, function () {\n  return 42;\n});\np2.then(function (value) {\n  // value is 42\n});\nThe A+ tests cover these examples and more.\n. Octane's promise looks pretty good. The implementation is straightforward and readable. Its approach is similar to my own version, so I obviously like it! :wink: \nMy only gripe with it is that it relies on setImmediate as a global API. setImmediate will not be supported by any browsers other than IE and its semantics are different from what promises really do under the hood (google \"promises microtasks vs macrotasks\"). @Octane will you be willing to use https://github.com/kriskowal/asap instead? It uses the fastest implementation possible instead of trying to mimic setImmediate.\n. It's basically failing to resolve the promise inside then. It's covered by the A+ test suite, so any implementation that fully passes the test suite should not fail you. Any of ypromise, es6-promise or Octane's should be fine.\n. Partially. Even though it's a great improvement and it's now an A+ compliant implementation (great job @jonathantneal!), it still has some issues around the ES6 spec. The first one I see is around subclassing. This should work with the polyfill:\n``` js\nfunction Subpromise(resolver) {\n  Promise.call(this, resolver);\n}\nSubpromise.proto = Promise;\nSubpromise.prototype = Object.create(Promise.prototype);\nvar p = Subpromise.resolve(42);\np instanceof Subpromise; // true\n```\nBut leaving aside edge cases, the main issue is performance. setTimeout is too slow for any serious use of promises.\nI honestly recommend using an existing implementation, preferably Jake Archibald's. There are too many of them already.\n. @matthew-andrews yeah. That's why some people will want to use the polyfill with always set on.\n. It wouldn't be unreasonable, but it would be a lost opportunity for some users, specially since it's an easy fix and the service already supports the always flag for this kind of situation.\n. Well I'm speaking from experience here. The first version of my promise implementation used setTimeout. It worked. I used it mostly for IO and everything was well. But just in case I wrapped setTimeout in a private method of the Promise class so that anyone could overwrite it if needed.\nThen a couple of months later I ran into a Flickr developer who told me they were having some performance issues with the rendering time of the Flickr photo page. They had rendering times around ~150ms. It turns out they were using promises all along their rendering pipeline. He realized setTimeout was the issue and he replaced it with asap.js. Instant win. They now had ~25ms rendering times.\nI don't think setImmediate will be the best choice because:\n1. It's not really what promises do. Promises use \"microtasks\" which run asynchronously but before \"yielding\" back to the browser, that is before any other rendering or layout operations can happen. This is what Object.observe and MutationObservers use.\n2. It has known issues: http://codeforhire.com/2013/09/21/setimmediate-and-messagechannel-broken-on-internet-explorer-10/\n3. It's not a standard. Other browsers aren't interested in it. See this issue in Chromium and this bug in Firefox..\nThe best choice is to use asap.js. Or use Archibald's polyfill which uses asap :stuck_out_tongue: \n. We've been using esnext with good results. :+1: \n. Right. I forgot about sourcemaps. The truth is that they're invaluable when something goes wrong. Not taking advantage of them would be a pity.\nPerformance is not bad, but it doesn't mean it's good enough to do on the fly, even with caching. But sourcemaps can be \"piped\", that is passed from one process to the next one and modified on the way. For example, you can give uglify a file and its sourcemap and it'll give you back another sourcemap that points to the original code. So you should transpile and minify at build time and only modify the line information when concatenating on each request.\nIt might not be worth the effort for this project though.\n. This sounds scary (around XSS).\n. I'm not sure why, but it set off my spidey sense. It's probably not dangerous out of the box, no. But it is a way to inject code after all.\nAnother issue I see is... What if the request for the third part script fails? Do you retry? How many times?\n. Ok I understood how @jonathantneal's promise chains work. I'll see what I can do about those A+ tests, but it might not be very straightforward.\n. The problem with that test suite is that it's not designed to be run in the browser. It assumes an ES5 environment. Any suggestions?\n. LOL. Well, I use promises as a polyfill in Node too.\njs\nif (!global.Promise) {\n  global.Promise = require('es6-promise');\n}\nHonestly, the A+ tests are important. They cover a lot of edge cases.\nI've been thinking just a tests.js file won't be enough for some polyfills. Could we have a tests folder? For this case we could mark some tests as \"only works in ES5\" and browserify them.\n. @jonathantneal I guess my change to Promise.resolve is just exposing the fact that thenables were not being assimilated in the promise constructor either. Promise.resolve is just a shorthand for new Promise(resolve => resolve(x)).\nChrome's implementation is correct. That's what ypromise is doing too. It's hard to observe the difference, but ES6 promises are designed to be \"unwrapped\" on demand, i.e. when then is called.\n. Closing in favor of #257 \n. We could try writing a wrapper for test262 -> Mocha.\n. @bterlson that sounds great! I'll take a look at running the harness, but I'll also see if I can write a wrapper for Mocha since we'll be just running tests for builtin APIs, not syntax tests.\n. Some findings so far:\nMost of the current tests for builtins are written as a function that returns a truthy value if the test passed. This is easily wrapped for Mocha, but it obviously requires to dive into the code to understand what's going on when it fails. Having to read the code is actually reasonable considering most of the failing tests are edge cases that are hard to summarize in human readable language.\nThere are tests specifically designed with ES5 in mind, covering edge cases that come up in a system with getters and setters. Some of these are hard to pass with fallbacks in ES3. For example, Array.prototype.filter is supposed to define the items in the resulting array without triggering a setter if one is defined in Array.prototype. We'd have to decide if we want to skip these tests or rely on a sham for Object.defineProperty.\nSome specific tests are impossible to pass because they require something in the host environment. For example, there's a test for Array.isArray(Array.prototype) that is impossible to pass with a polyfill.\nPS: @jonathantneal TC stands for \"Technical Committee\".\n. js\nMath.min(Math.max(parseInt(iterable.length, 10) || 0, 0), 9007199254740991)\nI just realized this is actually incorrect in ES6 because parseInt('Infinity', 10) is NaN. Instead, we should probably do something like:\n``` js\nvar obj = Object(this);\nvar length = Number(obj.length) || 0;\n// we don't care about negative numbers since they won't enter the cycle\nif (length > 0) {\n    length = Math.min(Math.floor(length), 9007199254740991);\n}\n``\n. Another thing in my pull request that is useful is the test suite. Not the A+ suite, but the tests I was incorporating fromypromise`.\n. I think as long as we call them \"polyfills\" we should stick as closely as we can to the spec. The other use case of \"smaller, faster and non-compliant\" is covered by libraries such as Lodash.\nI haven't run this particular test suite in old browsers to see how it works. For other polyfills I'm working on ignoring some tests if the test is written using specific ES5 features that don't work in all environments.\nAlso, other polyfills will require a more complicated connection between test262 and Mocha, like the Promise test suite which has some weird asynchronous handling.\n. I agree in that we'll have to check on a case by case basis.\nSo should I update the test runner to look for tests in a tests folder or should I just copy-paste them like I did in this commit?\n. Closing this. I think the way forward is running the test262 harness. I'll experiment with that soon.\n. The main problem with the ES6 Loader is that the spec is unstable. It was even moved out of the ES6 spec and it's now in the WHATWG http://whatwg.github.io/loader/ and undergoing a mayor edit.\nWe recently had an internal conversation in which we decided that it was probably best to keep these services for polyfills and not for \"prollyfills\". That is, we want to include only features that have implementations in at least 2 different browsers. What do you think about that guideline?\n. In that regard we might want to serve two different things based on browser support:\n1. If the browser doesn't support the Loader, all of Guy's polyfill plus the System.register extension\n2. If the browser supports the Loader, only the System.register extension\nOr we could leave it to the user to decide which module format to use.\n. I like that idea! /cc @caridy\n. I wasn't aware of those tests!\nI'm planning on giving the new test262 harness a try and after that I'll check these tests out!\n. I still feel a little weird about polyfill dependencies. But you're right, I'll switch to dependencies and a performance.now polyfill.\nDo you think performance is an issue? We're shooting for correctness first.\n. @triblondon I'm getting Fatal error: Cannot read property 'browserName' of undefined\u0007 in the test code.\n. It looks like it finally passed.\n. @triblondon I didn't do anything. It was all Github magic! :open_mouth: \n. When is the deploy task run? If it's run by your CI, doesn't that conflict with people using the npm package as a library?\n. I was actually hoping you'd do it in prepublish so that I could use the service as an NPM dependency and do getPolyfillString({ version: '1.0.0', features: ... }).\n. Ok!\n. You can launch a local server using Grunt in the test task.\n. BTW I recenly tried something like this with grunt-simplemocha and grunt-run and it worked pretty well. You can define a functional task as:\n``` js\ngrunt.registerTask('functional', [\n  'start:polyfill-service',\n  'simplemocha:functional',\n  'stop:polyfill-service'\n]);\ngrunt.registerTask('test', ['unit', 'functional']);\n```\n. Whatever was requested. If the default set was requested, then respond with the default set.\nAnd the browser specific variants wouldn't apply.\n. Not a fan of \"fallbackUA\". We need the ability to, from the programmatic API, request a polyfill without a UA for cases like Autopolyfiller. What fallback UA would Autopolyfiller use?\nBut also as you've said, intuitively most people expect not to see an empty response for unknown UAs. I understand your concerns about certain devices having trouble parsing big JS files, but what about all those Android 2.3 variants out there? Are we sure user-agent is able to identify them all?\n. @jonathantneal no issue in that for loop. At the time the promise calls the then callback, it checks if all the promises have been fulfilled. It does that by counting how many were fulfilled and checking against promiseCount which is the count of promises in the array (which is not the length of the array because of holes). Since all then callbacks are called asynchronously, the value of promiseCount will be the same for all of them.\n. None at all. But wouldn't you rather copypaste the code or import it using a Grunt task or something like that instead of maintaining your own fork of it?\n. The readme seems to be totally outdated. It should be like this:\n``` js\nvar polyfill_service = require('polyfill-service');\nvar polyfills = polyfill_service.getPolyfillString({\n  uaString: 'MSIE 9.0',\n  features: {\n    'Object.assign': {\n      flags: ['always', 'gated']\n    }\n  }\n});\n``\n. If you're not going to use ASAP, then using the dependency is probably the best idea. I mean, the way it's written people can include thesetImmediatepolyfill in their request and they'll get relatively fast promises. But it's not documented anywhere and few people will know how to speed them up, so you might get some cases of people complaining \"why is this soo slooow?\".\n. @triblondon sure!\n. I meant not caching everything on startup. InsteadgetPolyfillString` could read everything on demand and the service could use https://www.npmjs.org/package/async-cache.\nI don't really need this, so I'll close it. But we can keep discussing if you find it interesting.\n. Cross-frame is a real thing. :ghost: One example in the wild is WYSIWYG editors which use iframes to isolate styles. Also at Yahoo we have teams using iframes to isolate code. And in the future with a Realm reflection API we might see even more code isolation using different realms.\n. I'm waiting for the Sauce tests. I'm guessing it needs some changes in the browser specific variants too.\n. Yeah just what I thought.\n\n. I'm confused by the approach taken for this polyfill. In browsers that are not IE but don't have getters and setter it tries to use __defineGetter__. If there's no __defineGetter_ it'll throw. However, in old IE if it doesn't support getters and setters it'll fail silently. What would be the correct behavior? Personally I think it should throw when it finds an accessor and the browser doesn't support them. It should be helpful for debugging.\n. Ok. Updated everything. There's a lot of error checking code. So much that I'm wondering if it even makes sense to have different versions for IE7 and IE 8...\n. Not in a hurry. I think it's much less controversial than #263. I'd love to get some feedback on that one.\n. Looks great! I'll try to set up monitoring to see if we run into those kinds of issues you mentioned with big bundles.\n. Maybe a couple of Test262 tests not passing in browsers that support Object.defineProperty. They won't pass anyway in older browsers.\n. I wasn't going for readability. I was avoiding the dependency. :P\nFair enough.\n. @Octane how about this?\njs\n// In your promise code\nPromise._enqueue = function (fn) {\n  setImmediate(fn);\n};\nThen users can overwrite _enqueue with whatever they see fit and you can add the require('timers') as a build step.\n. @triblondon you could remove the source polyfills/ folder from the package by having npm ignore it, but I guess you use git directly for deploying...\n. > What form do you get results in?\nThe most interoperable format seems to be tap.\n\nCould it be run through our Sauce integration?\n\nYes. But it needs a bit more work. I'll eventually dive into the code and see if I can contribute it back. Follow https://github.com/bterlson/test262-harness/issues/6.\n\nPresumably we have a ton of fails at the moment?\n\nYup. Most Array APIs have the length issue we've already been discussing. Some have others around mutability during iteration. I want to fix them all. We should also consider delegating to stuff in https://github.com/es-shims/.\n. I honestly don't have any guidance to give here. I'll think about it.\n. Do you have performance data? What kind of performance issues are you running into?\nclassList is implemented by polyfilling DOMTokenList which seems fair.\n. I'll be happy to help. A performance issue in classList would be pretty bad for everybody. However, keep in mind that the native implementation is very likely slower than string manipulation. See https://github.com/jquery/standards/issues/13 for some context (it's a few years old though).\n. So what you're saying is that you're wrapping everything in 'use strict' in Autopolyfiller, right?\nI don't think you should do that. Instead, we should `use strict' in each polyfill.\n. FWIW I haven't been using variants.\n\na bit of code that beacons the results of the detect back to the service\n\nTrust me, this is a security nightmare.\nI suggest sticking to a truthy value in detect.js and keeping an eye on the size of each polyfill while we rewrite them into a single file (I'll help).\n. We should totally make this happen. The how is a bit complicated. I guess I can create a grunt task that used the test262 harness. @hgl do you think these tests can be wrapped in a grunt task?\n. If Promise.resolve is correctly defined, then you can skip the ternary operator and use Promise.resolve(array[index])).then(getOnFulfill(index)) directly.\n. This is missing the case of the empty array. Promise.all([]) should be fulfilled with an empty array. Here you'd be getting a promise that is never fulfilled.\n. This is missing returning the promise.\n. As per the ES6 spec, if value instanceof Promise and the constructor of value is the value of this, then you need to return value. See http://people.mozilla.org/~jorendorff/es6-draft.html#sec-promise.resolve.\n. race is different from all in that empty arrays do return forever-pending promises. The reasoning is that Promise.race([]) acts as the 0 in its algebra. For example: consider:\njs\nvar result = Promise.race([Promise.race([]), Promise.resolve(42)]);\nThe result will be a promise fulfilled with 42 because the empty array is ignored.\n. This should be:\njs\nresolve(array[index])).then(onFulfilled, onRejected);\nIn a race the first one wins, including the rejected promises. Also, you don't need to create the callbacks every time.\nIt's really simple. See https://github.com/yahoo/ypromise/blob/master/promise.js#L301-L316 (I need to update it to support iterables)\n. I was trying to update ypromise to make it work with iterables and I realized that slice.call(arrayLike) is not enough. For example slice.call(true) returns [] when it should throw a TypeError. We'd probably need something like Array.from, but then the polyfill in es-shims doesn't support iterables... https://github.com/es-shims/Array.from.\nSo for now I think I'll be sticking to just arrays.\n. I mean in race it should be the other way around: it shouldn't resolve the promise if the array is empty. It should be left forever pending.\n. I'm not sure. See:\n``` js\nArray.prototype.every.call(42, function () {})\n// true\nPromise.all(42).catch(console.error.bind(console))\n// TypeError: Argument 1 of Promise.all can't be converted to a sequence.\n```\n. It looks that way in Chrome. It's probably temporary. Firefox supports iterables:\njs\nfunction* foo() { for (var i = 0; i < 5; i++) yield i; }\nPromise.all(foo()).then(console.log.bind(console))\n// Array [ 0, 1, 2, 3, 4 ]\n. That might be a bug worth reporting to each browser.\n. It's probably a conscious compromise on their part, not a bug per se. But opening an issue wouldn't hurt.\n. ",
    "maxnordlund": "This could (should?) be combined with live data from users of the service. This means it would adapt as new browser versions come out.\n. Has anything happened with this? It would be a very sweet thing to have :smile_cat: \n. Actually Travis doesn't allow PR tests to use encrypted environmental variables.\nhttp://docs.travis-ci.com/user/pull-requests/#Security-Restrictions-when-testing-Pull-Requests\n. Well you could use something like https://github.com/twbs/savage\n. However it would be nice if Travis didn't always fail, so just skip Sauce Labs per the example in the documentation above for PR:s.\n. I also would like to know the status of this. How's it going? What needs to be done in order for this to work?\n. Lovely, it would be a very welcome addition I think if you could pull it off.\n. Yes, I missed it. Will fix it right away.\n. Why shadow the done parameter here? Maybe just rename the parameter to _done instead. I also think this causes deoptimization, but is probably negligible in this case.\n. No problem, always happy to help.\n. ",
    "wheresrhys": "I'm not sure I like the idea of choosing n detects. As you say, it would need cycling, with caching implications. Why not wrap the entire bundle in an uber-closure and judge each feature in situ?\n(function () {\n  var features = {X: false, Y: false}\n  if (detectX) {\n       features.X = true; \n    //polyfill X\n  } \n  beacon(features)\n});\nPhase3 idea\nWrap the polyfill in a try/catch. In the catch beacon the ua and polyfill name and (mayeb) some error information (or, minimally, just the fact it's errored), then rethrow the error. It's not quite the same as 'was it polyfilled perfectly?', but is a strong proxy for 'was it polyfilled satisfactoriily?'. Caveat - would only work for mainly synchronous polyfills. \nWould it be worth considering a lightweight data store such as redis from the start so that data persists across restarts \n. The 'live node list' requirement sounds tricky. I have no requirement for\nthis any more, so don't keep open on my account\nOn Friday, 18 March 2016, Andrew Betts notifications@github.com wrote:\n\n@wheresrhys https://github.com/wheresrhys do you still want this?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/169#issuecomment-198256407\n\n\n\nThis email was sent by a company owned by Financial Times Group Limited \n(\"FT Group http://aboutus.ft.com/corporate-information/#axzz3rajCSIAt\"), \nregistered office at Number One Southwark Bridge, London SE1 9HL.\nRegistered in England and Wales with company number 879531. This e-mail may \ncontain confidential information. If you are not the intended recipient, \nplease notify the sender immediately, delete all copies and do not \ndistribute it further.  It could also contain personal views which are not \nnecessarily those of the FT Group.  We may monitor outgoing or \nincoming emails as permitted by law.\n. Sounds sensible. I'll do a PR sometime hopefully.\n. I got a helpful reply from phantomjs (see above). Haven't had time to do a PR yet, but the info is there anyone else feels like taking it on.\n. Researched a bit more. Phantomjs has basically always used webkit 534.34, which doesn't map to any safari version\n\nMaps a bit better to chrome 12 but not perfect\n\nMaybe best is to go with safari 5 and over-polyfill\n. what a pleasantly easy fix. But I take it this would need a polyfillservice release? In the meantime CustomEvent|always should fix it for us?\n. It hasn't changed for ages and was supposedly tackled here https://github.com/Financial-Times/polyfill-service/issues/208\n. chrome defines screen.orientation as an object, one of whose properties is (I think) equivalent to the string defined in the W3C spec\n. fixes https://github.com/Financial-Times/polyfill-service/issues/402\n. Should this be in the default set of polyfills?\n. Good point about orientation changes. I'll mull over the best\nimplementation. Maybe a getter? Or could watch events. Which'd you prefer?\nOn Monday, June 15, 2015, Andrew Betts notifications@github.com wrote:\n\nMerged #403 https://github.com/Financial-Times/polyfill-service/pull/403\n.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/403#event-330573422\n.\n\n\n\nThis email was sent by a company owned by Pearson plc, registered office at \n80 Strand, London WC2R 0RL.  Registered in England and Wales with company \nnumber 53723.\n. If polyfill.io acid test page is ready coudl just load it in a device (I believe you coudl borrow one from Dillip)\n. Sort of duplicates https://github.com/Financial-Times/polyfill-service/issues/421\n. Amended as requested. It will not pass the darn tests though. I'm unsure whether this is a problem with the pipeline, with my code or with my tests https://travis-ci.org/Financial-Times/polyfill-service/builds/97417131#L3229\n. That's a bit small - what does it say?\n. It would be great to have the ability to run the tests for a single polyfill in a local browser. That way a contributor can get very quick feedback on simple mistakes they've made (e.g. I had a syntax error). The simplest solution for this I can think of would be to write a wrapper around karma which would enable something like grunt unit-test PageVisibility --browser Chrome. This needn't be used at all as part of CI, but would be a handy dev tool\nAll your other suggestions above are also good for verifying a polyfill works cross browser, but having to run tests via saucelabs when developing a new polyfill from scratch slows down the time to find big mistakes in the code which would affect any browser.\nRegarding the npm idea, I like that too. I think there's a case for polyfill service to have its own git organisation, with each polyfill it's own repo. That way infrastructure (the service) and content (the polyfills) can be separate.\n. Good. That's not documented though, is it?\n. specifically, 'grunt dev' isn't mentioned in the contributing guide\n. http://caniuse.com/#feat=picture says it's supported in v46, but given it jumps from v 4.4.4 to 46, I don't really trust that table so going with *\n. Are Github always right? This is awful UI\n. and it goes without saying it shouldn't be part of the default set\n. I wouldn't say so, but worth considering on its own merits. \n. ... which is no worse than current behaviour e.g. on next every browser gets a copy of fastclick. This will enable us to stop sending it to any browser released in the past year or so\n. I'm tidying up all my old open issues. Reopen if this is still needed, which I sincerely doubt. Nope. This is about inline svg\nOn Friday, 18 March 2016, Andrew Betts notifications@github.com wrote:\n\nAssigned #595\nhttps://github.com/Financial-Times/polyfill-service/issues/595 to\n@wheresrhys https://github.com/wheresrhys.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/595#event-594411622\n\n\n\nThis email was sent by a company owned by Financial Times Group Limited \n(\"FT Group http://aboutus.ft.com/corporate-information/#axzz3rajCSIAt\"), \nregistered office at Number One Southwark Bridge, London SE1 9HL.\nRegistered in England and Wales with company number 879531. This e-mail may \ncontain confidential information. If you are not the intended recipient, \nplease notify the sender immediately, delete all copies and do not \ndistribute it further.  It could also contain personal views which are not \nnecessarily those of the FT Group.  We may monitor outgoing or \nincoming emails as permitted by law.\n. Not currently.\nIt can cause sites to be pretty unusable in IE8 e.g. in the previous incarnation of o-header the inline svg used for the logo caused a lot of layout breakages. But conditional comments offer a way round the problem\n. possibly not 'need' but I think for some it could be useful for visualisation (e.g. load an image using HTMLPictureElement, display a simple layout with html5 elements) and easier to code than writing some javascript to test behaviour. The aim is to provide an at a glance reference, so if the feature being polyfilled is visual in nature, why not take advantage of that\n. And yes, it would be excellent if caniuse + kangax + polyfill.io + vendors could coordinate on building a canonical, granular feature support resource\n. As jake said, far more user friendly. Something like I've described would help both polyfill.io and its consumers easily see the gaps in polyfill coverage. e.g. https://github.com/Financial-Times/polyfill-service/pull/612 is a direct result of the POC I did for next. It takes a few seconds to load and run, even on rubbish old devices\nI didn't realise test-director did what it did though. As a first step, including a simpler summary of the results and rebranding it as a tool for consumers not just contributors would be good a step forward.\n. Yep, but I would also advocate/prefer a button that opens a page with only your browser as adding an extra column would not in itself make this more user friendly\n\nThe implementation could be as simple as hiding most of the UI with CSS if a query string is present\n. According to mdn https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find, safari desktop was out by a decimal point too\n. Could ios_firefox/ios_chrome fallback to ios_saf if not defined for a polyfill? More likely to hit the mark than falling back to no polyfills\n. spoke to Jake, and various plans already in the pipeline (notably, move to browser stack and smart polyfill config) will make this issue melt away into nothingness\n. I was thinking about smarter oversight. Something like\n- diff with master\n- if diff is restricted to config.json check which browsers are affected\n- if covered by saucelabs, run the tests in that browser, if not, pass with a warning. \n. Didn't fancy typing it all in, but it was pretty generic, android 4.4.2 and\nWebKit 534.30, being the salient properties. I can try to get the full\nstring later\nOn Friday, 18 March 2016, Andrew Betts notifications@github.com wrote:\n\nDoing (b) is supported as long as the browser identifies itself as\nsomething other than generic android. What's the UA? Related to #652\nhttps://github.com/Financial-Times/polyfill-service/pull/652\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/653#issuecomment-198207474\n\n\n\nThis email was sent by a company owned by Financial Times Group Limited \n(\"FT Group http://aboutus.ft.com/corporate-information/#axzz3rajCSIAt\"), \nregistered office at Number One Southwark Bridge, London SE1 9HL.\nRegistered in England and Wales with company number 879531. This e-mail may \ncontain confidential information. If you are not the intended recipient, \nplease notify the sender immediately, delete all copies and do not \ndistribute it further.  It could also contain personal views which are not \nnecessarily those of the FT Group.  We may monitor outgoing or \nincoming emails as permitted by law.\n. Will get the string ASAP to verify, but my gut feeling is the UA sniffing is fine; the problem lies in polyfill.io only making a distinction based on android OS version and ignoring the rendering engine\n. probably not. Not tested recently though\n. Very closely related, but probably different. \n\nI do get a 'Symbol' is undefined error, however.\n\nsuggests that perhaps core-js's Symbol polyfill isn't part of the problem here (unless the code that throws that is not babelifed whereas other code on the page is)\n. From working on this PR to implement array iterators https://github.com/Financial-Times/polyfill-service/pull/726, and which originally contained DOM collection iterators too, it looks like the problem is caused by attaching  Symbol to a DOM collection (as @victorwhy also points out above https://github.com/Financial-Times/polyfill-service/issues/715#issuecomment-223039151). \n. I'm going to take on domTokenlist and nodelist as they are the most useful cases and the easiest to write tests for\n. https://github.com/Financial-Times/polyfill-service/pull/798 tackles DOMTokenList and NodeList\n. NodeList was the only one we needed\n. Does this mean\n- each polyfill is built separately and has its own copy of the shared code\n- all polyfills in a bundle share a single copy of the shared components\nFor the example you provide both woudl give the same result but e.g. for polyfilling all the different iterator types the former would mean lots of duplication (though with a much improved workflow \ud83d\udc4d )\nIf the latter is hard to achieve, could the following be achieved in stead: \nFor cases where\n- a number of polyfills share some underlying functionality\n- when a user wants one they probably want them all\n- these polyfills are aliased to some word e.g. iterables = Arry.prototype.@@iterator + NodeList.prototype.@@iterator + ....  \nthen a bundle for that alias will be constructed that does share code between polyfills?\n. sounds like an excellent move in general then\n. Is there anything blocking this getting merged. Once it has been I'll get to work polyfilling all those iterators\n. It fails in IE because of lack of support for Function.prototype.name. It will always fail in ie 6 & 7 for this reason as not polyfillable here.\nSo I propose setting the name property in the polyfill, adding a dependency on a  Function.prototype.name polyfill to ensure spec compliace as far back as possible, and either\na) removing the tests for iterator names \nb) removing the ability to serve these polyfills to ie6 - 8\n. When it comes to polyfilling iterators, unless we have some way of sharing\ncode between polyfills there'll be a big hit to the bundle size because,\naside from about 3-4 lines of code, each polyfill is identical and not\ntiny. So investigating and solving this problem is well worth it. I might\nspend some time on it later this week.\nAside from that, is it worth marking polyfills as beta for the first month\nor two of their existence?\nOn Wed, 15 Jun 2016 at 2:45 am, Andrew Betts notifications@github.com\nwrote:\n\n@wheresrhys https://github.com/wheresrhys regarding your comment\nhttps://github.com/Financial-Times/polyfill-service/pull/728#issuecomment-225525572,\nthe issue i'm having with commonjs builds is that something in the\nbrowserify wrapper code is interfering with some of our very-legacy\npolyfills, potentially because it is already polyfilling those things. I\ndidn't get any further than confirming that reverting to copy-pasting the\nsource code into the polyfill.js file in the case of fetch fixes the\nproblem.\nBut it seems worth being aware of the fact that browserifying a bundle\nmight cause issues in polyfills that don't themselves require\nbrowserifying. I'm a bit worried about this, and how we aren't really\ntesting those scenarios, so I'm leaning towards backing out the commonjs\nsupport unless we can control these risks more effectively.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/726#issuecomment-226066461,\nor mute the thread\nhttps://github.com/notifications/unsubscribe/AAbUR-PNtkMty4TU1Q1thJleQ_xT1Badks5qL1lTgaJpZM4Iuws9\n.\n\n\n\nThis email was sent by a company owned by Financial Times Group Limited \n(\"FT Group http://aboutus.ft.com/corporate-information/#axzz3rajCSIAt\"), \nregistered office at Number One Southwark Bridge, London SE1 9HL.\nRegistered in England and Wales with company number 879531. This e-mail may \ncontain confidential information. If you are not the intended recipient, \nplease notify the sender immediately, delete all copies and do not \ndistribute it further.  It could also contain personal views which are not \nnecessarily those of the FT Group.  We may monitor outgoing or \nincoming emails as permitted by law.\n. woo! cheers for finishing this off. I may tackle DOM iterators next week\n. This is also failing in ie8 and is a commonjs polyfill https://github.com/Financial-Times/polyfill-service/pull/726. Could you provide me with steps to easily diagnose if it's suffering from the same issue\n. woop! \n. @JakeChampion @triblondon ETA of this being merged and released?\n. Is this for ... of over a nodelist or similar DOM collection? They are not supported yet, but hopefully will be within the next few weeks\n. Possibly fixed in https://github.com/Financial-Times/polyfill-service/pull/798\n. For new syntax introduced in ES6 (e.g. const, for ... of) you still need to preprocess your code with something like Babel as in older browsers it will throw a parse error. Polyfill.io is limited to  providing new APIs introduced in ES6/the  web platform which are still valid ES5 syntax e.g. Promise, Set, Map, Symbol*, Symbol.iterator.\nIn the case of for .. of, despite still needing to babelify your code, there is still an advantage in using polyfill.io as it means you can use the {polyfill: false} option in the babel-runtime plugin, which can greatly reduce the size of your javascript bundle.\n*although Symbol  - because it introduces new values to the typeof operator - is a more difficult case\n. The baseline version number for samsung is 4, https://github.com/Financial-Times/polyfill-service/blob/master/lib/UA.js#L35, so perhaps the behaviour of unknown=polyfill for browsers which are recognised, but below the baseline version, should be altered to treat them the same as unknown UAs. Although this risks delivering some polyfills which are known to be incompatible with the browser.\n. It should be configured correctly https://github.com/Financial-Times/polyfill-service/blob/master/tasks/buildsources.js#L98-L100. What's the polyfill.io url you're calling?\n. yep - I have the annoying habit of submitting PRs as part of my personal QA workflow. It should now pass all tests\n. I'm gonna add samsung browser first\n. @AdaRoseEdwards Jake tells me you're the samsung browser config guru. Would you mind fleshing out these configs to include samsung browser (It'd be good to also revisit Array.prototype.@@iterator, values, keys and entries as they don't target samsung, and are also a blocker for us turning off core-js Symbol & iterator polyfills in favour of polyfill.io)\n. I was originally thinking about some other FT proxy services where we maintain a node backend that doesn't do much other than jsonp. Generating jsonp in the vcl would save money, and improve reliability and latency. For polyfill.io you'd get a higher cache hit rate, with all the benefits that brings.\nCons... people are always rather wary of ESIs, which I can never fully understand, but I believe it mainly revolves around divergence of prod and dev environments. For something as small as wrapping a request's body in a few bytes of text that have a very speciific non-scope-creepy purpose, and where writing unit tests for the CDN is very achievable, and where a separate service/endpoint to deliver the ESI doesn't need to exist (all done in vcl_error), then I think the cons are vanishingly small. The other con would be adding complexity to the VCL, which is always a risk.. but again, the CDN is unit-testable.\nOn balance, it may not be worth it, but as @triblondon is a VCL fan I thought I'd share\n. Hello. I wrote this specifically to deal with this issue https://github.com/Financial-Times/babel-polyfill-silencer. Once integrated with your webpack build and required at the beginning of your client side code, then as long as you don't call typeof in any babelified code before loading the polyfill url it should work ok. It may even work if you're calling typeof iAmNotASymbol, but I haven't tried it out.\nIt should be possible to adapt the module/ideas to work with other build systems such as browserify too.\n. Probably not worth the bother if it's difficult - thought it may have been an oversight/regression that'd be easy to fix.\n. not of the tests, but ft.com is fixed by forcing Array.from and Map to be bundled on BB10, which is reasonable evidence that this is ok. I'll work on running the tests this afternoon though\n. \n. > Check reliable sources of browser support information, e.g. MDN, caniuse and Kangax. Tell us what these sources say about the browser/polyfill combo that you want to add or remove, and link to the relevant pages from your PR.\nSources are hard to come by for BB devices e.g. not listed here https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\n\nExplain how you have tested support (or lack of) in the browser concerned. Ideally, include a screenshot of the relevant browser running our test suite for that feature.\n\nft.com uses Array.prototype.includes|always|gated at the moment, and the feature appears to be polyfilled correctly on BB10 devices\n. I'll verify properly on a bb7 & bb10 soon. Verified on bb10\n\n. Mainly that yes. It can add a week on to the time it takes to release something.\nPerhaps some way of warning the contributor/consumer of the existence of these grey areas would be a good compromise? I think the next to zero visibility of these gaps means they linger longer than necessary. manual testers wanted badge in the browser feature list?. What about the softer idea of just highlighting in the UI that there are gaps in the config? I may prototype something like an extra expandable row for each feature with details of which lesser-known browsers are targeted. Something a bit like this (imagine it's designed properly), and hidden by default\n\n. > That table is used to display the compat data, not the target ranges\nI'd say that distinction is only meaningful to maintainers (and possibly contributors). For consumers it looks like a table answering the question 'Will polyfill.io help me in this browser?'. So I think clear labelling is important as to the difference between the two types, but we shouldn't get too hung up on the distinction, which is more of an implementation detail (which will potentially melt away if we successfully moves over to autoconfig). But you would need to have the device at hand. With the previous idea I can\nknow I need to support bb10, and discover that a given polyfill is/isn't\nconfigured for it without having to pick up the device (we have 1 between\nabout 30 people). I can also look up several browsers at once.\nI like your idea too, but it doesn't solve the entire problem\nOn Wed, 1 Feb 2017 at 1:40 am, Andrew Betts notifications@github.com\nwrote:\n\n@wheresrhys https://github.com/wheresrhys @JakeChampion\nhttps://github.com/JakeChampion new idea inspired by discussion on #1065\nhttps://github.com/Financial-Times/polyfill-service/issues/1065:\nScrap the plan above and instead augment the Live test mode with an\nextra column showing whether the specified polyfill is targeted to your\nbrowser or not. This is better than the compat task idea because we only\ntest a minority of browsers in automation, and doing this would make it way\neasier to, for example, work out what needs updating when a new browser\nis released\nhttps://medium.com/samsung-internet-dev/updating-the-polyfill-service-33453bf3a2d5#.xof0cqppt\n(paging @AdaRoseEdwards https://github.com/AdaRoseEdwards for thoughts\non this too).\nThis doesn't solve the problem of 'minor' browsers being forgotten but\nlowers the barrier to adding them. I'm against enforcing a full sweep of\nbrowser target config, displaying all the targeting info for all browsers\nalongside the testing data produces an unwieldy UI, and in any case we are\naiming for sync between the testing data and targeting data; so I think\nthis is a better solution.\nMockup:\n[image: image]\nhttps://cloud.githubusercontent.com/assets/1735391/22492015/c6f4b77e-e86a-11e6-968a-abddb0a55071.png\nI don't do web design, but when I do, I do it in devtools.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1042#issuecomment-276549454,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAbUR2c04JiHSHlzlbSzixWhAzLpaQb-ks5rX-KGgaJpZM4Lcm2i\n.\n\n\n-- \n\nThis email was sent by a company owned by Financial Times Group Limited \n(\"FT Group http://aboutus.ft.com/corporate-information/#axzz3rajCSIAt\"), \nregistered office at Number One Southwark Bridge, London SE1 9HL.\nRegistered in England and Wales with company number 879531. This e-mail may \ncontain confidential information. If you are not the intended recipient, \nplease notify the sender immediately, delete all copies and do not \ndistribute it further.  It could also contain personal views which are not \nnecessarily those of the FT Group.  We may monitor outgoing or \nincoming emails as permitted by law.\n. Out of interest, could shielding be made to work for polyfill service?. Does polyfill.io have smoke tests built into its CI pipeline (we have code in ft.com you could canibalise). \nAlso, maybe canary releases should be a consideration given polyfill.io's web-breaking potential these days?. turns out both are supported\n. not any more \ud83d\ude04 \n. ",
    "ericf": "What would this look like from the developer's perspective? Would then include one external script the to Polyfill service's main endpoint, and another (or multiple) to the assets endpoint?\nParticular for the Intl.js polyfill's case, there's a dependency that the polyfill be there before one of its locale-data packs is loaded (in the case of the JS-based locale-data which calls a function on the polyfill to add the data). So there would be a dependency on order in this case as well \u2014 as @juandopazo depicts in his example URL where the en-UK data comes after intl in the list of polyfills.\nI also think it would be great if we could figure out a way to declare and add a polyfill's assets to the single response (assume the assets are JavaScript) so the story for the developer remains simple, and they won't be loading a polyfill's assets in browsers that don't actually need that polyfill.\n. Cool, so looks like #377 should work. Thanks for making the change!\n. Right now the Safari TP is still using 9.x, but my guess is that the Safari version number will be 10 once this is released to the general public.\n. ",
    "bakura10": "Hi,\nI'd be very interested about that too. Any development done for including Intl? :)\nThanks!\n. ",
    "caridy": "More and more people asking us how to load the Intl polyfill, let's make this happen.\n. I like Intl/~locales/en-GB. I don't think we need to provide sugar to load multiple locales at once, because that's not very common, you normally load one, and en is built-in in the library. If they can do: featues=Intl&Intl/~locales/en-GB&Intl/~locales/fr-FR it will be enough in case they really want to do such thing.\n. agree, #377 looks good, and it looks far more flexible than what we have internally.\n. @triblondon I'm back from sabbatical, I will give it a try in the next few days.\n. the suggestion from @guybedford seems reasonable. we should have a more clear picture of what will be the first implementation of the ",
    "slorber": "+1 and it would be nice to be able to specify by query string the languages we want to load data for\n. Thanks for these infos, it'll certainly be useful to more people than just me ;). ",
    "johanneslumpe": "Just as @slorber said, being able to only load the locales we want would be a huge plus here. Instead of having to push down all the available locales out there.\nBut in general: really looking forward of having this available.\n. @sebastienbarre No that actually works :) And I'll stick with that for now. But it might be nice to now having to bundle this for browsers which already support Intl\n. ",
    "sebastienbarre": "@johanneslumpe This doesn't do the trick for you?\nrequire('intl/Intl');\n  require('intl/locale-data/jsonp/en.js');\n  require('intl/locale-data/jsonp/fr.js');\nto load en/fr, as opposed to:\nrequire('intl');\nWhich brings everything.\n. ",
    "kellylawson": "I've been trying to find a decent solution to this problem all day and just stumbled across this issue.  The solution looks perfect - when will it be available?\n. ",
    "annevk": "We might expose a few extra features, but I suspect the basic idea will remain the same (and has remained the same, mostly body exposure that changed a bit). It'll be stable once two browsers ship, so ideally we get some experience before then. Probably still have a couple of months.\n. ",
    "azproduction": ":+1: up, anyway it is impossible to install it via git:// without version in package.json\n. Yes, it does not matter if polyfill-service works as http service. But that time is critical if polyfill-service is used as a library. \nI am maintainer of autopolyfiller, now it uses the ancestor of polyfill-service and I am planning to migrate to polyfill-service as it much more stable. Startup time is critical for me, so I can not simply use API of polyfill-service. I can just list polyfills directory and do the rest myself, which is, imo, I should avoid.\n. > We should run the build process (transpiling, minification, etc) using the 'install' script in the package.json.\nThat would be awesome :+1: \n. I'll try to improve a bit variant of @hgl.\nWe could use Modernizr or Modernizr-ish feature detection with manual/runtime feature resolve.\n- our feature tests will be formed as a code, not just file with JS expression: eg.\n- possible to use without relaying on UA-string (runtime feature resolution).\nRuntime resolution\n``` js\nfunction supports(what) {\n    // vvv the code below is generated vvv\n    if (what=== 'Array.prototype.forEach') {\n       return Boolean(Array.prototype.forEach);\n   }\n// ...\n}\nif (supports('Array.prototype.forEach')) {\n    // Apply common polyfill part\n    if (supports('Smth.else')) {\n        // Apply spec. polyfill condition\n    }\n}\n```\nUser Agent-based resolution (we already know what they support)\n``` js\nvar supports = {\n     'Array.prototype.forEach': true,\n     'Smth.else': false\n};\nif (supports['Array.prototype.forEach']) {\n    // Apply common polyfill part\n    if (supports['Smth.else']) {\n        // Apply spec. polyfill condition\n    }\n}\n```\nWhich will be minified as\njs\n// Apply common polyfill part\n. ",
    "monolithed": "Will there be any movement on this the issue?\n+1\n. #### jonathantneal's:\nPromises/A+ 266 passing / 593 failing\nOctane's\nhttps://github.com/Octane/Promise\nPromises/A+ 872 passing + 55 own tests\nI suggest using Octane's polyfill\n. @jonathantneal, I could not find the Document.getElementsByClassName.\nDo you have a list of things that still have to be implemented?\n. The native getElementsByClassName very useful and high-performance method. \nHowever, the practical significance of this polyfill, no less.\nThis polyfill ensures the safety of using third-party libraries, because they can use this method\n. +1 for 6to5\n. @triblondon, please see the comparison to other transpillers. \nIn any case, you should try it yourself :yum: \n. +1\n. What are we waiting for, guys? :)\n. +1.\n. @triblondon, \nA possible solution to the first problem \u2014 a central polyfill archive / repository. \nThe second problem can be solved by the Autopolyfiller\nHowever, to solve the second problem to be solved first.\nIt is for this reason the Autopolyfiller still uses @jonathantneal's polyfill\nAnd I'd like to draw your attention to the following issue/idea\n. Perhaps someone will be interesting my grunt-task :yum:\n. I like, but do you mean unknown option? \n. @triblondon, \nDo you mean this dummy code?\n \n. Why not use the setImmediate polyfill?\nActually, there's no reason to keep this code in the polyfill:\n``` js\n    setImmediate = setImmediate || function (func) {\n        var args = Array.prototype.slice.call(arguments, 1);\n    return setTimeout(function () {\n        func.apply(null, args);\n    });\n};\n\n```\nMy user-case:\n``` js\nuaString: 'MSIE 9.0',\nfeatures: {\n    'Promise': {\n        flags: ['gated']\n    },\n'setImmediate': {\n    flags: ['gated']\n},\n\n}\n```\n. >  I think we should adopt Eli's polyfill and have a more complex detect (albeit one that still returns true or false)\nThere're some problems with code coverage https://github.com/eligrey/classList.js/issues/38\nI propose using a polyfill of WebReflection \n. I mean\nnpm install polyfill-service@1.1.0\nfind node_modules/polyfill-service/polyfills/ -name fetch\nWhere is the fetch method?\nAlthough there's in the master branch\nI propose to make a separate repository like polyfill-service-db.\n```\n// polyfill-service package.json\n\"dependencies\": {\n      \"polyfill-service-db\": \"^0.0.1\"\n}\n```\nIt seems like more reasonable\n. Got it, thanks!\n. #### 1. The Travis CI build failed\nRunning \"saucelabs:ci\" (saucelabs) task\nSauce job name: grunt-test-travis-build:737\nWarning: SAUCE_USER_NAME and SAUCE_API_KEY must be set in the environment\u0007 Use --force to continue.\nAborted due to warnings.\n2. Where is the tests?\n\n. @triblondon,\n1. All tests passed successfully\n2. Need help with detect.js  (maybe the problem is solved) and Travis\n. \nSee the log\n. @matthew-andrews, \nIs it requires a collaborator status?\n```\n\u279c git push origin '#273-URL'\nERROR: Permission to Financial-Times/polyfill-service.git denied to monolithed.\nfatal: Could not read from remote repository.\n```\nAny ideas? :)\n. @triblondon, @matthew-andrews, @samgiles, @jonathantneal, guys, help with the problem.\n. Good idea!\nI propose to use package.json format like\n``` json\n\"name\"       : \"URL\",\n\"version\"    : \"1.0.0\",\n\"author\"     : \"Mail.Ru Group Limited\",\n\"description\": \"https://url.spec.whatwg.org/\",\n\"man\": \"README.md\"\n\"os\" : [ \"darwin\", \"linux\", \"!win32\" ]\n\"cpu\" : [ \"x64\", \"ia32\" ]\n\"maintainers\": [\n    {\n        \"name\" : \"Alexander Abashkin\",\n        \"email\": \"a.abashkin@corp.mail.ru\"\n    }\n],\n\"repository\" : {\n    \"type\": \"git\",\n    \"url\" : \"git@gitlab.corp.mail.ru:cloud/aviary.git\"\n},\n\"licenses\": [\n    {\n        \"type\": \"MIT\",\n        \"url\" : \"http://www.opensource.org/licenses/mit-license.php\"\n    }\n]\n```\n. @triblondon, thanks for the one!\nI have no any objections, but I don't understand why do the minifier's job? :)\n. Ok, I'll try to explain.\nCan not use the polyfill-service as a service:\nOur projects visited by tens of millions of daily users.\nWe can not depend on a third-party project. That is why all our content is located in own data centers.\nOutdated package:\nPrerequisites for this issue\nThere are no the latest polyfills in the npm package (the most problem) \n. > Surely you can use the npm package as a library without running the service code?\nNope, it requires some exports like getPolyfillString. \n\nWe'd still have to run the full compatibility suite test before making a new npm release of the library. The only effect that splitting it up might have is to increase the frequency of service releases, because it's no longer tied to the more rigorous compatibility testing process for the library.\n\nWhy this problem can not be solved by versioning with ^ specifier or shrinkwrap file?\n\nYou could just state the polyfill-service dependency in your package.json with a full github URL rather than the npm package name.\n\nUnfortunately, this is not the best solution for us, because we use a local npm-repository with closed external outgoing connections (standard practice for many companies) \n. Why Array.isArray has been replaced with String.prototype.toString.call?\n. @jonathantneal, you'd use the A+ adapter:\n``` js\n'use strict';\n/* @see https://github.com/promises-aplus/promises-tests /\nvar Promise = require('../index.js');\nmodule.exports = {\n    deferred: function () {\n        var deferred = {};\n    deferred.promise = new Promise(function (resolve, reject) {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n\n    return deferred;\n},\n\nresolved: function (value) {\n    return Promise.resolve(value);\n},\n\nrejected: function (reason) {\n    return Promise.reject(reason);\n}\n\n};\n```\nAnd some custom tests like https://gist.github.com/monolithed/d18df15e2e6423d5c0f2\n. Yup, https://github.com/Financial-Times/polyfill-service/pull/322\n. ```\n\u279c npm install polyfill-service\n\nfsevents@0.3.1 install /usr/local/www/node_modules/polyfill-service/node_modules/6to5/node_modules/chokidar/node_modules/fsevents\nnode-gyp rebuild\n\ngyp ERR! configure error \ngyp ERR! stack Error: Python executable \"python\" is v3.4.1, which is not supported by gyp.\ngyp ERR! stack You can pass the --python switch to point to Python >= v2.5.0 & < 3.0.0.\n```\nThe problem has been solved, partially:\n\"scripts\": {\n    \"install\": \"export PYTHON=python2.7\"\n},\nBut not completely:\n```\n\nfsevents@0.3.1 install /usr/local/www/node_modules/grunt-polyfill-service/node_modules/polyfill-service/node_modules/6to5/node_modules/chokidar/node_modules/fsevents\nnode-gyp rebuild\n\nchild_process: customFds option is deprecated, use stdio instead.\n  SOLINK_MODULE(target) Release/.node\n  SOLINK_MODULE(target) Release/.node: Finished\n  CXX(target) Release/obj.target/fse/fsevents.o\n  SOLINK_MODULE(target) Release/fse.node\n  SOLINK_MODULE(target) Release/fse.node: Finished\nnpm ERR! Failed resolving git HEAD (https://github.com/matthew-andrews/fetch) fatal: bad object 9fe698067f2667f0dcc9aca6e56fcd14274143cf\nnpm ERR! Failed resolving git HEAD (https://github.com/matthew-andrews/fetch) \nnpm ERR! Darwin 14.1.0\nnpm ERR! argv \"node\" \"/usr/local/bin/npm\" \"install\"\nnpm ERR! node v0.12.0\nnpm ERR! npm  v2.5.1\nnpm ERR! code 128\nnpm ERR! Command failed: git rev-list -n1 9fe698067f2667f0dcc9aca6e56fcd14274143cf\nnpm ERR! fatal: bad object 9fe698067f2667f0dcc9aca6e56fcd14274143cf\n```\nWe'd move 6to5 to optional dependencies or use babel-core instead\n. Fixed in https://github.com/Financial-Times/polyfill-service/issues/319\n. Done\n. The problem has been solved by removing .git\n. > Relatedly, should releases to NPM sync perfectly with releases to the CDN? Would it be better to make only minor releases to the CDN, but push a more frequent stream of less-well-tested patches to NPM?\nIt's more than reasonable, but what about critical patches?\n. @matthew-andrews \nThere is no no guarantee for backward compatibility of new versions\nFor example, my grunt plugin is broken for several weeks, by reason of:\n\"polyfill-service: '^1.1.0'\n^ \u2014 used to guarantee full backward compatibility, but polyfill-service does not!\n1.2.0 (broken)\nnpm install polyfill-service@1.2.0\nhttps://github.com/Financial-Times/polyfill-service/issues/331\n1.3.0  (broken)\nnpm install polyfill-service@1.3.0\nhttps://github.com/Financial-Times/polyfill-service/issues/339, https://github.com/Financial-Times/polyfill-service/issues/340, https://github.com/Financial-Times/polyfill-service/issues/341\n1.2.0 was released a month ago!\nHow do you test?\nI'm afraid to use this project on live\nFor this and many other reasons, I have proposed to divide the project into two.\n. @triblondon,  I can not update my local npm repository for this one. Really, it blocks my work.\n. @triblondon, Maybe you'd pay attention to JSCS and Airbnb JavaScript Style Guide \n. npm install polyfill-service\n``` js\n// test.js\nvar service = require('polyfill-service');\nservice.getPolyfillString({\n    uaString: 'MSIE 7.0',\n    features: {\n        'Math.acosh': {\n            flags: ['always', 'gated']\n        }\n    }\n});\n```\nnode test.js\n\u279c node test.js \n/node_modules/polyfill-service/lib/sources.js:11\n    throw Error(\"No polyfill sources found.  Run `grunt buildsources` to build th\n          ^\nError: No polyfill sources found.  Run `grunt buildsources` to build them\n    at Error (native)\n    at Object.<anonymous> (/node_modules/polyfill-service/lib/sources.js:11:8)\n    at Module._compile (module.js:460:26)\n    at Object.Module._extensions..js (module.js:478:10)\n    at Module.load (module.js:355:32)\n    at Function.Module._load (module.js:310:12)\n    at Module.require (module.js:365:17)\n    at require (module.js:384:17)\n    at Object.<anonymous> (/node_modules/polyfill-service/lib/index.js:5:18)\n    at Module._compile (module.js:460:26)\nI don't want to do something like:\nnpm install polyfill-service\ncd node_modules/polyfill-service\nnpm install \ngrunt buildsources\n\nDid the buildsources task not work?\n\n```\n\u279c cd node_modules/polyfill-service\n\u279c grunt buildsources\ngrunt-cli: The grunt command line interface. (v0.1.13)\n```\n\u279c npm install # surprise #341\nPlease see my another issue https://github.com/Financial-Times/polyfill-service/issues/341\n. You'd install yourself\n. The problem is that many people can use a wide variety of tools like minifiers, concatenators, transplillers and son on. \nThe polyfills must be encapsulated and does not depend on the environment!\nThe following string:\njs\n }(this));\nShould be replaced with:\njs\n }(window));\nor \njs\n }(Function('return this')()));\n. > Potentially the easiest and cleanest solution would be to add a definition of this at the top of the closure that we output when we generate the polyfill bundle:\njs\n(function() {\n  var this = window || self;  // <-- New line added by service\n  // All applicable polyfill sources here\n})();\nNope!  this cannot be redefined!\nThe possible solution:\n``` js\n(function() {\n  'use strict';\n// ... polyfills\n}.call(window));\n```\n. @triblondon\nwindow (not exists in Workers environment) and self can also be redefined. \n``` js\nvar blob = new Blob( [ \n   'onmessage = function (event) { console.log(Function('return this')() === self);  }'\n]);\nvar url = window.URL.createObjectURL(blob);\nvar worker = new Worker(url);\nworker.onmessage = function (event) {\n    console.log(event.data);\n};\nworker.postMessage('hello');\n```\nWorks fine, but it can be blocked by CSP\nUncaught EvalError: Refused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of script in the following Content Security Policy directive: \"script-src assets-cdn.github.com collector-cdn.github.com\".\nHowever who in their right mind would use the polyfills with Worker? \nAnd window \njs\n'onmessage = function (event) { window }';  // Uncaught ReferenceError: window is not defined\nSo, self sounds more reasonable. \n. > so why not use window || self?\nWith your words, the polyfills should work in any environment:\n\nWe don't want to stop the polyfills from working in a web worker.\n\nBut, it's impossible when used window || self:\n```\nvar blob = new Blob( [ \n   'onmessage = function (event) { (function () { /* POLYFILLS / }.call(window || self)) }' \n]);\nvar url = window.URL.createObjectURL(blob);\nvar worker = new Worker(url);\nworker.onmessage = function (event) {\n    console.log(event.data);\n};\nworker.postMessage('hello');\n``\n.windowis not defined, andwindow||selfthrows an error likeUncaught ReferenceError: window is not defined`\nIt's like foo || self. foo\u2014 is not defined before\nPlease, try execute my example in your the console\n. > var window = this, self = this;\nIt doesn't make sense in WorkerGlobalScope\nWeb Workers don't have a window object and we do not have to add them in this environment. \nThis may affect the third-party code!\n. > Is there a CSP-safe way to check for the real global scope?\nNope, because this, window (web), self (workers) and global (node) can be redefined and eval code is blocked by CSP\nI like Function('return this')(), but CSP does not think so\n\nIs this always declared? Is self always declared (WorkerGlobalScope.self)?\n\nthis === self\n\nIf this and self are always declared, but there is no CSP-safe way to check for the global scope, may we fall back on a new object? If we fall back on a new object, should we expose it as self?\njs\nself = this || self\n\nWe should not export the window or self, because this may affect the third-party code!\n. @jonathantneal\n\nuse strict';\n\n@triblondon wrote\n\nif the polyfill wanted to set use strict, it could do so, but the reason use strict works in the way it does is to avoid breaking the web for code that already exists and would stop working if the stricter rules of use strict were applied.\n\nI fully agree with @triblondon\n. A similar discussion https://github.com/paulmillr/es6-shim/issues/301\n. https://github.com/Financial-Times/polyfill-service/issues/339\n. The second polyfill is not completed yet!\n. There's no the Promise polyfill in IE11\nhttp://cdn.polyfill.io/v1/polyfill.min.js \n. This because you are using the Quirks Mode\n. #### 1.4.0-rc.1\n```\n\u279c grunt test\nLoading \"polyfill-service.js\" tasks...ERROR\n\n\nError: Cannot find module '../polyfills/String.prototype.startsWith/polyfill'\nLoading \"polyfillService.js\" tasks...ERROR\nError: Cannot find module '../polyfills/String.prototype.startsWith/polyfill'\nWarning: Task \"polyfillService\" not found. Use --force to continue.\n```\n\n\nPS: I've tested with grunt-polyfill-service\n. ```\n\u279c grunt test\nRunning \"polyfillService:production\" (polyfillService) task\n\n\nFile \"tests/fixtures.js\" created.\n\n\nRunning \"nodeunit:tasks\" (nodeunit) task\nTesting test.js.OK\n\n\n1 assertions passed (10ms)\n\n\nDone, without errors.\n```\n1.4.0-rc.2 looks good\n. fetch is not a part of ES6. \nIt's a host object like WebSoket, FormData and so on.\n. No, I do not think so.\nMy project settings are stored with each specific project as a set of xml files under the  .idea folder.\n. Oh, where is my other tests?\n\n. Oh, typo.\nBut in this case:\njs\nreturn true\nError: expected false to be truthy\nReally dont understand ((\n. I do, but IntelliJ IDEA is one of the most popular IDE, strange that you did not know :)\n. ",
    "jussi-kalliokoski": "But in order to use this with a script loader, you need to be able to specify a callback, say define(\"polyfills\",function(){}); for RequireJS. For example in my case I have a project where there's webpack bootstrapping code (that takes care of loading other things asynchronously) injected as an inline script and then everything else is async. Currently there's no way for me to make sure that the polyfills load before the application code that needs them (the bootstrapping code doesn't) without loading the polyfills synchronously.\n. Yay \\o/\n. Nice, thanks!\n. ",
    "arthurvr": ":+1: I open a PR in a few houres\n. @jonathantneal  Thanks! I had this (and it seems to work):\njavascript\nMath.sign = function (x) {\n  x = +x;\n  if (x === 0 || isNaN(x)) {\n    return x;  \n  }\n  return x > 0 ? 1 : -1;\n};\n. > sometimes I just avoid isNaN because of things like isNaN(' '); // false\n@jonathantneal Another way could be (this one isn't using isNaN)\n``` javascript\nMath.sign = function (x) {\n    val = Number(val);\nif (x === 0 || x !== x) {\n    return x;\n}\n\nreturn x > 0 ? 1 : -1;\n\n};\n```\n\n115 merged, so issue closed.\n. @jonathantneal Created a jsperf (http://jsperf.com/math-sign-polyfill)\n. @mathiasbynens I'm going to update, but... ;-)\n\n. Finally, we have. Thanks @jonathantneal \n. Duplicate of #310. I was just 10 seconds quicker :)\n. @triblondon Yup, no big deal anyways :)\n. ",
    "kitcambridge": "@mathiasbynens Heh, I forgot about that screed. :smiley: It doesn't look like isNaN's type coercions apply here, since @jonathantneal's polyfill explicitly converts x to a number. Not sure if the slight performance gain offsets the clarity of isNaN vs. x !== x.\n. ",
    "atmin": "You're right. And \"doesn't clone text nodes\" is actually a non-issue.\nI've removed handling of text node case, it's non-reachable code and native cloneNode for text nodes works fine. Comment handling is still needed.\n(I'm using my DOM templating engine, jtmpl, for testing this, it relies heavily on cloneNode).\n. ",
    "Octane": "Hello.\nThe Promise polyfill is passing 872 tests of the Promises/A+ compliance test suite \n\ntry it\n$ git clone https://github.com/Octane/Promise.git\n$ cd Promise\n$ npm install\n$ npm test\nI wasn't trying to run mocha-based Promise/A+ tests in a browser, but I have 55 browser-based tests  in which there are tests for Promise.all and Promise.race (missing in the test suite).\nSupports IE8+\n\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\u2013\nUPD: I replaced my polyfil to your (modified for tests) and got the result:\n\n. How to better specify a external async scheduler?\nI do not want to become attached to a specific npm module.\nAny suggestions? I don't mind to fix it.\n. ",
    "spudly": "that was fast... thanks!\n. ",
    "usmonster": "This still an issue?\n. Looks like a duplicate of #145.\n. Any feedback from project collaborators on the outstanding questions mentioned above? @triblondon, @jonathantneal, et al.?\n. Thanks for the feedback, @triblondon! I'll take a look at what I can do.\nA compat mode test shouldn't necessarily depend on the UA string; one can just do something like isCompatMode =  document.compatMode!==\"CSS1Compat\";. If the shim turns out to only work in standards mode, should I use detect.js to prevent the polyfill from loading when in compat mode, or will the UA string be enough for the service to not even try to load it in those cases?\nAdding XHTML support should just be a matter of shimming textContent for certain node types that aren't really found HTML (e.g., CDATA).\nOkay for replacing dependency tests with dependency names in the config.\n. Ah, just wanted to be clear that when I say \"compatibility mode\" I'm not talking about IE's proprietary emulated browsing mode/feature. I mean the actual, standardized rendering mode of the document. For example, go to www.oocities.org in any browser and type document.compatMode in the JS console. It will have the value \"BackCompat\", which is to say, quirks mode. You can be in actual IE8 and visit one page that will render in quirks mode and then another that will render in standards-compliant mode. The browser/version doesn't matter, and the userAgent string won't change in either case--it's just a function of the page, which is why I'm still a bit wary of using the UA string.. Thoughts?\n. You're correct, document.compatMode is a standardized property completely unrelated to MS/IE or UA strings. I'll just do a bunch of testing to see where the shim might fail and decide which checks I need (one or both or none) based on that. Thanks again for the feedback!\n. Yes! Sorry there's been no movement; life. Thanks for the poke, in any case. I'll try to throw together a PR, or at least a new status update, in the next week or so.\n. ",
    "oising": "@usmonster Yes - at least with respect to what's live now, it's still an issue [on ie8]\n. ",
    "mikemclin": "@jonathantneal \nNo, I'm talking about being able to use min/max width media queries in your CSS.  This feature isn't implemented in IE8 and older.\nhttp://caniuse.com/#feat=css-mediaqueries\nMatchMedia is used for checking media queries in JavaScript.\n. @JakeChampion He was asking how to get the \"kitchen sink\" of polyfills for a browser.  It too am looking for that.. ",
    "aintgoin2goa": "From what I can tell all the polyfills are well below 10k when minified (biggest seems to be JSON at about 4k).  If we set the bar at 1k (minified) the excluded polyfills would be:\n- JSON   (3.87K)\n- getComputedStyle   (1.86K)\n- Promise   (1.86K)\n- matchMedia   (1.36K)\n- Navigator.prototype.geolocation   (1.25K)\n- Element.prototype.placeholder   (1.23K)\n- XMLHttpRequest   (1.10K)\n- localStorage   (1.07K)\nTests seems a bigger hurdle, from what I can see as it would exclude 43 polyfills including some potentially important ones:\n- Document\n- Element\n- Event.DOMContentLoaded\n- Function.prototype.bind\n- JSON\n- Object.defineProperties\n- Object.getPrototypeOf\n- String.prototype.trim\n- Window\n- getComputedStyle\n- localStorage\n- requestAnimationFrame\nPerhaps we might need to consider different metrics?\n. The following polyfills are < 1K and have tests:\n- Element.prototype.classList \n- document.querySelector \n- Array.prototype.reduceRight \n- Array.prototype.reduce \n- Array.from \n- Array.prototype.findIndex \n- Array.prototype.find \n- Array.prototype.contains \n- Array.prototype.filter \n- Array.prototype.some \n- Array.prototype.map \n- Object.keys \n- Array.prototype.forEach \n- Array.prototype.every \n- Array.prototype.lastIndexOf \n- Array.prototype.indexOf \n- Object.create \n- String.prototype.repeat \n- Event.focusin \n- Event.hashchange \n- Array.isArray \n- Array.of \n- Element.prototype.closest \n- Math.asinh \n- Math.acosh \n. Based on the above, and a look at the status of various specs, this is my suggestion:\n- Array.prototype.reduceRight \n- Array.prototype.reduce \n- Array.prototype.filter \n- Array.prototype.some \n- Array.prototype.map \n- Array.prototype.forEach \n- Array.prototype.every \n- Array.prototype.lastIndexOf \n- Array.prototype.indexOf \n- Array.isArray\n- CustomEvent\n- document.querySelector \n- document.getComputedStyle \u2020\n- Element.prototype.classList \n- Event\n- Event.focusin \n- Event.hashchange \n- Event.DOMContentLoaded \n- Function.prototype.bind \n- Object.defineProperty\n- Object.keys \n- Object.create \n- String.prototype.trim \n- JSON *\u2020\n\u2020 larger than 1k minified\n* has no tests\nWe should probably figure out which polyfills from the one's without tests are the most needed and prfioritize testing of those.\n. So, including the above means that the following following polyfills will be added to the default set\n- Event.DOMContentLoaded\n- Event.focusin\n- Event.hashchange\n- Object.assign\n- Object.create\n- Object.defineProperties\n- Object.defineProperty\n- Object.getOwnPropertyNames\n- Object.getPrototypeOf\n- Object.keys\nWith these the default set is 256B on Chrome and 14.5KB on IE8 when minified.\n. This might be more difficult than I first thought.  These are my test cases:\n- Should be able to update the dataset when a new data- attribute is added\n- Should be able to update the dataset when a data- attribute is edited\n- Should be able to update the dataset when a data- attribute is removed\n- Should be able to add a new data- attribute when a new item is added to the dataset\n- Should be able to edit the data-attribute when a dataset item is edited\n- Should be able to remove a data- attribute when an item is removed from the dataset\nThe first 3 are satisfied by the polyfill referenced in issue 48, but not the others - am not sure how to achieve this yet ...\n. I can't think of any way to correctly polyfill this feature.  You would need a way to successfully watch for new properties on a potentially large number of objects. Everything I've found online either work in one-direction only or are 'shims' rather than polyfills.\nAs this is a polyfill-service I'm guessing we don't do shims, but, in my opinion, that would be the better solution.\n. Webkit have implemented both the CustomEvent and Event interfaces as objects, rather than functions.  Fixing the detect and the service config is simple enough, however they seem to deviate from the spec in other ways - notable it is possible to instantiate both CustomEvent and Event without any parameters.  The spec shows the first param (the event name) as being required.\nCurrently this is causing tests to fail in Safari 8.\nNot sure of the correct approach from here, so can we discuss it at the meeting tomorrow?\n. Created new PR with just the config updates\n. ",
    "dy": "Ok, thanks for research.\n. It\u2019s ok, it\u2019s unlicensed so anycase I don\u2019t mind you're taking this code and doing whatever you want with it. But I have a concern regarding your code.\nAt first, it redefines natural constructor reference in prototype, so that now WeakSet.prototype.constructor isn\u2019t a WeakSet, but Object. It\u2019s not that criminal, but i believe it\u2019s a bad practice.\nAt second, I don\u2019t fully understand why you\u2019re making such a verbose iteration in constructor, where you could simply do like data.forEach(this.add);, as it is done for example in es6-collections.\nBTW thanks, inspired by your contribution I\u2019ve also updated WeakSet.\n. BTW, by using forEach you can pass Map to the WeakSet constructor, because it also has forEach method. But thankfully that is senseless due to if you have Map then you probably don\u2019t need to polyfill WeakSet. Ideally, WeakSet accepts an iterable as an argument to the constructor.\n. @triblondon ow, sorry for my probably a bit obtrusive manner, but it seems counterintuitive when you point exact features to polyfill and get nothing in response.\nThank you for the reference )\nAs far I've found, unknown flag is what was needed:\n$ curl \"http://cdn.polyfill.io/v1/polyfill.min.js?features=WeakMap,WeakSet&flags=always&unknown=polyfill\" > polyfill.js\n. Yet it doesn't work with curl, returns Unsupported UA detected:\ncurl \"http://cdn.polyfill.io/v1/polyfill.min.js?features=WeakMap,WeakSet&flags=always&unknown=polyfill\".\n@triblondon is it intentionally implemented so to ignore curl? Is it because curl is not browser? But there seems to be a use-case for that.\n. Hmm, this request returns Unsupported both on my Win7 laptop and OSX. Also if I emulate it in chrome with UA string replaced to curl/7.10, it also returns Unsupported...\n. @triblondon at some point all my browsers, including IE in compatible mode and node, started supporting toLocaleString, so I don\u2019t have a chance to check it. If you can check it in old browser - try this code:\nhtml\n<!doctype html>\n<script src=\"https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en-US|always&gated=0\"></script>\n<script>(12345).toLocaleString();</script>\n. I\u2019m actually planning a webgl stub for node, so making polyfill would be an adjacent task.\n. There is ready code for that in https://github.com/dfcreative/nogl, so it just takes time for someone to bring it here. But closing this you indicate that there is no need in that.\n. Makes sense. Neither have I, just for polyfills collection.\n. The polyfill itself is trivial, it is just the entry barrier for FT polyfills is a bit too troublesome for me.\nLiterally just\njs\nif (typeof Int8Array !== 'undefined') {\n    if (!Int8Array.prototype.fill) Int8Array.prototype.fill = Array.prototype.fill;\n    if (!Int8Array.prototype.slice) Int8Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof Uint8Array !== 'undefined') {\n    if (!Uint8Array.prototype.fill) Uint8Array.prototype.fill = Array.prototype.fill;\n    if (!Uint8Array.prototype.slice) Uint8Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof Uint8ClampedArray !== 'undefined') {\n    if (!Uint8ClampedArray.prototype.fill) Uint8ClampedArray.prototype.fill = Array.prototype.fill;\n    if (!Uint8ClampedArray.prototype.slice) Uint8ClampedArray.prototype.slice = Array.prototype.slice;\n}\nif (typeof Int16Array !== 'undefined') {\n    if (!Int16Array.prototype.fill) Int16Array.prototype.fill = Array.prototype.fill;\n    if (!Int16Array.prototype.slice) Int16Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof Uint16Array !== 'undefined') {\n    if (!Uint16Array.prototype.fill) Uint16Array.prototype.fill = Array.prototype.fill;\n    if (!Uint16Array.prototype.slice) Uint16Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof Int32Array !== 'undefined') {\n    if (!Int32Array.prototype.fill) Int32Array.prototype.fill = Array.prototype.fill;\n    if (!Int32Array.prototype.slice) Int32Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof Uint32Array !== 'undefined') {\n    if (!Uint32Array.prototype.fill) Uint32Array.prototype.fill = Array.prototype.fill;\n    if (!Uint32Array.prototype.slice) Uint32Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof Float32Array !== 'undefined') {\n    if (!Float32Array.prototype.fill) Float32Array.prototype.fill = Array.prototype.fill;\n    if (!Float32Array.prototype.slice) Float32Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof Float64Array !== 'undefined') {\n    if (!Float64Array.prototype.fill) Float64Array.prototype.fill = Array.prototype.fill;\n    if (!Float64Array.prototype.slice) Float64Array.prototype.slice = Array.prototype.slice;\n}\nif (typeof TypedArray !== 'undefined') {\n    if (!TypedArray.prototype.fill) TypedArray.prototype.fill = Array.prototype.fill;\n    if (!TypedArray.prototype.slice) TypedArray.prototype.slice = Array.prototype.slice;\n}\n. Just for the record: typedarray-methods\n. @JakeChampion exactly, tests there are irrelevant to polyfill, just minimal use-cases. As for methods - I guess it is possible to walk by existing Array methods to avoid including extra polyfill dependencies.\nBTW not every browser has TypedArray at all, there is typedarray implementation for that as well.\n. ",
    "jamiebuilds": "Hey @triblondon and @jonathantneal, I'm a contributor for 6to5. As @juandopazo suggested esnext is a great tool, but you might also want to check out 6to5. If you need any help you can either ping me or come ask in our gitter room.\n. ",
    "iliakan": "Can you introduce a safe default behavior for an unknown browser? Right now it just fails, the site becomes unusable, so I can't use the polyfill at all.\n. @triblondon to be clear, to use a polyfill service, it should be reliable. \nSo that even if it doesn't know the user-agent, it still does something sensible, like:\n- deliver all polyfills\n- polyfills must not break browser implementation (like testing if there's a native method)\nThe question here is actually not about Yandex.Browser, but about the reliable behavior for all current and future \"unknown\" user-agents. That will keep to appear.\nAs of now, if I rely on polyfill.io service then users with unknown user-agents can't rely on my site to work. Bad.\n. Okay, that's your choice, I guess. \nYou don't want to fix the behavior for \"unknown\" user agents - fine. \nBut please be honest then and tell it to users.\nIt needs to be stated openly and cleanly on the main readme page that \"rare browsers will not get polifylled\". \nThe words \"polyfill makes web development less frustrating by selectively polyfilling just what the browser needs\" on the top of your readme is actually not true.\nIf you add ...for most browsers, excepts the rare ones, would be much better.\nOtherwise people try to use your service, probably go to prod and then get unexpected negative feedback from those \"rare\" guys. We should know this little thing about polyfill.io.\n. @triblondon thanks for the support of YB. \nI'm not a YB user, it was one of them who reported to me about the problem, so I posted here :) \nI'll tell people YB is now supported, maybe they'll say more.\n. ",
    "complistic-gaff": "@triblondon \nI've been writing a dataset polyfill and I have been able to get it working a lot closer to the spec then remy's one as discussed in jonathantneal#48 although it is a bit slower then his.\n@aintgoin2goa I have the cases you outlined above working in IE9+ for the most part.\nPoints 4 and 6 happen 1ms after the fact though, I believe this would be fine in most cases but may lead to race conditions if someone mixes and matches el.dataset.key with el.getAttribute('data-key') within the same code execution. (currently trying to think of a better way)\nIf I cleaned this up do you think you would be interested in a dataset polyfill?\nI might also be able to back-port it to IE8, as I don\u2019t think I'm doing anything I couldn\u2019t reproduce there, but for now I have just been targeting IE9+ to keep the code leaner (and myself saner).\n. ",
    "aendrew": ":wave: I'd like this feature. I used it throughout the US Election headpiece and am now having to do a bunch of code changes because Circle's only failed it now. \ud83d\ude1e \n. ",
    "evanleck": "I'd love to see a polyfill for this though I do not have any input on quirks vs. standards mode etc.\n. ",
    "bterlson": "It is not difficult, depending on your definition of difficult. The general workflow is:\n1. clone test262\n2. npm install test262-harness (see readme)\n3. browserify your library/shim/polyfill into a single .js file\n4. node_modules/.bin/test262-harness --prelude shim.js \"test262/test/suite/**/*.js\", using various configs to run in the different hosts.\nThat said, we've only just now begun ensuring the harness and collateral are in good shape for polyfills and such so there will be friction. For example, after working a bit with @ljharb he found that linux/mac support had some bugs and that there were issues with using \"require\" in tests. Additionally I'm also aware that running tests in browsers needs to be made easy and test cases need better organization (although this will be addressed very soon).\nGenerally we (TC39) are committed to making test262 a valuable resource for the ECMAScript language community so make sure to file bugs if anything doesn't seem ideal.\n. @juandopazo That approach would be interesting, and likely would work ok for most of the builtins tests (which will soon be much easier to identify). Language tests will likely be difficult to get working since, among other things, we need to test the behavior of syntactically invalid code and the semantics of code run in global scope (actual global scope, not just indirect eval).\nI'm not entirely sure what it would take to do a test262-->mocha wrapper so I can't comment much further. Let me know if you have any questions though!\n. Just a pedantic note (since we're talking about language conformance tests i think that's ok) the official test suite for ECMA-262 (known aliases: ECMAScript, JavaScript) is called Test262. TC39 is the working group in ECMA that works on ECMA-262 and Test262 (and ECMA-402, etc).\n@jonathantneal I hope your proposed scheme for selecting tests in the config file will work as it's exactly what I've been working towards. Here's where I call out the specific semantics for mapping a feature name to tests if it's useful to you.\nThe grading scheme is possible for feature tests, although is probably not something that should go into Test262 proper since it would be hard to get the committee to agree on a common, uniform definition of these grades. However, it might not be difficult to maintain external metadata that maps specific tests to the grade they validate. This would be a lot of work though - certain ES5 builtins have hundreds of tests :-P\n. @juandopazo It is true that many tests in the library section use the runTestCase helper, though this form is deprecated because, as you noted, you get horrible error messages. If possible I'd assume that runTestCase won't be baked into the test as we're planning on removing these opportunistically (recent commits have removed many instances of runTestCase, although thousands of such tests remain).\n. ",
    "impressivewebs": "Nice, yeah, that's what I figured. Thanks!\n. ",
    "richard-still-ft": "We found for FT.com existing polyfills already included in the code were clashing with those provided by the polyfill service...\n. I should have read the spec!\n. ",
    "Thurst-ft": "Thanks for your suggestion regarding the clashes. \nHas anyone been able to take a look at this yet?\nI'm not entirely sure, but it maybe clashing with jQuery clone method. Right now I think we have a requirement to retain jQuery for certain parts of sign-up so not sure how to go about resolving this. \nAny advice would be welcome.\n. Hi Sam,\nI'll get something over to you shortly but you can see the issue in action\nin IE8 on:\nhttps://sign-up-app-test.memb.ft.com/?offerId=6c7b7f36-0b91-b33b-2257-71d09919ddc4\n--\nThurston Tye\nFront End Developer\nTechnology\n+44 (0)20 77756796\nNumber One Southwark Bridge, London SE1 9HL\nhttps://www.facebook.com/financialtimes https://twitter.com/FT\nhttp://www.linkedin.com/company/financial-times\nhttps://plus.google.com/+FinancialTimes/posts\nhttp://www.youtube.com/user/FinancialTimesVideos\nOn 2 December 2014 at 16:18, Samuel Giles notifications@github.com wrote:\n\nThere is probably not much we can do about clashes unfortunately, we can\nhowever write tests that verify the implementation we have works as\nexpected.\nCan you reproduce using a smaller test case that includes jQuery?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/203#issuecomment-65256768\n.\n\n\n\nThis email was sent by a company owned by Pearson plc, registered office at \n80 Strand, London WC2R 0RL.  Registered in England and Wales with company \nnumber 53723.\n. Hi Sam,\nHere's what I've started putting together to isolate the issue:\nhttps://github.com/Thurst-ft/ie8_signup_debug\n. As I mentioned I'm not 100% I've diagnosed the pollyfill/jQuery failure correctly be the  'unknown runtime error' can be seen on the first link I sent Sam.  I've no idea where the  'Essentials - Deferred, A handy tool for organizing waiting for something..' is coming from. It's not something I've see/\n. Thanks Leanne,\nRight now I think we requirement for both jQuery and the polyfill on subscription.ft.com. Any suggestions on working round this clash?\n. Thanks\n--\nThurston Tye\nFront End Developer\nTechnology\n+44 (0)20 77756796\nNumber One Southwark Bridge, London SE1 9HL\nhttps://www.facebook.com/financialtimes https://twitter.com/FT\nhttp://www.linkedin.com/company/financial-times\nhttps://plus.google.com/+FinancialTimes/posts\nhttp://www.youtube.com/user/FinancialTimesVideos\nOn 10 December 2014 at 14:01, James Nicholls notifications@github.com\nwrote:\n\n@triblondon https://github.com/triblondon Thanks for the fix\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/203#issuecomment-66454866\n.\n\n\n\nThis email was sent by a company owned by Pearson plc, registered office at \n80 Strand, London WC2R 0RL.  Registered in England and Wales with company \nnumber 53723.\n. ",
    "leanne1": "I agree with Thurston that this is a clash with jQuery which consumes a function called cloneNode and finds the polyfill version which later breaks IE8, possibly because of the innerHTML issue. This is confirmed by running the below page locally, toggling jQuery: \n<!doctype html>\n<html class=\"no-js\" lang=\"\">\n    <head>\n        <meta charset=\"utf-8\">\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n        <title></title>\n        <meta name=\"description\" content=\"\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <script type=\"text/javascript\" src=\"//cdn.polyfill.io/v1/polyfill.js?features=html5shiv,Array.prototype.indexOf,Window.prototype.Event.ie8,HTMLElement.ie8,Array.prototype.forEach,Element.prototype.matches,CustomEvent,String.prototype.trim,Array.prototype.some,Array.prototype.map\"></script>\n    </head>\n    <body>\n        <h1>IE8 bug test</h1>\n        <script src=\"//code.jquery.com/jquery-1.10.2.min.js\"></script>\n    </body>\n</html>\nI presume to fix this we would need to refactor the polyfill cloneNode method so it works around the IE8 bug. I will look into this further.\n. Hi Thurston, I will try to work out which part of the polyfill cloneNode function that IE8 doesnt like and see if it can be fixed to stop this error. However, jQuery includes some extra fixes for cloneNode which the polyfill code doesn't currently cover. So it may be that the clash will throw up new bugs later on. \n. The cloneNode method that jQuery is calling and causing the bug doesn't look like it could have worked; it's also a different method to the one discussed and edited in #119 which resides in a fork of the polyfill repo. The cloneNode method causing this bug lives under the Element directory, which is inconsistent with the other Element object polyfills which each have their own directory, plus there is also no default polyfill present. So my best guess is that the function causing this issue can [and should] be removed from the repo. This is assuming both polyfills are targeting the same thing [native cloneNode method] @samgiles any ideas / feedback?\n. Updated to include a feature detect and polyfill for screen orientation as well as browser prefixing where required\n. I've found an additional bug with the current html5 shim - [i've not yet checked if this new version would fix it]: It prevents the type attribute being set on dynamically created input elements in IE8; this also affects anyone using jQuery which does the above on init as part of its feature testing\n. @Andrew thats great - but i also found the bug is produced with document.createElement as well in IE8 when the shim is present\n. This implementation fixes the jQuery clash [https://github.com/Financial-Times/polyfill-service/issues/203] and looks good :+1: \n. I've now added a 'default' key under variants with empty browser list\n. ",
    "jamesnicholls": "I think the reference to jQuery is a red herring. I've managed to replicate the issue by just including the Element polyfill and trying to clone an input element (which is what jQuery is doing when the runtime error is thrown). See http://jsbin.com/weqevoraba/2/.\n. @triblondon Thanks for the fix\n. From my limited research, it isn't polyfill-able.\n. I came across this bug because of a third-party library that first checked for the existence of overrideMimeType before attempting to use it. Given that the polyfill is only served to IE <= 8, and overrideMimeType seems to be un-polyfillable in those browsers, I think that the polyfill just shouldn't define this method. \n. Sorry, updated my comment. Meant to say \"shouldn't define this method\".\n. Test case: http://jsbin.com/corupaxuce/3/\nI think the solution is as simple as checking for the existence of event.target in the event handler (line 66).\n. ",
    "SevInf": "Looks like tests fail because Travis-encrypted variables SAUCE_USERNAME and SAUCE_ACCESS_KEY are not available for external PRs\n. ",
    "roland-vachter": "More details:\nPolyfill service on the page adds a huge delay to executing scripts added to the page, like jsonp callbacks.\nTo reproduce try this code with and without polyfill in IE8  http://jsbin.com/nezeqamopa/1/edit\nthe result without polyfill:\nconsole: \"instantaneously\"\nwith polyfill:\nconsole: callback called after 2190 ms.\ncallback called after 700 ms.\ncallback called after 1121 ms.\nThis is probably due to the overriding of createElement function in the html5 shiv included in the polyfill service.\n. 1. Issue of JSONp, as you said, the easiest solution is to use html5shiv (from aFarkas). There's no error, it just fails silently.\n2. Errors are only thrown when both the html5shiv and polyfill service are on the page, and the page actually uses document.createElement. Including the polyfill on any ft.com page throws the following error:\n   SCRIPT5: Invalid procedure call or argument \n   polyfill.js, line 374 character 3\n. @triblondon the widget is loading, so the jsonp issue (script loading) is fixed. Now the CSS styles doesn't apply to the elements, not sure why..\n. It seems it does, yes\n. It seems to be unrelated to the polyfill service, the polyfill seems to be fine.\n. All fine, everything works fine.\n. When will this be released?\n. I think polyfilling window.Document (reference to window.HTMLDocument) can be moved separately from the html5shiv, as part of the Event polyfill (as it is required for the addEventListener and removeEventListener polyfills).\n. document.createElement is the problem, in my use case as well. So Document polyfill should not override document.createElement, and let the canonical html5shiv to do that.\n. Thanks Andrew.\nThe code was not syntactically correct, here is the corrected version:\nhtml\n<!--[if IE ]>\n    <script>\n      document.write('<'+'script src=\"//cdn.polyfill.io/v1/polyfill.min.js?ua=ie/'+document.documentMode+'\"></'+'script>');\n    </script>\n<![endif]-->\n<!--[if !IE]>-->\n    <script src=\"//cdn.polyfill.io/v1/polyfill.min.js\"></script>\n<!--<![endif]-->\nThis is better, in IE9 or IE10 browser mode and IE8 document mode this is working fine.\nHowever, it seems that the polyfills for IE7 are not the best, polyfill itself throws an error:\nSCRIPT16385: Not implemented\n7, line 3 character 11588\nThen the code that uses it:\nSCRIPT438: Object doesn't support property or method 'addEventListener' \nBut that could be considered another issue regarding polyfills for IE7.\n. The current solution works fine, maybe I give it a try to the last one as well.\nI corrected the syntax just because you said you would add it to the documentation, and I just wanted to help not to add an incorrect code by mistake :)\n. Yes, that's true, IE modifies the user agent to IE7. Still, I think polyfill service does not handle it as an IE7. I will double check again, but that's what I observed.\n. It seems it recognizes IE7 and the polyfill is served for IE7, probably it's not working due to the other issue that IE7 polyfill is not the best so far .. So I think this can be closed.\n. I think addEventListener is not polyfilled because polyfill itself throws an uncaught error which stops executing the script.\nIn an unminified, another error is thrown (weird, but it's IE...):\nSCRIPT5022: HierarchyRequestError \npolyfill.js, line 373 character 2\nThe line is:\njavascript\nvbody = document.appendChild(document.createElement('body')),\n. The URL is: https://cdn.polyfill.io/v1/polyfill.js?ua=ie/7\n. Ah, sorry :) missed that one\n. Yep, I will.\n. Are there individual tests for the polyfills? I can't find any..\n. Please let me know when this is released so that we can retest the fix. Thanks\n. Hi Andrew,\nApparently this is not yet released, and we have the same errors.\nIs there an approximate date when this will be released?\nThanks\n. Ok, thanks. Please let me know\n. Tried to contribute on this, and solve the problem. Unfortunately Firefox doesn't let you to override addEventListener on prototype, so this is not possible to fix.\n. I tried Document.prototype, Window.prototype, HTMLDocument.prototype, HTMLElement.prototype, nothing works. window.addEventListener can be overriden, but not on prototype.\nThere are also bugreports for Firefox about this, but I doubt anyone will fix it for FF3.6 for example :)\nOverriding it for an element I think works (not sure), but it should be overriden on prototype the solution to make sense.\n. Hi Sam,\nI saw you mentioned this issue in a pull request, which haven't been merged. Do you have an update on this one please?\nThank you,\nRoland\n. Cool, thanks!\n. Ah ok. I just realized that querySelector is partially supported in IE8 and it's not polyfilled (if my assumption is correct).\n. Ok, thanks for the clarification.\n. ",
    "kaelig": "I am getting the same error @Bockit does, in this version of IE8:\n8.0.6001.18702\n\nWill update my machine tomorrow and see what happens.\n. Thanks Andrew.\nI tested and now the page displays instead of showing a blank canvas.\nHere is the error now raised:\n```\n    Webpage error details\nUser Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0)\nTimestamp: Tue, 16 Dec 2014 11:26:45 UTC\n\n\nMessage: 'MutationObserver' is undefined\nLine: 46\nChar: 13\nCode: 0\nURI: http://registry.origami.ft.com/embedapi?autoload=resize\n\n```\n. Good catch, my bad! I added the font-family to the html element and that should do it.\n. @triblondon note that this is affecting FT's subscription page and every page that requires o-tabs.\n. Chrome in iOS is essentially the same as iOS Safari (with a few exceptions since it's a webview), which is far from reaching feature parity with Chrome desktop / Android.\n. Chrome 41, 42, 43\u2026\u00a0all depend on the version of iOS's webview they run on.\nUntil Apple starts opening the door to other rendering engines, I think we can safely match UIWebView of specific iOS versions on which Chrome runs.\n. The same happens in:\nOpera Mini iOS (Both Turbo mode & Opera mini off)\nMozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) OPiOS/10.2.0.93022 Mobile/12F70 Safari/9537.53\nPuffin iOS\nMozilla/5.0 (X11; U; Linux x86_64; en-GB) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/30.0.1599.114 Safari/537.36 Puffin/4.4.0IP\nI also looked in Dolphin browser which somehow works well.\n. Puffin's UA looks completely made up and isn't synced with the iOS version (8.3). The simplest way to get it to work might be to send them a bug report.\n. \ud83d\udc4d \n. Note that Opera 47 may also need the polyfill as I can see the same type of errors in my logs for it.. Unfortunately neither do I! It\u2019s been showing up in my logs but I haven\u2019t tried to reproduce it. . ",
    "levacic": "Cool, thanks for the quick response, I suppose this is a much better solution overall - those of us who wish to switch to the new service should be able to do so easily, without having to spam this repo with domain whitelist removal issues (making additional non-productive work for you), and on the other hand, websites that already use the old service won't break anymore.\nAlso, it's interesting that there's only around 400 whitelisted websites - I was under the impression that the service was much more widely used, seeing as the original repo itself has been starred 770 times on GitHub, and it would make sense for the number of users to be much higher than that.\nAnyway, thanks for hosting the service, it's awesome and so helpful for writing modern, clean, readable code without having to worry much about browser support!\nCheers!\n. ",
    "chmartinez": "I was having the same issue on my page. I'm using the cdn to load the service(script src=\"https://cdn.polyfill.io/v1/polyfill.min.js\"). Do you know if your change is already available in the cdn? Thanks!\n. ",
    "tedw": "Ah ok, I thought the default behavior was to polyfill everything. Now I see where it says:\n\nOmitting or setting to an empty string is equivalent to the value \"default\", which is an alias for a curated list of the most popular polyfills.\n\nIt might be helpful to define the \u2605 symbol in the features list key. I didn't make that connection until you said matchMedia wasn't included by default.\nThanks for all the hard work on this project and for being so responsive!\n. ",
    "felixgilles": "We've tested on Windows Phone 7.8 with IE Mobile 9 and WP 8.1 with IE Mobile 11 (latest), both need Object .assign\nMore generally, everything needed on IE desktop is also needed in the same IE mobile version. Currently, Object.assign has a requirement on ie: * and should logically also get the ie_mob: * requirement.\nThanks\n. ",
    "guybedford": "What about polyfilling just the <script type=\"module\"> tag with very basic linking, without circular reference support.\nEffectively a polyfill to match the first modules implementations in browsers, without the full System loader API.\nA tokenizer could be put together that would scan and replace export and import statements with simple _registry.get calls, and normalization would be entirely URL-based normalization.\nThe codebase for this could certainly fit under 10KB and be production-efficient, acting as a stable polyfill of the first browser implementations.\nI'd love to work on something like this, but am a little overstretched right now. If someone else is interested, happy to discuss ideas anytime.\n. ",
    "asilvas": "From what I can tell https://github.com/ModuleLoader/es6-module-loader is pretty stable. Any intention in revisiting this? SystemJS leverages this. ES Module Loader is a pretty fragmented topic, so it's been challenging tracking down the real state of affairs. . Wanted to use:\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=default,es6\nBut had to work around the problem by using:\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=default,Promise,Function.name,Array.prototype.@@iterator,String.prototype.repeat,Array.prototype.find,Array.prototype.findIndex. On vaca for a couple weeks, it'll have to wait til I get back.. Hmm I'm no longer able to repro. No sure what changed. Will close for now, thanks.. I remember why the confusion now... This was specifically on IOS 10.2 Safari 10. I updated the title accordingly.\nHere is the dump for default,es6:\n```\n/ Polyfill service v3.16.0\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: ios_saf/10.0.0\n * Features requested: default,es6\n * \n * - URL, License: CC0 (required by \"default\")\n * - Math.clz32, License: CC0 (required by \"es6\")\n * - Math.sign, License: CC0 (required by \"es6\")\n * - Object.is, License: CC0 (required by \"es6\")\n * - String.prototype.repeat, License: CC0 (required by \"es6\")\n * - Symbol, License: MIT (required by \"es6\", \"Symbol.hasInstance\", \"Symbol.isConcatSpreadable\", \"Symbol.iterator\", \"Symbol.match\", \"Symbol.replace\", \"Symbol.search\", \"Symbol.species\", \"Symbol.split\", \"Symbol.toPrimitive\", \"Symbol.toStringTag\", \"Symbol.unscopables\")\n * - Symbol.hasInstance, License: MIT (required by \"es6\")\n * - Symbol.isConcatSpreadable, License: MIT (required by \"es6\")\n * - Symbol.iterator, License: MIT (required by \"es6\")\n * - Symbol.match, License: MIT (required by \"es6\")\n * - Symbol.replace, License: MIT (required by \"es6\")\n * - Symbol.search, License: MIT (required by \"es6\")\n * - Symbol.species, License: MIT (required by \"es6\")\n * - Symbol.split, License: MIT (required by \"es6\")\n * - Symbol.toPrimitive, License: MIT (required by \"es6\")\n * - Symbol.toStringTag, License: MIT (required by \"es6\")\n * - Symbol.unscopables, License: MIT (required by \"es6\") /\n(function(undefined) {\n// URL\n// URL Polyfill\n// Draft specification: https://url.spec.whatwg.org\n// Notes:\n// - Primarily useful for parsing URLs and modifying query parameters\n// - Should work in IE8+ and everything more modern\n``. Possibly related to https://github.com/Financial-Times/polyfill-service/issues/1034. @xer0x do you have simple example code for repro?. I've spent some time trying to resolve, but appears to be over my head. I suspect it might be simple for someone more familiar with these polyfills. Anyone with more experience with these polyfills have time to take a look? Would be much appreciated... @triblondon @jonathantneal @JakeChampion ?. Checking in, any luck? @hannesj @JakeChampion . [![Bountysource](https://api.bountysource.com/badge/issue?issue_id=40934471)](https://www.bountysource.com/issues/40934471-ie11-bug-with-symbols-and-enumerables-exposed-by-lodash-omit?utm_source=40934471&utm_medium=shield&utm_campaign=ISSUE_BADGE) Hope it helps!. @rhalukongor don't forget to claim the bounty, thanks!. Can we bump this PR to the next release if it's holding up3.17`?. You guys are brave with less than a week before expiration.. ",
    "zordius": "Verified http://qa.polyfill.io/v1/polyfill.min.js works well! thanks. When will it be released to production?\n. Thank you for your clarification! Maybe we can add some guide line for these 'impossible polyfill' in the document.\n. ",
    "blainekasten": "Could these exist under a specific flag? I feel like in development mode I would want to be alerted of this. But I could see an argument for supressing errors in production mode in hopes that the app will have more functionality than simply kill js execution due to a method erroring.\n. that is the code from the polyfill.js yes. No query paramaters. Also happens in the .min version\n. Strangely, today it is no longer having issues... I guess I have no explanation for what had happened. I was testing using browserstack's IE8 on Windows 8. I suppose we can close this for now.\n. Ahh, okay. Totally up to you then. Probalby would be a good idea as it'll likely just come up again by someone else if they try and build their own.\n. So, this is a ridiculous idea, and could likely have issues I'm not thinking of. But I'm concerned that the qa.polyfill.io wouldn't get tested on the majority of websites and could still break some websites in certain cases where your tests don't engage code that other websites will.\nSo, my thoughts are. What if the polyfill cdn read the host of the requesting page, and if it all appears to be a local dev machine, (localhost:numbers, site.local, site.dev, other default indicators that can't represent live sites)\n/localhost:[0-9]{3,4}/.test(request.referrer)\nand, if this is safely possible, it could route these requests to the release candidates, and not the stable versions. Like i said, poke as many holes in this as possible, and call me dumb if it's dumb.\nBut if it's possible, I think this would guarantee a more thorough QA process as we would essentially be QA'd by anyone using the service locally. maybe there could be a flag that bypasses this process if somebody doesn't want to be part of the QA process and spend man hours on it.\nThoughts?\n. @matthew-andrews, thanks for pointing out the flaws in my plan. It seemed to good to be true. I could definitely see things being a headache, and causing the service itself to seem unreliable in those different situations.\nA potentially important question here may be, is the versioning meant for the service, or the library? A change from 1.1 -> 1.2 shouldn't break anything given semver. But I have noticed that using the library (not the service) does have breaking changes between minor versions. I think this may be sort of what @monolithed is getting to.\nOtherwise, I like where things are going for this deployment plan. Do you have any way to know if when you deploy code to production if it breaks things? It might be worth doing some sort of notification to you guys when something errors out in a production world. That could be done by either wrapping the entire polyfill in a try catch and ajaxing on the catch the failure. Or you could insert a 1x1 image into the dom thats hosted on your site and compare the number of polyfill requests by the number of image requests. This might help you to manage if releases are breaking things or not and allow you to know if rolling back is a good idea.\nJust droppin' two more cents.\n. Seeing this also.\n. ",
    "vvo": "I am going to include Object.freeze = identity (return obj) for browsers not supporting it because my app needs it, happy to submit a PR here where it would not be activated by default but only on demand.\nWonder if that works for you, I guess no :)\n. So still implementing it but without even taking the es5-sham, just warning to have the good error message for the users?\nOr do you want to implement it + do a console.warn?\n\njust to prevent an unhandled exception causing a break in your runtime code.\n\nIt will still break if we do not return the object I guess\n. As for IE6/7 I think we can forget them yes.\n. cc @triblondon let me know what you think, this is keeping me from using polyfill-service for now :)\n. (ran the tests locally and it was fine).\nAlso I have seen projects like ember making their sauce keys public for ease of collaboration, what do you think?\nthanks\n. @triblondon @jonathantneal @samgiles would love to have your input on this one, thanks!\n. I see you released 2.0.0 4 days ago, let me know if you need anything from this PR.\nCurrent bind implementation is broken\n. Awesome\n. Android failed in one check, can you relaunch? I bet saucelabs had issues here\n. Same issues on my side with saucelabs but wondering if browserstack would really solve them. Maybe remotely starting and controlling browsers over the internet is something that will fail no matter what :D\n. Are you planning to release 2.1 soon? Thanks\n. array_slice is not defined anywhere thus this polyfill fails\n. ",
    "sideshowbarker": "I contribute a bit to https://github.com/w3c/web-platform-tests and would happy to help figure out if/how relevant test cases from it could be consumed in some way by the polyfill-service test system.\n. ",
    "paulirish": "AFAIK calling performance.now was slower than calling Date.now.. i'm not sure if that's still the case.\nIf it is, can you just use the date.now() polyfill that's already in this repo?\nalso the repo is lacking a perf.now polyfill. \n. ",
    "csabapalfi": "I can still reproduce the same error with IE11 compatibility view.\nThe Element polyfill seems to trigger a HierarchyRequestError. See /polyfills/Element/polyfill.js#L13.\n. ",
    "gogy27": "@triblondon: I have same error as @csabapalfi \nMy users are not able to load a page via compatibility mode, because all script execution dies on /polyfills/Element/polyfill.js#L13.\nAny news about it?. ",
    "josh": "\nSeems like this polyfill depends on FormData which is only in IE as of 10. Are you using a polyfill for that?\n\nFormData is a soft dependency like Blob. If you're host environment doesn't support it, response.formData() will just be undefined.\nI don't know if I would actually recommend using that polyfill since it can't actually provide file upload support. If you need IE 9, you'll probably just not supporting the fancy form upload stuff in that case. Thats basically how github.com deals with it.\n\nIs it safe to say these basically aren't polyfillable? \n\nBlob maybe, though people are reporting that they using some Blob polyfill that corrupts utf8 data. So clearly bad ones exist.\n\nWhat's the expected impact of using fetch to load blobs in a browser that doesn't support them?\n\nSimilar to FormData. response.blob() will just be undefined. And since you have no way to construct a blob, theres no way you could pass a blob to fetch fetch(body: someBlobWhereWouldItComeFromInIE9).\n\nTesting this is mega hard. Josh has written a server just to do it, which makes for a very bespoke test harness. The polyfill service can run Mocha / expect tests. Do you have any suggestions on how we should test fetch?\n\nYeah, pretty much anything doing requests will need an actual server. No simple static page. Maybe considering pushing the tests to a Heroku instance just so people can hit the test page publicly. What do you think about that?\n. I regret not making this public domain to begin with.\n. ",
    "mislav": "How does polyfill-service handle backwards compatibility? I.e. developers were getting replace() method polyfilled and possibly started to use it in their app code. When you ship this rename, their replace() calls will suddenly stop working.\n. While fixing this, it could be a good idea to handle #286 in the same go. Thanks\n. I think that the complexity of splitting mutation methods each into its own polyfill isn't worth it. All of them share the same internal method that they're implemented in, after all, and their total size is negligible when served over the wire. I would suggest keeping everything as it is now, but avoiding overriding native methods at all costs.\n. ",
    "jkimbo": ":+1: I've just come across this problem in OSX Lion with the same version of Safari\n. @triblondon I've just added in the es5-shim version and it seems to work on Safari.\n. Following semver would be nice since this change broke production code without any changes on our part. Either that or pinning the library to a particular version should be the recommended way of using polyfill. (on that note it doesn't look like v1.2 is available? http://cdn.polyfill.io/v1/polyfill.js?libVersion=1.2)\nAlso Firefox has implemented String.contains since version 18 (https://bugzilla.mozilla.org/show_bug.cgi?id=1102219#c0) so I feel that this is a candidate for backwards compatibility.\n. Oh and is there a changelog published anywhere? I couldn't find one.\n. (Sorry for deluging you with criticism! We've just started using polyfill.io and it's pretty great!)\n. I understand what you are saying though I would argue that the polyfill is a library and so semver rules apply. It is creating an environment that is homogeneous across browsers and this environment should follow the same rules that browsers do, specifically not breaking backwards incompatibility. So this change should either have caused a 2.0 release or required an alias since String.contains was available in a perviously stable environment.\nHaving the main url always point to the latest version of the library still makes sense, even if that release spans a major version change, however it would be nice if there was a bigger disclaimer that this might happen and that people should use the libVersion parameter to ensure nothing changes underneath them. \nOh and it is not clear from the features page that String.contains is not in the default set any more which might trip up some people.\n. Thanks!\n. Looks like my build failed because of Error: SAUCE_USER_NAME and SAUCE_API_KEY must be set in the environment ? Is there something I need to include in the pull request?\n. @triblondon thats fair enough. I've just pushed what I think is a fix for it based on https://developer.mozilla.org/en/docs/Web/CSS/resolution so can you check it?\nN.B. to get the tests to fail you will need to run it them on a browser that doesn't have matchMedia i.e. IE 9 until https://github.com/Financial-Times/polyfill-service/issues/383 has been addressed.\n. @triblondon found the issue, IE8 and below doesn't support svg at all...\nI've added a check to skip the test if there isn't svg support since it's not particularly relevant.\n. ",
    "domenic": "setImmediate is not the right interface semantically: https://github.com/YuzuJS/setImmediate#macrotasks-and-microtasks\n. ",
    "hgl": "I think the feature detection shouldn't simply return true or false, it should be more informative.\nFor example:\n``` js\nlet support = false;\nif (document.documentElement.classList) {\n    support = {};\n    let div = document.createElement('div');\ndiv.classList.add(\"a\", \"b\");\nsupport.multipleArguments = div.className === \"a b\";\n\ndiv.className = \"a b\";\ndiv.classList.toggle(\"a\", true);\ndiv.classList.toggle(\"b\", undefined);\ndiv.classList.toggle(\"b\", undefined);\nsupport.toggleForceArgument = div.className === \"a b\";\n\n}\nexport default support;\n```\nSo when the support is missing, it should simply output false, but when the basic APIs exists, it should output details about these APIs.\nAnd when do the patching:\n``` js\nimport support from \"webprobe/classList\";\nimport DOMTokenListShim from \"./shims/DOMTokenList\";\nif (!support) {\n    window.DOMTokenList = DOMTokenListShim;\n    Object.defineProperty(Element.prototype, \"classList\", {\n        enumerable: true,\n        configurable: true,\n        get() {return new DOMTokenListShim(this);}\n        set() {}\n    });\n} else {\n    let proto = DOMTokenList.prototype;\n    if (!support.multipleArguments) {\n        Object.defineProperties(proto, {\n            \"add\": {\n                writable: true,\n                configurable: true,\n                value: patchMultipleArguments(proto.add)\n            },\n            \"remove\": {\n                writable: true,\n                configurable: true,\n                value: patchMultipleArguments(proto.remove)\n            }\n        });\n    }\n    if (!support.toggleForceArgument) {\n        Object.defineProperty(proto, \"toggle\", {\n            writable: true,\n            configurable: true,\n            value: patchToggle(proto.toggle);\n        });\n    }\n}\nfunction patchMultipleArguments(method) {\n    return function () {\n        let i = 0;\n        while (i < arguments.length) {\n            method.call(this, arguments[i++]);\n        }\n    };\n}\nfunction patchToggle(toggle) {\n    return function (token, force) {\n        if (force === undefined) {\n            return toggle.call(this, token);\n        }\n        if (force) {\n            this.add(token);\n        } else {\n            this.remove(token);\n        }\n        return force;\n    };\n}\n```\nOf course, for the polyfill service, when serving the polyfill file, it should remove the conditionals.\nI think it probably means you shouldn't use modernizr for feature detection (it's not granular enough).\nThe above code comes from my yet to be released feature detection + polyfill combo libraries (I just starting writing it a few months back for my side project. it serves more as a proof-of-concept currently, not many things polyfilled so far), but if you are interested in this direction and think it's the right approach, I'm happy to help. :)\n. > my immediate concern is scaling\nI see you have many polyfills added using the current feature detection architecture. However, my proposal only affects polyfills whose implementation suffers from a black or white answer (i.e., some browsers only offer a partial implementation of its feature). These kinds of polyfills don't seem to be many from the current list.\n\nThat would actually be more simple to maintain\n\nA feature detection lib is actually easier to maintain than the current split files architecture, IMHO. With the help of google closure compiler's \"advanced compilation\", it's possible to compile this\n``` js\nvar support = { foo: true, bar: false };\nif (!support.foo) {\n  window[\"foo\"] = \"foo\"\n  alert(\"foo polyfilled\");\n}\nif (!support.bar) {\n  window[\"bar\"] = \"bar\"\n  alert(\"bar polyfilled\");\n}\n```\ninto this\njs\nwindow.bar=\"bar\";alert(\"bar polyfilled\");\nSo if we write the feature detection lib as a separate module, then load this module in as many browsers as possible to get the resolved feature support value from each browser, and finally for each browser, we feed the resolved value along with the polyfills who depend on this value to conditionally polyfill a browser to the google closure compiler, we get very efficient and lightweight polyfills for each browser.\nI can create a demo repo if you want to see it in action.\n. Well, I just couldn't resist the temptation. :)\nhttps://github.com/hgl/polyfill-concept\n. Eli's polyfill contains the inefficiency that when toggle is called, it first tries to call contains, which will be called again (actually the checkTokenAndGetIndex method that contains uses) when either remove or add is called later.\nAlso it tries to polyfill String::trim and creates its own DOMExceptions, which is doing too much, IMO. trim should rely on a separate polyfiil, and DOMExceptions should be a separate module that all polyfills share. (This is actually not Eli's fault, it just tries to be self-contained).\n. @triblondon Thank you for writing this up.\nI have a few more suggestions:\n\nInitially, serve the full polyfill source gated with a feature detect\n\nI think that's inefficient. We should first serve the feature detect to a testing cluster like saucelabs to get the feature detect data for most popular browsers:\njson\n{\n  \"ie6\": { \"classList\": false, \"fetch\": false },\n  \"ie >6 <12\": \"...\",\n  \"chrome 1\": { \"classList\": false, \"fetch\": false },\n  \"chrome >1 < 39\": \"...\",\n  \"chrome 39\": { \"classList\": { \"toggleForceArg\": false, \"multipleArgs\": true }, \"fetch\": true }\n}\nWe then run the dead code elimination step on the combo of feature detect data and full polyfill to generate the smallest polyfill code for each browser. So when popular browsers request the service, they get precompiled file immediately.\nOnly when an unknown UA request the service, we service the detect code + full polyfill, and optionally beacon back the detect data (for unkown UA, we have to collection large amount of the same detect data, before the mapping between the unknown UA and the detect data can be trusted). After we have the detect data for that UA, we then compiled the polyfill for it, declare the UA as known.\n\nHowever, the code amount of full polyfill can potentially be very large for old browsers, especially as time goes by.\nI think we can take it to the next level by letting users specify which kinds things they like to polyfill:\nhttps://cdn.polyfill.io/v1/classList+fetch.js\nWhen they request this url, they only get classList and fetch polyfills (if the browser doesn't support them).\nWe can even develop a tool to automatically detect the web APIs a particular code base uses, and return a list of polyfill names. (This should be easy, we just need to wrap web APIs and see which ones get called.)\nWe can even define a few keywords which will combine popular polyfills:\nhttps://cdn.polyfill.io/v1/core+network.js\ncore can map to es shims + dom polyfill, and network can map to xhr + fetch for example.\n\nAnd finally for development environment, we can offer the detect + full polyfill as a downloadable file, so users don't need to use the service while developing.\n. Also I tried uglifyjs when I made the suggestion. It doesn't eliminate dead code if the condition is a property of an object.\n``` js\nvar support = { foo: true, bar: false };\nif (!support.foo) {\n  window[\"foo\"] = \"foo\"\n  alert(\"foo polyfilled\");\n}\nif (!support.bar) {\n  window[\"bar\"] = \"bar\"\n  alert(\"bar polyfilled\");\n}\n```\nTry compress this on http://lisperator.net/uglifyjs/#demo\nOnly google closure compiler's \"advanced compilation\" eliminates it.\nBut you have to expose global variables via the [\"name\"] syntax, otherwise it gets renamed.\n. I also have thoughts on how we should test the polyfills, maybe we can discuss it later. (tl;dr: leverage https://github.com/w3c/web-platform-tests)\n. We can also use module syntax to solve the problem of polyfill dependencies.\nperformance.now.js\n``` js\nimport \"./data.now\";\n// polyfill performance.now\n```\ndata.now.js\njs\nDate.now = function now() {\n    return new Date().getTime();\n};\nIf we can make sure no circular dependencies exist, the bundled code can be very lightweight (no commonjs or amd boilerplate code).\n. Sure, in this example I use es6-module-transpiler's bundle format:\ndata.now.js\njs\nvar customVar = new Date().getTime();\nDate.now = function now() {\n    return customVar;\n};\nperformance.now.js\n``` js\nimport \"./data.now\";\nvar customVar = \"polyfill performance.now\";\nalert(customVar);\n```\ncompile-modules convert performance.now.js\n=>\n``` js\n(function() {\n    \"use strict\";\n    var customVar = new Date().getTime();\n    Date.now = function now() {\n        return customVar;\n    };\nvar performance$now$$customVar = \"polyfill performance.now\";\nalert(performance$now$$customVar);\n\n}).call(this);\n```\nAnd if you do\ncompile-modules convert performance.now.js data.now.js\nIt's smart enough to not repeat the data.now.js file.\n. Just to provide an example how granular detects support variants:\nTake Node.prototype.contains for an example:\njs\nif (!NodeHasContains) {\n    if (!isNodeExtendable && isElementExtendable) {\n        document.contains = Element.prototype.contains = contains;\n    } else if (isNodeExtendable) {\n        Node.prototype.contains = contains;\n        if (HTMLElementHasContains) {\n            delete HTMLElement.prototype.contains;\n        }\n    }\n}\nfunction contains() {\n    //...\n}\nyaml\nie * - 8: \n  NodeHasContains: false\n  isNodeExtendable: false\n  isElementExtendable: true\nie 9 - *:\n  NodeHasContains: false\n  isNodeExtendable: true\n  HTMLElementHasContains: true\nfirefox * - 8, safari * - 2:\n  NodeHasContains: false\n  isNodeExtendable: true\n  HTMLElementHasContains: false\n\nThis is also already supported.\n\nSorry, didn't notice it.\n. The current dependency system works because you use different files for different variants.\nIf a polyfill become something like this:\njs\nif (!supportPerformanceNow) {\n // use Date.now() to polyfill performance.now()\n}\nIt's no longer always depends on Date.now(), it only depends on it when supportPerformanceNow is false.  This kind of \"depend on a file under a condition\" is best expressed with a module loader.\nSee systemjs's meta config, which supports this kind of thing.\nAnd my previous code sample should actually be\n``` js\nimport support from \"feature-detection/performance.now\";\nif (!support) {\n  // Use Date.now();\n}\n```\nLoading data.now.js or not is controlled by the config we pass to systemjs.\nThe only thing is that systemjs generates boilerplate code when bundling file, but shouldn't be hard to develop a new bundling format for it. \n\nOn second thought, if you can generate feature detect data for each browser, then current system does work. But it does reinvent the module loader system.\n. Using module syntax to polyfill is probably not a good idea.\nFrom caridy on stackoverflow.\n\nYour modules should assume that the runtime is patched (when needed), and that should be part of the contract.\n\nIf we write polyfills in module syntax, we are breaking that contract.\nFor one, modules don't have access to the global object unless the host environment provides one (e.g., window, self, etc). That means we at least shouldn't use modules to polyfill the js standard library (e.g., Map, Symbol, etc).\n. And if you do want to adopt it, the way to test should also be changed.\nWe should serve the polyfills and all unit tests to each browser, make sure the polyfills work cohesively. If a failing old browser passes all unit tests (can selectively disable some of them if turn out to be unpolyfillable) with the polyfills applied, we can be sure the polyfills are working correctly.\n. test262 is the right choice for es unit tests, it's wonderful if we can use it.\nweb-platform-tests is for web APIs, it's python based though.\n. @juandopazo sorry for the late reply. Did you ask can wpt be wrapped in a grunt task? I don't see the need. We just need to figure out a way to inject the polyfill code before the test code when starting its test runner.\nI'm also wondering, how is the official test262 meant to be run? Can we directly inject the polyfill code to the original runner?\n. ",
    "zslabs": "I referenced the issue @triblondon had mentioned this discussion was moving to, but it appears it was closed. Dealing with the \"multiple classes not supported in IE10/11\" right now --> any further thoughts on the best way to approach this? Thanks!\n. Even after the above PR, still a little confused if there's a workaround built-in for FormData for older versions that don't have it natively. Could you please clarify?\n. Gotcha, appreciate the response. I did come across https://github.com/moxiecode/moxie/blob/master/src/javascript/xhr/FormData.js and https://gist.github.com/lemonhall/3120320 which appears to be a fairly solid solution, but don't have my head wrapped around the internals of this lib for contributing just yet. Have you heard of this one before?\n. @deddu I hadn't had a chance yet; thanks for jumping on this!\n. Ah ok great! It looks like UC Browser is normally expressed in the UA agent as as UCBrowser according to https://www.whatismybrowser.com/developers/tools/user-agent-parser/browse/browser-name/uc-browser-user-agents \n@JakeChampion Since my tests for support with UC Browser seem to align somewhat close to IE11 (as far as fetch and closest support), how would we go about mimicking a browser to act as another? IE10 may even be the safer bet based on older versions of UC Browser, but I'm not 100% on coverage there. https://github.com/ua-parser/uap-core/blob/master/regexes.yaml#L110\n. Submitted #853 - but it's failing and I'm a little unsure why. Have a minute to look? From my tests, IE10 is a close equivalent to UC Browser.\n. Hi @JakeChampion, sure - I'm fine with the above terms. In terms of the coverage, I used caniuse.com to run through as many properties as I could and related them more closely to IE than any other browser. I don't have UC Browser personally, but it's come up enough times on Bugsnag that I figured it'd be a good one to patch if possible ;) so I'm leaning on caniuse.com to help.\n. Hey @triblondon yeah I 100% agree. The version area supports wildcards, correct? I've added in a more specific version-range based on the research I was able to compile with caniuse.com\nCurrent usage of 9.9 is at 49% according to the aforementioned, so hopefully this would help a few others out \ud83d\ude04 \nThanks!\n. Hey @triblondon,\nWhile pasting a screen shot of all of the comparables between the two browsers would be pretty darn big, if you visit http://www.caniuse.com and click the \"Settings\" link at the top, you can turn on/off specific browsers for a more detail oriented look between the two.\nHere's a screen shot from the page for version usage:\n\nThis site has some example UA headers that can be used for testing, with a 9 example being Mozilla/5.0 (Linux; U; Android 4.4.2; en-us; Aqua 3G Build/Aqua_3G) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 UCBrowser/9.9.0.459 U3/0.8.0 Mobile Safari/533.1 taken from an Android 4.2 device.\n. Hi @triblondon,\nIt doesn't look like they've responded yet - how are we feeling about this one? \n. Hey @JakeChampion I was using CodePen for this example with the babel option turned on, but the portion is used inside a larger React-app. What's odd is I have to use babel-polyfill inside of .babelrc for this to work with the polyfill option turned on which loads https://github.com/babel/babel/blob/master/packages/babel-polyfill/src/index.js but I'm not seeing anything in there that polyfill.io shouldn't also be taking care of already which is the confusing part.. @JakeChampion On https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Array/from/polyfill.js#L79 arraylike.constructor.name is coming up as undefined in IE http://stackoverflow.com/questions/25140723/constructor-name-is-undefined-in-internet-explorer . Any other info I could provide? We are attempting to use polyfill.io within a React environment; .babelrc file has the following:\n{\n  \"presets\": [\n    \"es2015\",\n    \"stage-0\",\n    \"react\"\n  ],\n  \"plugins\": [\n    \"transform-strict-mode\",\n    \"transform-class-properties\"\n  ],\n  \"env\": {\n    \"production\": {\n      \"presets\": [\"react-optimize\"]\n    }\n  }\n}\nand the app only works if I include the following (which seems like they'd be covered already by this service):\n```\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\nrequire('babel-polyfill');\n```\nI have also added regenerator-runtime (since that is required in the app).. Hey @JakeChampion,\nSure - a quick example is available at http://codepen.io/zslabs/pen/a56d6c9eae0e692bc019cae6f1f1e787?editors=1111\nIf I console.log() that Set I get [1, 2, 3, 4] in Chrome, but [] in IE11, no babel enabled. . If you click on the settings cog in the JS window, you'll see it included in there. Just using https://cdn.polyfill.io/v2/polyfill.min.js. You can also view the debug mode to see the plain generated HTML page http://s.codepen.io/zslabs/debug/a56d6c9eae0e692bc019cae6f1f1e787. Thanks @triblondon ! It looks like the releases may not necessarily be on a defined schedule -- any idea when something like that may land in the wild?. ",
    "davglass": ":metal: Thanks again!\n. ",
    "quarterto": "I can add tests if needed, but the current matchMedia tests are very barebones.\n. Added a basic test, just checks that the new Function doesn't throw a SyntaxError.\n. ",
    "jrf0110": "Interestingly, I'm seeing the same issue on BrowserStack, IE8. I have had weird problems with BrowserStack not properly forwarding request headers, but I can't really think of why this would be happening.\nI messed around with the build params a lot trying to finagle into working. Here's a screenshot:\n\nI'll try and see if this happens outside of BrowserStack\n. ",
    "axemclion": "@triblondon - yes i am :) \n. ",
    "tejacques": "Sure I'd be happy to. I'll put this together tomorrow.\n. That sounds like a good middle ground.\n. Sure -- I'll try to take a stab at it this week.\n. Hey @triblondon I've got a commit with the behavior we discussed but not sure how best to add a test for it targeting IE8 specifically (or if it makes sense to do so) -- is there a way to do this with the way the tests are set up? I was considering using this technique: http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n. Hmm, I was under the impression that the polyfill-ie8.js file was only used for IE8 (or under), but the tests applied to both polyfill.js and polyfill-ie8.js, I didn't want to add a test for this new behavior which wouldn't occur for browsers using the other polyfill file.\n. That makes sense, I'll add that in and submit a PR later today.\n. Oh wow, I think I just forgot to actually make a PR -- sorry about that. Will re-familiarize myself with this and hopefully get that up today.\n. This is up in #463\n. ",
    "Savageman": "I just tested it and no, it doesn't work. I have the same error as the MDN polyfill: \"TypeError : instanceof called on an object with an invalid prototype property\".\n. You closed this, but the original issue is still not resolved.\nThe included polyfill should now work on iOS 5, but it's still not included (I can't see the ios_safari version in the config.json file).\n. ",
    "Casao": "I agree @jonathantneal. Licensing is generally an exemption from copyright/patent litigation, which would not apply at all here.\nI'd be happy to remove these if that's the consensus -- as you said, I just went with the contributing guidelines as much as possible.\n. @triblondon - I've taken your feedback into place and put something up! I'll work on testing, but I've always found testing window.location to be a bit tricky to do well. I'll see what I can do.\nAs far as license/copyright/whatever goes, it's such a simple snippet of code that's been arrived at independently a number of times, I'm not sure there is truly an \"original author\" - I'm definitely open to it being CC0.\n. That's probably the best I can do for tests without a mocking library, but if there's any more feedback I'm happy to hear it :)\n. ",
    "johnhalton": "It's on my to-do list. :-) \n@jonathantneal: the main purpose of having a contributor agreement will precisely be to protect the public domain spirit of the service, e.g. by ensuring that contributors don't try to assert claims against FT or other users of the service that would threaten this. Really just a matter of making sure everyone's on the same page and has the same expectations, rather than FT making a landgrab for contributors' rights. \n@triblondon: probably a good idea to post a draft on this forum before making it final, to ensure contributors' views are heard? But that does mean I need to get on and write the thing......\n. Hi @triblondon (and @jonathantneal): mostly the first bullet point. Maybe a smidge of the second. It is definitely part of my job, though, but unfortunately (as you may have noticed...) it has not been the highest priority area of my job in the past few weeks. I will use reasonable endeavours in good faith etc etc to push it up the list \"in the next period of time\" (as Gordon Brown used to say). :-) \n. ",
    "gobwas": "Please, I need it work too! \n. Thats a good news!\n. ",
    "rauschma": "\nWhen I\u2019m lazy, I do bar.foo. That will become more convenient in ES6, because undefined triggers default values.\nIf you truly want to to test whether a property exists (versus \u2013 possibly \u2013 a property that has a falsy value): 'foo' in bar\nIf you want to restrict yourself to own (non-inherited) properties:\nObject.prototype.hasOwnProperty.call(bar, 'foo')\nShorter: {}.hasOwnProperty.call(bar, 'foo')\nDo not use bar.hasOwnProperty('foo'), which fails if, e.g., bar has an own property whose name is hasOwnProperty.\n. That\u2019s OK. Ideally, you should never have to do this. What\u2019s your use case?\n. I don\u2019t like using this in this manner. How about:\n\n``` js\n(function(glob) {\n    var undefined;\n    // All polyfills\n}(getGlobalObject()));\nfunction getGlobalObject() {\n    if (isObject(window)) return window;\n    if (isObject(self)) return self;\n    if (isObject(global)) return global;\n    return {};\n}\nfunction isObject(value) {\n    return value !== null && typeof value === 'object';\n}\n```\nI also tried to make the code more self-explanatory. I don\u2019t think that performance is an issue here.\nNote: if your code doesn\u2019t have to run on ES3 then you can omit the undefined trick.\n. ",
    "thednp": "I figured I need to add ie ie8 class via  LT , seems the only solution for now.\nClosed.\n. I am new to this and to Native JS in general, perhaps my finding is my own code related, but I will provide an example as soon as I can. Thank you.\n. Thanks for taking the time to think about it. I am still working on the code. I am going to move forward with my work and will provide exact information as soon as I can isolate the specific case.\n. FYI: I solved the issue, it was indeed my own code doing requestAnimationFrame animation in IE9 with 2 properties at the same time for same element: position: top and translateY. The browser does not support translate obviously, but it had to calculate the (be)tween values for it. Sometimes translate was undefined and the code couldn't make any logic while tweening the values, which created some unnecessary loops. As the result, frame rate dropped very very low.\nWhen using classList from another source, somehow that eliminated my unwanted loops and I was thinking your code is incorrect.\nIssue solved. Please disregard this issue. Great work everybody.\n. I only needed a little help on how to do it, but I figured. For future notice:\n\nvar changeEvent;\nif ( Event !== undefined && typeof Event === 'function' && typeof Event !== 'object' ) {\n    changeEvent = new Event('change');\n} else { // define event type, new Event('type') does not work in any IE\n    changeEvent = document.createEvent('HTMLEvents'); //UIEvents, MouseEvents, etc\n    changeEvent.initEvent('change', true, true);\n}\n\n. Well, simple open IE10+, switch to IE8 view and refresh page. But the strange/crazy thing is, that demo works flawless today. Do you have any idea what is causing this (sometimes it works sometimes gets some error)?\nEDIT: I posted some demo on codepen and jsfiddle and none of them support IE8 :|\n. Now it's not working again.. very strange!\nHere's a page I made for you to play around.\nhttp://thednp.github.io/bootstrap.native/test.html\n. Updated the test page, please check again. I don't really know what I should extract. The IE11 (in IE8 mode) console only shows this error, with no reference to what or where that code is used.\n. After some time to work with, I figured the issue, I've logged the element and the eventElement and it was HTMLDocument with empty eventElement. Here is the fix:\n- in the while (++index < length && !event.cancelImmediate) {} loop locate\nif (indexOf(list, eventElement) !== -1) {\n    eventElement.call(element, event);\n}\n- replace with\nif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\n    eventElement.call(element, event);\n}\nThis makes sure that's a function, so it doesn't call something that's not a function or not supported.\n. Thank you, I found in the API doc.\nThanks again.\n. @triblondon it's really hard to go back in time and find the ideal test case. The thing is I cooked my own polyfill I need for my needs and runs alot faster on IE8.\nBasically I only remember scroll and resize events get slower when using this polyfill library compared to my own mini 5k polyfill lib called minifill.\nI hope this helps.\n. ",
    "callumlocke": "no problem it had been bugging me :)\nI think it would be nicer if the feature name (in the leftmost column of the table) was itself a link to the docs, rather than having Documentation hidden away as an item in the hamburger menu. Do you agree? If so I'll PR that too.\n. OK. Is this resolveable or shall I close this issue?\n. This already exists, it's part of the Event polyfill.\nThis could be made clearer in the table by adding a note under Event.\n. This is because Promise is not in the default set of polyfills. If a feature doesn't have a \u2605 icon on this table, you have to ask for it.\n- http://cdn.polyfill.io/v1/polyfill.js \u2013 will polyfill the default set of features (which does not include Promise)\n- http://cdn.polyfill.io/v1/polyfill.js?features=Promise \u2013 will polyfill Promise (but nothing else)\n- http://cdn.polyfill.io/v1/polyfill.js?features=default,Promise \u2013 will polyfill Promise (in addition to all the defaults)\nTry updating your JSFiddle to load the second or third URL, and it should work in IE11.\n\nNB. here's what you get when you ask for Promise...\n- ...as Chrome 41 (you get nothing)\n- ...as IE11 (you get a polyfill)\n. Then again this one claims Map 'cannot be shimmed'.\n. after normalising line breaks, it matches exactly with the one at http://opensource.org/licenses/MIT\n. done and rebased\n. I also get the _enqueueMicrotask is not defined error when loading from the following UA (iPad):\nMozilla/5.0 (iPad; CPU OS 7_0 like Mac OS X) AppleWebKit/537.51.1 (KHTML, like Gecko) Version/7.0 Mobile/11A465 Safari/9537.53\nHappens for me with any bundle that includes Promise, e.g.\nhttps://cdn.polyfill.io/v1/polyfill.js?features=default,Promise\n. I agree that makes more sense.\n. I already did, look above, PR #451 \n. ok see #457\n. Not currently. I googled and couldn't find anything.\nWhat do you need a MouseEvent polyfill for?\n. a few more features that are suspiciously all-green:\n- Date.now\n- Event.focusin\n- Element\n- Date.prototype.toISOString\n. Website still has the problem \u2013 is this fix still awaiting deployment, or did it get fixed and then regress?\n. OK that's the only two I care about right now, feel free to merge in, although there might be more with the same problem.\nAm I right that currently we automatically assume a browser natively supports a feature if the config.json makes no mention of that browser?\nCould there be an argument for this: if a particular UA is not mentioned in the config.json at all, the server concludes it might not have the feature, and gives it a gated version of the polyfill?\n. > Arguably, yes. But we're trying to be fairly conservative.\nIsn't what I'm suggesting more conservative \u2013 i.e. opting for 'gated polyfill' when support is unknown?\n. @thednp you need something like:\nhttps://cdn.polyfill.io/v1/polyfill.min.js?features=default,getComputedStyle\n. > is fastclick comparable to HTML5Shiv?\nThe only significant difference I can see is that html5shiv makes something 'work' whereas fastclick makes something 'work normally'. But I don't think that difference is a strong argument against.\nAnd this is a strong pro, imo:\n\nThe advantage is it gives access to polyfill service's robust mechanism for selectively applying fastclick only to browsers that need it\n\nI didn't like the idea from the headline but now I like it. As a non-default feature.\n. The spec uses @@name notation for well-known symbols.\nCan we put this new polyfill in polyfills/Array/prototype/@@iterator?\nAnd another one (slightly different implementation) in polyfills/String/prototype/@@iterator?\n. I'm not 100% sure but I would lean towards including Array/prototype/@@iterator and String/prototype/@@iterator in the default set, and making them each depend on Symbol/iterator, which effectively adds the whole Symbol polyfill to the default set. This would add around 2.5KB to the default bundle size for browsers that don't support Symbol natively. That includes IE (pre-Edge), Safari < 9, iOS Safari < 9, Android < 9.1. (All the latest major browser versions support Symbol natively.)\nJust thought, does @@name notation present any problem in URL query strings? If so maybe it's better to use the ~name style instead?\n. Ah forgot about this. I'm a bit snowed under and won't be able to do this till Wednesday. When are you hoping to ship?\n. Sorry, my workload is huge at the moment. I can't be sure I'll have time to finish this till after the referendum. I have no problem with someone else taking over, if you need it sooner\n. ",
    "everyonesdesign": "Actually this issue is just a part of polyfilling INTL standard (see MDN) which is quite spacious and will require lots of efforts to be implemented.\n. ",
    "JeffJacobson": "Thanks. I updated the JSFiddle as @callumlocke suggested and it works! I didn't realize that Promise was not a default feature.\n. ",
    "okonet": "I'm confused: https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Promise/config.json#L6\nAlso, why is Promise not a part of es6 set?\n. ",
    "jardakotesovec": "I see, you are right. Thanks!\n. ",
    "mhevery": "Here are the reasons why they claim they can not be shimmed. https://github.com/eriwen/es6-map-shim/commit/2d6bb9dd9bef03500a8e770fcfe6e8feaf15fa37\nThey recommend using https://github.com/WebReflection/es6-collections Could we get that added into this repo?\n. Sweet! Do you have an estimate? How can we help?\n. YAY! When will it show up on http://cdn.polyfill.io/v2/docs/features/ and on CDN?\n. ",
    "andyburke": "It's the same change that was applied to Array.prototype.find. (the link is to my branch but it's actually your change)\nI have not tested it. I just assumed it was an oversight that Array.prototype.find was changed like this and findIndex wasn't.\nI arrived here because I am not getting Array.prototype.findIndex w/ chrome 41 via cdn.polyfill.io with the modernizr:es6array feature. I also tried explicitly doing the Array.prototype.findIndex feature and was still not getting it. It was only once I added |always that it worked.\nI just thought this might be the fix and figured it would be better to send a PR than an issue.\nIf this fix is ridiculous, my apologies, I haven't dug in much on how the service itself works.\n. Any idea when this will get deployed? I am still not getting findIndex back when I hit https://cdn.polyfill.io/v1/polyfill.min.js?features=modernizr:es6array\n. I see, I misunderstood the 'features' parameter, I didn't expect that to stop it loading the defaults.\n. Yep, facepalmed after re-testing and re-reading docs.\nOn Tue, May 5, 2015 at 6:12 AM Samuel Giles notifications@github.com\nwrote:\n\nYou can include 'default' as a feature to include the default set\nadditionally: `\nhttp://cdn.polyfill.io/v1/polyfill.js?features=Element.prototype.closest,default`\nhttp://cdn.polyfill.io/v1/polyfill.js?features=Element.prototype.closest,default\nOn Tue, May 5, 2015 at 2:10 PM, Andy Burke notifications@github.com\nwrote:\n\nI see, I misunderstood the 'features' parameter, I didn't expect that to\nstop it loading the defaults.\n\u2014\nReply to this email directly or view it on GitHub\n<\nhttps://github.com/Financial-Times/polyfill-service/issues/395#issuecomment-99074141\n.\n\n\nSam Giles\nDeveloper\nFT Labs\nFor Origami questions: origami.support@ft.com\nNumber One Southwark Bridge, London SE1 9HL\n\n\nThis email was sent by a company owned by Pearson plc, registered office\nat\n80 Strand, London WC2R 0RL. Registered in England and Wales with company\nnumber 53723.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/395#issuecomment-99074520\n.\n. I'm still seeing this. Is this supposed to be fixed? We're explicitly including setImmediate support, but it's not working in Facebook's in-app browser.\n\ncc @jacklee0223\n. @JakeChampion Thanks, here's a FB story link that links to the following HTML:\nhttps://m.facebook.com/story.php?story_fbid=10154490930306508&id=739196507\n``` html\n<!DOCTYPE html>\n\n\n\n\n<title>FB Browser Window setImmediate repro</title>\n\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default,setImmediate\"></script>\n\n\n\n\n        setImmediate( function() {\n            alert( 'setImmediate worked' );\n        } );\n    \n\n```\n. @JakeChampion any update on this? get a chance to try the repro above?\n. @JakeChampion I'm not aware of a way, other than theoretically faking their UA?\nIs there any progress on this? Do you have any idea what could be causing it? We're willing to contribute, but would probably need at least a little guidance on how to proceed.. @triblondon I've updated the test url: https://hellofloat.com/fb_browser_polyfill_test/\nIt results in this (tested on an Android device in FB app):\n\n. Thanks!. ",
    "barneycarroll": "@callumlocke do you think it's worth investigating a system for modular compilations of core-js's shims? The likelihood is that there will be diminishing returns on output size as fewer polyfills are required, but the polyfills themselves are robust and accountable. The practice still adds a layer of complexity, because it's no longer a case of just concatenating discrete files.\n. The OP clearly describes the target environments (BTW Kyle Simpson is working on a jsperf/caniuse-type validitor for JS engines which could provide some non-anecdotal data for the support grid \u2014 you contributors should totally talk). \nI agree with @ljharb that this feels kind of pyrrhic (but for different reasons) \u2014 but it's totally legitimate as a patch. As a procedural, on-demand service, it's not within polyfill-service's remit to say \"you shouldn't want this in the first place\" / \"nobody expects IE8 to do X anyway\".\n@pygy FWIW, IMO the root problem being addressed here is that typeof and instanceof are unshimmably broken APIs and that Object.prototype.toString is a convoluted hack that kind of stands in for them. I use (npm) type-of-is to offer an opinionated and altogether better API.\n. ",
    "konklone": "I just put a few minutes into trying to find where to change this, and can't figure it out -- happy to submit a PR.\n. Thank you! :)\n. ",
    "szeryf": "Same thing with Object.create (see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/create).\n. ",
    "thasmo": "@triblondon It seems this was fixed in Firefox 52. https://ft-polyfill-service.herokuapp.com/v2/polyfill.js still polyfills the events although Firefox 52+ doesn't need the polyfills afaik.. ",
    "SimenB": "A quick look at your npm scripts told me you're using Heroku. If so, how about installing devDeps on Heroku?\nhttps://devcenter.heroku.com/articles/nodejs-support#customizing-the-build-process\n. For my use case, I just want the polyfills themselves. How about moving them into it's own project, and depending on it? It'll create some overhead of course.\n. It's not an issue with deploy, as I just require the polyfills I need at build-time.\nIf mocha is the only devDep, then of course it's no real issue. I just thought someone maybe went npm i -S mocha instead of npm i -D mocha. They're right next to each other on the keyboard, so who knows :laughing: \n. ",
    "matthewrobb": "Hello, curious if this is still in the pipe?\n. ",
    "ghost": "Will MutationObserver be available?\nFor some reason google cache shows it on the feature list. Was it removed?\n. ",
    "hipkiss91": "Please add this, I'd love you forever! Is it in v3?\n. I can certainly have a gander. Especially considering this would be incredibly helpful for me. @triblondon Pulled the muOb branch.\n. The test shows that it failed on ie11. Why? MuOb's are available in ie11. Thoughts?\n. Is it just mocha being used or is it also using proclaim or qunit or expected.js?\n. Is exepcted.js for expect() methods? Apologies if it's a dumb question, not used testing frameworks before.\nBut if the answer is true then for the failures in IE11 just need to add expect = require('expect.js'); to the top of the tests file.  \nAlso there's no .env file? So I can't configure the SAUCE_USER_NAME and SAUCE_API_KEY to allow me to test?\n. @triblondon @JakeChampion How do I submit my updates to circleCI for testing? Or is that something you guys do?\n. @JakeChampion Done: https://github.com/Financial-Times/polyfill-service/pull/937\n:)\n. @JakeChampion That's awesome news. Apologies if I seemed a little dumb with this. First time I've contributed to something, so it's nice you all bared with me! Really not sure what happened with my indentation. I have it set in sublime text correctly - weird. Thanks for fixing it. I can take another look, see what I can come up with. Again, thanks :)\n. Error:  SAUCE_USER_NAME and SAUCE_API_KEY must be set in the environment.\nWhere are these set? Is this also something you guys do? @JakeChampion @triblondon (Sorry about this.)\n. @JakeChampion Does this mean my modifications have worked? The test shows 2 failures when testing on IE9 but no further information, and it timed out?\n. @triblondon Thanks for the comments. Apologies on not removing the old code, I will do that now. In regard to the indentation - I use tabs of length 4. What length do you guys prefer? If it is 4, then I imagine I missed a tab, apologies.\n. @triblondon Of course - consistency is king. It should all read as though one person wrote it :) Any thoughts as to why the eslint error might occur? \nAlso, once I've fixed it - do I just create another PR?\n. ",
    "pygy": "D'oh! Thanks for the reply (-:\nHow do I set up the config.json so that the detection is performed on as many browsers as possible? Should I just disable anything but IE and FF?\nEdit: Still no luck with the tests.\n. The comments of @kitcambridge here are also relevant...\n. It doesn't help :-/\n. ",
    "AndrewIngram": "Can we assume that this is now in production?\n. ",
    "andyearnshaw": "Nice work, @caridy :smile:.\nThe only thing I might add is that the order in which locales are loaded is (kind of) important only for the very first one, because it becomes the default.  This could probably be changed in the polyfill to set the default to the best match for navigator.language || navigator.userLanguage instead, though (after it's loaded, that is).\n. Accessors are used in Intl.js to provide as close-to-specification implementation as possible.  At least one of the getters is a performance optimisation, too, so option 3 isn't a great idea.  Another point to note is that we use the proper Ecma 402 tests from the test262 suite too, so removing accessors would cause these tests to fail.\nGiven that, option 2 seems like the best option, it's a minor change and should resolve this problem without any foreseeable side-affects.\nSide note, not sure if it's worth mentioning\u2014and certainly doesn't affect this this issue\u2014but the defineProperty polyfill doesn't seem to account for IE8's ability to use accessors on DOM objects.  That could affect other polyfills that polyfill DOM accessors.  If this is intentional, however, then that's fine.\n. @triblondon that covers the basics (document, window and elements) but nothing else.  That might be enough, though you could probably add a couple of others like Event and Event.prototype.  \nFWIW, you can distinguish a DOM object in IE 8 by testing whether it is an instance of Object:\njavascript\nif (nativeDefineProperty && object && typeof object === 'object' && !(object instanceof Object)) {\n    return nativeDefineProperty(object, property, descriptor);\n}\nThat being said, you can't be certain because objects from other contexts have the same trait.  Still, it might be worth just letting nativeDefineProperty have a go in this case, as your polyfill is just going to throw an error anyway (albeit with a much better error message) and defining properties on objects from other windows seems like a rarer use case than polyfilling accessors on the obscurer DOM objects.\n. ",
    "AutoSponge": "I had the same issue in production. Because the unknown parameter doesn't seem to work from the cdn, my workaround was to override the useragent as Windows IE8 for all requests :(\nhtml\n<script src=\"https://cdn.polyfill.io/v1/polyfill.min.js?features=default,es6,fetch&flags=gated&ua=Mozilla%2F5.0%20(Windows%3B%20U%3B%20MSIE%209.0%3B%20Windows%20NT%209.0%3B%20en-US)\"></script>\n. ",
    "iSimonWeb": ":+1: Up, drove me crazy for an hour just now.\n. ",
    "kennethaasan": "When will this polyfill be in production?\n. Firefox OS 2.0\nUser-agent: \"Mozilla/5.0 (Mobile; rv:32.0) Gecko/20100101 Firefox/32.0\"\n. I'll do that tomorrow.\n. \n\n\nI'm on the latest build.\n. I'm using Firefox WebIDE with Firefox OS 2.0 that you can install on your computer to simulate Firefox OS. It's the same case with my friends Android phone with a Firefox browser.\n\n. ",
    "zloirock": "@JakeChampion too many special cases. For Set, Map, generators - ok, but strings - should iterate over code points, generic iterables...\n. @JakeChampion I use this common code for String#at, String#codePointAt and String#@@iterator.\nIn core-js I don't add Symbol polyfill as dependency to features working with iterables and use internal keys for well-known symbols.\n. I watch your project. One day we were discussing the possibility of adding core-js to polyfill-service in gitter - it's required only commonjs build step. This idea LGTM.\n. Any news about adding commonjs build step?\n. I do not exactly understand polyfill-service build process. Do you wanna bundle commonjs for each polyfill individually? In this case, you will have a problem, mentioned in your PR to core-js. Better run browserify for complete polyfills bundle if at least one polyfill requires commonjs.\n. CommonJS required for external modules, so filesystem path is not important.\n. I mean browserify should be called on the next step, for a bundle for a browser, not for files from this directory. Your approach will work for 1 polyfill from core-js, but if you wanna use no only one - you will have a bundle of size in megabytes because of duplication internal modules.\n. :+1: \n. ",
    "zarjay": "No longer able to reproduce it in IE10, but I'm still able to reproduce it in iOS7. Here's what I see in IE10:\n/* For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: ie/10.0.0\n * Features requested: Promise,default\n * Library version: latest\n * \n * - _enqueueMicrotask, License: CC0  (required by \"Promise\")\n * - Promise, License: MIT \n * - Event, License: CC0  (required by \"default\", \"CustomEvent\")\n * - CustomEvent, License: CC0  (required by \"default\")\n * - DOMTokenList-toggle, License: CC0  (required by \"default\")\n * - Element.prototype.matches-ms, License: CC0  (required by \"default\", \"Element.prototype.closest\")\n * - Element.prototype.closest, License: CC0  (required by \"default\")\n * - Object.assign, License: CC0  (required by \"default\")\n * - String.prototype.includes, License: CC0  (required by \"default\") */\nAnd here's what I see in iOS7 Safari:\n/* For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: ios_saf/7.0.0\n * Features requested: Promise,default\n * Library version: latest\n * \n * - Promise, License: MIT \n * - Element.prototype.matches-webkit, License: CC0  (required by \"default\", \"Element.prototype.closest\")\n * - Element.prototype.closest, License: CC0  (required by \"default\")\n * - Object.assign, License: CC0  (required by \"default\")\n * - String.prototype.includes, License: CC0  (required by \"default\") */\nHere's a simple test in CodePen, which returns false in my iOS7.1 simulator.\n. ",
    "mehcode": "How is this going? This would be a nice polyfill to have. \nIs there something I can do to help it along?\n. ",
    "antoligy": "Hey,\nI've opened a PR implementing this, with a note about document.registerElement() being removed from the spec in favour of window.customElements.define().\n. I was thinking of re-attempting this with webcomponentsjs which supports v1 (with the help of other polyfills that the service can ship - https://github.com/webcomponents/webcomponentsjs/tree/v1/src/CustomElements/v1) - Given that this issue has been closed, would that still welcome?\n. Suggestion from @didoo - https://twitter.com/areaweb/status/690331988935450624 \n\n. Yep, there's an o-share web-component which prompted me to start looking for this polyfill!\nFor now it seems as though the usage of registerElement in Origami comes with feature detection, and I doubt that even with that it's seeing widespread use (though this is a massive assumption, to confirm I'll ask around on Slack tomorrow).\nAs discussed in https://github.com/WebReflection/document-register-element/issues/58, customElements.define is the final (stable?) version of this API and this has already been upstreamed into HTML, so we should be safe to use that going forward.\nI'm happy to close this PR for now, and will raise another at a later date with something more concrete.\n. Hey - Just updated with commonjs set to true.\nSure, I'll take a look at browser support - Watch this space and all that!\nNo sorry, I don't have push access to FT Github, only BitBucket - I'll ask around to see if that's something that can be changed.\n. \ud83c\udf89 \n. Oops, looks like this is already fixed!\n. ",
    "bedeoverend": "@triblondon @antoligy I'd be happy to make a PR for this one too - but just interested in what criteria you have for choosing the particular polyfill?\ndocument-register-element - now supports v1 and is being used by skatejs. But also custom-elements which is backed by the Polymer team I believe, though I don't think it's being used in production yet.\nI believe document-register-element has better compatibility, but I'm not sure about the differences other than that. Is there a particular process you go through in order to select a polyfill?\n. @JakeChampion thanks!\nWould love to work on this but I doubt I'll have time to write all the tests. When / if I do, I'll definitely take a crack - I'd say the custom-elements polyfill will be more stable + more well maintained. I know skatejs now uses all of the webcomponents orgs polyfills.. Hey @alexlafroscia unfortunately I don't have any time to work on this currently, though I've really no idea of the scale involved. If you're interested in pursuing it yourself, it might be possible to pull a lot of the tests from https://github.com/webcomponents/custom-elements as I believe it's well tested, though probably need to be fitted into polyfill.io's test structure. \nYeah for sure - all of the webcomponent libraries would benefit greatly from this, it's a fantastic service.. @alexlafroscia out of interest, what's left to be done on this? It feels like it's really close! Thanks for getting it so far, if I get any time would love to pick it up.. Just clarifying the final syntax, the user should request customElements,customElements.~native-shim if they want to guarantee CE support w/ transpiled JS? Requesting just customElements won't ever pull in native-shim and similarly requesting just customElements.~native-shim will never pull in the customElements polyfill, correct?\nFWIW even though there's a bit more going on for the user to consume customElements, I think it's a better approach as it's clearer when it comes to understanding what polyfill / shim you get served.. I opened a new PR #1376, I was just wondering if @JakeChampion you'd have any time to review? There's a few questions / changes I'm sure I'll need to make, but really keen to land this one :). I've updated the config to not try polyfill <=IE10 and Safari <=8, by using ranges in the config, as I figure we can't guarantee them working, so best to make that clear.. ",
    "alexlafroscia": "Hey @bedeoverend, I'm interested in getting this working too, specifically for use with skate.js. If you're game, we could split up the tests. Being able to lean on Polyfill.io to avoid always providing the polyfill makes Skate way more attractive, since the required polyfills are a large part of the payload right now.. Totally fair. I'll find out next week if we'll be using Skate at work. If we are, then I'll probably take this on since we won't want to ship the Custom Elements polyfill to browsers that don't need it like Chrome.. RE: tests, I'll look through the existing ones and pick out a handful that seem relevant. \nRE: the optional native shim..\nWould people then choose to add the native shim as a separate feature, that has customElements as a dependency? I didn't quite follow what you said about loading the shim instead of the main polyfill. . I'm kind of leaning toward just ignoring the native shim entirely right now, and having people bring it in themselves if needed. People would need the shim if:\n\nThey are using ES6 classes that have been transpiled to ES5 to create their custom elements\nThe browser is not using the polyfill for customElements -- the polyfill can handle the ES5 classes, apparently\n\nThoughts on just leaving it out, with a reference in the notes about it (and the link to the full documentation)?. Before this gets pulled in, I need to do a little more research on dependent polyfills. I've only tested this in browsers that have native ShadowDOM support, so I need to try running it against browsers like IE that might have dependent polyfills. The README for the original polyfill doesn't specify anything, but Skate.js published this package:\nhttps://github.com/skatejs/web-components/blob/master/src/index.js\nWhich apparently bundles all required polyfills together. I might need to add some of those to the dependencies here. I'm trying to get to a point where I can drop the file that they provide, and instead pull in just the needed dependencies from Polyfill.io instead \ud83d\ude04 . Alright, so it looks like only Promise is actually required by the custom-elements polyfill, so I added that in.\nI've been mulling over how to handle the \"native shim\" for a while, and am wondering if we could offer is as an optional package in addition to the custom elements polyfill itself.\nIf someone were to need the native shim, they would want to run that before the polyfill itself is run. Since most people that are adding this to their page would likely have their polyfills are the first script, this would end up with a load order something like:\nnative customElements shim\npolyfill.io with the customElements feature\nthe rest of their scripts\nthis is kind of unfortuate, because now there's this one script that can't be bundled with the rest of their code.\nHowever, if we could optionally provide both, their load order would be more like:\npolyfill.io with the customElements+native shim feature\nthe rest of their scripts\nwhich is a lot more friendly, I think. The service would just need to make sure that the native shim code is executed before the polyfill. Thoughts?\nThe reason I'm unsure about it is that it's really not a polyfill at all, so there's never going to be a browser that does not need the native shim. It's kind of an anti-polyfill; it's only needed by the browsers that are not polyfilling customElements since the polyfill handles ES5 classes just fine from what I understand. I don't want to put something in here that's outside the scope of what your project is trying to do.. >  However, whether you need the native shim or not seems unrelated to the browser you're using and more to do with whether you are transpiling your code, right?\nYes, 100% correct\nI think that making it a dependency might be a fine solution. It's not very large, and people can always exclude it if they don't need it -- which is only the case if they're shipping ES6 classes without transpilation, which I'm sure very few people are doing. I'll get that added in as well. \nThanks for the additional explanation, I have a better understanding of what you're suggesting now.. Is there a way to force the detect option? The native shim should only be executed when it's actually needed; you can see how the Skate.js folks solve this here:\nhttps://github.com/skatejs/web-components/blob/43a107a76d266c7bc46ff94d32cafad013726233/webpack.config.js#L13\nBasically, they wrap the whole polyfill in an eval and then execute it only when the native implementation is available.  We would want to do basically the same thing, so I'm wondering if we can leverage the existing detect feature to do this, or if we should instead just bake the check into the polyfill the same way that they do.\nUnfortunately, if you run the native shim through Babel, it breaks; you need to leave the native classes in the shim as native classes, so you have to be careful not to let the browser execute it if it doesn't have support for ES6 classes.. Hmm, so after playing with trying to make the native shim a dependency of customElements, I'm not sure that I can get it set up in a way that seems intuitive.  So, I think it actually might make more sense to flip that around and set it up such that the customElements polyfill is a dependency of the native shim.\n\nIf the developer wants to author components in ES6, they can just include customElements\nIf the developer wants to author components in ES5, they can just include customElements.~native-shim\nIf the browser supports custom elements natively, it will only download the shim and patch the native implementation\nIf the browser does not support custom elements natively, it will end up downloading the polyfill and the shim; the polyfill supports ES5 classes anyway. There is the additional overheard of getting the shim when it's not necessary, but I think that might be OK. Okay, so with changes that I just pushed, it works as described above.\n\nNote that the customElements tests fail in browers without ES6 class support (I tested in IE 11) because it inherently requires ES6.  If you need ES5 class support, you must use the customElements.~native-shim settings instead, which passes in IE 11 (as well as Chrome and Safari, which I also tried).\nI think keeping them separate is probably the easiest approach; this way it should be clear whether the user should include customElements with or without the shim, based on whether they are sending ES6 to the browser or transpiling it.. > But in this case, there are CSP-supporting browsers that you would need native-shim in, right? If that's the case you may run into trouble.\nHuh, that might be an issue. Not sure how to avoid that, though... Further explanation and thoughts below.\n\nPulling a dependency from a git URL is not ideal. I'd ideally like to wait until the version you need is published before we merge.\n\nThat's fine, I'm not in any particular rush. Hopefully there isn't a reason it was released to Github but not NPM so that this isn't left in limbo for too long.\n\nRegarding the use of babili, can you run that reasoning past me another way - I'm struggling to grok your comment in the update task.\n\nAbsolutely. Basically, because the native customElements implementation must receive an ES6 class, the native shim can't be compiled from ES6 down to ES5.  Because it must be provided as ES6, Uglify can't minify the file for us (only a non-standard branch supports ES6 right now, as far as I know) so I needed to grab a different tool to minify it (the source only provides an un-minified version). Since babili is built for exactly the task of minifying ES6, I grabbed and ran the minification manually to strip out the comments and such.\nNeeding the native shim to be provided to the browser as ES6 is also the reason for needing eval() in the polyfill. We don't want browsers that can't support ES6 to attempt to interpret the file, so we hide the ES6 code in a string and eval only if necessary.  Because the native shim is only necessary in instances where customElements is provided natively, a browser that can't interpret ES6 would never need the shim.  I didn't think about the CSP issues with eval though... \nMaybe we could do the feature-detection server-side and only serve the polyfill to browsers that we know can handle ES6?  Can the browser version matching that the config.json uses handle something like \"only versions of {X browser} greater than Y\" etc.? We would need to flip the normal use case of \"only versions of {X browser} less than Y\" around, and I don't know if it supports that.\nIn a case where a browser could not handle ES6, we would still want to provide the customElements dependency, since that would handle what the shim is doing as well.  Can the server handle this kind of use case?\n\nRequest customElements.~native-shim\nServer determines that the browser can't handle ES6, so it skips the native shim\nServer returns just the customElements polyfill\n\nI think that if the server determined that the native-shim should be ignored, it would also ignore the dependency of customElements, but I might be entirely wrong about that. This is my first time trying to add a polyfill to the service!\nThe whole setup here is a little strange, but it basically falls into a table like so:\n| Developer delivers components as | Developer requests           | Browser supports customElements | Browser supports ES6 classes | Server should provide              |\n|:---------------------------------|:-----------------------------|:----------------------------------|:-----------------------------|:-----------------------------------|\n| ES6 Classes                      | customElements             | Yes                               | Yes                          | Nothing                            |\n| ES6 Classes                      | customElements             | No                                | Yes                          | Just the customElements polyfill |\n| ES5 Classes (functions or babel) | customElements.native-shim | Yes                               | Yes                          | Just the native-shim             |\n| ES5 Classes (functions or babel) | customElements.native-shim | No                                | Yes                          | Just the customElements polyfill |\n| ES5 Classes (functions or babel) | customElements.native-shim | No                                | No                           | Just the customElements polyfill |\nIn cases where the browser should not provide the native-shim, it can provided it, as long as it's not evaluated since that will cause the the browser to choke on syntax it doesn't understand. Right now, we're solving that with eval() but I know it's not an elegant solution.. Sorry for disappearing, I was away last week.\nThanks for the kudos, @JakeChampion!\nTo confirm, that is exactly what I was referring to. With confirmation that that usage is supported, I'll update this PR to use the browser version to only ship the shim to browsers that can actually use it; this way we can avoid having to eval the code at all.. Is there a way to configure a polyfill to match no versions of a browser?\nBasically, for any browser that needs the customElements polyfill, I want to configure the customElements.~native-shim to not be served. If the developer specifies that they need the native shim, some browsers should actually get only the customElements polyfill and not the shim. We basically never want to ship both the native shim and the polyfill to a browser; just one or the other.. I think this does fall into the same kind of configuration case that Promise.prototype.finally does; you only want to provide the polyfill to browsers that have a native implementation of Promise, since the polyfill already includes .finally.\nIn investigating how Promise.prototype.finally works, I tried grabbing the polyfill with just Promise.prototype.finally specified as the feature I want in IE 11. Instead of returning me the Promise polyfill (which it would require) it gave me nothing. This seems a little counter-intuitive; shouldn't it have given me the polyfill?  Or do you have to specify Promise,Promise.prototype.finally as the feature set you want?\nWhatever the mechanics of that are, customElements.~native-shim would mirror.  I would like it if, to get the Native Shim working in any browser, you only had to specify it alone, instead of customElements,customElements.~native-shim since currently, just asking for the native shim in a browser that does not have native customElements support just gives you nothing, instead of giving you the polyfill.. I guess my real question is, because I'm worried I may not be being too clear:\nIs there some way the config can be authored so that specifying just customElements.~native-shim will ship the custom elements polyfill to the browsers that need it, without the shim, and just the shim to the browsers with native custom elements support, without the polyfill? Or does it have to be done by requesting customElements,customElements.~native-shim explicitly?. @JakeChampion yes. @JakeChampion yeah, I think that's probably going to be the easiest way to go.\nSorry that this has been put on my back burner, I still really want to get this over the finish line. It seems like the custom elements polyfill finally released a 1.0 version a week or so ago, so I'll try to update my PR to use that and see if we can get this landed.\nhttps://github.com/webcomponents/custom-elements/releases/tag/v1.0.0. @JakeChampion could be.\nI hate to say it, but I'm not sure I'm going to be able to finish this. Work's been keeping me really busy lately, and we ended up deciding to build this polyfill into our bundle rather than using polyfill.io. I just don't have time to finish this up, but hopefully someone else that cares about it can pick up the torch.. It was pretty much just solidifying the approach to specifying whether just the polyfill was desired, or the polyfill plus the shim. The semantics are a little weird, since the shim would be required when the polyfill isn't, but the polyfill includes the shim... It's weird. I wrote out a chart a while back for reference.\nAlso rebasing the PR to master, since there were some conflicts.\nI know it was close, I just know that I won't have time to finish it. It would be really cool to see someone get it over the finish line.. Per MDN's docs on registerElement:\n\ndocument.registerElement() is deprecated in favor of customElements.define().\n\ncustomElements.define() will be polyfilled by the PR I'm working on, which @triblondon linked to above.  So it's not really a duplicate, but I'm not sure if you'd want to add a polyfill not for behavior that is already deprecated.. I don't know the user-agent string for Googlebot off the top of my head. They do have documentation on crawler user agents here, thougH:\nhttps://support.google.com/webmasters/answer/1061943?hl=en\nI believe that the UA does not reference the version of Chrome. My understanding is that there is work being done to get Googlebot running always using the latest Chrome release, but don't quote me on it \ud83d\ude05 \nHere is the documentation on fetch-and-render, which references the fact that it's Chrome 41 under the hood right now:\nhttps://developers.google.com/search/docs/guides/rendering. I'm so glad this landed, thanks for taking this on @JakeChampion! Hopefully this change helps prevent anyone else from having to go through what I did to debug the issues with Googlebot.. For now, I'm pulling directly from Github, since \"alpha 4\" has not been published to NPM. I made an issue requesting that it be published there, which can be found here:\nhttps://github.com/webcomponents/custom-elements/issues/68. ",
    "hannesj": "Would be nice to have a tarball (or even a version pushed to npmjs.com) that could be readily installed using npm. Now you have to run grunt buildsources, which doesn't fly really nicely with our automated deployment.\n. @JakeChampion, thanks, will be looking forward to that.\n. @JakeChampion, only for version 4 and up. We are still seeing quite a lot of v2.1 and v3 in the wild.\n. Probably we also want to polyfill everything that is polyfilled to the default android browser and not only Intl.\n. I'd like to add targeting for ie_mob for these before the 3.9 is cut out. I'll try to test and do a PR tomorrow.\n. @JakeChampion Sorry, I won't manage it today. Would it be ok to add the targeting after the rc has been cut? Otherwise we can wait for 3.10 if needed.\n. Tested on Mobile IE11. Screenshots attached.\n\n\n\n\n\n\n\n\n\n\n\n\n. @JakeChampion Could you push this also to NPM?\n. Thanks\n. @AdaRoseEdwards Could you check support for these newly added polyfills? \n. @triblondon The detect should probably be wrapped in a try/catch, as it throws an exception currently.\n. @JakeChampion sure, done.\n. I'm seeing similar issues with following browsers. Could Huawei be shipping an older android browser based browser, rather than chrome with their Android 5 phones?\n- Mozilla/5.0 (Linux; U; Android 5.1.1; fi-fi; HUAWEI Y560-L01 Build/HUAWEIY560-L01) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36\n- Mozilla/5.0 (Linux; U; Android 5.1; en-us; HUAWEI TIT-L01 Build/HUAWEITIT-L01) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36\n. @JakeChampion any update on this?. @JakeChampion it seems there was just a small miss in removing the wrapper. My branch at https://github.com/Financial-Times/polyfill-service/pull/1025 passes on the browsers listed in on https://github.com/Financial-Times/polyfill-service/pull/976#issuecomment-262417924 in BrowserStack.. The android failure seems to be due to it not following the ES2016 Spec for ToObject, which is used in Object.keys, even tough it supports symbols. The test is fixed by #1026. Relates to #993. . @JakeChampion Is there any estimate when you are doing a new beta release, so we could get this included in our bundle?. Ok, good to hear that it's coming up. Hopefully BrowserStack will be working soon.. @JakeChampion Any update on your solution with BrowserStack/the release?. @asilvas I could take a look on this, as this affects us also.. This was fixed in https://github.com/Financial-Times/polyfill-service/commit/a4ba0f20c24ba7292066193295109aed20496ac9, but is not released yet. \n@JakeChampion Do you have any estimate for the next release?. should this be <=11. ",
    "lewisje": "I just discovered this service, and it would be great to exclude just Intl because that polyfill is almost 17MB, even minified (probably to set all of the specific locale information).\n. The idea is that I'd like to include everything but Intl and there's no obvious way to do that, other than enumerating every package that doesn't have Intl in it.\n. I'm not entirely familiar with how all of the packages are named and I have not seen documentation on all of the package names (apart from a comment in the unminified JS that states which packages require each polyfill, from which a comprehensive list of packages could potentially be generated), but it really doesn't look like I could just specify all the top-level objects I wanted polyfills for and have that work, nor is there any other way to enumerate all the polyfills that currently exist and to except particular ones (mostly because so many of the polyfills are required only by the all package and do not appear to be selectable other than by selecting all).\nFor now I'm just using es5,es6,es7,html5shiv, all gated, because of an issue with one of the polyfills in the default package that throws in IE8 (which may have been mentioned in another issue posted here), but that excludes most of the useful DOM-based polyfills.\n. As an example, on this page, when describing the features parameter, there is the text\n\nthough group aliases such as 'es5' and 'es6' are also accepted (these are defined in the polyfills' config.json files - here's an example).\n\nand the broken link in that text should be changed to this.\n\nIt's as if every occurrence of\n\npolyfill-service/blob/master/polyfills\n\nshould be replaced with\n\npolyfill-library/blob/master/polyfills\n\nin the documentation. (edited Thursday 3 January 2019). ",
    "jonathan-fielding": "Update task has been added\n. Tests added, also got the detect working BUT am hoping @scottjehl gets back to me about why the picturefill polyfill doesnt expose HTMLPictureElement\n. Updated the name, and the test \n. The new test didnt work so reverted\n. Ok thats working now and I have updated the unit tests run in polyfill service as they broke with new version of Picturefill\n. Yes we need this, I was planning on looking at this but if you have already started let me know \n. Ok got a lot of this done https://github.com/jonathan-fielding/polyfill-service/tree/feature/SVGExternalContent still working on the detect test though as the polyfill doesn't appear to have a feature test instead relies on user agent sniffing\n. Just realised detect wont work when fired after the polyfill is in place as it isn't a feature detection, please advise what I should do\n. General comments - I ran the pages through the w3c spell checker and nothing was flagged, one thing I did notice though is that the use of 'eg' is written as 'eg' which sometimes makes it harder to read, consider using e.g. \nOn the whole this pull request is a big improvement and does make the reading of the contribution guidelines a lot clearer :smile: \n. Changes made, . Have changed the test, turns out the body hasn't loaded when your tests are run so document.body is null. Have moved the test to run on document.head so that test is able to pass. Also wanted to point this out, not sure who jonburla is?\n\nEdit: realised the problem, got a new computer but didnt configure Git, updated the commits. Yay \ud83d\udc4d . If this is generated automatically is there any reason why it is not in the .gitignore?\n. ok removed my changes\n. removed note\n. Just committed the change, is that what you mean? https://github.com/Financial-Times/polyfill-service/commit/34bfe544cf59d825250bccfbc3b4d83bb1ae62b2\n. Would be useful to know what to call the polyfill, example being that when I did the picture polyfill pull request you asked me to move it to HTMLPictureElement, so something that suggests the folder/polyfill name might be useful\n. Should this now be mandatory for all third party polyfills?\n. fix indenting of the li\n. missing 'p' tag arround the text\n. indentation of the li within the ul\n. is it the code style you are using to not indent inside the tbody and thead\n. include a site that will tell you your user agent such as http://www.whatsmyua.com/\n. why are we going straight from a h1 to a h3?\n. The baseline data isn't showing on on the QA site, not sure if this is environment issue or an issue caused by this pull request\n. typo: 'idenitfying' should be 'identifying'\n. typo: seaparate should be separate\n. typos \ndescirbes should be describes\nacheive should be achieve\n. typo: craxy should be crazy\n. Fair enough, might make it easier to read however if it were indented, :D \n. ",
    "evilebottnawi": "@triblondon, well, as soon as I get time, I will do tests\n. ",
    "scottjehl": "@triblondon picturefill polyfills all responsive image markup, not just picture. So img[srcset] and img[sizes] are in there too, independent of picture. Just in case that's helpful to know.\n. ",
    "wilsonpage": "Firefox OS should be no different to normal desktop Firefox. Can someone clarify what the issue is here?\n. I just downloaded an old Firefox 32 build and window.Intl is defined. Not sure how to debug this any further; builds and releases aren't really my area of expertise :(\n. To investigate this further I could flash a 2.0 version of FxOS and poke around. But Gecko should be identical to desktop.\n. ",
    "eek": "Intl pollyfill doesn't work on:\nMozilla/5.0 (iPad; CPU OS 8_4 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12H141 Safari/600.1.4\nnor\nMozilla/5.0 (iPhone; CPU iPhone OS 7_1_2 like Mac OS X) AppleWebKit/537.51.2 (KHTML, like Gecko) Version/7.0 Mobile/11D257 Safari/9537.53\n:(\n. @JakeChampion, yeah, I wasn't using with the ?features=Intl.~locale.en\n. ",
    "sarbbottam": "I need to trigger/simulate mouse events (mousemove, mouseover, click) for unit testing my client side JS code.\nI am currently using this code to address the cross browser compatibility (mainly IE).\nI would like to drop this in favor of a library/module if already available, otherwise create one instead of copy pasting the same code across multiple repos.\n. ",
    "olizh": "@triblondon In FTC we do use polyfill service. In our previous experience using other origami components, we found that all IE versions, not just 6/7, have issues. So our policy is to treat all IE versions as potentially problematic, and display a big bold warning message to urge users to open our site in Chrome or FireFox. \nMy point is that if a user is still using any version of IE now, he/she probably doesn't care about user experience. \n. ",
    "Rob-pw": "Unfortunately we know of customers using Safari 5.0, at present it doesn't seem as though the polyfills are included unless we specify 'always'. If the plan is to exclude ancient browsers entirely, at least provide an option to still try and supply polyfills.\n. ",
    "MikaelStenstrand": "After installing RC2 via npm, it doesn't seem to work as a library anymore. I get the following stack trace\n/Users/mste/Documents/dev/digitransit-ui/node_modules/polyfill-service/lib/sources.js:31\n  throw Error(\"No polyfill sources found.  Run `grunt buildsources` to build th\n      ^\nError: No polyfill sources found.  Run `grunt buildsources` to build them\n  at Error (native)\n  at Object.<anonymous> (/Users/mste/Documents/dev/digitransit-ui/node_modules/polyfill-service/lib/sources.js:31:8)\n  at Module._compile (module.js:460:26)\n  at Object.Module._extensions..js (module.js:478:10)\n  at Module.load (module.js:355:32)\n  at Function.Module._load (module.js:310:12)\n  at Module.require (module.js:365:17)\n  at require (module.js:384:17)\n  at Object.<anonymous> (/Users/mste/Documents/dev/digitransit-ui/node_modules/polyfill-service/lib/index.js:5:18)\n  at Module._compile (module.js:460:26)\n. ",
    "shivjm": "I just ran into the same issue using Mobile Safari 9 on iOS 9.2.  When I try this:\njavascript\nvar formatter = new Intl.NumberFormat()\nI see this error in the console:\n\nReferenceError: Can't find variable: Intl\n\nThe tests page only says it \u2018has testing suite\u2019 and \u2018has feature detection\u2019.  Both these tests pass.\nThe script URL is: https://cdn.polyfill.io/v2/polyfill.min.js\n. Mozilla/5.0 (iPhone; CPU iPhone OS_9_2_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13D15 Safari/601.1\n. Alright, thank you.  I missed that the Intl polyfill was not included by default (in fact, I missed the fact that there was a default set at all, heh).  It seems fine now.\n. ",
    "scottb": "I cloned the project and ran the latest code in dev, and it appears to do the right thing, there -- I assume that the problem really has to do with getting the live service at cdn.polyfill.io updated with the latest code (or whatever version included the detection of Edge).\nAny ideas as to what the schedule might be for that, or must I give up on the site and run my own copy?\n. Ok -- so when should I expect the RC, and how long does it usually take before it goes live?\nI get that you need to test, and that Edge support isn't the only thing going on, here, but having no support for a browser that Microsoft is aggressively pushing makes it difficult to actually use the polyfill service in production.\n. Thanks.\n. ",
    "tuukka": "Thanks for your feedback! Indeed, I treated IE Mobile like an \"unknown\" variant of IE, using the same polyfills and versions by default without testing them. I was able to run /test/director?mode=targeted on IE Mobile 10 and got 51/51 all pass (compared to 5/5 all pass on cdn.polyfill.io). Baseline for ie_mob seems to be \">=8\" so ie_mob 8 and ie_mob 9 remain untested. I found this document that includes a list of differences between IE9 on desktop and mobile: https://msdn.microsoft.com/en-us/library/dn629259%28v=vs.85%29.aspx\nWould you consider a revised patch that set a lower bound 10 since that's the version I've been able to test?\n. The new commit adds version 10 as the lower bound. Here's a screenshot of /test/director?mode=targeted on IE Mobile 10:\n\n. ",
    "alicoding": "@triblondon This is actually Firefox for Android that I'm seeing the error, and not Desktop version.\n. Looking at MDN for browser compatibility it also mentioned there that Firefox for Android it currently does not support Intl https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\n. Hey @samgiles thanks for the update.. Can you suggest any workaround in the meanwhile?? We are launching a Mozilla campaign in a few weeks and Firefox for Android expects to receive very high in traffic and it really depends on this library atm. \n. Any update on this issue? What can I do to make this possible? I would love to help make a PR if anyone can guide me as to what exactly needs to get done? :)\n. Any update/insight for this bug? The URL that I try this IE9 is https://donate.mofostaging.net\n\n. It turns out to be a very stupid problem with React here. I have to include this meta tag here for backward compatibility  http://facebook.github.io/react/docs/working-with-the-browser.html#browser-support-and-polyfills\n<meta httpEquiv=\"X-UA-Compatible\" content=\"IE=edge\"/>\nAdded this and it just work O_o\n. :+1:\nJust happy to see this PR :P\n. Just tried this on BrowserStack with IE8 on Windows XP and it works for me \nTried on this page\nhttps://cdn.polyfill.io/test/tests?feature=Intl\n. I replicate what's in https://github.com/Financial-Times/polyfill-service/blob/master/service/index.js and it's working now. :)\n. @triblondon I'm not quite sure why it was giving me that error on Safari, but I have updated my code to be like this and it just work:\n```\n      var features = request.query.features;\n      var flags = request.query.flags ? request.query.flags.split(',') : [];\n  var polyfills = PolyfillSet.fromQueryParam(features || 'default', flags);\n  var params = {\n    features: polyfills.get(),\n    minify: true\n  };\n  params.uaString = request.plugins.scooter.source;\n  polyfillio.getPolyfillString(params).then(function(bundleString) {\n    reply(bundleString).type('application/javascript');\n  });\n\n```\nI wonder if it is because I didn't cache the module before using it?\nI'm using hapi btw\n. @JakeChampion I'm wondering. If my navigator.userAgent is not equal to Mozilla/5.0 (Android 6.0; Tablet; rv:42.0) Gecko/42.0 Firefox/42.0 should Intl be polyfill even if it exists in this?\n. Thanks!\n. ",
    "annez": "Sorry should have clarified - IE11 doesn't pass the tests with or without the polyfill loaded unless you force Event as a feature on polyfill.io. The test examples I have shown are with the production V1 polyfill loaded with and without Event.\nMy understanding of your tests under https://cdn.polyfill.io/test/director?feature=Event mean that you force that feature to be loaded anyway, so the tests pass but IE11 is not part of the browsers which the polyfill will load for.\nIE Edge supports the Event constructor without the polyfill, hence why the fix is just adding IE11 to the version support. :smile: \n. ",
    "donnrri": "Great cannot add code here !\n. Its just a simple HTML file with the script tage for polyfill service and a script tag to console.log(window.Intl)\n. Thanks for you're reply. Yes, must be something strange with my set up.  Thanks for taking time to check \n. ",
    "ivoreis": "Added tests for window object. Tested locally and on browserstack.\n. Have you tested this on IE8?  \nThe implementation found in this commit (3385d9728b42f3fd9302fa6511634a591babc0ad) works for ie8. Do you need a PR for this? \n. ",
    "johannestroeger": "i was not thinking about polyfilling SRI in itself - instead support the integrity attribute.\n. https://www.maxcdn.com/blog/bootstrapcdn-subresource-integrity/\n. https://twitter.com/KingstonTime/status/708066344474951680\n. ",
    "DavidBruant": "I think I understand the what is being asked.\nSubresource Integrity is a mechanism between the developer, the resource provider (like a CDN, like cdn.polyfill.io) and the browser. The browser does not run the script if the CDN does not provide the script that has the hash the author has provided as integrity attribute.\nIt could be useful for people relying on cdn.polyfill.io to be sure that the served scripts are the expected ones (polyfills) and don't contain any tracking or cookie stealing code (not accusing the FT of being malicious, but DNS poisoning or other MITM attacks can happen).\nThat being said there are several things that can be said:\n1. My understanding is that the author does not need to coordinate with the resource provider to generate the hashes, so there is nothing to \"support\" on the Financial-Times/polyfill-service side really\n2. The polyfill-service could provide the hashes in the docs so people can easily copy/paste in their HTMLs (sort of, see below)\nBut the FT providing the hashes comes with a massive drawback:\n1. The served code cannot be served any longer via the same URL if it changes (like if a polyfill is being fixed or another is added to the default set). This, in and of itself probably makes the idea of Subresource Integrity useless unless the polyfill-service is willing to change URLs for every change and support old URLs... ~forever (?)\n2. Financial-Times/polyfill-service sends a different content per User-Agent (and that's the point of the service), so for Subresource Integrity, website developers don't need a hash per URL, but per (URL, User-Agent) pair and they need to change the integrity attribute on a per UA basis, which becomes a ridiculous amount of work (unless they use the always flag or ua to have a stable script being served).\nAll in all, it looks like Subresource Integrity is a lot of work on all sides... to which point installing on your own server seems like a more reasonable solution to have a trustworthy service. It doesn't prevent the MITM, but your entire website is under attack then, so at this point, the integrity of the polyfills hosted on your server probably isn't the biggest problem.\n. Just for info, in the Firefox 47 (dev edition) console:\n``` js\nvar url = new URL('http://example.com');\nurl.searchParams.append('this\\x00&that\\x7f\\xff', '1+2=3');\nconsole.log(url.search === '?this%00%26that%7F%C3%BF=1%2B2%3D3');\nconsole.log(url.href === 'http://example.com/?this%00%26that%7F%C3%BF=1%2B2%3D3');\n```\nboth yield true, so I guess the tests started passing sometimes between FF39 and FF47.\nAnyway, thanks for addressing this!\n. Sorry, it was a bold PR. I edited without testing. \n. > Just be aware that we don't (yet) support HTTPS on the apex domain\nI'm not sure I understand this part (and the consequences for adding HSTS support). What does \"the apex domain\" mean? (or what is it?)\n. To answer your concern, I need an answer. I'll try to phrase the question as accurately as possible:\nIs code from the Financial-Times/polyfill-service repo deployed under the polyfill.io domain? (is it this code that triggers the redirect). If yes, I'm not sure it's a good idea to add HSTS in the current circumstances. If both domains are even on the same physical machine, but handled by different code, then I feel confident HSTS won't affect polyfill.io.\nAsked differently, is the code that redirects polyfill.io to cdn.polyfill.io under the current repository?\n. > This repo's code is used only to serve cdn.polyfill.io\nok\n\nBasically, all I'm saying is that includeSubDomains should not be set in the HSTS header.\n\nI was not planning on including it. In any case, this wouldn't be a worry, since includeSubDomains would only apply to subdomains of cdn.polyfill.io, not polyfill.io (so it would apply to something like blabla.cdn.polyfill.io). But anyway, I won't apply it.\n. > Should we also discuss the possibility of auto-enforcing HTTPS connections using https://github.com/aredo/express-enforces-ssl ?\nCertainly. The spec suggests that the header is considered only when received via HTTPS, so, a bootstrap can only happen if there is at least one HTTPS connection (then the browser remembering the STS policy will always go HTTPS even if asked HTTP).\nYou can also consider being added to the preload list (but that should probably be a different issue regarding cdn.polyfill.io specifically, not this repo)\n. Further, function(){return done()} can even be reduced to done\n. You also want to add \nENV NODE_ENV production\nSome packages act differently (and some emit kind warnings on what not to do in prod; express-session comes to mind)\n. I'd recommend using a string builder like https://www.npmjs.com/package/sql\nIt usually makes SQL queries more readable and maintainable.\n. ",
    "radum": "Yep, I started to have the same issue now, it was working Ok before.\n. ",
    "tp": "Can anyone say which specific version worked for you? Seeing the same error in es5 shim and here as well. If it ever worked there must be a \"defineProperty\" polyfill somewhere...\n. ",
    "adgad": "This has been released now in useragent (https://github.com/3rd-Eden/useragent/issues/83) so should get picked up on the next release\n. (Turns out I was super impatient! They just did a release)\n. Tested by:\nhttp://jsbin.com/jevojayapa on a BB10 (Blackberry Passport) device shows Array.prototype.find is undefined\nhttp://qa.polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(BB10;%20Touch)%20AppleWebKit/537.35+%20(KHTML,%20like%20Gecko)%20Version/10.3.1.2243%20Mobile%20Safari/537.35+&features=Array.prototype.find doesn't load Array.prototype.find polyfill\nLocal with changes:\n\nTested Next homepage (previously Markets Data, which uses Array.prototype.find was broken - with local polyfill service running it works).\n. ",
    "piuccio": "Thanks, I didn't notice that PR when I open this issue. Closing, I'll follow that PR.\n. ",
    "kdzwinel": "I'm not sure what metadata you are referring to, could you elaborate on that?\nThis is my minimal test: http://jsbin.com/rufasuc.\nIt fails (localStorage doesn't work) even thought polyfill.io script is included. Tested on Opera Mini Emulator (v8).\n\n. Right, the question is if there is a way to pollyfil it on Opera Mini, e.g. using cookies. Or, maybe, load existing polyfill, so that a dummy localStorage object is created. It won't persist state, but it will prevent page from failing when some script tries accessing localStorage.\n. Hey Andrew! Just tested and it does work when polyfills are forced as you suggested.\n. @triblondon sure, I can take care of that.. I hoped that opera mini is not recognized and gets no polyfills, which can be fixed by setting unknown=polyfill, but it's not the case. See: https://cdn.polyfill.io/v2/polyfill.js?ua=Opera/9.80%20(Android;%20Opera%20Mini/7.6.40234/37.8993;%20U;%20en)%20Presto/2.12.423%20Version/12.16 . We consider three hot fixes:\n- enabling missing polyfills for all browsers features=default,Array.from|always\n- doing UA sniffing on our servers and going features=default|always when opera mini is recongized\n- using callback param to check if all polyfills are in place, and if not, force load them\n. Thanks Andrew! I'll look into this tomorrow. Note to self: performance.now is also not served for Opera Mini as it should be.\n. Thank you! There are some more polyfills missing for Opera Mini (Map, Set, includes) and I'll create a PR as soon as I'll find time to double check them.\nWhat's the release cycle of polyfill.io? I'd love to know when this fix hits production.. We are observing same issues. I've opened a PR to fix this.\n\n. Yes, simply including the polyfill.io script causes Element polyfill to execute which triggers the error.  \nI should also mention that we are using unknown=polyfill because these browsers (AFAIK) are not supported by polyfill.io (I've added UAs to the report above). Maybe this polyfill is only meant for specific browsers that allow document.appendChild(document.createElement('body')) (this code is not valid in any modern browser) ? Should it be? IMO polyfills should execute correctly in all browsers. But maybe it's just a matter of checking if polyfill is needed before executing it? I imagine this increases the size of the polyfill, so maybe such checks should be only appended when unknown=polyfill is active and browser is not recognized?. @JakeChampion thanks, I forgot about it! The only issue with gated is that detects will be included for all polyfills, I'd be perfect to include them only for unknown browsers. How about creating unknown=gated?\nNot sure if this resolves the original issue though? Elements polyfill contains invalid code (according to most of the browsers).. Gotcha, didn't know you are aware of that. The impact is small, but it's still a bug IMO :) I can imagine this has a low priority, but maybe can be fixed in the future? Anyway, I'd leave this issue open for reference.. Sounds like a perfect task for an intern \ud83d\ude09. Here are the screenshots from Opera Mini Emulator (detected as op_mini/8 by polyfillio):\ncurrent situation\nhttp://jsbin.com/qorayogisi/3\nhttps://cdn.polyfill.io/v2/polyfill.js\n\nwith polyfills force enabled\nhttp://jsbin.com/qorayogisi/16\nhttps://cdn.polyfill.io/v2/polyfill.js?features=default|always|gated,Array.prototype.includes|always|gated\n\nOfficial polyfill.io test doesn't seem to be working on opera mini:\n\n. Thank you!\n\n. Hey! We tested in Opera Mini 8. Results below:\n\n\n. We are seeing the same error in:\n- various versions of Opera Mini\n- Chrome Mobile 30.0.0\n- Android 4.4.2\n- Safari 7.x\nDepending on browser we get:\n- > Cannot read property 'get' of undefined\n- > Uncaught exception: TypeError: Cannot convert 'Object.getOwnPropertyDescriptor(Set.prototype,\"size\")' to object\n- > TypeError: 'undefined' is not an object (evaluating 'Object.getOwnPropertyDescriptor(Set.prototype,\"size\").get')\nIt looks like issues started on October 13th.\n. It took me good half of the day but here we go: http://output.jsbin.com/cufutay (can be reproduced e.g. on IE10). Google ads script is causing the issue.  If you change the order and load polyfillio before google ads, everything will work fine.\n@JakeChampion - was a new version of polyfillio deployed around 13th? If not, that would mean that Google updated their script causing the issue. I can try reaching out to them.. Yep, I can see that they changed the script since yesterday (removed Map and WeakMap polyfills of their own), and error is no longer thrown. I like to think it's thanks to my bug report: https://twitter.com/kdzwinel/status/920290340573208576 \ud83d\ude09 Issue can be closed \ud83c\udf89. ",
    "brucelawson": "Opera Mini doesn't support localStorage at the moment - because there is no \"local\"; everything is rendered on the server.\n. cc  @mathiasbynens \n. finding out definitively from the Mini P.M., will report back.\n. Apologies for the delay, but I wanted to be absolutely sure, so asked Opera Mini PM and engineers.\nAll Opera Mini clients use the same server version and that\nalso means they all use the same Presto version. JavaScript and CSS\nsupport is the same for all clients, with the exception that user may\nenable Small Screen Rendering which removes a lot of CSS rules. They\ncan also use different viewport settings, but the same holds for\nnormal browsers. Version numbers effectively refer to different\nversions of the client UI and capabilities (whether it supports\n'night mode', private tabs, progressive download) etc.\n. Added a note to https://dev.opera.com/articles/making-sites-work-opera-mini/ prompted by this Q. Addition reads:\nBecause Opera Mini renders on our servers, all Opera Mini clients use the same server version, so all use the same Presto version. JavaScript and CSS support is therefore identical on all clients, with the exception that user may enable Small Screen Rendering which removes a lot of CSS rules.\nVersion numbers refer to different versions of the client UI and capabilities (whether it supports night mode, private tabs, progressive loading, etc.)\nOpera Mini 4.x clients load the whole transcoded page at once, as they have no progressive loading. This slightly reduces the time allowed for JavaScript execution (including XHRs). With newer clients, the transcoder is more generous, since it is able to send the compressed page to the client in chunks.\n. ",
    "mimmi20": "@triblondon, @jhiswin I understand the description of the useragent project, it uses data from ua-parser. Even if i'm wrong, its useful to open an issue there too.\n. ",
    "jhiswin": "@triblondon In your chart Chrome 31 had Promises, but testing on Browserstack I see that Chrome 31 did not have native Promises yet.  It was introduced in Chrome 32.  I think your polyfill needs to be adjusted?\nSo it looks like the polyfill service should actually work correctly with 360safe (which is detected as Chrome 31, which is what it actually is give or take a few features), it's just that the polyfill service has the Promise polyfill version requirement for Chrome incorrect by one version?\n. @triblondon Yes, it looks as if this is an issue with Chrome 31.  So this is just a duplicate of the other issue, since 360safe is based on Chrome 31, and that is the reason for this issue.\n. On an additional note, V8's native promise is known to be buggy:\nhttps://code.google.com/p/v8/issues/detail?id=4162\nAnd most recommend to just polyfill it regardless.  core-js, for example, always polyfills on Chrome.\n. After some more testing, it seems as if Chrome never gets polyfill Promise.  Really odd.\n. @triblondon ah so it was deliberate because of size issues; I just kind of assumed Promise would be included by default\n. @triblondon the problem is that when testing with Chrome 31, the polyfill service does not serve promises.\nBTW you guys shuold apply for a free browserstack account.  It's free for open source project devs.\n. This is what I get from the polyfill service using Chrome 31 on Windows 7 (on BrowserStack):\n/* Rerun without minification for verbose metadata */\n(function(undefined) {Element.prototype.matches=Element.prototype.matches||Element.prototype.webkitMatchesSelector;Element.prototype.closest=function(t){for(var e=this;e;){if(e.matches(t))return e;e=e.parentElement}return null};Object.assign=function(r,t){for(var n,e,a=1;a<arguments.length;++a){e=arguments[a];for(n in e)Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n])}return r};String.prototype.includes=function(t,e){if(\"object\"==typeof t&&t instanceof RegExp)throw new TypeError(\"First argument to String.prototype.includes must not be a regular expression\");return-1!==this.indexOf(t,e)};}).call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n. The fork just polyfills a couple things that fetch depends on like Promise, right?\nSince those polyfills already exist in polyfill-service, you can just have those as fetch dependencies.\n. ",
    "tom-parker": "Yep, robots needs to be at the root. This should allow /v1/docs/* and /v2/docs/*. I had a look at Jake's suggested module but it doesn't seem to cater for the use of Allow which I think is the easiest way to handle all different routes. Regex doesn't seem that widely supported by robots either so unfortunately we can't use a pattern to match the version number rather than hard coding.\n. ",
    "Yuripetusko": "Seeing same issue:\non Samsung galaxy s6 Android 5.1 using Samsung's \"Internet\" browser OR Samsung galaxy s3 Android 4.1 using Android's stock \"Browser\" browser. Intl polyfill doesn't work giving me following error ReferenceError: Intl is not defined\n. hey @JakeChampion . \nI couldn't find a way to remotely debug stock browser on android below 4.3 because it doesn't use chromium based browser so I couldn't  reliably tell if it had Intl support or not or maybe I had some other issues. I can definitely see issue with Intl support on Samsung stock browser tho, but to this PR wouldn't fix it\n. Thanks @JakeChampion . got a little bit confused there for a moment :)\n. ",
    "antoinerousseau": "Same problem here with a LG G3: ReferenceError: Intl is not defined\nUA: Mozilla/5.0 (Linux; U; Android 5.0; es-sa; LG-D855 Build/LRX21R.A1445306351) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/34.0.1847.118 Mobile Safari/537.36\n. I still get this error in Chrome (when forcing the polyfill execution with always flag and without gated), is this because it's only working in targeted browsers? Or is it failing in them too?. ",
    "firstdoit": "We had the exact same issue. Samsung Galaxy S6 \"Internet\" app. UA: Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920F Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36 \n. Apparently useragent@2.1.8 reports this as \"Chrome mobile\":\n```\n\nua.parse('Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920F Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36')\nAgent {\n  family: 'Chrome Mobile',\n  major: '38',\n  minor: '0',\n  patch: '2125',\n  source: 'Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920F Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36' }\n``\n. @triblondon however if we look at thedeviceproperty on the parsed user agent, we can verify that the \"family\" containsSamsung`.\n\n```\n\nua.parse('Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G920F Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.2 Chrome/38.0.2125.102 Mobile Safari/537.36').device\nDevice {\n  family: 'Samsung $2',\n  major: 'S\n```\n\nMaybe we could recognise this case as a separate browser and call it SamsungBrowser?\n. Sorry, this will already be solved by https://github.com/ua-parser/uap-core/pull/123.\nThen we just need to treat that new family.\n. ",
    "bonimba": "I am still having the same issue on a LG G3 and several other Android smartphones using the stock browser.\nthis is one of user agents: Mozilla/5.0 (Linux; U; Android 5.0; en-gb; LG-D855/V21a Build/LRX21R.A1446038723) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/34.0.1847.118 Mobile Safari/537.36. \nSo it is recognized as Chrome 34 but it is actually the stock browser. \nAnyone still having this issue?\n. ",
    "MasDevProject": "Same problem here (galaxy s6 edge default Browser).\nI'm using this cdn:<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en\"></script>\n. ",
    "mdmoreau": "Would it make sense to alias it to older versions of the stock Android browser instead of Chrome?  It seems like that could be a closer match based on my experience with the two.\n. Ah that's good to know - thanks.  For some reason I had assumed it was a fork of the stock Android browser.\n. This is the UA string I'm getting from the S3 emulator on Browserstack:\nMozilla/5.0 (Linux; U; Android 4.1.2; en-us; sdk Build/MASTER) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\nNot sure how useful that is since it's an emulator, but I'm working on getting the UA strings and errors from the actual devices as well.  Thanks for looking into this, and let me know if there's any other information that would help.\n. It looks like that might solve the problem with the S3 emulator, but after getting some more data from the client it appears their issue was a separate one with Object.assign not being polyfilled in the S5/6.\nThe UA strings just about match those referenced in #509, and it sounds like #671 won't be merged in.  Happy to close this if that's the decision for now.  Appreciate all of the work on the polyfill - it's really come in handy recently!\n. ",
    "AdaRoseCannon": "The current version of Samsung browser is a fork of Chromium 44. So Chrome would be a good match.\n. Samsung versions less than 4 get identified as versions of Chrome instead of Samsung Internet. But unlike chrome don't include the Intl support. Would it be Possible to add Intl to chrome <=34? \n. Chrome 44 has this issue, and it is the version of Chrome about to be shipped with Samsung's browser for GS6 and GS7.\n. What is the environment for tests can I use native Sets and Maps to test it?\n. Ahh I see, i'll look at 'Map' and 'Set' in this. Thanks Jake.\n. I am getting an error when I run the tests locally so I am relying on circle CI.\n\n. Got the tests running by running the service directly. It seems to me by reading the spec I shouldn't use write tests for Map and Set since that particular part is not testable in all browsers.\n. It's now checking for Map and Set in window as it seems some of the other tests are doing that too.\n. Tests are now passing, btw the tests on 'android 4.4.4' seem flakey.\nI have seen tests for Promise and URL spontaneously fail.\n. One thing it does is to check that Iterators have a .next function before trying to b=polyfill because Safari 7/8 does not have this.\nI tried to make it fall back to for (i of iterator) for that specific case, but that won't compile under uglify and doesn't work when transpiled.\n. Array.from isn't supposed to work on an endless iterable. It is expected to try to go forever.\n. - Intl is there: polyfills/Intl/config.json\n- samsung_mob is the term Jake used in an earlier PR I used the same name. Would you prefer me to change it?\n-  will update the doc, thanks for noticing.\n- Yes, the Samsung developer advocate team, will continue to support this. ('cause the polyfill service rocks)\n. Not on the earlier versions of Samsung Internet, I am trying to get my hands on previous versions so I can add some '2-4' for features missing on just those versions. I will also specify Intl for just that range too. \nIs there a way to work return what the polyfill service is working out the platform/version as from parsing the UA string?\n. Looking at the docs: http://developer.samsung.com/technical-doc/view.do?v=T000000203 and testing the UAs with useragent. Samsung Browser is either Chrome 34 (Old), Or Samsung 4 (Current) \nSo I will leave it at * for now, until the next version of Samsung Internet gets released.\n(@JakeChampion i'll test Intl again see if it isupported)\n. Intl is not supported natively. Fails feature detect.\n. Sure!\n. I'll do it now!\nOn 29 July 2016 at 14:04, Jake Champion notifications@github.com wrote:\n\n@AdaRoseEdwards https://github.com/AdaRoseEdwards When would we expect\nthese to be added? We are wanting to cut a release by end of today if that\nis possible.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/783#issuecomment-236174786,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEB5Mszm68t53YulIQ0AtjXV0_xNWg-cks5qafpvgaJpZM4JWUUR\n.\n. Array.prototype.@@iterator supported natively\nArray.prototype.entries supported natively\nArray.prototype.keys supported natively\nX Array.prototype.values is not supported natively\n. Sorry there are no plans for supporting those versions.. Sure I'll do it tomorrow.\n\nOn Tue, 23 Aug 2016, 17:22 Jake Champion, notifications@github.com wrote:\n\n@AdaRoseEdwards https://github.com/AdaRoseEdwards Are you able to test\nthis on Samsung Browser?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/848#issuecomment-241790044,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AEB5Mrr6Yo6reB3cs3GWSnmewy56f0Buks5qix4zgaJpZM4JrFVL\n.\n. Looks accurate for Samsung Internet as it is a Chrome 57 feature :). If you want to run the tests in the Samsung Browser it is also installable on GDE devices such as Pixel and Nexus Phones.. Ah I was following the style already existing in the polyfill I will update that accordingly.\n. That is indeed the case, the second time handles the map function, I didn't want to duplicate that logic for a very mild perf issue.\n. A named IIFE isn't available from outside it's own scope. This is good practice because it improves debugging by allowing for the name to be available in stack traces.\n\n\n. After reading http://benalman.com/news/2010/11/immediately-invoked-function-expression/ which seems to be the definitive word on iife they make it clear that an iife can have a name but made no mention of it polluting scope. So I am pretty sure it remains true.\nhttps://kangax.github.io/nfe/#jscript-bugs -> Makes me suspect that IE8 and below could potentially have an issue.\nI'll look into it. (Or will just remove the name)\nNeed to get an IE6 VM. I have an IE11 vm in the office, i'll try compatibility mode.\n. Good catch @triblondon it leaks in IE6-8. removing the name, leaving wrapped in anonymous. IIFE\n. We have it\n\n. @ruiaraujo 4.0, I think 4.2 has only been released on note7.\n. ",
    "ruiaraujo": "@triblondon Samsung Browser is a fork of Chromium but the they add features on their own.\nThe latest version supports Service Workers although it is based on Chromium 44.\nOn the other hand it doesn't have Object.assign which Chromium 44 has.\nsamsung internet/2.1.0 == chrome/21 seems like a good idea, although each version should be matched with a different chrome version.\nsamsung internet/4.0 == chrome/43 maybe\n. @triblondon No they do not, this is the native Samsung browser so it is only updated when the phone is updated. At least for all the old versions.\nSince Chrome < 34 has no real market share except for these forks, serving Intl to this seems like a pragmatic solution to this problem.\n. Add the option unknown=polyfill.\n. On IE 11, I am seeing and error related with this: 'Expected '}''\n@JakeChampion you just made my day really exciting in a bad kind of way. \ud83d\udc7f \n. Ok I have an hotfix ready to push to production which basically involves using the unminified version. I will wait 10 minutes then to see if the profecy is true.\nRegardless, \ud83d\udc4d for the fast response time.\n. Nope. Still same error.\n. Funny it seems the missing url encoding on the | character shows different results.\nWith your url, it works but if I use an url with |s, it still shows the bad bundle.\n. not really, but I am going to update production with the | url encoded to make sure the cache is busted.\n. I even used other browsers to be sure and browserstack remote sessions. I am sure there is no caching on my side that has survived this. \ud83d\ude04 \n. I have fixed it by using encodeURI which has the correct version cached, I have now pushed it to production and can go home.\nThe old link still reports the broken version.\nAnyhow thanks @JakeChampion for fixing it quickly.\n. I have running with always|gated for a few months now and it seems to be fine.\nBut I will pick up a jsFiddle and test some old browsers.\nAlso, it seems I should also update the configs of the dependencies of rAF like performance.now since also has no android targets.\n. I have visited that page on every Android version from 2.2 to 4.3. The test fail on Android 2.x.\nScreenshot of the 3.0 emulator.\n\n. I thought I had a Blackberry VM stashed in a old Linux PC, but it had been cleared already so I am closing this PR since I cannot test.. I just noticed it is missing the samsung browser in the config.json, now the question is:\npolyfill.io only support SB 4 which does not need this polyfill since it is forked of Chromium 44 but older version would need it. Should I add it as documentation?. With the UA posted in the original issue, the browser detected is samsung_mob/2.1.0 so while this will improve the situation, it will not fix it for the majority of devices.. @triblondon I can confirm @p0wl UAs. It helps if you post the polyfill url that you are using.. You need to use unknown=polyfill as an option since that is Samsung Browser 3.3 which is not supported.. You can use the exclude option for Object.defineProperty.\nEven IE8 supports it.. @AdaRoseEdwards Thanks for the hint.\n@JakeChampion Here you go.\n\n. Be aware that pages with CSP enabled, this would not work?\nCan this run on browsers that support CSP?\n. Missing samsung browser here.\n. Missing samsung browser here.\n. @AdaRoseEdwards what version of the Samsung browser is that?\n. Shouldn't this be es7?\n. I mixed Chrome and firefox. Both were wrong. Fixed now. tested in browserstack to be super sure.. ",
    "Turbo87": "Mozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-G800F Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/3.3 Chrome/38.0.2125.102 Mobile Safari/537.36 seems to be correctly identified as samsung_mob/3.3.0 according to https://cdn.polyfill.io/v2/polyfill.js?features=Intl&ua=Mozilla/5.0%20(Linux;%20Android%205.1.1;%20SAMSUNG%20SM-G800F%20Build/LMY47X)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20SamsungBrowser/3.3%20Chrome/38.0.2125.102%20Mobile%20Safari/537.36, but unfortunately it is still not being served the Intl polyfill. Any ideas how to resolve that?\n. I'm not sure what's going on exactly, but this doesn't seem to work properly. I'm trying this in the GenyMotion Android emulator with Android 4.1.1 on a Nexus 4. I get the following output from http://www.whatsmyua.com:\njson\n{\n  \"ua\": \"Mozilla/5.0 (Linux; U; Android 4.1.1; en-us; Google Nexus 4 - 4.1.1 - API 16 - 768x1280 Build/JRO03S) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\",\n  \"browser\": {\n    \"name\": \"Android Browser\",\n    \"version\": \"4.0\",\n    \"major\": \"4\"\n  },\n  \"engine\": {\n    \"version\": \"534.30\",\n    \"name\": \"WebKit\"\n  },\n  \"os\": {\n    \"name\": \"Android\",\n    \"version\": \"4.1.1\"\n  },\n  \"device\": {\n    \"model\": \"Nexus 4\",\n    \"vendor\": \"LG\",\n    \"type\": \"mobile\"\n  },\n  \"cpu\": {}\n}\nwhen I use that ua string to request the polyfill I only see a comment that confirms the detected browser to be android/4.1.0, but the polyfill itself is not delivered:\njs\n/* Polyfill service v3.7.1\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: android/4.1.0\n * Features requested: Intl.~locale.en\n *  */\n(see https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en&ua=Mozilla/5.0%20(Linux;%20U;%20Android%204.1.1;%20en-us;%20Google%20Nexus%204%20-%204.1.1%20-%20API%2016%20-%20768x1280%20Build/JRO03S)%20AppleWebKit/534.30%20(KHTML,%20like%20Gecko)%20Version/4.0%20Mobile%20Safari/534.30)\nSince this PR add \"android\": \"<=4.3\" and 4.1.0 <= 4.3 I should see the polyfill or am I doing anything wrong?\nI'd be happy to debug this if you point me in the right direction on how to get started. \n. I think I may have found the issue in https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Intl/~locale/en/config.json. It seems that the \"android\": \"<=4.3\" config was only added to the Intl/config.json but not to the individual locale config files.\nThis seems somewhat related to https://github.com/Financial-Times/polyfill-service/pull/698\n. @triblondon any idea when this change will go live?\n. hmm, no chance for a quick bugfix release? I guess the only way around it for now is using flags=always\n. ",
    "btoueg": "Fixed\n. :+1: \n. ",
    "doodlemoonch": "+1\n. Duplicate https://github.com/Financial-Times/polyfill-service/pull/515\n. ",
    "Ikkyu-os": "If it's not urgent, i'd be willing to implement this one, to learn a bit how polyfill-service is working. \n. FYI, I started working on this issue (at least doing some research pending https://github.com/Financial-Times/polyfill-service/issues/547).\nWorst case, I'll find my old linux box to move on.\n. Hi.\nSorry, was pretty busy with work. I had a first version locally, but then I found out that test suite is also not working well on Windows OS :) \nSo I put it on hold, but I'm still willing to fix it. I would actually need to fix tests execution on windows first.\n. Hi @triblondon \nI implemented a first version of the polyfill, code is available on my fork: https://github.com/Ikkyu-os/polyfill-service/tree/numberIsNaN/\nHowever, I have difficulties testing it with my test suite (not yet final) with the mocha test suite, using same url pattern as proposed in the doc\nhttp://127.0.0.1:3000/test/tests?feature=Number.isNaN&mode=targeted (or mode=all)\nWhatever the browser (last FF, FF 11.0, IE 11.0, IE 8.0 on VM), the test always load empty with the following status in the page:\npasses: 0 failures: 0 duration: 0s\nIndeed, the polyfill is not returned by http://127.0.0.1:3000/v2/polyfill.js?flags=gated,always&features=   HTTP request.\nI totally understand I'm missing something, which could likely be that my polyfill is not properly integrated in my local build\nMy build steps:\n- grunt build  (here I can see my Number/isNaN properly listed in the build)\n- bin/polyfill-service   (had to start manually as 'grunt dev' can't work on windows system due to .pid  not recognize as a command)\nAny hint on what I am missing would be appreciated. I'm pretty sure what is missing sounds dumb, but I still need to familiarize with the build system :)\n. Ok.\nI really think I don't deploy my polyfill correctly with grunt build..\nCould be due to my setup again :)\nHere's how the polyfill/__dist is built locally:\n|---- Array/ \n|---- Number/\n|------- isNan.json\n|- JSON.json\n|- matchMedia.json\netc...\nIf I move my polyfill at the root of __dist/ (and not in __dist/Number/ ) and rename the file Number.isNaN.json the polyfill is properly served and tests are executed in the browser.\nI tested with an example from the contributing guide : http://127.0.0.1:3000/test/tests?feature=Array.from&mode=targeted  (which polyfill is also built in subdirectories), and same issue occurs.\nFor yet an unknown reason, the service doesn't serve the polyfills in subdirectories.\nAt least, I can continue to work on the polyfill itself, and will add more tests.\n. And indeed, it's likely a windows issue :)\nHere's how my __dist is built:\n\nI'll have to open another issue for this, although it will be harder than the previous issue, and it fails silently this time.\nThanks for your help anyway, I will do a PR for this polyfill today.\n. Is there any way to add more logs to grunt so I could perhaps investigate which steps is actually failing and fix it ? \nBasically, it seems that \\polyfills__dist\\latest  is almost empty on my local. where all __dist\\v1.0.X\\ directories are properly populated.\nWhich process create those directories ? \n. So i was able to investigate the issue and here's my findings.\nWhen buildsources task is executed, it seems that polyfill subdirectories for \"latest\" version is not created, generating an error.\nAttaching some logs (sorry for the poor debug trace skills)\nbash\nRunning \"buildsources\" task\nLoading sources...\ndebug - version = latest\ndebug - destFolder to create : D:\\git_clones\\openSource\\polyfill-service\\polyfills\\__dist\\latest\ndebug - scanDir complete for  : D:\\git_clones\\openSource\\polyfill-service\\polyfills\ndebug - featureName: Array\\from\ndebug - detect: D:\\git_clones\\openSource\\polyfill-service\\polyfills\\Array\\from\\detect.js\ndebug - polyfillSourcePath: D:\\git_clones\\openSource\\polyfill-service\\polyfills\\Array\\from\\polyfill.js\ndebug - minify done\ndebug - featurePath: D:\\git_clones\\openSource\\polyfill-service\\polyfills\\__dist\\latest\\Array\\from.json\nError - something went wrong with feature Array\\from\nError: Error: ENOENT, no such file or directory 'D:\\git_clones\\openSource\\polyfill-service\\polyfills\\__dist\\latest\\Array\\from.json'\nIf I manually create the directory __dist/latest directory does exists, however, the task somehow fails to create a directory for nested polyfill.\nIf I manually create the \"Array\" directory and run \"grunt buildsources\", then this polyfill (Array.from) is properly built. \nPolyfill which are not \"nested\" in subdirectories like AudioContext are properly built too. \nI'll need to investigate deeper to understand which part of the process create the polyfill subdirectories, and check if writeFileSync from fs library shouldn't create sub-directories itself.\nUpdated:\nAfter looking a bit, I might have a fix.\nI'll create a new branch & PR for this. However, I'll need someone to test it on a linux platform, as I unfortunately don't have one available currently.\nI'm also looking forward the code review, as I am a beginner in node.\nThe fix consist in using mkdir() on the feature directory prior to invoking writeFileSync().\nI'm not sure why this issue only appears on windows, as filesystem doc doesn't detail this behavior.\n. PR https://github.com/Financial-Times/polyfill-service/pull/565 pending for fix validation :)\n. I did rebase from master, for now travis is not happy due to SauceLabs it seems. \nNot sure I can help with that, or if it's an issue to finalize the PR.\nBuild log: https://travis-ci.org/Financial-Times/polyfill-service/builds/100766606\n. PR #565 has been merged. I guess we can close this PR now.\n. updates done with comments from @JakeChampion \n. Ok, so after debugging / checking the code in aliases.js issue was due to my local installation :( \nI was using an old version of NodeJS, 0.12 (was testing an old library not compatible with later versions on another project), which doesn't contain ES2015 methods such a Object.assign()\nAfter upgraded on 4.3 version, I still have some errors on master, but this seem to be related to the polyfills themselves.\n@triblondon  I assume nobody uses anymore Node < 4.0 except me, but should the readme provide a minimal version just in case ? \n. I checked the .travis.yml file and the version specified is 5.0.0.\nShould package.json reflect the same or can have a lower requirement? From what I saw build is working fine with 4.3. If I'm not too lazy, I could reinstall a 4.0.0 to check with this one too.\n. Ok :+1: \n. Hello\nTo answer your questions:\n- The code is my own, although the polyfill itself comes from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN . Not sure if its an issue, as there is not 100 way to implement it anyway :)\n- I publish it under the MIT licence, I updated the config file to reflect this.\nI updated the test to remove useless code as suggested and add all browsers according to current support.\n. Ok. I didn't understood how they were wrongly described, thanks for the explanation. \nI'll update the tests likely today. \n. Hello.\nI just tested the fix on my Windows 7 and it works perfectly :+1: \nThank you so much for this contribution !\nI checked the commits, and they seem fine to me, but I let the repo owner finalize the review . (@triblondon up to you)\n. Hi :)\nI actually used the sync version. Check line 17\nvar mkdir = require('mkdirp').sync;\nDocumentation about the package: https://github.com/substack/node-mkdirp\nPerhaps I should keep a mkdir variable to get the dependency only, and then explicitly call mkdirp.sync(dir, opts).\nWhat do you think ? \n. ",
    "ebourg": "Thanks!\n. ",
    "ironsidevsquincy": "Not sure I understand what that means @triblondon; do you need anything from me?\n. @triblondon, not sure what to do with this. We're forcing the polyfill on IE8 in production and everything's working fine\nIs there a readme around what the tests are doing,how they're running, etc?\n. Ok, digging around it looks like it uses the same detect.js for determining whether to polyfill, and whether the test passes.\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/HTMLPictureElement/detect.js\nProblem is, this isn't a direct polyfill of a HTMLPictureElement, rather it just emulates it's functionality. Really, the detect should be something like !!window.HTMLPictureElement (as used in the polyfill itself), and the test should test an image is being responsive\nNot sure where to go with this. Is this an issue that's arisen elsewhere before?\n. Hmmm, interesting. I wonder if it's because IE8 doesn't natively understand the source element. It's definitely working as we have images on IE8 on the front page. \nWe pull in the Picturefill for non-ctm browsers - https://github.com/Financial-Times/next-js-setup/blob/master/templates/bootstrapper.html#L24\n. Yes, tested the polyfill's examples page (http://scottjehl.github.io/picturefill/#examples) in BB7&10\n. https://github.com/Financial-Times/polyfill-service/pull/583 won\n. 10\n. Done\n. Think it might be worth distinguishing between ios_saf and ios_firefox, as safari uses a different engine to other non-safari ios browsers\nhttps://developer.chrome.com/multidevice/ios/overview\nDefinitely seen issues that occur on Chrome but not on Safari on IOS. Maybe ios_saf and ios_other?\n. More just to bring it in-line with the spec. ",
    "laurieboyes": "This issue was due to the default webkit polyfill not being served to iOS Safari 6.0. This PR fixes the issue: https://github.com/Financial-Times/polyfill-service/pull/543\n. Cheers for looking at this. I couldn't spot anywhere within the current testing that I could slot in an automated test for this but please let me know if I'm missing anything.\nManual testing so far has involved looking at the polyfill.js file on an iOS6 device and noting that raf was indeed being alias polyfilled. I was putting faith in the fact that the change was so minor but this degree of testing seems fairly pitiful now that I see it written down so will do more thorough testing and report back.\n. Test results\n/test/director?feature=requestAnimationFrame&mode=targeted\nCarried on on iPad2 with Safari iOS 6.0\nBefore:\n\nAfter\n\n. ",
    "netsi1964": "Sorry for the death link, I left out a \"l\" in the url.\nHere is the working link: http://www.netsi.dk/Test-cdn.polyfill.io.html\n. ",
    "borisyankov": "Thanks. That worked like a charm.\n. ",
    "whitneyit": "Thanks buddy, Merry Christmas to you too!\n. Hey just getting back on this. I had a look through the SauceLabs screencast and it seems to die in the test when calling throw().\n. Also, is it possible to add the SAUCE_USERNAME and SAUCE_ACCESS_KEY as environment variables in travis? The angular.js team put it in their .travis.yml file.\nI'm not sure about the politics at FT, but this would make it easier ... for me at least :smile: \n. Failed tests:\n - ie 11 (Sauce results: https://saucelabs.com/tests/f193b141de4241ea87a45a69f6b4a9ef)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 10 (Sauce results: https://saucelabs.com/tests/fa0c298c1ac84156b5bebecd1c297e8f)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 9 (Sauce results: https://saucelabs.com/tests/9b7e652b00ed4f2fa9460a75db5c720d)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 8 (Sauce results: https://saucelabs.com/tests/8e415c86c68648d984c1f3caaf5b6127)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 7 (Sauce results: https://saucelabs.com/tests/8e13f2caf2fe45c1b3839ab61668e0e1)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n - ie 6 (Sauce results: https://saucelabs.com/tests/99e4b3f867014ba0b5930a4ea157401a)\n    -> console\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=console\n. So I fixed the issue with the reserved word throw. In other tests,js files, not.to.throwException is being used, updating the .not.to.throw with that solved the issue.\nAlso, each method and property is now split into its own folder.\n. As you can see in my updated earlier comment, I did change that. I was thinking that the expect being used was from Chai. I have updated the PR now\n. @triblondon do you think that we should polyfill console.assert to test the assertion and log it if console.log exists?\n. After a bit of playing around, the polyfill could be as simple as\njs\nconsole.assert = function (assertion, msg) {\n  console.log(assertion, msg);\n};\nThat's all Chrome seems to do. Thoughts?\n. I can rebase this on top of #569 if you like\n. @JakeChampion the separate folders also helps test individual methods that may not be supported. It solves the IE11 problem in #569 as well\n. I've tested this PR locally and it all passed\n. Wrote 35773 bytes to result file\nProgress (browsers): 14 / 14 (0 browsers remaining, 0 test failures so far)\nAll jobs complete\nSauce tunnel stopped\ntravis_fold:end:Sauce test progress\nFailed tests:\n- None!\n  Browsers tested with no failures: chrome/46, chrome/35, firefox/41, firefox/30, ie/12, ie/11, ie/10, ie/9, ie/8, ie/7, ie/6, safari/9, safari/8, android/4.4\n. I ran grunt saucelabs:ci\n. Results are here\n. Travis just needs to be updated with the sauce enviornment variables to get it to work. Also, if you have a look at #557 I rebased it to handle more cases. I think you should have a look at it\n. Oops\n. I'm not sure. The angular guys saw fit to do it this way, I'm not sure of their reasoning nor their test cases.\n. Updated\n. ",
    "stensrud": "My temporary solution is to add a modified \u00b4ua\u00b4 query string parameter on the backend if Facebook is detected:\nvar m = userAgent.match(/^(.+)(\\[.+FBIOS.+\\][ ]*)/);\nif (m) {\n    return '&ua='+encodeURIComponent(m[1]+' Safari');\n}\n. Even if it's an assumption, we can be pretty sure 46 is the app version. It corresponds to the version number from the App Store.\nRunning the useragent-manually returns:\n{ family: 'Facebook',\n  major: '46',\n  minor: '0',\n  patch: '0',\n  device: { family: 'iPhone8,1', major: '0', minor: '0', patch: '0' },\n  os: { family: 'iOS', major: '9', minor: '2', patch: '0' } }\nThe big question, imho, is whether it is reliable enough to detect rendering engine and browser features using this massive user-agent library. Facebook is just one out of hundreds or thousands of webview-based browsers. How about Twitter? Pinterest? Slack? LinkedIn? 1Password? RSS readers?\nFor iOS devices (that's what i know), it would be safer to detect OS version. iOS disallows 3rd party web rendering engines, so you can be pretty sure what engine is in use just knowing the OS version.\n. Well, the ua-parser project did actually do a lot of extra work to create this bug (keeping track of 1000s of user agents), and it's not hard to imagine use cases where this is the wanted behavior, for instance analytics. Ideally, the ua-parser project would detect rendering engine in addition to browser and os, but that would be a lot to ask from them.\nI would suggest switching to os-detection for iOS, or maybe a WebKit fallback for non-recognized browsers. It depends of your goals for this project. If polyfill-service should work on the open web, and not just for internal tools, a catch-all solution is probably required.\n. ",
    "esseb": "FBAV/46 could be Facebook App Version, but I can only find assumptions online, no official documentation from Facebook:\n- https://github.com/jehiah/fb_user_agent/blob/master/fb_user_agent.go\n- http://mpulp.mobi/2012/01/funky-user-agent-on-facebook-iphone-app/\n- https://www.webmasterworld.com/search_engine_spiders/4729148.htm\n. ",
    "rixth": "I am seeing breakage as the Intl polyfill is not being returned for the FB in app browser either.\nUA: Mozilla/5.0 (iPhone; CPU iPhone OS 9_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13B143 [FBAN/FBIOS;FBAV/44.0.0.54.111;FBBV/17684769;FBDV/iPhone7,2;FBMD/iPhone;FBSN/iPhone OS;FBSV/9.1;FBSS/2; FBCR/Verizon;FBID/phone;FBLC/en_US;FBOP/5]\nAPI response:\n/* Polyfill service v3.4.2\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n *\n * UA detected: facebook/44.0.0 (unknown/unsupported; using policy `unknown=ignore`)\n * Features requested: Intl.~locale.en\n *  */\n. ",
    "yamadapc": "I've this and a similar issue with\n- \"Chrome Mobile 34.0\"\ncurl \"https://cdn.polyfill.io/v2/polyfill.js?features=Object.assign,Promise,Array.prototype.find,Array.prototype.findIndex,Intl,Intl.~locale.nb&flags=always,gated\" --header \"User-Agent: Mozilla/5.0 (Linux; Android 4.4.4; SAMSUNG SM-J100M Build/KTU84P) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.0 Chrome/34.0.1847.76 Mobile Safari/537.36\"\nI'd rather have the polyfill injected when the UA isn't supported. Does that not sound like a sensible solution?\nEDIT: Sorry, I didn't know about the unknown option.\n. ",
    "craigbilner": "@triblondon,\nso the docs seem a bit scant and I'm guessing not because it doesn't support fetch? (which is what brought me here...)\nThis is the UA I get on the MS VM.\n\"Mozilla/5.0 (Windows Phone 10.0;  Android 4.2.1; Nokia; Lumia 520) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Mobile Safari/537.36 Edge/12.10130\"\n. @triblondon @jacobrossi thanks, really helpful stuff\n. @triblondon, done, let me know if you need anything else, looks like there's a CI problem at the moment though...\n. thanks @JakeChampion, I'm aware of this but my issue was with defineProperty, which was pulled in as a dependency of Promise, so should gated gate all dependencies too? Also is it not best practice to just return at the earliest opportunity in a polyfill?\n. Thanks for the clarification @JakeChampion \nIf the core philosophy of the polyfill service is to polyfill regardless, because it only provides the required polyfills, the always option contradicts this philosophy. Therefore, if the always option is used and pulls in dependencies, the only safe thing to do would be to gate these dependencies?\n. ",
    "jacobrossi": "Edge on mobile uses the exact same engine as Edge on desktop.  When the user has \"Request Mobile sites\" enabled (the default), then the UA string contains a \"Mobile\" keyword as you've noticed as well as it saying \"Windows Phone\" instead of \"Windows NT\" and also the name of the device.\nDesktop UA:\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.11082\nMobile UA:\nMozilla/5.0 (Windows Phone 10.0; Android 4.2.1; Microsoft; Lumia 950 XL) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Mobile Safari/537.36 Edge/13.10586\nFeature support is almost entirely the same across both mobile/desktop (see status roadmap for the general list). However, there are a few exceptions.  \nMost differences between EdgeHTML on mobile and on desktop are similar to any other mobile browser:\n- No Flash\n- meta viewport is supported\n- content is shrink-to-fit if no viewport is specified\n- Touch Events enabled\nIIRC there may not be EME support on mobile, but I'd have to check on that to be sure. Additionally, I don't believe ORTC is supported on mobile yet.\nFor more docs: Edge Developer Guide\nEdge has two version numbers. One describes the app, the other describes the rendering engine. So you really care about the latter.  Version 12 came out this summer (the first release), Version 13 came out in November.  Preview builds of 14 will be out soonish I imagine. Only the rendering engine version number is included in the UA String because that's what matters to sites.\n. FWIW I'm not sure what the impact of your UA module is, but worth noting the EdgeHTML platform is far closer to Blink than it is to IE these days. Last count I made (as of v13 I think), 977 APIs removed and 1192 added compared with IE.\nv12 UA:\nMozilla/5.0 (Windows NT 10.0;) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36 Edge/12.10240\nv13 UA: \nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2486.0 Safari/537.36 Edge/13.10586\nv14 will follow the same pattern:\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/XXX.XX (KHTML, like Gecko) Chrome/YY.Y.YYYY.Y Safari/XXX.XX Edge/VV.BBBBB\nWhere X is a recent stable Safari version number as of the stable release of that EdgeHTML version, Y is a recent stable Chrome version number, V is the EdgeHTML version number (12, 13, 14...), and B is the build number of that EdgeHTML release. The Chrome/Safari version numbers are generally selected based on compatibility data we get from preview build users.\n. ",
    "deddu": "@zslabs did you get this to work? I can't have this polyfill working with IE9 either and before I dig into the code I'd like to know your thoughts. \nTo be more precise, it seems that  Element.prototype.placeholder remains undefined. \n. I have found a fix for the placeholder. There were two issues: \n- the document.createElement('-ms-input') and similar were failing due to the unsupported - at the beginning of the identifier. \n-  Object.defineProperty was missing the getter.\nI'll create a PR. any feedback is welcome\n. @jonathantneal thanks! I definitely have questions, especially because I sort of hammered at it until it worked in my VM. First I clearly would love for you to review the edits.\nThen, I did not had time to really dig into how the styles are applied, so I was just wondering if the styling logic would belong to the getter... thoughts?\nI would also thank everyone for this awesome service.  I cried of happines when I found this project!! :)\n. ehrm.. placeholder not displaying. sorry.\n. @triblondon I honestly don't have any clue how. I am afraid that it will need a regression/integration test instead... At the end the possible problems will arise when dealing with IE's quirks. Do you have anything set up for that, that I can work on?\n. Thank you for the awesome service, @triblondon! \nhere's a quick and dirty fiddle from the html I used for testing. I'll attach the full file it for reference. Sadly ie9 doesn't play very well with fiddle,or codepen but either the attachment or the link should work.\nwutwut.html.zip\nI will work on the lint as soon as I get a minute. Silly question from a lazy dev : there's a specific grunt task to run the linter? I was searching for a grunt lint but couldn't find it. \n. I know it will sound ridiculous, but I am having problems with the linting. Using the jshintrc file I have only errors due to undefined global variables, (i.e.: document, element). I don't see the need to fix those, they are part of the design. But I don't have any other warning or error. That said, I manually fixed the spacings and indentations, and updated the PR.\n. ",
    "callumj": "A real life example is the UIWebView in the Facebook iOS app:\n/* Unsupported UA detected: facebook/5.3.0 */\n. Are you able to PURGE the cache for existing requests, looks like it is cached for some UAs.\n. The way we are getting around this now is to append a query param like cache=EPOCH where EPOCH could be a random number or UNIX time stamp baked into the HTML (so it doesn't change).\n. I think I have managed to reproduce this (see Safari debugger screenshot):\n\nThe UA is being faked as Mozilla/5.0 (iPhone; CPU iPhone OS 10_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) Mobile/14B72. ",
    "jgeggatt": "Hey guys, I've been running into this too - looks like a PURGE will get it fixed.  Any chance you guys could do that before the long weekend (please and thank you)?\n. ",
    "seanmtracey": ":+1: on Jake's triangle. \n. ",
    "GeorgeBogdis": "Hi guys, here's an idea based on the Origami 'O' icon, turned to a 'P'. Cheers, g.\n\n. Hi guys, I've had another idea I wanted to try out, below, let me know what you think. Thanks, g.\n\n. ",
    "alicebartlett": "@GeorgeBogdis I like this latest one, it will work at lots of sizes, and in black and white, isn't too fussy. My favourite so far.\n. @triblondon I like this.\nNot sure I understand why the oranges are a different colour. \nI'd also lose the black outlines of the orange boxes, they're going to lead to weird antialiasing effects when this logo is used at smaller sizes. If your intention with them was to make them the logo legible to colour blind users then maybe a pattern could work instead of colours.\nGenerally though I like the concept.\n. Thank you for raising this. At 09:12 BST we deployed a DNS change which broke cdn.ployfill.io. We've just rolled that change back, it should take 24 minutes for that change to propagate. We'll keep you updated both here and over on http://twitter.com/polyfillio.. Looks good to me :+1:\n. :+1:\n. ",
    "didoo": "Agree, my fav too. Very well done!\n. ",
    "bdmac": "@triblondon can you tell me if this is live on the polyfill.io service yet? We are still seeing this happen as of today. I can't tell when you guys release updates or how to tie that back to this repo.\n. A curl request with homescreen iPhone UA indicated an unknown device and resulted in unknown=ignore being invoked. I had to override that to unknown=polyfill to get this working. I tried this at the time of my previous comment so unless this went live literally in the last like hour then it isn't working properly still. \n. @JakeChampion this does not work for me:\ncurl 'https://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en,Intl.~locale.es,Intl.~locale.de,Intl.~locale.fr,Intl.~locale.it,Intl.~locale.pt,Intl.~locale.ru' -H 'Pragma: no-cache' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'Accept-Language: en,en-US;q=0.8' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (iPhone; CPU iPhone OS 9_2_1 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13D15' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' -H 'Cache-Control: no-cache' -H 'Connection: keep-alive' --compressed\nThat is an exact request with the UA string passed from our app saved to my iPhone's homescreen and the result from that cURL request indicates UA detected: other/0.0.0 and goes on to say using policy unknown=ignore (the default).\n. That's so odd. I wonder if it's something with fastly?\n\nBrian McManus\nCheckMate Co-Founder\nOn Feb 24, 2016, 12:11 PM -0800, Jake Championnotifications@github.com, wrote:\n\nHmm, that UA works when sent via a query parameter:\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Intl.~locale.en,Intl.~locale.es,Intl.~locale.de,Intl.~locale.fr,Intl.~locale.it,Intl.~locale.pt,Intl.~locale.ru&ua=Mozilla/5.0%20(iPhone;%20CPU%20iPhone%20OS%209_2_1%20like%20Mac%20OS%20X)%20AppleWebKit/601.1.46%20(KHTML,%20like%20Gecko)%20Mobile/13D15(https://cdn.polyfill.io/v2/polyfill.js?features=Intl.%7Elocale.en,Intl.%7Elocale.es,Intl.%7Elocale.de,Intl.%7Elocale.fr,Intl.%7Elocale.it,Intl.%7Elocale.pt,Intl.%7Elocale.ru&ua=Mozilla/5.0%20(iPhone;%20CPU%20iPhone%20OS%209_2_1%20like%20Mac%20OS%20X)%20AppleWebKit/601.1.46%20(KHTML,%20like%20Gecko)%20Mobile/13D15)\nThe curl command you sent also seems to work for me.\n\u2014\nReply to this email directly orview it on GitHub(https://github.com/Financial-Times/polyfill-service/issues/579#issuecomment-188436658).\n. \n",
    "thisconnect": "Hm.. The behavior of all other browsers is that they remove the hidden attribute on el.hidden = false;\n. I'm including the polyfill here https://jwt-example-eebidhjnby.now.sh/. I didn't realize that fetch isn't included by reading https://polyfill.io/v2/docs/features/ should this be mentioned on the web?\n//cdn.polyfill.io/v2/polyfill.js?features=default,fetch works great thanks!!. ",
    "markrichardsft": "@JakeChampion thanks: what's recommended in this instance? I guess unknown=polyfill is best regardless?\n. ",
    "gheoan": "So this does not use core-js anymore?\n. Also MDN for searchParams as iterator.\n. @triblondon To be clear, the docs show Feature missing instead of Feature supported natively in FF because of that failing test?\n. @shtse8 flags=gated does exactly that. See https://polyfill.io/v2/docs/api.. The polyfill is following the standard: http://www.ecma-international.org/ecma-262/7.0/index.html#sec-get-map.prototype.size.. ",
    "nicjansma": "All set!  Thanks Andrew.\n. ",
    "tracker1": "I'm with @triblondon on this one... setImmediate may well be a desired polyfill outside of the use with Promise's polyfill...\nhttp://caniuse.com/#feat=setimmediate\n. See #734 \n. Okay, it was just an alarming sight, as I had no familiarity with with the registry in question, just following the repo, and noticed the changes...  Just wouldn't want people to get potentially injected scripts.\n. Have you tried with jQuery 2 or 3, with jquery-compat?\n. @triblondon check out the master locally... then (optionally) create your own branch to work in... \ngit pull git@github.com:debugwand/polyfill-service.git master\nwill pull in the remote changes into your branch, with a merge if needed....  from here, you can push into the upstream master.\nAs soon as a merge/push with the associated git hash is committed to the local master, the PR will be marked as merged.\n. Sorry, I hadn't noticed the second header when looking at the response from the public server, only the Accept-Encoding.\n@triblondon agents will respect both when on the same header, or separate header lines in the same response.. ",
    "siddo420": "Does polyfill (when loaded) makes sure it is not overriding already existing functions/methods/objects?\n. Also found https://philipwalton.github.io/polyfill/ (with flex support)\n. ",
    "rowanbeentje": "Interesting.  Mixed feelings about this but on old mobile browsers I'd agree on balance that this is now the expected behaviour.\nHowever as well as only applying to older mobile UAs, the polyfill service would also have to take care to apply only where the document meta tags match the current native patterns (eg viewport <= device-width).  Are there any precedents for doing this?\n. fastclick will currently trust the user to apply it to sites which benefit from it; enabling it in a default polyfill may result in a serious loss of accessibility for sites expecting support for double-tap-to-zoon.  It won't enable itself where UA+meta suggest the browser will supply that behaviour itself, but that also means it'll be included needlessly in the polyfill download for (say) Chrome 49 where it won't be needed.\n. (This could be added to https://github.com/Financial-Times/polyfill-service/pull/1919 but I don't have the access for that :) ). ",
    "gajus": "What about adding a polyfill for the the touch-action CSS property (https://twitter.com/kuizinas/status/698443022338547712)?\nSpecifically, the polyfill would need to check if browser supports touch-action property and if it does not, then it would scan loaded css documents, see those style declarations that include touch-action property and use https://github.com/ftlabs/fastclick to handle event within the target elements?\n. Is there a link for the hosted version of v3.22?, i.e. now I am using https://cdn.polyfill.io/v2/polyfill.min.js, which as far as I understand is v2.\nNever mind. I am wrong. Just checked https://cdn.polyfill.io/v2/polyfill.js. It is actually v3.20.2.. ",
    "rwwagner90": "@jonathantneal I made a JSFiddle that just includes the polyfill script and attempts to console.log(window.Event.prototype.stopPropagation). Please check it out in IE9 and notice the error https://jsfiddle.net/0yo7eejL/\n. @jonathantneal can you please confirm you see the error?\n. @jonathantneal this is definitely a polyfill error. Please look at the JSFiddle I posted. If you run it in IE9, and include the polyfill script the console.log(window.Event.prototype.stopPropagation) will be:\nundefined\nThen, if you remove the polyfill and run again, console.log(window.Event.prototype.stopPropagation) returns this:\nfunction stopPropagation() {\n    [native code]\n}\nThis tells me that the polyfill is incorrectly blowing away the native handler from IE. Do you see what I mean?\n. For simplicity of your testing, just open up IE9 and load https://jsfiddle.net/0yo7eejL/3/ to see window.Event.prototype.stopPropagation work correctly, and then open the original fiddle to see it blow up with the polyfill included. https://jsfiddle.net/0yo7eejL/\n. Any updates on this? I assume you were able to see the error?\n. @triblondon and @jonathantneal any updates?\n. @jonathantneal any plans of looking into this or is it a won't fix?\n. @jonathantneal @triblondon is there any intent to investigate this at all? Please respond. If there is no intent to fix it, let's close this issue as won't fix. Anyone who uses window.Event.prototype.stopPropagation.bind will just have to not use this service.\n. @triblondon I am not familiar with the repo at all or I would dig into it. I am certainly not going to pay a third party to do it.\nPlease do not misunderstand my intent, I am perfectly fine with you closing as a won't fix, although it is inconvenient, since the whole point of a polyfill service is to get older and problem browsers working.\nWhat I am not okay with, is this sitting open for years, and eventually being closed way later as a won't fix.\nI'm just looking for a straight answer, and if there is not the manpower to fix it, I'd just like to know that, so we can look for alternative polyfills.\n. Our app is getting out of stack space since 3.5.0 was released. We were testing on IE11, but we're unsure if that's the only browser effected. Is there any way to have the cdn support an older version or how do we install an older version ourselves until this can be fixed?\n\n. @JakeChampion It's line 974, which is this function\nsetDescriptor(this, uid, {\n                enumerable: false,\n                configurable: true,\n                writable: true,\n                value: value\n            });\n. @JakeChampion we use the one from the docs. <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js\"></script>\nWhy do you guys not support older versions in the cdn? Seems like something that would be really nice to have.\nWe were using version 3.4.2 and it is not on npm.\n. @JakeChampion then maybe some more in depth docs on how to use the service from npm for those of us that need older versions? \nI suppose the ideal solution here is to stop 3.5.0 from breaking IE11.\n. Okay, thanks for taking a look @JakeChampion. We really appreciate it! This is effecting a lot of our clients, and was unexpected that we would just have IE11 break right out from under us. We need a hotfix ASAP. If this is a hard problem to solve and we need to use the npm version for awhile, please advise us how to do so. \n. @JakeChampion is this the test link? When going to https://cdn.polyfill.io/test/tests?mode=all#hashchange-test-911996 we see 167 failures.\n. @JakeChampion okay, I think we see 323 passes using that link. Does that sound correct? So you're saying IE11 should not be including the Symbol polyfill at all?\n. @JakeChampion did you look into this?\n. ",
    "LeaVerou": "So I can send a PR with a tag of bliss and it would be merged? Didn't realize I could do that, thought tags were more restricted.\n. What about blissfuljs since that's the npm module too? \n. I\u2019m working on the PR. Quick question: There's no way to include an existing alias (like es5) in an alias, right?\n. Any ETA on when 3.3 will be deployed?\n. Awesome, thanks guys!\nWe have updated Bliss\u2019 homepage to suggest using this alias.\n. Thanks!\nAny ideas why if I visit https://cdn.polyfill.io/v2/polyfill.min.js?features=blissfuljs|always (the always flag is for testing) it doesn't show anything? Perhaps it needs time to propagate?\n. ",
    "velum": "The path suggested on the Bliss homepage (https://cdn.polyfill.io/v2/polyfill.min.js?features=blissfuljs) does not output any polyfills.... ",
    "Webnewbies": "But in the latest versions of browsers (Safari 9.01, Chrome 48, Firefox 42, Opera 35, all MAC OS X) display functions that already exist in the browser. Show Element.prototype.closest, Object.assign and String.prototype.includes.\n. ",
    "rowanmanning": "Few comments, otherwise looking good :+1:\n. A few comments, but nothing major I don't think. Also build is failing but that might be related to comments.\n. I can take a look. Also yep the Build Service documentation outlines how to do this. @triblondon: I'll send you Heroku's docker article via Slack in case you don't have access.\n. It deployed but I'm missing Fastly credentials, so deployvcl:qa failed. The Docker deploy worked though!\n. Looks good :+1: feel free to merge once CI has done it's thing\n. Code looks good \ud83d\udc4d not sure what's failing build\n. Code looks good, but I'm not sure what the bug was. Fancy explaining when you're in?\n. Looks good to me \ud83d\udc4d \n. This looks sensible \ud83d\udc4d \n. This looks good to me \ud83d\udc4d\n. Looks good \ud83d\udc4d\n. Looks good \ud83d\udc4d\n. One comment, otherwise this looks great to me \ud83d\udc4d \n. Yep, looks good \ud83d\udc4d \n. Looks good to me, as long as we're happy maybe contributing some automated browser testing back to Proclaim at some point. In answer to Andrew:\n- Yep admittedly Proclaim isn't as widely adopted as expect.js, if I can respond to issues in work time then this is probably OK but it's a valid concern.\n- I'm not a fan of the expect syntax, so unlikely to implement in Proclaim. You could reasonably easily write a wrapper library if it's an issue but I prefer the terse assert style and it's kind of standardised in CommonJS Unit Testing 1.0. The rule is that the order of arguments is always actual then expected.\n. Looks good \ud83d\udc4d\n. Looks good \ud83d\udc4d \n. Looks good to me \ud83d\udc4d \n. I'm not sure if this will work \u2013 ESlint incorrectly reports that this isn't changed and so should be a constant. The following prints \"foo\" three times anyway:\njs\nconst obj = { foo: 'bar', bar: 'baz', baz: 'qux' };\nfor (const prop in obj) { console.log(prop); }\nWorth investigating?\n. Possibly the same issue as mentioned above.\n. Single quoted for consistency?\n. These could be arrow functions\n. All of these could be arrow functions.\n. Maybe this should rely on Number.MAX_SAFE_INTEGER (or a polyfilled version of it) for clarity? Can polyfills rely on other polyfills?\n. I might be wrong but I don't think this is covered by the test suite\n. I think this should just work if the second path doesn't have a preceding slash too. E.g.\njs\npath.resolve(__dirname, 'polyfills/__dist');\n// rather than\npath.resolve(__dirname, './polyfills/__dist')\nI might be wrong, and it's not a big issue \u2013 doesn't have to be changed. Otherwise all good, merge when ready.\n. Won't this sometimes end up being webkitmozCancelAnimationFrame?\n. Just checking we want to ignore this error. Fine if we do, I'm not that familiar with this code\n. typo: \"values values\"\n. The browsers list isn't quite complete, we maintain a list of supported ones here. The Kangax compatibility tables are a good place to get this information.\n. Using bitwise OR here to floor targetLength could cause issues with particularly large numbers. E.g.\njs\n3000000000 | 0 === -1294967296\nIn the case above the resulting string reaches the maximum length in Chrome Canary and Firefox stable before this becomes an issue. However as maximum string length can differ between different JavaScript engines this could feasibly cause problems in the future.\nNot sure whether it's a pressing issue but worth documenting. An alternative could be to use:\njs\ntargetLength = Math.floor(parseInt(targetLength, 10)) || 0;. A few tab/space indent inconsistencies in this file. did you mean to leave this in?. Why's To capitalized?. These are tabbed in a bit too much. Shouldn't stop merging but it doesn't match the style of the rest of the code. This file seems to be over-indented past line 3\n  . In cases like this (where var k appears in both the if and else), should the declaration be moved out?. Why no ToInteger here?. Missing var? It's in the condition above.. Also noticed that the same issue is present in padStart. If this isn't needed should there be an explanation rather than commented code?. Oh, sorry, just saw Lee reviewed already. Spacing around these try/catch blocks is a bit inconsistent. ",
    "netsgnut": "Hi @Ikkyu-os, I have written a PR (#638) on that. Would you mind having a look and checking if that works for you? Thanks!\n. On the same token, it seems the apex domain polyfill.io does not support HTTPS as well. That means if someone tries to go to https://polyfill.io (like trying to link to the service for acknowledgement or so) it would not work.\n. Thanks @triblondon! However, just noted that #621's robots.txt fix is included on http://qa.polyfill.io but not yet on https://cdn.polyfill.io. Any thoughts? (Cached maybe?)\nbash\n$ curl http://qa.polyfill.io/robots.txt\nUser-agent: *\nDisallow:\nbash\n$ curl https://cdn.polyfill.io/robots.txt\nUser-agent: *\nAllow: /v1/docs\nAllow: /v2/docs\nDisallow: /\n. Cache-Control: public, max-age=604800, stale-while-revalidate=604800, stale-if-error=604800\nSo I guess we have to wait then :)\n. Great to hear it :)\n. ",
    "andygout": "Thanks all; have been in UX training all morning (about to go back in). Will read over everything to make sure I understand.\nIs it worth my checking if FxiOS should be processed (along with CriOS and OPiOS) through the stripiOSWebViewBrowsers function (have yet to see if Firefox on iOS fits the criteria)?\n. Seems to have fixed all the issues we were having :+1: \n. Submitted PR to docs branch here: https://github.com/Financial-Times/polyfill-service/pull/632, so am closing this branch.\n. I see you point and think I'm making this suggestion as a first-time polyfill-service user and that, as you suggest, it may well not be a common enough case for contributors wanting/needing to check browser support at time of contributing to warrant them, so probably best to leave them out.\n. I'll familiarise myself with the repo a bit more to come up with some suggestions of where they could be located.\n. ",
    "j-mes": "Having read through the docs twice. I would say as I'm not really familiar with the service or how to use the polyfills service, the documentation is a very good starting point. I especially like the live examples because then someone could get the ball running, and refer back to the documentation if something doesn't work to the expected outcome.\n. Ditto what Adam has said.\n. Is IIFE intentionally missing a link explaining what the abbreviation or what it does?\nWould I be correct in assuming that it is based on what Wikipedia has to say about IIFE.\n. This could do with another abbr tag for IIFE.\n. It might help to say that NPM gets installed during the Node installation?\n. Put in a space between the [configuration](#configuration)\n. The continuous integration tests are run on Circle CI. We can see the results afterwards.\nHow about that?\n. ",
    "andresmrm": "Thanks for the attention. =)\nWell, maybe I'm a rare case... Feel free to judge if it's worth or not to allow search engine indexing.\n. ",
    "onishiweb": "Probably worth upgrading that too while I'm at it I guess.\nUnsure why the tests are failing?\n. Looks good. Seems fairly straight forward to follow. Couple of small issues with links and a duplicated config option, but all good apart from that.\n. LGTM \ud83d\udc4d \n. Duplicated above\n. \ud83d\udc4d \n. ",
    "krawaller": "@triblondon Oh dear, what on earth happened there? Fixed now! :smile: \n. ",
    "creatorrr": "How does the process of adding a polyfill work? I am happy to make a PR.\n. ",
    "buzinas": "Opened https://github.com/Financial-Times/polyfill-service/pull/657!\n. Although this issue was merged/fixed/closed 20 days ago, the problem persists when I try to use the polyfill service cdn. What should I do? @triblondon @JakeChampion \n. @triblondon Thank you! :)\n. ",
    "jimf": "Ah, this is great, thanks for the info. Aside from watching the GitHub repo, are there any alternatives (ideally push-based) for being notified of changes coming down the pipeline?\n. :beers:\n. ",
    "dac09": "Hello,\nI've encoutered the same problem with these user agents:\n\nMozilla/5.0 (Linux; Android 5.1.1; SAMSUNG SM-N910F Build/LMY47X) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36\nMozilla/5.0 (Linux; Android 5.0.1; SAMSUNG GT-I9505 Build/LRX22C) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36\n\nI'm trying to polyfill Intl, but it returns nothing.\nThanks,\nDaniel\n. ",
    "aflatter": "@triblondon I'm seeing this with the following UA string, which appears to be a Galaxy Tab.\nMozilla/5.0 (Linux; U; Android 4.4.2; de-de; GT-P5210 Build/KOT49H) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30\n. Another two examples:\nMozilla/5.0 (Linux; U; Android 4.2.2; de-de; HTC_OneXplus Build/JDQ39) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\nMozilla/5.0 (Linux; U; Android 4.2.2; de-de; GT-I8200N Build/JDQ39) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n. ",
    "kentcdodds": "Hi @triblondon!\n\ncould be withdrawn at any time\n\nDefinitely a scary statement for anyone building a serious application leveraging this service!\n\nwe have no plans to do so and are very happy that we're serving an increasing amount of traffic\n\n:+1: I expect that if it were withdrawn suddenly, that wouldn't do anything for the Financial-Times or Fastly's images. So if something were to happen, I expect that there'd be some sort of migration strategy or something....\n\nwe're approaching 1 million requests per hour\n\n:open_mouth: wow, that's awesome\n\nI'm meeting Artur in a couple of weeks so I will mention it\n\nYes please do!\n\nIs your project an official PayPal thing?\n\nNope, but maybe it should be!\nMy project is actually a video series that I'll be creating on egghead.io about webpack which requires a Promise polyfill to work. I'm also going to use this for a workshop I'm giving at a conference or two and for Frontend Masters. Many people actually used webpack to conditionally load a Promise polyfill in the past and are now looking for a good way to conditionally include a Promise polyfill. I've used this service before and when I saw that you have polyfills for a bunch of APIs (promises included) I thought this would be a great solution to the problem.\nSo, if I can get some kind of assurance that I wont be teaching people to add a dependency on an unstable service, then I'll go ahead and do it!\nThanks!\n. In case you're interested, here's the lesson I was working on. Just published today :-) https://egghead.io/lessons/tools-polyfill-promises-for-webpack-2\n. ",
    "ashleynolan": "Ok, will take a look at implementing something along those lines and let you know how I get on.  Thanks :+1: \n. Great \u2013 thanks for looking into this \ud83d\udc4d \n. ",
    "erykpiast": "@AdaRoseEdwards, can you explain, what you if on arraylike.hasOwnProperty('next') === false inside parseIterable? It prevents working \"fake\" iterators (like ones defined inside es6-collections package). I'm not sure if was strict requirement or \"just-in-case\" condition. As far as I see, there is no test case defined to check exactly this.\n. When do you plan to deploy version with Map?\n. ",
    "loris": "Any update on this one? I do confirm that right now any website depending on Intl is broken on Samsung phones (they do have quite a nice market share, by the way). Is there a workaround?\n. Thanks @JakeChampion, looks fine!\n. @JakeChampion Actually I spoke too quickly, it does not work with a Samsung Device I could get my hands on (SamsungBrowser/3.3 Chrome/38.0.2125.102). It looks the issue is not at the UA sniffing level but in the polyfill:\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en|always\"></script>\n    <script>\n      window.alert(window.Intl);\n    </script>\nIt does output undefined\nBTW, it works as expected when using the following polyfill instead: http://polyfills.yahooapis.com/polyfill.min.js?version=2.1.9&features=Intl%2Clocale-data-en-US\n. ",
    "torgo": "Hi @triblondon \u2013 sorry for the late response. With my Samsung Browser team hat on, I am working to get support from Samsung on this. Also CCing @jungkees, one of the core browser team members (and co-editor of Service Workers). We are still not sure exactly who will be contributing but there intention is there to contribute. Also note I am reaching out to caniuse to get them to recognize Samsung Browser differently. As you can see from the stat counter data Samsung Browser is starting to pick up a pretty significant share of mobile browsing. So the answer is that Samsung are tentatively committed to maintain and we are putting together the team to back up that commitment now.\n. ",
    "ncri": "Is there a polyfill that can be used for that browser? We see every week thousands of users with samsung devices running into this issue, basically finding a broken site.\n. Thanks, however 2 comments down someone says it doesn't work. And yes, I understand that. It's okay for us to work around the issue by detecting the browser ourselves. But that only helps if there is a working polyfill.\n. Thanks.\n. ",
    "airtonix": "I'm also experiencing this issue.\nusing //cdn.polyfill.io/v2/polyfill.min.js?feature=Promise|gated\n. ",
    "mridgway": "This issue was re-introduced by https://github.com/Financial-Times/polyfill-service/pull/1347. @JakeChampion Any ETA on getting a new version out that supports Node 10? Anything that we can help with to get there?. ",
    "ro-savage": "@JakeChampion \nThis is our site that is currently broken on IE11: \nhttp://macvad.ap-southeast-2.elasticbeanstalk.com\nIt appears to me that it is dying as soon as it tries to run the polyfills. \nHowever, maybe something in our code is calling the polyfill and that is causing the issue?\n. Haven't been able to make a simple test case. I will update once I have a simple test case that causes the error. Thanks.\n. https://cdn.polyfill.io/v2/polyfill.min.js?features=default is breaking\nhttps://cdn.polyfill.io/v2/polyfill.js?features=default is working\nThought it wasn't before. Nor sure what happened. Maybe corrupt CDN or... no idea. Git log had no changes and now its working after 3hrs of being broken.\nClosing the issue.\n. ",
    "motss": "@JakeChampion It makes sense. I didn't notice the star next to them.\n. ",
    "MartinMuzatko": "Ugh. I didn't know that fetch wasn't included by default. Thanks for clarifying that.. ",
    "drKnoxy": "\ud83d\udcad i swear i hit pollyfill.io?feature=MutationObserve in ie10 a week ago and it returned  https://github.com/webmodules/mutation-observer \nwould love to get this in...\n. Some investigation from the failed test\nTwo Failed tests for ie 9\n```\n// subtree testing near L616\n\"message\":\"expected [] to sort of equal [ {} ]\",\n\"stack\":null,\n\"name\":\"MutationObserver MutationObserver childList subtree\",\n\"result\":false\n// near L656\n\"message\":\"expected 0 to equal 2\",\n\"stack\":null,\n\"name\":\"MutationObserver MutationObserver childList both direct and subtree\",\n\"result\":false\n```\n\"uaString\":\"Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0; SLCC2; .NET CLR 2.0.50727; .NET4.0C; .NET4.0E)\",\n. ",
    "thedrew12": "\ud83d\udc4d \n. ",
    "CLAassistant": " Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.3 out of 4 committers have signed the CLA.:white_check_mark: triblondon:white_check_mark: JakeChampion:white_check_mark: hipkiss91:x: BettsBetts seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: JakeChampion:x: Mosho1.  All committers have signed the CLA..  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: JakeChampion:x: dbaron.  All committers have signed the CLA..  All committers have signed the CLA.\n.  All committers have signed the CLA.\n.  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: JakeChampion:x: ironsidevsquincyYou have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.0 out of 2 committers have signed the CLA.:x: leemhenson:x: jgwmaxwellYou have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: JakeChampion:x: TomasTomas seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 3 committers have signed the CLA.:white_check_mark: JakeChampion:x: jgwmaxwell:x: dotbearYou have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA.. ",
    "ying22": "/* Polyfill service v3.5.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: safari/9.1.0\n * Features requested: Intl.~locale.en\n * \n * - Intl, License: MIT (required by \"Intl.~locale.en\")\n * - Intl.~locale.en, License: MIT */\nMy Safari is 9.1.1 (11601.6.17)\n. My bad, it works fine. I was testing this in the browser console instead of code. \n. ",
    "falsandtru": "Thanks for replying. Here is a test. Can you repro?\nNote: I'm using Mocha and power-assert for tests.\nts\n    it('click', done => {\n      const a = document.createElement('a');\n      a.addEventListener('click', ev => {\n        assert(ev instanceof Event);\n        done();\n      });\n      document.createDocumentFragment().appendChild(a);\n      a.click();\n    });\n. Okay. http://jsbin.com/ludihajufu/1/edit?html,console\n. It works fine :+1: \n. Thanks. I think this is not a problem of details of user-agent. One of the problem is a failure of browser family detection. For example, my reported user-agent was detected as Chrome, but it should be detected as Android. This service misdetect a browser family with Android browser that user-agent has a string of \"Chrome\".\n. At least, I have a chrome browser version 51 as a different browser of default browser in my smartphone.\nMy repro is here\n1. Set ua Mozilla/5.0 (Linux; Android 4.4.2; KYY24 Build/108.1.2110) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36 with Chrome.\n2. Open https://cdn.polyfill.io/v2/polyfill.js\n/* Polyfill service v3.8.1\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: chrome/30.0.0\n * Features requested: default\n * \n * - Array.from, License: CC0 (required by \"default\")\n * - Array.of, License: CC0 (required by \"default\")\n * - Array.prototype.fill, License: CC0 (required by \"default\")\n * - _mutation, License: CC0 (required by \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.prepend\", \"Element.prototype.replaceWith\", \"default\")\n * - Element.prototype.after, License: CC0 (required by \"default\")\n * - Element.prototype.append, License: CC0 (required by \"default\")\n * - Element.prototype.before, License: CC0 (required by \"default\")\n * - Element.prototype.matches, License: CC0 (required by \"Element.prototype.closest\", \"default\")\n * - Element.prototype.closest, License: CC0 (required by \"default\")\n * - Element.prototype.prepend, License: CC0 (required by \"default\")\n * - Element.prototype.replaceWith, License: CC0 (required by \"default\")\n * - Symbol, License: MIT (required by \"Map\", \"Set\", \"Symbol.iterator\", \"Symbol.species\", \"default\")\n * - Symbol.iterator, License: MIT (required by \"Map\", \"Set\", \"default\")\n * - Symbol.species, License: MIT (required by \"Map\", \"Set\", \"default\")\n * - Map, License: CC0 (required by \"default\")\n * - Object.assign, License: CC0 (required by \"default\")\n * - setImmediate, License: CC0 (required by \"Promise\", \"default\")\n * - Promise, License: MIT (required by \"default\")\n * - Set, License: CC0 (required by \"default\")\n * - String.prototype.endsWith, License: CC0 (required by \"default\")\n * - String.prototype.includes, License: CC0 (required by \"default\")\n * - String.prototype.startsWith, License: CC0 (required by \"default\")\n * - URL, License: CC0 (required by \"default\")\n * - document.visibilityState, License: CC0 (required by \"default\") */\nIn this case, ua should be android/4.4.0, and polyfills should have WeakMap and WeakSet by default because its features are not provided on Android 4.4.\nhttp://kangax.github.io/compat-table/es6/\n. I think this problem needs to fix a feature of browser family detection.\n. Oh, I did not know it default restriction. Thanks a lot! However, when I request as Android 4.4 using Mozilla/5.0 (Linux; Android 4.4.2; KYY24 Build/108.1.2110) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Mobile Safari/537.36 (Chrome was removed), its response does not have WeakMap and WeakSet. Is this a correct behavior?\n/* Polyfill service v3.8.1\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: android/4.4.0\n * Features requested: WeakMap,WeakSet,default\n * \n * - _mutation, License: CC0 (required by \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.prepend\", \"Element.prototype.remove\", \"Element.prototype.replaceWith\", \"default\")\n * - Element.prototype.after, License: CC0 (required by \"default\")\n * - Element.prototype.append, License: CC0 (required by \"default\")\n * - Element.prototype.before, License: CC0 (required by \"default\")\n * - Element.prototype.matches, License: CC0 (required by \"Element.prototype.closest\", \"default\")\n * - Element.prototype.closest, License: CC0 (required by \"default\")\n * - Element.prototype.prepend, License: CC0 (required by \"default\")\n * - Element.prototype.remove, License: CC0 (required by \"default\")\n * - Element.prototype.replaceWith, License: CC0 (required by \"default\")\n * - Number.isNaN, License: MIT (required by \"Set\", \"default\")\n * - Object.assign, License: CC0 (required by \"default\")\n * - setImmediate, License: CC0 (required by \"Promise\", \"default\")\n * - Promise, License: MIT (required by \"default\")\n * - Set, License: CC0 (required by \"default\")\n * - String.prototype.endsWith, License: CC0 (required by \"default\")\n * - String.prototype.includes, License: CC0 (required by \"default\")\n * - String.prototype.startsWith, License: CC0 (required by \"default\")\n * - URL, License: CC0 (required by \"default\")\n * - document.visibilityState, License: CC0 (required by \"default\") */\nAnother, how should we do about a browser family detection problem? I'm worried about ReferenceError: WeakMap is not defined on Android 4.x.\n. Also, Map doesn't exist in https://github.com/Financial-Times/polyfill-service/issues/793#issuecomment-238112927.\n. I'm trying to fix these problems in #818. Please review it.\n. Add, Array.from and too many polyfills are not provided for Android browser.\n. Thanks for the navigation.\n. Note: I found https://github.com/3rd-Eden/useragent/issues/46. We cannot distinguish Android browser and Chrome mobile. So we need to switch config by chrome version.\n. A cause is here\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Array/from/polyfill.js#L12\njs\nif (typeof arraylike.next === 'function' && arraylike.hasOwnProperty('next') === false) {\nIn this line, arraylike.hasOwnProperty('next') should return false. But iterators that made by Map polyfills define next prop as an own prop. So actually, it returns true.\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Map/polyfill.js#L17-L31\njs\n    function makeIterator(mapInst, getter) {\n        var nextIdx = 0;\n        var done = false;\n        return {\n            next: function() {\n                if (nextIdx === mapInst._keys.length) done = true;\n                if (!done) {\n                    while (mapInst._keys[nextIdx] === undefMarker) nextIdx++;\n                    return {value: getter.call(mapInst, nextIdx++), done: false};\n                } else {\n                    return {done:true};\n                }\n            }\n        }\n    }\n. @triblondon @JakeChampion Can you take a look? Note, I don't have api keys of saucelabs. How can I resolve the following error?\nWarning: SAUCE_USER_NAME and SAUCE_API_KEY must be set in the environment\u0007 Use --force to continue.\n. Thanks! Could you merge this?\n. This change is already covered in the following test.\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Array/from/tests.js#L46\nBut old code passed this test even though it should be failed. Then I don't know how can I test this change using polyfills. Have you any ideas?\n. Okay, I'll try it.\n. Thanks @JakeChampion !\n. I agree, this is a wholly my own work, and you can use this under your license.\n. Okay, is there an example screenshot?\n\nOpera, ie mobile or FF mobile\n\nI also don't know those browsers. But old configs probably doesn't work with those browsers.\n. Thanks.\n\nMap\n\nSet\n\nWeakMap\n\nWeakSet\n\n. I'll be absent for a few days because I'm going to the center of universe \ud83d\ude80 \n. I agree with contribution terms of this project.\n. I see, wait a moment please.\n. Fixed. If it is okay, I'll squash my commits.\n. Yes, self-update is the best way. This fix works until adding its feature.\nQuestion. Is there a better way to run CI tests by myself?\n. Okay,\n\nfrom\n\nof\n\n. @triblondon Is this enough?\n. @JakeChampion I agree with contribution terms of this project.\n. Oh, I didn't know that. Thanks for your kindness!\n. When can I use its upstream polyfills?\n. I see, where can I fix the polyfill? Here, or upstream?\n. Sorry, I misunderstand about iterators. This code is wrong, and is a partial support. How should I do?\n. I see, then I close this pr, and wait the upstream fix. I'm very glad. Thanks a lot!\n. I'll create some pr for Android support after several days. Many configs are not defined android versions. Thanks again \ud83d\udc4d \n. Hmm, it seems to have caused by conflict between Symbol.iterator and @@iterator. I'll try to fix it.\n. Probably there are two ways.\n1. Check @@iterator in all polyfills, per polyfill.\n2. Change the Symbol.iterator polyfill to use @@iterator in old firefox.\nI recommend the second way that change Symbol.iterator. The first way will make bugs.\n. I'm trying the first way only for Array.from because the second way is difficult to pass the tests of Symbol.\n. Fixed. Please run ci with latest 2 commits.\n. Thanks :) If the test for 73227c3 is passed, I recommend that we drop the last commit 767c1e2 for simplicity and consistency with other polyfills.\n. @JakeChampion Unfortunately, we cannot use the upstream polyfill because it cannot use with Symbol.iterator polyfill https://github.com/mathiasbynens/Array.from/issues/36. So can we use this fix?\n. However, then we need large changes to work with Symbol polyfills.\n. Seems like we cannot remove fixes for legacy Firefox support. So I added it https://github.com/Financial-Times/polyfill-service/pull/840/commits/d4d0f9a81032e82462bed2a33f770c97fd9cea2c.\n. Add: Array.from polyfill still broken with Map/Set polyfills because Array.from checks value prop in https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Array/from/polyfill.js#L16 but Map/Set don't provide that prop in https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Map/polyfill.js#L27. It happened with my lib. So #817 is incomplete.\n@JakeChampion Can I use the upstream polyfill with this service in a few week, or should I fix it on this repo?\n. @triblondon @JakeChampion Could you review #840? I reopened that pr to fix this bug.\n. This will be fixed by #884. Thanks for your pointing.\n. Thanks, the problem I found on Android 4.4 is fixed.\n. Now I'm not sure about android browser on AndroidOS5. Seems like it uses the latest browser. Maybe this pr can be fixed such as\ndiff\n-       \"android\": \"<5.1\",\n+       \"android\": \"<5\",\nBut I don't have AndroidOS5. Can you check the android browser version on AndroidOS5?\n. Then we can change to <5 because Element.closest is supported in Chrome 49.\n. Yeah, I fixed it.\n. It seems to work on Android4.4 (no errors for loading).\n/* Polyfill service DEVELOPMENT MODE - for live use set NODE_ENV to 'production'\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: chrome/30.0.0\n * Features requested: default\n * \n * - Array.from, License: CC0 (required by \"default\")\n * - Array.of, License: MIT (required by \"default\")\n * - Array.prototype.fill, License: CC0 (required by \"default\")\n * - _mutation, License: CC0 (required by \"Element.prototype.after\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.prepend\", \"Element.prototype.remove\", \"Element.prototype.replaceWith\", \"default\")\n * - Element.prototype.after, License: CC0 (required by \"default\")\n * - Element.prototype.append, License: CC0 (required by \"default\")\n * - Element.prototype.before, License: CC0 (required by \"default\")\n * - Element.prototype.matches, License: CC0 (required by \"Element.prototype.closest\", \"default\")\n * - Element.prototype.closest, License: CC0 (required by \"default\")\n * - Element.prototype.prepend, License: CC0 (required by \"default\")\n * - Element.prototype.replaceWith, License: CC0 (required by \"default\")\n * - Symbol, License: MIT (required by \"Map\", \"Set\", \"Symbol.iterator\", \"Symbol.species\", \"default\")\n * - Symbol.iterator, License: MIT (required by \"Map\", \"Set\", \"default\")\n * - Symbol.species, License: MIT (required by \"Map\", \"Set\", \"default\")\n * - Map, License: CC0 (required by \"default\")\n * - Object.assign, License: CC0 (required by \"default\")\n * - setImmediate, License: CC0 (required by \"Promise\", \"default\")\n * - Promise, License: MIT (required by \"default\")\n * - Set, License: CC0 (required by \"default\")\n * - String.prototype.endsWith, License: CC0 (required by \"default\")\n * - String.prototype.includes, License: CC0 (required by \"default\")\n * - String.prototype.startsWith, License: CC0 (required by \"default\")\n * - URL, License: CC0 (required by \"default\")\n * - document.visibilityState, License: CC0 (required by \"default\") */\n. !(descriptor instanceof Object) check never works because of 'value' in descriptor. So that validation is moved to work before using descriptor.\n. Fixed.\n. To clarify, I removed my additional commit.\n. The current implementation Array.prototype.values = Array.prototype[Symbol.iterator]; makes an enumerable property.\n```\n\nObject.getOwnPropertyDescriptor(Array.prototype, 'values')\nObject {writable: true, enumerable: true, configurable: true}\nObject.getOwnPropertyDescriptor(Array.prototype, 'length')\nObject {value: 0, writable: true, enumerable: false, configurable: false}\nfor (var i in []) i\n\"values\"\n``\n. Can we know which tests are failed in ci (Safari 8) ?\n. I guess Safari 8 has 2 iterations that useSymbol.iteratorpolyfill or for-of statement. Probably it is a reason of failures in ci tests. We need to choose one of those 2 iterations dynamically.\n. LGTM\n. It will be fixes for #816 and #844.\n. Can we use this fix in next version 3.13?\n. Seems like there are 2 problems.\n1.Symbol.iteratoris rewritten.\n2. Some methods such as.values()return a not iterable value (not having aSymbol.iterator` method).\n. Can you run this test?\n. What a coincidence! Sadly, I cannot speak English. So I'm unable to speak with you \ud83d\ude22. Thanks for inviting me!\n\nNow, I found https://github.com/WICG/EventListenerOptions. Can we use that?\n. >  your written English is nearly perfect.\nThanks, I'm happy to hear that.\nHm, in short, we cannot use the WICG's polyfill under their license? About a separateness, I hope to implement to existing files to separate difficulty and steps because I don't know your system well. Or if you add the placeholder, it is helpful to me. About the ci failure, at least, window.addEventListener in my impl doesn't work before completing dom loading. It must be document.createElement(\"div\").addEventListener.\nJust a note, the difference of EventListenerOptions feature support confuses the order of calling.\njs\naddEventListener('click', function(){console.log(0)});\naddEventListener('click', function(){console.log(1)}, {});\nIn this code, browsers return 0, 1 if they support EventListenerOptions, otherwise they return 1, 0.\n. I fixed that point for now.\n. Could you run tests with permission?\nRunning \"saucelabs:ci\" (saucelabs) task\nWarning: SAUCE_USER_NAME and SAUCE_API_KEY must be set in the environment\u0007 Use --force to continue.\nError: SAUCE_USER_NAME and SAUCE_API_KEY must be set in the environment\n  at Object.<anonymous> (/home/ubuntu/polyfill-service/tasks/grunt/saucelabs.js:60:20)\n  at Object.<anonymous> (/home/ubuntu/polyfill-service/node_modules/grunt/lib/grunt/task.js:255:15)\n  at Object.thisTask.fn (/home/ubuntu/polyfill-service/node_modules/grunt/lib/grunt/task.js:73:16)\n  at Object.<anonymous> (/home/ubuntu/polyfill-service/node_modules/grunt/lib/util/task.js:294:30)\n  at Task.runTaskFn (/home/ubuntu/polyfill-service/node_modules/grunt/lib/util/task.js:244:24)\n  at Task.<anonymous> (/home/ubuntu/polyfill-service/node_modules/grunt/lib/util/task.js:293:12)\n  at /home/ubuntu/polyfill-service/node_modules/grunt/lib/util/task.js:220:11\n  at _combinedTickCallback (internal/process/next_tick.js:67:7)\n  at process._tickCallback (internal/process/next_tick.js:98:9)\n. Thanks! Event/tests.js of this pr is passed with chrome/30 (Android 4.4), but ci is failed with all browsers. I have no idea how to pass the tests.\n. Thanks, I resolved it!\n. Hm... I'll try to separate the implementations as it is said at https://github.com/Financial-Times/polyfill-service/pull/905#issuecomment-253085925 for now.\n. It should be this.console = this.console || {}. Can you make a pr?\n. Can you take a look?\nFailed tests:\n - ie 9 (Sauce results: https://saucelabs.com/tests/b1556e0ee91f4b299a7de1574d7301ca)\n    -> IntersectionObserver\n       http://127.0.0.1:3000/test/tests?mode=targeted&feature=IntersectionObserver\nBrowsers tested with no failures: chrome/48, chrome/40, firefox/42, firefox/30, ie/13, ie/12, ie/11, ie/10, ie/8, ie/7, safari/9, safari/8, android/4.4\n. Me too...\n. Android 5 or higher use Chrome via WebView. You can see it by hovering the cursor over Android versions on that site. Probably your specified version is a Chrome version. So I think we need to set <5 when Chrome versions are displayed as Android versions. Also see #867.\n. I don't know how Android 5 actually behaves because I don't have that one. Can I see actual results in Android 5 like android/51?\n. At least, this pr will solve confusing of version schemas. I cannot know about which schema I should use. So we should have consistency of version schemas and shouldn't mix the different schemas like Android and Chrome.\n. I think then we need to update android versions in all config.json if that android version is 5 or higher. Will  we do that?\n. Thanks, I fixed it.\n. Which level polyfill will we provide? We cannot provide compatibility with es6 in some case.\njs\nvar f = function () {};\nconsole.log(f.name); // \"f\"\n. I see, now I think developers should accept this difference because some legacy browsers possibly have an incomplete partial implementation. So we can provide the partial implementation like those legacy browsers.\n. I tried to run 'searchParams' in nativeURL on Edge, then this code returns false correctly. And it would be tested by existing tests.\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/URL/tests.js#L113\n. @triblondon As I commented, some tests fail on the latest browsers. So we need to run tests on them. Can you add the target browsers such as Chrome latest(53+), Chrome canary, and Android 5+?\n. Thanks for updating! Seems like we can specify latest, latest-1, and beta. Can you use this style?\nhttps://wiki.saucelabs.com/display/DOCS/Test+Configuration+Options\nhttps://saucelabs.com/platforms\n. I see. As a note, TravisCI's allow_failures option is helpful in this case, but CircleCI doesn't seem to have that option.\n. Sorry, I also can't remember it. I'll try to find a spec later.\n. Found: https://github.com/whatwg/console/issues/3\nNow console is a namespace, has not an interface.\n. Okay, I'll try it. However, it may be impossible to make this polyfill in some browsers. Then we need to accept this limitation. So please run tests before adding tests.\n. Added.\n. @JakeChampion Please rerun tests to know the failed test.. Thanks, fixed it.. I agreed.. These changes come from Set/config.json. This config possibly will be working because Set/config.json is working, and already has \"android\": \"*\". WeakSet's changes also come from WeakMap.\n. Is there a case that this service doesn't provide Symbol polyfills even when browsers don't support the Symbol?\n. Okay, I added a dependency.\n. Is this ok?\nit('can convert from a custom iterator', function () {\n    if (![][Symbol.iterator]) this.skip();\n. I see, fixed.\n. I see, I want to copy your impl. But I have a question. The following your code will possibly always throw an error because a generated function cannot change y, y would always be undefined. Why it works correctly? Safari's bug?\njs\n        var map = new Map();\n        map.set(1, 2);\n        var y;\n        Function('map', 'y', 'for (var x of map) {y = x}')(map, y); // eslint-disable-line no-new-func\n        if (y[0] === 1 && y[1] === 2) {\n            forOfOnly = true;\n        }\n. Okay, do you fix it yourself in upstream? Otherwise, I can fix it today.\n. Okay, I made https://github.com/mathiasbynens/Array.from/pull/37.\n. This check need to accept Object('str') and similar objects. https://github.com/ljharb/is-string\n. In latest chrome, anon.name is 'anon', not an empty string.\n. ",
    "richtier": "seeing this on safari on iphone too.\nto workaround for us was to hard code the request to https://\n. ",
    "davidpelayo": "In addition, I just checked that for: https://cdn.polyfill.io/v2/polyfill.js?flags=gated&features=Intl.~locale.it-IT running in Safari, we get the following result:\n``` javascript\n/ Polyfill service v3.6.1\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: safari/9.1.0\n * Features requested: Intl.~locale.it-IT\n * \n * - Intl, License: MIT (required by \"Intl.~locale.it-IT\")\n * - Intl.~locale.it-IT, License: MIT /\n(function(undefined) {\nif (!('Intl' in this)) {\n// Intl\n/ rest of the code /\n}\n```\nWhile the 'official' polyfill checks the following: \n``` javascript\nvar areIntlLocalesSupported = require('intl-locales-supported');\nvar localesMyAppSupports = [\n    / list locales here /\n];\nif (global.Intl) {\n    // Determine if the built-in Intl has the locale data we need.\n    if (!areIntlLocalesSupported(localesMyAppSupports)) {\n        // Intl exists, but it doesn't have the data we need, so load the\n        // polyfill and patch the constructors we need with the polyfill's.\n        var IntlPolyfill    = require('intl');\n        Intl.NumberFormat   = IntlPolyfill.NumberFormat;\n        Intl.DateTimeFormat = IntlPolyfill.DateTimeFormat;\n    }\n} else {\n    // No Intl, so use and load the polyfill.\n    global.Intl = require('intl');\n}\n```\nThe locale support check made the difference throwing an unexpected error, while if we remove the gated flag, since it's not gated anymore, the polyfill then gets loaded correctly. Therefore Safari doesn't get the exception.\n. ",
    "getify": "The other thing I'm partially recalling besides enumerability is that IIRC some prototypes of built-ins are read only, and failed settting, like maybe in older IE or something. \n. ",
    "victorwhy": "Huh, that seemed to have worked, yes.\nI do get a 'Symbol' is undefined error, however.\nWhat I don't understand is why Symbol or any of those other features are getting included in the first places? according to the docs, Symbol isn't part of the default features?\nBut thanks for the help! Glad to hear that it's being worked on.\n. I'm a little confused.  it looks like IE11 doesn't have Symbol natively, correct?  So how are Map and Set default for IE11?  if Map and Set are dependencies for Symbol, it should always be a default too, right? \n. But I will poke around and see if we can find the code that's triggering this.\nThanks again for the help!\n. @JakeChampion after a bit of searching, this piece of code that a contractor added to our codebase was causing this issue:\nNodeList.prototype[Symbol.iterator] = Array.prototype[Symbol.iterator];\nI think they were trying to make it easier to iterate over NodeList but there were better solutions that we already implemented and didn't take that line out! D:\nHope this helps!\n. @JakeChampion haven't had a chance to test, but will check it out when I get some time! thanks!\n. ",
    "nicomfe": "My 2 cents here, we are using Polifill service v3.6.1 and were getting this error on IE11:\nOut Of stack space\nFile: polyfill.js, Line 1535, Column 4\nThe workaround was to add this to the polyfill import as @JakeChampion said\n&excludes=Map,Set,Symbol,Symbol.iterator,Symbol.species\nWe are not using Map and Set so adding this should also fix the \"Symbol is undefined\" errors\n. ",
    "robwierzbowski": "Excluding Symbol and its dependencies as @nicomfe said definitely helps. I think Map and Set being default polyfills and requiring Symbol makes the issue more severe though. Like @victorwhy mentioned, excluding Symbol throws errors in the Map and Set polyfills on browsers that don't support Symbol.\nOddly, polyfill.io is serving the Map and Set polyfills to IE11, even though it supports Map and Set. So we're getting the Symbol error, but the code we have that uses Map and Set still works :P. \n\n. @JakeChampion, any updates on the Symbol polyfill? If it helps, I could try testing other OSS Symbol polyfills in IEs, not sure I have enough domain knowledge to debug the current one. \n. Wondering if this issue (https://github.com/Financial-Times/polyfill-service/issues/679) is discussing the same problems, and if so if Map/Set/Symbol are fixed. Will test.\n. Seems like this issue is just about inadvisably using Symbol to attach an iterator to a DOM collection. By removing the offending code, Polyfill.io works fine. Should we close this issue?\n. We're seeing 503s on some polyfill.io calls as well. Large portions of our users are having polyfill errors, which might be related.. It looks like this might have been caused by a bad Fastly configuration, based on https://github.com/Financial-Times/polyfill-service/issues/1846#issuecomment-453603845.\nRelated?\nhttps://github.com/Financial-Times/polyfill-service/issues/1851\nhttps://github.com/Financial-Times/polyfill-service/issues/1850\nhttps://github.com/Financial-Times/polyfill-service/issues/1848\nhttps://github.com/Financial-Times/polyfill-service/issues/1846\nWe too experienced a large volume of errors.. ",
    "joaojeronimo": "Publishing to QA is great but introduces hard deadlines to test the changes and adapt on a team using polyfill service every time there is an upgrade.\nI will spike something to do with subpaths a bit later, perhaps useful for this case.\n. When you say update on demand using a build tool, do you mean installing this module as a dependency and generating polyfills at runtime, i.e. running a specific version of the polyfill service myself ? Yes that is a viable solution.\nI think releasing a versioned default bundle is a great idea, but I don't see how someone would be subject to bugfix changes as those would be different versions if you follow semver.\n. But if you are going to change anything, that's a new version altogether right ? You start with default-3.5.0, then you release a couple of bugfixes with default-3.5.1 and so on, that wouldn't break anyone.\n. Same issue here.\nOur src: https://cdn.polyfill.io/v2/polyfill.js?features=default,Element|gated,Promise|always|gated,matchMedia,console,console.warn\nThe debugger points to the Element polyfill code (this line).\n. Seems fixed here as well, thank you!\n. ",
    "RyKilleen": "At some point on a client's website, we also started experiencing trouble at an undetermined time, though my hunch is after #666 ( \ud83d\ude08 )\nWhile I appreciate that this is a free service and a wonderful asset, this client does not pay enough to keep up-to-date with a polyfill service. A versioned set of defaults would be extremely useful to us, as it is difficult to even isolate the issue/change and troubleshoot without spinning up our own service. \nAlso, thanks for all the hard work put into a super useful tool.\n. @triblondon Thanks a ton, really appreciate the work!\n. ",
    "Mouvedia": "You should review the rest of the polyfills: it's probably not the only duplicate.\n. ",
    "nolanlawson": "Hm yeah, I see SauceLabs doesn't have any Windows Phone or Windows 10 Mobile devices; that's too bad.\nIn general I can say that you can typically match the mobile version to its desktop counterpart (e.g. IE11 mobile ~= IE11 desktop, Edge 12 mobile ~= Edge 12 desktop), but of course it's always better to test these things.\n@triblondon If you can point me to a live site or something where I can just open a URL on the phone and then give you the result afterwards, then I'd be happy to grab a few phones and do that for you. :)\n. @JakeChampion Is there some way I can send you the data after running the tests? (E.g. a global JS object or something?) Looks like I'd need to screenshot the whole page, which could take awhile.\n. Unfortunately it\u2019s difficult for me to grab the globalresults object from a phone (haven\u2019t figured out remote debugging yet), also at my immediate disposal I only have Insider builds\u2026 ^_^;;\nLuckily I got approval to send y\u2019all some phones, so hopefully those will be useful for you. If there are any versions that are still missing or you need more help, please get back to me and I\u2019ll see if I can find the phone you need.\n. Ah cool! I didn't realize it was so simple. \ud83d\ude03 My understanding from the docs was that there was some automated service (SauceLabs etc.) that was generating the browsers-to-features matrix, but if it's just a config file then it's easy to contribute.\npolyfill-service seems like a great project; would be happy to provide contributions from the Edge team. If Edge users are being served extra bytes they don't need, then that's impetus for us to step up and fix stuff.\n. Ah OK, thanks!\n. Whoops, my bad. I guess I hadn't thought about IE < 8.\nQuestion, though: if the polyfills don't work at all in IE7, then why even specify it? Are people supposed to BYOP (bring your own polyfill :wink:) for IE <8?\n. Awesome, thanks for the help and for the great service! \ud83d\udc83 \n. To clarify: we shipped Edge 14 with one confirmed fetch() bug (DELETE requests return 0 for content-length and an empty body), as well as some missing features that are technically part of the iterable spec. There are some details in this Reddit thread; note that this bug is already fixed in 14 (modulo the DELETE case).\nSending Edge <=14 the polyfill is not unreasonable, but we're also discussing possibly servicing the DELETE fix in a pre-15 update, and it's already kind of an edge case IMO. The headers issue is more serious, if folks are already depending on it. Up to you, but just trying to provide backstory! :smiley:\n. D'oh, I guess I misunderstood what you're asking for. I had it as < 12 before, but if the polyfill just doesn't work in IE7 (and Promises certainly don't exist in IE7), then what's the proper solution?\n. Right, isn't that what I'm doing in 5e0fbcd6dbb38586a9689c65c8566763cb2fe82d?\n. ",
    "nifgraup": "Vivaldi has the same UA as Chrome + Vivaldi specific added at the end. Currently it is\nMozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.98 Safari/537.36 Vivaldi/1.6.689.46. Yes, that is good enough. Keep it simple.. I notice that Vivaldi is not capitalized in the regex.. ",
    "jambonrose": "Whoops! Sorry about the false alarm.\n. Test failure appears to be from missing environment variables. (This PR only changes docs).\n. ",
    "niphor": "@tracker1\nno\uff0c i havent try jquery 2 or 3\nbecause maybe css or selector does not support <=ie8\ni think jquery-compact is just an alias to jquery 1.x\ndo you mean jQuery Migrate \uff1f\nbut jQuery Migrate is not for jquery 3.x support old bowsers\nthank you\n. @triblondon \nI opened this issue at 30 Jun, that when cdn.polyfill.io was at 3.7.0\nI have said I think Symbol and Event Polyfill brokes jQuery in this issue...\n1. Event Polyfill\n   #L121\neventElement maybe is not function\nthis is fixed in 3.9.0rc,I think\n2. Symbol Polyfill\n   jQuery uses for .. in .. https://github.com/jquery/jquery/blob/1.12.4/dist/jquery.js#L2135\n   so type will be something like __\\u0001symbol:iterator0.166322325144687141\nhttps://github.com/jquery/jquery/blob/1.12.4/dist/jquery.js#L2136\n   so matchExpr[ type ] equal undefinded,which not have exec method\n. ",
    "Sash-OK": "Set 'default-3.5' works fine in ie8 with JQuery 1.12.4.. ",
    "oguzzkilic": "@JakeChampion \n. ",
    "philipwalton": "Is it possible the polyfill isn't including Array.prototype.indexOf? The new code includes a new indexOf call, but that's the only change I can think of that would have any effect.\n. Thanks, I reported this on the WICG repo.\n. @allenhwkim not quite, that comment means that a target element that isn't displayed cannot intersect with its root element, but that doesn't mean the observer won't be triggered. For example, if an element that was previously intersecting is set to display: none, it should trigger the observer.. ",
    "rupesh1": "Hi Andrew - thanks for the quick reply. It would appear that its been available in the source polyfill since this commit https://github.com/inexorabletash/polyfill/commit/fe3084974d83c909e7d9802fa8609aab5f93cd55#diff-72d74024ea723e098405b46585936940R5301\nThat commit is dated Nov 2015, maybe the reference to the source URL polyfill could just be updated in general (and we get this for free)?\nGetting URLSearchParams with URL makes perfect sense and would be ideal for my use-case.\n. Our IE9 VM that was unable to connect yesterday (without manual intervention) is connecting as expected today. Thanks all.\nAnd verified by a colleague on a real laptop still running IE9 on Windows 7.. ",
    "lelledaniele": "Hi\nI made this test and I tried It on Safari with/without private browsing.\nYes the data won't be maintain from one page view to the next but if now you use Polyfill on Safari private browsing will generate an error because localStorage in this answered true and all script will be blocked.\nMany thanks.\n\n\n. Hi @triblondon,\nif try force the Polyfill localStorage feature still have the same problem.\nQuotaExceededError: DOM Exception 22: An attempt was made to add something to storage that exceeded the quota.\nTested script link\nMany thanks\n\n. Hi @JakeChampion, we can close It. I didn't find any solution because on Safari we cannot override localStorage. Many thanks.\n. ",
    "georgecrawford": "What's the situation for Android FB in-app browser? Do we know?\n. ",
    "leggsimon": "I am right in thinking that this would stop the FB in-app browser being \"unknown\" yes? And would just be dealt with as and when and we wouldn't need &unknown=polyfill to cover it?\n. @JakeChampion I'm assuming this just includes Edge in with IE rather that having them as \"separate\" browsers?. @JakeChampion This is so that it doesn't then somehow get polyfilled twice? I don't understand why the property should be marked as non-enumerable? What doesn't that tell us?. This may be a silly question/observation but I thought the target was normally the thing the method was being called on?\nBut actually as I write this comment out I realise that it actually makes sense that the target whould be the thing you are trying to achieve \ud83e\udd26\u200d\u2642\ufe0f (I'm going to keep this comment as written proof that I do realise things). Ahhhhhhhh. Ok I see \ud83d\udc4d . Remove empty line?. ",
    "allenhwkim": "Just to confirm, based on this, https://github.com/w3c/IntersectionObserver/pull/155/files#diff-d881855d8287e00bed364a1cee1dd6b6R357, observer is not triggered with display:none, right?\n. ",
    "kzc": "\nRevert \"Run tests against minified code\"\n\nJust curious - why aren't polyfill tests run against minified code?\n. There's an uglify option keep_fnames for mangle and compress that might be of interest. Don't know how much bigger your minified code would be as result.\nhttps://github.com/mishoo/UglifyJS2/commit/9edbe93df5633bd13b1c001d066887e011ce767c\nhttps://github.com/mishoo/UglifyJS2/issues/1187#issuecomment-230349336\n. ",
    "skv-headless": "@AdaRoseCannon thank you for the samsung browser support. Any plans for supporting 2 and 3 versions? We still have plenty of such users \ud83d\ude1e . Thank for the answer. ",
    "shiftie": "I have the problem with this code for instance.\nps.: I don't want to use for-in :)\n. Why is that? Isn't polyfill supposed to make it work? :)\n. The code I'm running is already processed by Babel (replaces const, let, import....) passed to Browserify & then handled by the browser. Here is the Babelified code of the former loop.\nThis code still throws Object expected in IE11 when run in console on a page that has the following script attached: https://cdn.polyfill.io/v2/polyfill.js?ua=ie%2F11\n. ",
    "FredyC": "I am experiencing same issues. Running the code that is transpiled by the Babel and Symbol.iterator is missing from array objects. After explicitly requesting it with https://cdn.polyfill.io/v2/polyfill.js=features=Array.prototype.@@iterator it works, but then I have to either do another request for remaining features or list them all there. Shouldn't Array.prototype.@@iterator be part of default set since Symbol.iterator is there?\nSimilar issue goes with Set as well, no Symbol.iterator present, but in this case there isn't really a polyfill that would fix it. Although it strange. Now I see that Set polyfill already has iterator included, but after loading default polyfill for IE11 and running Object.getOwnPropertySymbols(new Set()) I am getting empty array.\n. @JakeChampion I guess I have to be explicit about Array.prototype.@@iterator since it's not included in any set. Although it doesn't make much sense why default set should have Symbol.iterator but not this one. Thanks anyway for features=default tip, I did not realize it's possible like that :)\nI will try to have a closer look into Set issue tomorrow.\n. By having Symbol.iterator it seems to be logically implied it will be also used in appropriate places, eg on Array. Doesn't make much sense why default polyfill should include it in Set/Map but not arrays. Just my 2 cents...\nProblem with the Set hasn't occurred today for some reason.\n. Thanks, looking good to me.\n. ",
    "chaddugas": "I was having a similar issue and the suggested polyfill.io url didn't work for me until I realized there was a typo. It shouldnt be ...=features, but ...?features like this:\nhttps://polyfill.io/v2/polyfill.js?features=default,es5,es6\n--or--\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=default,es5,es6. @JakeChampion ,\nHere is a jsbin that shows what is being returned if you open it in IE11: \nhttps://jsbin.com/rofonilafi/edit?html,output\nAlso here is a screenshot showing the results that I get in IE (you can see that you get the wrappers, but it has this comment: / No polyfills found for current settings / - there should definitely be polyfills for es5, es6, and array.pototype.includes or IE11): \n\n. @JakeChampion Is there something I need to do to re-open the issue? Or should I create a new issue?. @JakeChampion here you go:\n\n. Yup no problem, it's in the screenshot but here is the actual text:\nMozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; Tablet PC 2.0; rv:11.0) like Gecko. Even with that URL I am still getting: UA detected: other/0.0.0 (unknown/unsupported; using policy unknown=ignore). \nI have tried this on a couple computers and Im getting the same thing. @JakeChampion let me know if there is anything else you need from me. @JakeChampion given that this is an ongoing issue (and is happening to multiple people) is there a way to reopen the issue?. @JakeChampion thank you for working on this. \nHoping you can answer this or point me in the right direction, but I'm curious what the timeline for support of v2 will be now that v3 has been released?. @JakeChampion thanks again for fixing this. It's appreciated. It looks like my browsers are starting to load the correct polyfills again.. ",
    "klaemo": "Awesome! Thank you so much :)\n. I can confirm this error.\nObject [object Performance] has no method 'now'\n/v2/polyfill.min.js in n.requestAnimationFrame at line 52:6977\nHere are some more UA strings ;)\n\nOne X\n\nAndroid 4.2.2\nMozilla/5.0 (Linux; U; Android 4.2.2; de-de; HTC_One_X/4.17.161.3 Build/JDQ39) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\n\nZ30\n\nAndroid 4.3\nMozilla/5.0 (Linux; U; Android 4.3; de-de; Z30 Build/10.3.2.348) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\n\nHere are the affected Android versions according to our error tracking system:\n\n. ",
    "KurtGokhan": "Ok, it is my bad that this is actually a duplicate issue of #778.\nBtw, I was using https://cdn.polyfill.io/v2/polyfill.min.js\n. ",
    "debugwand": "Essentially yes, I tested in the environment that Methode runs in - IE10 in Compatibility mode (which equates to IE7) and this change makes the difference between things working and not working\n. I have given you access on my fork for you to able to get a copy. I cannot push branches to this repo.\nI've run an isolated test in real IE7 on browserstack, it doesn't throw any errors.\nWith the fix, the image shows up in IE10 with IE7 browser mode, but not IE10 with IE7 browser mode AND IE7 document mode, nor in real IE7.\n. ",
    "bjfletcher": "@JakeChampion @debugwand is all this work complete?\n. @JakeChampion Great, is there an issue for the 3.10 release? We can track it.\n. ",
    "brenoferreira": "I also started getting this error in the last hour or so. The url I'm using is https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en,Intl.~locale.de,Intl.~locale.sv,fetch,Object.assign,Promise\nApparently, there's a missing }); at the end.\n. The QA script is not working either https://qa.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en,Intl.~locale.de,Intl.~locale.sv,fetch,Object.assign,Promise\n. @JakeChampion yep, I saw that and thought it was something here on my site, but now I guess it isn't. Thanks for clarifying that :)\n. @JakeChampion when will this fix be available in QA? And production?\n. It's working for me now. Thanks guys :)\n. ",
    "nmaves": "@JakeChampion we would love to help by testing with your QA version.  Let us know how and what needs to be done.\n. Sorry guys just got in and I will test this ASAP\n. I just tested the QA version and it looks solid.  Thanks for the super fast turn around on this.\n. The production versions works as expected.\n. ",
    "vojtech-dobes": "When will be fixed minified version available again?\n. ",
    "jswift": "We're still having this issue today with safari\n//cdn.polyfill.io/v2/polyfill.min.js?features=es5|always|gated,Intl.~locale.en-AU|always|gated\n\nSyntaxError: Unexpected token ')'. Parse error.\n\nRemoving .min works\n. Possibly caching, I'll have to look into it further. There was no difference (in output) using ua=safari/9 or using the new format.\nThanks for the note about the syntax\n. ",
    "barrett-vegas-com": "This problem is happening for us still when hitting\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en&unknown=polyfill\nWith Samsung browser UA: Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG-SM-G920A Build/MMB29K) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/4.0 Chrome/44.0.2403.133 Mobile Safari/537.36\nand with iOS 8 UA: Mozilla/5.0 (iPhone; CPU iPhone OS 8_0 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/13B143 Safari/600.1.4\nService version states 3.11.0 when hitting non-minified version. Also it looks like I am currently hitting the LAX servers via CDN.\nBTW, the non-minified version is fine with proper line breaks, just the minified version appears to be bad.\n. ",
    "egoldblum": "@triblondon thanks for the quick response and sorry I missed that earlier issue before filing this one!\n. ",
    "ahocevar": "Closing, because rejecting file:// urls is the native behavior of current implementations as well. See github/fetch#186.\n. ",
    "mudcube": "https://github.com/Financial-Times/polyfill-service/pull/834\n. @JakeChampion Np. Those terms sound fine to me.\n. I believe this is the appropriate documentation:\nhttps://polyfill.io/v2/docs/contributing/common-scenarios#adding-browsers\nAdding UC Browser support would be a nice addition.\n. ",
    "andrepereiradasilva": "See https://github.com/Financial-Times/polyfill-service/pull/862\n. why not merge DOMContentLoaded in Event polyfill?\n. For what it seems the support is the same, ie, all browsers support both except <=IE8\nSee:\n- http://caniuse.com/#search=DOMContentLoaded\n- http://caniuse.com/#search=addEventListener\n. ok will try to do so\n. ok @triblondon can you check if all ok now?\n. 1. Rename the PR to reflect what you ended up doing\n   Done\n2. Bring it up to date with master\n   Branch updated\n3. Confirm your agreement to our contribution terms\n   I confirm\n. ",
    "MartijnHols": "I'm going to fix this for myself by polyfilling it in my own code, so it's not a critical issue for me but I'm sure others might encounter the same issue.\n. ",
    "hheexx": "We need intl support for googlebot. We receive javascript errors that it's missing.\n@triblondon Can you estimate the effort needed to support bots? Just user agent regex?. ",
    "williamoliveira": "Googlebot uses Chrome 41\nhttps://developers.google.com/search/docs/guides/rendering. ",
    "msokk": "Ah, noticed that the support starts from v4, any reason for that?\n. Ok thanks for the information, will pull the match polyfill into the main bundle to fix it then.\n. ",
    "arthurvi": "@JakeChampion Thank you! That did it.\n. ",
    "tinovyatkin": "Well, that the only things it missed (? was eaten by Rollbar):\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=Promise,Symbol,Event,CustomEvent,URL,Symbol.iterator,Array.prototype.@@iterator,Event.hashchange,Node.prototype.contains,Element.prototype.classList,Object.create,Object.setPrototypeOf,IntersectionObserver&flags=gated,always&callback=window.onPolyfilLoaded\nthen window.onPolyfillLoaded callback starts my code that uses Symbol and so on..\n. So, 'always' is not overriding userAgent check or polyfill is not working in Facebook browser.. I didn't get you...\n. As API reference says:\n\n|always\nPolyfill should be included regardless of whether it is required by the user-agent making the request. \n. @JakeChampion thank you, I've just added unknown flag to our code. However, it's still unclear for me why unknown overrides always. I was thinking that always flag should prevent userAgent sniffing on your side, is it not?\n. \n",
    "zcorpan": "You can check http://www.opera.com/docs/specs/presto2.12/ for a reasonably accurate documentation of what is supported in Presto. Let me know if there's something I (or someone else at Opera) can help with here.. It does say what was supported. It doesn't say anything about requestAnimationFrame, but that's probably because it wasn't supported (and wasn't yet part of the HTML spec or other spec that was partially implemented).\nLet's see...\nhttps://github.com/Financial-Times/polyfill-service/blob/f2098dbd6413516540379b79f309d079ab304b71/polyfills/NodeList/prototype/%40%40iterator/config.json\nThis seems wrong? Opera versions typically follow Chrome versions minus 13.\nhttps://github.com/Financial-Times/polyfill-service/blob/8b5ff331e8c20e80977b28d6c8feb7acb5a42031/polyfills/HTMLCanvasElement/protoype/toBlob/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/Array/prototype/findIndex/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/Math/expm1/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/Object/is/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/Array/prototype/find/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/69f14487641cf28b0a631fc329cbd752a26d2e16/polyfills/Number/MAX_SAFE_INTEGER/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/69f14487641cf28b0a631fc329cbd752a26d2e16/polyfills/Number/MIN_SAFE_INTEGER/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/188e5f72c2ecb8cb07e1da67c9a0d8c9488d91f9/polyfills/Element/prototype/append/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/69f14487641cf28b0a631fc329cbd752a26d2e16/polyfills/Number/MAX_SAFE_INTEGER/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/69f14487641cf28b0a631fc329cbd752a26d2e16/polyfills/Number/MIN_SAFE_INTEGER/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/a1bd243398089d126151ad5a0000c31437ed68af/polyfills/Object/entries/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/40180f723339a8b4bde084abf82e2b152e41b1bb/polyfills/Array/prototype/includes/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/d3b8994b383df355fd1206fee8b7dcf983fbb3c7/polyfills/Element/prototype/after/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/d3b8994b383df355fd1206fee8b7dcf983fbb3c7/polyfills/Element/prototype/before/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/d3b8994b383df355fd1206fee8b7dcf983fbb3c7/polyfills/Element/prototype/replaceWith/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/188e5f72c2ecb8cb07e1da67c9a0d8c9488d91f9/polyfills/Array/of/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/bede2e17e2278a3e60210bf528b2b4b061cc09ba/polyfills/Array/from/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/b54342ba3219724a55bc5ccda71d58ddcd9f7935/polyfills/IntersectionObserver/config.json\nas above\nhttps://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/UserTiming/config.json\nDoes <=12 target 12.17?\nhttps://github.com/Financial-Times/polyfill-service/blob/70fc44727ed08f14f150eaa0205d4ec4b08313e0/polyfills/matchMedia/config.json\nShould probably be <15\nhttps://github.com/Financial-Times/polyfill-service/blob/5f9a192c9d66eb02bef2f03bb14241be1ce6dbeb/polyfills/HTMLPictureElement/config.json\n<= 29 ?\nhttps://github.com/Financial-Times/polyfill-service/blob/1ec446664dfacd4bbb1e53b6320626e9f620765b/polyfills/Map/config.json\nhttps://github.com/Financial-Times/polyfill-service/blob/1ec446664dfacd4bbb1e53b6320626e9f620765b/polyfills/Set/config.json\nshould have  opera < 25 ?\nOthers look OK.\nHope that helps!. ",
    "thibthib": "Okay I searched through your issues AFTER posting this so I'm discovering https://github.com/Financial-Times/polyfill-service/pull/841 only now.\n. The third-party polyfill mechanism is really cool ! But I'd really rather use some config to add / replace some polyfills instead of doing a PR. This is so much effortless for your users ! And I don't even talk about the polyfill replacement use / case. My point is I don't think maintaining a \"perfect for all\" polyfills collection is doable.\nAs for the CDN caching, I don't use Faslty, and don't intend to. Am I doomed ? \ud83d\udc80\nLast but not least, I prefer feature detection as it seems to me safer to detect what a browser supports by testing it directly instead of adding a middleware catalog (that needs maintenance) between a browser and its polyfills. But this doesn't means that UA sniffing don't have its own use-cases ! Also, feature detection can be more performant as when a browser doesn't need polyfills, it doesn't make any polyfill call at all instead of making a call for an empty file.\n. Okay, my mistake, there's maybe a misunderstanding here : \n\nIf you are hosting your own version of the service, you can add whatever polyfills you like :-)\n\nThat's absolutely what I want ! \u2764\ufe0f I searched for this and couldn't find how to do it... is it by forking your project ? \ud83e\udd14 Nevertheless, I never meant to add my custom polyfills to your CDN.\n\nNo, you're fine!\n\nGreat, here's your second heart \u2764\ufe0f \n\nunless you put all your feature detects in line, and that could be quite a lot of code by itself.\n\nThat was one of the points of the proof of concept project I made : I really think it can be a great and performant solution. I tried it on my app, which needs 8 polyfills, with some big feature detects (classList or animations) and the final code to inline was 1,5 ko minified & gzipped. It's only a couple \"if\"s, some string concat for building the URL and some script tag generation. Plus, as each call for polyfills would have the list of needed polyfills in it, each polyfill bundle would have an custom URL, resolving all caching issues that I could have encountered.\n\nI am working on a real user monitoring solution, which runs feature detects on the client side and beacons the results back to our server so we can test that our user agent configuration settings are correct, and update them when they need to change.\n\nThat's a truly brilliant idea. \ud83d\udc4d Your UA configurations settings would be self-maintained, populating itself when new browsers (and UA) are coming. Hell, you could even put some machine learning in it. \ud83e\udd16\n. I just measured the execution time of this 1,5 ko inlined code, with a 5x CPU throttle (available in Chrome Canary), it took 41ms to evaluate. (and there's still un-performant \"console.log\"s has it's still WIP)\n. ",
    "samuliheljo": "FYI there is also this:\nhttps://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8475223/\n. ",
    "Mosho1": "Looks like this is a bit more involved, I'll review and make the additional changes later today, and add tests.\n. I've changed the implementation of the fix and added tests.\n. Now that I think about it, why not use the widespread polyfill at https://github.com/paulirish/matchMedia.js?\n. I'm seeing this as well. Symbol.iterator is required by the es6 polyfill, Edge does have it. The Symbol has \"ie\": \"< 13\" but Symbol.iterator has \"ie\": \"*\"``, and I'm guessing that it is getting required as a dependency ofes6directly, sinceSymbol` isn't included in the Edge polyfill.\n. I submitted a pull request, under the assumption that i was correct in my assertion above. This currently breaks the polyfill and apps that use it for es6 on Edge.\n. ",
    "dpereira411": "Same here :( Page is not loading because the callback is not being called. \n. This is happening in all major browsers / recent versions. The URL I'm fetching is https://cdn.polyfill.io/v2/polyfill.min.js?features=fetch,setImmediate,matchMedia&flags=always,gated&unknown=polyfill&callback=arceus_callback_1\nIf I fetch the same URL without .min I see its the 3.12 version on the headers. Will provide a test later.\n. Thank you very much @JakeChampion :))\n. ",
    "joelfsreis": "@JakeChampion With version 3.12.1 fixed the issue, thank you!\n. ",
    "chilanguito": "Hi. ",
    "chapmanc": "Present for me as well. Please take a look.\n. ",
    "dhaselhan": "Looks like this is happening because Array.prototype.values is enumerable and should not be. \nObject.defineProperty(Array.prototype, \"values\", {enumerable: false}) is a work around for the issue.\n. ",
    "bhandfast": "Any ETA when 3.13 will be pushed to the CDN?\n. Ok, thanks for the info!\n. ",
    "rjray": "Having examined the logs of the failure, it does not appear to be related to my patch.\n. ",
    "dlebech": "Thanks for the tip @wheresrhys. I will look into this some more to come up with a temp solution. However, the error is not specific to Babel though. Just including the the polyfill script on any page will disrupt the Symbol functionality in newer Opera versions. This minimal example from MDN throws an exception in Opera 40:\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=es6\"></script>\n<script>\n  // Example from MDN: \n  var arr = ['w', 'y', 'k', 'o', 'p'];\n  var eArr = arr[Symbol.iterator](); // Throws error\n</script>\nWithout the polyfill, it works fine in Opera. Hopefully, that should change if this PR is merged and deployed :-)\n. @JakeChampion Thanks! I tried it out using Opera 40. It solved the problem both in the minimal example I posted above as well in our app :+1: :dancing_women: :clap: \n. @JakeChampion Neat feature :smiley: I ran Opera 34 in a Windows 7 VM and I actually get \"Native\" on all the included features. I then installed version 32 which has feature parity with Chrome 45 that seems to have introduced most of Array features. Indeed, still native -- across the board.\nI have updated the PR so all the minimum versions are 32. I think perhaps some of the other features (like MIN_SAFE_INTEGER) were introduced earlier, but if I can avoid going hunting for exact versions, I would appreciate it :smiley: \nWhat do you think?. ",
    "rubencodes": "Thank you! I appreciate the fast turnaround.\n. Can confirm this returned:\n```\n/ Polyfill service DEVELOPMENT MODE - for live use set NODE_ENV to 'production'\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service.\n * \n * UA detected: ios_saf/8.0.0\n * Features requested: performance.now\n * \n * - performance.now, License: CC0 /\n(function(undefined) {\n// performance.now\n(function (global) {\nvar\nstartTime = Date.now();\nif (!global.performance) {\n    global.performance = {};\n}\nglobal.performance.now = function () {\n    return Date.now() - startTime;\n};\n}(this));\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```\nAs expected!\n. PR for this here: https://github.com/Financial-Times/polyfill-service/pull/914\n. Correct, it would be most accurate if it were one of the first network calls being made. Also to give proper credit: took this trick from @paulirish https://gist.github.com/paulirish/5438650.\n. I'm not 100% sure it's Chrome for Android, I was just going off of our @getsentry logs which detected this as Chrome 34 (not sure what they use for this detection); you are probably right. Thanks for the help!\n. Updated with the syntax tweaks requested. \nI wasn't able to find anything official from MDN, caniuse, or even Microsoft about IE Mobile's support (or lack thereof) for the console APIs, which is probably why it hadn't been included to begin with. However, I was able to confirm myself with a Windows Phone device that IE Mobile 9 does not support console.error nor console.info. I have no way of confirming if IE Mobile 10 does have support, so it is not being included in this polyfill.\nI agree to the contribution terms.\n. Done!\n. So, not sure if this is related, but it seems like more than a coincidence... My Electron web app broke yesterday, too, due to its User Agent being identified as \"unknown\". As stated above, it had been working successfully until around middle of yesterday. The user agent is:\nUA detected: electron/1.4.0 (unknown/unsupported; using policyunknown=polyfill)\nShould I split this off into a separate issue?. On Mac: \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) WELLMessenger/1.1.0 Chrome/53.0.2785.143 Electron/1.4.13 Safari/537.36\"\nOn Windows: \"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) WELLMessenger/1.1.0 Chrome/53.0.2785.143 Electron/1.4.13 Safari/537.36\". I'm not sure to be honest \ud83d\ude15 Given Electron is just a wrapped up Chromium build, probably something in that family, but I don't know for certain.. That would be perfect! . This would be awesome, I'm currently handling this manually. Important to note that Safari is weird, and I'm not sure the existing polyfill would suffice. See: https://github.com/AgentME/webstorage-polyfill/blob/master/index.js#L105. Thank you! That helps :). ",
    "zetlen": "(I have access to a SauceLabs instance, so I was able to run a full suite, unlike our friend Circle here.)\n. @JakeChampion Confirmed in IE11--your Array.from and Map polyfills work together like gangbusters. However, the Map polyfill still does not work with Chrome's native Array.from. I'm not sure why this is, and it's less of an issue because there are very few environments that support one but not the other. Nevertheless I thought I should mention it. Demonstration: http://jsbin.com/lefapefeje/1/edit?html,js,console\n(Note that you'll have to accept the invalid SSL certificate for your QA host before the polyfill comes through at all.)\nEdit: Firefox's native Array.from doesn't work with this fake iterator either.\n. @JakeChampion The work is its own reward, but I won't look a gift Financial Times in the mouth. Thanks a million! I'll open a separate issue.\n. @JakeChampion Just so you know, I just tried to produce a failing test for this within your existing framework. There's no browser environment which supports Array.from but not Map, so this is an extreme corner case. Still think it's worth a PR?\n. ",
    "priithansen": "Nice work! Safari 10 correctly no longer gets the Intl api polyfill\n. ",
    "DylanPiercey": "Thanks for the quick response and resolution! \ud83d\udc4d\n. ",
    "JamesMGreene": "I understand and appreciate both perspectives here.\nAt the very least, you could certainly update the heading to \"IE/Edge\" for the website display, though that does not change the fact that its config file family key is still ie.\n. @falsandtru: Right, the only reasonable level of support would be the very minimal subset of ES6's Function.name spec that covers named function definitions (both named function declarations and named function expressions). All other scenarios are either impossible or highly impractical to support.\n. I can submit my polyfill for this soon, hopefully tonight.\n. PR submitted: #951\n. > Check reliable sources of browser support information, e.g. MDN, caniuse and Kangax. Tell us what these sources say about the browser/polyfill combo that you want to add or remove, and link to the relevant pages from your PR.\n- MDN\n- MDN - Browser Compatibility\n- caniuse (for the enhanced ES6 form, though)\nBasic support\n- Chrome 33.0\n- Firefox (Yes)\n- IE 12\n- Opera (Yes)\n- Safari (Yes)\n\nExplain how you have tested support (or lack of) in the browser concerned. Ideally, include a screenshot of the relevant browser running our test suite for that feature.\n\nRan the newly added tests against my own SauceLabs account with grunt ci.\n\nState your agreement to our contribution terms.\n\nI agree to the contribution terms.\n. @triblondon FYI, I rebased your changes from master into the PR branch now, so the merge commit no longer shows up.\n. :+1: \ud83d\udc9d \n. @triblondon et al:\nObject.defineProperty exists but only works on DOM interfaces (not other JS objects).  However, for the PR related to this issue, I can still support IE8 by utilizing Object.defineProperty as I will be adding a getter to a DOM interface.\nHow would I handle declaring my dependencies on Object.defineProperty for this feature, given that I also want to enable its use In IE8?\n. @JakeChampion: Thanks, I understand that bit already (just recently made use of the same thing in my PR #951). However, my question is a bit more complex than that.\nThe difference here is that the version of Object.defineProperty that I need/want to utilize (only needs to work for DOM interfaces) is available in IE8, whereas the full-featured version of Object.defineProperty did not hit the scene until IE9.\nIf you look at polyfills/Object/defineProperty/detect.js, for example, you will see that the feature test is done specifically on a plain JS object (which is the right thing to do). However, that also means that, if I mark \"Object.defineProperty\" as a dependency, Polyfill will always include the polyfills/Object/defineProperty/polyfill.js file for IE8 despite the fact that it isn't actually needed to support this.  The polyfill will work fine due to polyfills/Object/defineProperty/polyfill.js#L9-L12, so that isn't a concern so much as potentially wasting download/execution time with it unnecessarily.\nThe issue is also exacerbated for this particular polyfill as it can ONLY be correctly polyfilled for IE8-10 (and not IE11  \ud83d\ude2d), so the polyfill's browser inclusion pattern will have already limited it to those IE versions which have the means available already.\nCan polyfills be forcibly included even if they don't match the compatible browser versions?\n- If so, it is probably best to still mark the Object.defineProperty polyfill as a dependency to ensure that appropriate pre-conditions are being verified and suffer the unnecessary hit for IE8.\n- If not, then we'd achieve the best performance by omitting the Object.defineProperty dependency indication and just adding descriptive comments instead.\n. @JakeChampion @triblondon: Any further clarification on what you'd recommend here?\n. Thanks for fielding that one, Andrew.  I'll proceed to create a corresponding PR when I find the time.\n. Funny. :+1:\n. P.S. If the Microsoft folks would ever consider releasing a bug fix for IE11 that either enables document.currentScript or brings back HTMLScriptElement#readyState, the world would appreciate it.  :wink:\nBut I'm guessing that's a no-go since [they passed on doing so in the past and have moved on full-steam ahead to Edge. Understandable but unfortunate. \ud83d\ude15 \n. Ah, that's the new enhanced ES6 form kicking in with its \"inferred names on anonymous functions\" feature. I'll update the test to avoid accidentally invoking this feature.\n. ",
    "pioug": "Thanks for reviewing! Sorry I didn't pay attention to the non-spec feature. There is another popular polyfill https://github.com/eligrey/canvas-toBlob.js. Unfortunately it is not a NPM package. Can I still link a polyfill hosted on GitHub?\nAs a last resort, I can copy/paste the polyfill proposed by MDN https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob. It is more trivial but low maintenance. I think it is enough for my use.\nOn a side note, I managed to run the grunt ci task. I think the error was due to the internet connection in my place.\n. Thanks for reviewing, I updated.\n. Is it reasonable to completely remove ie since ie7, ie8, ie9 don't support Canvas?\n. I am not certain about the other browsers. As a general rule, isn't it better to target a restrictive set of browsers and extend it if needed?\n. ",
    "simono": "Thanks. I just saw #932 \n. @JakeChampion sure! I'll update the PR in the next days.. @JakeChampion I've added tests. They fail in IE11 on master and pass on my branch.. @JakeChampion Thanks for the fast merge!. ",
    "nayaabkhan": "Hey @JakeChampion I am trying to access https://polyfill.io/v2/docs/examples. I see this:\n\n. Alright, I am going to keep a tab on that Fastly incident. Closing this issue then. Thanks for the help! :)\n. ",
    "dstarcev": "It seems that CI fails on PRs made from forks. How do I contribute properly?\n. ",
    "fredj": "thanks !\n. ",
    "tuespetre": "Sure. I will try and find some time later today.\n. I do agree to those terms \ud83d\udc4d \n. Thanks! Claim made \u2714\ufe0f \n. @triblondon thank you! From what I understand, graceful-fs wraps the async read and write functions with a try/catch that will retry the action asynchronously as long as an EMFILE error is thrown.\n. Update... as I have been working on https://github.com/tuespetre/shadow-dom, I found some additional weirdness around these APIs in Internet Explorer -- they are implemented on HTMLElement rather than Element, so even when you polyfill Element you have to delete the originals from HTMLElement.\n. ",
    "jacobgunnarsson": "No problems! That makes sense as to why it was included in the first place.\nDo you know the reason why the native implementation is overwritten at all? And why the polyfill seems to break the array iterator?\nIf included I would expect it to not overwrite the native implementation, and even if it did, that it would work as before it was overwritten.\n. Ah, that's great, thanks!\nDef. agree on the priorities. Just a heads up though; I can replicate the breaking in Chrome 53, Safari 10 and Firefox 49.0.2, so it is probably a more general problem than just Safari iOS 9.\n. Just stumbled upon this myself, this prevents all subsequent Intl locale polyfills to load, effectively making flags=gated unusable. Using |gated individually for each feature except for Intl works in the meantine.\n. We're encountering the same issue using Chrome 72.0.3626.121;\nhttps://cdn.polyfill.io/v2/polyfill.js?features=default,fetch,IntersectionObserver returns\n``\n/* Polyfill service v3.25.1\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: other/0.0.0 (unknown/unsupported; using policyunknown=ignore`)\n * Features requested: IntersectionObserver,default,fetch\n *  */\n(function(undefined) {\n/ No polyfills found for current settings /\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```\nUsing v3 instead for the same features returns the all the polyfills as if using &flags=always, but there is no indication wether the UA was correctly detected or not (I would think not considering the polyfills were all included).\nWe get the exact same behavior using Internet Explorer 11 (11.648.17134.0).. @JakeChampion thank you for your work! \nCan confirm the problems we were experiencing are fixed.. ",
    "dbaron": "And I agree to the contribution terms in https://cdn.polyfill.io/v2/docs/contributing .\n. ",
    "fatso83": "Add Safari 10 to that list.\n@triblondon, the weird thing is that the test page says it should be polyfilled, but it is not!\nshell\n curl 'https://cdn.polyfill.io/v2/polyfill.js' -XGET -H 'Referer: http://meny.local/Testsider/fleksibel-kampanjeside/' -H 'Accept: */*' -H 'Cache-Control: max-age=0' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0.1 Safari/602.2.14'  | grep fetch\nReturns nothing.\nAs the test shows, it should have been served. \n\n. @JakeChampion : thank you for that. I obviously missed the distinction between the set of default features and the other features (which fetch is part of) that you need to specify separately.\nYou are indeed right in that fetch is being served for all Safari versions. \nhttps://cdn.polyfill.io/v2/polyfill.js?features=fetch&ua=safari/8 works as well.\n@qwemaze : you should close this issue; it's working fine.\n. Ah, good catch! I'll try and address that before submitting. Thanks!. ",
    "qwelias": "@JakeChampion oh, so there's a distinction on default and selected features, my bad. Thought it just upgrades everything.. ",
    "umidbekkarimov": "@rowanmanning oops, was in little rush this morning, fixed \ud83d\udc4d\n. Any contribution I make to the polyfill service by way of Pull Request contains only data that is:\n- wholly my own work, upon which I am legally permitted to grant a licence; or\n- wholly the work of individuals within the same organisation to which the copyright in all work created by employees is assigned, of which I am a current employee and authorised representive for the purposes of this contribution, and which is legally permitted to grant a licence; or\n- licensed by the original author under the MIT licence or equivalent terms\nIn respect of any part of my contribution that is not already available under an MIT or compatible licence, I hereby grant to the Financial Times Limited (FT) and to recipients of software distributed by the FT a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable license to make, have made, use, offer to sell, sell, import, and otherwise transfer the data.\n. @rowanmanning done and done\n. I guess here problem with not Android itself but AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30. All these https://github.com/Financial-Times/polyfill-service/issues/1020#issue-195645589 and these https://github.com/Financial-Times/polyfill-service/issues/1020#issuecomment-268809066 android devices use AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30 browser a.k.a. WebKit v534\nHere more examples with this browser.\n\nYup, our compat.json shows that it fails until 4.4 \n\nActually this is right cause from 4.4 android jumped to WebKit v537.36 (http://jimbergman.net/webkit-version-in-android-version/) and I never had a problem with this version.\n~~I guess problem should be here https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Intl/config.json#L3 no ?~~ overlooked it, too many opened tabs \ud83d\ude13 \n\"android\": \"<=4.3\" (from https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Intl/config.json#L3) said that it should be polyfilled on Android Browsers lower or equal to 4.3 right ?\nSo for this UA\nMozilla/5.0 (Linux; U; Android 4.1.1; en-us; PAP4322DUO Build/PrestigioPAP4322DUO) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30\nhttp://www.whatsmyua.com shows Android Browser 4.0 (open in Chrome, safari breaks the link)\nBut polyfill has no performance.now \n\nSo we need to add 4.0 version to compat.json ?. ",
    "thisguychris": "@triblondon not really, I tried the bower package, which basically just mirrors what they have in github, its 214kb gzipped.\nhttp://take.ms/LOfa3\nYou can check it for your self, I added this:\nhtml\n<script src=\"bower_components/intl/dist/Intl.min.js\"></script>\n<script src=\"bower_components/intl/locale-data/complete.js\"></script>\n. ",
    "enyo": "Hey yes, and strangely only at work, so it is probably related to my IP?\n\n\nWhen I click on \"View certificate\" I get a huge white popup \n\n. Hey, the problem disappeared today (I guess the cache got invalidated by itself).\nThank you for your support!\n. ",
    "detrash08": "I've tried my first url on Chrome adding \"&ua=ie/11\" and seems to work. \nOn IE instead seems that passing both \"Array.prototype.find\" and  \"Array.prototype.findIndex\" to \"features\" parameter generates the issue.\n@JakeChampion try this on IE11\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features=Array.prototype.find,Array.prototype.findIndex&flags=gated&unknown=polyfill&callback=init&ua=ie/11\n. this is the minified response that I get from the url in my previous post.\nhttp://pastebin.com/m9WuesUY\nthe following paste contains the response calling the same url without \".min\"\nhttp://pastebin.com/kvspfW7N\nBoth calls performed on IE11. I've tried to clean local cache and seems to work. Do you have changed something? Perhaps IE11 is getting older.. ",
    "AdriVanHoudt": "\n\nI'm seeing SSL errors on android chrome \n\n\n![screenshot_20161110-181302](https://cloud.githubusercontent.com/assets/2361826/20186764/8ca988a4-a771-11e6-8869-e7971f4934c5.png)\n\n. @JakeChampion thanks and no problem! (sorry for the massive image, was working from phone :D)\n. Not the legal expert here but does contributing to an MIT project already provide that legal right?\nOr in other words by contributing to the MIT project you inherently agree with the license which allows anyone, including the FT, to use the code as they please?. @triblondon ok, if you get to speak to him/her again could pass along my question? Not trying to be annoying just being curious btw!. Seems to be the case in firefox/50.0.0 and safari/10.0.0 as well . Can I suggest something like https://nodesecurity.io/ which will check this for you on each PR (or they have a CLI tool which you can run with tests or deploys). Oh yeah that looks way more extensive :D From the picture on https://www.whitesourcesoftware.com/open-source-security/ it looks like they use nodesecurity to track vulnerabilities so \ud83d\udc4c . can't you do polyfills/**/**/polyfill.js or polyfills/**/polyfill.js or something like that?. ah my bad, I don't know the code structure that well ;). ",
    "mbrevda": "I agree\nOn Wed, Nov 16, 2016, 2:29 PM Jake Champion notifications@github.com\nwrote:\n\nLooks good, thanks @mbrevda https://github.com/mbrevda, before I can\nmerge this you'll also need to accept our contribution terms\nhttps://polyfill.io/v2/docs/contributing#contribution-terms. Written\nagreement here in the PR would be fine.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/988#issuecomment-260934709,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAR4jMhUw99LyMwOBcQhfHB-ESQf8hGGks5q-vctgaJpZM4KzpKk\n.\n. Thanks!\n\nOn Thu, Nov 17, 2016, 7:12 PM Jake Champion notifications@github.com\nwrote:\n\nMerged #988 https://github.com/Financial-Times/polyfill-service/pull/988\n.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/988#event-863145384,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAR4jJo3M6OBdAdSeZgDkQmC1tMdvR41ks5q_Ir0gaJpZM4KzpKk\n.\n. Other than a publication of sorts, I don't even know what you guys do. What\nI do know is that you provide an amazing public service. So hey, I'm just\nglad I could help out!\n\nOn Thu, Nov 17, 2016, 7:22 PM Jake Champion notifications@github.com\nwrote:\nThanks for the PR!\nDid you know we offer one month's free premium access to all FT content\n(normally $50) to anyone who has a pull request merged in this repository?\nIf you want to claim it, there's one Google form\nhttps://docs.google.com/a/ft.com/forms/d/1aykPiYBwqKpKY6nvGVi43wOU_5epr3XLgE00Vi52SMQ/viewform\nto fill out :-)\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/988#issuecomment-261310430,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAR4jB01qbN8QXrGBpibm5U-uON2KkSbks5q_I1WgaJpZM4KzpKk\n.\n. ",
    "lenovouser": "@JakeChampion cla-assistant.io might be something for you \ud83d\ude03 \n. ",
    "jacklee0223": "Same thing happens to Object.assign. ",
    "Cavitt": "For anyone that this is a critical issue for you can add ?flags=gated (feature detection) to fix this.\nIt adds a bit of bloat but it's worth it.\nMore detailed and duplicate issue here: https://github.com/Financial-Times/polyfill-service/issues/799\nEDIT: this is fixed and live on the CDN. The main thing babel-polyfill does is:\njavascript\nimport \"core-js/shim\";\nimport \"regenerator-runtime/runtime\";\nYou'll be fine to remove core-js/shim and just import regenerator-runtime/runtime if you use generators.\nKeep in mind by default polyfill doesn't include everything core-js/shim does. I suggest running your app and seeing what breaks and adding the specific features to the polyfill url.\nThe only feature I've found that the polyfill service doesn't have is TypedArrays (for IE9 support). The core-js/shim does have this, you could import it from core-js directly if you need it.\nHere's some code that might make your life easier:\n```javascript\nconst polyfillFeatures = [\n  'default', // https://polyfill.io/v2/docs/features/#default-sets\n  'fetch',\n  'performance.now',\n  'Symbol',\n  'Array.prototype.find',\n  'Array.prototype.findIndex',\n  'Array.prototype.includes',\n];\nconst Polyfill = ({ path }) => (\n  ",
    "gnoff": "PR here: #993 \nthere are some issues with the fact that while IE9+ support Object.keys, they do so in an es5 compliant way. The tests don't target these browsers because of this and I'm not sure how you might want to distribute a polyfill for browsers that support the older spec.\n. ",
    "lu40": "@JakeChampion Ok, thanks however for your response! I kind of thought that would have been too easy.. :) As I'm not using QupZilla myself and just tried a quick fix I'm going to close this PR.. ",
    "sndrs": "this would be great if possible; we had to work round it here https://github.com/guardian/frontend/pull/16673. can we do anything to help it along?. ",
    "adamduncan": "Thanks a lot for all the feedback @triblondon. Good shout on the perf/a11y tweaks! I'll get on them and update the PR.. @triblondon, committed the suggested improvements in 9b4cf6c. A little bit of cross-browser clipboardData voodoo required, however the cached lookups were a great shout. Thanks.\nRe: search icon/toggle, I wonder whether putting the filter feature behind a click detracts from its immediate usefulness? Definitely agree it needs tightening up from a layout perspective, so happy to take your lead on it.. @JakeChampion @triblondon Thanks guys \ud83d\udc4d . ",
    "oov": "Hi,\nThis problem seems not fixed completely yet.\nWhen you open https://cdn.polyfill.io/v2/polyfill.js?rum=0 with Microsoft Edge, the beacon is still added.\n```js\n/ Polyfill service v3.16.0\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: ie/14.14393.0\n * Features requested: default\n * \n * - _mutation, License: CC0 (required by \"Element.prototype.after\", \"default\", \"Element.prototype.append\", \"Element.prototype.before\", \"Element.prototype.prepend\", \"Element.prototype.replaceWith\")\n * - Element.prototype.after, License: CC0 (required by \"default\")\n * - Element.prototype.append, License: CC0 (required by \"default\")\n * - Element.prototype.before, License: CC0 (required by \"default\")\n * - Element.prototype.matches, License: CC0 (required by \"default\", \"Element.prototype.closest\")\n * - Element.prototype.closest, License: CC0 (required by \"default\")\n * - Element.prototype.prepend, License: CC0 (required by \"default\")\n * - Element.prototype.replaceWith, License: CC0 (required by \"default\")\n * - URL, License: CC0 (required by \"default\") /\n(function(undefined) {\n(function() {\n    var beacon = new Image();\n    beacon.src = '//polyfill.io/v2/recordRumData?X' + \n    \"&Array.from=\" + (('from' in Array && (function () {\n    try {\n        Array.from({ length: -Infinity });\n    return true;\n} catch (e) {\n    return false;\n}\n\n})())?1:0) +    \"&Array.isArray=\" + (('isArray' in Array)?1:0) +    \"&Array.of=\" + (('of' in Array)?1:0) +  \"&Array.prototype.every=\" + (('every' in Array.prototype)?1:0) +    \"&Array.prototype.fill=\" + (('fill' in Array.prototype)?1:0) +  \"&Array.prototype.filter=\" + (('filter' in Array.prototype)?1:0) +  \"&Array.prototype.forEach=\" + (('forEach' in Array.prototype)?1:0) +    \"&Array.prototype.indexOf=\" + (('indexOf' in Array.prototype)?1:0) +    \"&Array.prototype.lastIndexOf=\" + (('lastIndexOf' in Array.prototype)?1:0) +    \"&Array.prototype.map=\" + (('map' in Array.prototype)?1:0) +    \"&Array.prototype.reduce=\" + (('reduce' in Array.prototype)?1:0) +  \"&Array.prototype.reduceRight=\" + (('reduceRight' in Array.prototype)?1:0) +    \"&Array.prototype.some=\" + (('some' in Array.prototype)?1:0) +  \"&CustomEvent=\" + (('CustomEvent' in this &&\n// In Safari, typeof CustomEvent == 'object' but it otherwise works fine\n(typeof this.CustomEvent === 'function' ||\n(this.CustomEvent.toString().indexOf('CustomEventConstructor')>-1)))?1:0) + \"&DOMTokenList=\" + (('DOMTokenList' in this && (function (x) {\n    return 'classList' in x ? !x.classList.toggle('x', false) && !x.className : true;\n})(document.createElement('x')))?1:0) + \"&Date.now=\" + (('Date' in this && 'now' in this.Date && 'getTime' in this.Date.prototype)?1:0) +   \"&Date.prototype.toISOString=\" + (('Date' in this && 'toISOString' in Date.prototype)?1:0) +    \"&Document=\" + ((\"Document\" in this)?1:0) + \"&Element.prototype.after=\" + (('Element' in this && 'after' in Element.prototype)?1:0) +   \"&Element.prototype.append=\" + (('Element' in this && 'append' in Element.prototype)?1:0) + \"&Element.prototype.before=\" + (('Element' in this && 'before' in Element.prototype)?1:0) + \"&Element.prototype.classList=\" + (('document' in this && \"classList\" in document.documentElement)?1:0) +   \"&Element.prototype.cloneNode=\" + (('document' in this && \"cloneNode\" in document.documentElement && (function() {\n    var test = document.createElement('input');\n    test.checked = true;\n...\n```. ",
    "bkniffler": "Another similar problem is, when you use some compatible browser like chrome and use the simulator to simulate an IOS device, your code will break with something like Uncaught TypeError: t[Symbol.iterator] is not a function since the user-agent will report there is features missing that are actually available. Would it be feasible to build in a check inside the code to make sure Symbol.iterator isn't defined?. Brilliant, didn't see that one. Thanks a ton!. ",
    "jonashaag": "This is still an issue. To reproduce:\nhtml\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default,Symbol,Symbol.iterator,Array.prototype.@@iterator\"></script>\n<script>\nconst a = [1,2,3]\nconst it = a[Symbol.iterator]()\nlet x\nwhile((x = it.next(), !x.done)) {\n  document.write(\"<div>\" + x.value + \"</div>\")\n}\n</script>. Just hit this too. I expected fetch to be included by default.. URL is https://cdn.polyfill.io/v2/polyfill.min.js?features=default,fetch,Array.prototype.@@iterator&excludes=Intl,HTMLPictureElement\nFYI if I exclude Promise and use the core-js polyfill, it works. I guess this is a problem with the Yaku polyfill.\nI was also able to reproduce this on IE 11, so maybe it's a problem for all browsers that don't provide native promises.. This is the weirdest glitch I've found in my entire existence.\nIf you add a <div id=\"process\"> to the DOM, it breaks.\nThe problem is that Yaku checks for window.process, which seems to be defined in IE as $(\"#process\"). Yaku then tries to use process.nextTick, which of course doesn't exist.. https://github.com/ysmood/yaku/issues/43. ",
    "davidkrijgsman": "Thanks for getting back to me. I use gulp-babel to compile my code with the es2015 preset: \n.pipe(gulpif(['*.es6.js'], babel({\n     presets: ['babel-preset-es2015'].map(require.resolve)\n})))\nWhich yields the same result as the online babel compiler: https://babeljs.io/repl/#?babili=false&evaluate=true&lineWrap=false&presets=es2015&code=var%20arr%20%3D%20%5B1%2C2%2C3%5D%3B%0D%0Afor%20(var%20item%20of%20arr)%0D%0A%7B%0D%0A%20%20%20%20console.log(item)%3B%0D%0A%7D\nThe jsbin can be found here: http://jsbin.com/yuyodi/2/edit?html,js,console where I'm loading the es6 feature set. Works fine in modern browsers and IE11, however safari on iphone reports: \n\"TypeError: arr[Symbol.iterator] is not a function. (In 'arr[Symbol.iterator]()', 'arr[Symbol.iterator]' is undefined)\".\nWhen requesting only Array.prototype.@@iterator (http://jsbin.com/kewijoh/edit?html,js,console), it does work.\nI think it's related to this issue: https://github.com/Financial-Times/polyfill-service/issues/1019\nI see the NodeList iterator does work on both IE11 and mobile safari when specifically requested, but it's not included in the es6 feature-set.\nI'll look into babel-preset-env. Thanks for your help!\n. Hi @JakeChampion,\nAny chance you can help any further with this? Specifically this error:\n[Error] TypeError: arr[Symbol.iterator] is not a function. (In 'arr[Symbol.iterator]()', 'arr[Symbol.iterator]' is undefined)\nwhich I'm getting on mobile Safari (iOS 9.3.2). I've provided some jsbin examples in my previous post.\nI've tried using babel-preset-env and excluding es6.symbol, but it yields the exact same output.\nThanks again for your help!\n. ",
    "slawiko": "@JakeChampion yes sure. Is my tests correct now? . @JakeChampion can you fix broken link on Sauce Labs here? I can't run my tests, so I wrote them \"with closed eyes\" :). @JakeChampion thank you very much! It's great! I'm really very excited. It will be a motivation for start to reading FT. @alexlafroscia yes, you're right, I wouldn't. So let's close this issue.. Ok, let's close this issue. ",
    "bjohn465": "It looks like an unrelated test (for IntersectionObserver) failed on android/5 and android/4 failed to start during that CI run.. ",
    "decompil3d": "I'm seeing this happen fairly frequently when loading from China. Repros in other browsers like Safari and Firefox. And I already do have flags=gated, so that does not seem to fix the issue.\nAlso noticed that the issue doesn't seem to repro when caching is disabled. So may be a race condition on slower networks?. Update on above: turns out it was an improperly configured private CDN cache on my end. Even though my app was passing flags=gated, other apps calling through the cache were not, so I'd see this error.. I've submitted a PR #1763 to address this. Just waiting on review from maintainers.. @christophehurpeau No, it is detected as samsung_mob. See https://cdn.polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(Linux;%20Android%207.0;%20SAMSUNG%20SM-G950U%20Build/NRD90M)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20SamsungBrowser/7.4%20Chrome/59.0.3071.125%20Mobile%20Safari/537.36 to verify.. ",
    "lepture": "Is it released on polyfill.io?. Same here.. @matt-ville What is your App's User Agent?. This happens due to breaking changes in useragent lib.\nhttps://github.com/3rd-Eden/useragent/compare/2.1.9...2.1.10\nIn 2.1.9, the family name is: \"Mobile Safari UIWebView\"\nStarting from 2.1.10, the family name is: \"Mobile Safari UI/WKWebView\". We should pin the dependency of useragent lib.  I've reviewed the history of useragent, when it had a breaking change, it bumped the patch version.. Test for ie/9 is failed. I can't figure out why.. @JakeChampion Thanks. This is a great service for the web.. What's the User-Agent string?. ",
    "tpluscode": "GitHub API is probably the most prominent example. See the example response in their docs: https://developer.github.com/v3/repos/#response\nAlso, anyone using HAL is using that format. Although it's not explicitly referenced in the HTML doc, they did mention it in their RFC draft. Ah, there's the documentation bit I was looking for: https://developer.github.com/v3/#hypermedia. True, which kind of surprises me. Such syntax is only good for concrete segments so maybe it's good enough for them. \nIn your case URI Template allows\n\nbeing explicit about optional dot-prefixed extension ({.min})\nexplicitly listing query string params ({?a,b,c})\n\nI find this cleaner than having to look at both the template and the table to determine where each option belongs to.. ",
    "olanod": "I raised the issue for them as well, it's weird because I imagine you have that as an automated test. But we were getting errors from customers and managed to reproduce it in a live device in browserstack. ",
    "p0wl": "we have the same problem:\n\nas chrome 30 does not need the polyfills for array.prototype.find, ... our app breaks.\nIt seems to be the same issue as described here: https://github.com/Financial-Times/polyfill-service/issues/793, but I don't understand what the proposed solution is. For me, it sounds like chrome mobile should be a browser family of its own.. The useragent (in webview) is: \nMozilla/5.0 (Linux; Android 4.4.2; Android SDK built for x86 Build/KK) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36. thanks!. ",
    "kikemx78": "Similar issue here for same UA\n Cannot redefine property: name polyfill.js?features=es6:477. ",
    "gtournie": "Same too. The user agent is correctly identified in my case.\nConsole: Uncaught TypeError: Cannot redefine property: name https://polyfill.io/v2/polyfill.js?features=es5,es6:477\nUser Agent: Dalvik/1.6.0%20(Linux;%20U;%20Android%204.4.4;%20XT1080%20Build/SU6-7.3)\n=> https://polyfill.io/v2/polyfill.js?features=es5,es6&ua=Dalvik/1.6.0%20(Linux;%20U;%20Android%204.4.4;%20XT1080%20Build/SU6-7.3). ",
    "xer0x": "We aren't using Lodash but we are getting the same error with IE11:\nSCRIPT5007: Unable to get property '@@__symbol:iterator0.6412312131232' of undefined or null reference'\nFile: polyfill.js, Line: 780, Column: 3. Sorry @asilvas we only just started hitting this. We've been using polyfill with no problems for awhile. We haven't found what changes yet \nUPDATE: ~~it looks like our issue is with https://github.com/zenorocha/clipboard.js & polyfill on ie11~~\nUPDATE 2: it looks like lodash and polyfill.. ",
    "joeldenning": "I have run into this issue as well. What seems to be happening is that lodash calls Object.prototype.propertyIsEnumerable. However, polyfill-service's implementation of propertyIsEnumerable seems to be incorrect for polyfilled Symbols. The polyfill-service implementation returns true for symbol properties, even if they were defined with {enumerable: false}, which seems to be a bug.\nNote that this bug affects any code that uses Object.prototype.propertyIsEnumerable when in combination with the Array.prototype.@@iterator polyfill-service. I am still not sure exactly how propertyIsEnumerable is returning true for the iterator symbol on the Array prototype, but that's what I think is happening.. ",
    "satazor": "There was an issue created in lodash that's exactly the same bug: https://github.com/lodash/lodash/issues/2308\nApparently the bug on core-js was fixed in https://github.com/zloirock/core-js/commit/78770786a4e5f2f87ea32b4dada46b9ce0a92887. Perhaps we can port the fix somehow?\n. @rhalukongor thanks very much for the fix!\n@JakeChampion was the fix already deployed?. ",
    "rhalukongor": "It seems this bug also effects Safari versions < 9.\nI also want to give it a try. This is hitting us pretty badly.. I need some help here: \nUnfortunately I'm out of Browserstack minutes to run the whole suite so I'm testing CircleCI's failed cases (followed link below to the console output) on BrowserStack live. Tried many of them and they all seem to be passing. Clearly I'm doing something wrong but can't figure out what. Any help is appreciated...\nEDIT: Then, all of a sudden they all passed. \ud83e\udd14 . ",
    "ganlanyuan": "Hey, \nFor the IE8PP hack concerning, I think it should be okay. Because the IE8PP hack is only for Object.defineProperties polyfill, doesn't mater with the polyfills added here.    \nSince the source file is a single file, do you think I can add the multiple polyfills as a single file? The folder construction will be something like Element/ElementTraversal/ or directly ElementTraversal/. But I actually don't know how to fetch external file source with Nodejs.   \nCan you give a sample beside\njavascript\n'use strict';\nvar path = require('path');\nvar fs = require('fs');\n// ... download/import latest source here\n// ... do any required source modification\nvar newSource = 'test';\nfs.writeFileSync(path.join(__dirname, 'polyfill.js'), newSource);. Moved childElementCount, firstElementChild, lastElementChild, previousElementSibling and nextElementSibling to ElementTraversal folder. \nUpdated repo and install in config.json.. Hey,\nI decided to write these polyfills by myself since they're not that complex.\nPlease check!. tests added. They don't work in IE6-7, because IE6-7 don't support Object.defineProperty(). \nI searched a lot, couldn't find a way to fix this issue. \n. How can I reproduce the test?. Hey,\nwhen I run npm start I got an error says\nNo polyfill sources found.  Run `npm run build` to build them\nThen I ran npm run build, got another error\n``\nnpm ERR! code ELIFECYCLE\nnpm ERR! errno 1\nnpm ERR! polyfill-service@3.18.1 build:npm run clean && node tasks/node/updatesources && node tasks/node/buildsources`\nnpm ERR! Exit status 1\nnpm ERR! \nnpm ERR! Failed at the polyfill-service@3.18.1 build script.\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\nnpm ERR! A complete log of this run can be found in:\n```\nWhat else I should do?. - Mac v10.12.4\n- node v6.10.0, npm v5.0.2\n- Ran sudo npm install successfully. - npm run clean - done\n- node tasks/node/updatesources - error\n{ Error: Cannot find module 'web-animations-js/web-animations.min.js'\n    at Function.Module._resolveFilename (module.js:469:15)\n    at Function.resolve (internal/module.js:27:19)\n    at polyfillSourcePaths.map.p (/Users/designer01/Documents/ganlanyuan/polyfill-service/tasks/node/updatesources.js:25:27)\n    at Array.map (native)\n    at installPolyfill (/Users/designer01/Documents/ganlanyuan/polyfill-service/tasks/node/updatesources.js:25:10)\n    at Array.forEach (native)\n    at glob.then.files (/Users/designer01/Documents/ganlanyuan/polyfill-service/tasks/node/updatesources.js:59:14) code: 'MODULE_NOT_FOUND' }. The browsers didn't list here support the feature. They don't need the polyfill. In this case, what should I write? \njavascript\n\"chrome\": \"*\",\nmeans all versions of chrome need the polyfill, right?. Thanks for the tips. I will update this field.. Thanks,\nThen what to write if all chrome browsers don't need it?. ",
    "CheloXL": "Ah!, Didn't know... since the service correctly detected ie mobile, I supposed it was supported. Will check your instructions, as ie11 mobile is exactly the same as ie11 desktop.\nThanks!. @triblondon Can I ask for some help on this?\nI'm trying to run the tests on windows. After running the npm install, I'm getting several errors on the npm run build because the command \"rm\" doesn't exists on windows (even under powershell).\nSince build doesn't run, neither run dev.\nAlso, I'm trying to understand why running the page at https://polyfill.io/v2/docs/features/ and selecting the \"live test\" on my mobile shows matches as \"supported with Polyfill service\" (that ok, as I noted above ie11mob is the same as ie11), but then, the test at https://polyfill.io/test/tests?feature=Element.prototype.matches&mode=all also passes on my mobile and I expected it to not pass.\n. @triblondon Thanks for the answer. As you can see from my pull requests, I already got the system working on windows. I just had to install the GNU coreutils for windows, That solved my build problems (maybe that's something that could be added to the documentation?).\nAs for the second question, yes, browsing the code led me to that conclusion too. Again, thanks for your help!. Screenshoots...\n\n\n. Ok.. didn't get it correctly on the first try... now it should be ok.. @JakeChampion Mmm... I don't have Edge mobile to test. I guess since Edge supports matches, it should not be needed. But again, I don't have a way to test. Will change as you suggested and let others test on Edge mobile. @triblondon Done!. @triblondon Do you have an ETA on when this may be merged? Thanks!. This is so wrong... will commit again.. You can use for example get the uncompressed version that is being sent to that browser.\nLooking at that, I see that nextTick is being used in the Promise polyfill, but that polyfill is already minimized on the non-minimized version of polyfill, so it will be quite hard to debug the issue anyways.... I'm getting errors reports like \"Uncaught TypeError: Array.from is not a function in xxx\" in Chrome 45 (Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2423.0 Safari/537.36).\nI'm passing a Set to Array.from, but by the error it seems that it is not supported at all (is not a function), not some type error in the arguments.... @JakeChampion I suppose I can, it should be a couple of lines, but I don't have Chrome 45 to test against... Do you have any kind of test service that can handle that?. @JakeChampion Done, it should work (or not :) )\nhttps://jsbin.com/zayihiwevo/edit?html,js,output. @JakeChampion mmm... strange. Can you tell me which version of windows is running Chrome on?. @JakeChampion Ok. Closing as it seems to be non-reproducible. If I get more data or I'm able to reproduce locally, will open a new issue. Thanks for your time!. Well... I would need to serve a custom polyfill version for that, as I would need to trap the error and log additional information. Now, even with that, I'm not quite sure I would be able to know what target holds, as I don't think I will be able to read it (same error).\nMy research on that error sent me to this page: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Property_access_denied, but my application doesn't use iframes, nor I let my application run inside an iframe (it should fail even before the browser tries to load the polyfill), so I really don't know what could be happening here.... @JakeChampion unfortunately, no. I'm getting this error on the logs, but I were never able to reproduce on my side. Feel free to close the issue. If at any point I'm able to reproduce it, I will open a new one.. Probably related to #1065. I fixed that for IE11, as I didn't get any reports from Edge missing it.\nAre you sure it's from Edge \"destktop\"? As noted in mi pull request (#1071) I wasn't able to test it on Edge mobile. Maybe there is where it is needed?. @sleagon: I guess I made a mistake when trimming down the url (as I'm using several other features), but I do have the correct feature (Promise.prototype.finally) in my string.\nRegarding your question, I don't know. The only thing that I know is that in that version of Samsung browser (that it's build upon Chrome/59) Promise.finally doesn't exists.\nAlso, I'm not sure why it is relevant at all your third assertion. Chrome, for example, needs Promise.finally but not Promise, so I need to ask for finally to get it as asking only for Promise makes PF to not send anything.\n. Ups... will remove.. Well... It might be verbose but should work. Will change. Sure... In any case, I think I still need to understand how pull requests works, as that was supposed to be ANOTHER pull request for another issue, but anyways..\nClick here to view the screenshots\n\n\n. Thanks, reading right now. How do you want me to approach this? Should I create another branch (not sure how I can revert this commit here) for the above? Or can you simply kill two birds in one shoot?. ",
    "MikaFima": "Hi, thank you for your reply.\nI didn't try that yet, but I will do it quickly.\nFor Intl implementation, at least, it stay at the same point since v9.9.. Right, this is enough FTM.\nYou can close this issue, unless you want to make some investigation and officially support it ;).\nIf I find time for this, i'll came back to you.\nThank you\n. Hi @JakeChampion, can we hope a CDN update including this fix soon ?. ",
    "JounQin": "@triblondon \nSorry, I was a little busy there days, and just forgot to do that.\nI've fixed it just now.. Actually I just copy the config.json from Object.entries.. ",
    "bigslycat": "@JakeChampion Tests fails.\n```\n\npolyfill-service@3.16.0 clean-testdata /home/cat/dev/polyfill-service\nrm -rf ./test/results\n\nmodule.js:472\n    throw err;\n    ^\nError: Cannot find module 'glob'\n    at Function.Module._resolveFilename (module.js:470:15)\n    at Function.Module._load (module.js:418:25)\n    at Module.require (module.js:498:17)\n    at require (internal/module.js:20:19)\n    at Object. (/home/cat/dev/polyfill-service/tasks/node/updatesources.js:6:24)\n    at Module._compile (module.js:571:32)\n    at Object.Module._extensions..js (module.js:580:10)\n    at Module.load (module.js:488:32)\n    at tryModuleLoad (module.js:447:12)\n    at Function.Module._load (module.js:439:3)\n```. @JakeChampion I can do it, but unfortunately, not in the near future.. ",
    "nekman": "Thank you @JakeChampion. I should have looked closer on the documentation. Sorry!. Also need the v2 documentation.. ",
    "tschaub": "It looks like the polyfill for Headers should accept an array in the constructor.  I've opened github/fetch#485 proposing a fix.. @triblondon - the whatwg-fetch@2.0.3 release includes the fix.  I've opened #1104 to pull it in.  Let me know if this can be updated in another way.  Thanks.. @triblondon - I'll give it a try (we're bundling in promise-polyfill for now).\nWould it make sense to accept something like context=worker so special excludes like this could be handled by the service?. Thanks @triblondon.\nHere is a simple smoke test: https://bl.ocks.org/tschaub/raw/00cead930df134336fde43f0dc965f52/\nThis is not adapted for the test setup in this repo, but it could provide clues on a starting point.  Sources here: https://gist.github.com/tschaub/00cead930df134336fde43f0dc965f52. This will throw a ReferenceError where document or window are not defined.\nInstead, this could be written as typeof document === 'undefined' || typeof window === 'undefined'.. ",
    "shouze": "@triblondon @caridy ok In fact I've started the checklist for the release, even purshased a subscription to saucelabs but sauce tests doesnt seem to start anymore ATM. I'm on my way to investigate about that to help the release happen soon guys.. ",
    "colthreepv": "Also interested in this PR.\nI was tempted to contribute, but the guideline prompts to create a synchronous script, is that even possible to create a synchronous script using node HTTP methods? (to retrieve latest source). Thanks for taking the time to put this checklist, It is feasible this way!. ",
    "94cstyles": "@matthew-andrews \u5662\uff01\u4f60\u4eec\u80fd\u61c2\u4e2d\u6587\u8fd9\u592a\u68d2\u4e86\u3002\n\u95ee\u9898:\n\n\n\u4f7f\u7528\u5b98\u7f51\u63d0\u4f9b\u7684cdn\u5730\u5740\uff0c\u6211\u6d4b\u8bd5\u4e86\u4e0b\u8bbf\u95ee\u901f\u5ea6\uff0c\u53d1\u73b0\u5927\u7ea6\u67091/8\u7684\u4e2d\u56fd\u7684\u7f51\u7edc\u8282\u70b9\u8bbf\u95ee\u4e0d\u5230\u6216\u8005\u8bbf\u95ee\u901f\u5ea6\u4e0d\u592a\u7406\u60f3\u3002\u6211\u60f3\u81ea\u5df1\u67b6\u8bbepolyfill-service\u7684\u670d\u52a1\uff0c\u6211\u9700\u8981\u652f\u6301https\u8bbf\u95ee\uff0c\u6211\u5e94\u8be5\u600e\u4e48\u53bb\u8bbe\u7f6e\u6216\u8005\u6211\u9700\u8981\u4fee\u6539\u4ec0\u4e48\u4ee3\u7801?\n\n\n\u4e0d\u77e5\u9053polyfill-service\u5bf9\u79fb\u52a8\u8bbe\u5907\u7684\u652f\u6301\u600e\u4e48\u6837? \u56e0\u4e3a\u4e2d\u56fd\u6709\u5f88\u591a\u624b\u673a\u5382\u5546\uff0c\u559c\u6b22\u81ea\u5b9a\u4e49\u6d4f\u89c8\u5668\uff0c\u6211\u62c5\u5fc3polyfill-service\u5bf9\u8fd9\u7c7b\u6d4f\u89c8\u5668\u7684\u5224\u522b\u4e0d\u6b63\u786e\uff0c\u6240\u4ee5\u6211\u51c6\u5907\u6269\u5c55polyfill-service\uff0c\u53ef\u4ee5\u5bf9\u67d0\u4e9b\u54c1\u724c\u7684\u624b\u673a\u6d4f\u89c8\u5668\u54cd\u5e94\u6240\u6709\u7684polyfill\u3002\n. \u6211\u7528\u8fc7express \u6211\u77e5\u9053\u600e\u4e48\u6dfb\u52a0https\u4e86 ~ \u975e\u5e38\u8c22\u8c22\uff01 \npolyfill-service \u662f\u4e2a\u4f1f\u5927\u7684\u9879\u76ee \u6211\u5f88\u4e50\u610f\u4e3a\u8be5\u9879\u76ee\u8d21\u732e\u4ee3\u7801\u3002. \u6211\u73b0\u5728\u9047\u5230\u4e00\u4e2a\u975e\u5e38\u8be1\u5f02\u7684\u95ee\u9898 polyfill\u65e0\u6cd5\u6ce8\u5165\u3002\n```javascript\nvar features = [];\n\n\n//Symbol\n('Symbol' in this && 'iterator' in this.Symbol) || features.push('Symbol.iterator');\n//Promise\n('Promise' in this) || features.push('Promise');\n//IntersectionObserver\n(\"IntersectionObserver\" in this) || features.push('IntersectionObserver');\n//Array\n'from' in Array && (function () {\n    try {\n        Array.from({length: -Infinity});\n    return true;\n} catch (e) {\n    return false;\n}\n\n})() || features.push('Array.from');\n('isArray' in Array) || features.push('Array.isArray');\n('of' in Array) || features.push('Array.of');\n('Symbol' in this && 'iterator' in this.Symbol && !!Array.prototype.entries) || features.push('Array.prototype.entries');\n//Object\n('assign' in Object) || features.push('Object.assign');\n('defineProperty' in Object) || features.push('Object.defineProperty');\nif (features.length > 0) {\n    var el = document.createElement('script');\n    el.src = location.protocol + '//polyfill.io/v2/polyfill.js?features=' + features.join(',') + '&flags=gated,always&rum=1&callback=main';\n    el.async = true;\n    document.head.appendChild(el);\nwindow.main = function () {\n    console.log('file content:', el.textContent || el.innerText || el.innerHTML);\n    console.log(JSON.stringify(features, null, 4));\n    console.log('Object.assign:' + Object.assign);\n};\n\n}\n```\n\n. \u5df2\u89e3\u51b3 \u52a0\u4e0aunknown=polyfill\u5c31\u53ef\u4ee5~ \n\u4e2d\u56fd\u597d\u591awebview\u90fd\u65e0\u6cd5\u8bc6\u522b~ \n\n@matthew-andrews' translation:\nAlready solved it \u2014 added unknown=polyfill and it was fine~\nChina has so many webview[s] that can\u2019t be identified. I didn't get Array.prototype.find\ntest: https://polyfill.io/v2/polyfill.js?ua=Chrome/33.0.0.0. ",
    "jimmywarting": "Yea, want this also\n. Chrome 37? seriously?. can confirm that edge don't have toBlob but it has a prefixed version msToBlob. ",
    "jonbretman": "@JakeChampion - signed. I saw the JSON.stringify thing but I didn't see anything in the polyfill that explicitly supports that, or is it to toString implementation that handles this? If so are there tests covering this?. @JakeChampion ok I've updated Symbol to be < 10.. @JakeChampion done.. @JakeChampion ah yes I forgot about that. Done, thanks \ud83d\ude04 . ",
    "regiskuckaertz": "Hi @JakeChampion Thanks for your review, I completely forgot about these cases \ud83d\ude0a . Great catch! I took the version out of MDN too, but they got it wrong in padStart---have submitted a patch there too.. Hi @JakeChampion \nSorry about that, was in a hurry last Friday and missed a typo in one of my tests. I ran them across several browsers, everything looks good now.. Cheers \ud83d\ude03  I didn't know, that's fantastic! Thanks for the tip, I'll fill it in right away.. ",
    "renehamburger": "The same happens in IE10: 'Intl.Collator' is undefined.. @JakeChampion, thanks for the quick fix! . ",
    "sjparkinson": "Looks \ud83d\udc4c . The only comment I'd make is if both regions are unhealthy ( \ud83d\ude4f  ) we end up sending traffic to the opposite regions which seems a bit funny.. Related https://community.fastly.com/t/cache-control-max-age-and-age-headers/1018.. Reading https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html, I don't think it's wise to remove the Age header.. . https://github.com/Financial-Times/polyfill-service/blob/fc8f1322074241e6e49a40cc751c0444f51d90df/views/report-a-bug.html#L33-L36. ",
    "vladimiry": "npm v3.10.9; node v7.0.0. It worked well last week with the same versions used, but now it stopped to work, here is a log:\nnpm ERR! fetch failed https://npm.n8s.jp/dashdash/-/dashdash-1.14.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/amdefine/-/amdefine-1.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/graphite/-/graphite-0.0.7.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/form-data/-/form-data-2.1.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/content-disposition/-/content-disposition-0.5.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/code-point-at/-/code-point-at-1.1.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/mime-db/-/mime-db-1.26.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/handlebars/-/handlebars-4.0.6.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/argparse/-/argparse-1.0.9.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/json5/-/json5-0.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/finalhandler/-/finalhandler-0.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/glob/-/glob-7.1.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/express/-/express-4.14.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/kind-of/-/kind-of-3.1.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/graceful-fs/-/graceful-fs-4.1.11.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/home-or-tmp/-/home-or-tmp-2.0.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/ajv-keywords/-/ajv-keywords-1.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/is-finite/-/is-finite-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/lolex/-/lolex-1.3.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/http-errors/-/http-errors-1.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/inflight/-/inflight-1.0.6.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/os-homedir/-/os-homedir-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/sshpk/-/sshpk-1.10.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/formatio/-/formatio-1.1.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/require-uncached/-/require-uncached-1.0.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/optionator/-/optionator-0.8.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/proxy-addr/-/proxy-addr-1.1.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/lodash/-/lodash-4.17.4.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/agent-base/-/agent-base-2.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/https-proxy-agent/-/https-proxy-agent-1.0.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/doctrine/-/doctrine-1.5.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/globule/-/globule-1.1.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/table/-/table-3.8.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/samsam/-/samsam-1.1.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/source-map-support/-/source-map-support-0.4.11.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/os-tmpdir/-/os-tmpdir-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/repeat-string/-/repeat-string-1.6.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/request/-/request-2.79.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/setprototypeof/-/setprototypeof-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/ipaddr.js/-/ipaddr.js-1.2.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/mime-types/-/mime-types-2.1.14.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/send/-/send-0.14.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/lru-cache/-/lru-cache-4.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/serve-static/-/serve-static-1.11.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/detect-indent/-/detect-indent-4.0.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/moment/-/moment-2.17.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/tryit/-/tryit-1.0.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/statuses/-/statuses-1.3.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/path-is-absolute/-/path-is-absolute-1.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/tweetnacl/-/tweetnacl-0.14.5.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/uglify-js/-/uglify-js-2.7.5.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/util/-/util-0.10.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/inherits/-/inherits-2.0.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/jsesc/-/jsesc-1.3.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/babel-code-frame/-/babel-code-frame-6.22.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/babylon/-/babylon-6.15.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/js-tokens/-/js-tokens-3.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/object-assign/-/object-assign-4.1.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/glob/-/glob-7.1.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/handlebars/-/handlebars-4.0.6.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/argparse/-/argparse-1.0.9.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/code-point-at/-/code-point-at-1.1.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/home-or-tmp/-/home-or-tmp-2.0.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/amdefine/-/amdefine-1.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/mime-db/-/mime-db-1.26.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/graphite/-/graphite-0.0.7.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/finalhandler/-/finalhandler-0.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/dashdash/-/dashdash-1.14.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/express/-/express-4.14.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/json5/-/json5-0.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/form-data/-/form-data-2.1.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/content-disposition/-/content-disposition-0.5.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/graceful-fs/-/graceful-fs-4.1.11.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/ajv-keywords/-/ajv-keywords-1.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/kind-of/-/kind-of-3.1.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/inflight/-/inflight-1.0.6.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/is-finite/-/is-finite-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/formatio/-/formatio-1.1.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/optionator/-/optionator-0.8.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/lodash/-/lodash-4.17.4.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/os-homedir/-/os-homedir-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/proxy-addr/-/proxy-addr-1.1.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/http-errors/-/http-errors-1.5.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/require-uncached/-/require-uncached-1.0.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/agent-base/-/agent-base-2.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/lolex/-/lolex-1.3.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/sshpk/-/sshpk-1.10.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/https-proxy-agent/-/https-proxy-agent-1.0.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/globule/-/globule-1.1.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/doctrine/-/doctrine-1.5.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/request/-/request-2.79.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/repeat-string/-/repeat-string-1.6.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/setprototypeof/-/setprototypeof-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/os-tmpdir/-/os-tmpdir-1.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/ipaddr.js/-/ipaddr.js-1.2.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/mime-types/-/mime-types-2.1.14.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/table/-/table-3.8.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/send/-/send-0.14.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/samsam/-/samsam-1.1.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/serve-static/-/serve-static-1.11.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/source-map-support/-/source-map-support-0.4.11.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/lru-cache/-/lru-cache-4.0.2.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/detect-indent/-/detect-indent-4.0.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/moment/-/moment-2.17.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/statuses/-/statuses-1.3.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/path-is-absolute/-/path-is-absolute-1.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/tryit/-/tryit-1.0.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/tweetnacl/-/tweetnacl-0.14.5.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/util/-/util-0.10.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/uglify-js/-/uglify-js-2.7.5.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/inherits/-/inherits-2.0.3.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/jsesc/-/jsesc-1.3.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/babylon/-/babylon-6.15.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/js-tokens/-/js-tokens-3.0.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/babel-code-frame/-/babel-code-frame-6.22.0.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/object-assign/-/object-assign-4.1.1.tgz\nnpm WARN retry will retry, error on last attempt: Error: fetch failed with status code 503\nnpm ERR! fetch failed https://npm.n8s.jp/glob/-/glob-7.1.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/form-data/-/form-data-2.1.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/finalhandler/-/finalhandler-0.5.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/ajv-keywords/-/ajv-keywords-1.5.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/kind-of/-/kind-of-3.1.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/http-errors/-/http-errors-1.5.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/optionator/-/optionator-0.8.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/os-homedir/-/os-homedir-1.0.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/formatio/-/formatio-1.1.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/source-map-support/-/source-map-support-0.4.11.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/table/-/table-3.8.3.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/handlebars/-/handlebars-4.0.6.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/agent-base/-/agent-base-2.0.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/express/-/express-4.14.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/proxy-addr/-/proxy-addr-1.1.3.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/os-tmpdir/-/os-tmpdir-1.0.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/graceful-fs/-/graceful-fs-4.1.11.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/require-uncached/-/require-uncached-1.0.3.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/inflight/-/inflight-1.0.6.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/lodash/-/lodash-4.17.4.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/is-finite/-/is-finite-1.0.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/doctrine/-/doctrine-1.5.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/setprototypeof/-/setprototypeof-1.0.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/lolex/-/lolex-1.3.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/send/-/send-0.14.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/mime-types/-/mime-types-2.1.14.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/statuses/-/statuses-1.3.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/home-or-tmp/-/home-or-tmp-2.0.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/argparse/-/argparse-1.0.9.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/moment/-/moment-2.17.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/code-point-at/-/code-point-at-1.1.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/globule/-/globule-1.1.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/amdefine/-/amdefine-1.0.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/path-is-absolute/-/path-is-absolute-1.0.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/mime-db/-/mime-db-1.26.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/tryit/-/tryit-1.0.3.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/https-proxy-agent/-/https-proxy-agent-1.0.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/repeat-string/-/repeat-string-1.6.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/detect-indent/-/detect-indent-4.0.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/samsam/-/samsam-1.1.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/lru-cache/-/lru-cache-4.0.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/serve-static/-/serve-static-1.11.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/graphite/-/graphite-0.0.7.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/sshpk/-/sshpk-1.10.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/dashdash/-/dashdash-1.14.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/json5/-/json5-0.5.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/request/-/request-2.79.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/content-disposition/-/content-disposition-0.5.2.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/ipaddr.js/-/ipaddr.js-1.2.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/util/-/util-0.10.3.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/tweetnacl/-/tweetnacl-0.14.5.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/uglify-js/-/uglify-js-2.7.5.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/inherits/-/inherits-2.0.3.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/jsesc/-/jsesc-1.3.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/babylon/-/babylon-6.15.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/babel-code-frame/-/babel-code-frame-6.22.0.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/js-tokens/-/js-tokens-3.0.1.tgz\nnpm ERR! fetch failed https://npm.n8s.jp/object-assign/-/object-assign-4.1.1.tgz. ",
    "shtse8": "Because some users reported to us they need to wait for cdn.polyfill.io to load my site. That's why I want to put the polyfill to my server, so that I can send the polyfill to clients with my other scrips in one request. So I have downloaded the full polyfill using this link.\nhttps://cdn.polyfill.io/v2/polyfill.js?features=IntersectionObserver&unknown=polyfill&ua=unknown\nI am using the latest Chrome.\n. I am using IntersectionObserver and requestAnimationFrame. But the error code is from Element polyfill. (Due to the dependency, Element, License: CC0 (required by \"Event\", \"IntersectionObserver\"))\nI have tried to exclude this polyfill and everything works fine. So I believe Element polyfill got some bugs.. I have solved this problem by using flags=gated.. Also, setting unknown=polyfill will cause many errors with our scripts.\nfor example: getComputedStyle returns undefined in modern browser. \nI have tried android webview and the browser has implemented getComputedStyle but due to the unknown user agent, polyfill.io will respond all polyfills.\ntherefore, unknown=polyfill cannot use at any time. I would like to suggest Polyfill.io not to polyfill if the function exists.. https://cdn.polyfill.io/v2/polyfill.min.js?features=IntersectionObserver,requestAnimationFrame&excludes=Element,getComputedStyle&unknown=polyfill\nthis request works fine now. But I don't know how about if browsers don't have Element and getComputedStyle. I think Element, getComputedStyle are not working properly.. Yes, I think it is the same issue. But I would not expect giving all polyfills will cause errors, once it is, it is very dangerous for those unknown user agent. why don't checking the existance of the methods instead of just overriding all?. @Gheoan Thanks. I miss this flag. how about the always flag? i can't understand the description.. flags=gated is the thing you need.. I have asked this question before. https://github.com/Financial-Times/polyfill-service/issues/1137. Error:\nReferenceError: Can't find variable: IntersectionObserver\nUser Agnets:\nMozilla/5.0 (iPad; CPU OS 5_1_1 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Mobile/9B206 [FBAN/FBIOS;FBAV/6.5.1;FBBV/377040;FBDV/iPad1,1;FBMD/iPad;FBSN/iPhone OS;FBSV/5.1.1;FBSS/1; FBCR/;FBID/tablet;FBLC/zh_CN;FBOP/1]\nMozilla/5.0 (iPad; CPU OS 6_1_3 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Mobile/10B329 [FBAN/FBIOS;FBAV/8.0.0.28.18;FBBV/1665515;FBDV/iPad3,1;FBMD/iPad;FBSN/iPhone OS;FBSV/6.1.3;FBSS/2; FBCR/;FBID/tablet;FBLC/zh_TW;FBOP/1]. Error:\nUncaught ReferenceError: IntersectionObserver is not defined\nUser Agents:\nMozilla/5.0 (Linux; U; Android 4.1.2; en-gb; GT-P3100 Build/JZO54K) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30\nMozilla/5.0 (Linux; U; Android 4.1.1; zh-tw; GT-P3100 Build/JRO03C) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30. But it seems not only firefox, will they be fixed in the next release? I have turned on flags=always to temporarily resolve this issue . Unterstand. That means many users are using old browser. and it is hard to make a polyfill.\nSo it doesn't support the polyfill but not user-agent detecting issue. is it right?. ",
    "SivanMehta": "@shtse8 Do you happen to know how or why flags=gated fixed this issue? I would like to avoid this issue in the future, but am unsure about blindly copying a querystring to fix the problem.. ",
    "DullReferenceException": "@JakeChampion: we've recently started seeing this issue with this UA used by the Instagram app:\nMozilla/5.0 (iPhone; CPU iPhone OS 9_3_2 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13F69 Instagram 8.4.0 (iPhone7,2; iPhone OS 9_3_2; nb_NO; nb-NO; scale=2.00; 750x1334\n...with these params:\n?unknown=polyfill\n&features=default\n %2Cfetch\n %2CArray.prototype.%40%40iterator\n %2CArray.prototype.find\n %2CArray.prototype.findIndex\n %2CFunction.name\n %2CNumber.isFinite\n %2CPromise\n %2CString.prototype.repeat\n %2CArray.prototype.includes\n %2CIntl.~locale.en-US\nWe're going to try the flags=gated option. The polyfill library line that's failing is here:\nhttps://github.com/Financial-Times/polyfill-library/blob/f7fe94f900c8fae9b97365a044b114514b0db732/polyfills/Element/polyfill.js#L13\nI can't help but think this is likely a false positive polyfill, since it seems super unlikely that window. HTMLElement and window.Element need to be polyfilled (unless I'm misunderstanding the purpose of that code).\nWe started getting reports of this problem around 1:25 PM Pacific.. ",
    "hbrls": "Hi, @triblondon. I came from Promise -> Event -> Element. And most likely I will use the always flag instead of detecting.\nActually I'm looking for a more general solution for apps not serving IE8. I was thinking of something similar to the wildly accepted practice if (process.env.NODE_ENV === 'development') that could be eliminated by uglifyjs.\nI've searched and read the issues and quite appreciate your consideration to compatibility. Although the IE6-8 only Element example is not typical enough, would you open the issue again if my general expectation was on the right track?. Do you mean that the detecting service can skip Element on some browser has Element but not Promise? I can work with that. Am I missing some docs?. @JakeChampion I want to inline the script.. Dear all, I kind of misunderstood the service. I tried with Chrome for the following 2 cases and would like to share the result.\n\nChrome with Win7/IE8 useragent\n\n```\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Element&ua=Mozilla%2F4.0%20(compatible%3B%20MSIE%208.0%3B%20Windows%20NT%206.1%3B%20Trident%2F4.0)\n/* Polyfill service v3.17.0\n* For detailed credits and licence information see https://github.com/financial-times/polyfill-\nservice.\n* \n* UA detected: ie/8.0.0\n* Features requested: Element\n* \n* - Document, License: CC0 (required by \"Element\")\n* - Element, License: CC0 */\n\n```\n\nChrome\n\n```\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Element\n/* Polyfill service v3.17.0\n* For detailed credits and licence information see https://github.com/financial-times/polyfill \nservice.\n* \n* UA detected: chrome/56.0.0\n* Features requested: Element\n*  */\n\n/* No polyfills found for current settings */\n\n```\nThe result is clear how the service skip unnecessary deps.\nAnd my decision is https://cdn.polyfill.io/v2/polyfill.js?features=Promise,fetch&excludes=Window,Document,Element,Event,XMLHttpRequest,Object.defineProperty,Object.getOwnPropertyNames,Array.isArray,Array.prototype.forEach&flags=always,gated.\nThanks for all your help.\n. ",
    "dcherman": "This is applicable to Set.prototype.size as well.. Wow, TIL.\nIf you don't mind leaving this open in the short term, I've posted a question to esdiscuss to get clarification about why the spec is the way that it is since requiring this work to get done each time on get size was incredibly surprising to me.\nWill follow up when I get a response.. @Gheoan As pointed out on the mailing list,\nhttp://www.ecma-international.org/ecma-262/7.0/index.html#sec-map-objects\nThe data structures used in this Map objects specification is only intended to describe the required observable semantics of Map objects. It is not intended to be a viable implementation model\nThe semantics surrounding size are clearly described, but we don't need to follow the spec to the letter (per the spec itself) so long as we follow the same semantics.  With that in mind, I think this is a valid issue as we can reliably make the size accessor much faster.. @JakeChampion Will do; waiting to hear back from our legal dept before I can officially sign.  I've read over it and don't expect any roadblocks though, so that should hopefully happen shortly.. @JakeChampion Sorry for the delay, I've both signed the CLA and added that email address to my account. @JakeChampion Ah, I see the problem.  Need to set size in the constructor as well since Object.defineProperty isn't supported in IE8, so it was never defined until an operation occurred.  Pushing a fix in a moment.. Side note:  I think there's a bug in your error handling since this code is never hit in this case even though the server failed to start:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/bin/polyfill-service#L16-L19. Done.  I also added a commit documenting SENTRY_DSN.. @JakeChampion I've got yarn 1.0.2 installed.  FWIW, the artifacts uploaded to NPM for 3.21.0 do contain the dist folder, and I don't see a postinstall step that runs npm run build or anything.\nActually, it looks like there's even a step that is intended to build the polyfills prior to releasing them to npm that may not have gotten run for whatever reason:\n\"prepublish\": \"npm run build\". Confirmed that this was fixed up in 3.24.0.  Thanks @JakeChampion. The last thing I'd suggest here is using .call(this), that way you're accessing localStorage the same way throughout the entire feature check.\njs\n'localStorage' in this && (function() {\n    try {\n        // Needed for Safari private browsing.\n        this.localStorage.setItem('storage_test', 1);\n        this.localStorage.removeItem('storage_test');\n        return true;\n    } catch (e) {\n        return false;\n    }\n}).call(this);. ",
    "christophehurpeau": "@JakeChampion here a gist \nhttps://gist.github.com/christophehurpeau/dae28d1e6a8c6babb7cf5458649eed69\nyou can try using rawgit :\nhttps://rawgit.com/christophehurpeau/dae28d1e6a8c6babb7cf5458649eed69/raw/f5a507050099cd3c0f64b27dbae06f38e8e4e42d/polyfillio-regenerator-runtime.html\n\n. Since Android 4.4 google no longer had a browser bundled into it, so that Chrome could be installed as an application and be updated without depending on the system.\nHowever some manufacturers kept distributing some Android with a browser bundled into it with an older version of the renderer.\nSo I think we can safely asume that when Chome/xxx is not in the user agent in Android 4.4 then the browser is probably an older one ? Or is it possible to use AppleWebKit/XXX.XX / Safari/XXX.XX to guess it's equivalent chrome version when the browser is Android ?\nAccording to whatismybrowser.com, for browsers in Android 4 without chrome/ it's Android Browser 4, and they all have AppleWebKit/534.30\nSo I guess we could say \"android\": \"*\" ?. Opera 46 is based on chrome 59 so it has Object.assign. https://cdn.polyfill.io/v2/polyfill.js?features=default,es6&ua=Mozilla/5.0%20(Windows%20NT%206.3;%20Trident/7.0;%20rv:11.0)%20like%20Gecko\nit is, did you required it ?. Since opera 15, opera is based on chromium and blink: http://www.opera.com/docs/changelogs/unified/1500/. also usefull: https://dev.opera.com/blog/opera-user-agent-strings-opera-15-and-beyond/. @JakeChampion do you know when this will be testable on the QA ?. isn't it detected as chrome ? \"chrome\": \">31 <63\", and in your ua Chrome/59.0.3071.125. new pr: https://github.com/Financial-Times/polyfill-library/pull/9. new pr: https://github.com/Financial-Times/polyfill-library/pull/8. ",
    "ctjhoa": "@JakeChampion I've wrote some tests. Tell me if I missed something.. @JakeChampion I've done some changes, now IE8 is OK but I'm not sure about IE7 because I cannot find a IE7 javascript debugger. Can you relaunch circle ci please?. PS: This trick comes from https://github.com/WebReflection/dom4/blob/master/src/dom4.js#L286. @JakeChampion Thanks for the update. I have updated my work keep me in touch.. @JakeChampion Code looks good to me. Do you have any clue?   (I'm not an IE expert). @JakeChampion I have fixed the code it should be ok now. @JakeChampion No feedback, is that ok?. I'm very confused about this bug. Here is what I've got from my monitoring system:\n\nHere is my polyfill.io script\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default,matchMedia,MutationObserver\"></script>\nUsing caniuse test, MutationObserver should work without prefix (but the test is still considered as failed)\nIn addition, I have tested this url https://polyfill.io/test/tests?feature=MutationObserver&mode=all with a real opera mini with both \"extreme\" data savings mode enabled and disabled and the test is still successful (since caniuse seems to be based on that https://github.com/Fyrd/caniuse/issues/3883).\nDo you have experienced such weird cases in the past? I'm little bit lost...\nThanks\n. ",
    "matthewsuan": "I just wanted to add that when I load the polyfill using UC, it says\nunknown/unsupported\n &\nNo polyfills found for current settings. Gotcha.\nThanks.. ",
    "ysugimoto": "Yes, I've tested on master branch and it works. thanks!. ",
    "izar89": "Had an older version v5.11.1 installed, updated to v7.8.0. Still get the 'module yamlparser not found' in my original project. It does work with a clean install. I'm using babel to transpile to es5 in my project. I'll investigate a bit further.. I think I found the problem. I had a version mismatch between n and nvm for managing node versions(both where installed and used). I'm now using the proper latest version of node. Thanks for checking and sorry for wasting your time. Thanks :d. ",
    "msteitle": "I don't disagree about your philosophy on documentation. Finding the relevant documentation in retrospect is obvious, but it would have helped to have a faq or troubleshooting section for why expected polyfills aren't being loaded. ES6 is so prevalent these days, I made the assumption that it would be part of the default before I later found that relevant documentation. Map and Set, for instance, are es6 additions, but are included by default.. Aah, yes. That would explain it. Thanks!. ",
    "JoyceBabu": "Why did the CI check stall?. I accidentally rebased the branch over master, and pushed the commit for https://github.com/Financial-Times/polyfill-service/issues/1183 into this PR.\nI have force pushed, after removing the commit.. It is working for me on the same version of UC Browser. Are you depending on polyfill.io's user agent based feature detection? I am using JS based feature detection.\nhttp://www.joycebabu.com/test/uc-promise/demo.html. I think UC browser is not supported by the user agent detection service, so it won't get a polyfill unless you append &unknown=polyfill  to the end of the polyfill script url. . Both v0.17.11 and v0.17.12 fixes the issue on UC Browser https://github.com/ysmood/yaku/issues/45.\nv0.17.11 is a trivial quick fix for the issue (replaced global.Promise = Yaku with (global || {}).Promise = Yaku).\nv0.17.12 reverts the above temporary fix, and uses an updated WebPack library for building.\nUnfortunately, I don't have any experience with WebPack and I couldn't find any useful information in the CI log. Can you please try v0.17.11 instead of v0.17.12? That should not fail any existing tests, but would still fix the issue on UC Browser.. I was writing a PHP script to serve the requested polyfills, and found the inconsistency.\nNot a problem, just a mild annoyance :). I did make a working version for our use. You may have to adapt it for your case\nhttps://github.com/Ennexa/polyfill-loader-php\nTo prepare the polyfills run\ncd js/polyfills\nnpm install\nnpm run build\n. It doesn't do any User-Agent sniffing. You will have to do it client side and pass the required features.. If you require User-Agent sniffing, why don't you use the original polyfill.io service?. ```\n(function(window, document, undefined) {\n    var head = 'head', idx, len, parent, key, keys, arAvailable = [], arPolyFill = [];\nvar userAgent = navigator.userAgent, script = document.createElement('script');\nfunction test(feature) {\n    keys = feature.split('.');\n    len = keys.length;\n    parent = window;\n    do {\n        key = keys.shift();\n        // console.log(key in parent, feature, key, parent);\n        if (!(key in parent)) {\n            return false;\n        }\n        if (!keys.length) {\n            return true;\n        }\n        parent = parent[key];\n\n    } while (1)\n}\nfunction check(feature, status, isPolyFillable) {\n    if (status === undefined) {\n        status = test(feature);\n    }\n    if (isPolyFillable === undefined) {\n        isPolyFillable = true;\n    }\n    if (status) {\n        arAvailable.push(feature)\n    } else if (isPolyFillable) {\n        arPolyFill.push(feature);\n    }\n    return status;\n}\n\nPolyFillService =  {\n    _list: [],\n    onready: function(features, cb) {\n        if (!cb) {\n            cb = features;\n            features = null;\n        }\n        if (features && test('Array.prototype.indexOf')) {\n            for (idx = features.length - 1; idx >= 0; idx--) {\n                if (arAvailable.indexOf(features[idx]) === -1) break;\n            }\n            if (idx === -1) {\n                cb();\n                return;\n            }\n        }\n        this._list.push(cb);\n    },\n    ready: function(features) {\n        var cb;\n        // PolyFillService.check();\n        while (cb = this._list.pop()) {\n            try {\n                cb();\n            } catch(e) {\n                onerror(e);\n            }\n        }\n        this.onready = function(features, cb) {\n            (cb || features)();\n        }\n    },\n    check: function() {\n        check(\"Object.defineProperty\",\"defineProperty\"in Object&&function(){try{var e={};return Object.defineProperty(e,\"test\",{value:42}),!0}catch(e){return!1}}());\n        check(\"Array.from\",\"from\"in Array&&function(){try{return Array.from({length:-1/0}),!0}catch(r){return!1}}());\n        check(\"Array.isArray\");\n        check(\"Array.of\");\n        // check(\"Array.prototype.every\");\n        check(\"Array.prototype.fill\");\n        check(\"Array.prototype.filter\");\n        check(\"Array.prototype.forEach\");\n        check(\"Array.prototype.indexOf\");\n        check(\"Array.prototype.lastIndexOf\");\n        check(\"Array.prototype.map\");\n        // check(\"Array.prototype.reduce\");\n        // check(\"Array.prototype.reduceRight\");\n        // check(\"Array.prototype.some\");\n        check(\"Window\");\n        check(\"Document\");\n        check(\"Element\",undefined, test(\"HTMLElement\"));\n        check(\"Event\",function(n){if(!(\"Event\"in n))return!1;if(\"function\"==typeof n.Event)return!0;try{return new Event(\"click\"),!0}catch(n){return!1}}(window));\n        check(\"CustomEvent\",test(\"CustomEvent\")&&(\"function\"==typeof CustomEvent||CustomEvent.toString().indexOf(\"CustomEventConstructor\")>-1));\n        // check(\"DOMTokenList\",test(\"DOMTokenList\")&&function(e){return!(\"classList\"in e)||!e.classList.toggle(\"x\",!1)&&!e.className}(document.createElement(\"x\")));\n        check(\"Date.now\",undefined,test(\"Date.prototype.getTime\"));\n        check(\"Date.prototype.toISOString\");\n        check(\"Element.prototype.after\");\n        check(\"Element.prototype.append\");\n        check(\"Element.prototype.before\");\n        check(\"Element.prototype.classList\");\n        // check(\"Element.prototype.cloneNode\",test(\"Element.prototype.cloneNode\")&&function(){var e=document.createElement(\"input\");return e.type=\"radio\",e.checked=!0,!!e.cloneNode().checked}());\n        check(\"document.querySelector\");\n        check(\"Element.prototype.matches\");\n        check(\"Element.prototype.closest\");\n        check(\"Element.prototype.prepend\");\n        check(\"Element.prototype.remove\");\n        check(\"Element.prototype.replaceWith\");\n        check(\"Event.hashchange\",test(\"onhashchange\")&&(null==onhashchange||\"function\"==typeof onhashchange));\n        check(\"Function.prototype.bind\");\n        check(\"JSON\");\n        check(\"Node.prototype.contains\");\n        check(\"Number.isNaN\");\n        check(\"Object.assign\");\n        check(\"Object.defineProperties\");\n        check(\"Object.create\");\n        check(\"Object.getOwnPropertyDescriptor\",test(\"Object.getOwnPropertyDescriptor\")&&\"function\"==typeof Object.getOwnPropertyDescriptor&&function(){try{var t={};return t.test=0,0===Object.getOwnPropertyDescriptor(t,\"test\").value}catch(t){return!1}}());\n        check(\"Object.getOwnPropertyNames\");\n        check(\"Object.getPrototypeOf\");\n        check(\"Object.keys\");\n        check(\"setImmediate\");\n        check(\"Promise\");\n        check(\"String.prototype.endsWith\");\n        check(\"String.prototype.includes\");\n        check(\"String.prototype.startsWith\");\n        check(\"String.prototype.trim\");\n        check(\"URL\",function(){try{var t=new window.URL(\"http://example.com\");return\"href\"in t&&\"searchParams\"in t}catch(r){return!1}}());\n        check(\"XMLHttpRequest\",test(\"XMLHttpRequest.prototype.addEventListener\"));\n        // check(\"atob\");\n        check(\"document.visibilityState\",test(\"document.hidden\") && test(\"document.visibilityState\"));\n        check(\"location.origin\");\n        check(\"performance.now\");\n        check(\"requestAnimationFrame\");\n    },\n    fill: function() {\n        var features = arPolyFill.join('+')\n            .replace(/\\b(.)(?:rray|lement|bject|tring)/g, '$1')\n            .replace(/\\.prototype\\./g, '$')\n            .replace(/(.{200,}?)\\+/g, '$1/'); // Break filenames below 255 characters to prevent hitting filesystem limits\n        if (arPolyFill.length) {\n            script.async = window.BROWSER_GRADE > 0;\n            if (userAgent.match(/(MSIE\\/[6-8])/)) {\n                script.src = 'https://cdn.polyfill.io/v2/polyfill.min.js?features=' + arPolyFill.join(',');\n            } else {\n                script.src = CDN_BASE_URL + '/assets/js/polyfills/' + features + '.js?_' + (new Date).getTime();\n            }\n            // script.src = 'https://cdn.polyfill.io/v2/polyfill.min.js?features=' + arPolyFill.join(',') + '&flags=always,gated&rum=0&callback=PolyFillService.ready';\n            script.type = 'text/javascript'\n            document[head].appendChild(script)\n        } else {\n            PolyFillService.ready();\n        }\n    }\n};\ndocument[head] = document[head] || document.getElementsByTagName(head)[0];\nPolyFillService.check();\n// check('default-3.5', (userAgent.indexOf(/MSIE\\/[6-8]/) === -1));\ncheck('Event.focusin', (userAgent.indexOf('Firefox/') === -1));\nPolyFillService.fill();\n\n})(window, document)\n```. I think the detection script is working fine, but Firefox is not compliant.\nFollowing code returns false on Chrome, but true on Firefox\n!('document' in this && \"cloneNode\" in document.documentElement && (function() {\n    var test = document.createElement('input');\n    test.checked = true;\n    var result = test.cloneNode(true);\n    return !!result.checked;\n})())\n. Sorry, the issue is that checked is not applicable for input[type=text]. If you change the type to radio, or use value instead of checked it works as expected.\n!('document' in this && \"cloneNode\" in document.documentElement && (function() {\n    var test = document.createElement('input');\n    test.checked = true;\n        test.type = \"radio\";\n    var result = test.cloneNode(true);\n    return !!result.checked;\n})())\nand\n!('document' in this && \"cloneNode\" in document.documentElement && (function() {\n    var test = document.createElement('input');\n    test.value = \"1\";\n    var result = test.cloneNode(true);\n    return !!result.value === \"1\"\n})())\nworks correctly. Can you please include the fix for https://github.com/Financial-Times/polyfill-service/issues/1183 also in to the release?. The deep parameter is mandatory in UC Mini. I have pushed a new commit with a try/catch statement to prevent the detection code from failing on UC Mini.\nWith  #1189 and #1200 applied, the default set is no longer failing to load on UC Mini.. \n@JakeChampion I would like to clarify that UC Mini does not allow overriding the Element.prototype.cloneNode function. The deep parameter is still required. The above pull request ensures that the detection code does not throw an error preventing other polyfills from loading.\nI have uploaded two test pages with the current and new polyfills\nhttp://www.joycebabu.com/test/uc-clonenode-test/current.htm\nhttp://www.joycebabu.com/test/uc-clonenode-test/new.htm\nBoth the scripts have the following code at the end of the polyfill script\ndocument.getElementById('parent').innerHTML = 'Replaced text';\n\nThe text gets replaced when using the updated polyfill, but not with the original polyfill (with deep parameter fix).\n\n\n. Closing this as per https://github.com/Financial-Times/polyfill-service/pull/1201. The reason I have checked for the presence of attachEvent, instead of using addEventListener is to prevent cyclic dependency Element <=> Event.. Either I was stupid and added the always flag without the gated flag while testing this, or UC Mini updated their server javascript engine to add the Element interface.\nThis fix is no longer required on UC Mini.. Done https://github.com/Financial-Times/polyfill-service/pull/1230. Oops! It should be return !!result.checked && (result2.childNodes.length === 0); not return !!result.checked && (result.childNodes.length === 0);. Should I amend and force push or fix it is a separate commit? I don't have much experience with Github.. I have pushed the updated code.\nJust to be sure, I downloaded Firefox 28 and tested the detection code and polyfill. It is working as expected.. If all we need is a node, can we just use the body node, rather than creating a new custom element under it?. ",
    "difelice": "@JoyceBabu Promise is not working for me on UC Browser 11.3.5.972 and polyfill.io 3.19.0. Can you please confirm?. Yes, I'm using their browser detection and the polyfill is not adding Promise. Can you please try their detection?. That might solve the problem. I'll try it. \nThank you so much!. ",
    "kanzelm3": "@triblondon  Any ETA on this?. ",
    "Loilo": "@JoyceBabu I'm about to do the same \u2014 are you free to share your work?. Great, thank you! I'll take a look. \ud83d\udc4d \nEDIT: I just realized you put that in a repo just for me. Double thanks!. Just to make sure \u2013 your script does always serve all polyfills, it doesn't do any User Agent sniffing, right?. Aw, that's a bummer. But I guess it's a solvable problem. Thanks again!. That's the plan for production use anyway.\nI'm just too curious if I can get this to work entirely\n\nwithout user-facing third-party service (read: without polyfill.io on a website)\nwithout server-side JavaScript running on every request\n\n\ud83d\ude09 . I don't think that anyone's arguing whether the feature should be added. It has in fact already been merged  into master over six months ago.\nHowever, no new version has been published to polyfill.io since January \u2014 not sure why.. For anyone subscribed to this: This feature is available in polyfill.io v3 which has been out for a couple days.\nIt's not in the default feature set though, you have to include it manually:\nhttps://polyfill.io/v3/polyfill.min.js?features=default,NodeList.prototype.forEach\n@JakeChampion and others, looks like this issue can be closed now.. I'm sure it is. Thanks for putting all the work into open sourcing these things. :). Oh. Right, IE < 9 does not support inline SVG at all, so I guess I'll need to exclude that case.. Okay, I added a check for existence of SVGElement. IE 7/8 should be fine now.. My pleasure. \ud83d\ude42 . Well, the latest release of polyfill-service is from January, while the feature has been implemented in April.. I have no idea.\nAnd to be honest, I had to first scan require('polyfill-service').listAllPolyfills() as well before I came up with the releases idea. \ud83d\ude09 Doesn't intuitively come to mind that there may be no releases in such a relatively long time.\nBut maybe @JakeChampion knows if/when releases are planned?. To alert subscribers here as well (sorry for spamming you, maintainers): This feature is now available.. ",
    "spencercarnage": "@JakeChampion signed.. @JakeChampion Visiting that link, I get the message, You have signed the CLA for Financial-Times/polyfill-service. It shows the \"sign\" button briefly along with the Please sign... copy and then updates to show that I've signed it. Looking at the license/cla check for this issue, it says that Contributor License Agreenment is not signed yet so it looks like its not being recorded...? . Would love to get this merged in as its biting me in the butt again on another project. I've done everything I can do sign that CLA but I can't get that badge to show that I've signed it.\n\n. ",
    "coreybruyere": "Sorry for the late response. I'm just testing in Edge 14 now and am not seeing the issue. Edge 13 isn't on Browserstack anymore. I'll close this issue.. ",
    "davidfischer": "Thank you for the change and I can confirm support for some old browsers and OSs are restored.. Also, I'm a big fan of the FT. Keep up the good work!. ",
    "pieterbeulque": "Hey, could you elaborate on what you're trying to do? Using polyfill.io has no direct impact on your Babel usage.\nYou add polyfill.io first, then your transpiled code and serve both to the user.\n<script src=\"https://cdn.polyfill.io/v2/polyfill.min.js\"></script>\n<script src=\"bundle.js></script>. This appears to have been updated in #1214 .. ",
    "awebdeveloper": "using pollyfill negates the use of cable to a large extend but not entirely. It good to include in docs for what  all do i still need bable for .. what about other webviews like facebook. does polyfill.io work for them  . ",
    "ChristopherMeek": "It seems to be back up now.. ",
    "bigblind": "It's working when I look in incognito mode, but not without, so there's probably some broken content still in my cache. If the expiration time isn't too long, this is probably not an issue, but if there's any cache busting you can do, that'd fix it for users who ahve visited the page while it was broken.. ",
    "stevebest": "Nevermind, the website seems to be working now.. ",
    "englishextra": "if(!(\"undefined\"!==typeof window.localStorage&&\"undefined\"!==typeof window.sessionStorage)){loadJS(\"./cdn/polyfills/0.1/js/Storage.fixed.min.js\");}\n?\nhttps://github.com/remy/polyfills/blob/master/Storage.js. @PfxMobile I tested that on win 10 fedora 24 and abdroid 4.3. Cant speak for IOS if I got it right.. ",
    "PfxMobile": "try {\n    // Test webstorage existence.\n    if (!window.localStorage || !window.sessionStorage) throw \"exception\";\n    // Test webstorage accessibility - Needed for Safari private browsing.\n    window.localStorage.setItem('storage_test', 1);\n    window.localStorage.removeItem('storage_test');\n  } catch (e) {\nThis is how it's done in https://github.com/AgentME/webstorage-polyfill. That's really an issue of Safari Private mode - localStorage exist but the setItem/getItem method throws an error. Sure,will  try to provide it this week. Created this just to track an issue in case of someone already interested in the same . ",
    "citta-lab": "localStorage polyfill doesn't get detected in Safari 10 (private mode). I think we might need to update config.json to include safari 10 ? \nhttps://cdn.polyfill.io/v2/polyfill.js?features=localStorage\n/* Polyfill service v3.25.1\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: safari/10.1.0\n * Features requested: localStorage\n *  */\n(function(undefined) {\n/* No polyfills found for current settings */\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});. ",
    "colingreen": "I'm seeing the same thing. Output from curl:\n* Connected to cdn.polyfill.io (151.101.194.2) port 443 (#0)\n* SSL certificate problem: Invalid certificate chain\n* Curl_http_done: called premature == 1\n* Closing connection 0\ncurl: (60) SSL certificate problem: Invalid certificate chain. ",
    "si-harps": "I'm getting an error when attempting to access the CDN from a Cordova application running on iOS 9.3. Does it sound like this is related?\n. ",
    "drnkwati": "I was expecting atleast those listed on the table here\nhttps://polyfill.io/v2/docs/features/\nBundle sizes have been stated. \nWe need those compiled atleast most developers polyfill due to ie issues\nThanks. So were is the build. I don't see download link to any of the minified or zipped files. Were are the links to those files. Or should we be searching on cdn. \nPlease just bundle a build or dist and place those links in this repository for easy accessibility.. I don't want to depend on the cdn. I want an ie8 minified to bundle with my project\nI want the app to be self contained with all required files.. That will be cool.. ",
    "skitterm": "Not sure if this is exactly what @drnkwati was wanting, but I'd love to have a downloadable, minified JS file with just the polyfills I need. This would assume I have a static list of polyfills I want, maybe the UI on the site would literally be a series of checkboxes for each of the polyfillable features (like Array.prototype.map) and clicking \"download\" would generate a .js file with just the checked polyfills (and each polyfill's license!) that I could self-host. Much like what jQuery UI does: http://jqueryui.com/download/\nThis would be excellent in settings where pinging an external CDN isn't possible (offline or intranet situations).\nRealize that that only works for a static list of polyfills that are known ahead of time, but I'd find that useful.. ",
    "caub": "I don't have Safari, but my coworker has Safari Version 10.0.1 (12602.2.14.0.7)\nand https://jsfiddle.net/aj4htd7r/4/ returns false, so there's an issue\nHe gave me his userAgent Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/602.2.14 (KHTML, like Gecko) Version/10.0.1 Safari/602.2.14 so it can be tested at: https://cdn.polyfill.io/v2/polyfill.js?ua=Mozilla/5.0%20(Macintosh;%20Intel%20Mac%20OS%20X%2010_12_1)%20AppleWebKit/602.2.14%20(KHTML,%20like%20Gecko)%20Version/10.0.1%20Safari/602.2.14 \nand indeed no fetch available, should I open a new issue?. Yes, but the bug (fetch not provided for safari 10.0.1) is happening in the production site. It's the same with qa.polyfill.io?ua=..., fetch is missing too. thanks, ok, will read the docs better. Just was just a suggestion, this polyfill is the main one for Object.entries/values, by the person who made those proposals, it's well supported probably like the one you did, but it saves time and worry to rely on it probably\nif you don't want it's ok, it makes sense too\nI'm less and less convinced it's needed too (it's just a bit inconsistent how you added Object.values as a getter but not Object.entries. Hi Jake,\nlocally the tests pass for me, until browserstack, but I have no keys for it.\nI don't see why it would fail with the change, unless Node doesn't exists\nps: Did you consider passing tests like web-platform tests like in jsdom? (by removing features before). Thanks, I did a way, not really beautiful (fallback to Element on ie8)\nmaybe polyfilling window.Node would be possible, but not easy\nalso _mutation is a global? couldn't we use module.exports there?\nfor web platform tests, I'll see, it's not easy because polyfill.io is not a DOM implementation, it just fills the holes, and browsers can be really different, so I guess browserstack is the best way. yes, I thought about checking .nodeType, etcc.. so ie8- don't expose those constructors, ok. ok, added Array.prototype.indexOf in dependencies\nfor replaceWith I think there are more checks to do, will see. Yes, sorry I figured\nin the spec those methods are on ParentNode but it's not exposed in window I think. @JakeChampion I added https://unpkg.com/abortcontroller-polyfill@1.2.1/dist/umd-polyfill.js (copy-pasted in polyfill.js) I'm not sure how the config.json install field would work. rebased. apparently no, it does nothing on chrome and the webplatform tests https://github.com/w3c/web-platform-tests/blob/master/dom/nodes/ChildNode-after.html#L14 allow it\nfor adding tests, could you point me in which folder please?. oh sorry I forgot tests are within each folder, bah for this 'helper' it doesn't matter so much\nfor .after, .before, and .replaceWith it'll need more tests. why not a simpler recursive approach?\njs\nfunction flat(a) {\n  return Array.isArray(a) ? a.reduce(function(b,c){ return b.concat(flat(c)); }, []) : a;\n}. oh fair enough\njs\nfunction flat(a, depth = 1) {\n  return Array.isArray(a) && depth > 0 ? a.reduce(function(b,c){ return b.concat(flat(c, depth-1)); }, []) : a;\n}\nbut your approach works for the empty slots cases, so better. ",
    "Ollie-w": "Hi Jake. Here's a bin. \nhttp://jsbin.com/puvikinotu/2/edit?html,js,output\nConsole error message: error Unable to get property 'contains' of undefined or null reference (line 3). ",
    "eboda": "Great, that was very fast! \ud83d\udc4d . ",
    "irmantaszenkus": "When could I expect for this fix to be merged and released?. ",
    "gustavpursche": "@JakeChampion When I wanted to fill out the Spec field, I discovered this actually isn't part of any Spec. FF, Chrome and Webkit just tries to help helpful. I guess that's a reason why .forEach() shouldn't go in here, right? The other ones are in the Spec.. I agree. I'll ask the flow people aswell why they put it in. Thanks!. @jakearchibald @JakeChampion Thanks for looking into this. I realized the last couple of days how little knowledge I have about these low-level Interfaces. I'll have to read a bit more about it, but I hope next week I can start working on it.. @amannn I closed it, because I had the feeling I was convinced that the specs differ. Also there is the difference between the specs and the browser realities. I'm not deep enough into this, to say what's the way to go. Feel free to open the issue(s) again, if you disagree.. @Loilo Thanks for clarification! \u2728 \n//cc @SiAdcock. @JakeChampion That sounds great, thank you! \u2764\ufe0f \nDo you wan't me to open a new issue with a better description based on your comment, or should I leave this one open?. ",
    "jakearchibald": "@JakeChampion \n\nI think we should avoid adding forEach since it is not in a specification\n\nhttps://heycam.github.io/webidl/#idl-iterable says any iterable interface should have forEach. However, I believe there were some libraries that used thing.map etc as a way of assuming \"This is an array, not a nodelist\", so browsers haven't added it.. FWIW, it also caught me out that iterable also adds forEach etc.. ",
    "amannn": "May I ask why this issue was closed? According to the linked spec above, a NodeList instance should have a forEach method \u2013 no? Also the flow PR was closed because of this reason.. Actually I also don't know much about specs. I just thought the consensus in this thread was that it should rather be added, therefore I wanted to ask.. Alright, great \u2013 thanks for the quick response!. ",
    "nlenkowski": "Just ran into this as well. I wrongly assumed that NodeList.forEach() would be polyfilled for IE10/11 and be safe to use. +1 for adding it, in the meantime the mdn polyfill works just fine.. ",
    "Sora2455": "Just to summarise the thread so far:\n\nNodeList is defined as iterable in the DOM Living Standard\nIterable is defined as having a foreach method in the Web IDL Candidate Recomendation\nAccording to MDN, the current versions of Edge, Chrome, Firefox, Opera and Safari all support foreach on Nodelist (at the time of writing).\n\nAs this is such an easy thing to polyfill, I say yes, definitely add it.. ",
    "cferdinandi": "So.... it's been almost a year. I see the polyfill for this in the source code, but I'm able to get it to load in any way: https://github.com/Financial-Times/polyfill-service/tree/master/packages/polyfill-library/polyfills/NodeList/prototype/forEach\nAm I missing something?. I am unable to make it actually load, and it's not listed in the features list at polyfill.io. Am I missing something?. Ah... forgive me. I have no idea how this all works under the hood, and the docs don't make it particularly clear.\nDo you/does anyone know when the next polyfill-service release will be?. @agriffis Cool trick! Is there a way to get just a list of the defaults for v3? I'm less concerned with the differences and more interested in what's included out-of-the-box.. Perfect, thanks!. ",
    "michaelpumo": "Any news on getting NodeList.prototype.forEach working? I don't see any mention of it in the API docs. \nSeems kind of crazy that modern browsers all support this, yet we're arguing whether to add it in? As was previously discussed NodeList is iterable, so it should have a forEach...?. ",
    "Konrud": "@JakeChampion  are you run in on Linux or Windows?. I've tried it today on Windows 7 IE11 - it gives me: \"SCRIPT5009: 'IntersectionObserver' is undefined\". @JakeChampion still doesn't work.\nhttps://jsfiddle.net/p44j37f5/3/. ",
    "ahmadnassri": "@JakeChampion this is something I'd wanna work on, where do you suggest I can start?. ",
    "brad-jones": "Something I knocked up, very rough and dirty but with some polish might be useful.\nhttps://gist.github.com/brad-jones/2f9b9bf0d230ce916960eac933f9da36\nBasically the idea would be to generate a polyfill.io URL based on a supplied browserslist config.. ",
    "Garbanas": "Hey @JakeChampion, testing would only work in some browsers since I'd have to trigger a custom KeyboardEvent. I'll add some tests later and see how that works out.. This will be fixed by #1347. ",
    "WebReflection": "Do you want me to test that in JavaScript the Constructor.prototype.method = function () {} works?\nWhat would be the purpose of the test at all?. I don't understand.\nYou have Document.prototype.append = inside the Element polyfill and zero test about it, but you want me to test that my change is covered?\nWhere is the append test for Document then?\nThe append is part of ParentNode interface and there's no such thing in this repository.\nAll I can do that makes sense in terms of regression is chaging this line:\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Element/prototype/append/tests.js#L11\nAnd use element = document.createDocumentFragment(); instead so that this line covers .append for DocumentFragment.prototype and the rest covers .append for Element.prototype.\nWould that work?\nIf not, there's a need for a refactoring about ParentNode, to change tests for Document.prototype.append too (which I've no idea why is there in the first place) and eventually copy and paste the same done for Document on a DocumentFragment folder and re-do same Element test in there but I'm afraid I won't have time to do this, I've PR'd this to patch your broken polyfill.. > It looks like this is failing on some browsers:\nBecause in those cases you need a polyfill upfront. There is no global DocumentFragment so you have to create one via this.DocumentFragment = document.createDocumentFragment().constructor.\nBut that means, like I'v esaid before, a whole new folder for DocumentFragment and I'm not familiar with your repo and unfortunately I won't have time to fix all these.\nCan you help here improving the missing DocumentFragment folder? I'm sure it'll take nothing for you, then I can re-file a PR on top of that folder with the prototype/append logic.\nIn such case you can close this and please let me know when the rest has been fixed.\nThank you.\n. The poly for DocumentFragment looks ok, but I have no idea what's the issue with IE7.\nI've also no idea how to test IE7 because not even Microsoft releases VM targeting IE7.\nHowever, I believe IE7 was broken before this PR and I wonder, if that's the case, why it's now a concern.\nOut of curiosity, since you have more data than me: who on earth is still using IE7 and why would you patch it instead of letting it die?. So, I am going to close this pull request and eventually create a new one.. This is DocumentFragment append, which doesn't inherit from Element.\nOn Tue, Aug 22, 2017 at 7:20 PM, Cyril Auburtin notifications@github.com\nwrote:\n\nisn't it redundant with #1269\nhttps://github.com/Financial-Times/polyfill-service/pull/1269 ?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/pull/1272#issuecomment-324110285,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAFO9eFkLIjZvkmSbaiT3FGrpqpoWeltks5saxvXgaJpZM4O-SHX\n.\n. 2.5 but only 1/5 of that looks like IE7 ... I don't think the world should put any effort to support less than IE9 in 2017, nothing would work there anyway, unless you write code like it's 1999 and if you do, I'm sorry to hear that, no polyfill can save you.\n\nThanks for sharing the graph though, interesting and terrifying at the same time.. ",
    "davidensinger": "Hi, I have this exact issue with //# sourceMappingURL=Intl.min.js.map failing on Safari 9.x and it unfortunately appears to persist, despite #1283.\nTo reproduce: https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en&flags=always\nIf you search within that file you\u2019ll find the offending source map comment which unfortunately gets evaluated by Safari 9.x. Since the source map isn\u2019t found it kills any subsequent JS.\nPlease let me know if you need any more information from me and thank you for your efforts in maintaining such a great service!. ",
    "bsangster-classy": "@JakeChampion I have also confirmed that this is not fixed on either prod or the current QA build:\ncurl 'https://qa.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en' -H 'Accept-Language: en-US,en;q=0.8' -H 'Upgrade-Insecure-Requests: 1' -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11) AppleWebKit/602.1.13 (KHTML, like Gecko) Version/9.1.8 Safari/602.1.13' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8' -H 'Cache-Control: max-age=0' -H 'Connection: keep-alive' | grep \"source\"\nI hacked around it a few months ago\u00a0on our end, but figured you might want to know.\nI peeked at your unit test briefly, and suspect that the reason it isn't failing is because you aren't specifying the Safari 9 UA and/or aren't asking for Intl. Did you check that the test failed before your fix was added?. ",
    "aaronjensen": "@JakeChampion https://github.com/Financial-Times/polyfill-service/pull/1253. Thanks for merging this @JakeChampion. Do you know if polyfill.io is automatically updated? It looks like it's still serving the old version unless i'm mistaken. Thanks!. Thanks!. Thanks @JakeChampion. FWIW, we have been seeing intermittent issues for about 15 days. We know this because we started seeing errors from IE11 that should not be there if it was properly polyfilled from a handful of users.. @JakeChampion we're still seeing occasional errors. They're being reported from user's browsers so I don't actually know how or if the polyfill service is failing to serve a file, but it still is. Is it possible that there are still 503s being served?. ",
    "viperfx07": "nvm, it's the browserstack that has issue. closing it. ",
    "fooloomanzoo": "same for me. @JakeChampion \nUserAgent: Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36 OPR/47.0.2631.71\nflags=gated does not change it. There seems to be something missing in missing-feature-detection, at least for Document, because it looks for a property in prototype. Such errors can stop executing scripts and the polyfill replacement too.\n\n. @JakeChampion \nThe polyfill for Element.prototype.after also includes the line:\njavascript\nDocument.prototype.after = Element.prototype.after = ...\nAlthough in its dependencies there is the entry for Document, it is as you can see, not loaded before. \nNevertheless it also would not be neccessary to load it for Opera because in the document-scope it is available (because Opera 47 is using chromium 60. The specifications are partly wrong or incomplete) :\n\nOn the other hand it might be senseful to specify for a polyfill in which context it should be applicable. For example if you are excecuting a script as a webworker then this and self are of \"DedicatedWorkerGlobalScope\":\n\nin comparison to the window-scope where they are of \"Window\":\n\nGoing by the constructor's name might not be the safest way to detect the scope, but there are Polyfills that are not applicable for a webworker (like for Element or Document) and there are some that are (like for String, Number or Promise).\n. @JakeChampion Since I personally doesn't have a premium plan on any online browser test suite provider, this is hard to do for me to test for all older releases. I made only the very obvious changes. Opera implements chromium and webkit directly and without changes by version number, so that a feature that is implemented  for example in chromium 54 is implemented in Opera 41 according to their release history. Some of the noted version numbers in the polyfill configurations were also larger than Opera's latest version number. These are just very obvious changes.. @JakeChampion Opera definitely references in its UserAgent the chromium version it is using.. Or in other chromium based browser like Vivaldi\n\n. @JakeChampion Would it be necessary to remove or to update the version numbers in the Polyfill configurations, do they superimpose the alias version numbers?. ",
    "JCofman": "@JakeChampion thanks a lot for your response \ud83d\udc4d . ",
    "turadg": "@JakeChampion is there anything this needs before it can be reviewed?. Cool. Like that?. ",
    "amarinov": "@JakeChampion @turadg I don't think Edge supports it:\n\nAnd the polyfill does work for Edge:\n\n. And btw it is supported in Safari 11.1 and tests are passed:\n\n. Made a PR about it: #1704 . The tests use arrays, not nodelists. If the polyfill changes and is broken, the tests will continue to pass successfully. I believe the tests shouldn't be bound to what the implementation is.. It isn't served for Edge 16.16299 too. The documentation is wrong stating that it's natively supported in Edge 15.\nUser Agent string:\n\nMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299\n\n. Hey @JakeChampion ! Is there any progress on this?. ",
    "mcshaz": "some approaches to testing and a simple fix are here https://github.com/Financial-Times/polyfill-service/compare/master...mcshaz:master. 2 commits - the first with the tests that fail in IE11 and the second with the code changed to use forEach rather than entries/values for map & set instances.\n. I think this issue should probably be merged with #1209  although I don't believe the Set polyfill is used because IE11 has a Set constructor, but the object produced doesn't adhere to the iterable pattern - the code in the pull request related to this solution is a workaround using IE11s native set which does have a foreach method which does iterate through undefined values. . I have neatened things a little further - hopefully the changes are now a little more obvious. . Thank you for running the tests @JakeChampion I think it should be working for these browsers now, although in truth I only have emulation to rely on rather than virtual machines. \nOn the comment about the iterator obtained by calling next() - the code only looks for a value on the iterator if done === false, if done ===true the function stops iterating, and if done is non-boolean the whole function returns false (does not implement iterator). \nAs for the link - I am no expert on the spec, but I am unsure whether I can interpret \"The IteratorResult interface includes the properties listed in Table 58:\" as a direct property or whether an inherited property is OK - you have far more experience with the spec than I and I don't feel at all strongly whether to test 'done' in iterator or iterator.hasOwnProperty('done')\nI think it should be working for these browsers now, although in truth I only have emulation to rely on rather than virtual machines. \nAs for the link - I am no expert on the spec, but I am unsure whether I can interpret \"The IteratorResult interface includes the properties listed in Table 58:\" as a direct property or whether an inherited property is OK - you have far more experience with the spec than I and I don't feel at all strongly whether to test 'done' in iterator or iterator.hasOwnProperty('done'). The map and the map iterator are both tested as before (and a 3rd test is added for the \"map\" function) - this is simply the way the dif makes it look. Prior to the tests (and this is exactly the same for sets) the test only tested using the 'map' variable if the Map.prototype contained a 'entries' method (although it erroneously actually used the 'values' method i.e. NOT the method whos existance was tested for). Now all browsers which have a window.Map object are tested against the map itself, and only those who can produce a map iterator via the values function are tested against the map iterator.\nBefore changes to tests:\nif ('Map' in window && 'entries' in Map.prototype) {\n\n    map = new Map();\n    map.set(1,2);\n    map.set(3,4);\n    mapIterator = map.values();\n\n    if (typeof mapIterator.next === 'function') {\n\n        // Test map iterable\n        proclaim.deepEqual(Array.from(mapIterator), [2,4]);\n\n        it('can convert from Map', function () {\n            proclaim.deepEqual(Array.from(map), [[1,2],[3,4]]);\n        });\n    }\n}\n\nafter changes to test:\nif ('Map' in window) {\n    map = new Map();\n    map.set(1,2);\n    map.set(3,4);\n    if (map.values) {\n        mapIterator = map.values();\n\n        if (typeof mapIterator.next === 'function') {\n\n            // Test map iterable\n            proclaim.deepEqual(Array.from(mapIterator), [2,4]);\n        }\n    }\n\n    it('can convert from Map', function () {\n        proclaim.deepEqual(Array.from(map), [[1,2],[3,4]]);\n        proclaim.deepEqual(Array.from(map, returnArgs), [[[1,2],0],[[3,4],1]]);\n    });\n}.\n",
    "marionebl": "Doing this without lerna is perfectly possible - doing the publishing and dep management by hand won't be hard as long as only two packages are involved. I'll submit a PR showcasing this later today. @SebastianS90 This already underway via https://github.com/Financial-Times/polyfill-service/pull/1267. Hey @JakeChampion, can I help this along in some way?. @JakeChampion I'd be happy to help this along with additional work. Anything you need some help with?. Sorry to nag - scanning through my long-living PRs and found this. I'd love to land this at some point. Is there anything I can do to help?. Hey there, I'll make an effort to port the changes that happened in the meantime to @marionebl/polyfill-service, which would enable a new merge conflict free PR. Would that increase the chance to get this merged?. @JakeChampion I resolved the merge conflicts that cropped up in the meantime as best as I could.\nI guess there are some todos I can't solve due to the circleci being intransparet to me. (Any chance for me to see the build logs?). @JakeChampion Any chance we can land this in say the next 3 months? I'd go with a different approach to extract the polyfills if not. . Closing this as I don't see a real chance for this type of change to land. Will create a distinct project to extract and publish the polyfill-library from this one. \n. I'd move them to the sub manifests:\nmain ist already in polyfill-library.\nbin should be added to polyfill-service. ",
    "SebastianS90": "As owner of SebastianS90/webpack-polyfill-injector which uses polyfills from this amazing project here, I also want to advocate for splitting the package into two parts where one only contains the polyfills and the other all code and dependencies that are required to run the polyfill-service webserver.. As author of webpack-polyfill-injector I was hoping for this to get merged :cry:\n@marionebl can you please comment here when you created a separate project for polyfill-library, or tag me somewhere in the new project? I can also offer some help to maintain the library project.\nIf have two ideas in mind how the library project could be done without too much manual work:\nIdea 1: Extracting polyfills into separate project\nThe new project ships the polyfill sources (i.e. the polyfills folder here). A daily cronjob could automatically check for new versions of polyfill-service, copy over the polyfills, run the build script and publish a new version if it succeeds. If the build fails, a team member is notified to manually update the library project (probably there was a dependency added in polyfill-service that should also be added to polyfill-library)\nIdea 2: No polyfills in the library project itself, only published in binary form\nThis idea somehow cheats npm. Add polyfill-service as devDependency locked to the current version. The build script for the library just copies the __dist folder from polyfill-service to the current working dir and the files there are uploaded when doing npm publish. When someone installs polyfill-library, then the already compiled __dist folder is downloaded from npm, but neither polyfill-service nor all its dependencies are installed because polyfill-service is only a devDependency of polyfill-library.\nThe update process here would look as follows: Whenever there is a new version of polyfill-service, we need to change package.json in polyfill-library to increment its own version number and update the devDependency for polyfill-service to the new version. No problems are expected here, except when polyfill-service decides to rename the __dist folder.\nIn case you decide to host the polyfill-library on GitLab.com, then you can use their pipeline schedules to automatically run a daily tasks which updates the project.\nAs I said, I'd be happy to help you there, I might also be able to do it alone. But I don't want to steal your general idea or the polyfill-library project name. Just let me know what you think.. The same problem occurs when installing polyfill-service:\n$ yarn add polyfill-service\nyarn add v1.6.0\nerror polyfill-service@3.25.1: The engine \"node\" is incompatible with this module. Expected version \"6.11.1 - 9\".\nerror Found incompatible module. ",
    "LeoIannacone": "I'm using defaults TBH. Thanks!\nHow can I add all the polyfill in one require ?. ",
    "romainmenke": "Any news on this? If this is not the right channel to report issues with polyfill.io then please tell how to get in touch with someone who can help me resolve this.. Thank you for resolving this quickly!\nProbably being inpatient ( :-) ) but does this require cache purging before it will take effect or just waiting to be deployed?\nWill update if we see this taking effect.. ",
    "bbuhler": "I added Array.prototype.find, since it's also missing in Chrome 45.0.2423.0.\nhttps://cdn.polyfill.io/v2/polyfill.js?features=Array.prototype.find&ua=Mozilla/5.0%20(Windows%20NT%206.1;%20WOW64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/45.0.2423.0%20Safari/537.36. @JakeChampion First I saw errors in our TrackJS logs. Then I installed above mentioned Chrome version in a virtual machine and tried my self.\nMaybe they are supported in a later (patch-)version of Chrome 45.. ",
    "adc-mhaugen": "Thanks @JakeChampion, do you recommend that it use parentNode always, or only when tagName === 'svg'?. ",
    "gvonkoss": "merp nevermind\n. Just out of curiosity, does this not get similar comments as the rest of them?. Does this need to be declared as a variable?. ",
    "trusktr": "To that end, is it worth having this polyfilled if it doesn't do anything besides possibly introduce unexpected errors when instanceof checks don't work as expected?\nIf it weren't polyfilled, then initializtion code using Symbol.hasInstance would fail sooner and in the right place, as a stronger indication that the environment running the code cannot work properly with the given code.. For my own use case, I'm using Rollup + Bubl\u00e9.\nBubl\u00e9 doesn't polyfill anything, it only transpiles language features. So Bubl\u00e9 leaves stuff like instanceof in the code and does not add a Symbol variable to global.\nSo, what I'll do in my project is replace instanceof occurrences with a custom function that uses Symbol.hasInstance.. > always use the abstraction\nCool, yep, that's what I'll do.\n\nThese Symbols can be used without the special syntax\n\nIn what way can Symbol.hasInstance be used without the special syntax, for example? In cases like mine where I'll use the abstraction instead of the literal?. \ud83d\udc4d Good idea! It works well if the RHS is constant, and in my cases it is. I might just make an instanceOf(LHS, RHS) helper function for readability.. ",
    "75lb": "Is this live yet? When i request Array.from in IE11 like so:\nhtml\n<script src=\"https://cdn.polyfill.io/v2/polyfill.js?features=Array.from\"></script>\nThe polyfill code returned looks old, i.e. it doesn't support default iterators (@@iterator) as mentioned in #1251.\n```js\n/ Polyfill service v3.21.3\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: ie/11.0.0\n * Features requested: Array.from\n * \n * - Array.from, License: CC0 /\n(function(undefined) {\n// Array.from\n// Wrapped in IIFE to prevent leaking to global scope.\n(function () {\n    //same as instanceOf, but works through iframes\n    function appWideInstanceOf(obj, typeName){\n        return Object.prototype.toString.call(obj) === '[object ' + typeName + ']'\n    }\n    function parseIterable (arraylike) {\n        //worth considering the performance bypass in the line below\n        //if (appWideInstanceOf(arraylike,'Array')){ return arraylike.slice(); }\n        var done = false;\n        var iterableResponse;\n        var tempArray = [];\n    // if the iterable doesn't have next;\n    // it is an iterable if 'next' is a function but it has not been defined on\n    // the object itself.\n    if (typeof arraylike.next === 'function') {\n        while (!done) {\n            iterableResponse = arraylike.next();\n            if (typeof iterableResponse.done === 'boolean') {\n                if (iterableResponse.done === true) {\n                    done = true;\n                    break;\n                }\n                //was using hasownProperty but changed as 'value' property might be inherited through prototype chain and could still be a valid iterable response\n                if ('value' in iterableResponse){ \n                    tempArray.push(iterableResponse.value);\n                } else {\n                    break;\n                }\n            } else {\n                // it does not conform to the iterable pattern\n                break;\n            }\n        }\n    }\n\n    if (done) {\n        return tempArray;\n    } else {\n        // something went wrong return false;\n        return false;\n    }\n}\n\nfunction iterateForEach(arraylike, asKeyValArrays) {\n    if (typeof arraylike.forEach !== 'function') {\n        return false;\n    }\n    var tempArray = [];\n    var addEl = asKeyValArrays\n        ? function (val, key) { tempArray.push([key, val]); } \n        : function (val) { tempArray.push(val); };\n    arraylike.forEach(addEl);\n    return tempArray;\n}\n\nObject.defineProperty(Array, 'from', {\n    configurable: true,\n    value: function from(source) {\n        // handle non-objects\n        if (source === undefined || source === null) {\n            throw new TypeError(source + ' is not an object');\n        }\n\n        // handle maps that are not functions\n        if (1 in arguments && typeof arguments[1] !== 'function') {\n            throw new TypeError(arguments[1] + ' is not a function');\n        }\n\n        var arraylike = typeof source === 'string' ? source.split('') : Object(source);\n        var map = arguments[1];\n        var scope = arguments[2];\n        var array = [];\n        var index = -1;\n        var length = Math.min(Math.max(Number(arraylike.length) || 0, 0), 9007199254740991);\n        var value;\n        // variables for rebuilding array from iterator\n        var arrayFromIterable = parseIterable(arraylike);\n\n        //if it is a Map or a Set then handle them appropriately\n        if (!arrayFromIterable) {\n            if (appWideInstanceOf(arraylike,'Map')) {\n                arrayFromIterable = iterateForEach(arraylike, true);\n            } else if (appWideInstanceOf(arraylike,'Set')) {\n                arrayFromIterable = iterateForEach(arraylike);\n            }\n        }\n\n        if (arrayFromIterable) {\n            arraylike = arrayFromIterable;\n            length = arraylike.length;\n        }\n\n        while (++index < length) {\n                value = arraylike[index];\n\n                array[index] = map ? map.call(scope, value, index) : value;\n        }\n\n        array.length = length;\n\n        return array;\n    },\n    writable: true\n});\n\n}());\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```. will do, thanks \ud83d\udc4d . ",
    "devuxer": "FYI, this did not fix #1209.. ",
    "dotbear": "My bad - totally blanked this was the wrong repo :snooze:. God damnit I always mess this up XD My bad!. ",
    "JSteunou": "Could this fix be in 3.21.1 instead of 3.22 ?\nIt is really a major fix for Map that I searched for a couple days because Map was totally broken in IE11 and make the usage of library like https://github.com/bendc/animateplus totally impossible. Any news on this @JakeChampion ? Still blocked on polyfill-service deploiement because of this critical Map issue :/ .  :+1: . @green-arrow  3.22 was shipped with the fix. see #1342 ;). This should be closed. I understand better. I was searching through the history of package.json but see nothing.\nThank you for the fast release!. Hu?! Why the censorship? Is it forbidden to ask why you rewrite those polyfills instead of reusing existing one, like you do for a lot of others polyfills?. I think it's on purpose. You have to npm install && npm run build. Yep, I did check support on MDN too, but I'm still in the dark for android, bb, opera mobile & samsung mobile. Ho my... IE7 ! This far ?! I will try to find one. Ok I think I find why, IE7 does not support Element.prototype.setAttribute. Are you sure to support IE7, there is even no polyfill for Element.prototype.setAttribute and Windows XP last browser is IE8.\nI can rewrite my tests for this,  setAttribute is only use for the tests but meh... IE7.... @JakeChampion friendly ping ;)\nshould I ignore IE7 support or add a setAttribute polyfill?. Damn... even after your changes, still the same error?. @JakeChampion could review this one please? I would love to see it in the next release ;) . Good call!. Thank you, I couldn't see nothing with that enormous diff . @JakeChampion This polyfill now match last official release (0.5.0) If you have some time to review it. Incoming... meanwhile could you review my other PR please? Some get stuck on CI. maybe related to #1390 ?. Ho nice you're right. Ok I can add it back. ",
    "gaearon": "React 16 was released yesterday and relies on this fix to work. . Yeah, I didn\u2019t meant to be pushing :-). Just letting you know.. Does this work for case like\njs\nx.set(42, 'hi')\nx.set(43, 'bye')\nx.delete(43)\n(edit: typo)\n?\nMy intuition is it would have the same problem, calling the callback extra time at the very end because of the deleted item. size wouldn't be 0 but it would still fail.. Apologies for dumb question but could you help me understand why it also works? Since the new check is for .size I would expect the same bug to manifest itself if the last item is marked with undef sentinel, but the map is not empty.. I think I understand now. If it's the last one, you decrement size. If it's not, then next() will skip the missing items next time.. ",
    "green-arrow": "@JakeChampion - any update on if there were any issues discovered in QA?. ",
    "jar-miracle": "It responds again now.. ",
    "cherniavskii": "Just read source code, look like it's already present as part of URL polyfill, isn't it?. Thanks! :). ",
    "Gidgidonihah": "I realize this is closed, but it would nice to have this information on the features list. ",
    "TimVevida": "It has been two months since I added this issue, any progress on this?. Hello Jake, thanks for the patch. Would you mind re-opening this issue until the patch is approved?. ",
    "robdodson": "Nice work @JakeChampion :)\nDoes this mean classList should eventually show up as supported in IE10-11 on polyfill.io or is there still more work to be done?. Wonderful! Thanks for working on this @JakeChampion :). ",
    "matzimowski": "\nI ran tests and unfortunately they failed.\nI checked polyfill repo for updates, but unfortunately there are none (https://github.com/inexorabletash/polyfill/blob/master/url.js).\n. ",
    "worsnupd": "@JakeChampion I will start working on this.. ",
    "jwerardi": "Sure no problem! Makes sense, thanks for the timely response. I'll create a new issue after following your steps. \nThanks for the product by the way, it's a real life saver. . ",
    "stsvilik": "Just in case I missed something in this PR (I'm not 100% sure SVGElement inherits from Element), one issue I ran through when trying to polyfill this myself is that SVGElement.className is not a String like on regular Element its an Object, so I had to revert to reading classes from attribute instead. I guess what I'm saying is make sure you test it with real SVG nodes :). ",
    "Rabadash8820": "I believe I am still experiencing this issue.  If I use any of the following URIs, then the classList polyfill is not downloaded for IE11, and I get errors when trying to work with classList on SVG elements.\n\nhttps://cdn.polyfill.io/v2/polyfill.js?features=default&flags=gated\nhttps://cdn.polyfill.io/v2/polyfill.js?features=default,Element.prototype.classList&flags=gated\n\nThe following URI does download the polyfill, and has been my only workaround thus far.\n- https://cdn.polyfill.io/v2/polyfill.js?features=default,Element.prototype.classList|always&flags=gated. ",
    "JamesSingleton": "Hi @kdzwinel, any idea on what is causing this? The issue is not present in Edge, Chrome or FireFox. For the time being, we have found a work around by using https://cdn.polyfill.io/v2/polyfill.js?excludes=Array.from. By no means is this an absolute fix, and if you need Array.from, use https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from. @JakeChampion interesting that JSBin shows no error, but when running it on our site it shows an issue. Furthermore, it is interesting that @kdzwinel is seeing the same error I described in other OS/browsers as well, so I am not entirely sure what is going on.. Awesome @kdzwinel! I will take a look at it today and let you know! Thank you!. @kdzwinel and @JakeChampion,\nI no longer get the error on that JSBin you provided, not sure if you guys fixed something or Google Ads fixed something.. @JakeChampion and @kdzwinel, no problem and thank you for looking into this!. ",
    "gabemeola": "Similar issue to: https://github.com/Financial-Times/polyfill-service/issues/1363. I believe prepublish automatically runs on anpm install. Having the same issue with yarn as well.. My workaround with yarn is to use a postinstall script my package.json.\n\"postinstall\": \"cd node_modules/polyfill-service && npm run build\",. The library package is also up on npm: https://github.com/Financial-Times/polyfill-service/tree/master/packages/polyfill-library. Closing in favor: https://github.com/Financial-Times/polyfill-library/pull/5. ",
    "philipstanislaus": "I just investigated a bit further: \n\nThe package has a .npmignore which excludes the /polyfills/__dist folder. This behaviour did not change since v3.22, so it is not the source of the missing files.\nThe package includes a prepublish hook, which does run automatically after a npm install (like @gabemeola conjectured above),  but apparently does not.\n\nI am not sure why the hook runs in 3.21, but not in 3.22. . Thanks for your very fast response and fix! \ud83c\udf89 . ",
    "jcubic": "Nevermind of use var sticky = ToBoolean(Get(R, 'sticky')); on master. Why it have !!sticky; and not !!r.sticky?. ",
    "kapouer": "I'd advise to use https://www.npmjs.com/package/document-register-element, it has proven much more stable and backward-compatible here.\nBut the situation might have changed with recent developments...\nAlso for documentation:\nhttps://hackernoon.com/extending-built-in-elements-9dce404b75b4\nhttps://github.com/WebReflection/built-in-element\nHaving a Custom Elements v1 + built-in elements polyfill makes a lot of sense now.. ",
    "0xR": "This PR seems old, but useful. Can we get an update on this? Is this going to be merged or not?\nIs this project abandoned / looking for maintainers?. ",
    "benib": "@JakeChampion I do not have a Edge 15 here to test. And the virtual machines on modern.ie have Edge 16 only (which has the bug already fixed and was released and rolled out mid October). So I am not really able to test whether the polyfill solves the bug.\nFrom my understanding of https://github.com/scottjehl/picturefill/blob/master/src/picturefill.js the polyfill actually tests for srcset support, so it would not do something in Edge 13/14/15.\nAlso from reading through the bug report https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7778808/ it looks like it's pretty hard to reproduce.\nI am not sure how to move on with this information.. ",
    "paradoxxxzero": "Not that I think this kind of PR really need a CLA, I did it.. ",
    "shauns": "Thanks for approving. Worth mentioning that the unsupported use case is what babel uses for inheritance. ",
    "mscalora": "\nWhich browser and version was being used? \n\nVerified incorrect behaviour: \n\nGoogle Chrome 62.0.3202.94\nFirefox 57.0\nVersion 11.0.1\n\n\nWhat is the exact polyfill.io url being loaded?\n\n//cdn.polyfill.io/v2/polyfill.js?features=Array.prototype.includes,modernizr:es5array|always\n\nCould you be create a test case\n\nJSBin: https://jsbin.com/bocegu/edit?html,output\nMy test page: https://test.worldtable.co/polyfill/polyfill-production-test.html with a working version using my patch: https://test.worldtable.co/polyfill/polyfill-patched-test.html\n-Mike. ",
    "HenrikJoreteg": "@JakeChampion I just tried tacking on &ua=chrome/41 to the query string and Googlebot works great. I wonder if perhaps aliasing any user agent containing Googlebot to chrome 41 would be sufficient. \nI'd much rather load too many polyfills than not enough. Not loading polyfills for Googlebot is quite a bug for anyone expecting google to crawl their JS rendered content.\nAs a temporary stopgap it seems worth addressing even if rather bluntly :). ",
    "TehShrike": "I switched to qa.polyfill.io and my site started rendering to googlebot! \ud83d\udc4d . I'm not familiar with the polyfill.io deployment schedule - when will this get deployed?. Sorry, I just checked the readme - I'll watch the Twitter account for notifications on 3.25.. That wouldn't work with the polyfill service because it would use user-agent detection to determine that the polyfill didn't need to be shipped to the browser.. Right, but I don't want to download the polyfill in browsers like Firefox where the native version works just fine.\nCheck the issue title - this is a very specific feature request to force a polyfill to be included in a specific browser where it normally wouldn't be included.. @rlightner I believe that is only true when using the gated flag.  https://polyfill.io/v2/docs/api. Yes - but only because you included the gated flag in the parameters.. (For what it's worth, this has nothing to do with my original request). Huh, I wonder if that's a bug, or if the documentation is wrong.\nSure, I would have no problem manually deleting the original implementation in Chrome.\nAll that this feature request is requesting is the ability to say \"always ship the polyfill in Chrome, but default behavior for the other browsers.\"  Nothing about gating behavior.. Hah!  I assume he means https://github.com/Financial-Times/polyfill-service/pull/1710. ",
    "bisubus": "@JSteunou It looks like it isn't because linked issue is specific to Array.from and is solved by proper polyfill order http://plnkr.co/edit/dDMlzFS6tiEeevyVsxwS , as explained in https://github.com/Financial-Times/polyfill-service/issues/1390#issuecomment-346025532 . But thanks for the notification, that's the important one.. It looks like it's both #1411 and #1413. I guess the issue will be solved once they are merged.. ",
    "SCullman": "Looks like the detection is wrong.\n```\n/ Polyfill service v3.24.0\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: ie/11.0.0\n * Features requested: Object.getPrototypeOf\n *  /\n/ No polyfills found for current settings /\n```. The detection is correct, as IE11 implements Object.getPrototypeOf\nEven the error is correct, at least to https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/getPrototypeOf\n:-(. ",
    "testerez": "Oh makes sense thanks!\nI'm just curious to know how you decide what's part or the default polyfills or not.. Thanks for the link. I feel like Object.values kind of matches the criterias to be part of the default polyfills:\n\nIt's very small: https://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Object/values/polyfill.js\nIt's supported by all major browsers except IE: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_objects/Object/values\nI can't say if the demand is very high. At least there is me :). @AlexLaforge support for .value is no so bad:\n\n\nAnd yes it's easy to replace with Object.keys(o).map(...) but it also means that it's pretty easy to polyfill...\n. ",
    "AlexLaforge": ".values is unsupported in many browsers - you can use .map to get an array of all the values:\nvar vals = Object.keys(countries).map(function(key) {\n    return countries[key];\n});\nSee MDN doc: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values or Official doc: https://tc39.github.io/ecma262/#sec-object.values\n. ",
    "murdoch": "Thanks @JakeChampion - I'll email ghostery and ask them :+1: . Hi @alonnberg here is their response:\n```\nHi Stephen, thanks for reaching out.  We've had a few developers contact us about Polyfill.io in the past as well. What we did then was move Polyfill to our Essential category, which is our admittedly imperfect way of telling users that this is a script required by the website.  Additionally, we introduced a Smart Blocking feature in Ghostery v8 intended for \"set-and-forget\" users, a feature of which keeps trackers in the Essential category unblocked.  However, our \"power users\" are more likely to forgo that setting and block everything, including Essentials.  \nUnfortunately, Polyfill.io is a third-party script collecting user data, including IP information.  Ghostery gives our users the choice as to whether they would like that information to be shared.  Many of them would rather see a broken page then have their data sent to a third party. \nI wish I had a better solution for you in this case.  Have you considered switching to a transpiler like Babel, instead of polyfills? \n```\nI understand (and agree with) ghostery's point on this matter. \nI imagine polyfill.io probably needs to stop logging people's IP addresses to get this reversed.\nFWIW, the privacy policy for polyfill.io states:\nThe information we retain cannot identify you.\nThey obviously weren't expecting any developers to read it!\n. ",
    "alonnberg": "What did Ghostery say?. @JakeChampion: What!?\nThe policy you referred too says that the IP is not logged. \n\nWe then retain only the following information: the domain of the web page which has made the request to the Service; the user agent string for your browser; the set of polyfills that were requested by the web page.\n\nAnd now you say you log the country of the IP. It do sound like Ghosterys choice of blocking you is even more correct when your privacy policy apparently only tells part of the truth...\n. ",
    "oyeanuj": "@JakeChampion @triblondon thank you for the updates, appreciate that! please do keep us posted as you contact Ghostery!. ",
    "njbotkin": "I think this is another instance of #875.  I ran into this on Android 4.4.3 webview.  I added the gated flag, which kept the unnecessary Element polyfill from executing.  Try\nhttp://cdn.polyfill.io/v2/polyfill.min.js?features=default|gated,Array.prototype.includes,Array.prototype.find,Element.prototype.remove\nor\nhttp://cdn.polyfill.io/v2/polyfill.min.js?features=default,Array.prototype.includes,Array.prototype.find,Element.prototype.remove&flags=gated. My environment:\n\nNode.js version: v9.2.0\nnpm version: 5.5.1\nUbuntu version: Ubuntu 16.04.2 LTS\nKernel version: Linux Exordium 4.4.0-43-Microsoft #1-Microsoft Wed Dec 31 14:42:53 PST 2014 x86_64 x86_64 x86_64 GNU/Linux\nPython version: Python 2.7.12\ngcc version: (Ubuntu 5.4.0-6ubuntu1~16.04.5) 5.4.0 20160609\n\nMy kernel version looks funky because I'm running Windows Subsystem for Linux.. Got it to work.  I needed to run npm i in\n\nnode_modules/iltorb\nnode_modules/node-zopfli\n\nWhich compiled their bindings.. Should this have happened automatically, or should this extra build step be added to the documentation?. Huh.  I just cleared out my node_modules, reinstalled with node-pre-gyp globally installed, and everything worked great.  Then I cleared out node_modules again, reinstalled with node-pre-gyp uninstalled, and everything worked again.  Strange.\nHowever, both times, all attempts to fetch binaries failed, no attempt appears to have been made to fetch oniguruma's binaries:\nnode-pre-gyp ERR! Tried to download(403): https://node-zopfli.s3.amazonaws.com/Release/zopfli-v1.4.0-node-v59-linux-x64.tar.gz\nnode-pre-gyp ERR! Pre-built binaries not found for node-zopfli@1.4.0 and node@9.2.0 (node-v59 ABI) (falling back to source compile with node-gyp)\n...\nprebuild-install http request GET https://github.com/MayhemYDG/iltorb/releases/download/v1.3.10/iltorb-v1.3.10-node-v59-linux-x64.tar.gz\nprebuild-install http 404 https://github.com/MayhemYDG/iltorb/releases/download/v1.3.10/iltorb-v1.3.10-node-v59-linux-x64.tar.gz\nprebuild-install WARN install No prebuilt binaries found (target=9.2.0 runtime=node arch=x64 platform=linux)\n...\nprebuild-install http request GET https://github.com/MayhemYDG/iltorb/releases/download/v2.0.1/iltorb-v2.0.1-node-v59-linux-x64.tar.gz\nprebuild-install http 404 https://github.com/MayhemYDG/iltorb/releases/download/v2.0.1/iltorb-v2.0.1-node-v59-linux-x64.tar.gz\nprebuild-install WARN install No prebuilt binaries found (target=9.2.0 runtime=node arch=x64 platform=linux)\n...\nnode-pre-gyp ERR! Tried to download(403): https://node-zopfli.s3.amazonaws.com/Release/zopfli-v2.0.2-node-v59-linux-x64.tar.gz\nnode-pre-gyp ERR! Pre-built binaries not found for node-zopfli@2.0.2 and node@9.2.0 (node-v59 ABI) (falling back to source compile with node-gyp). Just blew away the entire polyfill-service directory and started from scratch.  npm i and everything compiles automatically.  \nNot sure what I did wrong the first time; it's possible that I ran npm i under windows, which of course didn't compile things, and then switched to linux to run the service.  Woulda been dumb, but understandable since file system perf on native windows is about 2x faster than in WSL.\nSo I'd say this can be closed.\n. Seeing that this is the first time QQ Browser has been mentioned in this repo, I don't expect it will be worthwhile to add support for that specific browser.  \nTo get past this, you could set the unknown flag to polyfill, like so: \nhttps://cdn.polyfill.io/v2/polyfill.js?features=Object.assign&ua=Mozilla/5.0%20(Windows%20NT%206.1;%20WOW64)%20AppleWebKit/537.36%20(KHTML,%20like%20Gecko)%20Chrome/39.0.2171.95%20Safari/537.36%20MicroMessenger/6.5.2.501%20NetType/WIFI%20WindowsWechat%20QBCore/3.43.691.400%20QQBrowser/9.0.2524.400&unknown=polyfill\nCheck out what https://polyfill.io/v2/docs/api has to say about it:\n\nUse caution when setting this argument to 'polyfill' on large feature sets, since huge polyfill bundles may cause crashes or lockups in extremely old or underpowered user agents.. \n",
    "buzzin0609": "Thanks, I'll try it out. We're not going to deploy until after the new year. I will comment back if this fix solves the issue.. ",
    "marc-bouvier": "I can reproduce this issue. Instructions can be found here : https://marc-bouvier.github.io/test-polyfill-io/index.html I rewrote them in the following text.\nProblem\nIn Internet Explorer 11, When a site is in \"Local intranet\" security zone, and using cdn.polyfill.io, ie/7.0.0 is detected instead of ie/11.0.0\nReproduce\n\nOn Windows 7, Internet Explorer 11 (you can find virtual images from microsoft here : https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/)\nOpen this page on Internet Explorer 11 : https://marc-bouvier.github.io/test-polyfill-io/index.html\nThen, open internet explorer \"internet options\"\n\n\n\nAdd the domain \"https://marc-bouvier.github.io\" to \"Local intranet\" sites.\n\n\n\n\n\nOpen page inspection (F12) and reload the page\nOn the javascript console you will have the error : HierarchyRequestError\n\n\n\nOpen Debugger tab and look at the comment section of \"polyfill.js\" file\nie/7.0.0 is detected instead of ie/11.0.0\n\n\n. ",
    "justin-nodeboy": "+1, I get this error as well.. ",
    "DonGissel": "So... any news on this? We are seeing this problem in production on certain machines now, too.. ",
    "azenkovets": "+1 Any new on this?. ",
    "waghcwb": "I can confirm this error too on Windows 10 and IE11\n\n. ",
    "ricardograca": "This is still an issue when using the flags=always option. This html file will trigger the error on IE11:\nhtml\n<html>\n<head>\n  <script src=\"https://polyfill.io/v3/polyfill.js?flags=always\"></script>\n</head>\n</html>. What does gated,always even mean? I would expect this to be to a OR type of situation.\nThe issue that I'm having is that the fetch polyfill (and maybe the others as well) is not being loaded in IE11 and some versions of the Facebook browser. The strange thing is that it's loaded correctly in the VM I have with IE11 and on crossbrowsertesting.com, so I was trying to get the polyfills to always load.. ",
    "jdeniau": "Just had a same kind of problem:\n```\nerror An unexpected error occurred: \"/home/jdeniau/code/makeup/node_modules/oniguruma: Command failed.\nExit code: 1\nCommand: sh\nArguments: -c node-gyp rebuild\nDirectory: /home/jdeniau/code/makeup/node_modules/oniguruma\nOutput:\nmodule.js:549\n    throw err;\n    ^\nError: Cannot find module '/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js'\n    at Function.Module._resolveFilename (module.js:547:15)\n    at Function.Module._load (module.js:474:25)\n    at Function.Module.runMain (module.js:693:10)\n```\nThe problem for me was node-gyp. I followed the instruction here and it seems to be OK . ",
    "plexigras": "you could have a url query option?. ",
    "patrickmatsumura": "I can confirm, that it is not served in Edge 16.16299. The only way around is to use the \"always\" flag.\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299. ",
    "notlee": "@JakeChampion \n\ud83e\udd14 Symbol | Throw a\u00a0TypeError\u00a0exception.\nhttps://tc39.github.io/ecma262/#sec-tostring\n. Pedantic: Shall we update the spec link to https://tc39.github.io/ecma262/#sec-array.prototype.includes?. Spec link: https://tc39.github.io/ecma262/#sec-string.prototype.repeat. Spec link: https://tc39.github.io/ecma262/#sec-string.prototype.includes. Pedantic... spec link: https://tc39.github.io/ecma262/#sec-string.prototype.endswith. This is meant to be https://tc39.github.io/ecma262/#sec-iscallable?. The else is redundant but \u00af_(\u30c4)_/\u00af. Specific stylistic choice or just preference?\n  . >If int16bit \u2265 2^15, return int16bit - 2^16; otherwise return int16bit.\n  . ~ToInt8 differs a little from ToInt32 and ToInt16 here:\n4. Let int8bit be int modulo 28.\n5. Return int8bit.~\nOoops. I was looking at ToUint8.. https://tc39.github.io/ecma262/#sec-canonicalnumericindexstring. Mind blowing. \ud83d\ude01 \nNote to self: apply is acting on bind. null in the arguments list becomes the first argument thisArg to bind. https://tc39.github.io/ecma262/#sec-function.prototype.bind\n  . https://tc39.github.io/ecma262/#sec-invoke. This returns true if innerResult is an object?\n  . Should arguments[1] be passed as a list [arguments[1]]?.  \u00af_(\u30c4)_/\u00af As discussed the spec is not too clear here. But es-shims tackle this the same way https://github.com/es-shims/es6-shim/blob/master/es6-shim.js#L74-L79. Is this. Symbol intentional? I don't fully understand this line. \ud83e\udd14 . https://tc39.github.io/ecma262/#sec-toindex. Ah sorry. I misunderstood Symbol and thought the call may be context dependent. :facepalm: \nThis is \ud83d\udc4d .. hint should be a list. https://tc39.github.io/ecma262/#sec-topropertykey. https://tc39.github.io/ecma262/#sec-arrayspeciescreate. Clever!. var T = undefined;\n?. Without var, will this bleed into global scope?. :facepalm: rookie mistake by me. :facepalm: rookie mistake by me. ~Should this case build any version since 3.25.2 rather than just the latest?~. >When we release newer versions of the polyfill-library, we can add the previous version as an alias and add it to the switch statement in packages/polyfill-service/server/routes/v3/polyfill.js.\nNope, got it, I should read \ud83d\ude05 . This could have unintended consequences. Elements which are hidden to screen readers are not always intended to be visually hidden. Could this use a more specific selector instead?. ",
    "loxtank": "Is there a timeframe for when this will be merged and deployed?. @JakeChampion ok. Is there any way to use the old version in the meantime?. @JakeChampion Is there a timeframe for fixing this? Huge issue for me.. ",
    "jimthedev": "I see it was merged but was it released out on the v2 endpoint?. ",
    "SpadeAceman": "See my answer on #1599 - include es2017 among your requested features.. I ran into this same issue - turns out you actually need to add es2017 to your list of requested features to get Object.entries (and Object.values).\nhttp://2ality.com/2016/02/ecmascript-2017.html\nhttps://github.com/Financial-Times/polyfill-service/blob/master/polyfills/Object/entries/config.json. ",
    "bthibault": "Also breaks earlier versions of chome at least to 38. \nThis is major issue for me. \n. In retrospect we should not be using a library in production that auto-updates with no way to specify a version. ",
    "gavinlove": "We are seeing the exact same problem. Lots of complaints from IE11 users. @bthibault This is exactly what I have decided today. Setting up a server it so I can roll back to the previous version. ",
    "LOK-Soft": "can you estimate when the committed fix for this issue will be on production?\nThanks :). ",
    "AchimKre": "Is there a workaround for this? Because this breaks our page completely down in IE 11.. @JakeChampion Thx for your hint, but it does not work for us. It seems an other polyfill needs Object.assign and only excludes=Object.assign runs into an other javascript error.\nWe added the polyfill Object.assign polyfill from [1] inline before include https://cdn.polyfill.io/v2/polyfill.min.js?excludes=Object.assign\nThat seems to work.\n[1] https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign. It works. Thank you! . ",
    "kohesion": "Just download the file in IE11 and wrap the problem bit in a try catch block. ",
    "prothweil": "Is there a possible workaround until a fix is released?. ",
    "TobiasBales": "At least for us that broke with Object.assign is not a function in ie, even though create-react-app ships it's own polyfill. We reverted immediately but our assumption was, that it broke inside the polyfills (polyfills.io ones) before the other one got loaded. Not 100% sure though.. Yeah and it makes sense, just wanted to point that out.\nAnd loading them in reverse order my break too since then you code might be missing polyfills and already executing.. ",
    "kindlerm": "Just to mention it: we have the same problem. Install (of 3.25.1 and 3.25.0) only worked after manually removing the zlib dependency. Please correct this issue!. ",
    "jacobg": "Array.prototype.includes was introduced in Chrome 47, so it needs to be served in version 46 and below.\nI saw a customer case where it's not served in version 46 with the following user agent string:\nMozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Dragon/46.9.15.424 Chrome/46.0.2490.86 Safari/537.36\nIt looks like polyfill is stumbling on the Dragon/46.9.15.424 token, which is added by the Dragon Internet Browser based on Chromium.\n``\n/* Polyfill service v3.25.1\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: dragon/46.9.0 (unknown/unsupported; using policyunknown=ignore`)\n * Features requested: Array.prototype.find,Array.prototype.includes,Element.prototype.remove,Promise\n *  */\n(function(undefined) {\n/ No polyfills found for current settings /\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```\nShouldn't polyfill be ignoring that token and using the Chrome token?. ",
    "tambry": "Thank you very much!. ",
    "ChristianSiegert": "As a workaround, you can check if your code is running in Chrome and then delete IntersectionObserver so the polyfill kicks in:\njavascript\ndelete window.IntersectionObserver;\ndelete window.IntersectionObserverEntry;. You can ask the polyfill service to always send the polyfill, independent of whether the browser already supports the feature, by appending the flag |always to the feature. If you also append the flag |gated, the polyfill will not overwrite existing browser implementations.\nThe docs about the |always flag:\n\nPolyfill should be included regardless of whether it is required by the user-agent making the request.\n\nOpen the polyfill in Chrome (no flags; you will see no polyfill):\nhttps://polyfill.io/v2/polyfill.min.js?features=IntersectionObserver\nOpen this polyfill again in Chrome (with flags, you will see the polyfill):\nhttps://polyfill.io/v2/polyfill.min.js?features=IntersectionObserver|always|gated. ",
    "rlightner": "It won't overwrite the built in implementation unless you delete it.. https://polyfill.io/v2/polyfill.js?features=IntersectionObserver&flags=always,gated includes:\njavascript\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n    // features are natively supported.\n    if ('IntersectionObserver' in window &&\n        'IntersectionObserverEntry' in window &&\n        'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n      return;\n    }. without gated, it produces the same thing:\njavascript\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n  return;\n}\nYour original question was about forcing it on chrome. Which as @ChristianSiegert pointed out would work if you deleted it in chrome before the polyfill loaded. It's not the best implementation though.\nLet's hope the 'powers that be' see a feature request out of this thread.\n. ",
    "chee": "you could user agent sniff before loading the script, and use |always\nwithout |gated on that version of Chrome.\nand use the non-always URL for everyone else.\nOn 30 May 2018 at 20:55:01, Josh Duff (notifications@github.com) wrote:\n\nHuh, I wonder if that's a bug, or if the documentation is wrong.\nSure, I would have no problem manually deleting the original\nimplementation in Chrome.\nAll that this feature request is requesting is the ability to say \"always\nship the polyfill in Chrome, but default behavior for the other browsers.\"\nNothing about gating behavior.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Financial-Times/polyfill-service/issues/1682#issuecomment-393296430,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAK4WvUfiCQ4hez_onNMpY0P-prcJoHNks5t3vkVgaJpZM4Sqz3e\n.\n. @JakeChampion this is #1686. for the 46,000 line diff this is a relatively small pull request.\n\nit doesn't look like it too heavily ties to yarn, which is nice, so leaves the option open for another aliasing approach should one ever exist.\nseems p good.\nare any of the things in the switch statement generic enough to live in a function?. (financial-times/polyfill-useragent-normaliser). i have never seen cd - before. i've been using pushd/popd like a chump. ",
    "xboy2012": "I open http://localhost:3000/v2/docs in my browser\nBut the code uses 'https:' which causes the url become\nhttps://localhost:3000/v2/docs\nIt's obviously wrong url.\nAfter inspecting the code. I found where the problem is.\nPlease merge the request.. ",
    "helloncanella": "+1\n. ",
    "ilanbm": "Any update on that? is it going to be released soon?. ",
    "gtd": "Thanks for the quick turn around!. ",
    "mcfog": "@JakeChampion  Sorry but I don't have such device in hand. I just find some related error log on blackberry, and fixed them (at least the error log) by adding URL|gated|always in features parameter. ",
    "IamManchanda": "Dupe of #1679. ",
    "boriskor": "Thanks, @JakeChampion! When do you plan to release v3.26? \ud83d\ude42. ",
    "gozno42": "@JakeChampion I just ran into this issue.  When will 3.26 be released?. ",
    "mikebridge": "@JakeChampion Sorry, I just fixed the incorrectly copied-and-pasted stack trace.  I tried several random permutations among the six we're pulling in, and the only one that works is that last one.\nI'd never heard of the UC Browser before last week, but apparently it's big in China and other parts of Asia, especially on mobile.  This is the desktop version I installed:\nMozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 UBrowser/7.0.185.1002 Safari/537.36\n. ... and the reason I discovered this issue is that I was using the \"unknown=polyfill\" workaround to polyfill the mobile version of UCBrowser and discovered that this causes the desktop version to break.. @JakeChampion I see that this desktop version has \"UBrowser\" and my mobile version is has \"UCBrowser\", and neither of these is picked up by the \"uc browser\" alias in UA.js.  Would it help if I created a PR to add better support for both these browsers?  It looks like this desktop version is based on Chrome 55 (not IE10).  The Android version also looks Chrome-like.\n. I've been trying to get polyfill.io working on both UC Browser Mobile and Desktop without much success yet.   In the meantime, if it helps anyone else, there's a development version of the Android UC Browser here, and you can connect to it and debug it from desktop Chrome just like you would the mobile chrome browser.\nI'm also experiencing the escape-string-regexp problem on mobile.. @JakeChampion It occurs in that version of the desktop merely by including it---this alone reproduces it for me:\n<!doctype html>\n<html lang=\"en\">\n<head>\n    <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?unknown=polyfill\"></script>\n</head>\n<body>\nHello\n</body>\n</html>\nWhen I go to Feedback and Help -> About the desktop version contains the following text:\nUC Browser\nVersion 7.0.185.1002 ...\nChromium kernel version: 55.0.2883.87\nIE Kernel version 11.0.16299.371\n\nThe mobile version is apparently based on a modified webkit (https://www.quora.com/What-is-the-JavaScript-engine-used-behind-UC-Browser).\nThis error I'm seeing occurs in this line in Chalk, which makes me think this error is a side-effect of another problem....\n. ",
    "scripter-co": "No problem @JakeChampion.. ",
    "azizhk": "I'm not sure why but I don't think these changes are reflecting on the website.\nhttps://polyfill.io/v2/docs/api\nIs there a different repo which needs these changes.\n(Sorry for commenting on an old issue, got 404s so thought better to get them fixed.). Closing PR as File structure seems to have been changed.\nThough new website does not seem to be deployed. Links still seem broken.\n. Can we have a \"Include Default Bundle\" checkbox on the URL Builder page (along with Minify bundle, Real User Monitoring, Feature Detects, Always load polyfills).\nAlso another feature is automatically selecting checkboxes in the list based on what is requiring them. Like (required by \"default\"), (required by \"requestAnimationFrame\"). So that we don't have to include every feature if we are indirectly requiring it.\nLet me know if you guys are open to this or if you know of any complications. I'll see if I can give some time and implement it.. Link: https://web.archive.org/web/20180125030643/https://polyfill.io/v2/docs/features/#IntersectionObserver\nNow that I see there are a few more tiny information lines for a few other features as well.. ",
    "benjclark": "Yep, still an issue. ",
    "hultqvist": "I guess since the polyfill-library was introduced in April 9th 2018 most links to\nhttps://github.com/Financial-Times/polyfill-service/...\nshould be replaced by\nhttps://github.com/Financial-Times/polyfill-library/.... ",
    "DeTeam": "@JakeChampion could you or someone else please publish a new version?. Sorry to bother, @triblondon \u2014 is it possible that someone of maintainers take care of this issue? :). @JakeChampion could you please have a look and merge + publish an npm version if all fine?. @JakeChampion any chance of merging this PR? :). ",
    "cameronbraid": "Thanks --ignore-engines is a great temp fix. ",
    "jdachtera": "@JakeChampion any chance to get this resolved?. ",
    "gwardwell": "@JakeChampion The project I'm working on needs to move to node 10 LTS. Can we get this fixed, please?. @JakeChampion Please get this updated so I can move my project to Node 10 LTS.. ",
    "dotnetCarpenter": "Replect.apply looks good.. didn't check the rest. And why does https://cdn.polyfill.io/v3/url-builder always add default to the query? I know exactly which polyfills I want and I was under the impression that default adds a package  of polyfills. Did something change? Or can I safely delete default from my query?\nMy query from url-builder is: https://polyfill.io/v3/polyfill.min.js?flags=gated&features=default%2CArray.prototype.find%2CArray.prototype.findIndex%2CPromise%2CArray.from%2CMap\nWhat happens if I query https://polyfill.io/v3/polyfill.min.js?flags=gated&features=Array.prototype.find%2CArray.prototype.findIndex%2CPromise%2CArray.from%2CMap?. OK. I got a PC with IE11 and tested. I do not need default.. To be honest I'm shocked that this could happen.... @JakeChampion I dont see any default option on https://cdn.polyfill.io/v3/url-builder. default just appear in the query string whenever I choose a polyfill.. ~~https://cdn.polyfill.io/v2/polyfill.minify.js~~ should have been https://cdn.polyfill.io/v2/polyfill.min.js. It has been working for more than a year but broke today. Luckily it was in a project I still support and not a finished project. But today has tought me not to rely on https://cdn.polyfill.io for future projects. We have to plan at work but I'll suggest we start to self host polyfill-service. Thanks for the project and all the work you have put into it, though!. @JakeChampion  I get the  confusion now. We did use polyfill.minify.js before because the old documentation looked like that was suppose to be the name.\nhttps://web.archive.org/web/20170606192731/https://polyfill.io/v2/docs/api\nGET /v2/polyfill:minify.:type\nParam | Where | Description\n-- | -- | --\nminify | URL | Whether to minify the result. If omitted, output will include the full polyfill source, and a header comment with debug information about the user agent and which polyfills have been included in the bundle. If set to\u00a0.min, the output will be minified.\nBut after re-reading the description it does say to use .min. \nToo bad that https://cdn.polyfill.io/v2/polyfill.minify.js worked for such a long time then.. ",
    "MrsTrump": "Understood\nWonderful c:. ",
    "friday": "v3.25.1 was released in January, so that's to be expected if NodeList.prototype.forEach was added a month ago.. ",
    "michapietsch": "Wasn't familiar with the release process. I assumed v3.25.1 was the wrapping logic but actual polyfills were loaded dynamically.\nIs there a good way to use the improvements in production right now? I know about self-hosting but I'd rather rely on the service to stay up-to-date later.. ",
    "danielsokolowski": "So is there a solution or should I bite the bullet and convert NodeList to an Array?\n[].slice.call(document.querySelectorAll(\"FOOBAR\")).forEach(...);. Please re-open this, I was posting this here because I am on v3. The downloaded file through IE11 does not include NodeList forEach, actually no NodeList matches are returned.\nThe URL used was: https://polyfill.io/v3/polyfill.js\nPing @JakeChampion \n\n. ",
    "castilloandres": "Hello,\nJust made this PR for this issue https://github.com/Financial-Times/polyfill-service/pull/1726. @JakeChampion Thank you for the heads up on the test. I also went ahead and removed an outdated script in the readme.\nCheers! \ud83d\udc4d . ",
    "Janpot": "@JakeChampion One issue is the missing UA detection.\nBut there's also the strange behavior of the Symbol polyfill described in https://github.com/GoogleChrome/puppeteer/issues/2571 . Do you think it's solvable?. ",
    "neelance": "Is there any ETA on when this fix will go to production? This has bitten us recently.. ",
    "sleagon": "@johnmichel could any guy just take a look?  a simple cache for file reader added.. First the correct feature name is Promise.prototype.finally. Second, you will  not get Promsie.prototype.finally in any version of SamsungBrowser, higher than 4. Could you provide any information about which version SumsungBrowser starting to support Promise.prototype.finally? And by the way, the Promise(yaku) itself has included finally already, there is no need Promise.prototype.finally anymore. #1757 . does https://b.alicdn.com/s/polyfill.js?features=Array.from,Set work? I think the version of polyfill.io is out of time more than half a year..... > Hi @sleagon, thank you for the pull-request. After speaking with the team, we can't figure out what your need is.\n\nMay I ask why you are wanting to always apply Promise polyfill to all browsers? Is there a bug in some browsers native Promise and we are not serving those browsers the polyfill?\nIf we do add this feature as is, it would be a breaking change and require a new /v4 endpoint. Do you think there is a way we can add this feature without it being a breaking change?\n\nPromise is natively supported in firefox, however window.onunhandledrejection which depends on implement of Promise is not. You want to catch the unhandledrejection event in firefox, you need overwrite the native promise. Promise is a simple example, the problem is when you want to add flags to some specific polyfill and use preset(s) (alias) which contains the polyfill at the same time, there is no way to do this, you have to write all the features in the url. Anyway, what do you want if you write some code like this default|gated,Promise|always|gated, I do think flags added to Promise should get higher priority than flags added to default. Feel free to close it anyway.. You mean the promise polyfill in polyfill.io should check the Promise and replace it if it's broken? . oh, i got you.\nActually, as you can see in the source code, the polyfill of promise is yaku. I just tested the yaku, the polyfill is ok, and finally is supported too. I think the version of yaku used by polyfill.io server is out of date. You can try this link: http://b.alicdn.com/s/polyfill.min.js?features=Promise.. @JakeChampion maybe redeploy the service?. @thangman22 Nope, glad to be accepted~. New PR to polyfill-library:   https://github.com/Financial-Times/polyfill-library/pull/62. here is a mirror i hosted for test several months ago, but the feature list is broken. You may need find your feature list in v3 documentation.\n https://polyfill.lazyguy.cn/v2/docs/api. ",
    "johnmichel": "@sleagon I don't have commit access here.  The idea makes sense to me, but I haven't contributed to this project in years.. ",
    "brandonpayton": "Hi @JakeChampion, would you be up for taking a look at this?. ",
    "JamesKyburz": "Sorry found out that Array.prototype.find wasn't included in the default features.\nhttps://cdn.polyfill.io/v2/polyfill.js?features=default,Array.prototype.find|gated fixed the problem :)\n. ",
    "radeno": "Done \n. ",
    "jerone": "Yes, please fix this; super annoying that every source link doesn't work.. Ping \ud83c\udfd3. ",
    "DanielRuf": "Bump @JakeChampion . ",
    "troy-lamerton": "I've just attempted to create a small reproduction of it with no luck. The project that gives the error is quite large. I'll have another look at it in the next few days to see if I can narrow down a small test case.. The call stack when the page hits the error:\n\nThe erroneous function is called by the DOMTokenList polyfill. \nPart of the way through the callstack I found this:\njavascript\nvar $defineProperty = function defineProp(o, key, descriptor) {\n  var uid = '' + key;\n  if (onlySymbols(uid)) { // onlySymbols returns true, and enters this block -- is that intended?\n    setDescriptor(o, uid, descriptor.enumerable ?\n      copyAsNonEnumerable(descriptor) : descriptor);\n    addInternalIfNeeded(o, uid, !!descriptor.enumerable);\n  } else {\n    defineProperty(o, key, descriptor);\n  }\n  return o;\n};\nFor the property, onlySymbols returns true, is that intended?\nI'm not sure how else to narrow down this error. The project that hits this error is big and difficult to seperate.. ",
    "jiayihu": "I'm having the same issue, is there a work-around for the moment?. ",
    "czebe": "We're having the same issue in IE11. Same stack trace as above, originating from DOMTokenList.\nUsing polyfills in a React app.. ",
    "arjun3396": "\nThis has now been fixed \ud83d\udc4d\n\nbut i am still facing in same issue, how to resolve this. thanks in advance.. ",
    "gatimus": "@JakeChampion ok, I'll looking to this, may have to make pull requests to add some polyfills before that.. ",
    "buschtoens": "Damn. Merging this won't have any effect just yet, because Intl.js itself is gated and \"incorrectly\" does not patch missing methods, if Intl is present: \nhttps://github.com/andyearnshaw/Intl.js/issues/260\nAlso relevant: https://github.com/andyearnshaw/Intl.js/issues/242\nWe could work around this with executing delete window.Intl before including the polyfill in the IE11 version.. I can confirm that the following code successfully loads the polyfill in IE11, including among others DateTimeFormat#formatToParts:\n```html\ndelete window.Intl;\n\n``. So until andyearnshaw/Intl.js#260 or andyearnshaw/Intl.js#242 are fixed, I guess serving thedelete window.Intl;flavor of the polyfill to IE11 is the best / only solution.. There _is_ another solution: [tc39/proposal-intl-formatToParts](https://github.com/tc39/proposal-intl-formatToParts) has a polyfill for justformatToParts, that patches the nativeIntl` implementation.\nSo instead of forcing the full Intl polyfill onto IE11 users, we could add this polyfill.. Thanks for transferring! :). ",
    "RichiCoder1": "@buschtoens I'd love to push a fix forward if you'd still like to do this. My comment on the new issue here: https://github.com/Financial-Times/polyfill-library/issues/109#issuecomment-464142663. ",
    "formatlos": "I'm on vacation until end of the week, I will check a soon as I'm back. https://b.alicdn.com/s/polyfill.js?features=Array.from,Set works as expected. ",
    "felixmosh": "The same error reproduces in chrome 52, I got notified by my monitoring system.\nI got many (~11k) of such errors per day.. Unfortunately, I'm AFK for three weeks, will do it then. ",
    "eldanb": "I mean that the polyfilled promise implementation has a bad implementation for \u201cfinally\u201d. Incidentally, the polyfill for promise.prototype.finally (which is an additional separate polyfill) does have the correct implementation. \nAsking for the Promise feature -> the expression above yields an incorrect behavior. Asking for Promise + Promise.prototype.finally still yields incorrect behavior because the latter is gated. Asking for Promise + Promise.prototype.finally ungated yields the desired behavior. \nFix should probably be to at least fix the implementation of \u201cfinally\u201d in the polyfilled Promise implementation. Makes sense?. ",
    "Havunen": "If you search toBlob polyfill io site:\nhttps://polyfill.io/v2/docs/features/\nIt says its supported natively in Edge v15+ which is not the case. We tested v16 and v17 and its missing in both. Shouldn't the polyfill service then provide polyfill that uses msToBlob? now it works in IE11 and just fails in  Edge. ",
    "cbourlon": "Same problem here \n\n. ",
    "LinusU": "ping @JakeChampion, any chance of landing this? currently this is the only thing keeping the Safari 12 default build from being empty \u263a\ufe0f \ud83d\ude4c . Thanks!. ",
    "kaskar2008": "I've got similar PR #1768 with a little tweak for a fallback. We can merge our forks. Somehow. I guess?. @dpolyakov Done \ud83d\udc4d . ",
    "dpolyakov": "@kaskar2008 copy diff of versions mapping to your PR. I will close my PR. closed in favor #1768. ",
    "fabioricali": "but in default mode do not exists... it's correct?\nhttps://polyfill.io/v2/polyfill.js?ua=ie/11. ",
    "DaSchTour": "Use https://github.com/zloirock/core-js. ",
    "boehmers": "Okay nevermind, just saw you are working on much more than only removing this one dependency :-). ",
    "DannyFeliz": "Same here, it started to happen today.. The service is up again, we're saved. ",
    "iDiver76": "Same here, happend right now. ",
    "luglio7": "Same here, only the \"basic url works\" https://cdn.polyfill.io/v2/polyfill.min.js. ",
    "oliviertassinari": "Here is a reproduction url: https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.en-US&flags=always.. ",
    "Tecktron": "Consistently an issue for me as well: https://cdn.polyfill.io/v2/polyfill.js?features=default-3.6,Intl.~locale.en\n```\nError 503 Backend is unhealthy\nBackend is unhealthy\nGuru Mediation:\nDetails: cache-jfk8137-JFK 1540310102 3793895496\nVarnish cache server\n```. ",
    "sheerun": "Currently the standard for browser ranges is https://github.com/browserslist/browserslist \nMaybe this library could somehow integrate with it? @JakeChampion Is there any progress?. ",
    "thangman22": "Any update?. ",
    "EECOLOR": "The handlebars dependency was used in a previous version for this if statement:\njs\nif (options.rum && process.env.RUM_BEACON_HOST) {\nAnd this template:\njs\nconst rumTemplate = Handlebars.compile(fs.readFileSync(path.join(__dirname, 'rumTemplate.js.handlebars'), 'utf-8'));\nThis no longer seems to be present in the library.. ",
    "salzhrani": "from the PR\n```\ncurl https://polyfill.io/v3/normalizeUa -H \"user-agent: Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 YaBrowser/18.10.3.114.10 Mobile/15E148 Safari/605.1\"\nother/0.0.0\n```. ",
    "kachkaev": "\ud83d\udc4b @JakeChampion WDYT?\nI'm still seeing Intl is not defined in logs from Android folks on Chrome 61 and less.. \ud83d\udc4b . All the devices where the error occcured were reported as Android ones. Could it be that the same version of Chrome has a different set of features based on the OS?. ",
    "szyablitsky": "Full URL to load polyfill is https://cdn.polyfill.io/v2/polyfill.min.js?features=Intl.~locale.ru,URL|gated.\nThe error [React Intl] The 'Intl' APIs must be available in the runtime, and do not appear to be built-in. An 'Intl' polyfill should be loaded.\nUserAgent examples which generate the error:\nMozilla/5.0 (Linux; U; Android 7.0; ru-ru; Redmi Note 4 Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.2.4-g\nMozilla/5.0 (Linux; U; Android 8.0.0; ru-ru; MI 5 Build/OPR1.170623.032) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.1.2\nMozilla/5.0 (Linux; U; Android 7.1.2; ru-ru; Redmi 4X Build/N2G47H) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.0.2\nMozilla/5.0 (Linux; U; Android 7.1.2; ru-ru; Redmi 5 Build/N2G47H) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.1.2\nMozilla/5.0 (Linux; U; Android 6.0.1; ru-ru; Redmi 3S Build/MMB29M) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.1.2\nNow I see that real browser is MiuiBrowser, not Chrome. I think it is some kind of Chromium based fork.. Any ideas about this case?. ",
    "uwelo": "We see the same errors.\nMozilla/5.0 (Linux; U; Android 6.0.1; en-in; Redmi Note 3 Build/MMB29M) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.2.5-g\nMozilla/5.0 (Linux; U; Android 7.0; en-gb; Redmi Note 4 Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.2.5-g\nMozilla/5.0 (Linux; U; Android 7.1.2; en-us; Redmi Note 5A Build/N2G47H) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.2.4-g\nMozilla/5.0 (Linux; U; Android 8.1.0; en-us; Redmi 5 Plus Build/OPM1.171019.019) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.2.5-g\nMozilla/5.0 (Linux; U; Android 8.1.0; en-us; Redmi Note 5 Pro Build/OPM1.171019.011) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/61.0.3163.128 Mobile Safari/537.36 XiaoMi/MiuiBrowser/10.2.5-g\nWith the polyfill URL https://cdn.polyfill.io/v2/polyfill.min.js?features=default-3.6,Array.prototype.includes,Array.prototype.find,String.prototype.includes,Number.isFinite,fetch,Intl,Intl.~locale.en-CA,HTMLPictureElement . ",
    "japrogramer": "yes, Is there a link to the term of service and the privacy policy\non the github repo?. ",
    "cs09g": "I guess it's occured by https://github.com/Financial-Times/polyfill-service/commit/5701e797f79ea5ba4baecfd1567fbd417abd1143\nI don't know why the code changed like that from #1331 . ",
    "kud": "+1. Indeed!\nThank you for your explanation. :). ",
    "madsgodvinjensen": "I can't get this to work. The main issue is that the mocha version in this repo is a bit old. I've tried updating, but then the tests start failing. I've tried to fix them but I must admit I'm not a super user in Mocha.\nI hope you'll have time to look into these at some point anyway.\nYou can run yarn audit in both packages to see which vulnerabilities there are. I'm happy to help with whatever questions you might have. Just shout :). I'm not sure I understand, are you going to stop maintaining the polyfill-library?. Okay, I completely understand now :) Any plans on discontinuing v2 or moving it to a separate repo? I'm trying to figure out what to do with the service we have that use the polyfill-service and reports vulnerabilities.. Well that makes sense. We're switching to use the library as we speak. Thanks a lot for the help.. ",
    "RoyHP": "Same issue here, this is affecting our users.\n\n. ",
    "PaitoAnderson": "Same here, users are experiencing problems loading our site.. ",
    "mudy": "This seems to be a recurring issue. Did you try adding stale-while-revalidate and stale-while-error on your cache directives - https://www.fastly.com/blog/stale-while-revalidate-stale-if-error-available-today. @JakeChampion What was the issue and what was the fix?. ",
    "shYkiSto": "CC @JakeChampion . I also noticed Object.values being missed for IE. This started happening right after the outage. And IntersectionObserver issue appears to be ~1 month old. ",
    "kelvinlouis": "It is also missing on IE11. fetch isn't provided either. We are using the following URL: https://cdn.polyfill.io/v2/polyfill.js?features=default-3.6,WeakMap,fetch,Array.prototype.find,Array.prototype.includes,IntersectionObserver,Element.prototype.dataset,HTMLPictureElement. Same here. We are experiencing the same with https://cdn.polyfill.io/v2/polyfill.js?features=default-3.6,WeakMap,fetch,Array.prototype.find,Array.prototype.includes,IntersectionObserver,Element.prototype.dataset,HTMLPictureElement It says IntersectionObserver is missing, after that fetch and so on.. It seems to be working again. Thanks for the fix! We will be testing now.. ",
    "davidenglishmusic": "There may have been a regression since. It doesn't appear to be getting served to Safari currently:\n\n. ",
    "gpoole": "I'm also experiencing this issue with IE11.\nFor the following config: https://polyfill.io/v3/polyfill.js?features=IntersectionObserver-polyfill%2CIntersectionObserverEntry-polyfill\nThe response to IE11 is:\n```js\n/ Polyfill service v3.31.1\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * Features requested: IntersectionObserver-polyfill,IntersectionObserverEntry-polyfill\n *  /\n/ No polyfills found for current settings /\n```\n. Actually my mistake, my problem was not the same issue, it looks like the generated URL was incorrectly including -polyfill in the feature requests. It should have been:\nhttps://polyfill.io/v3/polyfill.js?features=IntersectionObserver%2CIntersectionObserverEntry, which does work correctly in IE11. Seems to have been fixed in #1906.. ",
    "pinkfloydx33": "Seems to have fixed itself; though now finding other issues. @mche1987 Nope, still down. Still experiencing the issue, whether that is fixed or not. \nRepro (IE11), fails\nhtml\n<html>\n<head>\n    <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=default-3.6,modernizr:es6string&flags=gated\"></script>\n    <script src=\"https://cdn.polyfill.io/v2/polyfill.min.js?features=modernizr:es6array,Element,Element.prototype.classList,Element.prototype.cloneNode,Element.prototype.replaceWith,Array.prototype.map,Array.prototype.reduce,es7&flags=always,gated\"></script>\n    <script>        \n        try {\n            var x = [1,2,4];\n            var z = x.findIndex(function(i) {\n                return i == 2;\n            });\n            console.log(\"Success!\",z);\n        } catch(e){\n            console.error(e);\n        }\n    </script>\n</head>\n</html>. Thanks, all fixed!. ",
    "mche1987": "Is it still down for you @pinkfloydx33 - ours just came back up. Ours specifically for Object.assign in IE 11.. ",
    "aarondrabeck": "This seems to be related to #1853 and is working now.. ",
    "nldevis": "@JakeChampion, it was working with unknown user agents until yesterday (ie. v2 was behaving like unknown=polyfill). Can you please clarify: is it a breaking change introduced recently?\nI see in the response the header normalized-user-agent: other/0.0.0 and no polyfills provided.. ",
    "shqld": "Thanks.. ",
    "fabiomcosta": "It has been noticed that if the features string is smaller than 100 it works, else it doesn't (when using %2C instead of ,).\nCould it be related to https://github.com/Financial-Times/polyfill-service/commit/843e2b7f974c98ee82eadc9a1dc55f9492659155#diff-361f19fec7b27e4e2200f9c2075fb0de ?\nhttps://github.com/Financial-Times/polyfill-service/blob/master/fastly/vcl/main.vcl#L73. Maybe https://github.com/Financial-Times/polyfill-service/blob/master/fastly/vcl/main.vcl#L61\nShould be set var.querystring = querystring.set(var.querystring, \"features\", urldecode(re.group.1));. Hyper speed!\nThank you so much for merging this so quickly!. Added the fix to excludes as well, since it can also contain encoded characters.. ",
    "agriffis": "While we're waiting for this on the docs site, here's a way to compare the services:\nv2='https://cdn.polyfill.io/v2/polyfill.js?features=default&unknown=polyfill'\nv3='https://cdn.polyfill.io/v3/polyfill.js?features=default'\nfilter-features() { sed -n '/^$/q;/^ \\* -/s/,.*//p' | sort; }\ndiff <(curl -s \"$v2\" | filter-features) <(curl -s \"$v3\" | filter-features)\nHere's the output from the above:\n```diff\n18d17\n<  * - Document\n40d38\n<  * - Number.isFinite\n51d48\n<  * - Object.setPrototypeOf\n54d50\n<  * - String.prototype.contains\n62d57\n<  * - Symbol.toStringTag\n66d60\n<  * - _ArrayIterator\n68c62,96\n<  * - _Iterator\n\n\n\n\n\n_ESAbstract.ArrayCreate\n\n\n\n\n_ESAbstract.ArraySpeciesCreate\n\n\n\n\n_ESAbstract.Call\n\n\n\n\n_ESAbstract.Construct\n\n\n\n\n_ESAbstract.CreateDataProperty\n\n\n\n\n_ESAbstract.CreateDataPropertyOrThrow\n\n\n\n\n_ESAbstract.CreateIterResultObject\n\n\n\n\n_ESAbstract.CreateMethodProperty\n\n\n\n\n_ESAbstract.Get\n\n\n\n\n_ESAbstract.GetIterator\n\n\n\n\n_ESAbstract.GetMethod\n\n\n\n\n_ESAbstract.GetPrototypeFromConstructor\n\n\n\n\n_ESAbstract.GetV\n\n\n\n\n_ESAbstract.HasProperty\n\n\n\n\n_ESAbstract.IsArray\n\n\n\n\n_ESAbstract.IsCallable\n\n\n\n\n_ESAbstract.IsConstructor\n\n\n\n\n_ESAbstract.IsRegExp\n\n\n\n\n_ESAbstract.IteratorClose\n\n\n\n\n_ESAbstract.IteratorComplete\n\n\n\n\n_ESAbstract.IteratorNext\n\n\n\n\n_ESAbstract.IteratorStep\n\n\n\n\n_ESAbstract.IteratorValue\n\n\n\n\n_ESAbstract.OrdinaryCreateFromConstructor\n\n\n\n\n_ESAbstract.OrdinaryToPrimitive\n\n\n\n\n_ESAbstract.RequireObjectCoercible\n\n\n\n\n_ESAbstract.SameValueNonNumber\n\n\n\n\n_ESAbstract.SameValueZero\n\n\n\n\n_ESAbstract.ToBoolean\n\n\n\n\n_ESAbstract.ToInteger\n\n\n\n\n_ESAbstract.ToLength\n\n\n\n\n_ESAbstract.ToObject\n\n\n\n\n_ESAbstract.ToPrimitive\n\n\n\n\n_ESAbstract.ToString\n\n\n\n\n_ESAbstract.Type\n70a99\n\n\n\n\ndocument\n```\n\n\n\n\nNotes:\n\nv3 doesn't need unknown=polyfill because this is the main thing (I think) that changed between v2 and v3. The old policy was to ignore unknown user-agents, and the new policy is to return all polyfills by default.\nyou can also use vimdiff in place of diff, it's a little easier to compare than the raw diff. @cferdinandi Load https://cdn.polyfill.io/v3/polyfill.js?features=default&flags=always in your browser and the list is at the top...\n\nor change the last line of the above shell commands to:\ncurl -s \"$v3\" | filter-features\n(instead of doing the diff). For what it's worth, you can get the full list of aliases by checking out the source code and then:\nfind polyfills -name config.json -print0 | xargs -0 jq -r '.aliases[]?' | sort -u\n(That depends on having jq installed)\nHere is the output at the moment:\nNavigator.prototype.geolocation\nPageVisibility\nblissfuljs\ncaniuse:audio-api\ncaniuse:console-basic\ncaniuse:datauri\ncaniuse:geolocation\ncaniuse:hashchange\ncaniuse:input-placeholder\ncaniuse:json\ncaniuse:matchesselector\ncaniuse:matchmedia\ncaniuse:namevalue-storage\ncaniuse:pagevisibility\ncaniuse:promises\ncaniuse:requestanimationframe\ncaniuse:visib\ndefault\ndefault-3.3\ndefault-3.4\ndefault-3.5\ndefault-3.6\ndom4\nes2017\nes5\nes6\nes7\nhtml5shiv\ninnerHeight\ninnerWidth\nmodernizr:classlist\nmodernizr:customevent\nmodernizr:es5array\nmodernizr:es5date\nmodernizr:es5function\nmodernizr:es5object\nmodernizr:es5string\nmodernizr:es6array\nmodernizr:es6object\nmodernizr:es6string\nmodernizr:es7array\nmodernizr:geolocation\nmodernizr:hashchange\nmodernizr:json\nmodernizr:localstorage\nmodernizr:matchmedia\nmodernizr:pagevisibility\nmodernizr:placeholder\nmodernizr:promises\nmodernizr:requestanimationframe\nmodernizr:urlparser\nmodernizr:webaudio\npageXOffset\npageYOffset\nscrollX\nscrollY\nviewport. ",
    "break-stuff": "I second that. I am about to implement this on multiple large websites but need that documentation for my developers.. ",
    "jonscottclark": "Agreed that the old docs should be made available. Only solution at the moment is to search for \"site:polyfill.io v2\" in Google and view cached results.. ",
    "ianwremmel": "Any update on when documentation will return?. Where are the restored v2 docs hosted?. ",
    "ashucg": "Filters are not working at all, I am on Firefox Nightly (67.0a1):\n\n. ",
    "gsrx": "Which zip is the version currently hosted? The filename version doesn't match the version in package.json in zips >3.25.1 <4.04. Thanks. ",
    "ChrisBAshton": "Thanks Jake. Didn't realise I was also requesting a default set of polyfills, I thought I'd only requested a polyfill for Date.now. I see there's an issue for documenting this better: #1861. ",
    "weyert": "Wrong project. ",
    "thomas-dm": "Not only that, but the features list doesn\u2019t seem to be available anywhere, and the documentation for v2 is gone.\nIn its current state, I find the website completely useless.. ",
    "MattiasBuelens": "Thanks... but now \"Filter polyfills\" no longer works! \ud83d\ude05 \nShould I file a new issue?. @JakeChampion Weird. On my end, it doesn't work on any machine in any browser. \ud83d\ude15 \nI did some digging. An aria-hidden attribute is set on the <input type=\"checkbox\">, but that checkbox is always hidden anyway. It looks like the aria-hidden attrbite should have been set on the parent <div class=\"polyfill\"> instead.\n\n...I really should have filed this as a separate issue. Sorry!. ",
    "petlys": "This issue seems to be present again. ",
    "aaronmars": "Updated issue to indicate that this is present in v2 as well.. ",
    "samuliasmala": "Actually the -polyfill ending is added to all polyfill query strings, not just the IntersectionObserver polyfill. Thus none of them is working out of the box. After manually removing the -polyfill like stevesy wrote, then they work nicely.. ",
    "matthieudou": "Same here, removing -polyfill works like a charm but the website is giving wrong informations\nThanks. ",
    "Mark320": "We've also been intermittently seeing this issue on both MacOS Safari 12.0.3 and Windows 10 IE11 (could be more browsers affected, but we only use polyfills required by Safari and IE). \nIt doesn't happen every time or on every persons machine, so it seems like it could be certain servers handling it and others not doing. \nOn the machines where we are seeing the error we have directly loaded the polyfill.io link in that browser and had no polyfills returned. . ",
    "AleksueiR": "If you encode the query part of the url, it works correctly in IE11:\nhttps://cdn.polyfill.io/v2/polyfill.min.js?features%3Ddefault%2Ces5%2Ces6%2Carray.prototype.includes. ",
    "mweech": "I would like to note that we experienced the same issue in a production application yesterday, but it wasn't until we found this closed issue that @AleksueiR and our team were able to identify the fix.\nAt some point there has been a shift that now requires the URL to be encoded for v2 to work.  This is not the case with v3.  I would suggest NOT closing issues so aggressively in the future @JakeChampion (I admire the ruthlessness however).  Thanks.. Same here, all fixed.  Thanks @JakeChampion . ",
    "hklsiteimprove": "We are encountering the same issue as described.\nWith the following curl (copied as curl from chrome dev tools)\ncurl \"https://cdn.polyfill.io/v2/polyfill.js?features^%^3Ddefault^%^2Ces5^%^2Ces6^%^2Carray.prototype.includes\" -H \"user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36\"\nWe get the following response:\n``js\n/* Polyfill service v3.25.1\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n *\n * UA detected: other/0.0.0 (unknown/unsupported; using policyunknown=ignore`)\n * Features requested: default\n *  */\n(function(undefined) {\n/ No polyfills found for current settings /\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```\n\nHere is the complete HAR\n\n``` json\n{\n  \"log\": {\n    \"version\": \"1.2\",\n    \"creator\": {\n      \"name\": \"WebInspector\",\n      \"version\": \"537.36\"\n    },\n    \"pages\": [\n      {\n        \"startedDateTime\": \"2019-03-19T14:42:22.773Z\",\n        \"id\": \"page_2\",\n        \"title\": \"https://cdn.polyfill.io/v2/polyfill.min.js?features%3Ddefault%2Ces5%2Ces6%2Carray.prototype.includes\",\n        \"pageTimings\": {\n          \"onContentLoad\": 500.04199997056276,\n          \"onLoad\": 561.1209999769926\n        }\n      }\n    ],\n    \"entries\": [\n      {\n        \"startedDateTime\": \"2019-03-19T14:42:22.770Z\",\n        \"time\": 20.281000004615635,\n        \"request\": {\n          \"method\": \"GET\",\n          \"url\": \"https://cdn.polyfill.io/v2/polyfill.min.js?features%3Ddefault%2Ces5%2Ces6%2Carray.prototype.includes\",\n          \"httpVersion\": \"http/2.0\",\n          \"headers\": [\n            {\n              \"name\": \":method\",\n              \"value\": \"GET\"\n            },\n            {\n              \"name\": \":authority\",\n              \"value\": \"cdn.polyfill.io\"\n            },\n            {\n              \"name\": \":scheme\",\n              \"value\": \"https\"\n            },\n            {\n              \"name\": \":path\",\n              \"value\": \"/v2/polyfill.min.js?features%3Ddefault%2Ces5%2Ces6%2Carray.prototype.includes\"\n            },\n            {\n              \"name\": \"pragma\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"cache-control\",\n              \"value\": \"no-cache\"\n            },\n            {\n              \"name\": \"upgrade-insecure-requests\",\n              \"value\": \"1\"\n            },\n            {\n              \"name\": \"user-agent\",\n              \"value\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36\"\n            },\n            {\n              \"name\": \"accept\",\n              \"value\": \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\"\n            },\n            {\n              \"name\": \"referer\",\n              \"value\": \"https://github.com/Financial-Times/polyfill-service/issues/1922\"\n            },\n            {\n              \"name\": \"accept-encoding\",\n              \"value\": \"gzip, deflate, br\"\n            },\n            {\n              \"name\": \"accept-language\",\n              \"value\": \"en-US,en;q=0.9,da-DK;q=0.8,da;q=0.7\"\n            }\n          ],\n          \"queryString\": [\n            {\n              \"name\": \"features%3Ddefault%2Ces5%2Ces6%2Carray.prototype.includes\",\n              \"value\": \"\"\n            }\n          ],\n          \"cookies\": [],\n          \"headersSize\": -1,\n          \"bodySize\": 0\n        },\n        \"response\": {\n          \"status\": 200,\n          \"statusText\": \"\",\n          \"httpVersion\": \"http/2.0\",\n          \"headers\": [\n            {\n              \"name\": \"status\",\n              \"value\": \"200\"\n            },\n            {\n              \"name\": \"cache-control\",\n              \"value\": \"public, s-maxage=31536000, max-age=604800, stale-while-revalidate=604800, stale-if-error=604800\"\n            },\n            {\n              \"name\": \"content-type\",\n              \"value\": \"text/javascript; charset=utf-8\"\n            },\n            {\n              \"name\": \"content-encoding\",\n              \"value\": \"br\"\n            },\n            {\n              \"name\": \"etag\",\n              \"value\": \"W/\\\"7e-Lg1mQtlDtrujPBTtidtsoNmOeEQ\\\"\"\n            },\n            {\n              \"name\": \"server-timing\",\n              \"value\": \"HIT-CLUSTER, fastly;desc=\\\"Edge time\\\";dur=1\"\n            },\n            {\n              \"name\": \"server-timing\",\n              \"value\": \"HIT, fastly;desc=\\\"Edge time\\\";dur=2\"\n            },\n            {\n              \"name\": \"request_came_from_shield\",\n              \"value\": \"AMS\"\n            },\n            {\n              \"name\": \"x-content-type-options\",\n              \"value\": \"nosniff\"\n            },\n            {\n              \"name\": \"strict-transport-security\",\n              \"value\": \"max-age=31536000; includeSubdomains; preload\"\n            },\n            {\n              \"name\": \"referrer-policy\",\n              \"value\": \"origin-when-cross-origin\"\n            },\n            {\n              \"name\": \"timing-allow-origin\",\n              \"value\": \"*\"\n            },\n            {\n              \"name\": \"normalized-user-agent\",\n              \"value\": \"chrome/72.0.0\"\n            },\n            {\n              \"name\": \"detected-user-agent\",\n              \"value\": \"Chrome/72.0.3626\"\n            },\n            {\n              \"name\": \"accept-ranges\",\n              \"value\": \"bytes\"\n            },\n            {\n              \"name\": \"date\",\n              \"value\": \"Tue, 19 Mar 2019 14:42:22 GMT\"\n            },\n            {\n              \"name\": \"age\",\n              \"value\": \"336448\"\n            },\n            {\n              \"name\": \"vary\",\n              \"value\": \"User-Agent, Accept-Encoding\"\n            },\n            {\n              \"name\": \"content-length\",\n              \"value\": \"126\"\n            }\n          ],\n          \"cookies\": [],\n          \"content\": {\n            \"size\": 222,\n            \"mimeType\": \"text/javascript\"\n          },\n          \"redirectURL\": \"\",\n          \"headersSize\": -1,\n          \"bodySize\": -1,\n          \"_transferSize\": 292\n        },\n        \"cache\": {},\n        \"timings\": {\n          \"blocked\": 3.174999990474433,\n          \"dns\": -1,\n          \"ssl\": -1,\n          \"connect\": -1,\n          \"send\": 0.15800000000000003,\n          \"wait\": 16.01299999592453,\n          \"receive\": 0.9350000182166696,\n          \"_blocked_queueing\": 2.4219999904744327\n        },\n        \"serverIPAddress\": \"151.101.38.109\",\n        \"_initiator\": {\n          \"type\": \"other\"\n        },\n        \"_priority\": \"VeryHigh\",\n        \"_resourceType\": \"document\",\n        \"connection\": \"1549928\",\n        \"pageref\": \"page_2\"\n      }\n    ]\n  }\n}\n```\n\n\n. ",
    "Munter": "@JakeChampion Here's your smallest possible reproduction: https://cdn.polyfill.io/v2/polyfill.js\n``js\n/* Polyfill service v3.25.1\n * For detailed credits and licence information see https://github.com/financial-times/polyfill-service.\n * \n * UA detected: other/0.0.0 (unknown/unsupported; using policyunknown=ignore`)\n * Features requested: default\n *  */\n(function(undefined) {\n/ No polyfills found for current settings /\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n```\nChrome 72: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36. Thank you for the very quick turnaround time on this. This was fixed faster than we could have rolled out a fix of our own code base. ",
    "martivel": "@JakeChampion, Thanks for solving. We currently experiencing the same with our (in production) webshop.. ",
    "joshsalverda": "Well that's really weird... I thought maybe it was a Chrome issue on my end, so I reset all my settings, but still seeing the same thing.\nIt's even happening for every locale now, including english:\n\nI'm not sure if a jsbin will be useful, since it would just be a script pointing to the polyfill service url and an error in the console (or at least that's what it shows for me).\nFor further info these are my network headers:\n\nI asked a few others to test out the url as well and they are also seeing the problem (they see all the polyfill code in their Chrome as well).\nTrying to dig through the code to see where this might be occurring but I'm not super familiar with the code base so it's taking some time.. Here are the response headers, including debug ones:\n\n. FYI looks like this issue is fixed in the latest version, didn't realize it was related to #1922 . ",
    "MeanYou": "Has anyone encountered this problem? My OS is centos7.. I upgraded my npm from 6.4 to 6.9 and this issue was fixed.. > Is this from a fresh clone of the repository? If so, I can't seem to replicate the issue. Could you let me know what node and npm version you are using please? :-)\n\nMy environment is:\n\nNode v11.11.0\nnpm 6.9.0\n\nHere is the output from a fresh git clone and npm ci:\n```shell\n\u279c  ~ git clone git@github.com:Financial-Times/polyfill-service.git\nCloning into 'polyfill-service'...\nremote: Enumerating objects: 118, done.\nremote: Counting objects: 100% (118/118), done.\nremote: Compressing objects: 100% (86/86), done.\nremote: Total 33655 (delta 58), reused 77 (delta 32), pack-reused 33537\nReceiving objects: 100% (33655/33655), 22.04 MiB | 107.00 KiB/s, done.\nResolving deltas: 100% (21527/21527), done.\n\u279c  ~ cd polyfill-service \n\u279c  polyfill-service git:(master) node -v\nv11.11.0\n\u279c  polyfill-service git:(master) npm -v\n6.9.0\n\u279c  polyfill-service git:(master) npm ci\n\nfsevents@1.2.7 install /Users/jake.champion/polyfill-service/node_modules/fsevents\nnode install\n\nnode-pre-gyp info it worked if it ends with ok\nnode-pre-gyp info using node-pre-gyp@0.10.3\nnode-pre-gyp info using node@11.11.0 | darwin | x64\nnode-pre-gyp WARN Using request for node-pre-gyp https download \nnode-pre-gyp info check checked for \"/Users/jake.champion/polyfill-service/node_modules/fsevents/lib/binding/Release/node-v67-darwin-x64/fse.node\" (not found)\nnode-pre-gyp http GET https://fsevents-binaries.s3-us-west-2.amazonaws.com/v1.2.7/fse-v1.2.7-node-v67-darwin-x64.tar.gz\nnode-pre-gyp http 200 https://fsevents-binaries.s3-us-west-2.amazonaws.com/v1.2.7/fse-v1.2.7-node-v67-darwin-x64.tar.gz\nnode-pre-gyp info install unpacking node-v67-darwin-x64/fse.node\nnode-pre-gyp info tarball done parsing tarball\n[fsevents] Success: \"/Users/jake.champion/polyfill-service/node_modules/fsevents/lib/binding/Release/node-v67-darwin-x64/fse.node\" is installed via remote\nnode-pre-gyp info ok \n\npolyfill-library@3.27.4 postinstall /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4\nnpm run build\npolyfill-library@3.27.4 build /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4\nnpm run clean && node tasks/node/updatesources && node tasks/node/buildsources\npolyfill-library@3.27.4 clean /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4\nrimraf ./polyfills/__dist\n\nUpdating third-party polyfills...\n_TypedArray: New polyfill\n  from ../js-polyfills/typedarray.js\n~html5-elements: New polyfill\n  from ../html5shiv/dist/html5shiv.min.js\natob: New polyfill\n  from ../Base64/base64.js\nAudioContext: New polyfill\n  from ../audio-context-polyfill/AudioContext.js\nEventSource: New polyfill\n  from ../event-source-polyfill/eventsource.js\nfetch: New polyfill\n  from node_modules/whatwg-fetch/fetch.js\n * Running module-specific update task update.task.js\nHTMLPictureElement: New polyfill\n  from ../picturefill/dist/picturefill.min.js\n  from ../picturefill/dist/plugins/mutation/pf.mutation.min.js\nIntl: New polyfill\n  from ../intl/dist/Intl.min.js\n * Running module-specific update task update.task.js\nImporting Intl.~locale.* polyfill from /Users/jake.champion/polyfill-service/node_modules/intl/locale-data/jsonp\n716 imported locales\nIntl polyfill imported successfully\nJSON: New polyfill\n  from ../json3/lib/json3.js\nMutationObserver: New polyfill\n  from ../mutationobserver-shim/MutationObserver.js\nPromise: New polyfill\n  from ../yaku/dist/yaku.browser.global.min.js\nUserTiming: New polyfill\n  from ../usertiming/src/usertiming.js\nWebAnimations: New polyfill\n  from ../web-animations-js/web-animations.min.js\nPolyfills updated successfully\nWriting compiled polyfill sources to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.27.4/polyfills/__dist/...\nWaiting for files to be written to disk...\nSources built successfully\n\nnode-zopfli-es@1.0.0 install /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/node-zopfli-es\nnode-gyp rebuild\n\ngyp info it worked if it ends with ok\ngyp info using node-gyp@3.8.0\ngyp info using node@11.11.0 | darwin | x64\ngyp info spawn /usr/bin/python\ngyp info spawn args [ '/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py',\ngyp info spawn args   'binding.gyp',\ngyp info spawn args   '-f',\ngyp info spawn args   'make',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/node-zopfli-es/build/config.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/usr/local/lib/node_modules/npm/node_modules/node-gyp/addon.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/.node-gyp/11.11.0/include/node/common.gypi',\ngyp info spawn args   '-Dlibrary=shared_library',\ngyp info spawn args   '-Dvisibility=default',\ngyp info spawn args   '-Dnode_root_dir=/Users/jake.champion/.node-gyp/11.11.0',\ngyp info spawn args   '-Dnode_gyp_dir=/usr/local/lib/node_modules/npm/node_modules/node-gyp',\ngyp info spawn args   '-Dnode_lib_file=/Users/jake.champion/.node-gyp/11.11.0/<(target_arch)/node.lib',\ngyp info spawn args   '-Dmodule_root_dir=/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/node-zopfli-es',\ngyp info spawn args   '-Dnode_engine=v8',\ngyp info spawn args   '--depth=.',\ngyp info spawn args   '--no-parallel',\ngyp info spawn args   '--generator-output',\ngyp info spawn args   'build',\ngyp info spawn args   '-Goutput_dir=.' ]\ngyp info spawn make\ngyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]\n  CC(target) Release/obj.target/nothing/../node-addon-api/src/nothing.o\n  LIBTOOL-STATIC Release/nothing.a\n  CXX(target) Release/obj.target/zopfli/src/zopfli-binding.o\n  CXX(target) Release/obj.target/zopfli/src/png/zopflipng.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/blocksplitter.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/cache.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/deflate.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/gzip_container.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/hash.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/katajainen.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/lz77.o\nIn file included from ../zopfli/src/zopfli/lz77.c:21:\n../zopfli/src/zopfli/symbols.h:38:12: warning: unused function 'ZopfliGetDistExtraBits' [-Wunused-function]\nstatic int ZopfliGetDistExtraBits(int dist) {\n           ^\n../zopfli/src/zopfli/symbols.h:61:12: warning: unused function 'ZopfliGetDistExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetDistExtraBitsValue(int dist) {\n           ^\n../zopfli/src/zopfli/symbols.h:138:12: warning: unused function 'ZopfliGetLengthExtraBits' [-Wunused-function]\nstatic int ZopfliGetLengthExtraBits(int l) {\n           ^\n../zopfli/src/zopfli/symbols.h:161:12: warning: unused function 'ZopfliGetLengthExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetLengthExtraBitsValue(int l) {\n           ^\n../zopfli/src/zopfli/symbols.h:222:12: warning: unused function 'ZopfliGetLengthSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetLengthSymbolExtraBits(int s) {\n           ^\n../zopfli/src/zopfli/symbols.h:231:12: warning: unused function 'ZopfliGetDistSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetDistSymbolExtraBits(int s) {\n           ^\n6 warnings generated.\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/squeeze.o\nIn file included from ../zopfli/src/zopfli/squeeze.c:28:\n../zopfli/src/zopfli/symbols.h:61:12: warning: unused function 'ZopfliGetDistExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetDistExtraBitsValue(int dist) {\n           ^\n../zopfli/src/zopfli/symbols.h:161:12: warning: unused function 'ZopfliGetLengthExtraBitsValue' [-Wunused-function]\nstatic int ZopfliGetLengthExtraBitsValue(int l) {\n           ^\n../zopfli/src/zopfli/symbols.h:222:12: warning: unused function 'ZopfliGetLengthSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetLengthSymbolExtraBits(int s) {\n           ^\n../zopfli/src/zopfli/symbols.h:231:12: warning: unused function 'ZopfliGetDistSymbolExtraBits' [-Wunused-function]\nstatic int ZopfliGetDistSymbolExtraBits(int s) {\n           ^\n4 warnings generated.\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/tree.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/util.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/zlib_container.o\n  CC(target) Release/obj.target/zopfli/zopfli/src/zopfli/zopfli_lib.o\n  CXX(target) Release/obj.target/zopfli/zopfli/src/zopflipng/zopflipng_lib.o\n  CXX(target) Release/obj.target/zopfli/zopfli/src/zopflipng/lodepng/lodepng.o\n  CXX(target) Release/obj.target/zopfli/zopfli/src/zopflipng/lodepng/lodepng_util.o\n  SOLINK_MODULE(target) Release/zopfli.node\n  COPY ../lib/binding/zopfli.node\n  TOUCH Release/obj.target/action_after_build.stamp\ngyp info ok \n\niltorb@2.4.1 install /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/iltorb\nnode ./scripts/install.js || node-gyp rebuild\n\ninfo looking for cached prebuild @ /Users/jake.champion/.npm/_prebuilds/d6916f-iltorb-v2.4.1-node-v67-darwin-x64.tar.gz\ninfo found cached prebuild \ninfo unpacking @ /Users/jake.champion/.npm/_prebuilds/d6916f-iltorb-v2.4.1-node-v67-darwin-x64.tar.gz\ninfo unpack resolved to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/iltorb/build/bindings/iltorb.node\ninfo unpack required /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/iltorb/build/bindings/iltorb.node successfully\ninfo install Successfully installed iltorb binary!\n\noniguruma@6.2.1 install /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/oniguruma\nnode-gyp rebuild\n\ngyp info it worked if it ends with ok\ngyp info using node-gyp@3.8.0\ngyp info using node@11.11.0 | darwin | x64\ngyp info spawn /usr/bin/python\ngyp info spawn args [ '/usr/local/lib/node_modules/npm/node_modules/node-gyp/gyp/gyp_main.py',\ngyp info spawn args   'binding.gyp',\ngyp info spawn args   '-f',\ngyp info spawn args   'make',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/oniguruma/build/config.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/usr/local/lib/node_modules/npm/node_modules/node-gyp/addon.gypi',\ngyp info spawn args   '-I',\ngyp info spawn args   '/Users/jake.champion/.node-gyp/11.11.0/include/node/common.gypi',\ngyp info spawn args   '-Dlibrary=shared_library',\ngyp info spawn args   '-Dvisibility=default',\ngyp info spawn args   '-Dnode_root_dir=/Users/jake.champion/.node-gyp/11.11.0',\ngyp info spawn args   '-Dnode_gyp_dir=/usr/local/lib/node_modules/npm/node_modules/node-gyp',\ngyp info spawn args   '-Dnode_lib_file=/Users/jake.champion/.node-gyp/11.11.0/<(target_arch)/node.lib',\ngyp info spawn args   '-Dmodule_root_dir=/Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/oniguruma',\ngyp info spawn args   '-Dnode_engine=v8',\ngyp info spawn args   '--depth=.',\ngyp info spawn args   '--no-parallel',\ngyp info spawn args   '--generator-output',\ngyp info spawn args   'build',\ngyp info spawn args   '-Goutput_dir=.' ]\ngyp info spawn make\ngyp info spawn args [ 'BUILDTYPE=Release', '-C', 'build' ]\n  CC(target) Release/obj.target/oniguruma/deps/onig/regcomp.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regenc.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regerror.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regexec.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regext.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/reggnu.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regparse.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regposerr.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regposix.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regsyntax.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regtrav.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/regversion.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/st.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/ascii.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/big5.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/cp1251.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/euc_jp.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/euc_kr.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/euc_tw.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/gb18030.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_1.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_2.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_3.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_4.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_5.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_6.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_7.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_8.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_9.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_10.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_11.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_13.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_14.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_15.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/iso8859_16.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/koi8.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/koi8_r.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/mktable.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/sjis.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/unicode.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf16_be.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf16_le.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf32_be.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf32_le.o\n  CC(target) Release/obj.target/oniguruma/deps/onig/enc/utf8.o\n  LIBTOOL-STATIC Release/oniguruma.a\n  CXX(target) Release/obj.target/onig_scanner/src/onig-result.o\nIn file included from ../src/onig-result.cc:1:\nIn file included from ../src/onig-result.h:4:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n1 warning generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-reg-exp.o\nIn file included from ../src/onig-reg-exp.cc:1:\nIn file included from ../src/onig-reg-exp.h:7:\nIn file included from ../src/onig-result.h:4:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n1 warning generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-scanner.o\nIn file included from ../src/onig-scanner.cc:1:\nIn file included from ../src/onig-scanner.h:4:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-scanner.cc:42:76: warning: 'ToObject' is deprecated: Use maybe version [-Wdeprecated-declarations]\n    OnigString* onigString = node::ObjectWrap::Unwrap(info[0]->ToObject());\n                                                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2549:10: note: 'ToObject' has been explicitly marked\n      deprecated here\n  inline V8_DEPRECATED(\"Use maybe version\", Local ToObject() const);\n         ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-scanner.cc:61:23: warning: 'Utf8Value' is deprecated: Use Isolate version [-Wdeprecated-declarations]\n    String::Utf8Value utf8Value(sources->Get(i));\n                      ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2991:5: note: 'Utf8Value' has been explicitly marked\n      deprecated here\n    V8_DEPRECATED(\"Use Isolate version\",\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n3 warnings generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-scanner-worker.o\nIn file included from ../src/onig-scanner-worker.cc:1:\nIn file included from ../src/onig-scanner-worker.h:7:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-scanner-worker.cc:37:15: warning: 'Call' is deprecated [-Wdeprecated-declarations]\n    callback->Call(2, argv);\n              ^\n../../nan/nan.h:1654:3: note: 'Call' has been explicitly marked deprecated here\n  NAN_DEPRECATED inline v8::Local\n  ^\n../../nan/nan.h:102:40: note: expanded from macro 'NAN_DEPRECATED'\ndefine NAN_DEPRECATED attribute((deprecated))\n                                   ^\n\n../src/onig-scanner-worker.cc:43:15: warning: 'Call' is deprecated [-Wdeprecated-declarations]\n    callback->Call(2, argv);\n              ^\n../../nan/nan.h:1654:3: note: 'Call' has been explicitly marked deprecated here\n  NAN_DEPRECATED inline v8::Local\n  ^\n../../nan/nan.h:102:40: note: expanded from macro 'NAN_DEPRECATED'\ndefine NAN_DEPRECATED attribute((deprecated))\n                                   ^\n\n3 warnings generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-searcher.o\nIn file included from ../src/onig-searcher.cc:1:\nIn file included from ../src/onig-searcher.h:5:\nIn file included from ../src/onig-string.h:6:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n1 warning generated.\n  CXX(target) Release/obj.target/onig_scanner/src/onig-string.o\nIn file included from ../src/onig-string.cc:1:\nIn file included from ../src/onig-string.h:6:\n../../nan/nan.h:1064:44: warning: 'ToString' is deprecated: Use maybe version [-Wdeprecated-declarations]\n      v8::Local string = from->ToString(v8::Isolate::GetCurrent());\n                                           ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2537:3: note: 'ToString' has been explicitly marked\n      deprecated here\n  V8_DEPRECATED(\"Use maybe version\",\n  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-string.cc:26:5: warning: 'Utf8Value' is deprecated: Use Isolate version [-Wdeprecated-declarations]\n  : utf8Value(value), utf8_length_(utf8Value.length()) {\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:2991:5: note: 'Utf8Value' has been explicitly marked\n      deprecated here\n    V8_DEPRECATED(\"Use Isolate version\",\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-string.cc:33:19: warning: 'Value' is deprecated: Use Isolate version [-Wdeprecated-declarations]\n    String::Value utf16Value(value);\n                  ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8.h:3016:5: note: 'Value' has been explicitly marked deprecated\n      here\n    V8_DEPRECATED(\"Use Isolate version\", explicit Value(Local obj));\n    ^\n/Users/jake.champion/.node-gyp/11.11.0/include/node/v8config.h:326:29: note: expanded from macro 'V8_DEPRECATED'\n  declarator attribute((deprecated(message)))\n                            ^\n../src/onig-string.cc:30:40: warning: comparison of integers of different signs: 'int' and 'size_t'\n      (aka 'unsigned long') [-Wsign-compare]\n  hasMultiByteChars = (value->Length() != utf8_length_);\n                       ~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~\n4 warnings generated.\n  SOLINK_MODULE(target) Release/onig_scanner.node\ngyp info ok \n\npolyfill-service@3.25.3 postinstall /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nnpm run build\npolyfill-service@3.25.3 build /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nnpm run clean && node tasks/node/updatesources && node tasks/node/buildsources\npolyfill-service@3.25.3 clean /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nnpm run clean-dist && npm run clean-testdata\npolyfill-service@3.25.3 clean-dist /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nrimraf ./polyfills/__dist\npolyfill-service@3.25.3 clean-testdata /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3\nrimraf ./test/results\n\nUpdating third-party polyfills...\n_TypedArray: New polyfill\n  from node_modules/js-polyfills/typedarray.js\n~html5-elements: New polyfill\n  from node_modules/html5shiv/dist/html5shiv.min.js\nof: New polyfill\n  from node_modules/array.of/array-of.js\natob: New polyfill\n  from node_modules/Base64/base64.js\nAudioContext: New polyfill\n  from node_modules/audio-context-polyfill/AudioContext.js\nEventSource: New polyfill\n  from node_modules/event-source-polyfill/eventsource.js\nfetch: New polyfill\n  from node_modules/whatwg-fetch/fetch.js\n * Running module-specific update task update.task.js\nHTMLPictureElement: New polyfill\n  from node_modules/picturefill/dist/picturefill.min.js\n  from node_modules/picturefill/dist/plugins/mutation/pf.mutation.min.js\nIntl: New polyfill\n  from node_modules/intl/dist/Intl.min.js\n * Running module-specific update task update.task.js\nImporting Intl.~locale.* polyfill from /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/node_modules/intl/locale-data/jsonp\n716 imported locales\nIntl polyfill imported successfully\nJSON: New polyfill\n  from node_modules/json3/lib/json3.js\nMutationObserver: New polyfill\n  from node_modules/mutationobserver-shim/MutationObserver.js\nPromise: New polyfill\n  from node_modules/yaku/dist/yaku.browser.global.min.js\nfromCodePoint: New polyfill\n  from node_modules/string.fromcodepoint/fromcodepoint.js\n * Running module-specific update task update.task.js\nURL: New polyfill\n  from node_modules/js-polyfills/url.js\nUserTiming: New polyfill\n  from node_modules/usertiming/src/usertiming.js\nWebAnimations: New polyfill\n  from node_modules/web-animations-js/web-animations.min.js\nPolyfills updated successfully\nWriting compiled polyfill sources to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.3/polyfills/__dist/...\nWaiting for files to be written to disk...\nSources built successfully\n\npolyfill-library@3.25.1 postinstall /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1\nnpm run build\npolyfill-library@3.25.1 build /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1\nnpm run clean && node tasks/node/updatesources && node tasks/node/buildsources\npolyfill-library@3.25.1 clean /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1\nrimraf ./polyfills/__dist\n\nUpdating third-party polyfills...\n_TypedArray: New polyfill\n  from node_modules/js-polyfills/typedarray.js\n~html5-elements: New polyfill\n  from ../html5shiv/dist/html5shiv.min.js\nof: No change\natob: New polyfill\n  from node_modules/Base64/base64.js\nAudioContext: New polyfill\n  from ../audio-context-polyfill/AudioContext.js\nEventSource: New polyfill\n  from ../event-source-polyfill/eventsource.js\nfetch: New polyfill\n  from node_modules/whatwg-fetch/fetch.js\n * Running module-specific update task update.task.js\nHTMLPictureElement: New polyfill\n  from node_modules/picturefill/dist/picturefill.min.js\n  from node_modules/picturefill/dist/plugins/mutation/pf.mutation.min.js\nIntl: New polyfill\n  from ../intl/dist/Intl.min.js\n * Running module-specific update task update.task.js\nImporting Intl.~locale.* polyfill from /Users/jake.champion/polyfill-service/node_modules/intl/locale-data/jsonp\n716 imported locales\nIntl polyfill imported successfully\nJSON: New polyfill\n  from ../json3/lib/json3.js\nMutationObserver: New polyfill\n  from ../mutationobserver-shim/MutationObserver.js\nPromise: New polyfill\n  from node_modules/yaku/dist/yaku.browser.global.min.js\nfromCodePoint: Polyfill updated, replacing old version\n  from ../string.fromcodepoint/fromcodepoint.js\n * Running module-specific update task update.task.js\nURL: New polyfill\n  from node_modules/js-polyfills/url.js\nUserTiming: New polyfill\n  from ../usertiming/src/usertiming.js\nWebAnimations: New polyfill\n  from node_modules/web-animations-js/web-animations.min.js\nPolyfills updated successfully\nWriting compiled polyfill sources to /Users/jake.champion/polyfill-service/node_modules/polyfill-library-3.25.1/polyfills/__dist/...\nWaiting for files to be written to disk...\nSources built successfully\n\niltorb@2.4.2 install /Users/jake.champion/polyfill-service/node_modules/iltorb\nnode ./scripts/install.js || node-gyp rebuild\n\ninfo looking for cached prebuild @ /Users/jake.champion/.npm/_prebuilds/70659e-iltorb-v2.4.2-node-v67-darwin-x64.tar.gz\ninfo found cached prebuild \ninfo unpacking @ /Users/jake.champion/.npm/_prebuilds/70659e-iltorb-v2.4.2-node-v67-darwin-x64.tar.gz\ninfo unpack resolved to /Users/jake.champion/polyfill-service/node_modules/iltorb/build/bindings/iltorb.node\ninfo unpack required /Users/jake.champion/polyfill-service/node_modules/iltorb/build/bindings/iltorb.node successfully\ninfo install Successfully installed iltorb binary!\n\ndeasync@0.1.14 install /Users/jake.champion/polyfill-service/node_modules/deasync\nnode ./build.js\n\ndarwin-x64-node-11 exists; testing\nBinary is fine; exiting\n\nparcel-bundler@1.11.0 postinstall /Users/jake.champion/polyfill-service/node_modules/parcel-bundler\nnode -e \"console.log('\\u001b[35m\\u001b[1mLove Parcel? You can now donate to our open collective:\\u001b[22m\\u001b[39m\\n > \\u001b[34mhttps://opencollective.com/parcel/donate\\u001b[0m')\"\n\n(node:80630) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 SIGINT listeners added. Use emitter.setMaxListeners() to increase limit\nLove Parcel? You can now donate to our open collective:\n\nhttps://opencollective.com/parcel/donate\nnodemon@1.18.10 postinstall /Users/jake.champion/polyfill-service/node_modules/nodemon\nnode bin/postinstall || exit 0\n\nadded 2276 packages in 168.917s\n\u279c  polyfill-service git:(master) npm start\n\npolyfill-service@4.7.0 start /Users/jake.champion/polyfill-service\n./start_server.sh server/index.js\n\nStarted worker 1\nWarning: metrics are not being recorded for this application. Please provide a FT_GRAPHITE_APP_UUID environment variable\nWarning: errors are not being logged to Sentry for this application. Please provide a SENTRY_DSN environment variable\npolyfill-service configured (graphite=false logging=true sentry=false)\npolyfill-service started (env=development port=8080)\n```\n\nThanks for your reply! My OS is CentOS7, my node version is 11.* and npm version is 6.9.0. I followed your step but I still got No polyfill sources found. Run npm run build to build them.Thanks anyway~. ",
    "surma": "I have no strong opinions on where or how to publish this. NPM seems like a good idea, I was just told to PR this into the WICG/IO repo :)\n. "
}