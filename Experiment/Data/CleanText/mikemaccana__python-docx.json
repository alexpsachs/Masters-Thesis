{
    "mikemaccana": "Awesome! I've added them now! Thanks heaps!\n. Thanks! You too!\n. Sorry, forgot to add this! Done. Do you want me to add you as a maintainer of the project? I;m not doing a lot with Word right now.\n. No probs, thanks for your contributions!\n. Sorry there were some other changes I'd forgotten to pull in. Would it be possible for you to resolve the conflicts and send another pull? I'm unfortunately a little rushed for time right now.\n. I should have checked this request but FYI it failed all the tests and broke the project for a bunch of people. Please check your work before asking me to pull it!\n. Sorry Terry, we should have made the changeover more obvious. I've hopefully sorted that out now. \n. ",
    "gtozzi": "Hi!\nActually, I don't have enough time too to become a maintainer. I'll keep contributing my code as an external contributor.\nI'm also planning to write some documentation and usage examples on the template system I wrote asap.\nThank you for your offer, but I have to refuse.\n. ",
    "tomchipchase": "I've merged the changes, looks like they've been added to this pull request.\n. ",
    "johnwoltman": "I've been comparing tomchipchase's fork with the Mike's repo, and wonder what the general consensus on tcc's work is?  I think it's a lot more convenient to use, but it seems to have dead-ended a long time ago.\nIs there still interest in tcc's method?\n. ",
    "scanny": "Will not merge.\n. Hi el-Salmon, thanks very much for this. Unfortunately I won't be able to commit it since it doesn't actually add the header part to the document and so the header doesn't get saved when saving the document.\nLet me know if you want to add that functionality, otherwise this will be in the comment stream in case someone wants to do something similar :)\n--Steve\n. Sweet patch alexebaj! :)\nI'll get it merged in this weekend.\n--Steve\n. Hi alexebaj, apologies for a few days delay, just getting to this now.\nLittle problem, this commit doesn't pass the test suite and it appears as though it isn't backward-compatible. In particular, using wordrelationships(relationships) for parameter 6 in savedocx throws an exception.\nCould you see if you can fix that up and resubmit?\n--Steve\n. Might be a line-ending problem with your editor changing each line's '\\n' to '\\r\\n'.\nBut merged the change in by hand and committed it, thanks very much for this Akotliar ! :)\n. Did you encounter an actual problem like this? The template/word directory should be created during installation. I'm not sure I see the circumstances where it would be missing.\n. Closing. Not a bug. Declining to merge on rationale that since it does not fix an actual problem, only a theoretically potential problem, the value is outweighed by the potential of introducing a new bug with a change.\n. Hi rskis, we're working on a new, object-oriented release of python-docx so we're not merging any new pull requests into the old version. I'll keep this enhancement on file though and make sure the new version supports these requirements as soon as possible.\n. I just completed it as far as round-tripping a document without making any changes to it this weekend.\nI know that doesn't sound like much from a feature standpoint, but it gives the foundation upon which we can incrementally build individual features, all without losing existing elements from the document (like headers, for example).\nSo I'd say a first release should come out within about 45 days, although it's probably closer to 90 days before it's got feature parity with the current version.\nI'm not sure about that though, I'm hopeful we can move more quickly since it's reimplementation of existing functionality, but my experience is telling me there are unseen challenges between here and there and that the 90 day estimate is probably the most likely :)\nWhat's the use case you're pursuing?\n--Steve\nOn Jul 9, 2013, at 1:22 AM, rskis notifications@github.com\n wrote:\n\nHi scanny,\nok, thanks for the feedback.\nDo you have any estimate on when you will release you're OO version?\nRegards,\nRalf\nAm 09.07.2013 02:34, schrieb scanny:\n\nHi rskis, we're working on a new, object-oriented release of \npython-docx so we're not merging any new pull requests into the old \nversion. I'll keep this enhancement on file though and make sure the \nnew version supports these requirements as soon as possible.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mikemaccana/python-docx/pull/39#issuecomment-20646261.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi Brian, thanks for this :)\n\n\nCouple things:\n- does this work with distutils? Have you tested it? The setup.py for python-docx imports setup from distutils and last time I checked install_requires only works with setuptools.\n- assuming you get that sorted, could you combine these three changes in a single commit? That will keep it clear they're all part of a single update intent. \n. I was thinking more along the lines of switching over to setuptools altogether so dependencies could be supported.\nBut after doing a quick search on that question I came across this try/catch method where you can use setuptools if it's installed and fall back to distutils if setuptools (or distribute) is not installed.\nWhat do you think about that approach? I think adding dependency installation would be a nice enhancement and I'm thinking this would make the best of whatever the installer's environment allowed.\n. Might as well put it all together, that would be great if you could include it :)\n. Thanks Brian :)\n. @reinspijkerman Hi Rein, apologies for taking so long to get to this. I like what you've done a lot. Unfortunately due to my delay in getting to it a couple of commits went ahead and I can't fast-forward merge it. Do you mind rebasing it on master? I'll be prompt about getting it merged in this time :)\n. Merged, apologies for the delay :)\n. @yorickchan: unfortunately I won't be able to commit this. The main reason is that it's not backward compatible; it would break existing code.\nThe good news is that a rewritten version is coming out in the next few months and the fixed image path limitation will go away.\nThanks for submitting anyway, and hoping you'll try out the new release when it comes available :)\n. Merged\n. @phaebz It's too much for one commit. A good start would be to separate the PEP8 stuff out, that could probably go in fairly easily. The test coverage is very spotty so I'm inclined to not risk too many changes. Keeping the commits atomic and combined with new tests the exercise around the change is a good way to get new stuff in if required. In general though my view is we should prioritize keeping this working for current users and invest new feature work in the next release.\nAn alternative would be to skip the PEP8 changes until later and just submit a commit that's focused on the functionality changes. I'll leave it up to you. I'm thinking this would be about four individual commits. The PIL dependency if your breaking that, should be all by itself. Let me know if you need more to go on.\n. Hi Randy, did you try it with the most recent version (0.2.2)? I just released it two days ago.\nIt has a significant update to the picture() function that avoids having to copy images into the media folder (where they accumulate between runs). There's a little more information here. I think it may address this problem as well.\nUnfortunately the documentation is not updated, main reason being the rewritten object-oriented version will be out in a few days, so this current version is pretty much on life-support.\nLet me know if it's still a problem with the new version. Also I can let you know when I finish up the picture functionality if you want to give the new version a try. The new repo is at http://github.com/python-openxml/python-docx. It already has paragraph, style (setting), and table support. Pictures is in the hopper here as we speak.\n. @ransage just wanted to let you know the python-docx rewrite has been released, the new documentation should give you an idea how the picture bit works on the new version.\nUnless you have a compelling reason to stay on the prior version I'm inclined to say the resolution for this issue is to move to the new version rather than trying to patch the old one. So I'll close this issue for now, but let me know if you disagree :)\n. Hi Terry, apologies, I won't be able to commit this as-is.\nThe main problem is that this version is legacy code now and won't be seeing significant new development. Also its test coverage is spotty so there's no real safety net.\nThe main objective now is to keep it stable for the sake of the many folks who have dependencies on it. So the risk of introducing a lot of changes just doesn't have the benefit to justify the risk.\nI don't know what the typical practice is on GitHub, but I think a wise course is to check with the project team first to see how open a project is to accepting pulls. I feel badly that we can't incorporate your work. I hope they are changes you were making to your own fork anyway :)\nSorry I didn't have better news for you.\n. Thanks for this Jordan. I'll get it into the build next time we do a point release.\n. @tavor, this legacy version of python-docx is no longer supported. The current version is at https://github.com/python-openxml/python-docx, and works with Python 3.\n. Hi @vectortronic, unfortunately the legacy versions (v0.2.x) of python-docx in this repository are maintained on a strictly bugfix-only basis, to ensure stability for projects that use it.\nThere is an active \"new\" version (currently at v0.7.4) which is a ground-up rewrite here: https://github.com/python-openxml/python-docx, with documentation here: http://python-docx.readthedocs.org/en/latest/ that you might want to check out for future projects.\nWe're always happy for contributions there, although it's always a good idea to reach out ahead of time to make sure your contribution will be commitable. We accept all contributions, but can only commit those that meet the guidelines :)\n. Btw @vectortronic, you somehow ended up deleting most of the project's files in your commits, which of course would definitely not be committable in any case. You might want to check your Git technique there :)\n. No worries Iyad, glad it worked out for you :)\n. Not clear what you're trying to do with this Alex. This is the legacy version (0.2.x releases) of the code base maintained strictly for projects that incorporated it. The exceptions you've added already exist in the main project https://github.com/python-openxml/python-docx and they aren't called from the 0.2.x code base.\n. ",
    "jaimemrjm": "Please, don't close the request. I just want a method to read the header. At this point, I don't need to save it. This would be another request, but first you need to read, isn't it?\n. ",
    "Akotliar": "github for windows deleted the file and added it. so it doesn't show the line edited.\nFrom this:\nfiletypes = {'rels':'application/vnd.openxmlformats-package.relationships+xml','xml':'application/xml','jpeg':'image/jpeg','gif':'image/gif','png':'image/png'}\nTo This:\nfiletypes = {'rels':'application/vnd.openxmlformats-package.relationships+xml','xml':'application/xml','jpg':'image/jpg','jpeg':'image/jpeg','gif':'image/gif','png':'image/png'}\n. ",
    "dluengo": "I wouldn't name it \"problem\" in fact, my point is, if the library is used\nout of its installation path it won't work because it expects the directory\nto exists, applying the change will create the directory if it doesn't\nexist. It's a comfortable feature :).\nBest regards.\n2013/5/16 scanny notifications@github.com\n\nDid you encounter an actual problem like this? The template/word directory\nshould be created during installation. I'm not sure I see the circumstances\nwhere it would be missing.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mikemaccana/python-docx/pull/28#issuecomment-17974099\n.\n\n\nDavid Luengo\ndluengo @ hispasec.com\nHispasec Sistemas S.L\n. Ok\n2013/6/12 scanny notifications@github.com\n\nClosing. Not a bug. Declining to merge on rationale that since it does not\nfix an actual problem, only a theoretically potential problem, the value is\noutweighed by the potential of introducing a new bug with a change.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mikemaccana/python-docx/pull/28#issuecomment-19313130\n.\n\n\nDavid Luengo\ndluengo @ hispasec.com\nHispasec Sistemas S.L\n. ",
    "rskis": "Hi scanny,\nok, thanks for the feedback.\nDo you have any estimate on when you will release you're OO version?\nRegards,\nRalf\nAm 09.07.2013 02:34, schrieb scanny:\n\nHi rskis, we're working on a new, object-oriented release of \npython-docx so we're not merging any new pull requests into the old \nversion. I'll keep this enhancement on file though and make sure the \nnew version supports these requirements as soon as possible.\n\u2014\nReply to this email directly or view it on GitHub \nhttps://github.com/mikemaccana/python-docx/pull/39#issuecomment-20646261.\n. Hi Steve,\n\nok, thanks for the timeline.\nFor now we will go with the personal docx version I've created.\nAfter your realse of the new docx version I guess we will simply switch over.\nThis should hopefully be not too difficult... ;-)\nregards,\nRalf\nOn Tuesday, July 9, 2013 19:56 CEST, scanny notifications@github.com wrote: \n\nI just completed it as far as round-tripping a document without making any changes to it this weekend.\nI know that doesn't sound like much from a feature standpoint, but it gives the foundation upon which we can incrementally build individual features, all without losing existing elements from the document (like headers, for example).\nSo I'd say a first release should come out within about 45 days, although it's probably closer to 90 days before it's got feature parity with the current version.\nI'm not sure about that though, I'm hopeful we can move more quickly since it's reimplementation of existing functionality, but my experience is telling me there are unseen challenges between here and there and that the 90 day estimate is probably the most likely :)\nWhat's the use case you're pursuing?\n--Steve\nOn Jul 9, 2013, at 1:22 AM, rskis notifications@github.com\n wrote:\n\nHi scanny,\n\nok, thanks for the feedback.\nDo you have any estimate on when you will release you're OO version?\n\nRegards,\nRalf\nAm 09.07.2013 02:34, schrieb scanny:\n\nHi rskis, we're working on a new, object-oriented release of > > python-docx so we're not merging any new pull requests into the old > > version. I'll keep this enhancement on file though and make sure the > > new version supports these requirements as soon as possible.\n\u2014\nReply to this email directly or view it on GitHub > > https://github.com/mikemaccana/python-docx/pull/39#issuecomment-20646261.\n\u2014\nReply to this email directly or view it on GitHub.\n\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/mikemaccana/python-docx/pull/39#issuecomment-20692851\n. \n\n",
    "bjlange": "I've only tested with my local copy of pip, which I believe uses setuptools by default, but I'm not sure. I'll look into it now and let you know what I find.\n. OK, when just running setup.py install locally (with the latest version of distutils, 2.7.5), it throws a warning: UserWarning: Unknown distribution option: 'install_requires', but it still installs, just sans dependencies. So no, it doesn't strictly work with distutils, but functionally it does the same thing as before. Pip somehow figures things out and uses setuptools (or distribute) to install the dependencies. I added another note to the README mentioning that setuptools and pip are required to do it this way. \nIt's up to you as to whether you want to merge this change in or not- if you want to keep it pure distutils and warning-free without any automated dependency installation, that's your call. I can use my own fork for pip/setuptools-dependent stuff.\n. That seems to be a common pattern in some other packages, looks good to me. Do you want me to include that in this pull request or are you going to do that separately?\n. Alright, it's in there. I didn't mess around with any additional setuptools features, but I did test what's there both with pip and by running setup.py install- it works both ways.\n. ",
    "punchagan": "Glad it was useful! \n. ",
    "reinspijkerman": "@scanny Nice to see that you like my approach. The commits that went ahead are merged and the resulting conflicts resolved. I hope this has the intended effect, since I am not very familiar with git (usually I use Mercurial).\n. ",
    "jgadelange": "@reinspijkerman Maybe you should also add the new way of adding images to the example. Like the approach though!\n. Found a bug, in exif = image._getexif(), exif can become None, which is an issue when running: for tag, value in exif.items():\n. ",
    "phaebz": "You are right, I was also thinking (more thinking less typing...) of splitting it up since it is really:\n- PEP8\n- 2to3 tool automated Python 3 changes\n- manual test change lxml Python 3 for byte string\n- PIL dependency\nBut then I think given that you work on a structural reshape in the new repo, I think I will drop this altogether and contribute to the new repo instead. Let's move discussion to https://github.com/python-openxml/python-docx\n. ",
    "terrycojones": "Hey, no problem at all. It was just some quick changes to possibly help out\n- I shouldn't have done so many things in one brach, and if I'd cared about\n  the possible waste of time I'd have asked in advance. So it's all fine!\n  Thanks for putting the code out there in the first place :-)\nOn Tue, Feb 18, 2014 at 12:09 PM, Mike MacCana notifications@github.comwrote:\n\nSorry Terry, we should have made the changeover more obvious. I've\nhopefully sorted that out now.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/mikemaccana/python-docx/pull/61#issuecomment-35373883\n.\n. \n",
    "tavor": "Ran into this issue as well just now. Would be great to a have this library working with python3. \n. ",
    "vectortronic": "Hey, thanks for the note. Your code really saved me a lot of trouble - I\nhave a great script now that can extract everything from a word docx\n(including headers and footers) and formats it pretty decently.\nSorry about the github technique - although I've coded plenty and used\nother version control systems before, I'm very new to Github and still\nlearning the ropes. Thanks for alerting me!\nBest,\n--Iyad\n\nIyad Obeid, PhD\n215-204-9033 / iobeid@temple.edu / www.obeidlab.com\nOn Tue, Aug 5, 2014 at 2:24 AM, Steve Canny notifications@github.com\nwrote:\n\nBtw @vectortronic https://github.com/vectortronic, you somehow ended up\ndeleting most of the project's files in your commits, which of course would\ndefinitely not be committable in any case. You might want to check your\nGit technique there :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/mikemaccana/python-docx/pull/74#issuecomment-51155443\n.\n. \n",
    "StriveForBest": "@scanny i know its legacy. I didn't find the handy method like getdocumenttext(document) in a new project. the only way i was able to extract text using the new version was to loop through paragraphs and call text on them. but it doesn't include text wrapped in the box or any other shape in the word document. the old legacy version has this handy method but the library is broken due to the broken import. my pull request just fixes the import. if you could point me to the right way of how to easy extract all the text from docx document i'd be very grateful. thanks\n. "
}