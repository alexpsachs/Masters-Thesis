{
    "tobegit3hub": "It's fixed and I update the readme.md with \"For boot2docker users, please run boot2docker ip to find out the real IP\". \nEveryone can run seagull in Linux-based system including Ubuntu, CentOS and boot2docker(which is a virtualbox running Linux).\n. Yes, @larrycai . I would like to write some rules of iptable for normal users. Just let others know the risk of exposing the IP and port.\n. These commands work like a charm in my localhost.\n- sudo iptables -A INPUT -p tcp --dport 10086 -s 127.0.0.1 -j ACCEPT\n- sudo iptables -A INPUT -p tcp --dport 10086 -j DROP\nIf I want to revert it, just run the following commands.\n- sudo iptables -D INPUT -p tcp --dport 10086 -s 127.0.0.1 -j ACCEPT\n- sudo iptables -D INPUT -p tcp --dport 10086 -j DROP \nI will update the readme.md for everyone to notice about this :smile: \n. Currently seagull is designed to monitor docker deamon on arbitrary servers, not just for read-only registry. So if I'm using seagull to monitor my containers, I have to make sure only the authorized IPs can view, start, stop or delete my containers. It can be done by nginx as well and iptables is just a simple option for normal users.\nhttps://github.com/tobegit3hub/seagull/issues/7 is under consideration. Thanks @larrycai  for your suggestion :smiley_cat: \n. Thanks @larrycai and that's really better. You can send the pull-request to update the notice part in readme.md and readme-zh.md. I will re-open this issue and wait for your contribution :tada: \n. Fixed by  @larrycai 's pull-request :+1: \n. Everyone wants Web UI, including the one for docker-registry. I will learn how to do that gracefully for docker-register without affecting the current users.\nIf we need it, let's do it :smile: \n. After a careful consideration, I think seagull will not be the suitable UI for private docker registry. Firstly, not every developer has the private registry to monitor. Secondly, monitoring or operating private registry is a little complicated with certification and authentication.\nI'm sorry about that but I have the plan to implement the better UI for private registry.\nFeel free to re-open this if you have any suggestion.\n. Thanks @geekpete  for your concern. It's closed because we think not all seagull users need to manage their registry with the same tool.\nWe have found some tools which are nice for managing the registry like harbor and pirate.\n. Thanks @larrycai . It's a good suggestion and the docker remote API will parent image id which can be used to find out all the layered information.\nI will be back to this if I have something. \n. We can get the detail of image layers in registry. It's from docker registry API and there're something related to certification and authentication. So seagull will not implement this for general usage but if you need it, we will implement a Web UI for private docker registry later.\n. Hi @dfar2008 . Do you mean you want to start a new container in the Web UI of seagull? It's a good idea to allow user to do that. If so, I will update this issue if I have something :smile: \n. Only removing the operation buttons may not work because anyone can access the containers with HTTP APIs. Adding the read-only parameter seems reasonable and we may implement both in back-end and front-end.\nBTW, I think seagull is suitable to run in any machine not just for docker-registry. We may develop a better tool for docker-registry to manage images and others.\n. I will close it because we will implement a better authentication for developers. Please refer to https://github.com/tobegit3hub/seagull/issues/27. Read-only mode seems a switch in anywhere and it may changes a lot in both frond-end and back-end.\nFeel free to reopen it if you really need it. But I think we can do better over this :smiley: \n. After careful consideration, we will not filter the useless containers or images by default. If they're deprecated, you should delete them manually rather than ignoring them.\nSo I will add a filter button to display only running containers in that page. Thanks @larrycai for the valuable suggestion :smile_cat: \n. It's fixed by https://github.com/tobegit3hub/seagull/commit/edfe6c1d75d18ab617ad29d76026417eef42aef4.\nYou can docker pull tobegit3hub/seagull to update the image.\n. Nice catch :+1:  @larrycai It's not implmented because the format of ports array is a little complicated. You can click the \"json\" button to know the full data of the containers.\nI will update this when I finish my job at work.\n. Well this is fixed by https://github.com/tobegit3hub/seagull/commit/9f36ea0786074a8a679ad1a0081d27aa6caec11a.\nI make it looks like the output of command-line interface. Thank @larrycai for the suggestion!\n. That's great and I could like to docker exec if we're using docker 1.3 or higher.\nMy problem is how to build the interface of web console with JS or CSS. I have notice the project mist.io, VNC and jquery.terminal but have no idea how to do this. If you have any suggestion, please let me know and we can build  a more powerful tool for docker :smiley: \n. It's good for us to focus on the running containers which may be much more important than the stopped ones. Thank @larrycai for letting me pay attention to it :+1: \n. Adding the urls of \"#running\" and \"#all\" is not suitable and we don't want two entrances for them.\nHave you noticed that the preference of your language is persistent even though you refresh the pages? Your preference of showing all containers or just running containers should look like this.\nActually this's fix by https://github.com/tobegit3hub/seagull/commit/cc4886e9d0c2321bc225953ed755420097839b8d. It may be the best experience for all users :smiling_imp: \n. Fix #2 and thanks @larrycai :100: \n. We can test it by adding the source add-apt-repository ppa:docker-maint/testing to install docker 1.7-dev.\n. Notice that it only works for 1.7+ Docker Remote API.\n. Hi @mahesh3267 \nYou can access /dockerapi/containers/:id/stats to test if the api response json data for you. Or just click the json button above and change to this api. It may be the problem of the version of docker daemon.\n. The .drone.yml is for deployment so I don't think we have to implemented it. You can see the CI setting of seagull in https://drone.io/github.com/tobegit3hub/seagull.\n. Thanks @jrottenberg for your work. I'm sorry about that someone is doing the same thing like you. Maybe all of you can help to review.\nAnd I will merge your pull-request if you finish it first. Thanks again :heart_decoration: \n. Fix by https://github.com/tobegit3hub/seagull/pull/26. Thanks @jrottenberg :+1: \n. Thanks @hason . You may have used dockerui which provides batch operations to start or stop multiple containers.\nBut we don't need this with seagull. Because all the operations in the page are asynchronous and responsed quickly. If we want to manipulate multiple containers, we need to select them one by one. We can do it better and just click the operation button directly instead of selecting.\nYou can try to delete all the deprecated images and that's much better than \"batch operations\". Feel free to tell more requirements if you want :smiley: \n. I'm gonna close it with wontfix. Feel free to re-open this issue if you really need it :heartbeat: \n. @MorrisJobke That looks really great! Can your friends or anyone help to review this :smile: \n. I'm gonna merge it because it looks great enough. Thanks for all your work @MorrisJobke @symptog @rkusa :+1: \n. Feel free to improve it if you want. Thanks for the patch again :smile: \n. \n. I just want to keep the screenshot in somewhere and thanks @MorrisJobke for your great job. Feel free to ask me to translate. I'm good at both traditional Chinese and simplified Chinese :sparkles: \n. @sampowers Great suggestion. I will return to this issue if I have something :smiley: \n. Now we can sort any attributes in descending and ascending order. Please check it out @sampowers \n. Thanks @sampowers for your suggestion and this's quite an improvement of docker command-line client. I hope we can integrate it with docker client to let everyone enjoy the simplicity :smiley_cat: \n. Thanks @kassanmoor and seagull doesn't support multiple hosts now.\nIt seems a nice requirement for most users. But I have to make sure seagull is simple and easy to use. Maybe we will do more research on docker host and try to support it without affecting current users. Or we may need another cluster management tool which is based on seagull or not, anyway.\n. Thanks @therealprologic . If the port of docker daemon is open, it's not hard to implement. We will seriously consider about it and fell free to take part in the discussion in gitter.\n. We don't use IRC frequently because it's always inactive. Gitter may notify me if I have unread message so I don't have to check for new conversation :smiley: \n. Seagull fetch data from standard docker remote API so it's easy to support remote docker daemon. But the daemon should expose the port and allow CORS. That means user should start docker like docker -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock -api-enable-cors=true -d.\n. Fix with https://github.com/tobegit3hub/seagull/commit/e4b4e36943ac313f868c5695fbda1916946219b8.\nFeel free to improve the implement. There're more things we should do, such as validating server addresses, storing data with cookies and fix the anchor after supporting multi-host.\n. Thanks @therealprologic and this is really what I want. I will find some time to fix it but I'm kind of busy now. If you're interested in it, feel free to implement it. We're loving to let more developers participate in this project :smiley: \n. We take advantage of extracting address of the remote server and having the same interface of docker remote API :dart: \n. Feel free to re-open this until someone could help :smiley: \n. Thanks @baboune . I don't know French so I really need all your help :heart: \nLet me know if it's good enough.\n. @baboune It's the attribute of docker images. If you run docker images, the last attribute is virtualsize. You can learn more in https://github.com/docker/docker/issues/22.\n. That sounds good enough. I'm gonna merge this tonight if no -1. Thanks @jrottenberg and @baboune :smiley:\n. I wanna say good job! Thanks again @jrottenberg and @baboune :heart: \n. Thanks @therealprologic and that looks good enough for us. Refer to https://github.com/docker/docker/issues/26 and https://github.com/docker/docker/issues/7226.\nCurrently seagull doesn't support to run container. There're too many parameters and we have to find out the easiest way to support it. https://github.com/tobegit3hub/seagull/issues/6 is the related issue. If docker daemon can restart containers like supervisord, I think we can close this without doing anything :smile: \n. The data from docker-registry is quite different from docker daemon. We think it's a little inappropriate to support it in seagull. Hopefully we have another project called pirate which may meets all your requirements.\n. Thanks @larrycai and @leitu . I will learn more about it :smiley: \n. Transifex is too heavy for us. Now we only need to translate some words in the single file. I was going to write the post about how to support new languages for seagull, but have no time. It would be great if you have any better idea.\n. Please refer to https://github.com/tobegit3hub/seagull/blob/master/docs/en/development/seagull-translate-guide.md\nAnd in Chinese https://github.com/tobegit3hub/seagull/blob/master/docs/zh/development/seagull-translate-guide.md\n. It's one of docker remote APIs. We should figure out the usage with docker unix socket. I will come back to this issue if I have something :smiley: \n. Wow. Thanks @nikola-simple-task and I have not considered about this.\nIt's the trade-off because I add it for https://github.com/tobegit3hub/seagull/issues/22. And adding the wrong remote server is annoying.\nMaybe we should not ping the server but send the real request to test if the server works.\n. We should make sure that /_ping is using ICMP just like command ping. Have you tested in your environment? @nikola-simple-task \n. Then endpoint _ping is the service from docker daemon. It should work no matter we disable icmp or not. I'm gonna close this and feel free to re-open it if we have more problems about this :smiley: \n. Thanks @goors and it may fix https://github.com/tobegit3hub/seagull/issues/36 \n. It has been here for a long time and sorry to close now. Anyway, feel free to improve this and we will merge it.\n. Duplicated with https://github.com/tobegit3hub/seagull/issues/33\n. Check it out when we need this :smiley: \n. It may be the problem of Bootstrap table. I will try by myself and figure out the best way to fix it :smiley: \n. And thanks for your reporting @ZenGirl \n. Bootstrap works like what we expect. Your advice is reasonable as well. Thinking about it...\n\n. We have tried nowrap but it seems not a good idea. Here's the screenshot.\n\n. Well, now we're making it much prittier. And hope you like it. Close by https://github.com/tobegit3hub/seagull/commit/2055e00ac782222f89faa6a94e0a14b8a8aa890d\n\n. https://github.com/docker/docker/pull/10766 was merged and we can implement this after docker 1.7 released :smiley: \n. Duplicated with https://github.com/tobegit3hub/seagull/issues/13 and fix by https://github.com/tobegit3hub/seagull/commit/7535832132d0cdae2b04d66c9be61c83a959af54 as well.\n. Notice that it only works for 1.7+ Docker Remote API.\n. Yeah, it should look like this.\n\n. Won't fix now.\n. You're right and thanks for you contribution :+1: \n. The json of that container had no startus of exit or not.\n{\nId: \"a8f00100335e4f9c80928ae667f5a3c3f678ad809b1802752cdbbcffad9e7f63\",\nNames: [\n\"/romantic_hoover\"\n],\nImage: \"registry:0.9.1\",\nCommand: \"docker-registry\",\nCreated: 1433607992,\nStatus: \"Exited (3) 10 hours ago\"\n},\n{\nId: \"9c0ac3824353423b39c58b62e14cc67a8cd79db1a9685915df8819ea6ed784f7\",\nNames: [\n\"/tender_hopper\"\n],\nImage: \"registry:0.9.1\",\nCommand: \"docker-registry\",\nCreated: 1433607976\n},\n. It seems you have no permission to access /var/run/docker.sock. Please try again as root user :smiley: \n. Hi @xinnj please checkout if it's problem of permission.\n. Yes, you're right @xinnj \nAre you running the seagull command as root? Please paste the output of docker version.\n. Hi @root2000xyz . It seems the problem of permission but you have already run as root.\nPlease let me have some time to test in CentOS 7 and find out the root cause :)\n. Thanks @amlwwalker and I will have a look. It would be great if it works well with docker unix socket :smiley: \n. This is exactly what I'm gonna do. Thanks @jarischaefer :+1: \n. Sorry for the late response. I will test the patch soon and thanks for your contribution @jarischaefer \ud83d\udc4d \n. There're some updates about golang and beego. Can you rebase from the master branch? The image seems not to be built because of those changes.\n\n. Thanks @jarischaefer and it looks pretty good \ud83d\udc4d \n. Great job @SydOps . It's really nice to make the docker image much smaller.\nBut I'm not familiar with the alpine base image. Please allow me to learn more about this :smiley: \n. Thanks @SydOps and sorry for the slow response.\nWe will checkout your image and try to satisfy most developers' need.\n. Great and I have noticed that news. You're really welcome to contribute the new Dockerfile with Alpine base image :smile: \n. It seems that seagull would not work with the latest beego. I'm going to fix that later. Before that we could git clone the code instead of go get and compile with godep go build.\n. Great. Thanks for your contribution! @elberth90 \n. We don't need any configuration. Please run docker version to show the version of your docker daemon. @llqzwh \n. It seems the change of docker remote API and I will have a look soon.\nThanks for reporting.\n. I can re-produce this issue now. It seems the docker remote APIs change and I could not get the containr's stats from this method in the newer version.\n/* Wrap docker remote API to get container stats */\nfunc (this *DockerapiController) GetContainerStats() {\n    id := this.GetString(\":id\")\n    address := \"/containers/\" + id + \"/stats\"\n    result := RequestUnixSocket(address, \"GET\")\n    this.Ctx.WriteString(result)\n}\nPlease look at this docker remote API change in https://docs.docker.com/engine/reference/api/docker_remote_api/#/v1-19-api-changes and it may be related to the new stream parameter.\nThe default value of stream is true which could be found in https://docs.docker.com/engine/reference/api/docker_remote_api_v1.19/ .\n```\nQuery parameters:\nstream \u2013 1/True/true or 0/False/false, pull stats once then disconnect. Default true.\n``\n.Seagulldoesn't wantstreamAPIs and need to call docker remote API when user requests. Because thestatsAPI changes after v1.19 which refers to the comments about. I change the API call with thestream` parameter and it works well for me.\n\n@llqzwh @myml @rjorgenson You can docker pull tobegit3hub/seagull to update the Seagull image and this should be fixed. Thanks for reporting \u2764\ufe0f \n. Oops, feel sorry about that :(\n. Well, it works like a charm now after restarting the server :)\nThanks for your attention @ohmystack .\n. Well......\n. It's the problem of the change of API from beego 1.6.0. The similar problem and solution is here https://groups.google.com/forum/#!topic/beego-framework/GwwFXnLACT8\n. I have updated beego and bee and run bee fix to resolve this issue :smiley: \n. Thanks for your contribution @dlsniper and we will fix the syntax issue soon. \nAnyways I don't think we need to compile the binary file and copy into Dockerfile. It would be better for me to add the process of compilation in Dockerfile so that it will trigger automated build after pushing the newest code.\n. @dlsniper The syntax issue has been fixed in https://github.com/tobegit3hub/seagull/issues/61 and seagull could be compiled with latest beego after rebasing.\nWe prefer to reserving the golang environment in Dockerfile so that we don't need any script to generate the binary file. That means you just need to modify the Dockerfile to change base image from ubuntu to alpine instead of generating and copying binary file. \n. Thank @dlsniper and I really appreciate your work.\nI'm going to merge this because it's the future way to minimize the docker image of seagull. But right now I will not use it in master branch and change the automated build workflow. Anyway, thanks a lot and the project will be always improving. \n. Thanks for your contribution but I'm sorry that there're some conflicts with the master branch.\nI have godep update to update the latest golang packages with https://github.com/tobegit3hub/seagull/commit/32129fe2ac2a423f4b442466b9f0b8addaddf5e9 \nThanks anyway :+1: \n. It seems that I have updated godep and the latest beego has some syntax errors.\nRefer to https://github.com/astaxie/beego/issues/1623\n. It's not a problem when we use golang 1.4. So I'm gonna update the drone build environment.\n. Drone has only go1 environment and it may not work for beego now. Whatever I'm gonna ignore this error.\n. It may be the problem after upgrading beego to 1.6.0 recently. It's really possible to fix and I'm going to update the docker image soon.\n. It may be duplicated with https://github.com/tobegit3hub/seagull/issues/66\n. I think it's fixed by https://github.com/tobegit3hub/seagull/commit/0c460878f7cb7d238915bbaab55ecd695cebebe3 . Please let me know if there's any other problem.\n. It may be the problem when I upgrade to the newest beego which requires golang 1.6. It is fixed by https://github.com/tobegit3hub/seagull/commit/0c460878f7cb7d238915bbaab55ecd695cebebe3 and please try after docker pull tobegit3hub/seagull.\nThanks for your report @myml :smiley: \n. I think it's fixed now. Please let me know if there's any other problem :smiley: \n. \u5e94\u8be5\u662fbeego\u5347\u7ea7\u540e\u8981\u6c42\u4f7f\u7528golang 1.6\uff0c\u901a\u8fc7\u5347\u7ea7\u57fa\u7840\u955c\u50cf\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\nFix by https://github.com/tobegit3hub/seagull/commit/0c460878f7cb7d238915bbaab55ecd695cebebe3\n. \u9a8c\u8bc1\u901a\u8fc7\uff0c\u611f\u8c22\u60a8\u7684\u652f\u6301\uff0c\u9ebb\u70e6\u91cd\u65b0\u66f4\u65b0Seagull\u955c\u50cf docker pull tobegit3hub/seagull \u3002\n. Thanks @hopesoft for sharing but I think we don't need this now.\n. Looks really great. Thanks for your contribution @Limmen \ud83d\udc4d \n. Resolved by https://github.com/tobegit3hub/seagull/commit/123c9d668d4fa02a24bf4ed65706236aff706b98\n. Thanks @jarischaefer and I will test this soon.\nIt seems the version of golang in CI is wrong which breaks the test. Please just ignore it.\n. Great! It works like a charm and compress the image from 797.3 MB to 313.9 MB.\nThanks for your contribution @arckosfr and I would like to merge this \ud83d\ude04 \n. Nice catch. We will update soon and thanks very much.\n. Thanks for your contribution \ud83c\udf89  @ChoiZ \n. Thanks for reporting.\nI think docker daemon has changed the api and add the prefix of \"sha256:\" for image id.\nI may test and fix it soon.. I have fixed and test in my environment with docker 1.10.3.\nYou can run docker pull tobegit3hub/seagull to upgrade the image which should work like a charm. Thanks again for reporting this.. LGTM, thanks @SKalt . It's fixed and I update the readme.md with \"For boot2docker users, please run boot2docker ip to find out the real IP\". \nEveryone can run seagull in Linux-based system including Ubuntu, CentOS and boot2docker(which is a virtualbox running Linux).\n. Yes, @larrycai . I would like to write some rules of iptable for normal users. Just let others know the risk of exposing the IP and port.\n. These commands work like a charm in my localhost.\n- sudo iptables -A INPUT -p tcp --dport 10086 -s 127.0.0.1 -j ACCEPT\n- sudo iptables -A INPUT -p tcp --dport 10086 -j DROP\nIf I want to revert it, just run the following commands.\n- sudo iptables -D INPUT -p tcp --dport 10086 -s 127.0.0.1 -j ACCEPT\n- sudo iptables -D INPUT -p tcp --dport 10086 -j DROP \nI will update the readme.md for everyone to notice about this :smile: \n. Currently seagull is designed to monitor docker deamon on arbitrary servers, not just for read-only registry. So if I'm using seagull to monitor my containers, I have to make sure only the authorized IPs can view, start, stop or delete my containers. It can be done by nginx as well and iptables is just a simple option for normal users.\nhttps://github.com/tobegit3hub/seagull/issues/7 is under consideration. Thanks @larrycai  for your suggestion :smiley_cat: \n. Thanks @larrycai and that's really better. You can send the pull-request to update the notice part in readme.md and readme-zh.md. I will re-open this issue and wait for your contribution :tada: \n. Fixed by  @larrycai 's pull-request :+1: \n. Everyone wants Web UI, including the one for docker-registry. I will learn how to do that gracefully for docker-register without affecting the current users.\nIf we need it, let's do it :smile: \n. After a careful consideration, I think seagull will not be the suitable UI for private docker registry. Firstly, not every developer has the private registry to monitor. Secondly, monitoring or operating private registry is a little complicated with certification and authentication.\nI'm sorry about that but I have the plan to implement the better UI for private registry.\nFeel free to re-open this if you have any suggestion.\n. Thanks @geekpete  for your concern. It's closed because we think not all seagull users need to manage their registry with the same tool.\nWe have found some tools which are nice for managing the registry like harbor and pirate.\n. Thanks @larrycai . It's a good suggestion and the docker remote API will parent image id which can be used to find out all the layered information.\nI will be back to this if I have something. \n. We can get the detail of image layers in registry. It's from docker registry API and there're something related to certification and authentication. So seagull will not implement this for general usage but if you need it, we will implement a Web UI for private docker registry later.\n. Hi @dfar2008 . Do you mean you want to start a new container in the Web UI of seagull? It's a good idea to allow user to do that. If so, I will update this issue if I have something :smile: \n. Only removing the operation buttons may not work because anyone can access the containers with HTTP APIs. Adding the read-only parameter seems reasonable and we may implement both in back-end and front-end.\nBTW, I think seagull is suitable to run in any machine not just for docker-registry. We may develop a better tool for docker-registry to manage images and others.\n. I will close it because we will implement a better authentication for developers. Please refer to https://github.com/tobegit3hub/seagull/issues/27. Read-only mode seems a switch in anywhere and it may changes a lot in both frond-end and back-end.\nFeel free to reopen it if you really need it. But I think we can do better over this :smiley: \n. After careful consideration, we will not filter the useless containers or images by default. If they're deprecated, you should delete them manually rather than ignoring them.\nSo I will add a filter button to display only running containers in that page. Thanks @larrycai for the valuable suggestion :smile_cat: \n. It's fixed by https://github.com/tobegit3hub/seagull/commit/edfe6c1d75d18ab617ad29d76026417eef42aef4.\nYou can docker pull tobegit3hub/seagull to update the image.\n. Nice catch :+1:  @larrycai It's not implmented because the format of ports array is a little complicated. You can click the \"json\" button to know the full data of the containers.\nI will update this when I finish my job at work.\n. Well this is fixed by https://github.com/tobegit3hub/seagull/commit/9f36ea0786074a8a679ad1a0081d27aa6caec11a.\nI make it looks like the output of command-line interface. Thank @larrycai for the suggestion!\n. That's great and I could like to docker exec if we're using docker 1.3 or higher.\nMy problem is how to build the interface of web console with JS or CSS. I have notice the project mist.io, VNC and jquery.terminal but have no idea how to do this. If you have any suggestion, please let me know and we can build  a more powerful tool for docker :smiley: \n. It's good for us to focus on the running containers which may be much more important than the stopped ones. Thank @larrycai for letting me pay attention to it :+1: \n. Adding the urls of \"#running\" and \"#all\" is not suitable and we don't want two entrances for them.\nHave you noticed that the preference of your language is persistent even though you refresh the pages? Your preference of showing all containers or just running containers should look like this.\nActually this's fix by https://github.com/tobegit3hub/seagull/commit/cc4886e9d0c2321bc225953ed755420097839b8d. It may be the best experience for all users :smiling_imp: \n. Fix #2 and thanks @larrycai :100: \n. We can test it by adding the source add-apt-repository ppa:docker-maint/testing to install docker 1.7-dev.\n. Notice that it only works for 1.7+ Docker Remote API.\n. Hi @mahesh3267 \nYou can access /dockerapi/containers/:id/stats to test if the api response json data for you. Or just click the json button above and change to this api. It may be the problem of the version of docker daemon.\n. The .drone.yml is for deployment so I don't think we have to implemented it. You can see the CI setting of seagull in https://drone.io/github.com/tobegit3hub/seagull.\n. Thanks @jrottenberg for your work. I'm sorry about that someone is doing the same thing like you. Maybe all of you can help to review.\nAnd I will merge your pull-request if you finish it first. Thanks again :heart_decoration: \n. Fix by https://github.com/tobegit3hub/seagull/pull/26. Thanks @jrottenberg :+1: \n. Thanks @hason . You may have used dockerui which provides batch operations to start or stop multiple containers.\nBut we don't need this with seagull. Because all the operations in the page are asynchronous and responsed quickly. If we want to manipulate multiple containers, we need to select them one by one. We can do it better and just click the operation button directly instead of selecting.\nYou can try to delete all the deprecated images and that's much better than \"batch operations\". Feel free to tell more requirements if you want :smiley: \n. I'm gonna close it with wontfix. Feel free to re-open this issue if you really need it :heartbeat: \n. @MorrisJobke That looks really great! Can your friends or anyone help to review this :smile: \n. I'm gonna merge it because it looks great enough. Thanks for all your work @MorrisJobke @symptog @rkusa :+1: \n. Feel free to improve it if you want. Thanks for the patch again :smile: \n. \n. I just want to keep the screenshot in somewhere and thanks @MorrisJobke for your great job. Feel free to ask me to translate. I'm good at both traditional Chinese and simplified Chinese :sparkles: \n. @sampowers Great suggestion. I will return to this issue if I have something :smiley: \n. Now we can sort any attributes in descending and ascending order. Please check it out @sampowers \n. Thanks @sampowers for your suggestion and this's quite an improvement of docker command-line client. I hope we can integrate it with docker client to let everyone enjoy the simplicity :smiley_cat: \n. Thanks @kassanmoor and seagull doesn't support multiple hosts now.\nIt seems a nice requirement for most users. But I have to make sure seagull is simple and easy to use. Maybe we will do more research on docker host and try to support it without affecting current users. Or we may need another cluster management tool which is based on seagull or not, anyway.\n. Thanks @therealprologic . If the port of docker daemon is open, it's not hard to implement. We will seriously consider about it and fell free to take part in the discussion in gitter.\n. We don't use IRC frequently because it's always inactive. Gitter may notify me if I have unread message so I don't have to check for new conversation :smiley: \n. Seagull fetch data from standard docker remote API so it's easy to support remote docker daemon. But the daemon should expose the port and allow CORS. That means user should start docker like docker -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock -api-enable-cors=true -d.\n. Fix with https://github.com/tobegit3hub/seagull/commit/e4b4e36943ac313f868c5695fbda1916946219b8.\nFeel free to improve the implement. There're more things we should do, such as validating server addresses, storing data with cookies and fix the anchor after supporting multi-host.\n. Thanks @therealprologic and this is really what I want. I will find some time to fix it but I'm kind of busy now. If you're interested in it, feel free to implement it. We're loving to let more developers participate in this project :smiley: \n. We take advantage of extracting address of the remote server and having the same interface of docker remote API :dart: \n. Feel free to re-open this until someone could help :smiley: \n. Thanks @baboune . I don't know French so I really need all your help :heart: \nLet me know if it's good enough.\n. @baboune It's the attribute of docker images. If you run docker images, the last attribute is virtualsize. You can learn more in https://github.com/docker/docker/issues/22.\n. That sounds good enough. I'm gonna merge this tonight if no -1. Thanks @jrottenberg and @baboune :smiley:\n. I wanna say good job! Thanks again @jrottenberg and @baboune :heart: \n. Thanks @therealprologic and that looks good enough for us. Refer to https://github.com/docker/docker/issues/26 and https://github.com/docker/docker/issues/7226.\nCurrently seagull doesn't support to run container. There're too many parameters and we have to find out the easiest way to support it. https://github.com/tobegit3hub/seagull/issues/6 is the related issue. If docker daemon can restart containers like supervisord, I think we can close this without doing anything :smile: \n. The data from docker-registry is quite different from docker daemon. We think it's a little inappropriate to support it in seagull. Hopefully we have another project called pirate which may meets all your requirements.\n. Thanks @larrycai and @leitu . I will learn more about it :smiley: \n. Transifex is too heavy for us. Now we only need to translate some words in the single file. I was going to write the post about how to support new languages for seagull, but have no time. It would be great if you have any better idea.\n. Please refer to https://github.com/tobegit3hub/seagull/blob/master/docs/en/development/seagull-translate-guide.md\nAnd in Chinese https://github.com/tobegit3hub/seagull/blob/master/docs/zh/development/seagull-translate-guide.md\n. It's one of docker remote APIs. We should figure out the usage with docker unix socket. I will come back to this issue if I have something :smiley: \n. Wow. Thanks @nikola-simple-task and I have not considered about this.\nIt's the trade-off because I add it for https://github.com/tobegit3hub/seagull/issues/22. And adding the wrong remote server is annoying.\nMaybe we should not ping the server but send the real request to test if the server works.\n. We should make sure that /_ping is using ICMP just like command ping. Have you tested in your environment? @nikola-simple-task \n. Then endpoint _ping is the service from docker daemon. It should work no matter we disable icmp or not. I'm gonna close this and feel free to re-open it if we have more problems about this :smiley: \n. Thanks @goors and it may fix https://github.com/tobegit3hub/seagull/issues/36 \n. It has been here for a long time and sorry to close now. Anyway, feel free to improve this and we will merge it.\n. Duplicated with https://github.com/tobegit3hub/seagull/issues/33\n. Check it out when we need this :smiley: \n. It may be the problem of Bootstrap table. I will try by myself and figure out the best way to fix it :smiley: \n. And thanks for your reporting @ZenGirl \n. Bootstrap works like what we expect. Your advice is reasonable as well. Thinking about it...\n\n. We have tried nowrap but it seems not a good idea. Here's the screenshot.\n\n. Well, now we're making it much prittier. And hope you like it. Close by https://github.com/tobegit3hub/seagull/commit/2055e00ac782222f89faa6a94e0a14b8a8aa890d\n\n. https://github.com/docker/docker/pull/10766 was merged and we can implement this after docker 1.7 released :smiley: \n. Duplicated with https://github.com/tobegit3hub/seagull/issues/13 and fix by https://github.com/tobegit3hub/seagull/commit/7535832132d0cdae2b04d66c9be61c83a959af54 as well.\n. Notice that it only works for 1.7+ Docker Remote API.\n. Yeah, it should look like this.\n\n. Won't fix now.\n. You're right and thanks for you contribution :+1: \n. The json of that container had no startus of exit or not.\n{\nId: \"a8f00100335e4f9c80928ae667f5a3c3f678ad809b1802752cdbbcffad9e7f63\",\nNames: [\n\"/romantic_hoover\"\n],\nImage: \"registry:0.9.1\",\nCommand: \"docker-registry\",\nCreated: 1433607992,\nStatus: \"Exited (3) 10 hours ago\"\n},\n{\nId: \"9c0ac3824353423b39c58b62e14cc67a8cd79db1a9685915df8819ea6ed784f7\",\nNames: [\n\"/tender_hopper\"\n],\nImage: \"registry:0.9.1\",\nCommand: \"docker-registry\",\nCreated: 1433607976\n},\n. It seems you have no permission to access /var/run/docker.sock. Please try again as root user :smiley: \n. Hi @xinnj please checkout if it's problem of permission.\n. Yes, you're right @xinnj \nAre you running the seagull command as root? Please paste the output of docker version.\n. Hi @root2000xyz . It seems the problem of permission but you have already run as root.\nPlease let me have some time to test in CentOS 7 and find out the root cause :)\n. Thanks @amlwwalker and I will have a look. It would be great if it works well with docker unix socket :smiley: \n. This is exactly what I'm gonna do. Thanks @jarischaefer :+1: \n. Sorry for the late response. I will test the patch soon and thanks for your contribution @jarischaefer \ud83d\udc4d \n. There're some updates about golang and beego. Can you rebase from the master branch? The image seems not to be built because of those changes.\n\n. Thanks @jarischaefer and it looks pretty good \ud83d\udc4d \n. Great job @SydOps . It's really nice to make the docker image much smaller.\nBut I'm not familiar with the alpine base image. Please allow me to learn more about this :smiley: \n. Thanks @SydOps and sorry for the slow response.\nWe will checkout your image and try to satisfy most developers' need.\n. Great and I have noticed that news. You're really welcome to contribute the new Dockerfile with Alpine base image :smile: \n. It seems that seagull would not work with the latest beego. I'm going to fix that later. Before that we could git clone the code instead of go get and compile with godep go build.\n. Great. Thanks for your contribution! @elberth90 \n. We don't need any configuration. Please run docker version to show the version of your docker daemon. @llqzwh \n. It seems the change of docker remote API and I will have a look soon.\nThanks for reporting.\n. I can re-produce this issue now. It seems the docker remote APIs change and I could not get the containr's stats from this method in the newer version.\n/* Wrap docker remote API to get container stats */\nfunc (this *DockerapiController) GetContainerStats() {\n    id := this.GetString(\":id\")\n    address := \"/containers/\" + id + \"/stats\"\n    result := RequestUnixSocket(address, \"GET\")\n    this.Ctx.WriteString(result)\n}\nPlease look at this docker remote API change in https://docs.docker.com/engine/reference/api/docker_remote_api/#/v1-19-api-changes and it may be related to the new stream parameter.\nThe default value of stream is true which could be found in https://docs.docker.com/engine/reference/api/docker_remote_api_v1.19/ .\n```\nQuery parameters:\nstream \u2013 1/True/true or 0/False/false, pull stats once then disconnect. Default true.\n``\n.Seagulldoesn't wantstreamAPIs and need to call docker remote API when user requests. Because thestatsAPI changes after v1.19 which refers to the comments about. I change the API call with thestream` parameter and it works well for me.\n\n@llqzwh @myml @rjorgenson You can docker pull tobegit3hub/seagull to update the Seagull image and this should be fixed. Thanks for reporting \u2764\ufe0f \n. Oops, feel sorry about that :(\n. Well, it works like a charm now after restarting the server :)\nThanks for your attention @ohmystack .\n. Well......\n. It's the problem of the change of API from beego 1.6.0. The similar problem and solution is here https://groups.google.com/forum/#!topic/beego-framework/GwwFXnLACT8\n. I have updated beego and bee and run bee fix to resolve this issue :smiley: \n. Thanks for your contribution @dlsniper and we will fix the syntax issue soon. \nAnyways I don't think we need to compile the binary file and copy into Dockerfile. It would be better for me to add the process of compilation in Dockerfile so that it will trigger automated build after pushing the newest code.\n. @dlsniper The syntax issue has been fixed in https://github.com/tobegit3hub/seagull/issues/61 and seagull could be compiled with latest beego after rebasing.\nWe prefer to reserving the golang environment in Dockerfile so that we don't need any script to generate the binary file. That means you just need to modify the Dockerfile to change base image from ubuntu to alpine instead of generating and copying binary file. \n. Thank @dlsniper and I really appreciate your work.\nI'm going to merge this because it's the future way to minimize the docker image of seagull. But right now I will not use it in master branch and change the automated build workflow. Anyway, thanks a lot and the project will be always improving. \n. Thanks for your contribution but I'm sorry that there're some conflicts with the master branch.\nI have godep update to update the latest golang packages with https://github.com/tobegit3hub/seagull/commit/32129fe2ac2a423f4b442466b9f0b8addaddf5e9 \nThanks anyway :+1: \n. It seems that I have updated godep and the latest beego has some syntax errors.\nRefer to https://github.com/astaxie/beego/issues/1623\n. It's not a problem when we use golang 1.4. So I'm gonna update the drone build environment.\n. Drone has only go1 environment and it may not work for beego now. Whatever I'm gonna ignore this error.\n. It may be the problem after upgrading beego to 1.6.0 recently. It's really possible to fix and I'm going to update the docker image soon.\n. It may be duplicated with https://github.com/tobegit3hub/seagull/issues/66\n. I think it's fixed by https://github.com/tobegit3hub/seagull/commit/0c460878f7cb7d238915bbaab55ecd695cebebe3 . Please let me know if there's any other problem.\n. It may be the problem when I upgrade to the newest beego which requires golang 1.6. It is fixed by https://github.com/tobegit3hub/seagull/commit/0c460878f7cb7d238915bbaab55ecd695cebebe3 and please try after docker pull tobegit3hub/seagull.\nThanks for your report @myml :smiley: \n. I think it's fixed now. Please let me know if there's any other problem :smiley: \n. \u5e94\u8be5\u662fbeego\u5347\u7ea7\u540e\u8981\u6c42\u4f7f\u7528golang 1.6\uff0c\u901a\u8fc7\u5347\u7ea7\u57fa\u7840\u955c\u50cf\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\nFix by https://github.com/tobegit3hub/seagull/commit/0c460878f7cb7d238915bbaab55ecd695cebebe3\n. \u9a8c\u8bc1\u901a\u8fc7\uff0c\u611f\u8c22\u60a8\u7684\u652f\u6301\uff0c\u9ebb\u70e6\u91cd\u65b0\u66f4\u65b0Seagull\u955c\u50cf docker pull tobegit3hub/seagull \u3002\n. Thanks @hopesoft for sharing but I think we don't need this now.\n. Looks really great. Thanks for your contribution @Limmen \ud83d\udc4d \n. Resolved by https://github.com/tobegit3hub/seagull/commit/123c9d668d4fa02a24bf4ed65706236aff706b98\n. Thanks @jarischaefer and I will test this soon.\nIt seems the version of golang in CI is wrong which breaks the test. Please just ignore it.\n. Great! It works like a charm and compress the image from 797.3 MB to 313.9 MB.\nThanks for your contribution @arckosfr and I would like to merge this \ud83d\ude04 \n. Nice catch. We will update soon and thanks very much.\n. Thanks for your contribution \ud83c\udf89  @ChoiZ \n. Thanks for reporting.\nI think docker daemon has changed the api and add the prefix of \"sha256:\" for image id.\nI may test and fix it soon.. I have fixed and test in my environment with docker 1.10.3.\nYou can run docker pull tobegit3hub/seagull to upgrade the image which should work like a charm. Thanks again for reporting this.. LGTM, thanks @SKalt . ",
    "larrycai": "this part mostly is done in nginx web layer seems in front of real WEB GUI\n. Looks quite simple.\nBut I don't fully understand the purpose, do you mean to remove web access\nfrom other server ? This is not what I want ;-)\nprobably it is relate to the issues #7 for readonly mode in another machine\nOn Mon, Oct 20, 2014 at 3:40 PM, tobe notifications@github.com wrote:\n\nClosed #2 https://github.com/tobegit3hub/seagull/issues/2.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/tobegit3hub/seagull/issues/2#event-180675091.\n\n\nTrue software development embraces consistent inconsistency.\nblog: http://larrycaiyu.com/blog (en), http://larrycaiyu.com (chinese)\n. Then why not docker run -d -p 127.0.0.1:10086:10086 -v /var/run/docker.sock:/va\nr/run/docker.sock tobegit3hub/seagull , should be good enough for this case.\n. It will be good to remove operation column by some configuration https://github.com/tobegit3hub/seagull/blob/master/static/html/containers.html#L44 & https://github.com/tobegit3hub/seagull/blob/master/static/html/images.html#L29\n. good enough, but I can't see the filter \n. I see it now, i pulled before the new image is bulit\n. could be good choice, or we can have different tag for this, like\ntobegit3hub/seagull:alpine\ntobegit3hub/seagull:dev\nOn Tue, Aug 11, 2015 at 10:11 PM, Bill W notifications@github.com wrote:\n\n@tobegit3hub https://github.com/tobegit3hub\nI change Dockerfile with Alpine Linux, and update in my fork. New image is\nonly 171MB.\n$ docker images |grep seagull\nsydops/seagull                  latest      d24ca67818e9        37 seconds ago       171.6 MB\ntobegit3hub/seagull             latest      38bfd833ae80        6 weeks ago          548.5 MB\nUpdate Dockerfile is here:\nhttps://github.com/SydOps/seagull/blob/master/Dockerfile\nIf you are fine with this change, I will raise pull request, otherwise,\nkeep it in my fork.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/tobegit3hub/seagull/issues/56.\n\n\nTrue software development embraces consistent inconsistency.\nblog: http://larrycaiyu.com/blog (en), http://larrycaiyu.com (chinese)\n. this part mostly is done in nginx web layer seems in front of real WEB GUI\n. Looks quite simple.\nBut I don't fully understand the purpose, do you mean to remove web access\nfrom other server ? This is not what I want ;-)\nprobably it is relate to the issues #7 for readonly mode in another machine\nOn Mon, Oct 20, 2014 at 3:40 PM, tobe notifications@github.com wrote:\n\nClosed #2 https://github.com/tobegit3hub/seagull/issues/2.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/tobegit3hub/seagull/issues/2#event-180675091.\n\n\nTrue software development embraces consistent inconsistency.\nblog: http://larrycaiyu.com/blog (en), http://larrycaiyu.com (chinese)\n. Then why not docker run -d -p 127.0.0.1:10086:10086 -v /var/run/docker.sock:/va\nr/run/docker.sock tobegit3hub/seagull , should be good enough for this case.\n. It will be good to remove operation column by some configuration https://github.com/tobegit3hub/seagull/blob/master/static/html/containers.html#L44 & https://github.com/tobegit3hub/seagull/blob/master/static/html/images.html#L29\n. good enough, but I can't see the filter \n. I see it now, i pulled before the new image is bulit\n. could be good choice, or we can have different tag for this, like\ntobegit3hub/seagull:alpine\ntobegit3hub/seagull:dev\nOn Tue, Aug 11, 2015 at 10:11 PM, Bill W notifications@github.com wrote:\n\n@tobegit3hub https://github.com/tobegit3hub\nI change Dockerfile with Alpine Linux, and update in my fork. New image is\nonly 171MB.\n$ docker images |grep seagull\nsydops/seagull                  latest      d24ca67818e9        37 seconds ago       171.6 MB\ntobegit3hub/seagull             latest      38bfd833ae80        6 weeks ago          548.5 MB\nUpdate Dockerfile is here:\nhttps://github.com/SydOps/seagull/blob/master/Dockerfile\nIf you are fine with this change, I will raise pull request, otherwise,\nkeep it in my fork.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/tobegit3hub/seagull/issues/56.\n\n\nTrue software development embraces consistent inconsistency.\nblog: http://larrycaiyu.com/blog (en), http://larrycaiyu.com (chinese)\n. ",
    "geekpete": "Any progress on this? How's that better plan coming along?\nAnd is it any easier with recent improvements to the registry?\n. Any progress on this? How's that better plan coming along?\nAnd is it any easier with recent improvements to the registry?\n. ",
    "mahesh3267": "Hi All, \nMyself using docker 1.7 , still not getting any values under Processes & Resources for running containers. \nKindly Suggest.\n\n. Hi All, \nMyself using docker 1.7 , still not getting any values under Processes & Resources for running containers. \nKindly Suggest.\n\n. ",
    "jrottenberg": "I've started working on it, not done yet but making progress...\nhttps://github.com/jrottenberg/seagull/tree/fr_FR\n. Check it out now.\n. For 'espace disque', it represents what the number really is, the space\non disk taken by the image, regardless of docker layers.\n. I've started working on it, not done yet but making progress...\nhttps://github.com/jrottenberg/seagull/tree/fr_FR\n. Check it out now.\n. For 'espace disque', it represents what the number really is, the space\non disk taken by the image, regardless of docker layers.\n. ",
    "MorrisJobke": "@tobegit3hub I will ask somebody :) \n. PR review time for @symptog and @pyrokar :rocket: :fireworks: :tada: \n. Maybe @rkusa also wants to have a look at this? :beers: \n. @symptog Fixed\n. Recent fixes are in 872ed9f6fca7e129a7b8c98ca67ceda8007af029 Have a look\n. Propose a better wording :P And keep it short. It isn't that easy and \"Fehlermeldungen\" aren't \"gew\u00fcnscht\" ;)\n. upps ... got that :( \n. @tobegit3hub I also already build the image and had a look ;) \n. @tobegit3hub I will ask somebody :) \n. PR review time for @symptog and @pyrokar :rocket: :fireworks: :tada: \n. Maybe @rkusa also wants to have a look at this? :beers: \n. @symptog Fixed\n. Recent fixes are in 872ed9f6fca7e129a7b8c98ca67ceda8007af029 Have a look\n. Propose a better wording :P And keep it short. It isn't that easy and \"Fehlermeldungen\" aren't \"gew\u00fcnscht\" ;)\n. upps ... got that :( \n. @tobegit3hub I also already build the image and had a look ;) \n. ",
    "symptog": "Administratioren -> Administratoren\n. \"gemeldete Fehlermeldungen\" seriously?\n. Administratioren -> Administratoren\n. \"gemeldete Fehlermeldungen\" seriously?\n. ",
    "sampowers": "I saw the sort feature on http://96.126.127.93:10086/containers, it's like I'd imagined.  Thanks!  Very useful to be able to sort images especially by size or time.  Sorting in containers is kind of cool too, it helps to find related containers and takes some guesswork out of deciding which item to use a start/stop/delete operation on.\n. I saw the sort feature on http://96.126.127.93:10086/containers, it's like I'd imagined.  Thanks!  Very useful to be able to sort images especially by size or time.  Sorting in containers is kind of cool too, it helps to find related containers and takes some guesswork out of deciding which item to use a start/stop/delete operation on.\n. ",
    "prologic": "IHMO the way to support this would be thorugh integrating with:\n- https://github.com/docker/machine\n- https://github.com/docker/swarm\n. IRc is preferred :)\n. :)\n. See: Ping the Docker Server\n. +1 Just tried out seagull on my own infrastructure for the first time; works nicely. Needs auth/security though :)\n. Docker already has this feature you just need to set the restart policy. See docker run --help. I assume you can also set this via the Remote API. So really Seagull should just allow the user to set this :)\n. Agreed. If Seagull doesn't \"run\" containers but just monitors them; then it's up to the developer/user to have set the correct \"restart policy\" in the first place.\n. IHMO the way to support this would be thorugh integrating with:\n- https://github.com/docker/machine\n- https://github.com/docker/swarm\n. IRc is preferred :)\n. :)\n. See: Ping the Docker Server\n. +1 Just tried out seagull on my own infrastructure for the first time; works nicely. Needs auth/security though :)\n. Docker already has this feature you just need to set the restart policy. See docker run --help. I assume you can also set this via the Remote API. So really Seagull should just allow the user to set this :)\n. Agreed. If Seagull doesn't \"run\" containers but just monitors them; then it's up to the developer/user to have set the correct \"restart policy\" in the first place.\n. ",
    "kassanmoor": "happy to know that you guys are working on this, thanks!\n. happy to know that you guys are working on this, thanks!\n. ",
    "baboune": "Some additional comments.\nrunning_stopped_containers_and: 'd\u00e9marrage des conteneur arr\u00eat\u00e9s, ainsi que'\nIn general, I would recommend replacing: \"stopp\u00e9\"  with \"arr\u00eat\u00e9\".  Such as\n\"La page des conteneurs affiche tous les conteneurs docker d\u00e9marr\u00e9s ou arr\u00eat\u00e9s.\"\nNot sure about this: \"virtualsize: 'Espace disque'\".  Literally virtual size is \"taille virtuelle\".  What does this parameter imply?\n\"search_no_docker_image: 'La recherche n\\'a retourn\u00e9 aucun r\u00e9sultats',\" -> search_no_docker_image: 'La recherche n\\'a retourn\u00e9 aucun r\u00e9sultat'. No \"s\" at the end.\n. @tobegit3hub Sure.  Repeating my question, what does  \"virtualsize: 'Espace disque'\" imply? Could you describe this a bit further?\n. Some additional comments.\nrunning_stopped_containers_and: 'd\u00e9marrage des conteneur arr\u00eat\u00e9s, ainsi que'\nIn general, I would recommend replacing: \"stopp\u00e9\"  with \"arr\u00eat\u00e9\".  Such as\n\"La page des conteneurs affiche tous les conteneurs docker d\u00e9marr\u00e9s ou arr\u00eat\u00e9s.\"\nNot sure about this: \"virtualsize: 'Espace disque'\".  Literally virtual size is \"taille virtuelle\".  What does this parameter imply?\n\"search_no_docker_image: 'La recherche n\\'a retourn\u00e9 aucun r\u00e9sultats',\" -> search_no_docker_image: 'La recherche n\\'a retourn\u00e9 aucun r\u00e9sultat'. No \"s\" at the end.\n. @tobegit3hub Sure.  Repeating my question, what does  \"virtualsize: 'Espace disque'\" imply? Could you describe this a bit further?\n. ",
    "leitu": "Transifex will be a good tool for this\nOn 12/12/14, Larry Cai notifications@github.com wrote:\n\nwill be nice to have translation guideline under development category or\nother place, so it can be shown to volunteers to get support.\nIt could get easy help for people has less knowledge of seagull.\nlarry\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/tobegit3hub/seagull/issues/31\n\n\nCheers!\nAlex Tu\nShangHai,China\n. Transifex will be a good tool for this\nOn 12/12/14, Larry Cai notifications@github.com wrote:\n\nwill be nice to have translation guideline under development category or\nother place, so it can be shown to volunteers to get support.\nIt could get easy help for people has less knowledge of seagull.\nlarry\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/tobegit3hub/seagull/issues/31\n\n\nCheers!\nAlex Tu\nShangHai,China\n. ",
    "YingyiDai": "Good job!\n. Good job!\n. ",
    "xinnj": "Hi,\nThe docker service was started by root. I don\u2019t know anything else I can do. BTW, dockerui works fine at the same platform. I believe dockerui is also using the same docker.sock.\nXin\n\u53d1\u4ef6\u4eba: tobe\n\u53d1\u9001\u65f6\u95f4: \u200e2015\u200e\u5e74\u200e6\u200e\u6708\u200e26\u200e\u65e5, \u200e\u661f\u671f\u4e94 \u200e9\u200e:\u200e50\n\u6536\u4ef6\u4eba: tobegit3hub/seagull\n\u6284\u9001: iPad\nHi @xinnj please checkout if it's problem of permission.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi,\nThe docker service was started by root. I don\u2019t know anything else I can do. BTW, dockerui works fine at the same platform. I believe dockerui is also using the same docker.sock.\nXin\n\u53d1\u4ef6\u4eba: tobe\n\u53d1\u9001\u65f6\u95f4: \u200e2015\u200e\u5e74\u200e6\u200e\u6708\u200e26\u200e\u65e5, \u200e\u661f\u671f\u4e94 \u200e9\u200e:\u200e50\n\u6536\u4ef6\u4eba: tobegit3hub/seagull\n\u6284\u9001: iPad\nHi @xinnj please checkout if it's problem of permission.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "root2000xyz": "[root@k8s-master ~]# docker run -p 10086:10086 -v /var/run/docker.sock:/var/run/docker.sock tobegit3hub/seagull\nUsage of loopback devices is strongly discouraged for production use. Either use --storage-opt dm.thinpooldev or use --storage-opt dm.no_warn_on_loop_devices=true to suppress this warning.\n2015/10/19 02:49:53 [asm_amd64.s:2232] [I] http server Running on :10086\nError to connect to /var/run/docker.sock dial unix /var/run/docker.sock: permission denied\nError to connect to /var/run/docker.sock dial unix /var/run/docker.sock: permission denied\n[root@k8s-master ~]# docker version\nClient version: 1.7.1\nClient API version: 1.19\nPackage Version (client): docker-1.7.1-115.el7.x86_64\nGo version (client): go1.4.2\nGit commit (client): 446ad9b/1.7.1\nOS/Arch (client): linux/amd64\nServer version: 1.7.1\nServer API version: 1.19\nPackage Version (server): docker-1.7.1-115.el7.x86_64\nGo version (server): go1.4.2\nGit commit (server): 446ad9b/1.7.1\nOS/Arch (server): linux/amd64\n. [root@k8s-master ~]# docker run -p 10086:10086 -v /var/run/docker.sock:/var/run/docker.sock tobegit3hub/seagull\nUsage of loopback devices is strongly discouraged for production use. Either use --storage-opt dm.thinpooldev or use --storage-opt dm.no_warn_on_loop_devices=true to suppress this warning.\n2015/10/19 02:49:53 [asm_amd64.s:2232] [I] http server Running on :10086\nError to connect to /var/run/docker.sock dial unix /var/run/docker.sock: permission denied\nError to connect to /var/run/docker.sock dial unix /var/run/docker.sock: permission denied\n[root@k8s-master ~]# docker version\nClient version: 1.7.1\nClient API version: 1.19\nPackage Version (client): docker-1.7.1-115.el7.x86_64\nGo version (client): go1.4.2\nGit commit (client): 446ad9b/1.7.1\nOS/Arch (client): linux/amd64\nServer version: 1.7.1\nServer API version: 1.19\nPackage Version (server): docker-1.7.1-115.el7.x86_64\nGo version (server): go1.4.2\nGit commit (server): 446ad9b/1.7.1\nOS/Arch (server): linux/amd64\n. ",
    "amlwwalker": "Being able to make api calls via the web api would be nice, especially as if you are using boot2docker for development, you dont get access to the docker socket via unix:///var/run/docker.sock,  instead its just tcp.\nIts a nice little application, I think its missing being able to create containers, I was looking at adding that, but first need the development process to be smooth.\nI did something similar a while ago, and for creating containers I had a list of the types of images that were available to make containers from, you gave it a name and a github repository and it pulled the repository. You also specify shell commands to run once its up. \nIt meant developers could build apps, push to github and in a few clicks have their app running in docker container. Your UI is nicer than mine though ;)\n. Being able to make api calls via the web api would be nice, especially as if you are using boot2docker for development, you dont get access to the docker socket via unix:///var/run/docker.sock,  instead its just tcp.\nIts a nice little application, I think its missing being able to create containers, I was looking at adding that, but first need the development process to be smooth.\nI did something similar a while ago, and for creating containers I had a list of the types of images that were available to make containers from, you gave it a name and a github repository and it pulled the repository. You also specify shell commands to run once its up. \nIt meant developers could build apps, push to github and in a few clicks have their app running in docker container. Your UI is nicer than mine though ;)\n. ",
    "jarischaefer": "I updated the branch.\n. I guess you did not intend to ping me in this pull request? Mine is still open, though.\n. I updated the branch.\n. I guess you did not intend to ping me in this pull request? Mine is still open, though.\n. ",
    "ozbillwang": "No more updates, then close it. \nI have pushed the image to hub.docker.com from my fork (https://hub.docker.com/r/bwits/seagull/), and works fine in that way. \n. @tobegit3hub \nNow you need think to move the image to alpine. \nhttp://siliconangle.com/blog/2016/02/09/docker-gets-minimalist-with-plan-to-migrate-images-to-alpine-linux/\nIf you are happy this this idea, I will raise pull request to update Dockerfile with Alpine base image.\n. @tobegit3hub \nI built the docker image with error now, can you take a look?\n```\nStep 7 : RUN go get github.com/tobegit3hub/seagull/\n ---> Running in eb3b8cfd6053\ngithub.com/tobegit3hub/seagull/controllers\ngo/src/github.com/tobegit3hub/seagull/controllers/default.go:14: this.TplNames undefined (type *MainController has no field or method TplNames)\n```\n. @tobegit3hub \nSame as I worked on Alpine image half year before, seems you have same attitude on @dlsniper 's idea again. Not easily accept new idea. \nNow docker.io itself wants to move the base images to alpine, you accept that alpine can be the base image for Seagull as well. But why not go further again?\nI vote up for @dlsniper's idea, some users like mini seagull image. But maybe not do that in master branch directly. So what can we do?\n1) I raise a pull request to build seagull on Alpine to master branch, it will replace currently base image Dockerfile with alpine base image. Of course you need test the image that no functions are lost.\n2) @dlsniper can raise a pull request and merge to another branch, maybe it can be called mini or something else. @tobegit3hub you need create that branch on your repository first.\n3) In hub.docker.com automation build, we can build image on different branches directly, so finally you should have several images in one account.\ntobegit3hub/seagull:latest (same as alpine-3.3)\ntobegit3hub/seagull:alpine-3.3 (size is about 170MB)\ntobegit3hub/seagull:mini  (size is about 20MB)\n...\nLet you me if you are fine with this or not. \n. The idea to test the build is another good feature, you should build a new travis (or CircleCI in your case) job to automation the testing process. \nThis feature should be merged to master branch. \n. No more updates, then close it. \nI have pushed the image to hub.docker.com from my fork (https://hub.docker.com/r/bwits/seagull/), and works fine in that way. \n. @tobegit3hub \nNow you need think to move the image to alpine. \nhttp://siliconangle.com/blog/2016/02/09/docker-gets-minimalist-with-plan-to-migrate-images-to-alpine-linux/\nIf you are happy this this idea, I will raise pull request to update Dockerfile with Alpine base image.\n. @tobegit3hub \nI built the docker image with error now, can you take a look?\n```\nStep 7 : RUN go get github.com/tobegit3hub/seagull/\n ---> Running in eb3b8cfd6053\ngithub.com/tobegit3hub/seagull/controllers\ngo/src/github.com/tobegit3hub/seagull/controllers/default.go:14: this.TplNames undefined (type *MainController has no field or method TplNames)\n```\n. @tobegit3hub \nSame as I worked on Alpine image half year before, seems you have same attitude on @dlsniper 's idea again. Not easily accept new idea. \nNow docker.io itself wants to move the base images to alpine, you accept that alpine can be the base image for Seagull as well. But why not go further again?\nI vote up for @dlsniper's idea, some users like mini seagull image. But maybe not do that in master branch directly. So what can we do?\n1) I raise a pull request to build seagull on Alpine to master branch, it will replace currently base image Dockerfile with alpine base image. Of course you need test the image that no functions are lost.\n2) @dlsniper can raise a pull request and merge to another branch, maybe it can be called mini or something else. @tobegit3hub you need create that branch on your repository first.\n3) In hub.docker.com automation build, we can build image on different branches directly, so finally you should have several images in one account.\ntobegit3hub/seagull:latest (same as alpine-3.3)\ntobegit3hub/seagull:alpine-3.3 (size is about 170MB)\ntobegit3hub/seagull:mini  (size is about 20MB)\n...\nLet you me if you are fine with this or not. \n. The idea to test the build is another good feature, you should build a new travis (or CircleCI in your case) job to automation the testing process. \nThis feature should be merged to master branch. \n. ",
    "dlsniper": "I have created a version of this which in turn shrinks the image down from ~560mb to about ~20mb, please see #62.\n. Seems I'll have to fix the compilation issue as well, working on a patch right now.\n. Unfortunately beego proves to be a difficult foe so I've had to open up this issue: https://github.com/astaxie/beego/issues/1689 to understand where things fail and why.\n. I'm sorry, I'm giving up. Please make the Godeps correctly then the above thing will work as intended. Ping me when Gopdes gets solved and I'll update if needed. Thank you.\n. > Anyways I don't think we need to compile the binary file and copy into Dockerfile. It would be better for me to add the process of compilation in Dockerfile so that it will trigger automated build after pushing the newest code.\nCan you please expand on this? Not having to ship off the code / whole Go distribution is how the container should be the created. Plus, the image size is a lot smaller this way, from ~180mb to ~20mb.\nCan you please help me better understand your use case? If it's building from CircleCi then I can help out with the reminder of the processes so that when a build finishes on master it's uploaded to Docker Hub. Thank you. \n. But that means you are shipping the source code and the whole Go installation for everyone that wants to use seagull instead of just the product itself. I don't see any value in that (plus it increases the docker size 10 times). With the current change you can still run the tests in a docker container + it generates a much smaller image.\nI'll rebase and let you decide if you want to merge this or not but I will not follow the recommendation to just change from golang to `golang-alpine, sorry.\n. I have created a version of this which in turn shrinks the image down from ~560mb to about ~20mb, please see #62.\n. Seems I'll have to fix the compilation issue as well, working on a patch right now.\n. Unfortunately beego proves to be a difficult foe so I've had to open up this issue: https://github.com/astaxie/beego/issues/1689 to understand where things fail and why.\n. I'm sorry, I'm giving up. Please make the Godeps correctly then the above thing will work as intended. Ping me when Gopdes gets solved and I'll update if needed. Thank you.\n. > Anyways I don't think we need to compile the binary file and copy into Dockerfile. It would be better for me to add the process of compilation in Dockerfile so that it will trigger automated build after pushing the newest code.\nCan you please expand on this? Not having to ship off the code / whole Go distribution is how the container should be the created. Plus, the image size is a lot smaller this way, from ~180mb to ~20mb.\nCan you please help me better understand your use case? If it's building from CircleCi then I can help out with the reminder of the processes so that when a build finishes on master it's uploaded to Docker Hub. Thank you. \n. But that means you are shipping the source code and the whole Go installation for everyone that wants to use seagull instead of just the product itself. I don't see any value in that (plus it increases the docker size 10 times). With the current change you can still run the tests in a docker container + it generates a much smaller image.\nI'll rebase and let you decide if you want to merge this or not but I will not follow the recommendation to just change from golang to `golang-alpine, sorry.\n. ",
    "llqzwh": "docker version\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.5.1\n Git commit:   a34a1d5\n Built:\n OS/Arch:      linux/amd64\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.5.1\n Git commit:   a34a1d5\n Built:\n OS/Arch:      linux/amd64\n. # docker version\nClient:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.5.1\n Git commit:   a34a1d5\n Built:\n OS/Arch:      linux/amd64\nServer:\n Version:      1.9.1\n API version:  1.21\n Go version:   go1.5.1\n Git commit:   a34a1d5\n Built:\n OS/Arch:      linux/amd64\n. ",
    "myml": "use docker run -d -p 10086:10086 -v /var/run/docker.sock:/var/run/docker.sock tobegit3hub/seagull\nno value for attributes\n. use docker run -d -p 10086:10086 -v /var/run/docker.sock:/var/run/docker.sock tobegit3hub/seagull\nno value for attributes\n. ",
    "rjorgenson": "I am having this same issue on Docker version 1.11.2, build b9f10c9 Ubuntu 16.04.1 docker.io package.\n. I am having this same issue on Docker version 1.11.2, build b9f10c9 Ubuntu 16.04.1 docker.io package.\n. ",
    "champbay": "the same to me\n. the same to me\n. ",
    "arckosfr": "Yep i see it (for CI) thanks for taking a look :+1: \n. Yep i see it (for CI) thanks for taking a look :+1: \n. ",
    "ChoiZ": ":+1: \n. Welcome ;-)\n. :+1: \n. Welcome ;-)\n. "
}