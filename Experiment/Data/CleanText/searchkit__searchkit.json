{
    "joemcelroy": "Not at the moment, we want to focus on elasticsearch. Also we would need to develop our components towards the lowest common denominator where we could only add features which both search products implement. \n. This and react native we want to investigate soon. Thanks for heads up. Can you identify the main issues?\n. Not yet, we need to do a spike on this soon.\n. Great! Thanks for having a quick look. Could you share your universal project using searchkit? we can help debug too if you commit. \n. Yeh actually we are looking at being able to provide your own history. Noticed a couple of forks wanted this feature. Thanks!. No update yet unfortunately.. yeh I understand, its one of our priority issues.. Hey all,\nSo ash has managed to get server side rendering of searchkit components using nextjs. It works but needs refactoring to push some of the hydrating logic down into searchkit core.\nhttps://github.com/searchkit/searchkit-universal. I'll do a blog post with some of the issues we encountered and issues remaining. . @mmjd take a look at searchkit-universal, thats a working prototype of searchkit working in next.js. The way you integrate it with next.js will improve later on but right now its works today with next.js.. Thank you for letting us know. Fixing now!\n. Thanks for letting me know.\n. closing this issue as now resolved over gitter\n. Done, delivered in 0.3.2\n. now merged\n. https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-source-filtering.html\n. closing PR 21 to focus on PR 22\n. issue #28 \n. We were thinking of having a Date Range filter, picking two dates to filter the results. Using this component http://react-component.github.io/calendar/examples/antd-range-calendar.html \nI put this for 0.6 release\n. The good thing about react-component ones is that we use the rc-slider component from them. Some of the dependencies used in rc-slider would be reused in rc-calendar so potentially be a smaller footprint than other libraries.\n. a workaround would be to index a year field and set a sensible min - max\n<RangeFilter min={1990} max={2016} interval={1} field=\"yearField\" title=\"First Registration\" id=\"firstReg\" />\n. fixed. closing issue\n. done\n. searchOnLoad boolean option is in, we just need SearchkitManager to aware no search has been completed yet and NoHits to render \"intro\" view.\n. http://docs.searchkit.co/stable/docs/core/SearchkitManager.html\nsearchOnLoad option has been released and http://docs.searchkit.co/stable/docs/components/basics/initial-loader.html component renders before any search query has been performed.\n. closing issue. @thomasmodeneis let me know if you need extra functionality.\n. You could make searchOnLoad boolean could be true / false depending if the url has a query param. If url has a query param, searchOnLoad is true and should trigger a search to ES, otherwise false.\n. done in develop\n. switched to typings using ambient dependencies. \n. Could you create a PR, base off staging branch and Il review it! Thanks. #17\n. Thanks Gregory, \nYeh this will be a good addition. HierarchicalRefinementFilter supports order aswell using the orderKey and orderDirection props so we should align the props to that.\n. duplicate of issue #40. Closing this out.\n. and probably needs to more deep than within the component as more components which update search state like selecting filters needs to return to the top. \n. thanks this looks good!\n. closing this issue, linked to this #236 . done\n. #60 \n. thanks il clean that up\n. yeh ill do a quick search. I thought i replaced them all with react\n. im closing this as we now have support for different list display components for pagination. \n. done\n. Issue is design for removing a particular filter when combined. Haven't yet seen a good pattern for this yet but yeh good suggestion\n. #85\n. thanks, i renamed it to hitsCount now.\nThe label is translated in parent component via resultsFoundLabel prop.\n. Having default html / styles for common grid / list patterns. Bootstrap like. So others don't need to create their own css / html, less friction to get started.\n. done\n. closing this issue. Moving issues over to their own repos\n. @GregoryPotdevin I can close this issue?\n. done, waiting on merge\n. we had a working prototype of searchbox suggestions before release. We used suggesters https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html as they are quick and performant. Its built for sites which have high volume queries and require autocomplete functionality.\nhttps://github.com/searchkit/searchkit/blob/dd56cdfd4ed0ed23fd94de530457fa236ea87291/src/components/search/search-box/src/SearchBox.tsx#L76\nIn terms of UX, having searchOnChange and an autocomplete component showing results can be overkill. \nThis issue is related to #31 \n. Yeh, its up to the user how its configured, we just need to communicate that it isn't advisable or that the component shouldn't provide searchByChange option. \nWe hide the use of suggesters within the component accessor, specifying a few fields on which to generate suggestions from. For things like \"quick hits\", we can communicate how to index the data well in our documents and specify the quick hit fields in the component config\n. <searchbox-autocomplete sources={[\nSuggestionSource({label:\"Suggestions\", component:SuggestionHit, field:\"title\"}),\nQuickHitSource({label:\"Movies\", component:MovieQuickHit, field:\"movieSuggestions\"})\n]} />\na possible example. With an array, you will display the suggestion \"hits\" in groups. Developers can add their own types if needed (like a type for AggFilter etc) \n. not yet :( We have been busy on other projects. Contributions welcome! :)\n. linked to this #31. Closing issue. This is fixed right @GregoryPotdevin?\n. Hi there,\nSearchkit relies on an ElasticSearch service, either hosted locally or externally accessible. Searchkit creates an elasticsearch query and renders the response from Elasticsearch. You might be able to mock the first response in a local json file but will fall apart when you try interacting with the components like searching.\nAny reason why you need it to use local data? You can sign up to a free Elasticsearch instance like http://www.searchly.com/pricing/ or use our Elasticsearch movies host http://demo.searchkit.co/api/movies if you want to experiment on Searchkit.\nJoe\n. Hey, \nHave a readup on indexing data into elasticsearch. Its pretty easy to get started. A good indexer example would be our searchkit-demo (https://github.com/searchkit/searchkit-demo/blob/master/movie-index/indexer.coffee). This takes a JSON file and indexes it into an ES server. \nYou can start on the free one. I had searchkit.co running on it with 5000 docs for a while! \nJoe\n. Hey\nThese helper methods prepare the data thats in imdbMoviesNew so that its searchable and can generate good aggregations to power our filter components.\nTo summarize, the indexer deletes the movie index, recreates the movie index with a mapping (mapping is the index field definitions) and pushes all the movies documents to the index.\n- We omit fields when there is no data. The compact fn returns an object with null data omitted. See lodash fn compact.\n- coffeescript does implicit returns in functions so l82 is equivalent to return def\n- getMultiFieldDef is a helper function which creates a multifield mapping definition for a field, one field which is passed through the standard analyzer and one field which is the raw data. Analyzed field is used for when we want to use the field for searching and the raw data one is when we want to use it for our filter components\nIndexer was our own quick hack to get data in quick, not to be used as a boilerplate with good practices. This is all generic elasticsearch concepts which are not to do with Searchkit and you can find help in other places like Stackoverflow, blogs etc. \nDefinitely want to revisit the story on helping new developers get started quicker on ES soon though!\nJoe \n. thanks. fixing this\n. done\n. This is done in 0.8 :)\n. Hi there,\nAre you using typescript or ES6? Could you paste us the webpack loader configuration you use and suggest how you would like it improved.\nIf you're referring to how we load our styles, this has been improved in 0.7. The styles are no longer required within a component and if you're happy with the existing styles, you simply need to include the theme.css file within the release folder in your app. If you want to change the existing theming, you have access to the scss files within searchkit to include in your own styles. \n. Hi\nAre you using es6 module imports? Shown here in our docs: http://docs.searchkit.co/stable/docs/setup/project-setup.html. We dont support importing the bundle in your app if you're using ES6 and webpack.\nJoe\n. Ok we will have a look at the issues that show at the end of webpack build. Is there anything else you feel could be improved on?\n. Thanks il close this issue\n. For now ive fixed the height of the select dropdowns to prevent this issue. In the future we need a responsive theme for mobile / tablet / desktop. Im going to close this issue for now and create a responsive theme issue.\n. Hey,\nThe item component should not extend the hits component. See http://docs.searchkit.co/stable/docs/components/basics/hits.html. Just needs a react component, either functional or extending the react component class.\n. Thanks, il assign this to 0.9 to look at options on limiting pagination. Currently NoHits component renders on an ES exception in the latest release (was implemented in 0.6) \nhttps://github.com/searchkit/searchkit/blob/develop/src/components/search/hits/src/NoHits.tsx#L94\n. thanks. Issue already created here #127 \n. Thanks! Im going to update the order to qbox being top and then alphabetical because they provide us infrastructure! Thanks guys :)\n. done in the beta release.. Hi Drew, \nFor 0.9, we have only added the ability to add additional search filter components that work alongside the main searchbox http://docs.searchkit.co/stable/docs/components/navigation/input-filter.html.\nFor future releases we will address being able to dynamically update the query fields.\n. #198 \n. i changed it and took @GregoryPotdevin idea with ActionBar > ActionBarRow. \n. Thanks. I've seen this issue too when I was setting up the demo but forgot to report. \nSo used to \"disable\" the rangeFilter when filter cannot be used to filter further. Using getHitsCount check only wouldn't work for when we have results but the results do not index the field we are filtering by (Example would be metaScore for tv shows). \n. Yeh that will work. CardinalityMetric on range when histogram is false. When histogram is true, we use the histogram aggregation.\n. taking this\n. merged\n. Thanks! Yep our codepens do need updating. We try and keep track of these codepens under the searchkit username (http://codepen.io/searchkit/). Il update them once next release happens!\nWe have an active chatroom on searchkit (which ive just seen you are on now). There are alot of members which will help you out!\nDocumentation is available here: https://github.com/searchkit/searchkit/tree/develop/docs. Feel free to contribute and do a PR. \nA big win for us would be devs writing blog posts on using searchkit. The issues to be aware of, the development environment, adding your own components etc. This serves as documentation to other members and doesn't put burden on us needing to keep up to date.\nGreat you're loving Searchkit! :smile:\n. The bucket is loaded with segments which have results right? So if bucket is empty, there are no results across the range. In that case, we need add disable class to the filter.\n. yep good spot. I assumed histogram segments aren't brought back when value is 0. Il do what you did and use maxValue. \n. Thanks for report. Yeh I tried switching to query string before release but due to issues with searchOnChange, I aborted on hoping new changes to Elasticsearch would improve error handling for query string. \nWe will definitely look into being able to specify your own query parser, not just only query string / simple query, but any of the supported ES query parsers. For example, you can pass in your own function which  returns an ES query. \n. this is done in #207. Should be ready for release for 0.9 and scheduled for release in next couple of days! \n. Thanks. We are planning on this in a future release. This issue is tracked in issue #4 \n. need to document, forgot to add. WIP still\n. #211\n. Looks good! Thanks Greg.\n. cool, il close.\n. also @GregoryPotdevin, can you make a blog post for this feature? I would love to post it on HN. \n. Yeh, I would say that its two blog posts then, one on release of multiselect and the concepts of Searchkit components extensibility.\n. Thanks for report. We are investigating using searchkit in a universal app. Tracking this in #4\n. Isn't supported and pending functionality to be added in Elasticsearch to support dynamic histogram aggs. Once thats in we will definitely add this functionality! \n. Thanks for spot! Please complete the CLA so I can pull.\n. We're working on autocomplete functionality as a component for Searchbox. Hopefully we will release soon. Be great if you could comment on #31 on your usecases!\nJoe\n. Closing this issue and a more extensible searchbox will come in with the autocomplete in future.. Yeh i imagine them being in two parts, beginner and progressively more advanced. part 1, part 2 for example. \n. Hey @PAK90 \nI suggest using the medium platform (www.medium.com) to post your blog posts. You can give us the link to review and we can help you shape the blogpost. As for style, i would look at blog posts about react and read how devs write about their experience for inspiration. \nGetting started blog post is badly needed so i suggest that first!\nThanks!\n. My thought would be a boolean on the filter isVisible, with default being false. Here is an example from an accessor.\n.addSelectedFilter({\n          name:this.options.title || this.translate(this.key),\n          value: this.options.label || this.translate(\"checkbox.on\"),\n          id: this.options.id,\n          remove:()=> this.state = this.state.setValue(false),\n          isVisible: false\n        })\nand components like SelectedFilter will chose to not render. I think this is the better way as we are already passing in configuration which is focused for the SelectedFilter component (name, value props) \n. Hi there,\nGeo based components is on the roadmap such as a location filter, geo map results, distance filtering. \nThis is tracked in #236.\n. have a look at our components and some of the custom components our contributors have built (https://github.com/GregoryPotdevin/searchkit-multiselect). \ntheres also a crime demo app http://demo.searchkit.co/crime, code here https://github.com/searchkit/searchkit-demo/tree/master/src/app/src/crime\n. @gaving looks awesome \ud83d\udc4d . Can you explain what type of events you need to listen on?\n. searchkitManager has an emitter which is triggered on response from ES.\nsk.emitter.addListener(fn)\nonNoData, you could check sk.getHitsCount(). \nThis is completely unsupported however (can change in later versions) but if more people ask for more features, we can support this.\n. Thanks for PR! Can you add unit tests to support this change please?\n. Thanks!\n. Thanks, il look into these issues\n. - precise number issue: we can resolve this by rounding the number in searchkit and present a more readable number to the user\n- Magically appearing filter: The filter will hide when the user cannot use the filter i.e the results brought back by ES do not have any value for the filter field. \n- Range filter applying filters magically: Il have a look at code to make sure this doesn't happen\n. Good idea. One thing is reselecting a different parent option ( for example selecting movies instead of Episodes ) will need to clear any child selections. Would be good instead of the #32 issue. \n. is this still an issue @PAK90 ?. Closing due to inactivity. Definitely possible. Jump on our chatroom (https://gitter.im/searchkit/searchkit) and we will take you through the steps of creating a custom component like this. \n. Hi,\nWhat npm version are you running? We require npm v3.\n. Yep, maybe we could floor / ceil the precision of the number, as to prevent numbers displayed to being long. (5.14343 being 5.1) I will also talk to PAK about this issue on why ES is bringing back really long d.p numbers in stats.\n. thanks\n. Thanks, we will have a look\n. The weird state that you are mentioning is that it doesn't show some filters which were previously selected when another filter is removed / added from another group?\nWhats happening is when you're selecting Red, the search expands from Checked OR Striped to RED AND (Checked Or Striped). there isnt a shirt which is Red AND Striped and therefore not brought back by ES as an aggregation. We display only the elastic aggregations. This may not include selected options, in this case.\nWe will probably improve the experience by always showing the selected filters, regardless if brought back by ES.\n. yep. Its not urgent however. I think a few things come out of this:\n- @drewry SelectedFilters component would be useful to add to your page. This will allow the user to reset their selections. SelectedFilters component does not rely on ES aggregations.\n- On the no results state text, we should show the selected filters. For example displaying \"No results for \"test\" with  \" and the filter style looking like selected filters. We implement a few renderer components for this like listComponent (one with just text, one with text and actionable filters)\n- Yep what i was thinking the accessor is manipulating the options before passed to the component.\n. stopPropagation will stop click / touch events from bubbling up to the body so for example having a context dialogs listening on the body when visible so they cannot close. That said, I would hope most \"widgets\" would not rely on event bubbling (newer context dialogs use a invisible backdrop to intercept the click event)\nIm fine with adding this in. \n. On more thought of this, its best for now to defer actually adding stopProp and improve the item level click handler to say only the title. \n. OK. I would suggest having a dropdown icon for toggling expand collapse rather than the whole item but I dont know the UI. Not sure if using normal onClick handler would help this? You could override the default clickhandler, inspect event target and stopProp if tagFilter is target (this customised in PAK90 app).\n. thanks\n. Search should be accessible on #/search then. You need to read up on react router. Look into using indexroute or redirect so / will show search.\n. Could you commit your code somewhere and I can check it out. Btw you spelt\nsearch wrong, maybe could be your issue.\nOn Sat, 7 May 2016 at 7:01 pm, Shundan Xiao notifications@github.com\nwrote:\n\n@joemcelroy https://github.com/joemcelroy thanks for replying. sorry I\nmeant I went to http://localhost:3000/serach. it showed\nhttp://localhost:3000/serach#/?_k=znhpst and an empty page.\nI've read react router and tried many alternative ways but still got the\nsame thing. Any clue what's happening? Could you try downloading the\nboilerplate and quickly try it out with react router? I want to know if\nit's just me.\nThanks.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/266#issuecomment-217656483\n. some issue with browserHistory being null. Needs investigation from us. Thanks!\n. updated to ts 2.0 and using npm to manage dts files.. Hey\n\nhttp://docs.searchkit.co/stable/docs/core/Translate.html\nYou can either override globally or component level\n. hey @jblom, is this still needed?. yeh i agree, it was more of an functionality edge case.  an import / export search state would be a great feature in searchkit. Closing this for now.. Hi @nirchernia \nHave a look on jsdelivr website http://www.jsdelivr.com/?query=searchkit\n. hi @nirchernia \nSee our documentation: http://docs.searchkit.co/stable/docs/setup/elasticsearch.html\n. searchkit-boilerplate uses react 15. https://github.com/searchkit/searchkit-boilerplate. Compare and see if you can spot the issue. What NPM version are you using? We need v3\n. const host = \"http://172.28.128.3:9200/twitter,slack,email\"\nconst searchkit = new SearchkitManager(host, { searchOnLoad: false }). We want to do something like this in future with the autocomplete component, hopefully be released soon!\n. #31 linked to this. Closing this issue. Thanks mini jim :). hope things are good with you.\n. thanks. Yep we will take a look at this issue. Also you can provide a react component to render the selected filter items via the itemComponent prop for SelectedFilter component rather than hacking it via jQuery. http://docs.searchkit.co/stable/docs/components/navigation/selected-filters.html.\n. fixed in #396 . Now shows the error component when exceeded. We get a similar issue aswell with searchkit-demo. Nothing to worry about for now. \n. closing this issue because il sort out a boilerplate which should resolve this issue.. is this PR still relevant?. this is a question more for Elasticsearch querying and indexing.. http://docs.searchkit.co/stable/docs/components/navigation/selected-filters.html Overrride the default display via itemComponent prop. this issue should be fixed in #392 . fixed in latest beta. Thanks for your PR \ud83d\udc4d . closing issue as already reported in another issue. Investigating this as part of 1.0.0 release.. Closing this issue as temp workaround. linking with #32 as potential feature. Im going to close this issue because its clear everyone wants to be able to control the visibility of a filter if there are no results so we are going to think about it for all components, not just inputFilter. \nThanks for your help!. hey @aleybovich, you could also override the listComponent prop and implement your own list rendering + key (https://github.com/searchkit/searchkit/blob/a9b5abd2a17ac45c7e1eecf4c29f52ca18e6afe8/src/components/search/hits/src/Hits.tsx#L112) . Hey thanks for your PR. we had to fork qs because it didn't have the encoding option we needed. \nI've submitted a pr to qs to add this option. Once released, we can use qs again.\nClosing issue for now. Thanks for your PR. Could you resolve the conflict? Ill merge it for next beta release.. upgraded in #396 . closing this issue, tracking in 176. \nfyi i think having it behave nicely on mobile web is the way to go for us. React-native support is a definite bonus.. thanks \ud83d\udc4d . @pwain @rehm . 1.0.0-4 release should work with the latest version of react now. Closing this issue and if there are still issues, please reraise them. Thanks. Yep thanks, ive updated rc-slider in searchkit in the soon to be released beta. . should be able to run npm run build. Closing this issue. In our new beta release, ts definition management has been simplified. Could you expand on the developer guide for this new beta release, please?. closing this as dev guide is now out of date and i have started a new one. Please feel free to add to it!. Thanks for your pull request. Beta now has the updated rc-slider now.\n. fixed in #396 once pulled in. Closing issue. Closing this issue as the beta now has react 15 as a peerDependency. There is an issue with multiple copies of react being included and the temp fix for now is what @fabarea has mentioned.. #360 linked to this issue. CLosing this.. this change @LucaWintergerst is now available in 1.0.0-4.. The field needs to be of type keywordhttps://www.elastic.co/guide/en/elasticsearch/reference/5.6/keyword.html. Hi Andre! Closing this PR as its pretty old. Feel free to open a new issue / talk to me to discuss additions to searchkit if you still want this feature in! Thanks again.. #24 tracked in here. Closing this issue. Where is this link from?. Closing due to inactivity. 15.4 support is in the beta release. If you spot any warnings, I welcome any PR fixes \ud83d\udc4d. hey Paul,\nYeh i know, we feel bad. difficult however when our current client work doesn't involve Searchkit. We are working back together now (me and @ssetem) and we're looking to picking things up over the xmas break. \nJoe. hey @ppearcy thanks again for your PR. Lets try get this in for 1.0.0. Could you add documentation to this new feature and also not change package.json version (il sort that out on release)\nThanks! . thanks \ud83d\udc4d il do a new beta release now. . could you check the version of npm you are using? We support npm v3. This will get better in future with yarn. Thanks for this issue. Would be great if you could start a PR for these changes and we can review them \ud83d\udc4d . Import the theme.css that is found in the release folder. You shouldn't have issues with dependency imports then and a faster build too. Thanks for the pr but I won't pull this in unfortunately. Try using the theme.css file found in the release folder or even using a can http import for theme https://github.com/searchkit/searchkit-starter-app/blob/master/src/index.css#L1. Thanks for PR. Im closing this PR and created a new one #389 so we can fix our tests. \ud83d\udc4d . Thanks, il take a look at this.. Yeh sorry, working on something else for Searchkit. Would be great if you could do a PR for this!. you can also use the betas npm install searchkit@1.0.0-7. They are pretty stable. Soon we will be doing RCs. unlikely, however, Searchkit, apart from the styling, should work on IE9. You can implement your own styling easily . released a beta version of searchkit 1.0 and is available on npm searchkit@1.0.0-0. This is a beta release, some tests are failing and i expect problems but at least youll be able to use all the latest goodies without issues.\nWe are actually using this beta release inhouse now for an experimental project so hopefully we able to spot issues quickly.\nJoe. thanks all. il sort this out for next beta release.. Thanks for submitting but this has been fixed in the beta release in another PR. Closing this issue. . hey, we have been talking about this alot lately and want to address this in the future, able for searchkit to be powered by an extension of ES ie your API. Big change however and needs alot of thought. . We encountered this issue aswell and as joepsz mentioned the workaround is being explicit with the react import. We are looking at why its importing multiple now.\n . OK i got a starter project based off create-react-app and using beta-4. This doesn't have the multiple ref issue. https://github.com/searchkit/searchkit-starter-app. im going to close this issue for now as cant replicate it within our starter-app boilerplate with latest and this issue does crop up on other UI frameworks. which project are you using? I suggest you use the starter-app one if not. That's the plan for the next release :-). Soon, prepping up a beta now. Should be available in next couple of weeks . for now use this hotfix detailed here #363 . I haven't yet got a ES5 env to test with yet. Once i do, il do another beta release for it. . Those changes were merged #392 and released 1.0.0-4. Should be ready for you to try out!. so these changes we are doing for searchkit beta is only for compatibility with ES 5, not adding features which ES5 now has.. closing issue for now. Report any issues with ES5 and il raise a new issue. . Can build your own component / accessor which builds this aggregation query. . thanks for creating this issue. Its definitely one thing we want to look at. il take a look at your findings soon.. what is the reason for needing a reference to the sidebar element?. what about omiting the SideBar component in React when closed? for example { this.state.showSideBar && <SideBar ... /> }. yep thats true, yeh we need to extend the layoutbuilder component to past the props to the div element. You could also wrap the sidebar in a div and toggle the class / style properties depending on state.\nnot the best as its doing the aggregations always even when hidden. . closing this issue. Think there is a configuration issue with the way your field types are setup within ES. I would try using bonsai UI against your ES instance and try get back aggregations successfully.\nClosing this issue as its more a stack overflow issue.. Thanks for your kind words, we really appreciate it. As for helping out, anything like improving our documentation which you found not as clear as it could be or even blog about your experience. This helps newbies to the project.\nim going to be sorting out our issues this week, building out a roadmap and asking everyone who uses searchkit, what features they want the most. So should be plenty of new features for the community to help out with!. Yep @radomirml I agree! this week im hoping to make a boilerplate project based off create-react-app so others can get started quickly and update http://docs.searchkit.co/stable/docs/setup/index.html to reflect this more simple dev flow. . from that error, looks like the searchkit components are not being exported correctly. I will have a look later on today when i get a boilerplate going . hey @ThaDafinser, @radomirml ,\ni built an example starter project off create-react-app to help you guys get started! Report any issues you encounter in the repo. Thanks\nhttps://github.com/searchkit/searchkit-starter-app . just updated to 1.0.0-5 now.. Glad its working well. Yep looks like there isn't a default size for when not defined. Ill investigate further soon.. @thenayr yeh, been lazy updating changelog for betas :). Ive updated it now. Let me know if I've missed anything!\nhttps://github.com/searchkit/searchkit/blob/develop/CHANGELOG.md \nAnd if you find any issues, either report in this issue or create a new one. Me and ash are also available on gitter chat (link on our website) if you are unsure of an issue.\n. @mhilaire Sure but would be great if anyone else who's migrated over could document this.. actually even easier\n1. git clone git@github.com:searchkit/searchkit-starter-app.git\n2. cd searchkit-starter-app\n3. yarn\n4. npm start\n. searchkit starter app runs on webpack aswell, just hidden within react-scripts. They manage all the dependencies / webpack loaders for you so its alot easier to develop on. \nThe searchkit demo runs on the dependencies you have in searchkit-starter-app. You can still implement an express server if you want in the project. Our preference is to have an api project which is separate from frontend project. . This issue is down to user configuration I believe. Ask either on our chatroom or in stack overflow.. Hey all,\nCould everyone give their feedback on the searchkit development survey? https://joseph239.typeform.com/to/QJNZ4z\nHelps us understand what to focus on next for searchkit!\nThanks\nJoe. Thanks Rafal. How did you get this error? on build?. using an old version of typescript. We are using 2.2 now with beta. hey thanks. linked to #403 . Closing issue . lets take this up on gitter. I believe its an issue with your setup.. This is due to webpack loading two versions of react. Try using the beta version of searchkit npm install searchkit@2.0.0-9 or using this project (https://github.com/searchkit/searchkit-starter-app) as a starter boilerplate.. thanks for the heads up. Il take a look. done. thanks, il take a look.. this should be fixed in #413 . Il do a beta release soon with this fix. . hey @Alfreddd sorry for delay, was waiting on an issue before releasing. I made a new release, searchkit@2.0.0-9. Let me know if this remains an issue and il take a look to see anywhere else that needs fixing.\nThanks. thanks!. Thanks!. thanks!. Have a look at our indexer for the demo page (https://github.com/searchkit/searchkit-demo/blob/master/movie-index/indexer.coffee) . FastClick was a component we built in order to speed up the time between the user clicking an action to seeing results. click event is slower than mousedown (we got obsessive over speed :) ). \nOne way is for fastclick's click event to swallow only if there's an event that been dispatched by mousedown.\nIm happy to hear any other suggestions. . There's a noticable difference between click and mousedown, so we took advantage of that. Didn't consider all the side effects when we implemented, we just wanted to make it fast. I don't think holding to prior would cause such a performance penalty to be an issue. \nWe will probably go with switching off fastclick by default and allow users to opt in for this feature.. We are going to remove FastClick in the next version as not that much gain for alot of pain.. Ash made a PR for this #464 . This has been merged and released on v2.1. Which version of npm are you using? Turn on additional logging whilst installing to see if can indicate any issues. . The newer beta release supports the latest version of react. You can install it via npm install searchkit@1.0.0-7. Great! The beta will be out shortly, its probably catching alot of people out.. I believe this isn't an issue with searchkit. Google issues with hanging npm and see if you can find out more details of why its hanging. \nWhich version of NPM do you use? You can also use yarn to install your dependencies.. npm install searchkit will install the 0.10 release, not 1.0.0 betas. Have a look at https://github.com/searchkit/searchkit-starter-app. This uses create-react-app and the searchkit latest beta.. Thanks. The issue is we use lodash and was copied from our live code which imports lodash.map. Il sort out our documentation to not be dependant on lodash. . Have just gotten round to verifying this issue with ES 5. Sorry took so long. As mentioned above, https://github.com/elastic/elasticsearch/issues/18838. . closing in favour for the new PR (as the tests pass). Hey, check out the checkbox filter component (http://docs.searchkit.co/stable/docs/components/navigation/checkbox-filter.html). Not exactly what you need as would be great if the checkbox filter could support an array of filters to display. You can override the containerComponent and with some custom css, get it styled to how you want. thanks! Seems the dependency update for rangeslider has some styling issues. il look at this in a future beta release. Thanks. ah that might be it. Thanks!. Excellent! Il take a look at it soon. Thanks. So whats stopping this being merged is we are looking into lerna (https://github.com/lerna/lerna) so that we manage multiple packages from a single repository. We want to keep searchkit npm package small and you add the searchkit component npm packages you need to i.e date filter, histogram filter, graph render, geo filter render components.\nFor now the main contributor can create a seperate repo for this component so others can use until then.  . i think what we need here is a way of you providing your own scroll function so others can add their own custom scroll interaction easily. For example: <Hits scrollTo={fn} />. Later we could pass in source of action (change aggregations, change of query, change pagination, change sorting) aswell.. i did a couple of changes on the ESTransport to work with new version of axios. let me get back to you guys.. Yeh isn't possible with our API right now. Workaround is you implement your own ESTransport class and pass the instance into SearchkitManager options. See Searchkit Manager and AxiosESTransport\nWe can think about providing a helper method on transport class to be able to update http request options like headers.. This is more of an elasticsearch setup question and depends how your nodes are configured. See qbox blog about scaling es. https://qbox.io/blog/load-balancing-elasticsearch-clusters. You could do this in a number of ways. Either using a state management like redux or use a stateful React component for ItemComponent. Closing this issue as more of a user implementation issue.. Yeh i see this issue aswell. We will try and get this issue resolved soon. Thanks!. You're best off extending the RangeComponent to do what you need. Also without a button, would you require the user to hit enter to apply the new search criteria? . This issue has come up a few times. What do you want to be displayed if there are no results? What about allowing components to have a noResultsComponent prop and will be used to display the empty state?. No, not possible with searchkit. What you could do is create an ES query retrieving all the filters matching filter_* outside of searchkit and then render the searchkit menuFilter component for each filter. . Are there any network errors in dev tools thats prevented from rendering the results? Which version of ES?. Yeh there are issues with server side rendering and searchkit. See #4. . Thanks for this! Once CLA been signed and tests pass, ill merge.. Going to push an RC very soon, maybe today or tomorrow!. @bcruddy now available on 2.0.0-10.\nThanks!. build a server which proxies the elasticsearch connection and the server deals with the authentication to ES. You can pass a auth token in http headers in searchkit. . Yeh for now the hierarchical refinement filter only supports single select. PRs welcome! :). released as 2.0.0-11 now. Thanks!. Yep - we released 2 yesterday, having a couple of issues deploying the newest docs but should be resolved soon. Ill let you know when they are up. Otherwise youll can see the /docs folder for now.. 2.0.0 docs been released now. Thanks!. thanks! Sorry took a while to merge. Il do a release soon.. Thanks @bcruddy just released v2.0.1. Thanks for headsup, the changes were in a branch I was on. Now pushed this up to develop. thanks again @bcruddy  . thanks! yeh we have a script which does the deploy script, its definitely work looking again on how to make it more automated.. btw @bcruddy v2.1 has been released.. yeh, this has come up a few times. We have a scrollTo prop on Hits component, this could also support a function with a \"changeSource\" argument, a value of either pagination or filter. That will allow anyone to control when to scroll up or not.\n. Each filter should add a .is-disabled class if there are no filters. Searchkit theming hides these filters by css. We will be implementing soon a way to control the display of the filters when there are no results. . Have a look at the network tab in developer tools. The response from elasticsearch should tell you the reason for the error. Also you can join our chat (on our homepage) for help.. Thank you! il push in the next release.. Yeh, recommend everyone who uses this in production to build the auth filters and append to ES request on the backend.. We use axios andsuport basicAuth and withCredentials. This is passed in the searchkitmanager options. https://github.com/searchkit/searchkit/blob/e22647fd22c48fa8a828d713d6b79e1b87c2c6ad/src/core/transport/AxiosESTransport.ts. Yep thats what we do for https://github.com/searchkit/searchkit-universal. We double render, in order to get the request config. You know guys, universal works, just in alpha and we want to push some of the internal calls we do in this project down into core. . thanks!. hey @devssh you can pass timeout in the searchkitManager options. its documented here although not super obvious as its position is incorrect and within the SearchkitManager options type. thanks @olf!. #482 created a PR for this. There was already tests for axios transport layer for credentials.. thanks for testing the beta release. Il release it soon.. thanks but opened one here as tests failing #484. thanks. not in this project but would love the community to build components for searchkit. always here to help those who want to contribute! . Im here and the top contributors still help but with everyone, we help when we have free time. . best to do this on the server side. should be able to get the elastic search query via searchkitManager.currentSearchRequest.query, post the query to the server and execute the same query rendering the results to csv.. Well you can change that! Help us add more documentation \ud83d\ude04 . can you please explain more?. ok. one thing, if you struggle / new with typescript, use es6. its fair less headaches for those who just want to implement an application using searchkit. Use the searchkit-starter-app boilerplate we have in our repo.. could you provide an example of multiple searches within the searchkit interface?. Thanks for your email BTW. Sorry I haven't responded yet! Il have a quick look over weekend but my advice is to build an external component to suit your needs, open source it and see what the feedback is from others. For me, I think the best I can do is provide a section in the readme with all external components there are on github and hopefully others will find you and give feedback to people like you.\nThanks for your contribution!\nJoe  . i can have a quick look at this tonight but our tests are failing. Probably because its at 16.. can do \nitemComponent: (props) => <HitsGridItem {...props} myCustomProp={true} />, defaultOption: true. Elasticsearch 5.5? . let me know if you still have an issue.. Thanks, yeh hitsPerPage should have a default value of 12 so shouldn't be required. Ill look into the issue.. quickly looking at the code you should be able to add onStateChange on each accessor and every component will have an accessor. accessor is adapter between the UI and elasticsearch. In example of a filter component, It holds all the filters applied to it and translates that to ES query. It also knows of the response and gives a method to retrieve all the filter options.\n\u2018searchkitManager` instance holds all the accessors. Once the first search has been invoked, be able to retrieve all accessors, add the onStateChange method to the ones you need and add your analytic events there.\nhttps://github.com/searchkit/searchkit/blob/develop/src/core/SearchkitManager.ts#L253\nExample accessor used by the range filter component.\nhttps://github.com/searchkit/searchkit/blob/develop/src/core/accessors/RangeAccessor.ts. closing due to inactivity. hey\nImplement an initial loader: http://docs.searchkit.co/stable/components/basics/initial-loader.html and configure searchOnLoad to false in the searchkitManager configuration object.  http://docs.searchkit.co/stable/core/SearchkitManager.html\n. Yeh for now thats the best approach by using axios directly. It is possible to also create a new searchkit Instance within the accessor that is independent from the main sk instance. That was the route I was trying to go but it probably not an easy route for those who dont know the code. I can try and help if you do follow that route tho.. This is good for now. thanks @MattSurabian . When you search, defaultQuery is no longer used. You will need your queryBuilder fn to include the defaultQuery aswell.. Hey thanks! Could you add Bonsai on the bottom? Qbox sponsor us so its only fair for them to be at the top.. thanks!. Yeh a few people have mentioned issues with React 16 and bem-cn library. Il try and upgrade soon.. Will look into it thanks!. npm install searchkit@2.3.0-9. 2.3.0-9 is latest beta release. You also need to update package.json with this dependency. \nWe need to release the current beta release to production. Il do that soon. . I wouldn't use the package.json from searchkit package! Try using the starter app first.. haha its ok. Glad its working.. v2.3 is out now aswell. npm install searchkit will install v2.3.0. \nThanks. addDefaultQuery isn't designed for this. Its for adding queries that never change. Query Processor might be better fit for your usecase as executed on every search. \nWhat do you need to do exactly? How is listIds provided and when does it need to be toggled on and off? Could it be done in a custom Searchkit filter component?\n. Yeh i would use a CheckboxFilter or build a custom filer component for this. Then you can control the filter UI visibility. Its fairly easy to build your own filter. Have a look at a custom filter component (https://github.com/GregoryPotdevin/searchkit-daterangefilter/tree/master/src)\nhave a look at setQueryProcessor in docs http://docs.searchkit.co/stable/core/SearchkitManager.html   . if you want searchkit core, i believe you should be able to navigate to the core folder on searchkit via import, for example  import { SearchkitManager } from 'searchkit/lib/core'. Make sure you use the latest searchkit (check its v2.3.0) npm install searchkit --save\nGood luck! We will look into RN in future!. what is the error? I would assume it needs babel-polyfill to be included on the page for legacy browsers . thanks, il update!. hey this is the indexer we use for the movies demo (https://github.com/searchkit/searchkit-demo/blob/master/movie-index/indexer.coffee).. Yep this is still up to date with version 2. It more of a question with compat with Elastic search 6. ATM our demo site runs on ES5.4 . @chrisfinch Could you find some availability to work on this PR? Been on my list to review this issue but haven't had time. Thanks btw for going indepth into the issue. . Yeh documentation is getting out of sync with the current code base. We wanted to do a documentation overhaul on a brand new site. Still WIP as usual.  . Can you add more information to this? closing for now. yep i will accept that! Could you do the PR against this branch circle-ci-typescript-update please. This is a big branch with the latest changes, soon to be released.. thats annoying - open to PRs for this.. should be fine in IE11 / chrome 50 with the right polyfills added to your project. We dont bundle these polyfills for you, we let you add them (bloat reasons). babel-polyfill or polyfill.io . Yeh i agree, really want a overhaul with our documentation to include features like search, preview of component. We started doing this - but its a big task. . yeh same :D, has been a joke for us for a while haha. Let me see what i can do but google search focusing on the docs site might be one choice. . Im not sure but dont think its related to searchkit. Ask on stackoverflow showing the request xhr call.. https://github.com/searchkit/searchkit-starter-app/pull/8 have a look at this PR. thanks for PR. Il try get it released. Need to sort out CI to auto publish. thanks this looks good.. thanks, i am going to look at this issue to get searchkit running on es 6.2. thank you @richtera . @ElviraCB do you want some sort of default query then?. you should be able to extend the rendering within searchkit components.. thanks @olf for answer! . thanks @skout90 . Could you try with the branch https://github.com/searchkit/searchkit/tree/circle-ci-typescript-update. I haven't tried the main branch for a while. ive upgraded typescript / deps to latest. great. will be merged / released soon!. Still stuck? Could you please give me more details?. It was a free source and we only took 5000 items to index http://www.omdbapi.com/. I would customise the listComponent renderer of the ViewSwitcherToggle\nhttp://docs.searchkit.co/stable/components/display/switcher.html\nsee listComponent prop, you can pass in your own react component here for rendering the ViewSwitcher . Sounds pretty custom so would suggest building it outside of Searchkit. Do you need searchkit state? If you do, I would build a custom searchkit component so it can access searchkit state but do the querying outside of the main searchkit instance.  . thanks for this! Il get this merged. Could you rebase it off staging? thanks. hey @donaldallen similar changes were merged recently actually (https://github.com/searchkit/searchkit/pull/678) and on the latest alpha release. Fine to close this issue?. thanks for using it! Let me know if any issues, want to promote this all into a formal release. thanks! . been super busy lately but will be picking up tasks soon and yeh need to get the community going again! . thanks, could you fix the test? Il get this merged once it passes. thanks!. ok this fix is on 2.3.1-alpha.3 npm version. Could you see if this works for you as expected? . looks good. Thanks!. now on searchkit@2.3.1-alpha.4. Let me know if this alpha build works fine and il publish to latest release. il update docs. sorry took a while. Thanks for your contribution!. now on 2.3.1-alpha.7. let me look at it now. Sorry for delay.. thank you for your contribution! ill look into it today.. now on searchkit@2.3.1-alpha.5. thanks! This shouldn't break backwards compat with older versions of ES? \nYep you did correctly, basing off staging. Wshen merged to staging, will publish a alpha release. . thanks, now on 2.3.1-alpha.6. now as 2.3.1-alpha.8. Could you give me thumbs up on this and il publish this as a release. Thanks! \n. ",
    "kaismh": "Ok. Many thanks for your response. \n. ",
    "ssetem": "Hi :), Thanks for the feedback.\nA query cache would definitely help performance, we would probably want to an aggressive LRU cache size with aggressive expiry as responses may grow to a large memory usage.\n. its on our list to make fully server renderable with good example repo. this is ready for testing in v2.3.0-0\nexample usage can be found here\nhttps://github.com/searchkit/searchkit-examples/tree/master/searchkit-ssr-express-example\nthanks all!. we have tested with vanilla express ssr + next.js and seems to work ok.\nI see no reason why custom components shouldn't work but if you give us a public repo which reproduces the issue I can take a look\nAlso in regards to rapscallion, React16 now officially supports SSR streaming so it might be worth switching to the official SSR renderer\nThanks!. If you are using react router, need to use StaticRouter on server, BrowserRouter on client. I see, you might need to override createHistory option when constructing searchkit\n```js\nlet createHistory = require('history').createMemoryHistory\nlet searchkit = new SearchkitManager(host, {\n  createHistory:createHistory\n})\n```\nwe can look to detecting the environment, but try this in the meantime. Also @Jaikant you probably can switch history off on server\njs\nlet searchkit = new SearchkitManager(host, {useHistory:false})\nit should be like that in our example code. Thanks for the heads up, we will be adding correct propTypes to all components very soon :)\n. just released 0.3.2, where all component should have propTypes now\n. Hi, thanks for the PR.\nWe actually have an undocumented translate feature and pagination was hardcoded :S our bad.\nWe will make this translatable for the next release.\nThanks!\n. Just released 0.3.2, where translations can be overridden at the component level or globally\nhttp://docs.searchkit.co/stable/docs/components/navigation/pagination.html\nhttp://docs.searchkit.co/stable/docs/core/Translate.html\n. thanks for the interest in Searchkit, \nwe are just refactoring this area of the code here\nhttps://github.com/searchkit/searchkit/tree/develop/src/core/query\nPerhaps you could join our gitter chat room so we can try and help better\nhttps://gitter.im/searchkit/searchkit\nThanks\n. http://docs.searchkit.co/stable/docs/core/SearchkitManager.html\nhttp://docs.searchkit.co/stable/docs/core/ImmutableQuery.html\nhttp://docs.searchkit.co/stable/docs/core/QueryDSL.html\nadded documentation surrounding this here\n. currently there are 2 modes, defaultQuery + components, both of which use Accessors to build the query.\nHave you got an example of where you need to use a query?\n. I think the detail page + results page will have 2 seperate instances of SearchkitManager, and the defaultQuery for the detail instance will include the detail id etc, lets talk on gitter I think if you need further help\n. thanks, we will fix soon in upcoming release\n. ok this is now fixed on our develop branch\nhttps://github.com/searchkit/searchkit/blob/develop/src/test/core/accessors/PaginationAccessorSpec.ts#L42\nThanks again!\n. released now in 0.3.2\n. Searchkit components currently do have knowledge of elasticsearch in some form., \ndo you want to join  https://gitter.im/searchkit/searchkit to discuss your usecases more fully?\nThanks\n. Hi @xinghengwang , @ivarref  have you got examples, screenshots etc of what you would like from this?\nI ask as a DateFilter can be interpreted in many ways\nThanks!\n. Thanks for the feedback!\n@xinghengwang  I will look at this style of date filter soon\n@ivarref we recently added a rangeFormatter prop to DynamicRangeFilter  in prerelease 0.10.0-5\n. fixes #25 \n. lets only do investigation for 0.6 and introduce only if painless and typings is mature enough\n. yes looks like it, do you need the Pagination as links functionality?. yep we can put it on the backlog and if we get more votes we can prioritise accordingly.\nwe do allow a custom listRenderer which could render links, so there is a current workaround.\nthe main work is in generating the next url for each state. adding disregarding defaultFilters/Queries\n. this might be an accessor which behaves like a listener and does the scrolltotop\n. #55 #17 #43\n. yeh for now lets make that clear in the docs, and if we port Searchbox to functional style we can do properly then\n. Hi\ndo you need to do this via a component? or you just want the to be the default query?\n. if you need it by component you could use\nhttp://docs.searchkit.co/stable/docs/components/sorting/sort.html\nor default query\n``` javascript\nsearchkit.addDefaultQuery(function(query){\n  return query.setSort([{\"@timestamp\":\"desc\"}]);\n})\n```\nhttp://docs.searchkit.co/stable/docs/setup/default-query.html\n. thanks for the heads up  on the combobox.\nwould you mind pasting your config for your sorting component just to help us debug?\nThanks!\np.s. you can always drop by  https://gitter.im/searchkit/searchkit\nif you have further queries\n. I think lets create 2 side by side, and spot the commonality and extract up\n. #68 \n. javascript\n{'query': {'bool': {'must': [{'multi_match': {'fields': ['answer'], 'query': u'more'}}, {'multi_match': {'fields': ['question_id'], 'query': 1}}]}}, 'from': 0, 'size': 10}\nexample query to be generated\n. I like the highlightOptions idea, which an be a pass through to the query unmodified\n. #44 \n. will require clean npm install in dev mode to be safe\n. I think if we incubate a couple of variants so we don't have to maintain api compat in research phase, it would be a good start\n. not sure, I think simple single function is enough for now\n. @PAK90  :) do you want to pop on https://gitter.im/searchkit/searchkit\nwe can do more informal quick chat over this then\n. @PAK90 your project looks good now with indexer and ui, I am going to close the issue for now\n. Thanks! this looks good, I think we will merge in 0.8 develop branch after we released 0.7.\nWe can test the optimisation in dev for a good period, and look at other optimisations for 0.8\n. SortingSelector, ViewSwitcher, PageSizeSelector are all candidates to accept either toggle or selectbox or custom component.\n. yeh we can pass 2 functions, but these components typically have a single selection rather than multi select behaviour. I think anything which can multiple select, we pass in both toggle + full set functions so can reuse any multiple select based component\n. NoFiltersHitCountAccessor may need a little thought, as it counts the results without any filters applied.\n. @PAK90 could you give a couple of example usecases for this? just to help us understand the feature\n. yeh I know that:) I wanted to see concrete usecase, and whether its not red + blue or not red or not blue, stuff like this :D\n. the not filter + multiple searchboxes, sounds like a potential query builder to me :D\n. nice @stereosteve \nWe will think about how to integrate it, might require separate component.\nWe also need to think what does into Selected Filters, may a textual or visual indicator, not sure yet. thanks :D, feel free to jump on our gitter chat room if you want to brainstorm stuff.\nhttps://gitter.im/searchkit/searchkit\n. Yeh, searchkit is mainly a clientside framework. You will need to serve the right files and have an elasticsearch instance to connect to (either directly or via a proxy)\n. We have begun looking at responsive, will need alot of thought and perhaps change.\nIt would be good to get feedback on what kind of mobile view you guys have been thinking of.\nWireframes and notes would help us alot.\nThanks!. thanks, I think its not an issue with npm v3, but its more correct that its in the package.json :) thanks again\n. @munkt0n  we have got a prelease 0.10.0-5 with nested support\nsome docs about it are here  FieldOptions documentation\nDunno if its an exact fit to your requirements, maybe you could give it a try?\nThanks!\n. thanks for reporting, your suggestion of using the field also is probably the best idea\n. Hi @jamiedumont \nIts on my list :D, hopefully in 0.10 or 0.11, alot of our unit tests will need to be updated, so I will try to get through that soon.\nThanks!\n. thanks again :), and for looking into the codebase to help us solve\n. thanks @mcs07  its fixed in our develop branch, will be in 0.9\nfeel free to jump on our gitter.im/searchkit/searchkit  chat if you want to brainstorm improvements to Searchkit\n. hi @drewdresser \nWe have an input filter landing in 0.9, hopefully released very soon\n\nYou can add as many of these on left hand side with facets.\nControlling the primary searchbox query fields is something we would make easier in future releases\n. Sure, \nyou wanna jump on gitter.im/searchkit/searchkit\nand we can try and help you with a work around now?\nThanks\n. #196\n. thanks @vladimir-tikhonov , will fix this soon\n. @vladimir-tikhonov  we just released v0.9.2 which fixes this issue.\nThanks!\n. np :D, \nalso we introduced a prop blurAction=\"search\" or blurAction=\"restore\" as fixing the issue could have 2 behaviours, so we gave a choice\n. thanks\n. hi @infacq \nWe need to provide better support for this, but in the mean time you can try something like this\nmake sure you import RangeComponentBuilder\njsx\n<RangeFilter min={100000} max={500000}\n  field=\"someField\"\n  id=\"someId\"\n  title=\"Some Title\"\n  showHistogram={true}\n  rangeComponent={RangeComponentBuilder({\n  showHistogram: true, showSlider: true, marks:{100000:\"100k\", 500000:\"500k\"}\n})}/>\n. did you use the right numbers\n. yeh, we need to add further support for this, probably next release\n. @infacq  prerelease 0.10.0-4 supports rangeFormatter now, it would be great if you tested this new feature :)\nThanks!\n. npm install 0.10.0-4\n. thanks !\n. I think we could add a resultsListener, the onNoData event wouldn't be needed, you can check results length or interogate searchkit whne that event is recieved, should be enough for most cases\n. @jpeyper do you mind pasting a snippet of both your account and transaction mapping config, so we can be sure we are coding this correctly, thanks!\n. thanks @jpeyper\n. @Rhubbikull currently in progress. Hopefully done soon\n. @Rhubbikull @jpeyper \nWe have done a prerelease 0.10.0-4 with nested + parent/child support\nFieldOptions Docs\nWould you mind testing this? Thanks!\n. @bgphipps would aggregating on name work? as that would allow.a generic solution\naggregating on id but returning name might need a tophits or scripts field\n. cool, i will do the feature based on aggregating name or arbitrary field, sub aggregation will need to be custom work outside of searchkit for now\n. also look at the queryBuilder prop for SearchBox which allows you to customise the query going to elastic, it would allow nesting etc already if you use the right queryDSL\n. @fabiofumarola im thinking of more generic fieldOptions prop for facet components, so we can allow parent child also, and allow further options without conflating the component props.\nfieldOptions={\n  type:\"embedded(default) | nested | child\",\n  ...\n}\nI have got some local code for this, will try to get more done in next few days\n. yeh we will add to RangeFilter, does the MenuFilter work ok?\n. @gregdurham just did another prereleased 0.10.0-2\nshould now support fieldOptions in NumericRefinementListFilter and RangeFilter \nping if there are any issues or improvements needed.\nThanks!\n. yep, inner_hits looks good, I think with the fieldOptions.options object we can allow further properties which are basic pass through to Elastic.\nI will track with this current issue, to support inner_hits and other nested/parent/child options in generic way to round of this issue.\nThanks!\n. @gregdurham we have done a prerelease 0.10.0-5\n- Allows inner_hits as part of the options\n- Added nested/parent child support to DynamicRangeFilter \nAlso some docs here  FieldOptions documentation\n. going to close as implemented.\nReverse nested will be tracked in #351 . @bgphipps , we released 0.10.0-0 as a npm prerelease.\nIt would be great if you could try using it and see if it works for your app\nThanks!\n. @drewry  we did a prerelease 0.10.0-5 with a fix for this\nwould you mind trying it out when you have a moment?\nThanks!\n. @r9b9rt I think its \"All\" for global also\n. right now its inline with HierarchicalMenu, we need to have a good think to bring these hierarchical up to date in 1 go\n. SearchkitManager needs lowercase K\n. @r9b9rt you could use a higher order component which wraps your component and returns the component bound to title. \nYou could also pass in  to itemComponent.\n. hi @aleybovich we just did a prerelease 0.10.0-4 with countFormatter support, which was added too\nRefinementListFilter, MenuFilter, NumericRefinementListFilter, HierarchicalMenuFilter, HierarchicalRefinementFilter, HitsStats\nWould you mind testing this for us?:D Thanks!\n. its called theme.css rather styles now\n. @xinghengwang what was the fix in the end? just so we know :) thanks!\n. @xinghengwang you can keep mutating this property\nsk.transport.options.searchUrlPath\n. have you set up cors correctly on your es instance?\n. you might need to add Authorization to the allowed cors headers in your ES config\nI think the property is http.cors.allow-headers\n. nice! I will add a note to our docs\n. @nirchernia a couple of things\n- you should instantiate SearchkitManager outsde of the render method\n- could you sanity check that all components are available (not undefined and imported correctly)\n. I think its an import related issue where an element is undefined, could you console.log/debug whether all Searchkit components exist within your render method?\n. are you able to share a github repo? so I can take a look, its most likely import of react or search components as I have seen this same issue before\n. you shouldn;'t need too, but maybe you can continue investigating now you may know the cause.\nIf you continue to have issues, then make a simple repo with similar dep structure and we can then spend time to look on our side\nThanks!\n. yep, the child of SearchkitProvider has to be single element, you could wrap what you have in a div tag etc\n. if your using webpack, you can create an alias.\n. it handles transitive deps in flat way, plus its the latest :D\n. nice one!, @nirchernia  I'm going to close the issue if you don't mind, we can reopen if something crops  up\nThanks!\n. thanks @devlesedi \nWe should probably start a FAQ and add advice like this into it\n. @sieutruc I agree, we use and advice having a proxy on the server.\nhttp://docs.searchkit.co/stable/docs/server/searchkit_express.html\nwe ship a proxy library for node.js, here are the docs\n. yeh, I done a level lower in the listComponents\n. @xinghengwang  we did a prerelease 0.10.0-5 with a fix for this\nCould you test it out when you get a chance?\nThanks!\n. @mcs07 yeh, we currently have private createHistory() function we could use specified one and default to existing functionality PR maybe?:D\n. yep @abousamra we upgraded and added hook to provide own history in v2.1\nThanks, I will close this issue down now. need to use webpack alias\nhttps://github.com/searchkit/searchkit/issues/286\n. this should be already fixed in 2.x. @nirchernia you can pass searchOnLoad:false into SearchkitManager so it doesnt perform initial search\n. @GregoryPotdevin that would be great, would help many projects\n. hi @SickSAMA \nlooks like we have another similar issue open #297 \n. i need to look at all these history reports from high level, you could use the TagFilter component which supports what you need\n. yeh we need to investigate how we would support elasticsearch 5.\nIt would be great if those beginning to use alpha of elastic 5 would helps us in showing the query changes, perhaps even try to get the accessors working etc.\n. wow thanks for digging so deep. I think if the syntax is not backwards compat it might be worth just fixing lodash version now.\n. yeh this sucks, gonna release a hotfix tonight.\nif your using webpack you can correct by doing\nnpm install lodash@4.13.1 --save\nthen in webpack add lodash as an alias\nalias: {\n  react: path.resolve('./node_modules/react'),\n  lodash: path.resolve('./node_modules/lodash'),\n  ...\n. yep, I will investigate further with latest lodash, but for now better to stick to 4.13.1\na minor version increase by lodash should not change functionality like this so I will follow up with lodash authors\n. @mhilaire I think you can also use css to control what disabled means. I think for any component which could have disabled state, we either could have a proper or good documentation on how to change behaviour via css and apply consistently on all components. I need to understand more about this feature request.\nI understand searchOnload, but what would behaviour be after a few searches have been done on the page?, would it keep the previous result still visible?\nWe could add a shouldSearch:Function option where you decide what should happen\n. cool, we will add shouldSearch option to SearckitManager\nthat way all kinds of searches can be disabled, not just empty query.\nThe default doc examples will show empty query tho :D. @heylookalive @kud @ahmb84 @infacq \nthis should be fixed in beta version 2.3.0-0\nwe have added shouldPerformSearch function which can be overidden, and is called with an instance of ImmutableQuery\nHere is example of preventing on empty search\njs\n  searchkit.shouldPerformSearch = (query)=> {\n    return !!query.getQueryString()\n  }\nlet me know if there are any issues\nthanks!. @rohit-raj are you using SearchBox twice by any chance?\n. would be useful to see a project, hard for us to investigate, your package.json would be useful also\n. @rohit-raj is it related to the [URGENT]  etc?\nor is a different issue?\n. when you say the other listComponents don't work, how do they fail? and could you paste the code which is not working?, also have you made show that your imports for listComponents are not undefined etc\n. does it break only on server render? or both client + server\n. If any of you are using webpack, you can use the alias functionality to fix the version of react.\nWe need to fix our side too also ofcourse\n. I will investigate when I get a chance, thanks!\n. yep, for now you can import {AxiosESTransport} from \"searchkit\" and set the static field\n. if you are using webpack, you can alias react so searchkit will use the aliased version\n. I am unfamiliar with this feature, I need more concrete es query examples, before and after.. thanks,\nA couple of things which would help alot, is if you paste the agg query without reverse, and then adding reverse query, i think thats what you also pasted.\nThe next thing that would help is if there was a public ES index with data and mapping, so its easy to ensure we adding correct feature.\nThanks. looks good, i think FieldOptions would likely need a new type to handle this., once there is public index with expected result described, i can try and add it. @mbm-rafal @thenayr \nare you still having this issue.\nif you are, possible to paste your configuration for the UI?\nthanks. thanks! will review and add tests when I got a moment. Yeh, I think we need to cover with unit test as you only changed source code and tests continued to pass. @wangchuande yes its possible to add incoming prop to overwrite this field, once we have finished housekeeping on the repo, I will add this change. @sadovnychyi yet to try rollup with searchkit, hopefully we can take a look soon. @mbm-rafal have you got example usage project so we can replicate?. @mbm-rafal yep, I need to dig deeper into this, sure its possible by adding a new nested field type. No . @mbm-rafal \nAccessors would be shared if same type of accessor is used with same id field.\nI need to take a look more at the nested query stuff so it builds query more like how you want.\nAs soon as we finish some house cleaning on the repo, I will take a look at enhancing these features.\nMight ping you on gitter when I get round to this. @mbm-rafal dunno if following configuration options help.\n- searchThrottleTime prop for SearchBox\n- searchOnLoad prop to SearchkitManager\n- searchkitInstance.performSearch() for manual trigger. @sadovnychyi  we got some old commit with a similar optimisation, where we would pull up all common aggregator queries from post_filter to query.filter, definitely will improve performance, we just need to make sure there is no knockon effects etc, I like the optimisation for pagination on aggregators. if you want to read the query string, the state might be good to read.\njs\nsearchkitInstance.accessors.getState()\nif you need to write to the query, you will need to implement a subclass of StatefulAccessor\n. need to use onclick like this\njs\nonClick={()=> this.props.toggleItem(item.key)}. Looks good, thanks for the contribution, if you could sign the CLA so we can merge ASAP\nThanks again!. thanks @davireis I will take a look, thanks for providing that repo. we are removing es6-promise + polyfil from our library.\nand expect downstream bundlers to solve\nwill be part of 2.3.0. @davireis thanks for raising, I think 2.x will likely be version we go with. Thanks @olf !. We could make it configurable so can switch off the optimization.\nI think assuming performance is unimportant/important is an assumption, so we can make it configurable. yes, I agree so by giving the option to do both I feel we are doing our part.\nWe are also maintaining backwards compatibility, and we have only had 1 issue raised atm, but I agree accessibility is important :)\nWe also accept PR's :D. cool, will think about how its configured, might have to be a FastClick.STATIC.. or context based.\nI think a static probably best in this case but not most functional\nBackwards compat as in there are apps that depend on existing behaviour, if changing the defaults we need to be clear in change log etc. yeh could be FastClick.configure(..options for both) . we will look to making it configurable soon. right at beginning of your code, something alone these lines\n```js\nimport {FastClick} from \"searchkit\"\nFastClick.prototype.render = function(){\n  return React.cloneElement(this.props.children, {\n    onClick:this.props.handler\n  })\n}\n```. @mbm-rafal , this is a good idea, will just need to think on  how to make consistent across all components, as it would be nice to dynamically pass accessor in consistent way. I will double check, but I think its elasticsearch which doesn't support floating point for ranges. I see, elastic 2.4 supported only Integers, and elastic 5 allows floating point.\nWe will try to get it working with floating point. thanks @ThaDafinser looks like we need to omit filter if its {}. yep, html created outside of searchkit needs to use dangerouslySetInnerHTML (for highlight). @inostia I think this is possible by increasing the size property so pagination doesn't kick in. I see, yeh react-virtualize might be good, also we probably need a auto complete for facets in the future. @ThaDafinser  we can add this to the core. @olf  sure we can add this to the core. thanks @olf \nyour PR is merged and available in beta 2.3.0-0. agreed, just a little complex as keys used are dynamic, but i think its possible. @xinghengwang feature should still be there, as long as useHistory is not false as part of the options.\nIf not if you can make a repo which replicates, then I can take a look. Hey @MarttiR \nThanks again for this component, we really appreciate it.\nWe have been reorganising the searchkit repo into a mono repo like react, angular, jest etc does  to allow for custom components like this.\nI will try to pull in your component into our project very soon.\nThanks!. Hi,\nthis is similar to preserve query string not related to searchkit.\nwill try to include preserve hash when we submit a fix. you can reinstantiate the transport prop like this when ever your http headers change\njs\n    import {AxiosESTransport} from \"searchkit\"\n    searchkitManager.transport =  new AxiosESTransport(host, {\n      headers:{...}\n    }). hi,\nprefixQueryFields is only used if searchOnChange is true for Searchbox\nyou can also use queryBuilder prop to pass custom function to produce query\n. I think it might be done by css currently, so could be overridden. @TheDolo is this using the RefinementList?. But yeh I think we need to make this easier to control, and make consistent across all components which hide when no results, I will brainstorm :D. Just tweaked a setting on our circleci, would you mind doing a small commit that doesn't affect anything to try to retrigger, again thanks for this PR :). thanks!!. hi, i think a bit tricky as it may have side effects, such as if your in page 2 and change view\nit would probably need to reset pagination etc.\nwhat kind of behaviour would you like in this case?. thanks, will investigate. . which version of searchkit are you using?. I see, i think to make tag cloud more balanced it was overridden.\nI think defaulting to orderKey is probably best. Yep, i think we need to apply formatting to value so Selected Filters inherits,\nWe will investigate this. @wangchuande @voke \nthis should be fixed in beta version 2.3.0-0\nlet me know if the fix works for you\nthanks!. this will be fixed in upcoming 2.3.0 release. @voke \nthis should be fixed in beta version 2.3.0-0\nthanks!. Yep sounds good to support both.\nthrottle can be configured to debounce, by passing {leading:true} or {trailing:true}\nso perhaps we can expose throttleOptions property\nwhat do you think?. I think that your doing it correctly, buildOwnQuery is used for the aggregators, and buildSharedQuery is used for the act of filtering as its needed earlier to build disjunctive queries.\nWe do have an issue or 2 to make passing custom accessor much easier without inheritance. @chrisfinch we are just in the process of making Searchkit server friendly\nhopefully can get a beta out soon\n. @TheDolo @chrisfinch @vvo \nthanks for help, version 2.3.0-0 should be server render friendly\nexample usage can be found here\nhttps://github.com/searchkit/searchkit-examples/tree/master/searchkit-ssr-express-example\nthanks!. Is the product detail page part of the same react Router, or completely different server page?\n. I think if the product detail page was part of the react router, you will get the experience you want.\nWe also are investing time in serverside rendering, so this could help the initial impression alot. a quick way would be to modify without forking ImmutableQuery.prototype.buildQuery\nto include the new key, and then if it works can submit a issue/pr to add into searchkit. if you directly modify ImmutableQuery.prototype.buildQuery, it will affect all uses. right now the aggregations reflect what will yield results.\nI'm guessing you want filters to disregard search query, and when applying filter to rest the search query?. Best place is to use the constructor to create the searchkit instance. I need to check more, but I reckon its because of '1', '0', something is getting confused and converting to numerical key when deserializing Url. hi @mcastre possible to show more details on component you are using, and mapping of field?\nthanks. @mcastre \nthis should be fixed in beta 2.3.0-0\n. @bradennapier i tried updating to 4.x, i also get same issue.\njs        \nnew webpack.IgnorePlugin(/vertx/),\n in my webpack fixed it.\nwill keep eye out for better solution. I need to look bit deeper.\nOne solution is to provide translate function to the GroupedSelectedFilters component\nit should allow you to translate the value . going to close this, as updated on another PR. Maybe try something along these lines\n```jsx\n        queryBuilder={(query, options)=> {\n          if(query){\n            return SimpleQueryString(query, options)\n          } else {\n            return BoolMust(TermQuery('name', 'someDefault'))\n          }\n        }}/>. we are currently updating to typescript 2.5, we will include fix to PureRenderComponent in that work\nthanks!. thanks @probabble . @bradennapier \nI am going to debug this ASAP, also working on other react 16 compat issues. cool, almost fixed in the core now, so doesn't require toString(). @chrisfinch @kud @bradennapier \nI have just pushed beta version 2.3.0-0\nhopefully it is react 16 compat, with fix to Bem also\npossible to try it out?\nthanks!. Hi Greg,\nv2.3.0 should be v16 compat\nOn 5 January 2018 at 12:25, Greg notifications@github.com wrote:\n\nHello, Is there any effort planned to push a React 16 compatible version\nto npm ?\nSearchkit is the last of the component we use in our application which is\nnot ready for React 16.x.\nIs there a @next https://github.com/next branch we could grab from now\nwith that beta maybe?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/519#issuecomment-355543294,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAq9wgXINSG87io7CkHnYBLFuHUgv1cGks5tHhS3gaJpZM4PlCyP\n.\n. Thanks @olf for this!. Yeh issue with serialize/deserialize.\n\nDo you mind pasting an example of the url which includes the integer keys?\nAlso your mapping for this particular field?. thanks, I see the issue now\n. @richtera \nthis should be fixed in beta version 2.3.0-0\nthanks!. hi @probabble, just tested locally and also see the same issue.\nWill try to fix thanks!. @probabble the fix is in beta version 2.3.0-0\npossible to test when you get a chance?\nthanks!. Seems to be hardcoded atm, we will introduce translation for button. @hkirsman this should be fixed in beta 2.3.0-0\nhave added the 'search.button' translation\njsx\n<SearchBox translations={{'search.button':\"My button\"}} ..... />\npossible to test when you get a chance?\nThanks!. could you try a clean npm install on your project?. Npm 5 or yarn is good, just make sure you delete node_modules first. I think you meaning node version, best to use latest node 8.x, and latest npm 5.x. yep, this needs fixing, and also selected filters using rangeFormatter.\n. @richtera \nthis should be fixed now in beta version 2.3.0-0\nthanks!. seems like the query dsl is invalid, have you tested before hand directly to ES, maybe in sense chrome plugin =?. i dont believe any nested code changed in develop, I need to look deep, still bit confused.\nis your version of develop changed in anyway from your code?\n. could you paste your config for the component whcih is failing?. you wanna discuss on https://gitter.im/searchkit/searchkit\nthanks. hi @richtera are you still having this issue?. we will look to add it when current release is stable. yep, this is on our list, hopefully in near future. We can look into adding a class when refinement component is expanded. Yeah I agree that reloading the search when you feel something has changed is the safest.\nwe have an api searchkitInstance.reloadSearch(). other state changes also, like state, results, loading, error . Yep\nhtml\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"//cdn.jsdelivr.net/npm/searchkit@2.2.0/release/theme.css\">\n  <script type=\"text/javascript\" src=\"//cdn.jsdelivr.net/npm/searchkit@2.2.0/release/bundle.js\"></script>\njs\nSearchkitManager = Searchkit.SearchkitManager. We did initially have searchOnChange, but we felt the UX was too jarring, \nE.g. entering numbers vs search query can change drastically with 1 character.\n- type 1, then 0, 0, goes from 1, to 100 quickly and was wierd.\nI do see a case perhaps for search onBlur but we need to look into it.. thanks. @jmrichardson not without extending some components, It wouldn't be a lot of code.\nBut which tab will be selected by default, the All tab is useful to always have something selected. thanks @Gijsjan currently fixing on this\n552 . should be fixed in v2.3.0-6. it shouldn't be behaving like that, when searchOnChange is false it should search on submit when you press enter key. i think can do this\njs\nsearchkit.addDefaultQuery((query)=> {\n  return query.addQuery(\n    BoolMust([\n      TermQuery(\"type\", \"news\"),\n      TermQuery(\"language\", \"en\"),\n    ])\n  )\n}). oh yeh forgot to add the BoolMust or BoolShould\njs\nsearchkit.addDefaultQuery((query)=> {\n  return query.addQuery(\n    BoolMust([\n      TermQuery(\"type\", \"news\"),\n      TermQuery(\"language\", \"en\"),\n    ])\n  )\n}). yep it is a typo, I need to overhaul some of this documentation. Yep a few people have asked for this, we can add an option. yeh we will make configurable to accept 0 hits, and NoHits component should still work.\nI need to test multiple Hits components, i agree it should just work with multiple.. thanks!. hi @rolele, I can kind of see what you need, but %20 is standards based url encoding for spaces, so you are looking to decode \"-\" back into a space?. @rolele cool.\nWe can allow programmer to override decode/encode url functions in future release, which allows you to solve by code.\n. I see, other users also wanted to reshape url from ?.... to /somefilter/somevalue \nwhich is quite related. @mcastre its not currently configurable by a prop, but you can extend an existing class and use it like a RefinementListFilter\n```jsx\nimport { RefinementListFilter } from \"searchkit\"\nexport class CustomRefinementListFilter extends RefinementListFilter {\n    getAccessorOptions(){\n        return Object.assign({\n            min_doc_count:0\n        }, super.getAccessorOptions())\n    }\n}\n//\n```. @florianbepunkt \nWhich components do you need to connect with redux?\nYou can use a connected component for Hits and should work. The filters state is managed in searchkit, would require custom code to sync state with redux. @xinghengwang you can also use ViewSwitcherHits. yes @yassminesakhri you should be able too v2.3.0-9 has few fixes so might be worth trying that.\n. @cmstroscio Searchkit requires elasticsearch.\nMaybe you can try indexing to an elasticsearch instance. have you got an example of what you would default too. Still not understanding the usecase, have you looked at the CheckboxFilter?. cool I see now. right now only way is through the url until we implement the feature.. @BorsukIvan not currently as a prop,\nbut you can implement custom queryBuilder, with if statement. yep, I think return null or undefined and it should work. hi @jmrichardson \nmaybe could try our beta version @searchkit/refinement-autosuggest\nbash\nnpm install @searchkit/refinement-autosuggest@0.0.1-6\njs\nimport {\n    RefinementAutosuggest\n} from \"@searchkit/refinement-autosuggest\"\njs\n<RefinementAutosuggest\n       id=\"actors\"\n       title=\"Actors\"\n       field=\"actors.raw\"\n       multi={true}\n  />. this is clip of how it works\n\n. hi @Xrampino \nThanks for the PR, do you know if this is backwards compatible with es5 etc?. nice @Xrampino  thanks. thanks @kud \nwill look into our CI issues and then merge. doc is generated from current develop branch. yeah, thanks @kud . Thanks @kud \ntell me when you are happy for merge to take place, I know you are fixing as you spot. hi @phillipb  v2.3.0 has fixed this issue I think. thanks @moersoy . Thanks @zvictor , sorry it was not obvious and not in changelog. ",
    "m1n5k": "\nRequiring css file in the component\nUsage of window object in the component\n. \n",
    "SabeehY": "Any updates on this?\n. +1\n. +1 Really looking forward to this\n. Any suggestions on how I can implement a solution for geo searching for the time being?\n. Thanks! I'll look into it.\n. ",
    "thomasmodeneis": "+1, great must have feature.\n. First issue I've found when trying to render server side is:\nsomething went wrong... --> Invariant Violation: Browser history needs a DOM at Object.invariant [as default] (/opt/---/node_modules/searchkit/node_modules/invariant/invariant.js:42:15) at createBrowserHistory (/opt/---/node_modules/searchkit/node_modules/history/lib/createBrowserHistory.js:39:100) at /opt/---/node_modules/searchkit/node_modules/history/lib/useQueries.js:47:19 at Object.exports.createHistory (/opt/---/node_modules/searchkit/lib/src/core/history.js:5:57) at SearchkitManager.setupListeners (/opt/---/node_modules/searchkit/lib/src/core/SearchkitManager.js:58:38) at SearchkitProvider.componentWillMount\nProblematic code:\nthis.history = history_1.createHistory();\nI've managed to pass by this one by disabling history: useHistory:false\nSecond was the CSS styling that I've managed to solve with another if on server rendering code to check for search url and if true, send searchkit.css to index.ejs and this cleared the issue.\nThe third issue, and the one I'm right now is that the query is not populated correctly at the component SearchkitManager.prototype._search when useHistory is false.\nFor this one, I'm still looking for alternatives.\n. I can't share this one, but I can work on a basic fork to get you going with this asap. \n. I've created this project with the setup for the react, its already working for basics but we will need to work on searchkit in order to have this app fully working.\nhttps://github.com/thomasmodeneis/searchkit-universal\nDefects: \n1) Does not load the search when url is populated, opens blank.\n2) curl http://localhost:3000/search?q=diamonds returns only the skeleton app, server side is not rendering properly.\n3) When using history, app fails to load, only way is by enabling the commented lines for window undefined check.\n4) Refresh page 2x with history disabled and the server side rendering and you will get:\n^[[A^[[A[0] Error: Only a single instance of BaseQueryAccessor is allowed\n[0]     at AccessorManager.add (/opt/pocs/searchkit-universal/node_modules/searchkit/lib/src/core/AccessorManager.js:37:27)\n[0]     at SearchkitManager.addAccessor (/opt/pocs/searchkit-universal/node_modules/searchkit/lib/src/core/SearchkitManager.js:67:31)\n[0]     at SearchBox.SearchkitComponent.componentWillMount (/opt/pocs/searchkit-universal/node_modules/searchkit/lib/src/core/react/SearchkitComponent.js:52:48)\n[0]     at [object Object].ReactCompositeComponentMixin.performInitialMount (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactCompositeComponent.js:281:12)\n[0]     at [object Object].ReactCompositeComponentMixin.mountComponent (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactCompositeComponent.js:222:21)\n[0]     at [object Object].wrapper [as mountComponent] (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactPerf.js:66:21)\n[0]     at Object.ReactReconciler.mountComponent (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactReconciler.js:39:35)\n[0]     at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactMultiChild.js:203:44)\n[0]     at ReactDOMComponent.Mixin._createContentMarkup (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactDOMComponent.js:593:32)\n[0]     at ReactDOMComponent.Mixin.mountComponent (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactDOMComponent.js:478:29)\n[0]     at ReactDOMComponent.wrapper [as mountComponent] (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactPerf.js:66:21)\n[0]     at Object.ReactReconciler.mountComponent (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactReconciler.js:39:35)\n[0]     at ReactDOMComponent.ReactMultiChild.Mixin.mountChildren (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactMultiChild.js:203:44)\n[0]     at ReactDOMComponent.Mixin._createContentMarkup (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactDOMComponent.js:593:32)\n[0]     at ReactDOMComponent.Mixin.mountComponent (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactDOMComponent.js:478:29)\n[0]     at ReactDOMComponent.wrapper [as mountComponent] (/opt/pocs/searchkit-universal/node_modules/react/lib/ReactPerf.js:66:21)\nThanks in advance for the help debugging this :).\n. Oh this is really good news.\nThanks for sharing @joemcelroy . Hi @joemcelroy \nAny idea when this will be released ? +1 for this feature.\nThanks.\n. Oh thanks @joemcelroy , thats all for me :D\n. Hi @joemcelroy \nI've just realised that this option is actually not doing what I wanted.\nI expected this behaviour:\nGiven searchOnLoad is false, and user opens search page and there is a no query argument, then don't search anything.\nGiven searchOnLoad is false, and user opens search page and there is a query argument, search and show results on page.\nThe main problem for me right now, is when the user opens the search page, searchkit triggers a full search on ELK that is taking about 3s. But the user haven't requested anything, he still want to search so its not using the resources very efficient. This is not  for ex. how google works, in other words: no query no search, with query do search.\nIs there any way I could get this behaviour maybe with another option to clarify the behaviour ?\nThanks\n. oh right so this is on my side of the logic, that will work.\nThanks @joemcelroy \n. Hi,\nI'm also facing same issues for server side rendering, so far it seems that SearchkitProvider.componentWillMount at /SearchkitProvider.js:15:30 is making use of DOM, witch conflicts with the react-router History Singletons:\nFor React Components, this means using them only in lifecycle functions like componentDidMount, but not in componentWillMount.\nhttps://github.com/reactjs/react-router/blob/master/docs/guides/ServerRendering.md\nIs there any other ticket where this issue is being tracked ? any other references for this would be helpful.\nThanks\n. I believe this is impacting #4 as well, the problem is how to populate the history on server side, any ideas ?\n. I'm also facing it same issue here, besides and the changes on the mapping for keyword and fielddata:true.\n{\"error\":{\"root_cause\":[{\"type\":\"parsing_exception\",\"reason\":\"Unknown key for a START_OBJECT in [filter].\",\"line\":1,\"col\":190}],\"type\":\"parsing_exception\",\"reason\":\"Unknown key for a START_OBJECT in [filter].\",\"line\":1,\"col\":190},\"status\":400}\n. Hi,\nI'm using 2.3.0-6 and when using a RefinementListFilter together with EL 5.x its returning me a error. \nI'm not sure how to deal with the provided fix, is there any example for it ?\n{\"error\":{\"root_cause\":[{\"type\":\"illegal_argument_exception\",\"reason\":\"Fielddata is disabled on text fields by default. Set fielddata=true on [nick] in order to load fielddata in memory by uninverting the inverted index. Note that this can however use significant memory. Alternatively use a keyword field instead.\"}],\"type\":\"search_phase_execution_exception\",\"reason\":\"all shards failed\",\"phase\":\"query\",\"grouped\":true,\"failed_shards\":[{\"shard\":0,\"index\":\"test\",\"node\":\"iKR72_FEQNeN1NbfFVcmPg\",\"reason\":{\"type\":\"illegal_argument_exception\",\"reason\":\"Fielddata is disabled on text fields by default. Set fielddata=true on [nick] in order to load fielddata in memory by uninverting the inverted index. Note that this can however use significant memory. Alternatively use a keyword field instead.\"}}]},\"status\":400}\nThanks.. I see now, thanks for the heads-up :D. @aliceriot I believe https://github.com/searchkit/searchkit/pull/369 will address this and other issues related to 15+. this will fix https://github.com/searchkit/searchkit/issues/354. ",
    "dnordberg": "Perhaps this can help. Referencing mjackson:\nhttps://github.com/ReactTraining/history/issues/80\n\"In a non-DOM environment (like node) you need to use a \"memory history\", not a \"browser history\".\"\nPerhaps searchkit could test for DOM and select the right history function.\nconst history = require('history');\nconst ExecutionEnvironment = require('react/node_modules/fbjs/lib/ExecutionEnvironment');\nvar historyObject = ExecutionEnvironment.canUseDOM ? history.createHistory : history.createMemoryHistory;. ",
    "Jaikant": "Anyone debugging this issue actively, would like to help.. @thejmazz i have been doing some tests for server render, in my tests I found that the html which the server sends does not contains the html for the results. It is always \"0 results found\", and once on the browser the query result is populated. \nBtw, I bypassed the \"Only a single instance of BaseQueryAccessor is allowed\" by not having the SearchBox component. . Works like a charm out of the box \ud83d\udcaf \nThanks for the lovely work!. I found a problem, I think. If I go to my search link from my home page, it works fine. But if access the search link directly then it gives an error.\nYou can take a look at it here: https://sherpafeet.com if we click the \"search guides\" it works allright. But if we directly go to https://sherpafeet.com/guides we get the above error.\nInvariant Violation: Browser history needs a DOM\n    at invariant (/Users/jai/work/guides/landing/sf/node_modules/invariant/invariant.js:42:15)\n    at Object.createBrowserHistory (/Users/jai/work/guides/landing/sf/node_modules/searchkit/node_modules/history/createBrowserHistory.js:49:27)\n    at Object.exports.createHistoryInstance [as createHistory] (/Users/jai/work/guides/landing/sf/node_modules/searchkit/src/core/history.ts:13:10)\n    at SearchkitManager.setupListeners (/Users/jai/work/guides/landing/sf/node_modules/searchkit/src/core/SearchkitManager.ts:109:35)\n    at SearchkitProvider.componentWillMount (/Users/jai/work/guides/landing/sf/node_modules/searchkit/src/core/react/SearchkitProvider.tsx:22:24)\n    at /Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:345:23\n    at measureLifeCyclePerf (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:73:12)\n    at ReactCompositeComponentWrapper.performInitialMount (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:344:9)\n    at ReactCompositeComponentWrapper.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactDOMComponent.mountChildren (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactMultiChild.js:234:44)\n    at ReactDOMComponent._createContentMarkup (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:657:32)\n    at ReactDOMComponent.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:524:29)\n    at Object.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactCompositeComponentWrapper.performInitialMount (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:368:34)\n    at ReactCompositeComponentWrapper.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactCompositeComponent.js:255:21)\n    at Object.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactDOMComponent.mountChildren (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactMultiChild.js:234:44)\n    at ReactDOMComponent._createContentMarkup (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:657:32)\n    at ReactDOMComponent.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:524:29)\n    at Object.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactDOMComponent.mountChildren (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactMultiChild.js:234:44)\n    at ReactDOMComponent._createContentMarkup (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:657:32)\n    at ReactDOMComponent.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:524:29)\n    at Object.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactReconciler.js:43:35)\n    at ReactDOMComponent.mountChildren (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactMultiChild.js:234:44)\n    at ReactDOMComponent._createContentMarkup (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:657:32)\n    at ReactDOMComponent.mountComponent (/Users/jai/work/guides/landing/sf/node_modules/react-dom/lib/ReactDOMComponent.js:524:29). I am using RSK which uses the universal router.  https://github.com/kriasoft/universal-router. @ssetem thanks I set the userHistory: false on the server.. @ssetem @joemcelroy  I am seeing the same behaviour, where the filters show only if there are available results to search within. If the filter is not applicable to the existing search results, the filter is not displayed. I think an option to yet display the filters would be great.. @joemcelroy Thanks it works great!. Actually this seems to be working all right now. The tool tip is nicely placed above the slider. Btw, this is in my project which uses bootstrap. I am not sure how much of a bug this is and maybe we should just close this off. I am closing it for now.. Try using yarn instead. . ",
    "thejmazz": "To get around the Only a single instance of BaseQueryAccessor is allowed issue, you need to create a new SearchkitManager on each request (similar to how you make a fresh redux store).\nHowever, I am getting a mismatch between server render and client render, for the ID of the input div:\n\n\nI tried looking for where id is set, and could not find it:\nhttps://github.com/searchkit/searchkit/blob/develop/src/components/search/search-box/SearchBox.tsx#L159-L173. ",
    "sidharthchugh": "any update on this issue?. Okay :(, I live in Berlin, Germany and I have seen many startups are moving to universal apps and for sure need search and I think so searchkit is perfect for there needs. It would be good if you guys can at least provide some work around.. ",
    "chrisfinch": "@thomasmodeneis I'm trying to take a look at the repo you helpfully mentioned about where you have used searckhit in a universal app.\nI'm trying to do the same but I cant access your repo - did you move it somewhere?. @rohit-raj Did you manage to solve the issue with BaseQueryAccessor?\nI'm getting the same issue but can't resolve it...\n```javascript\nimport { createMemoryHistory, createBrowserHistory } from 'history';\nlet searchKit;\nconst getSearchKitInstance = () => {\n    if (!searchKit) {\n        const SearchkitManager = require('searchkit').SearchkitManager;\n    if (WEBPACK_CONFIG_IS_NODE) {\n        searchKit = new SearchkitManager(\"/\", {\n            useHistory: false,\n            searchOnLoad: false,\n            createHistory: createMemoryHistory\n        })\n        return searchKit;\n    } else {\n        searchKit = new SearchkitManager(\"/\", {\n            timeout: 20000,\n            createHistory: createBrowserHistory\n        });\n        return searchKit;\n    };\n} else return searchKit;\n\n};\nexport default getSearchKitInstance;\n``. @rohit-raj yes I saw your switch on server render withuseHistory: false` - if you check the code in my post you can see I'm trying the same thing but it's not working - any assistance would be appreciated!. @rohit-raj \nThis line in my code checks for the server environment:\njavascript\nif (WEBPACK_CONFIG_IS_NODE) {. Hitting this issue myself now, extra functionality would be great - I have a UX request to display icons and signage when a filter is empty/disabled and am currently having to override and extend various filter components to get it to work. \nA noResultsComponent as @joemcelroy suggests would be perfect.. For completeness and for anyone googling here's a slimmed down example of how I'm using inheritance to enable a 'No Results' version of the filter component:\n```typescript\nimport React from 'react';\nimport { MenuFilter } from 'searchkit';\nexport class NoResultsMenuFilter extends MenuFilter {\nrender () {\n    if (this.accessor.getBuckets().length > 0) {\n        return super.render();\n    } else {\n        return (\n            <div>\n                No Results!\n            </div>\n        );\n    }\n}\n\n}\n```. @ssetem thanks - that would be great!. \ud83d\udc4d also having this issue - any plans for a release?. @ssetem thanks for the response. I thought of modifying ImmutableQuery but how would I then ensure that the modified version is used by the rest of searchkit?. Quick update here - it would be really helpful to get this merged\nAs the version of the react type defs being used currently (0.0.0) I've been getting a lot of typescript issues in my project where the searchkit react type defs are clashing with those installed for my project.\nAs a consequence I've had to use npm's shrinkwrap functionality to override the version of the type defs used for the searchkit package as below:\nOverriding 0.0.0 -> 15.6.1\njson\n{\n  \"dependencies\": {\n    \"searchkit\": {\n      \"version\": \"2.2.1-0\",\n      \"from\": \"searchkit@2.2.1-0\",\n      \"dependencies\": {\n        \"@types/react\": {\n          \"version\": \"15.6.1\",\n          \"from\": \"@types/react@0.0.0\"\n        }\n      }\n    }\n  }\n}. @joemcelroy thanks - I only went to 16.0.5 as it was the latest at the time - could also go to 15.x.x - just anything other than 0.0.0 as it seems buggy!. For anyone who finds the PR and is having the same issue - the following changeset to tsconfig.json resolves the problem without needing to use npm-shrinkwrap:\n+    \"baseUrl\": \".\",\n+    \"paths\": {\n+      \"react\": [\"node_modules/@types/react\"]\n+    }. \ud83d\udc4d . Cause of error is this: https://github.com/albburtsev/bem-cn/issues/43. Solution could be to upgrade bem-cn?. @ssetem great work - thankyou! Have tested this with my project and can say anecdotally that it seems to work fine alongside react 16. Will be going further in depth this week and will report back on any weirdness.. @kdabo I'm not part of the searchkit team but if you want to do this you can simply extend the base SearchBox class with your own implementation like so:\n```typescript\nclass MyCustomSearchBox extends SearchBox {\n// override the render method with your own\nrender() {\n    // ... be sure to follow the original implementation closely to make sure all the necessary event bindings are in place\n}\n\n}\n```. @ssetem @joemcelroy would be great to get some feedback on this if you guys have a spare moment - even if the feedback is 'we're too busy so this will have to wait for now'!\nIf so when I find some availability myself I'll work on a PR.\nThanks!. @joemcelroy up against it with deadlines right now but might have some downtime in a couple of weeks \ud83d\udc4d . ",
    "mmjd": "@joemcelroy is it available in next release? . ",
    "TheDolo": "\nUsing older and 2.3.0, passing custom components seems broken with SSR.  All above have been passed custom components, yet only one is using it? Only happens when I webpack production build with SSR (https://github.com/FormidableLabs/rapscallion).  I know you said only Next.js, but maybe it's a real bug.  Def could be something not SK in my project.\nEdit:  Cloning the passed in component (customHitStats, customHitStats2) instead of using the same component seems to solve this.. Fixed in my local source by rendering values using dangerouslySetInnerHTML.  I also look for and strip out the tags when the tag is clicked and added to filter.  Not the best solution I know :(. Gonna close this, not really part of your scope.. I also am curious on the authors thoughts on this.  How can we pass in a new token without reinitializing SearchkitManager.\nYou may find this fork helpful, but doesn't solve your problem I think:\nhttps://github.com/yarnball/SearchKitJWT\n. I could be wrong, but SimpleQueryString does not offer cross_fields or support prefixQueryOptions.  You may find SimpleQueryString behaves similarly to cross_fields.  See the operators section in the link below.\nYou may find it helpful to build your queries in Kibana first so you can stumble upon the error messages.\nPer the authors docs:\nprefixQueryOptions (Object): Optional. An object of options for MultiMatchQuery .\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-multi-match-query.html. Mostly on topic here: I currently have a Google Maps React component inside of listComponent={ComponentWithGMaps}, the problem is that every time search kit has no results (using QueryString, so happens often), the map is destroyed.  I would rather be given an empty result set instead of the listComponent not rendering anything.  Once the query changes and any amount of results are found, the map has to reinit costing another API token.. Nope, this is using QueryString in the search box! (Sorry for the hijack!) . I've fixed this behavior easily in Hits.tsx :)\n. https://github.com/GregoryPotdevin/searchkit-multiselect might be a good starting place!. As of right now, even when using multiple  <Hits hitsPerPage={10} listComponent={Compon}/> <Hits hitsPerPage={15} listComponent={Compon2}/>, you'll still only get 10 or 15 for both.  \nPerhaps pass in the max hits needed, then discard the extra rows passed in (need to use listComponent and not itemComponent).  You could also build your own ViewSwitcherHits using listComponent instead of itemComponent!  \nHere's how you can set the the number of hits inside your component (after it's loaded the initial hitsPerPage).  \nimport { PageSizeAccessor } from 'searchkit'\n...\n  let psa = searchkit.getAccessorByType(PageSizeAccessor)\n    psa.setSize(50)\n    searchkit.performSearch(). I agree!  \nBut they both have different use cases, I'd like both of them included in SK if possible.  . This would be huge. \n(I mean cmon, server side rendering + searchkit :), I can't even imagine how awesome instant search results are gonna be) . Works fine here.. +1. This one is the bees knees (ok maybe infinite scroll is up there too) :) + 1 million. Yea this is one of the irks with SK.  I too also want to customize every rendered component, yet few have the ability to be passed custom components.  To the source!. You might be better off using an API interface like Express to call which uses the ES Index API to add/edit the result (upsert).  Then reload search and it should appear, rather than calling the ES Index add/edit (waiting for confirmation of success) and removing it from local SK state.. Thanks for the reply!  I understand exactly what you mean in the bullet point.  onBlur would be nice, I think I'm going to try trigger a search once the user is done typing vs every letter.  That would be a good workaround to \"one less click for the user\" and not having a overly responsive search :). Just an additional note.\nI create two < Hits>, one for the maps (listComponent) and another (item component) for rendering out each hit item.  I would still like to be able to have the itemComponent Hits to show suggestions/error message/yadda yadda at no results found but the listComponent Hits not be destroyed on 0, but be passed 0.  Hope that doesn't complicate things :( or if I'm even allowed to use two < Hits> in this way (I could use one listComponent, but how would the non-map object get its 0 hit suggestions?).  \nEdit: Forgot that noHits isn't a part of Hits, thanks!\nThank you!. ",
    "Jimexist": "Great - looking forward to it!\n. Thanks for the heads up! Looking forward to it!\n. Thanks for the quick fix!\n. ",
    "evancauwenberg": "Thnx for the fast reply!\nPerfect, i'll join directly! \n. Super, thnx man!\nIs it possible to run queries without setting them as defaultQuery?\n. I need to build a detailview based on the results of the overview (like in the example)\nSo correct me if i'm wrong but the best practice should be te create a custom component that extends the SearchkitComponent and create a custom accessor or?\n. ",
    "bradennapier": "can we document this?. I need this and the solution was done in the chat so not really sure how to do it.. Already fixed it myself by adding toString to every Bem calo. ",
    "GregoryPotdevin": "Not a fan of having the opacity hard-coded in the style like that. Should probably be an extra class to allow custom styling ?\n. Sorry, looks like I messed up my PR as this one contains the changes from the previous PR too... \nI'll add the tests tomorrow and update the PR if you find it useful. \nExample from the demo with metascore interval=2:\n\n. Also found this one : http://www.gpbl.org/react-day-picker/examples/#range Haven't played with any of them yet.\n. I think RangeFilter could provide support for year aggregation without using a special field : https://www.elastic.co/guide/en/elasticsearch/reference/2.1/search-aggregations-bucket-datehistogram-aggregation.html\nSomething like <RangeFilter type=\"date\" dateInterval=\"year\" /> (not sure for dateInterval vs interval, maybe we should rename interval to avoid the name clash)\n{\n    \"aggs\" : {\n        \"articles_over_time\" : {\n            \"date_histogram\" : {\n                \"field\" : \"date\",\n                \"interval\" : \"year\"\n            }\n        }\n    }\n}\n. Looks like it would also be possible to have a nice slider with month intervals but year marks : http://react-component.github.io/slider/examples/marks.html\n. 0.9 maybe ?\n. Quick POC : http://codepen.io/anon/pen/obybVm\n(with horrible styling)\n. Thanks @bvaughn. This is more of an internal state management problem for now. We'll probably add support for multiple components when it lands and react-virtualized could be one of them.\n. WIP implementation : https://github.com/searchkit/searchkit/compare/infinite-scrolling\nChanges : \n- add \"context\" to SearchRequest. It's just { isMore: boolean } for now. Used to bring more info to onResults/onError to treat some requests differently. Note that SearchRequest references SearchkitManager directly but it would be better if it just required an abstract SearchRequestResults (with onResults/onError)\n- SearchkitManager.performShowMore(). Sets the context to showMore: true, removes the aggregators from the query (not a huge fan of having the manager change the query...), and when the results arrives merges the hits with the previous ones and keeps the original result (with the aggregators and all)\n- InfiniteScrollingAccessor, forked from PaginationAccessor. It's actually the same for now but will need to be updated to prevent its state from being serialized in the url (not sure how to do that while keeping the page reset hack)\n- InfiniteScrollingPagination, uses the accessor and calls this.searchkit.performShowMore(); instead of this.searchkit.performSearch(). It also uses a VisibilitySensor to track when the user has scrolled to the end of the page. This is cloned from react-visibility-sensor for now, will need to be updated and reworked (the code is short so I advise cloning with correct attribution and adapting to avoid an external dependency). It would be better to start preloading results a little bit BEFORE the VisibilitySensor becomes visible (like if it's distance to the bottom of the screen if less that 25% of the screen height, or something like that). \nNote that my initial tests didn't have the VisibilitySensor but used a \"Show More\" button. It's just a 1 line change in InfiniteScrollingPagination's render method (render a button instead of a sensor), so this could be either a prop or a subclassed \"ShowMorePagination\" component. \nThis is more of a POC with a few hacks so we need to see if the changes needed in SearchkitManager go in the right direction. I initially wanted to release this as an external package but the changes in SearchRequest make it tough (SearchkitManager could be subclassed to provide the extra logic). Actually as SearchkitManager is creating the SearchRequest I guess it could still work using a subclass, it has to redefine _search anyways.\n@ssetem how long would it take to release this branch as a test version on NPM for those who want to test ? (without merging into Core for now)\n. And of course it's missing proper error management :)\n. I think the default should be to reset the filters and not the query. It's a common use case to type a search, start filtering, and just want to reboot the filters. And that's what the name itself suggests : \"ResetFilters\". \nEDIT : hadn't seen that the default behavior was already to flush the search... Probably better not to change the defaults\n. Great\n. Started an example in the playground, with a change to have it work : https://github.com/searchkit/searchkit/pull/133\nDoesn't reset the page number yet, and whould need a way to add it to the queryString.\n. Does the SearchBox need to support updating props ? The searchThrottleTime is only used when the component is created.\nYou could add a componentDidUpdate method (or WillUpdate) and recreate the throttled function with the new value if it changed.\n. Should there be a single component with a few options (useCheckbox comes to mind) or 2 (FilterItem and CheckboxFilterItem) ?\n. looks good\n. InitialLoader example code uses this.bemBlocks. Shouldn't that be this.props.bemBlocks ?\n. > If you want to tweak the markup for a menu option, you can use the itemComponent prop and pass in a new functional component to be used to render each option.\nActually it works for all components, not just functional components. Change that to \"pass in a component to be used...\" ?\n. Mockup :\n\n. Discussed on gitter.\nSwitch to using the accessor's GUID, and update the GUID code to using a simple integer counter with a prefix (=> key_XXX)\n. Looks good\n. Hmm. Actually I think I had something like that in a previous site of mine ^^\n\n(I had my mouse over \"Italy\" so it was crossed out). \nThe idea was to group filters by field. To be more explicit, each entry should be a little button and have a cross like the current design. I find that much cleaner for multiple values, but not sure if it's satisfying enough for single values.\nYou could even click on the field name and it removed all those filters at once but I'm not sure that'll be easy to understand for the end user.\n. #### GroupedSelectedFilters test :\n\nFeatures grouped selected filters, cross to remove all entries for a given field, and click on a filter to remove a filter's value (has line-through on hover)\nMuch more compact than the current version if you have multiples values (and the entries didn't get split)\n\nCurrent code : GroupedSelectedFilters.tsx\n. It's probably best to have ES \"specific\" props that stay untouched, and \"happy path\" props that have different names to avoid confusion.\n. looks good\n. Should the prop be hitCount or hitsCount ? SearchkitManager uses hitsCount.\nShould the label be translated in the parent component before being sent to the child ? (I think in the other components only the translate function was passed, but at the same time they didn't have custom labels so it's a bit different).\n. Do you mean having default list/grid components and dumping custom data in it ?\n. Indeed !\n. Note : might require checking how this is managed by the ResetFilters component to have the same display as the other components.\n. I haven't checked and I don't think the next version will completely fix this. The default list components are pretty permissive and check for label, title, and fall back to key if none was given. So the UI components are pretty clear. \nThe components themselves, though, should have the same conventions as in v0.7, so still using label for some and title for others. No deprecation warning or change in v0.8. \n. Experimented the approach in the playground :\n```\nexport default class TagFilter extends SearchkitComponent {\nhandleClick() {\n    const { field, value } = this.props;\n    const accessor = this.searchkit.accessors.statefulAccessors[field]\n    accessor.state = accessor.state.toggle(value)\n    this.searchkit.performSearch()\n  }\nrender() {\n    return (\n      {this.props.children}\n    )\n  }\n}\n```\n. Might be worth pushing that one back to 0.8.1 or 0.9 as we haven't integrated it yet. Here is the current code :\n```\nexport class TagFilter extends SearchkitComponent {\nconstructor(){\n    super()\n    this.handleClick = this.handleClick.bind(this)\n  }\nhandleClick() {\n    const { field, value } = this.props\n    const accessor = this.searchkit.accessors.statefulAccessors[field]\n    if (!accessor) {\n      console.error('Missing accessor for', field, 'in TagFilter')\n      return\n    }\n    accessor.state = accessor.state.toggle(value)\n    this.searchkit.performSearch()\n  }\nrender() {\n    const { value } = this.props\n    return (\n      \n{this.props.children}\n\n    )\n  }\n}\n```\nI guess most of the time people will want to use this on a list, so rather than doing the list manually, having a TagFilterList component could be nice (and would be aligned with the current listComponent/itemComponent trend). \nThese can be used in Hits results, but still need to have an accessor created (either from a RefinementListFilter or another filter). So to handle those rare cases where you want to be able to filter without having a filter defined, we incubated a FacetEnabler component\n```\nclass NullComponent extends React.Component<{}, {}> {\n  render(){return null}\n}\nexport interface FacetEnablerProps extends SearchkitComponentProps {\n  field: string\n  operator?: string\n  size?: number\n  title: string\n  id: string\n}\nexport default class FacetEnabler extends React.Component {\nrender() {\n    return \n  }\n}\n```\nThis filter is added like all the other Facets but doesn't display anything. It works well but requires some cleaning up (this version is really hacky) and discussion before integrating into searchkit. \n. TagFilter, TagFilterList, and TagFilterConfig (more in the docs) have been added to the develop branch.\n. Multiple solutions :\n1. Just do a quick prefix search with highlighting returning only the title (or a specific field)\n2. Could use filters on a term aggregator : https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#_filtering_values_2\n{\n    \"aggs\" : {\n        \"tags\" : {\n            \"terms\" : {\n                \"field\" : \"title\",\n                \"include\" : \"sam.*\"\n            }\n        }\n    }\n}\n. > In terms of UX, having searchOnChange and an autocomplete component showing results can be overkill.\nBut you probably wouldn't be using both at the same time. \nSuggesters are good for high volume queries but could be a bit more difficult to configure for newcomers ?\n. Should this be a \"set\" or an \"add/remove\" ? ie, if I have multiple postProcesses, will the system take care of combining them or do I have to do it myself ?\n. The value was pushed into an accessor. Manually changing the hitsPerPage probably still doesn't work but there's a nice workaround.\nFor the record, the current approach (which will hopefully be generalized in v0.9) is have accessors/states manage the search values or options which can change. For now there's 1 accessor/component per value (pageNumber, hitsPerPage, view, etc.) but we need to converge towards a generic solution (auto-update query and components, and serialize state in the queryString, which you wouldn't get for free if you handled those values yourself as state). The stateful accessor pattern reduces the required boilerplate to link components together (ex : <ViewSwitcher />)\n. There are several use cases I would have for working with local data :\n- preload menu/admin page data in the html and do local queries for a quick admin panel search menu\n- offline mode : select documents to store offline and still have the ability to search them\nThere are currently no ES-like offline javascript libraries. The closest you can get is Lunr (Solr-like in JS) and alaSQL (full SQL with offline storage and json querying). Both of these would lack the aggregators features that are required for searchkit to work. I guess someone could get to work and try to build a sort of \"ES.js\" using one of these products, but it's a lot of work (though probably fun).\n. Note that the implementation will need to pass both toggleFilter and setFilters, depending on how the display component works.\n. As discussed, this could take the form of an InputFilter even if it would work like the normal Searchbox. \n. This has been added to Searchkit 0.9.X\n. RefinementListFilter only supports AND/OR. He's asking for NOT :)\n. I got my head around what the NOT RefinementList should look like and now it seems clear why you want it... Compared to the AND/OR filters, the idea would be to display like a normal RefinementList but with all items checked by default, and toggling the items would add them to the state as NOT keys and uncheck them visually.\nFor some facets it can actually make more sense for the end user : by default, everything is selected, and you want to REMOVE some values. In @PAK90's case, I can see how he could like to have all colors checked by default, and have the user uncheck colors that should never come up in the search. The difference with the AND/OR filter is that if you have only red and black checked, you'll only get cards with pure red, pure black, or red+black, and you can't get red + other color (plus an edge case I'll talk about later on). That would work really well with the new Toggle component.\nIt should be pretty easy to build :\n- accessor => close to 0 code, the toggle logic is the same, it just needs to be a NOT operator\n- ui => shouldn't have any change to do\n- RefinementListFilter => that's the tricky one, we'll need to reverse the selected list : take all keys from the buckets and remove from those keys the selected ones, so the UI displays the inverted state (probably easier than pushing the invert logic to all UI components)\nMy main issue with this is that mixing NOT filters with other filters in a single search UI could be misleading for the end user. Having 2 elements ticked in the NOT filter will look just like having 2 elements ticked in the AND/OR filter, but the result will be very different (for array fields), it acts kind of like an OR but not quite : \nIf A and B are visually ticked, you'll get results with \n(arr == [A, B]) OR (arr == [A]) OR (arr == [B]) OR (arr == [])\nThat last one can be surprising depending on the context. If in your data the field can never be empty it's not a problem.\nThe other display possibility which doesn't have this shortcoming and is even easier to implement is by having a big red cross next to the selected NOT items instead of a checkbox. It makes it more explicit that it's a NOT but I think end users will have a harder timing wrapping their head around it.\nIn all cases, adding NOT to the accessor isn't a problem and doesn't add any extra logic or edge cases. That could allow developers to play with it and see if anything interesting comes out of it (before adding the corresponding RefinementListFilter/UI behaviors).\n. Using flex also means it might not work correctly in IE (haven't checked) and that when 1 component overflows and becomes taller, the other components try to match the height. And that's how you get this :\n\n(same problem in the pager)\n. Fixed in 0.8\n. Actually TagCloud won't merge into the list because it computes font sizes per items, but it can still use the common ItemComponent. \n. Thanks for the suggestion. Features are frozen for v0.8 so you'll have to wait a little more.\n. What's next ? Create an InputFilter which would have the containerComponent by default, take a title, check that the id isn't q, remove autofocus, etc.\n. Added input-filter, which doesn't do much besides wrapping a SearchBox with some defaults and putting it in a panel.\n\n\nThis approach works well but we might need a direct access to the accessor to check when to disable/hide the filter.\n. I just checked the CSS to see the difference between ActionBarInfo and ActionBarFilters. They just add the flex layout and ActionBarFilters has  margin-top: 15px. It seems like it should be pretty simple to trim the layout down to the more generic\n<LayoutResults>\n  <ActionBar>\n    <HitsStats/>\n  </ActionBar>\n  <ActionBar>\n      <SelectedFilters/>\n      <ResetFilters/>\n  </ActionBar>\n  <Hits mod=\"sk-hits-grid\" hitsPerPage={10} itemComponent={MovieHitsGridItem}\n    sourceFilter={[\"title\", \"poster\", \"imdbId\"]}/>\n  <NoHits/>\n</LayoutResults>\nThis shouldn't be a problem for backwards compatibility if the previous (now unused) classes are left in, and this layout was previously something taken from the demo and not generated by a Searchkit component. \nThe ActionBar container could be left in as an ActionBarGroup (or have ActionBar > ActionBarRow ?) if it might be needed for some styling (though that part still lives in the user's app code so it's easy to add extra divs if needed). \n. Quick update : showHistogram={false} passes loadBuckets: false to the accessor, which doesn't generate the aggregator. This is a nice optimisation but it just means that the accessor shouldn't rely on the bucket's content for it's disabled state. \nInputFilter uses (this.searchkit.getHitsCount() == 0) && (this.getValue() == \"\") so a similar strategy could be used (disabled the facet if there are no hits and the accessor's state is empty)\n. In that case could we use CardinalityMetric(this.key+\"_count\", this.key) and filter the aggregator on the global range (min/max) ? \n. Not sure this is valid :\nif (this.options.loadHistogram) {\n    return this.getBuckets().length == 0\n}\nDon't you always have buckets filled with zeros with the current code ? The previous code tested for the existence of 1 bucket with more than 0 entries.\n. The accessor is using \"extended_bounds\", so it'll generate buckets regardless of the number of results.\nhttps://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-histogram-aggregation.html#search-aggregations-bucket-histogram-aggregation-extended-bounds\nalso checked it on the demo's network queries :\n\nThis actually means that even if you specify a range of like 0-10, and if some values are outside the range, that could break the histogram's rendering. But that's another (minor) issue ^^\n. The implementation will probably be like queryType={SimpleQueryString | QueryString}. Alternative solution is to use strings, which wouldn't require importing the constructor but would require slightly more code in the accessor.\n. As discussed, I'll be posting a \"Multiselect\" component that uses react-select and provides scrolling + filtering. The filtering is done client side, though, so you have to return all those 100+ items in the query, which can be a bit slower than having just 10-20.\nThere could be another solution using an asynchronous query to filter the list. This would be required for 200+ items I think (it would be slower to use for less than 100 items), so both solutions will probably coexist.\n. Here's a first version of such a component. Keep in mind the API could change but it would be pretty easy to update.\nsearchkit-multiselect\nhttps://github.com/GregoryPotdevin/searchkit-multiselect\n2 possible different directions for this component : \n1. Embrace react-select and expose all of it's API\n2. Embrace searchkit components, hide react-select's API, and make it compatible with itemComponent and other idiomatic searchkit props.\nUsage\n<RefinementListFilter\n  id=\"actors\"\n  title=\"Actors\"\n  field=\"actors.raw\"\n  operator=\"AND\"\n  listComponent={MultiSelect}\n  size={200}/>\nPreview\n\n. Can this issue be closed ?\n. I didn't communicate much on it yet as it's pretty basic and is just a thin wrapper. We made a few enhancements to it in mtg-hunter, which basically just forwards more props to react-multiselect. \nI'll try to start a blog post about it next week. Might not be just on searchkit-multiselect but also on the general concepts : having a common API for a group of components (listComponents in this case) and building simple adapter components to plug in external React components. \n. I think I had this error server side. Are you having it on the client ?\n. Fixes #221 \n. The use case is to have a SearchBox with autocomplete results and jump to a search page on validation.\nPossible solutions : \n- subclass SearchBox and redefine the render method to add the custom handlers\n- add handlers to SearchBox, like <SearchBox onSubmit={...} onItemClick={...} />\n. There 2 different concepts : building a custom UI component (fairly easy and doesn't require any specific searchkit knowledge) and building a custom filter component (with the accessor and all).\n. This could be handled either at the filter level or as include/exclude on the SelectedFilters.\nOn Filters\n\nmight be easier to right maintain if you add/remove filters (or the SelectedFilter itself), all the information for a given filter is centralized\nwould need to pass information down to the accessors, so that adds boilerplate code + accessor code, not great\nwould give flexibility to show/hide some specific filter values (is that really useful ?)\n\nOn SelectedFilters\nPretty much the opposite...\n- some Filter information gets split between the Filter itself and the SelectedFilters component. Introduces some coupling between the filters and SelectedFilters\n- very localized and simple change\nAdding to SelectedFilters seems better because it's just much easier to add and doesn't add complexity to the other components and accessors. \n. This is cleaner but it means that all the filter components + accessors need to be updated to receive the new props. Maybe this could be automated at the Component level by having SearchkitComponent inject options taken from the props in defineAccessor but that would involve too much magic :-/\nJust found a different (real) use case where this solution doesn't work : multiple SelectedFilters. In most of my previous search projects the list of selected filters was in the sidebar before the other filters. Might be useful to have 1 SelectedFilters there and another before the search results, each displaying different filters (general \"important\" filters over the search results, and extra minor filters in the sidebar). This wouldn't be achievable with the isVisible pattern.\nJust checked the code for SelectedFilters, I guess subclassing SelectedFilters and redefining getFilters to apply a filter function would be pretty easy. \nSo the safest solution right now might be to not add anything, give an example in the doc (or elsewhere) of SelectedFilters filter filtering (this sounds awkward ^^), maybe publish as external component for now and just see if there's an real world use for other people.\n. I think this has already been asked once or twice on gitter. \n@infacq what would be your use case ? \nCurrently searchkit is very UI-focused to it's missing a few hooks for external but I think we need to focus on actual use cases to avoid adding too many random hooks that would lock down the implementation.\n. Looks good, thanks\n. Tested using the Perf tools and saw the RefinementListFilters had tons of useless refreshes. \nPagination still does useless updates because the page numbers are re-computed on every render and thus generate a new array (as well as selectedItems: [this.getCurrentPage()).\nListComponents could perhaps use a custom shouldComponentUpdate with a deep compare for items and selectedItems. \n. Thanks @ssetem, looks good\nFixes #245 \n. Fixes #237 \n. Sample mapping : \n\"category\" : {\n            \"type\" : \"nested\",\n            \"properties\" : {\n              \"id\" : {\n                \"type\" : \"long\"\n              },\n              \"name\" : {\n                \"type\" : \"string\"\n              }\n            }\n          },\nThe aggregation and filter should be done on the id, but the facet should display the name. \nApparently the recommended solution is to use nested aggregators (the first one to aggregate on the id, and the second to get the name (the nested bucket will only have 1 value)\n\"buckets\": [\n               {\n                  \"key\": 123,\n                  \"doc_count\": 3,\n                  \"name\": {\n                     \"doc_count_error_upper_bound\": 0,\n                     \"sum_other_doc_count\": 0,\n                     \"buckets\": [\n                        {\n                           \"key\": \"biscuits\",\n                           \"doc_count\": 3\n                        }\n                     ]\n                  }\n               },\nhttp://stackoverflow.com/questions/30728583/how-to-get-an-elasticsearch-aggregation-with-multiple-fields/30919229#30919229\n. @ssetem We discussed it on gitter and apparently it's not an option. The stackoverflow link I posted shows how to use sub-aggregation to get the \"label\" while aggregating on the key. \n. I only have integer data in my ES instances for now, but should this be on or off by default ? Say I have movie ratings with steps of 0.5 (0, 0.5, 1, 1.5, etc.), I might want to keep the decimal part alive, right ?\n. Quick feedback : \nbuckets = buckets.map((elem) => {\n        const nestedTerm = this.nestedTerms[1]\n        return {\n          doc_count: elem.doc_count,\n          key: elem.key,\n          label: elem[nestedTerm].buckets[0].key\n        }\n      })\n      return buckets\nwhy not directly return buckets.map ? (and would allow to make buckets const)\nIn buildOwnQuery, is the second TermsBucket missing isUndefined in the omitBy ?\nNot sure how the include/exclude should work, if that's for the first level or for the nested aggregation. Feels weird to have the same parameters for both. If it should use the same you can just declare it once at the beginning rather than twice.\n2 tests fail but that's just because of a missing fieldOptions in the expected results.\nOther than those minor things, looks good. @ssetem ? The only thing I'm not sure about is the include/exclude (etc.) options.\n. Thanks, will take a look\n. Is this client-side or server-side ?\n. Not sure what the problem is, but have you tried installing the invariant package to see what happens ?\n. @joemcelroy It's pretty easy to re-inject the missing values in the accessor's getBuckets method\nI'd like to point out, though, that we'll be hitting a limit in terms of performance. We already have 1 component which dynamically transforms the returned buckets, and that's MenuFilter (to add the \"all\" entry). The limit is that each time render is called it generates a new bucket and breaks the lazy re-rendering as the props aren't shallowly equal anymore even if the data hasn't changed. \nInjecting the missing value will have exactly the same issue.\nI think the correct solution to this problem is to stop using the ES response as is and give the accessors the opportunity to update part of it when it is received. The same why the query is partially built with buildSharedQuery, when the response is received it could be passed to all accessors for transformations (like accessor.mapQueryResults ?). This could be the time to inject the \"all\" entry and missing values. \nSearchkitManager could keep a rawResults value to be able to re-run the map logic in case accessor options are changed (like having a showAll prop on MenuFilter). \nThis could also be used for infinite scrolling, by just letting an InfinitePaginator load more results and append to the query results (and let React refresh the whole list). Not good enough for cache management and random page access but that would require management the hits independently from the queryResults.\n@joemcelroy I'll try to post 2 PRs, one with a quick fix in the accessor that could be released as 0.9.4 and one to experiment with the query resulting mapping. \n. Ok. \nIf at some point we need it we can add an onClick prop to FastClick to bypass the default handler. \n. Actually this is to fix an issue @PAK90 has. His items are clickable (to expand/contract) and he has TagFilters in them. When clicking on the TagFilter, the item contracts, which is not desired. In this case FastClick is already just on the title itself. \nOr we can just remove FastClick from the TagFilter and use normal clicks.\n. Removed flex and just changed the display to inline-blocks. Also slightly increased the input width\n. If HierarchicalRefinementList is updated, should it support the containerComponent prop ? \n. itemComponent={<ProductSetCard {...myprops} />} should work\n. It's not really standard React, the *Component props in Searchkit work with \n- components\n- elements (like this)\n- functions (pretty much like functional components)\nI think it's already in the doc but maybe not everywhere we have the Component props\n. You could have a \"Search\" component that would create the SearchkitManager (in componentWillMount ?) and all of your search UI (in render). If you need to flush the whole Search you could then put a key on search and change it depending on the organization/group. Or do you need something more dynamic ?\n. Did you set countFormatter: (id) => id as defaultProp for those components ?\n. Weird, I'm not aware of anything in React that could prevent context from propagating. Can you post the code using itemComponent \n. (Might be a problem with our use of React.cloneElement, will do some testing)\n. Ok, that explains it. When we detect if it's a component, we only take into account React.createClass and React.Component subclasses. For functions we just call them directly and in that case we don't pass the context. I'll check that out. \n. Could break in 1 case, if some people were using component props to pass functions that returned text and not a React element. That's probably not the case for now, and it just needs to be wrapped in a span.\n. This adds the missing entries at the top instead of adding them at the bottom (if they aren't there it's because they have either 0 matches or less than the last one). Not sure if the entries should be added if you already have 10 results and the facet size is 10 (the missing entry could be the 11th that would be returned if you press \"show more\" ?)\nAlso, it might be worth returning rawBuckets  if missingFilters is empty, to help optimize the rendering (returning the same array all the time rather than a copy)\n. That would need a NumericRefinementListFilter but for dates. We'll be working on date filters this week so hopefully you'll have a beta you can test very soon ;)\n. Should this be placed like a normal searchbox or is this a filtering component ?\nThis one might be close to what you want : https://github.com/GregoryPotdevin/searchkit-multiselect\n. I'll have to try out Webpack2, but shouldn't \nimport {\n   CheckboxItemList, Panel\n} from \"../../../ui\"\nwork with Webpack's tree-shaking ?\n. Ok. I compared it to other projects I released on npm (like searchkit-daterangefilter), which are built and published using nwb. Those actually have 3 output directories :\n- lib => multiple JS files, commonjs ?)\n- es6 => multiple JS files, using import/export\n- umd => single JS file\nThat's probably what we need for searchkit. The package.json files I use in those projects also contains \n{\n    \"main\": \"lib/index.js\",\n    \"jsnext:main\": \"es6/index.js\"\n}\nI guess that's how babel knows which one to use ?\n@ssetem I have some times this week if you want us to check that out\n. Date filtering is a bit weak right now but you could take a look at searchkit-daterangefilter\n. Should work by changing the host : \nhttps://www.elastic.co/guide/en/elasticsearch/guide/current/multi-index-multi-type.html\n/gb,us/user,tweet/_search\n. Unless there are major changes to the query DSL it should work fine.\nElasticSearch 5 isn't out yet so it seems a bit premature to update the documentation for it. \nFor reference for those who didn't know : \nString\nhttps://www.elastic.co/guide/en/elasticsearch/reference/master/string.html\n\nThe string field has been removed in favor of the text and keyword fields.\n\nText\nhttps://www.elastic.co/guide/en/elasticsearch/reference/master/text.html\n\nA field to index full-text values, such as the body of on email or the description of a product. These fields are analyzed, that is they are passed through an analyzer to convert the string into a list of individual terms before being indexed. \n\nKeyword\nhttps://www.elastic.co/guide/en/elasticsearch/reference/master/keyword.html\n\nA field to index structured content such as email addresses, hostnames, status codes, zip codes or tags.\nThey are typically used for filtering (Find me all blog posts where status is published), for sorting, and for aggregations. Keyword fields are ony searchable by their exact value.\n. Sorry, maybe I wasn't clear. I don't mean that it should work perfectly following the documentation for the setup. Searchkit doesn't take care of the mapping part and that section in the documentation is pretty much \"recommendations\". ES5 changes the mapping, and the new syntax they have is to use \"text\" for fulltext search and \"keyword\" for facetted entries (those that had \"not_analyze\"). I haven't tried but something like this might work : \n\njson\n{\n  \"movie\" : {\n    \"properties\" : {\n      \"genres\" : {\n        \"type\" : \"keyword\",\n      }\n    }\n  }\n}\nThat field doesn't have the \"raw\" subfield anymore (it's baked in using ES5, I guess), so compared to the documentation you'll want to use just field=\"genres\" and not field=\"genres.raw\". If only the mapping changed the rest should work fine, but I haven't checked.\n. Apparently the list of changes for the query DSL is really big, we'll have to see to what extent we can have the current code work for both ES2.X and ES5, or if we need to fork into like Searchkit 2 to support ES5.\nQuery DSL changes\nhttps://www.elastic.co/guide/en/elasticsearch/reference/master/breaking_50_search_changes.html\n@ssetem just some random changes : \n\nlimit => Use the terminate_after parameter instead.\nquery => Is obsolete after filters and queries have been merged.\nRemoved support for the deprecated filter fields in nested query, in favour of query.\nRemoved support for the deprecated minimum_should_match and disable_coord in terms query, use bool query instead.\nRemoved support for the top level filter element in function_score query, replaced by query.\nRemoved support for the deprecated top level filter in the search api, replaced by post_filter\nRemoved support for multiple highlighter names, the only supported ones are: plain, fvh and postings\n\nMapping changes\nhttps://www.elastic.co/guide/en/elasticsearch/reference/master/breaking_50_mapping_changes.html\n\nstring fields replaced by text/keyword fields\nDefault string mappings\njson\n{\n  \"type\": \"text\",\n  \"fields\": {\n    \"keyword\": {\n      \"type\": \"keyword\",\n      \"ignore_above\": 256\n    }\n  }\n}\n(if I understand this correctly, it means that by default we don't need the raw subfields anymore, all the fields will have them. So in the queries we just replace \"field.raw\" by \"field.keyword\")\n\n@nicolapagni we'll get back at you as soon as we have more news. Do you know when ES5 is supposed to be released ? \n. Another way to do it could be by using utility functions. Though it's probably the same thing as you're doing \n``` jsx\nfunction autoHideWrap(Component){\n  return class extends Component {\n    render(){\n      if (this.isInitialLoading) return null\n      return super.render()\n    }\n  }\n}  \nconst AutoHideRefinementListFilter = autoHideWrap(RefinementListFilter)\nconst AutoHideHitsStats = autoHideWrap(HitsStats)\n...\n```\n(haven't tried but should work). \n. Thanks. \nPotential fix : \nhttps://github.com/searchkit/searchkit/blob/c84bc997d40c17adebae324abd54bde7905ee6cb/src/components/search/filters/facet-filter/MenuFilter.tsx#L51\nthis.accessor.getBuckets() should be replaced by super.getItems()\n. Can you post which components/filters you are using ? \n(or a sample code to reproduce this issue)\n. I wonder if blurAction could also take a function to have custom code. \n. @infacq Sure. I've been wanting to improve on this for a while but have been stuck on other projects. Do you need any pointers ?\n. @joemcelroy You can't really do that as the SideBar has some filters as children, and hiding it would remove the children and the corresponding accessors. That could have unexpected results when running a new query and then showing the sidebar\nWhat you do want, though, is to have all the prebuilt components that work like plain \"div\" elements with custom presets.\nThis is your current LayoutBuilder :\njsx\nexport const LayoutBuilder = (className)=> {\n  return (props)=> (\n      <div className={mixClasses(className, props.className)}>\n        {props.children}\n      </div>\n  )\n}\nIt doesn't allow adding style or other attributes. What would be better is something like \njsx\nexport const LayoutBuilder = (baseClassName)=> {\n  return ({className, children, ...props})=> (\n      <div className={mixClasses(baseClassName, className) {...props}}>\n        {props.children}\n      </div>\n  )\n}\nWith something like this (untested) all the extra props get transfered to the div. So now you can add a ref or style={{display: 'none'}} (I wouldn't recommend using the ref for that, it's always better to stay in the React world). I don't have the code to check, but all the filter components have a containerComponent (or something like that) prop to change the container (which displays the title and contents). So you could pass a different containerComponent that would just render the inner checkbox, and put both checkboxes in a container yourself. \nThat won't work well though, because your users will be able to check both checkboxes and get 0 results. What you're trying to achieve looks like the NumericRefinementList : http://docs.searchkit.co/stable/docs/components/navigation/numeric-refinement-list.html\n\n. One solution could be to turn on FastClick by default on mobile, and off on desktop. It's mostly interesting for mobiles which have a bigger click delay (though you can remove it with <meta name=\"viewport\" content=\"width=device-width\">). I have some code I built for contexte.com\nhttps://www.contexte.com/chercher/\n\nWorks ok, seems fast enough, could probably be upgraded to support infinite scrolling. Not sure if ES supports aggregator pagination, though, or if it would require querying a greater number of entries.\n. ",
    "driesvancraen": "It would be sensible for us to have a \"year filter\" using the rc-slider.\nParsing the dates to a int which represents the year. \n\n. ",
    "xinghengwang": "+1. bump. \n. sure. I like your range filter for numbers. \nalthough most dash or search field have something like this: \nFor example, this is using react-bootstrap-daterangepicker\nSo one of the fields is a data time field for the data. So it would be nice to be able to directly filter on that in the searchKit. (For example, could be the user sign up date/time). \n\n. The having red crosses next to the checkboxes is a great idea, is there any follow up on this? . lol. I feel stupid now. \n. figured it out. \n.  had to make sure that hitsPerPage prop is set for Hits component. thanks. \n. Thank you. \nHm.., I think I see the issue. If I pass a new searchKitManager object to serviceProvider as a prop, the newly constructed searchKitManager object isn't pass down (or used). \nOriginally, I construct a new SearchKitManager in the render() function. \nFor two reasons:  make sure I am on the client side first before render the searchKit components (due to issue  https://github.com/searchkit/searchkit/issues/4, I want to check in my render function to see if I am in browser vs. server side render), and because the searchUrlPath is changing depends on the organization/group that user have have access to.  So each time render is called a new SearchKitManager object is constructed, and pass to serviceProvider as a prop. \nNow, I put sk as a global variable. and it is only constructed once. I just mutate the sk.transport.options.searchUrlPath each time. It seems to work.  However, it doesn't feel very elegant solution, because render suppose to be a pure function with no side effects. \nIs there any reason, that the searchkit prop of searchKitProvider can't be updated with new objects? Is this by design or a bug? \n. ok, I'll try that. thanks, \n. my code is here: \n```\n// Hit Render is a pure render component, thus coded in the functional style. \nfunction HitRender({result}, context) {\n  // the context turn out null. So I used to work around to return the orgId and appId through the elastic search results. \nreturn (\n    \nElement\n/wrap/app/${result._source.org_id}-${result._source.app_id}/user?userId=${result._id}}>\n        {result._id}\n        \n          {JSON.stringify(result, null, ' ')}\n        \n\n  );\n}\nHitRender.contextTypes = {\n  orgId: PropTypes.string,\n  appId: PropTypes.string\n};\n```\nThen in render of the search component I have is there: \n<Hits itemComponent={HitRender} />\n. Yep, tested. It works!! thanks!\n. that would be awesome! I noticed that any <Link to='/search?userIdFilter=name'>  in searchkit doesn't work. I believe it is due to history.  The use scenario would seem pretty common. Say the search lists produces a lot of widgets owned by different users. I would like to click on one of those users, and then immediately filter down to all the widget for that specific user. \nI noticed that if I do a <Link to='/search?userIdFilter=name'> anywhere outside of the searchkit, the link would work. (I am using react-router and react-router-redux), but if the link tag is generated within the search results, then it wouldn't work. \n. Ok, I started working on it. \nHowever, I run into several issues. Since I am not too familiar with some of the internal working ehre. I was wondering if anyone here on here can give me a tip. \nI see in SearchKitManager that you call createHistory() when calling setupListeners()\nAlso, I see you customize the createHistory with the usesQuery function. According to the documentation of react router, the browserhistory object already set up for usesQuery.  So I should be able to just pass in the browserHistory that I used. \nI decided to use the options to pass in the history object. \nI made these changes, first here: \nexport interface SearchkitOptions {\n  useHistory?:boolean,\n  searchOnLoad?:boolean,\n  httpHeaders?:Object,\n  basicAuth?:string,\n  transport?:ESTransport,\n  searchUrlPath?:string,\n  history?:Object\n}\nthen, in the setup Listeners(), where you had createHistory I had this. \nsetupListeners() {\n    this.initialLoading = true\n    if(this.options.useHistory) {\n      this.unlistenHistory()\n      if (this.options.history) {\n          this.history = this.options.history;\n      } else {\n          this.history = createHistory()\n      }\n      this.listenToHistory()\n    } else {\n      this.runInitialSearch()\n    }\n  }\nHowever, in the callback of history.listen()\nthe location parameter passed in is null, thus location.action fails here on the line where location.action === \"POP\" below: \n```\n  listenToHistory(){\n    let callsBeforeListen = (this.options.searchOnLoad) ? 1: 2\nthis._unlistenHistory = this.history.listen(after(callsBeforeListen,(location)=>{\n  //action is POP when the browser modified\n  if(location.action === \"POP\") {\n    this.registrationCompleted.then(()=>{\n        this.searchFromUrlQuery(location.query)\n    }).catch((e)=> {\n      console.error(e.stack)\n    })\n  }\n}))\n\n}\n```\nHowever, when I make sure to catch the null, first time it fails but doesn't crash (it doesn't even try to do the search). but seems in the future (if I updated the searchManager's search's base url), it works correctly. \nif(location && location.action === \"POP\") {\n        this.registrationCompleted.then(()=>{\n            this.searchFromUrlQuery(location.query)\n        }).catch((e)=> {\n          console.error(e.stack)\n        })\nDoes anyone know what I might be doing wrong? \nthanks, \n. is this the behavior where as I do filtering: \nthe url changes to ?fooFilter=bar\nbut if I hit reload the page, the \"?fooFilter=bar\" part is gone, and the search filter is not taken into account? \n(This used to work in an old version, ie. I can remember the URL of ?fooFilter=bar and then when refresh page, the fooFilter=bar is still there and take account of in the search result. ).\nDid this feature get removed?  . There is already an discussion on this: \nhttps://github.com/searchkit/searchkit/issues/150#issuecomment-285835166\n. I wrote a custom reload search function to force search regardless if the \"query state\" changed or not. Bit hacky that seems to solve the problem.  . ",
    "ivarref": "+1\n. Hi @ssetem , and thanks for the quick reply.\nI have a simple suggestion. When you use a DynamicRangeFilter and refer an ElasticSearch field of type date, it shows milliseconds since 1970. It would be good if you could supply a formatting function to DynamicRangeFilter to format those milliseconds into something more readable for humans.\nThe same applies to RangeFilter.\nAlso - on a side note - it would be nice not having to specify min and max for RangeFilter.\n. ",
    "timmetj": "Hi,\nI'm also looking for a date-filter, not necessarily a range, but a \"simple\" datepicker would be nice.\nWe are working with calendar based events, so we want our customers to see/select in a datepicker when a event is taking place. A range/multiselect can be optional (in the same datepicker then), if you want to look this weekend for example.\nThen a highlight of the date when a events is taking place, and/or a disabled date when no event is taking place.\nIt then must use elastics timestamp format as input.\nSo what @joemcelroy mentioned seems nice (the rc-calendar), too bad it wasn't in the 0.6 release :p\nAs @xinghengwang also pruposed seems cool as wel, but maybe more complex. We would also like the \"tomorrow\", \"this weekend\" options :p\nLooking forward for this extra filter.\n. +1 looking for conditional option as well.\nWhen you have categories \"cars\" and \"tshirts\" you want to show extra filters like \"size\" \"color\" when you select tshirts, and show \"brand\" \"fuel\" when selecting cars\n. I think searchkit has to update for React v15 compatible where this is depricated. Having the same warning using latest TS v1.8.10\n. I'm also having trouble showing the paginator.. Not sure if this also has something to do with lodash. But i removed the \"dot\" but still see no paginator. I also updated the npm and typings to lodash v4.14.2 but no result.\n. Yes, thanks, i idd forgot my alias :( with version 4.13.1 it now works (with or without the \"dot\")\nBut this fix doesn't seem to work with lastest lodash version.\n. Extra for Inter Explorer since thy body top is always 0. You have to add:\nif (this.options.scrollTo) {\n    var topPos = (document.documentElement && document.documentElement.offsetTop) || document.querySelector(this.getScrollSelector()).offsetTop;\n    if (document.documentElement && document.documentElement.scrollTop) {\n        document.documentElement.scrollTop = topPos-10;\n    } else {\n        document.querySelector('body').scrollTop = topPos-10;\n    }\n}. We also had this problem. The first intial load didn't showed the filters. So we handled it with CSS unfortunately adding a extra wrapper with a class to it at first load.. The size option from https://github.com/searchkit/searchkit/pull/398 isn't adjustable. Keeps default 20. When compiling my searchkit after updating everything to the latest version, i get alot of error messages, but the bundles does compile.\nMessages like:\n```\nERROR in C:\\portal\\prikbord\\node_modules\\@types\\react\\index.d.ts\n(2627,13): error TS2403: Subsequent variable declarations must have the same type.  Variable 'a' must be of type 'HTMLProps', but here has type 'HTMLProps'.\nERROR in C:\\portal\\prikbord\\node_modules\\@types\\react\\index.d.ts\n(165,11): error TS2559: Type 'Component' has no properties in common with type 'ComponentLifecycle'.\nERROR in C:\\portal\\prikbord\\node_modules\\@types\\react-dom\\index.d.ts\n(18,31): error TS2315: Type 'DOMAttributes' is not generic.\nERROR in C:\\portal\\prikbord\\node_modules\\@types\\es6-promise\\index.d.ts\n(66,86): error TS2314: Generic type 'Thenable' requires 2 type argument(s).\nERROR in C:\\portal\\prikbord\\node_modules\\@types\\es6-promise\\index.d.ts\n(42,19): error TS2300: Duplicate identifier 'Promise'.\n```\nAnd alot more of these.\nAlso it seems like IE9 and less is off the radar? I know it is old but sadly few people still have XP and can only upgrade to IE9, But more IE messages i get from thing not loading well. IE has some trouble rendering elements and trowing the message;  invalid argument 2147024809. You can not override the default of 20 now. I added size={30} but still stays 20\nAnd there is also no \"show more\" button. The \"show more\" button is still missing in v2.3.0. Any news to merge this? :) Looking forward for this option, maybe add an extra option for a datepicker instead of 2 input fields would be nice!. Ok Thanks! Packages would indeed be a nice solution. Maybe @MarttiR can make a repo for now then.. Thanks, by your test app you mean https://github.com/City-of-Turku/kada-elastic-events/tree/master/src/kadasearch ?\nI'll have a look at that one.\nA can live with that extra week :p Thanks for your effort!. Great thanks man! Will look into this soon. Busy on new project atm. We need it to search for events, but these events can also have periods instead of 1 date, hope we can make this work with your package, not sure how to make a custom query yet in searchkit/react to ES since it needs to search for the given date in multiple fields and not just 1 :). added extra code for IE support, see https://github.com/searchkit/searchkit/issues/321#issuecomment-318633060. You can use the nested function for this. We have done the same, but default it shows all filters when no item is selected, so we added a own variable in the resultsListener that tells us if a menu filter was set, and then shows the filters in react. ",
    "CLAassistant": " All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have accepted the CLA.\n.  All committers have signed the CLA.\n.  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.\n.  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.Andre\u0301 Zenzen seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.Siavash seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.Martti Roitto seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.1 out of 2 committers have signed the CLA.:white_check_mark: ssetem:x: SiavashSiavash seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please add the email address used for this commit to your account.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  All committers have signed the CLA..  Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our Contributor License Agreement before we can accept your contribution.You have signed the CLA already but the status is still pending? Let us recheck it..  All committers have signed the CLA..  All committers have signed the CLA.. ",
    "jyunderwood": "A quick fix I'm using is just to wrap the filter in a div and conditionally show or hide the content when the selectedFilters have the id\n```jsx\nclass HideUnlessFilter extends SearchkitComponent {\n  getFilters() {\n    return this.getQuery().getSelectedFilters()\n  }\nhasSelectedFilter() {\n    const selectedFilter = this.getFilters().filter(f => {\n      if (f.id === this.props.filterId) { return true }\n    })\nreturn selectedFilter.length > 0\n\n}\nrender() {\n    return (\n      \n        {this.props.children}\n      \n    )\n  }\n}\n\n\n\n\n```\nThough one thing I need to fix is making sure the filter is shown if it itself is in the selectedFilters list.. ",
    "jpeyper": "Can I give a +1 to this feature?\n. We haven't actually setup the mapping yet. This is just how we were\nthinking about doing it.\nI'll knock something up on Monday (Aussie time) when I'm back at work and\npost it.\nIn the meantime, if there is anything we should avoid that will make things\na lot harder for you, let me know.\nOn Sat, 16 Apr 2016 10:08 am Ash notifications@github.com wrote:\n\n@jpeyper https://github.com/jpeyper do you mind pasting a snippet of\nboth your account and transaction mapping config, so we can be sure we are\ncoding this correctly, thanks!\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly or view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/241#issuecomment-210693006\n. Sorry for taking so long... apparently Aussie time means being slack and forgetful... so not completely inaccurate :P\n\nSo this is what we are thinking (this isn't our actual mapping, just a cut down version of what we are wanting).\nUsing ElasticSearch 2.3\nPOST /example\n{\n  \"mappings\": {\n    \"account\": {\n      \"properties\": {\n        \"accountId\": {\n          \"type\": \"string\",\n          \"index\": \"not_analyzed\"\n        },\n        \"data\": {\n          \"properties\": {\n            \"accountType\": {\n              \"type\": \"string\"\n            }\n          }\n        }\n      }\n    },\n    \"transaction\": {\n      \"_parent\": {\n        \"type\": \"account\"\n      },\n      \"properties\": {\n        \"transactionId\": {\n          \"type\": \"string\",\n          \"index\": \"not_analyzed\"\n        },\n        \"data\": {\n          \"properties\": {\n            \"transactionType\": {\n              \"type\": \"string\"\n            },\n            \"effectiveDate\": {\n              \"type\": \"date\",\n              \"format\": \"yyyy-MM-dd\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\nPOST /example/account/1\n{\n    \"accountId\": \"1\",\n    \"data\": {\n        \"accountType\": \"Active\"\n    }\n}\nPOST /example/account/2\n{\n    \"accountId\": \"2\",\n    \"data\": {\n        \"accountType\": \"Inactive\"\n    }\n}\nPOST /example/transaction/1?parent=1\n{\n    \"transactionId\": \"1\",\n    \"data\": {\n        \"transactionType\": \"Buy\",\n        \"effectiveDate\": \"2016-04-01\"\n    }\n}\nPOST /example/transaction/2?parent=1\n{\n    \"transactionId\": \"2\",\n    \"data\": {\n        \"transactionType\": \"Sell\",\n        \"effectiveDate\": \"2016-04-02\"\n    }\n}\nPOST /example/transaction/3?parent=2\n{\n    \"transactionId\": \"3\",\n    \"data\": {\n        \"transactionType\": \"Buy\",\n        \"effectiveDate\": \"2016-04-03\"\n    }\n}\nPOST /example/transaction/4?parent=2\n{\n    \"transactionId\": \"4\",\n    \"data\": {\n        \"transactionType\": \"Buy\",\n        \"effectiveDate\": \"2016-04-04\"\n    }\n}\nFrom here we would like to be able to filter members that have particular transaction types, or transactions during a particular range. Showing counts on the refinement lists for the child aggregations would be nice, however my testing seems to show that it would display the counts of the child documents, not the parent.\nFor example:\nPOST /example/_search\n{\n  \"size\": 0,\n  \"query\": {\n    \"has_child\": {\n      \"type\":       \"transaction\",\n      \"query\": {\n        \"match_all\": {}\n      }\n    }\n  },\n  \"aggs\": {\n    \"accountTypes\": {\n      \"terms\": { \n        \"field\": \"data.accountType\"\n      }\n    },\n    \"transactions\": {\n      \"children\": { \n        \"type\": \"transaction\"\n      },\n      \"aggs\": {\n        \"transactionTypes\": {\n          \"terms\": { \n            \"field\": \"data.transactionType\"\n          }\n        }\n      }\n    }\n  }\n}\nreturns (there are only 2 accounts and 4 transactions)\n{\n  \"took\": 11,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 5,\n    \"successful\": 5,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": 2,\n    \"max_score\": 0,\n    \"hits\": []\n  },\n  \"aggregations\": {\n    \"accountTypes\": {\n      \"doc_count_error_upper_bound\": 0,\n      \"sum_other_doc_count\": 0,\n      \"buckets\": [\n        {\n          \"key\": \"active\",\n          \"doc_count\": 1\n        },\n        {\n          \"key\": \"inactive\",\n          \"doc_count\": 1\n        }\n      ]\n    },\n    \"transactions\": {\n      \"doc_count\": 4,\n      \"transactionTypes\": {\n        \"doc_count_error_upper_bound\": 0,\n        \"sum_other_doc_count\": 0,\n        \"buckets\": [\n          {\n            \"key\": \"buy\",\n            \"doc_count\": 3\n          },\n          {\n            \"key\": \"sell\",\n            \"doc_count\": 1\n          }\n        ]\n      }\n    }\n  }\n}\nI'm not sure if this is solvable with my current elastic search knowledge.\nA lot of stuff there so happy to clarify anything and we are definitely open for suggestion of a better way of doing things.\n. Sorry for ignoring this for so long... been very busy.\nWe have moved away from using searchkit in favour of our own frontend implementation.\nThe decision was made that we did not want to open our elasticsearch cluster up to the internet so we had to put an BFF layer in-front of elastic, allowing us to lock down exactly what our clients could search for and implementing our security model.\nSo we haven't looked at this at all, nor do we have plans to (at least in my work capacity). Thanks for all your time and effort. Searchkit and its developers are really great.\n. ",
    "bvaughn": "If there's interest in an integration with react-virtualized, I'd be willing to help.\n. Sounds great. Very nice library by the way. Saw it on Reddit earlier today and I'm impressed. :)\nPlease feel free to ping me once support is in place if you'd like a hand integrating with RV.\n. ",
    "infacq": "+1\n. how do I implement dynamic filter based on what the result has to offer. how to use it?\n. perhaps flexbox is a must. signed. \n. \n any idea why it turn out like this\n. ahh my bad. Is this documented somewhere? :smile_cat: but i'm still having little problem with outbound\n\nand try to modify the step as well formatting the tooltip number\n. how do I pull it? \n. So far no issue.\n. would love to see this in mapboxgl based\n. is these two available ?\nGeohashBucket,GeoBoundsMetric,\n. onDataFound\nonNoData\n. thanks\n. if I install it tru npm install it will work but not with meteor npm install\n. is there any documentation for it?\n. how about searchkit-boilerplate? similar issue?\n. I cannot get it done\n. this also happen on initial load too\n. any idea guys?\n. do you mean this?\njs\nconst searchkit = new SearchkitManager(process.env.ES_URL, {searchOnLoad: true})\n. is it happen on demo site?. @GregoryPotdevin can help?\n. yes sure\n. to toggle hide/show in mobile mode. ohh just pass the props. Hopefully can see this in all components. So I have to produce extra div?. ",
    "lokat": "+1\n. +1\n. +1\n. ",
    "predictron-cloud": "+1. ",
    "juan-fdz-hawa": "This sounds like a feature I could definitely use. How can I help?. Hi Joe,\nHave you started working on this?\nIf not, I'll see if I can take a look tonight.. Seems like this issue has been fixed on Beta release 1.0.0-2 (take a look here) \nYih-en, this should be fixed once 1.0.0 is released, so hang in there!. ",
    "byjoh": "+1 any update on this?. ",
    "samdash": "+1 any update on this?. which release we can expect this feature.. ",
    "likeleto": "Trying to merge infinite scroll branch with actual develop branch, and got this\n(13,44): error TS2322: Type 'Function' is not assignable to type 'EventHandler<MouseEvent<HTMLButtonElement>>'.\n  Type 'Function' provides no match for the signature '(event: MouseEvent<HTMLButtonElement>): void'\nWould appreciate any help. finally beat it, so to launch searchkit in infine scroll mode and merged with latest verson, and it seems that everything ok.\nhttps://github.com/likeleto/searchkit/tree/infinite-scrolling\nfor ShowMoreButton.tsx I updated callback function (actually I don't know why, because I've never used React, just found some examples here https://stackoverflow.com/questions/42081549/typescript-react-event-types it is not the ideal solution, but it works\nhttps://github.com/likeleto/searchkit/commit/d01566c349f01f6b859fbc1420485985baa136f1\nAnd the most important part to fix getTotalPages() function in InfiniteScrollingPagination.tsx because there is an excess dot in line 53     \nhttps://github.com/likeleto/searchkit/commit/d05dab30f9d4ce4a502584667587986e835b44e5\nvisit http://localhost:4000/infinite-app for demo\nTo turn autoscroll, change boolean constant autoLoad to true in test/e2e/server/apps/infinite-app/index.tsx line 67\n. ",
    "lasseborly": "Hey @ssetem we are about to go ahead and develop (or adopt this) infinite scroll implementation for searchkit because it's on a customers roadmap.\nCan we do anything to prevent a fork and get this feature implemented here? What's the necessary actions that needs to be done for this to get into searchkit?. Cool @joemcelroy! I'll do that. Won't be right now, but it's in the near future. :tada: . ",
    "hkirsman": "Do I understand correctly that this was closed although \"Pagination should use links \" was not dealt with?. I don't need it for my project but I think it's important to have for usability. If you're blind you won't be using mouse. You'll be tab'ing through the site and you can't focus div's. Try it out yourself at http://demo.searchkit.co/imdb. You can't go to next page with keyboard.. I get error: \nTypeError: Cannot read property 'object' of undefined\nObject../node_modules/rc-align/lib/Align.js\nnode_modules/rc-align/lib/Align.js:53\n  50 | displayName: 'Align',\n  51 | \n  52 | propTypes: {\n\n53 |   childrenProps: _react.PropTypes.object,\n  54 |   align: _react.PropTypes.object.isRequired,\n  55 |   target: _react.PropTypes.func,\n  56 |   onAlign: _react.PropTypes.func,\nView compiled\nwebpack_require\n/Users/hannes/Sites/vap-ria/sites/default/modules/contrib/simple_elasticsearch/js/app/webpack/bootstrap 2c5ad5ee92ceabe3c637:669\n  666 | };\n  667 | \n  668 | // Execute the module function\n669 | modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n  670 | \n  671 | // Flag the module as loaded\n  672 | module.l = true;\n.... Is there also prefered npm I should be using?. Npm 5 is enough or 6, 7 and 8 also work? I discovered today that my sass was compiling really strange with npm 6 so I upgraded it to 7. Tx, It works! Only that it's not search.button but searchbox.button.\n\nAlso, I didn't get it working when I deleted node_modules and yarn.lock and generating the node_modules with yarn again. Instead I changed the versions in yarn.lock\n  searchkit@^2.3.0-0:\n-  version \"2.3.0-3\"\n-  resolved \"https://registry.yarnpkg.com/searchkit/-/searchkit-2.3.0-3.tgz#a876384b996ecb5cb88a4f0015714ddbd5bbe439\"\n+  version \"2.3.0-4\"\n+  resolved \"https://registry.yarnpkg.com/searchkit/-/searchkit-2.3.0-4.tgz#a876384b996ecb5cb88a4f0015714ddbd5bbe439\"\n\nI don't know what's wrong. It's still 2.3.0-4 in yarn but some other thing is breaking it. The error is:\nModule not found: Error: Can't resolve 'searchkit' in '../src'\n\nAnyways, I got it working on my setup. Tx!. Only the first is set in actual query: TermQuery(\"type\", \"news\"),\n{\"query\":{\"term\":{\"type\":\"news\"}},\"aggs\":{\"type-filter3\":{\"filter\":{\"match_all\":{}},\"aggs\":{\"field_news_subject\":{\"terms\":{\"field\":\"field_news_subject\",\"size\":50,\"order\":{\"_term\":\"asc\"}}},\"field_news_subject_count\":{\"cardinality\":{\"field\":\"field_news_subject\"}}}},\"years-filter4\":{\"filter\":{\"match_all\":{}},\"aggs\":{\"year_when_created\":{\"terms\":{\"field\":\"year_when_created\",\"size\":50,\"order\":{\"_term\":\"desc\"}}},\"year_when_created_count\":{\"cardinality\":{\"field\":\"year_when_created\"}}}}},\"size\":20,\"_source\":[\"title\",\"simple_elasticsearch_teaser\"]}. Wow, I must have tried something similar many times but your code works. Thank you!\n\n1 more question. Here the last example: https://ssetem.gitbooks.io/searchkit/docs/core/ImmutableQuery.html\nIt must be\nnew ImmutableQuery(). setSort([\n\nnot\nnew ImmutableQuery().setSize([\n\nright?. ",
    "megastef": "Thx. The default query works!\nI've tried already http://docs.searchkit.co/stable/docs/components/sorting/sort.html first, but the order did no change when I selected the combobox. \n. ",
    "udisun": "I would also appreciate that.\n+1\n. ",
    "heylookalive": "Same here!\n. Kind of, I suppose we don't want an open search to happen, but a searchOnLoad to happen if there are values in the query string.. ",
    "PAK90": "I +1 this, since I was planning on adding it to my code anyway. Especially in list view where I have a lot of details and possible filterable information, this would be valuable. I was hoping to implement it as a hover option where when you hover on it, it gives you three options; add {Value} to current list of filters, remove {Value} from list of filters, and make {Value} the only filter. \nSo in the No Country for Old Men example, hover over Joel Coen and you can add \"Writer: Joel Coen\" to the filter list (if not there already), remove \"Writer: Joel Coen\" from the filter list (if there already), or remove all other filters and add \"Writer: Joel Coen\" to the filter list.\n. I guess the reason I wanted to use local data is that I had the .json file right there, ready to use. But if that won't work, fair enough.\nIf I wanted to try the free instance, how does one go about setting it up? I have all the data I want to search in my .json file, do I just upload it to the instance and it does all the work from there? Also, what's an 'index' and how does it affect my usage of SearchKit? That seems to be literally the only difference between price levels (aside from storage space, which with my few-MB data file is really irrelevant).\n. I assume the json file you're referring to is in fact the .js file imdbMoviesNew.js? \nI set up a Vagrant vm running an instance of elasticsearch, but it's empty. Your code shows this indexer.coffee file which I have a few questions about... \nI get that you first declare a bunch of helper functions (though what's with the empty function on line 26?), then you parse the movies (how do you deal with missing fields? My dataset omits fields that contain the equivalent of N/A data). But what's getMultiFieldDef for? What's the random def on line 82? What are settings doing, especially the arcane stuff on line 92? And the last part of the code is making a command per movie and presumably sending it to the ES server, which also makes sense. A few helpful explainer comments in the file wouldn't go amiss...\nAlso, when indexing, how to handle nested structures in the json? Here's an example...\n\"cmc\": 5,\n\"colors\": [\n      \"Blue\",\n      \"Red\"\n    ],\n\"multiverseids\": [\n      {\n        \"setCode\": \"LEA\",\n        \"multiverseid\": 94\n      },\n      {\n        \"setCode\": \"LEB\",\n        \"multiverseid\": 389\n      }\n],\n\"id\": \"926234c2fe8863f49220a878346c4c5ca79b6046\",\n\"layout\": \"normal\",\nThanks for the help by the way, this stuff is pretty overwhelming at first.\n. OK, so if I have a Card object which doesn't have one of the fields (e.g. 'artist') that the initial parser is looking for, Card.artist would return undefined, and this script would be able to handle that?\nWhat determines whether you want a field to be multifield mapped? Is it obligatory for fields that you want to both search and filter by?\nAlso, is the 'settings' variable pretty generic (so I could copy it into my script) or is it specific for the movie data? I'm not quite sure what it's doing.\nIn both the mapping var and the initial parser I see a property called suggest;  input and output are pretty easy but what's payload and the other ones?\n. Yep, sorry, should've done an example. For my data, docs can have any combination of 5 colours or be colourless. Right now I have a refinement list that lists these 6 options, and so I can see all Blue docs, all Red docs, all Blue and Red docs, all Blue and Red and White docs etc. I'd like a NOT option so that I could see all Red docs with ONLY red in them (so the other colours would be selected as NOT), or Blue and Red NOT white, etc. Hope that makes sense.\n@ssetem yeah, a query builder is kind of what I'm aiming for in the long run. \n. @xinghengwang I managed to create a modified filter called 'Only', which basically sent down 'not' requests for all other categories inside a refinement filter apart from the ones selected, but it's not the same as a 'Not', and it's impractical for filters with large (> 10) numbers of categories. I'm hoping that an individual 'not' for each filter category is something that gets released officially. If not, I have vague ideas on how to attempt it, but it'd probably take a while to implement.. What format would you want these in, and how would you like these to be submitted? I don't have a blog on which to post these, but I may be able to attempt something for the custom component (UI, not filter) and also maybe the 'getting started', since that was an onerous process.\n. Agree with @king-of-the-ring here, we need reverse_nested aggs (made a separate issue here https://github.com/searchkit/searchkit/issues/351). @ssetem or @GregoryPotdevin any chance we could get this added? . Post-0.10.0-10 update: the rounding fix doesn't seem to have had an effect...\n\nThe one labelled 'Paper Price' seems to be working fine, but the 'MTGO Price' one, as you can see in the picture, has weird rendering problems and dragging it causes unpredictable results.\nAlso, despite having separate ids, the two seem to be linked together; if I change one of them too many times, the other one spontaneously appears in the filter list at the top of the page and starts messing with the results.\n. Sorry, didn't see the notification. I resolved this issue, so closing is fine.. @alx It is available but it's purely a slider, no date picker. Makes it a lot harder to use.\n. What's the command you're running? Is it simply npm install searchkit? . ",
    "sieppl": "\nIn terms of UX, having searchOnChange and an autocomplete component showing results can be overkill.\n\nI agree. Also it would decrease overall response time. \n. it seems to work just fine or maybe I did not bump into a limitation, yet.\n. ",
    "mhilaire": "Any updates on this component? Would it work with InputFilter? Didn't see updates on https://github.com/searchkit/searchkit-autocomplete. Thanks!\n. @ssetem Thanks. I tried a couple of changes by css but didn't work. Could you give me a hint on how to achieve that only for a given input filter? By the way even if it's possible by css I thought that it could have been relevant to make it easy using a prop, as searchkit is a flexible UI component framework and as I'm not a good css guy I love using UI components OOTB, that's why I chose searchkit :). @joemcelroy I saw that the boilerplate code is deprecated. It would be nice to have an upgrade doc from v0.10 to 1.0 for people who started project based on that sample. I'd be happy to test those changes if you need. @ThaDafinser @joemcelroy \nThanks for your answers. Actually I built an app based on that sample: https://github.com/searchkit/searchkit-boilerplate which use webpack and express. \nSo I was wondering what should I do with webpack?\nBut I still need to run express to handle other custom apis I implemented that doesn't use ES. \nAlso what about changes required in package.json others than changing searchkit and react version? There were many others dependencies before. What is safe to remove? \nThanks for your help.. ",
    "drekli": "I asked today on Gitter about whether anybody has implemented something like this yet. Are there any updates?. I also need a datepicker like this, been checking in to see if the conversation as progressed anywhere yet?\nIf the pointers can be added to this ticket, I'm happy to try and help out too.. Hi @infacq and @GregoryPotdevin... Did you discuss the pointers off record yet? . ",
    "timtutt": "This solution might be over complicated. Wouldn't it be pretty straight forward and intuitive to a user to have a +/- option that just adds a bool filter with must or must_not depending on the option chosen. You can add it to the refinements list as \"(Not) Red\"  for display-ability, but you also don't have to have all the other elements ticked... So the user can then select all documents that are Not red without having to explicitly include docs. \nConcept image:\n\n. Was this issue every addressed or did it die. Looking for a solution to this myself. . Sure  - I mentioned this in the gitter chat a while back - Here is what my mapping looks like:\n\"user\": {\n//....\n\"name\": {\n            \"type\" : \"text\",\n            \"fields\" : {\n              \"keyword\" : {\n                \"type\" : \"keyword\",\n                \"ignore_above\" : 256\n              }\n            }\n          },\n\"skills\": {\n            \"type\": \"nested\"\n          },\n//...\n}\nThe problem I'm having is with aggregations and the Refinement component with the Skills nested object in particular, the component returns the counts for the nested documents, but does not provide the parent doc counts (which is what i actually want to display)\nSo current aggs for a nested field look like this:\n\"aggs\": {\n    \"nestedSkills\": {\n      \"nested\": {\n        \"path\": \"skills\"\n      },\n      \"aggs\": {\n        \"skillNames\": {\n          \"terms\": {\n            \"field\": \"skills.name.keyword\",\n            \"size\": 100\n          }\n        },\n        \"skillXP\": {\n          \"terms\": {\n            \"field\": \"skills.experience.keyword\",\n            \"size\": 100\n          }\n        }\n      }\n    }\n  }\nTo get the parent document count you just add a sub_agg with reverse_nested: {} as follows:\n\"aggs\": {\n    \"nestedSkills\": {\n      \"nested\": {\n        \"path\": \"skills\"\n      },\n      \"aggs\": {\n        \"skillNames\": {\n          \"terms\": {\n            \"field\": \"skills.name.keyword\",\n            \"size\": 100\n          },\n          \"aggs\": {\n            \"parentCount\": {\n              \"reverse_nested\": {}\n            }\n          }\n        },\n        \"skillXP\": {\n          \"terms\": {\n            \"field\": \"skills.experience.keyword\",\n            \"size\": 100\n          },\n          \"aggs\": {\n            \"parentCount\": {\n              \"reverse_nested\": {}\n            }\n          }\n        }\n      }\n    }\n  }\nWould be nice if one of the field options was to return the parent count perhaps? I'm not entirely sure how to extend the RefinementListFilter to include the nested sub agg. I don't mind doing the work and submitting the PR, but would need a little guidance on the how. . Sure thing - updated the comment. I don't currently have a public ES index with data and mapping. Will have to generate something sharable. \n. @ssetem  - sorry for just getting back to you. There's a publicly accessible index located here:\nhttp://ec2-54-84-225-235.compute-1.amazonaws.com:8080/. @ssetem - Was wondering if there's any update on this. Is there anything I can do to assist with testing/dev?. @ssetem  - ES accepts floats for a range type field for certain. With numeric fields, I suspect the range aggregation does as well given the returned histogram above.  I was assuming that perhaps the slider itself does not support floating points for ranges?. ",
    "stereosteve": "Google Flights airline selector has a nice UI for this\n\n. ",
    "datapimp": "Hi Joe,\nI'm using es6 through babel and babel-loader.  A common babel-preset-react-hmre setup.  This project in particular uses bootstrap with less.  \nThis is roughly it:\nhttps://github.com/davezuko/react-redux-starter-kit/blob/master/build/webpack.config.js#L107\nI think styles are the primary culprit given that the projects which are having trouble use less and less-loader and not node-sass and sass-loader.   I'm glad this has been addressed in 0.7.\nUsing webpack's module aliasing I am able to set an alias for searchkit to searchkit/release/bundle and this lets me use the library in a development setting with no detectable problems.  However when it comes time to build there are a lot of warnings related to webpack not being able to remove dead or unused code -- which is expected given that I'm an already bundled version, but is still less than ideal and I'm sure is a fixable problem \nI've still got some investigating to do though.\n. yes i am.\n. at the moment nothing comes to mind but the more i use it I am sure I can come up with some constructive feedback if it helps.  overall i think it is a great product and would love to help make it better any way i can.\n. ",
    "EtienneK": "This would be fantastic to get implemented. Anyone currently looking at it?. ",
    "ispooky83": "is there any news right here?\nmobile audience is increasing everyday, I can not think anyone is ignoring the fact that searchkit is not responsive.. ",
    "gauravt": "Is there any update on this thread?. ",
    "rolele": "I was looking how other search websites are doing it. I was looking at amazon.com or indeed.com.\nI found out that m.ebay.com is actually very close to the current experience of searchkit.\nOnce you have done a text search you have Filter and Sort. The result and pagination look similar.. Of course this means that the searchbox to url translation replace the space by -\nAnd inversely the url to search box replace the - by space.\nI would like this for SEO reasons and so I ultimately will be using your ssr express example. . Yep, exactly what I am thinking. It might also impact you SEO all toghether because I try very hard to find an example of a website using %20 in his url but I could not find one (at least it does not appear on the first pages). awesome, looking forward for this feature.\nThank you for the good work and for sharing this repo.\nCheers. I am not sure using the history of the SearchkitManager will solve anything here but if you have some idea please share I do not see how I can implement a good go back button at the moment.. Actually this worked:\nconst goBack = () => {\n      if (this.props.location.state) {\n        history.goBack();\n      } else {\n        // history.push(\"/\");\n        window.location.href = \"/\";\n      }\n    };\nThis is probably not a good practice but I will stick to that for the moment.\nOther ideas are welcomed. ",
    "OliverKK": "Hi @ssetem ,\nhow is the progress going? Is there something i could review or participate?\nKind regards\nOliver\n. Solved it!. ",
    "jamiedumont": "Hey all! Any idea when we can expect this to become part of the build? Is there anything I can do to help?\n. ",
    "Vanuan": "It's called 15, not 0.15 :)\nThe latest version is 15.3.1\n. Well, it works for me with version override\n. Well, I use jspm to manage dependencies. I overrode the version of react using this in jspm config:\n\"npm:searchkit@0.10.1\": {\n       \"map\": {\n...\n         \"react\": \"npm:react@15.3.1\",\n...\n       }\n  }\nI don't know if other dependency management tools have this feature.\n. What about React Native? I think it's far more compatible with it. Ionic uses Angular which feels wrong to use along React.\n. Related to #176\n. ",
    "shaialon": "Any update on this? It's making starting with searchkit in a new project impossible :(\n. @Vanuan What do you mean? How can I do a version override?\nAdding a \n<SearchBox />\nBroke the functionality in my case\n. Thanks @Vanuan , I will try\n. @Vanuan your approach was good. In regular npm you need to create a file named\nnpm-shrinkwrap.json with the following:\njson\n{\n  \"dependencies\": {\n    \"searchkit\": {\n      \"version\": \"0.10.1\",\n      \"dependencies\": {\n        \"react\": {\n          \"version\": \"15.3.2\"\n        },\n        \"react-dom\": {\n          \"version\": \"15.3.2\"\n        }\n      }\n    }\n  }\n}\nI also added an alias via Webpack but I'm not sure it's necessary:\njavascript\nconst webpackConfig = {\n   ...\n  resolve : {\n    ...\n    alias: { 'react$': 'react/lib/ReactWithAddons.js', 'react-dom$': 'react/lib/ReactDOM.js' }\n  }\n}\nThat said, searchkit still seems to be working with impaired functionality (though now it's not breaking the app completely like before).\n. @ppearcy for instance the refinement filters are ok but once I add text search errors start flying about sliders and all.\nBasically it's so delicate that I decided not to touch this part of my project for now.\nI see React 15 + Searchkit as a non-starter in the current state of things\n. @joemcelroy Thank you!\nWe'll work on integrating it and let you know how it went!. ",
    "ppearcy": "Curious @shaialon or others, can you elaborate on which functionality is impaired running in react 15? Trying to understand what to expect if I go this route. Also, thanks for the override workaround. \n. Hi, anyone out there that can review / merge this? Will also take committer privileges if people are too busy or have moved on to other things. \nThanks!. Hi All,\n  I understand that it is difficult to prioritize time and that this is not a current priority. \nThat being the case, can you allow me to be a committer to this project or someone else in the community that has shown interest to help get through some low hanging fruit like this? \nOpen to any other ideas, too. \nNo idea if this is really the case, but at the moment, it feels like this project has been abandoned by core developers. \nThanks\nPaul. That is great! And please don't feel bad, since this really is an awesome tool that has saved me and likely others tons of time :) \nPriorities shift and it is always hard to find time. . Done. Thanks for all the recent work!. This PR should add support once merged:\nhttps://github.com/searchkit/searchkit/pull/355. ",
    "mcs07": "Thanks for the quick fixes, I'm finding searchkit very useful.\n. Is that test alright? It's my first time doing any sort of javascript unit tests so feel free to just close this and implement yourself if it's easier, seeing as this is such a simple fix.\n. ",
    "drewdresser": "Thank you for the quick response!\nI think that last line is really what I'm after. Is it doable now? \nFor instance, I have an array of search field strings in state named searchFields. The user is able to change which fields is in the array. We keep state current with the currently selected search fields.\nI then have this code, hoping to dynamically change which fields we are searching; however the SearchBox's queryFields are not dynamically changing. \nSearchbox searchOnChange={true} \n                queryOptions={{analyzer: \"standard\"}} \n                queryFields={this.state.searchFields}/>\nAny suggestions to make this work or comments would be much appreciated.\n. The solution here was to extend the SearchBox. It sounds like this functionality may be included by default in future releases. Code is below: \njavascript\nclass CustomSearchbox extends SearchBox {\n  componentDidUpdate(prevProps) {\n    if (prevProps.queryFields.toString() != this.props.queryFields.toString()){\n      this.accessor.options.queryFields = this.props.queryFields;\n      this.searchkit.performSearch();\n    }\n  }\n}\n. Is the CustomSearchBox seen above, replaceable in Searchkit .9? I am not able to find documentation that directly states it but I may be missing something. Thanks!\n. ",
    "mledom": "I'm new to running test for these packages but I think I found a bug with the update you made. I'm trying to set the type for the multiquery options to cross_fields instead of phrase_prefix. Based on the current order of the params to assigns its not able to be set. Here is a testcase that I think may show the bug\nit(\"prefixQueryFields with options change type\", ()=> {\n    this.accessor = new QueryAccessor(\"q\", {\n      prefixQueryFields:[\"title\"],\n      prefixQueryOptions: {\n        type:\"cross_fields\"\n      }\n    })\n    let query = new ImmutableQuery()\n    this.accessor.state = new ValueState(\"some query\")\n    query = this.accessor.buildSharedQuery(query)\n    expect(query.query.query).toEqual(BoolMust([\n      BoolShould([\n        SimpleQueryString(\"some query\", {fields:[\"_all\"]}),\n        MultiMatchQuery(\"some query\", {\n          type:\"cross_fields\",\n          fields:[\"title\"]\n        })\n      ])\n    ]))\n  }). I did end up doing that, that's how I knew that I wanted to use the cross_fields type. When I attempted to use that option with prefixQueryOptions it would not get set. I looked into the code and found on this line: error line the parameter for assigns passes the default option as the second option vs. this line: working line where the default is the first parameter. According the the docs (below) when passing the defaults as the second option they will overwrite the previous value in the options hash set by the user:\n\nThe .assign function (also called .extend) accepts as its first parameter a target object to which all properties of the following parameters will be assigned. Values defined by later parameters will overwrite sooner values.\n\n\nI was able to update my version of the code to see if working but was unsure how to run the test suite for searchkit.\nqueries.push(MultiMatchQuery(queryStr, assign(\n  {\n    type:\"phrase_prefix\",\n    fields:this.options.prefixQueryFields,\n  }, this.options.prefixQueryOptions))\n). ",
    "r007-1": "Even with showHistogram={true}, the slider still doesn't seem to be connected with the results. http://codepen.io/r007/pen/JXyyZw\nAlso, how are NaN values handled? Are they ignored?\n. The blog post is a good idea! I'll make one one of these days. I'll keep\nyou posted. :)\nOn Wed, Mar 30, 2016 at 4:50 PM, Joseph McElroy notifications@github.com\nwrote:\n\nThanks! Yep our codepens do need updating. We try and keep track of these\ncodepens under the searchkit username (http://codepen.io/searchkit/). Il\nupdate them once next release happens!\nWe have an active chatroom on searchkit (which ive just seen you are on\nnow). There are alot of members which will help you out!\nDocumentation is available here:\nhttps://github.com/searchkit/searchkit/tree/develop/docs. Feel free to\ncontribute and do a PR.\nA big win for us would be devs writing blog posts on using searchkit. The\nissues to be aware of, the development environment, adding your own\ncomponents etc. This serves as documentation to other members and doesn't\nput burden on us needing to keep up to date.\nGreat you're loving Searchkit! [image: :smile:]\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/200#issuecomment-203327844\n. \n",
    "alex-fernandez": "I am using it with React Redux Universal, the issue happens when the component is inside the react route component.\n. @haovn577  Can you show me the code, I am adding the searchcomponent on the constructor\n. ",
    "HaoCSE": "@alex-fernandez  Check page app was loaded before rendering SearchKit, should be in componentDidMount, i use this trick to bypass DOM issue.\n. ",
    "coryalder": "I'm also trying to get server side rendering working and getting this same error. I would love some clarification about what the workaround for this is.\nMy render function looks like so:\nreturn <div id=\"searchblock\">\n  <SearchkitProvider searchkit={sk}>\n    <div className=\"search\">\n      <div className=\"search__query\">\n        <SearchBox searchOnChange={true} />\n      </div>\n      <div className=\"search_results\">\n        <Hits hitsPerPage={20} itemComponent={Package} />\n      </div>\n    </div>\n  </SearchkitProvider>\n</div>\nDo I need to conditionally render the SearchkitProvider only if the page has loaded? or do I need to do something different with creating my searchkit object (sk)?\n. ",
    "vladimir-tikhonov": "Wow, that was quick! Thanks for your amazing work, guys!\n. ",
    "ronydj": "What is the current status of this feature ?\n. It is close.  I want it as a normal searchbox. I thanks for sharing this component. \nI will try to build a component based on this one. \n. No success. I would need to extend the input filter in some way to achieve what I want. O thought about overriding the onSubmit event and call the addToFilter method.\nBut I don't know how to do it.\n. ",
    "gaving": "FWIW I knocked together https://github.com/gaving/searchkit-geomap using mapbox-gl for visualising some data I had, should work with the demo.searchkit.co crime API out of the box.\nI'd like to add some other components in the future, distance filter etc.\n. \ud83d\udc4d \nRelated: #345\n. @ssetem Ahhh awesome, thanks!\n. ",
    "SmileSydney": "\nhave a look at our components and some of the custom components our contributors have built (https://github.com/GregoryPotdevin/searchkit-multiselect).\ntheres also a crime demo app http://demo.searchkit.co/crime, code here https://github.com/searchkit/searchkit-demo/tree/master/src/app/src/crime\n\nCrime Demo site is broken (renders just a blank page in Chrome). Any chance this could be a quick fix?. ",
    "Rhubbikull": "Hi, \nJust wondering if there been any development on this improvement? \n. ",
    "fabiofumarola": "Below my proposal, I can try to work on a pull request after a discussion.\nThis requires to add nestedQueryFields as attribute to SearchBox\n<SearchBox\n                autofocus={true}\n                searchOnChange={true}\n                queryFields={['title^5', 'description', 'categories', 'keywords',]}\n                nestedQueryFields={['annotations.name', 'focusLocation.cityName',\n                  'focusLocation.regionName']} />\nThen for each aggregation component It can be add a nestedField attribute to show that the component is aggregating on a nested field.\nFinally we need to update query building phase to support nested aggregations like the example below.\n{\n  \"size\" : 0,\n  \"aggs\": {\n    \"annotations\": {\n      \"nested\": { \n        \"path\": \"annotations\"\n      },\n      \"aggs\": {\n        \"age_group\": {\n          \"terms\": { \n            \"field\":    \"annotations.name\"\n          }\n        }\n      }\n    }\n  }\n}\n. @ssetem, Yes  I like the idea. Thanks\n. ",
    "bgphipps": "@fabiofumarola seems like a solid approach to me \ud83d\udc4d \n. Per discussions with @GregoryPotdevin and @ssetem it sounds like this will be added in a release soon, so closing this in the meantime.\n. ",
    "gregdurham": "Thank you for this, I just tested this on a MenuFilter, can we add the fieldOptions to other filters? For instance the range filter? is this pattern extensible in that way, and would you except PRs for that functionality?\n. Works perfectly! And the configuration is a breeze.\nOn Saturday, May 21, 2016, Ash notifications@github.com wrote:\n\nyeh we will add to RangeFilter, does the MenuFilter work ok?\n\u2014\nYou are receiving this because you commented.\nReply to this email directly or view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/247#issuecomment-220793268\n. This looks awesome. Thank you, Ill get it added to my project today. One other thing that could be really useful now that this exists is inner_hits which are used to send back the hits specific to the inner object that matched. I am thinking, we could add a inner_hits: {} to the fieldOptions, which would allow us to configure how those are returned. Should I create a new issue for that for tracking? Thank you so much for your responsiveness, it is impressive how useful this library is for integrating into ES. \n. \n",
    "king-of-the-ring": "@ssetem I think nested aggregation should apply reverse nested\nAs right now, the field returns the count of the inner-hits / nested documents and not the count of main / parent documents\n. ",
    "allizad": "That was it - I was still on 2. Updating to 3 seems to have ironed it out. Thanks!\n. ",
    "drewry": "That's correct. I agree that having an option to always include selected filters in the results would be great. Thanks!\n. Ah SelectedFilters are a great idea! That will serve as an immediate improvement to the current experience. Thank you!\n. Hey guys, for anyone looking at this thread for a quick fix.  Here is a quick and very dirty fix to just get it working with re-injecting the selected elements.  \nNOTE: This is in no way optimized, this is just a quick fix, use with caution.\n``` javascript\n// Wrap RefinementListFilter in a custom class\nexport class MyRefinementListFilter extends RefinementListFilter {\n  getItems() {\n    var buckets  = this.accessor.getBuckets();     // [{ doc_count: 3, key: \"Black\" }, { doc_count: 5, key: \"Blue\" }]\n    var selected = this.accessor.state.getValue(); // [\"Black\", \"Blue\"]\n    var filtered = [];\n// Add everything except for the selected values to our filtered array, we will re-inject these later\n// We can't know for certain if they will appear in the aggs so let's not have a condition where they appear twice\nbuckets.map(function (item) {\n  if (selected.indexOf(item.key) < 0) {\n    filtered.push(item);\n  }\n});\n\n// Map the selected to match the buckets and combine them\nvar combined = filtered.concat(selected.map(function (item) {\n  return {\n    doc_count: 0,  // For my purposes the doc_count was irrelevant.  The issue with adding it is the selected may not be in the aggs so the doc_count would always be 0.  To fix this, instead of adding everything but selected in the buckets.map section you could do the opposite.  Remove any selected found in buckets from the selected array and concat the ones that don't appear in aggs to avoid it appearing twice.\n    key: item\n  }\n}));\n\n// Sort them alphabetically from A-Z\n// To sort by doc_count just change key to doc_count\nvar sorted = combined.sort(function(a, b) {\n  var keyA = a.key,\n      keyB = b.key;\n\n  // Compare the 2 letters\n  if(keyA < keyB) return -1;\n  if(keyA > keyB) return 1;\n  return 0;\n})\n\n// Return the sorted\nreturn sorted\n\n}\n}\n```\n. ",
    "sherryxiao1988": "@joemcelroy thanks for replying. sorry I meant I went to http://localhost:3000/serach. it showed http://localhost:3000/serach#/?_k=znhpst and an empty page.\nI've read react router and tried many alternative ways but still got the same thing. Any clue what's happening? Could you try downloading the boilerplate and quickly try it out with react router? I want to know if it's just me.\nThanks.\n. @joemcelroy here you go:\nhttps://github.com/sherryxiao1988/searchkit-react-router\nlol I didn't spell it wrong in the browser thought. Double checked it.\nThanks a lot!\n. Thanks @joemcelroy for helping me figure this out.\nThe following tweaks work great for now:\n```\nconst createBrowserHistory = require('history/lib/createBrowserHistory')\nReactDOM.render((\n  \n\n\n\n\n), document.getElementById('root'));\n```\n. ",
    "snorremd": "As of Typescript 2.0 it is possible to acquire type definitions via the @types npm namespace. For example: npm install --save @types/lodash. Read more in their announcement post. Typescript 2.0 will automatically resolve typing definitions in modules residing in the node_modules folder.\nI think it is worth identifying which types used by searchkit can be found in the @types namespace in the npmjs registry and use the modules there for type definitions. By having the @types-modules in the dependencies section of searchkit's package.json file the type definitions will automatically be available to users of the searchkit module.\n. ",
    "r9b9rt": "Thanks,\ncan you point me to the right key for the global mapping?\n\"MenuFilter.All\" is not working\nI tried with upper case and lower case as well.\n. That's fast. :+1: \nIt's working now, thanks.\n. Thanks for your fast reply.\n@GregoryPotdevin your solution works for me.\nAlthough it might me standard react which I didn't know, maybe it's worth putting in the searchkit docs?\n. ",
    "jblom": "Nope! Actually I'm currently (still) working on a UI/page where it's possible to compare the search results of two or more search queries (from different collections) and at this moment it seems that reflecting all these (possibly huge) queries in the URL is something that I'll avoid for the moment. I want to figure out with the users first (after they start using the 1st version of the system) if they think it is crucial to be able to share their findings via the URL. \nI guess this issue comes down to figuring out whether to build an easy to use import/export function or do try to put all the information in the URL in a clever way.\nIf you have any experience with this kind of problem or have any hints on how to deal with this, I'm all ears.\nThanks. Oh yeah, also I'd say this functionality would only overcomplicate SearchKits code and wouldn't benefit a lot of people.. ",
    "nirchernia": "I did manage to rip the css from the Demo: http://demo.searchkit.co/static/styles.css but this requires copying in the static folder for things like SVG assets. No good.\n. @ssetem  @joemcelroy Thanks!\n. Yes I have. \nI have tested reaching my es instance with curl and have tested with ajax requests in the browser. Both work. Only the searchKitManager seems to throw errors.\n. @ssetem That seemed to do the trick. Thanks!\n. @ssetem I have moved the SearchkitManager outside of the render. The results are the same though.\nIt looks like almost all (with the weird exception of <Hits/>) gives me that error. \n. After console.log-ing <SearchBox />:\n\n. @ssetem Unfortunately I cannot share a full repo..I can say however that React is LIKELY the culprit.\nI am running React 15.1.0  and React-dom15.1.0 and searchkit looks like it has dependencies of react-dom 14.8\nI got that hint from npm ls | grep react\nnpm ERR! extraneous: react-dom@0.14.8 /node_modules/searchkit/node_modules/react-dom\nWhen I set up searchkit, are you supposed to CD to the searchkit folder and run npm install? That might be causing the issue. \n. @ssetem \nAfter npm uninstalling and reinstalling searchkit the problem persists. Interestingly enough, after including react (which I didnt do before) like this:\n```\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n```\nI get:\n\nWarning: Failed propType: Invalid prop children supplied to SearchkitProvider, expected a single ReactElement. Check the render method of ConApp.\n\nAlong with the other error. Any idea on the needs of searchkit in regards to react... is searchkit compatible with newer versions of react?\n. @ssetem  Okay. I believe I am getting close to a solution. I have provided a gist with all my files interacting: https://gist.github.com/nirchernia/0340f7a0aa3c02cc3292e9b4a606d1de\nI am getting the famous multiple reacts error only when rendering/importing from searchkit:\n\nUncaught Invariant Violation: addComponentAsRefTo(...): Only a ReactOwner can have refs. You might be adding a ref to a component that was not created inside a component's render method, or you have multiple copies of React loaded (details: https://fb.me/react-refs-must-have-owner).\n\nI believe it is because searchkit has its own react dependency being loaded (looks like React 14.8.) and in my package.json I have specified React 15.1 \nWhat is the proper way to set up my dependencies so that two aren't being loaded? \n. I'll try webpack.\n@joemcelroy Hmm, I am using npm 2.15.1. I'll upgrade. Why the need for v3?\n. Thanks for all the help @ssetem & @joemcelroy . It turns out that upgrading to NPMv3 and making my React dependency into a peer dependency allowed for the Multiple React versions to co-exist:\n```\n   \"peerDependencies\": {\n    \"react\": \"^15.1.0\"\n  },\n```\nYou can close this issue, thanks again!\n. Thanks for the tip @GregoryPotdevin, but I can't seem to get this working. In fact, it seems that there aren't even any errors. I simply get no display of it. \nMy code snippet within searchkit Provider:\n```\n                          <div className=\"card-header\">Options</div>\n                              <div className=\"card-block\">\n\n                                <Panel title=\"Type:\" collapsable={true} defaultCollapsed={false}>\n                                    <CheckboxFilter id=\"image\" title=\"\" label=\"images\" filter={TermQuery(\"image.raw\", 'true')} />\n                                    <CheckboxFilter id=\"video\" title=\"\" label=\"videos\" filter={TermQuery(\"video.raw\", 'true')} />\n                                    <CheckboxFilter id=\"fingerprint\" title=\"\" label=\"fingerprints\" filter={TermQuery(\"fingerprint.raw\", 'true')} />\n                                </Panel>\n\n\n                                <DateRangeFilter\n                                    id=\"year\"\n                                    field=\"created_date\"\n                                    title=\"Created Date\"\n                                    min={2005}\n                                    max={new Date().getFullYear()}\n                                    interval=\"year\"\n                                    showHistogram={true} />\n\n\n                                <MenuFilter field=\"mac_address.raw\" size={25}\n                                     title=\"Mac Address\" id=\"_id\"\n                                     containerComponent={<Panel collapsable={true} defaultCollapsed={false}/>}\n                                />\n                                <Panel title=\"Per Page:\" collapsable={true} defaultCollapsed={false}>\n                                    <PageSizeSelector id=\"size\" options={[25,50, 75]} />\n                                </Panel>\n\n\n                              </div>\n                            </div>\n\n```\nPerhaps I should post this issue in searchkit-daterangefilter itself. Though this issue is somewhat related. \n. ",
    "devlesedi": "I had the same multiple copies of React error. Adding an alias, as @nirchernia suggested, solved the problem. For anyone having the same issue, add this to your webpack config file.\nresolve: {\n    alias: {\n      react: path.resolve('./node_modules/react')\n    } }\n. ",
    "SickSAMA": "Allowing custom history object is not simple, a lot of scenarios need to be considered.\nSuppose we have page A, B(Searchkit), C. They are in a single page app.\n1. If a history is created in A, and user use a link navigate to B. Then searchkit's listener is not triggered because the location.action is PUSH. Only when a history's first generated location or browser's popstate event generated location has a POP state. \n2. Normally when navigating from B to C, B will unmount. However, if C is a popup which is quite common (Instagram, Behance), So from B to C it can be a PUSH or POP(use browser's forward button). If it's a POP, then the listener is triggered a new search is done, which shouldn't happen. \nTo solve above issues, I propose that search is triggered and only triggered by history's event and providing a pauseListenHistory and resumeListenHistory to disable the listener if on other pages.\n``` javascript\nsetupListeners() {\n  this.initialLoading = true\n  if(this.options.useHistory) {\n    this.unlistenHistory()\n    this.history = this.options.history || createHistory()\n    this.historyFreezed = false; // indicate whether history is paused for listening\n    this.listenToHistory()\n  } else {\n    this.runInitialSearch()\n  }\n}\nlistenToHistory(){\n  let callsBeforeListen = (this.options.searchOnLoad) ? 1: 2\n  this._unlistenHistory = this.history.listen(after(callsBeforeListen,(location)=>{\n    if(!this.historyFreezed) { // only triggered when not freezed\n      this.registrationCompleted.then(()=>{\n        this.searchFromUrlQuery(location.query)\n      }).catch((e)=> {\n        console.error(e.stack)\n      })\n    }\n  }))\n}\nperformSearch(replaceState=false, notifyState=true){\n  if(notifyState && !isEqual(this.accessors.getState(), this.state)){\n    this.accessors.notifyStateChange(this.state)\n  }\n  this.state = this.accessors.getState(); // moved from _search to here\n  if(this.options.useHistory){\n    const historyMethod = (replaceState) ?\n      this.history.replace : this.history.push\n    historyMethod({pathname: window.location.pathname, query:this.state})\n  }\n  else {\n    this._search()\n  }\n}\npauseListenHistory(){\n  if (this.historyFreezed !== undefined) \n    this.historyFreezed = true\n}\nresumeListenHistory(){\n  if (this.historyFreezed !== undefined) \n    this.historyFreezed = false\n}\n``\n. Webpack's tree-shaking only supports es6 import and export. Modules imported fromnode_modulesare exported using commonjs.\n. @GregoryPotdevin great, really appreciate that.\n. @xinghengwang inperformSearchyou need to setthis.state = this.accessors.getState();`, you can refer to my post in #297 . Fell free to comment.\n. ",
    "abousamra": "I came across this issue while I was trying to listen to any URL changes by the filters and did this workaround to get it working \n```\n    const history = createBrowserHistory();\n    history.listen((location, action) => {\n      // location is an object like window.location\n    });\nconst createHistory = () => history;\nthis.sk = new Searchkit.SearchkitManager(\".....\", {\n  createHistory,\n});\n\n```. ",
    "kinhunt": "Thank you. Close for the moment\n. ",
    "teameh": "Yeah that works for me. Thanks.\n. Something like this: \n```\nmodule.exports = {\n// Other config here\nresolve: {\n    alias: { react: path.resolve('./node_modules/react') },\n    extensions: ['', '.js', '.jsx', '.json']\n  }\n};\n```\n. ",
    "sieutruc": "@tiemevanveen can you post your configuration using witth webpack pls ?\n. ",
    "irnc": "This issue manifests itself when app uses React version different from one used by searchkit, which causes context for ref to be persisted in ReactCurrentOwner.current where ReactCurrentOwner instance is internal to searchkit. While external React couldn't see it and thus couldn't get owner to assign ref to.\nWhy do we need ref=\"queryField\" on an input inside SearchBox? I couldn't find where it is used. Given that use case is clear, we could refactor ref to use new API, instead of legacy string API.\nIf we could change that ref to be a function instead of string, that error would be gone.\nPreviously it was mitigated by webpack alias in https://github.com/searchkit/searchkit/issues/347 which works because then there is just one instance of ReactCurrentOwner module in cache, but it is a workaround over a legacy usage, so better we change ref to be input => this.refs.queryField = input or input => this.queryField = input depending on interface, which I am unaware of.. ",
    "jacksonp2008": "I must be doing it incorrectly, still loading on start here:\nconst host = \"http://172.28.128.3:9200/twitter,slack,email\"\nconst searchOnLoad = false\nconst searchkit = new SearchkitManager(host,searchOnLoad)\n. Where is the community support?  the https://gitter.im/searchkit/searchkit is crickets...  I don't mean to sound insulting, I think this has major potential for us.  But before I spend a bunch of time on this I'm looking for some reassurance that it's not a dead end project?. Figured this out.. I believe this is a data issue on our end.  Closing.. ",
    "chrisdebug": "Awesome! Thanks! I should have figured out to use an Elasticsearch solution instead of searching for a searchbox option.\n. ",
    "nicolapagni": "\nUnless there are major changes to the query DSL it should work fine.\n\nIn the indexing & mapping section of the guide, I applied to my mapping this example:\n```\n{\n  \"movie\" : {\n    \"properties\" : {\n      \"genres\" : {\n        \"type\" : \"string\",\n        \"fields\" : {        \n          \"raw\" : {\n            \"type\" : \"string\",\n            \"index\" : \"not_analyzed\"\n          }\n        }\n      }\n    }\n  }\n}\n```\nUsing it with ES2 all works fine...\nSame test with ES5, when i tried to click on an option of refinement list, it give me the error I wrote in my prev post.\nSo, How could I change the mapping to make it compatible with ES5?\n. I just tried and unfortunately it not seems works.\nI used the syntax you gave me for the mapping, and then i removed the .raw from assignment of the field. The exact error of the response I have is the following:\n{\"error\":{\"root_cause\":[{\"type\":\"parsing_exception\",\"reason\":\"Unknown key for a START_OBJECT in [filter].\",\"line\":1,\"col\":11}],\"type\":\"parsing_exception\",\"reason\":\"Unknown key for a START_OBJECT in [filter].\",\"line\":1,\"col\":11},\"status\":400}\nObviously, if I click on the \"ALL\" label of the filter I don't see any errors.\nWhen you have time to spend on it let me know how are the tests.\nThankssss,\n  Nicola\n. > (if I understand this correctly, it means that by default we don't need the raw subfields anymore, all the fields will have them. So in the queries we just replace \"field.raw\" by \"field.keyword\")\nThrough kibana/console i tried again with keyword instead of raw. In this way I don't see errors and the response looks like as expected.\nUsing the same query in searchkit I receive the same error. \nThat is strange because the response format doesn't changes...\n@GregoryPotdevin Actualy we are at alpha-4. I can suppose It will not be released until 2-3 months\n. ",
    "orpcam": "Hey, did you found a solution? . ",
    "darkadept": "See #188 \n. ",
    "bcruddy": "@GregoryPotdevin @joemcelroy any progress on this? I'm seeing the same issue:\n```javascript\nconst bucketTransforms = {\n    productTypes: (buckets) => {\n        console.log(buckets);\n    return buckets;\n}\n\n};\n...\n\n```\nThis works fine with RefinementListFilter but I want to keep the \"All\" facet.. I'm seeing this warning in react 15.5.4 with searchkit 2.0.0-9\nWarning: Accessing PropTypes via the main React package is deprecated. Use the prop-types package from npm instead.\nI'd be happy to put up a PR but I don't want to do duplicate work if someone else is already handling it.. After some investigation, this test would need to be removed as PropTypes are no longer \"callable\" -  warning docs. Hey @joemcelroy, I didn't catch the CLA before I got approval from legal at work. Hopefully they get to it today but it may be later in the week.. @joemcelroy just got approval and signed the CLA. @joemcelroy is there something I need to do to kick off the CircleCI tests?. @ssetem I'm happy to contribute. The tests just passed, thanks for an awesome library!. @joemcelroy @ssetem any idea when this change will be published?. @joemcelroy awesome, I'll keep an eye out - thanks!. It looks like I missed a few, putting up another PR shortly. Just opened #453 . Looks like they're still in the release bundle (but no longer in the source code itself). Awesome thanks!. @joemcelroy is this something that can be merged or do I need to monkey patch it for my use case?. @joemcelroy thanks!. Needs to be deployed to npm again (2.0.2). This library is amazing - thanks for everything that's gone into it!\nAlso - deploys to npm are super simple to automate with travis. travis setup npm does everything for you if you haven't looked into it. I've got it set up for an npm module here.. The only downside to the automated deploys on merges to develop (master in my case) is that every single merge needs at least a patch bump or it will fail to deploy (which may be fine if you don't want to deploy every change). Not really an issue but it catches me sometimes and then requires a whole new PR to deploy. And npm SUCKS at tokens. For some inexplicable reason the only way to get a token is npm login and npm logout invalidates it.. You can extend and override the transport object. I had to reformat the elastic search query to what our backend expected, then translate the result back to an elastic search response. If you can just proxy the request through without changing it that would be your best bet and just plug in your proxy endpoint for host when instantiating SearchkitManager. Otherwise you'll have to do some query and response formatting gymnastics.. ",
    "kud": "I would like the same thing but never found a way.\nsearchOnLoad is cool but only works the first time. If the user writes something and erases everything, it searches again with no query string.\nI want : no request if no query string.. It's not a bug, it's a feature request / help request. I think @heylookalive and I would like not to make a request when query string is empty. :). @heylookalive did you find a workaround by any chance?. I found a workaround for the first call, if you have an empty query string or not:\n```javascript\n    const parsed = queryString.parse(location.search)\n    const q = parsed.q\nconst sk = new SearchkitManager(API_URL + \"/search/\", {\n  searchOnLoad: q !== undefined // hack in order not to load the first call\n})\n\n```\nI still need to find a way not to make a request if you insert something, it makes a query and you remove all the input.. For my case, I just want not to do anything if the query is empty.\nFor the moment in my company, we return an empty result via the backend in this case, but it's not really the best way IMO.\nIndeed, shouldSearch could be great.. Yes! yes! yes!. Cool, thanks!. Sounds good. :). You're welcome. :)\n. Apparently you've got some stuff there: searchkit.accessors.getState() but the doc isn't enough in my opinion. I had to search in an issue here.. I'll do yes but I've got to read a lot the code done in typescript. :D. Doesn't work:\n```javascript\nconst sk = new SearchkitManager(API_URL + \"/search/\")\nclass SearchPage extends React.Component {\n  render() {\n    return (\n      \n\n\n    )\n  }\n}\n```\n\nWorks:\n```javascript\nclass SearchPage extends React.Component {\n  render() {\n    const sk = new SearchkitManager(API_URL + \"/search/\")\nreturn (\n  <SearchkitProvider searchkit={sk}>\n    <WrappedSearchApp />\n  </SearchkitProvider>\n)\n\n}\n}\n```. I would like but I have no idea how it happens. :) Maybe it's a bug with react hot loader.. I'll let you know if I've got any more information. But it happens quite often.. Yeah I use es6 right now ;)\nI'll have a look to searchkit-starter-app so.. By the way, the pagination components is obsolete with this latest react version. classNames aren't in the DOM so no style on the component.. I hoped updating myself the lib via npm install bem-cn --save resolved it but no. Sad.. Cool, I'll try it tomorrow at work. :). Great. :). I'm on the right branch? Because first I was looking into gh-pages and the folder 2.0.0.\nThe doc is generated from the master, that's it?. Oh, so maybe I should do it from \"develop\" so, instead of \"master\"?. If accepted, http://docs.searchkit.co/stable/setup/using-components.html#wrapping-search-in-react-component should be changed.. For the moment, it's ok for me. :) I did enough. I'll create another PR if needed. Thanks!. Thank you @ssetem :). I've done something like this:\n```\nthis.sk.setQueryProcessor((rawQuery) => {\n        rawQuery.query = {\n          \"bool\":\n          {\n            \"must\": [\n            {\n              \"match\":\n              {\n                \"bill.id\": nextMatch.params.billId\n              }\n            },\n            {\n              \"match\":\n              {\n                \"step.position\": nextMatch.params.stepPosition\n              }\n            }]\n          }\n        }\n    rawQuery.sort = [\n      { \"position\" : {\"order\" : \"asc\"} },\n    ]\n\n    return rawQuery\n  })\n\n```\nwhich works.\nI've replaced the default query by this. I don't see the point of defaultQuery to be honest.\nI only use setQueryProcessor with an object rawQuery I could exchange between some calls of setQueryProcessor.. Which filter component you mean?. Add reviewers @ssetem @joemcelroy. That's normal. It's because codepen is in https and the ajax requests from searchkit in the examples are done on another domain in http, so CORS troubles.. Thank you @nchevobbe and @joemcelroy that's better!\n(yeah it was for me at first :D). ",
    "ahmb84": "@kud I'm waiting for the feature. It will be a big help. Thanks.. +1. ",
    "inostia": "This feature is currently undocumented. I will try to make a PR to document it.. @joepsz that path did not work for me. I needed node_modules/react. \nHaven't tested the library fully but before I was getting Cannot resolve 'file' or 'directory' [...]/node_modules/react/react.js/lib/ReactDOM errors when compiling webpack, now at least it's compiling.. @ssetem thanks. I have a user directory with 4,500 records, so I need some pagination unless I do infinite scroll and use something like react-virtualize. I just want to display all options in a <MenuFilter component={Select} /> without the View All toggle. So the only way currently is to increase the hitsPerPage to show all records?. Ended up just loading all records and optimizing with react-virtualized.. I think the issue is that <TagFilterConfig /> is not adding the accessor to the searchkit object in 2.3.0. I was able to add it manually using the following code:\nconst searchkit = new SearchkitManager(\"/search/courses\");\n// ...\nconst facetOptions = {\n  field: \"instructor_list_filter\",\n  id: \"instructor\",\n  operator: \"AND\",\n  title: \"Instructor\",\n  size: 1,\n  loadAggregations: false\n};\nconst instructorAccessor = new FacetAccessor(\"instructor_list_filter\", facetOptions);\nsearchkit.addAccessor(instructorAccessor);\nI don't know if the required props to TagFilterConfig changed and whether there is a discrepancy on the docs, but it looks like field is the prop to add.. ",
    "graingert": "To the extent possible under law, I Thomas A. Grainger has waived all copyright and related or neighboring rights to https://github.com/searchkit/searchkit/pull/332. This work is published from: The United Kingdom.\nSee also the CC0\n. ",
    "rehm": "downgrade to  \"react\": \"^0.14.0\" and it works fine.\n. @pwain to make searchkit run with ^0.15.x you need to read the following instruction\nhttps://facebook.github.io/react/blog/2016/04/07/react-v15.html \nespecially \"Upgrade Guide\" and \"Changelog\" section.\n. ",
    "pwain": "+1\nWe're evaluating searchkit within a larger app where downgrading react is not a viable option.\n. @rehm thanks. What specifically in the link you reference helped you get over the broken slider behavior that you originally reported?\n. ",
    "mbm-rafal": "@SickSAMA  did you try to build version 0.10.1 of searchkit, this component produce error as described https://github.com/searchkit/searchkit/issues/375. I've added CustomAggregator feature just to be able to add different type of aggregations and pass paths to them without extending components.. UPDATE: This filtering will not work on different filtering components with same path. Using different paths will work as expected!! . (I had to adjust index structure) Workaround for this could be structure change just to create inner paths. \nConsider this still as issue.\nSolutions: Same path's nested components should be wrapped with filter above.. Same issue on develop branch atm. Resolve alias did not fix issue.. @joemcelroy weird. I'm still getting this error.\n\nI forked 1.0.0-4 and applied some default usage.\n\nMy dependencies below\n\u251c\u2500\u252c @kadira/storybook@2.35.3\n\u2502 \u251c\u2500\u2500 @kadira/react-split-pane@1.4.7\n\u2502 \u251c\u2500\u252c @kadira/storybook-addon-actions@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 deep-equal@1.0.1\n\u2502 \u2502 \u2514\u2500\u252c react-inspector@1.1.2\n\u2502 \u2502   \u2514\u2500\u2500 is-dom@1.0.9\n\u2502 \u251c\u2500\u2500 @kadira/storybook-addon-links@1.0.1\n\u2502 \u251c\u2500\u2500 @kadira/storybook-addons@1.6.1\n\u2502 \u251c\u2500\u252c @kadira/storybook-channel-postmsg@2.0.1\n\u2502 \u2502 \u2514\u2500\u2500 @kadira/storybook-channel@1.1.0\n\u2502 \u251c\u2500\u252c @kadira/storybook-ui@3.11.0\n\u2502 \u2502 \u251c\u2500\u2500 events@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 fuzzysearch@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 keycode@2.1.8\n\u2502 \u2502 \u251c\u2500\u2500 lodash.sortby@4.7.0\n\u2502 \u2502 \u251c\u2500\u252c mantra-core@1.7.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c react-komposer@1.13.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 mobx@2.7.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 react-simple-di@1.2.0\n\u2502 \u2502 \u251c\u2500\u252c podda@1.2.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 immutable@3.8.1\n\u2502 \u2502 \u251c\u2500\u252c react-fuzzy@0.3.3\n.1\n\u2502 \u2502 \u2514\u2500\u252c react-komposer@2.0.0\n\u2502 \u2502   \u251c\u2500\u2500 hoist-non-react-statics@1.2.0\n\u2502 \u2502   \u251c\u2500\u2500 react-stubber@1.0.0\n\u2502 \u2502   \u2514\u2500\u252c shallowequal@0.2.2\n\u2502 \u2502     \u2514\u2500\u252c lodash.keys@3.1.2\n\u2502 \u2502       \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502 \u2502       \u251c\u2500\u2500 lodash.isarguments@3.1.0\n\u2502 \u2502       \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u251c\u2500\u252c airbnb-js-shims@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c array-includes@3.0.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c define-properties@1.1.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 foreach@2.0.5\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 object-keys@1.0.11\n\u2502 \u2502 \u2502 \u2514\u2500\u252c es-abstract@1.7.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c es-to-primitive@1.1.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-date-object@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-symbol@1.0.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 is-callable@1.1.3\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 is-regex@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 es5-shim@4.5.9\n\u2502 \u2502 \u251c\u2500\u2500 es6-shim@0.35.3\n\u2502 \u2502 \u251c\u2500\u252c object.entries@1.0.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 function-bind@1.1.0\n\u2502 \u2502 \u251c\u2500\u2500 object.getownpropertydescriptors@2.0.3\n\u2502 \u2502 \u251c\u2500\u2500 object.values@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 string.prototype.padend@3.0.0\n\u2502 \u2502 \u2514\u2500\u2500 string.prototype.padstart@3.0.0\n\u2502 \u251c\u2500\u252c autoprefixer@6.7.3\n\u2502 \u2502 \u251c\u2500\u252c browserslist@1.7.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 electron-to-chromium@1.2.2\n\u2502 \u2502 \u251c\u2500\u2500 caniuse-db@1.0.30000623\n\u2502 \u2502 \u251c\u2500\u2500 normalize-range@0.1.2\n\u2502 \u2502 \u251c\u2500\u2500 num2fraction@1.2.2\n\u2502 \u2502 \u2514\u2500\u2500 postcss-value-parser@3.3.0\n\u2502 \u251c\u2500\u252c babel-plugin-react-docgen@1.4.2\n\u2502 \u2502 \u2514\u2500\u252c react-docgen@2.13.0\n\u2502 \u2502   \u251c\u2500\u2500 async@1.5.2\n\u2502 \u2502   \u251c\u2500\u2500 babylon@5.8.38\n\u2502 \u2502   \u251c\u2500\u2500 commander@2.9.0\n\u2502 \u2502   \u251c\u2500\u2500 doctrine@2.0.0\n\u2502 \u2502   \u251c\u2500\u2500 node-dir@0.1.16\n\u2502 \u2502   \u2514\u2500\u252c recast@0.11.22\n\u2502 \u2502     \u251c\u2500\u2500 ast-types@0.9.5\n\u2502 \u2502     \u2514\u2500\u2500 esprima@3.1.3\n\u2502 \u251c\u2500\u252c babel-preset-react-app@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c babel-plugin-transform-class-properties@6.16.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 babel-plugin-syntax-class-properties@6.13.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-destructuring@6.16.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-parameters@6.17.0\n\u2502 \u2502 \u251c\u2500\u252c babel-plugin-transform-object-rest-spread@6.16.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 babel-plugin-syntax-object-rest-spread@6.13.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-react-constant-elements@6.9.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-react-jsx-self@6.11.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-react-jsx-source@6.9.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-regenerator@6.16.1\n\u2502 \u2502 \u251c\u2500\u2500 babel-plugin-transform-runtime@6.15.0\n\u2502 \u2502 \u251c\u2500\u252c babel-preset-env@0.0.6\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 babel-plugin-syntax-trailing-function-commas@6.22.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c babel-plugin-transform-async-to-generator@6.22.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 babel-helper-remap-async-to-generator@6.22.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 babel-plugin-syntax-async-functions@6.13.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c babel-plugin-transform-exponentiation-operator@6.22.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c babel-helper-builder-binary-assignment-operator-visitor@6.22.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 babel-helper-explode-assignable-expression@6.22.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 babel-plugin-syntax-exponentiation-operator@6.13.0\n\u2502 \u2502 \u251c\u2500\u252c babel-preset-latest@6.16.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 babel-preset-es2016@6.22.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 babel-preset-es2017@6.22.0\n\u2502 \u2502 \u251c\u2500\u252c babel-preset-react@6.16.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 babel-plugin-syntax-flow@6.18.0\n\u2502 \u2502 \u2514\u2500\u252c babel-runtime@6.11.6\n\u2502 \u2502   \u2514\u2500\u2500 regenerator-runtime@0.9.6\n\u2502 \u251c\u2500\u252c babel-runtime@6.23.0\n\u2502 \u2502 \u251c\u2500\u2500 core-js@2.4.1\n\u2502 \u2502 \u2514\u2500\u2500 regenerator-runtime@0.10.1\n\u2502 \u251c\u2500\u2500 case-sensitive-paths-webpack-plugin@1.1.4\n\u2502 \u251c\u2500\u252c chalk@1.1.3\n\u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.2.1\n\u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.5\n\u2502 \u2502 \u251c\u2500\u2500 has-ansi@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n\u2502 \u251c\u2500\u252c commander@2.9.0\n\u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1\n\u2502 \u251c\u2500\u2500 common-tags@1.4.0\n\u2502 \u251c\u2500\u252c configstore@2.1.0\n\u2502 \u2502 \u251c\u2500\u252c dot-prop@3.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 is-obj@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 graceful-fs@4.1.11\n\u2502 \u2502 \u251c\u2500\u2500 os-tmpdir@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c osenv@0.1.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 os-homedir@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c write-file-atomic@1.3.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 imurmurhash@0.1.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 slide@1.1.6\n\u2502 \u2502 \u2514\u2500\u2500 xdg-basedir@2.0.0\n\u2502 \u251c\u2500\u252c express@4.14.1\n\u2502 \u2502 \u251c\u2500\u252c accepts@1.3.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 negotiator@0.6.1\n\u2502 \u2502 \u251c\u2500\u2500 array-flatten@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 content-disposition@0.5.2\n\u2502 \u2502 \u251c\u2500\u2500 content-type@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 cookie@0.3.1\n\u2502 \u2502 \u251c\u2500\u2500 cookie-signature@1.0.6\n\u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u251c\u2500\u2500 depd@1.1.0\n\u2502 \u2502 \u251c\u2500\u2500 encodeurl@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 escape-html@1.0.3\n\u2502 \u2502 \u251c\u2500\u2500 etag@1.7.0\n\u2502 \u2502 \u251c\u2500\u252c finalhandler@0.5.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 statuses@1.3.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 unpipe@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 fresh@0.3.0\n\u2502 \u2502 \u251c\u2500\u2500 merge-descriptors@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 methods@1.1.2\n\u2502 \u2502 \u251c\u2500\u252c on-finished@2.3.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ee-first@1.1.1\n\u2502 \u2502 \u251c\u2500\u2500 parseurl@1.3.1\n\u2502 \u2502 \u251c\u2500\u2500 path-to-regexp@0.1.7\n\u2502 \u2502 \u251c\u2500\u252c proxy-addr@1.1.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 forwarded@0.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ipaddr.js@1.2.0\n\u2502 \u2502 \u251c\u2500\u2500 range-parser@1.2.0\n\u2502 \u2502 \u251c\u2500\u252c send@0.14.2\n\u2502 \u2502 \u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 destroy@1.0.4\n\u2502 \u2502 \u251c\u2500\u2500 serve-static@1.11.2\n\u2502 \u2502 \u251c\u2500\u252c type-is@1.6.14\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 media-typer@0.3.0\n\u2502 \u2502 \u251c\u2500\u2500 utils-merge@1.0.0\n\u2502 \u2502 \u2514\u2500\u2500 vary@1.1.0\n\u2502 \u251c\u2500\u2500 file-loader@0.9.0\n\u2502 \u251c\u2500\u252c find-cache-dir@0.1.1\n\u2502 \u2502 \u251c\u2500\u2500 commondir@1.0.1\n\u2502 \u2502 \u2514\u2500\u252c pkg-dir@1.0.0\n\u2502 \u2502   \u2514\u2500\u252c find-up@1.1.2\n\u2502 \u2502     \u2514\u2500\u2500 path-exists@2.1.0\n\u2502 \u251c\u2500\u2500 json-loader@0.5.4\n\u2502 \u251c\u2500\u2500 json-stringify-safe@5.0.1\n\u2502 \u251c\u2500\u2500 json5@0.5.1\n\u2502 \u251c\u2500\u2500 lodash.pick@4.4.0\n\u2502 \u251c\u2500\u252c postcss-loader@1.1.0\n\u2502 \u2502 \u2514\u2500\u252c postcss-load-config@1.2.0\n\u2502 \u2502   \u251c\u2500\u252c cosmiconfig@2.1.1\n\u2502 \u2502   \u2502 \u251c\u2500\u252c js-yaml@3.7.0\n\u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c argparse@1.0.9\n\u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 sprintf-js@1.0.3\n\u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 esprima@2.7.3\n\u2502 \u2502   \u2502 \u251c\u2500\u2500 minimist@1.2.0\n\u2502 \u2502   \u2502 \u251c\u2500\u252c parse-json@2.2.0\n\u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c error-ex@1.3.0\n\u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 is-arrayish@0.2.1\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 require-from-string@1.2.1\n\u2502 \u2502   \u251c\u2500\u2500 postcss-load-options@1.2.0\n\u2502 \u2502   \u2514\u2500\u2500 postcss-load-plugins@2.3.0\n\u2502 \u251c\u2500\u2500 qs@6.2.0\n\u2502 \u251c\u2500\u252c react-modal@1.6.5\n\u2502 \u2502 \u251c\u2500\u2500 element-class@0.2.2\n\u2502 \u2502 \u251c\u2500\u2500 exenv@1.2.0\n\u2502 \u2502 \u2514\u2500\u2500 lodash.assign@4.2.0\n\u2502 \u251c\u2500\u252c redux@3.6.0\n\u2502 \u2502 \u251c\u2500\u2500 lodash-es@4.17.4\n\u2502 \u2502 \u2514\u2500\u2500 symbol-observable@1.0.4\n\u2502 \u251c\u2500\u252c request@2.79.0\n\u2502 \u2502 \u251c\u2500\u2500 aws-sign2@0.6.0\n\u2502 \u2502 \u251c\u2500\u2500 aws4@1.6.0\n\u2502 \u2502 \u251c\u2500\u2500 caseless@0.11.0\n\u2502 \u2502 \u251c\u2500\u252c combined-stream@1.0.5\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 extend@3.0.0\n\u2502 \u2502 \u251c\u2500\u2500 forever-agent@0.6.1\n\u2502 \u2502 \u251c\u2500\u252c form-data@2.1.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 asynckit@0.4.0\n\u2502 \u2502 \u251c\u2500\u252c har-validator@2.0.6\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 commander@2.9.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c is-my-json-valid@2.15.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 generate-function@2.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u252c generate-object-property@1.2.0\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 is-property@1.0.2\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 jsonpointer@4.0.1\n\u2502 \u2502 \u251c\u2500\u252c hawk@3.1.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 boom@2.10.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 cryptiles@2.0.5\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 hoek@2.16.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 sntp@1.0.9\n\u2502 \u2502 \u251c\u2500\u252c http-signature@1.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 assert-plus@0.2.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c jsprim@1.3.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 extsprintf@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 json-schema@0.2.3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 verror@1.3.6\n\u2502 \u2502 \u2502 \u2514\u2500\u252c sshpk@1.10.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 asn1@0.2.3\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 assert-plus@1.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 bcrypt-pbkdf@1.0.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c dashdash@1.14.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 assert-plus@1.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 ecc-jsbn@0.1.1\n\u2502 \u2502 \u2502   \u251c\u2500\u252c getpass@0.1.6\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 assert-plus@1.0.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 jodid25519@1.0.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 jsbn@0.1.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 tweetnacl@0.14.5\n\u2502 \u2502 \u251c\u2500\u2500 is-typedarray@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 isstream@0.1.2\n\u2502 \u2502 \u251c\u2500\u252c mime-types@2.1.14\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.26.0\n\u2502 \u2502 \u251c\u2500\u2500 oauth-sign@0.8.2\n\u2502 \u2502 \u251c\u2500\u2500 qs@6.3.1\n\u2502 \u2502 \u251c\u2500\u2500 stringstream@0.0.5\n\u2502 \u2502 \u251c\u2500\u2500 tough-cookie@2.3.2\n\u2502 \u2502 \u251c\u2500\u2500 tunnel-agent@0.4.3\n\u2502 \u2502 \u2514\u2500\u2500 uuid@3.0.1\n\u2502 \u251c\u2500\u252c serve-favicon@2.3.2\n\u2502 \u2502 \u2514\u2500\u2500 ms@0.7.2\n\u2502 \u251c\u2500\u252c shelljs@0.7.6\n\u2502 \u2502 \u251c\u2500\u252c glob@7.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 fs.realpath@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c inflight@1.0.6\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 wrappy@1.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 once@1.4.0\n\u2502 \u2502 \u2514\u2500\u252c rechoir@0.6.2\n\u2502 \u2502   \u2514\u2500\u2500 resolve@1.2.0\n\u2502 \u251c\u2500\u252c url-loader@0.5.7\n\u2502 \u2502 \u2514\u2500\u2500 mime@1.2.11\n\u2502 \u251c\u2500\u2500 uuid@2.0.3\n\u2502 \u251c\u2500\u252c webpack@1.14.0\n\u2502 \u2502 \u251c\u2500\u2500 acorn@3.3.0\n\u2502 \u2502 \u251c\u2500\u2500 async@1.5.2\n\u2502 \u2502 \u251c\u2500\u2500 clone@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c enhanced-resolve@0.9.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 memory-fs@0.2.0\n\u2502 \u2502 \u251c\u2500\u2500 interpret@0.6.6\n\u2502 \u2502 \u251c\u2500\u2500 memory-fs@0.3.0\n\u2502 \u2502 \u251c\u2500\u252c node-libs-browser@0.7.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c crypto-browserify@3.3.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 browserify-aes@0.4.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 pbkdf2-compat@2.0.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 ripemd160@0.2.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 sha.js@2.2.6\n\u2502 \u2502 \u251c\u2500\u252c optimist@0.6.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 wordwrap@0.0.2\n\u2502 \u2502 \u251c\u2500\u2500 supports-color@3.2.3\n\u2502 \u2502 \u251c\u2500\u2500 tapable@0.1.10\n\u2502 \u2502 \u251c\u2500\u252c watchpack@0.2.9\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 async@0.9.2\n\u2502 \u2502 \u2514\u2500\u252c webpack-core@0.6.9\n\u2502 \u2502   \u2514\u2500\u252c source-map@0.4.4\n\u2502 \u2502     \u2514\u2500\u2500 amdefine@1.0.1\n\u2502 \u251c\u2500\u252c webpack-dev-middleware@1.10.0\n\u2502 \u2502 \u2514\u2500\u2500 mime@1.3.4\n\u2502 \u2514\u2500\u252c webpack-hot-middleware@2.17.0\n\u2502   \u251c\u2500\u2500 ansi-html@0.0.6\n\u2502   \u2514\u2500\u2500 querystring@0.2.0\n\u251c\u2500\u252c babel-core@6.23.1\n\u2502 \u251c\u2500\u252c babel-code-frame@6.22.0\n\u2502 \u2502 \u251c\u2500\u2500 esutils@2.0.2\n\u2502 \u2502 \u2514\u2500\u2500 js-tokens@3.0.1\n\u2502 \u251c\u2500\u252c babel-generator@6.23.0\n\u2502 \u2502 \u251c\u2500\u252c detect-indent@4.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c repeating@2.0.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 is-finite@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 jsesc@1.3.0\n\u2502 \u2502 \u2514\u2500\u2500 trim-right@1.0.1\n\u2502 \u251c\u2500\u2500 babel-helpers@6.23.0\n\u2502 \u251c\u2500\u2500 babel-messages@6.23.0\n\u2502 \u251c\u2500\u252c babel-register@6.23.0\n\u2502 \u2502 \u251c\u2500\u2500 home-or-tmp@2.0.0\n\u2502 \u2502 \u2514\u2500\u2500 source-map-support@0.4.11\n\u2502 \u251c\u2500\u2500 babel-template@6.23.0\n\u2502 \u251c\u2500\u252c babel-traverse@6.23.1\n\u2502 \u2502 \u251c\u2500\u2500 globals@9.16.0\n\u2502 \u2502 \u2514\u2500\u2500 invariant@2.2.2\n\u2502 \u251c\u2500\u252c babel-types@6.23.0\n\u2502 \u2502 \u2514\u2500\u2500 to-fast-properties@1.0.2\n\u2502 \u251c\u2500\u2500 babylon@6.15.0\n\u2502 \u251c\u2500\u2500 convert-source-map@1.4.0\n\u2502 \u251c\u2500\u2500 debug@2.6.1\n\u2502 \u251c\u2500\u2500 lodash@4.17.4\n\u2502 \u251c\u2500\u252c minimatch@3.0.3\n\u2502 \u2502 \u2514\u2500\u252c brace-expansion@1.1.6\n\u2502 \u2502   \u251c\u2500\u2500 balanced-match@0.4.2\n\u2502 \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n\u2502 \u251c\u2500\u2500 path-is-absolute@1.0.1\n\u2502 \u251c\u2500\u2500 private@0.1.7\n\u2502 \u251c\u2500\u2500 slash@1.0.0\n\u2502 \u2514\u2500\u2500 source-map@0.5.6\n\u251c\u2500\u252c babel-loader@6.3.2\n\u2502 \u251c\u2500\u252c loader-utils@0.2.16\n\u2502 \u2502 \u251c\u2500\u2500 big.js@3.1.3\n\u2502 \u2502 \u2514\u2500\u2500 emojis-list@2.1.0\n\u2502 \u251c\u2500\u252c mkdirp@0.5.1\n\u2502 \u2502 \u2514\u2500\u2500 minimist@0.0.8\n\u2502 \u2514\u2500\u2500 object-assign@4.1.1\n\u251c\u2500\u252c babel-preset-es2015@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-check-es2015-constants@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-arrow-functions@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-block-scoped-functions@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-block-scoping@6.23.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-es2015-classes@6.23.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-helper-define-map@6.23.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-helper-function-name@6.23.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-helper-optimise-call-expression@6.23.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-helper-replace-supers@6.23.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-computed-properties@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-destructuring@6.23.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-duplicate-keys@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-for-of@6.23.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-function-name@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-literals@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-modules-amd@6.22.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-es2015-modules-commonjs@6.23.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-plugin-transform-strict-mode@6.22.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-es2015-modules-systemjs@6.23.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-helper-hoist-variables@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-modules-umd@6.23.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-object-super@6.22.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-es2015-parameters@6.23.0\n\u2502 \u2502 \u251c\u2500\u2500 babel-helper-call-delegate@6.22.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-helper-get-function-arity@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-shorthand-properties@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-spread@6.22.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-es2015-sticky-regex@6.22.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-helper-regex@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-template-literals@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-es2015-typeof-symbol@6.23.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-es2015-unicode-regex@6.22.0\n\u2502 \u2502 \u2514\u2500\u252c regexpu-core@2.0.0\n\u2502 \u2502   \u251c\u2500\u2500 regenerate@1.3.2\n\u2502 \u2502   \u251c\u2500\u2500 regjsgen@0.2.0\n\u2502 \u2502   \u2514\u2500\u252c regjsparser@0.1.5\n\u2502 \u2502     \u2514\u2500\u2500 jsesc@0.5.0\n\u2502 \u2514\u2500\u252c babel-plugin-transform-regenerator@6.22.0\n\u2502   \u2514\u2500\u2500 regenerator-transform@0.9.8\n\u251c\u2500\u252c babel-preset-react@6.23.0\n\u2502 \u251c\u2500\u2500 babel-plugin-syntax-jsx@6.18.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-react-display-name@6.23.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-react-jsx@6.23.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-helper-builder-react-jsx@6.23.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-react-jsx-self@6.22.0\n\u2502 \u251c\u2500\u2500 babel-plugin-transform-react-jsx-source@6.22.0\n\u2502 \u2514\u2500\u252c babel-preset-flow@6.23.0\n\u2502   \u2514\u2500\u2500 babel-plugin-transform-flow-strip-types@6.22.0\n\u251c\u2500\u252c babel-preset-stage-1@6.22.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-class-constructor-call@6.22.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-plugin-syntax-class-constructor-call@6.18.0\n\u2502 \u251c\u2500\u252c babel-plugin-transform-export-extensions@6.22.0\n\u2502 \u2502 \u2514\u2500\u2500 babel-plugin-syntax-export-extensions@6.13.0\n\u2502 \u2514\u2500\u252c babel-preset-stage-2@6.22.0\n\u2502   \u251c\u2500\u2500 babel-plugin-syntax-dynamic-import@6.18.0\n\u2502   \u251c\u2500\u2500 babel-plugin-transform-class-properties@6.23.0\n\u2502   \u251c\u2500\u252c babel-plugin-transform-decorators@6.22.0\n\u2502   \u2502 \u251c\u2500\u252c babel-helper-explode-class@6.22.0\n\u2502   \u2502 \u2502 \u2514\u2500\u2500 babel-helper-bindify-decorators@6.22.0\n\u2502   \u2502 \u2514\u2500\u2500 babel-plugin-syntax-decorators@6.13.0\n\u2502   \u2514\u2500\u252c babel-preset-stage-3@6.22.0\n\u2502     \u251c\u2500\u252c babel-plugin-transform-async-generator-functions@6.22.0\n\u2502     \u2502 \u2514\u2500\u2500 babel-plugin-syntax-async-generators@6.13.0\n\u2502     \u2514\u2500\u2500 babel-plugin-transform-object-rest-spread@6.23.0\n\u251c\u2500\u252c css-loader@0.26.1\n\u2502 \u251c\u2500\u252c css-selector-tokenizer@0.7.0\n\u2502 \u2502 \u251c\u2500\u2500 cssesc@0.1.0\n\u2502 \u2502 \u251c\u2500\u2500 fastparse@1.1.1\n\u2502 \u2502 \u2514\u2500\u2500 regexpu-core@1.0.0\n\u2502 \u251c\u2500\u252c cssnano@3.10.0\n\u2502 \u2502 \u251c\u2500\u2500 decamelize@1.2.0\n\u2502 \u2502 \u251c\u2500\u2500 defined@1.0.0\n\u2502 \u2502 \u251c\u2500\u2500 has@1.0.1\n\u2502 \u2502 \u251c\u2500\u252c postcss-calc@5.3.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 postcss-message-helpers@2.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c reduce-css-calc@1.3.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 math-expression-evaluator@1.2.16\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 reduce-function-call@1.0.2\n\u2502 \u2502 \u251c\u2500\u252c postcss-colormin@2.2.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c colormin@1.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u252c color@0.11.4\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c color-convert@1.9.0\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 color-name@1.1.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 color-string@0.3.0\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 css-color-names@0.0.4\n\u2502 \u2502 \u251c\u2500\u2500 postcss-convert-values@2.6.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-discard-comments@2.0.4\n\u2502 \u2502 \u251c\u2500\u2500 postcss-discard-duplicates@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 postcss-discard-empty@2.1.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-discard-overridden@0.1.1\n\u2502 \u2502 \u251c\u2500\u252c postcss-discard-unused@2.2.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 uniqs@2.0.0\n\u2502 \u2502 \u251c\u2500\u252c postcss-filter-plugins@2.0.2\n\u2502 \u2502 \u2502 \u2514\u2500\u252c uniqid@4.1.1\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 macaddress@0.2.8\n\u2502 \u2502 \u251c\u2500\u2500 postcss-merge-idents@2.1.7\n\u2502 \u2502 \u251c\u2500\u2500 postcss-merge-longhand@2.0.2\n\u2502 \u2502 \u251c\u2500\u252c postcss-merge-rules@2.1.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c caniuse-api@1.5.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 lodash.memoize@4.1.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 lodash.uniq@4.5.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c postcss-selector-parser@2.2.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 flatten@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 indexes-of@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 uniq@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 vendors@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-minify-font-values@1.0.5\n\u2502 \u2502 \u251c\u2500\u2500 postcss-minify-gradients@1.0.5\n\u2502 \u2502 \u251c\u2500\u252c postcss-minify-params@1.2.2\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 alphanum-sort@1.0.2\n\u2502 \u2502 \u251c\u2500\u2500 postcss-minify-selectors@2.1.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-normalize-charset@1.1.1\n\u2502 \u2502 \u251c\u2500\u252c postcss-normalize-url@3.0.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 is-absolute-url@2.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u252c normalize-url@1.9.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 prepend-http@1.0.4\n\u2502 \u2502 \u2502   \u251c\u2500\u252c query-string@4.3.2\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 strict-uri-encode@1.1.0\n\u2502 \u2502 \u2502   \u2514\u2500\u252c sort-keys@1.1.2\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 is-plain-obj@1.1.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-ordered-values@2.2.3\n\u2502 \u2502 \u251c\u2500\u2500 postcss-reduce-idents@2.4.0\n\u2502 \u2502 \u251c\u2500\u2500 postcss-reduce-initial@1.0.1\n\u2502 \u2502 \u251c\u2500\u2500 postcss-reduce-transforms@1.0.4\n\u2502 \u2502 \u251c\u2500\u252c postcss-svgo@2.1.6\n\u2502 \u2502 \u2502 \u251c\u2500\u252c is-svg@2.1.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 html-comment-regex@1.1.1\n\u2502 \u2502 \u2502 \u2514\u2500\u252c svgo@0.7.2\n\u2502 \u2502 \u2502   \u251c\u2500\u252c coa@1.0.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 q@1.4.1\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 colors@1.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u252c csso@2.3.1\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 clap@1.1.2\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 sax@1.2.2\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 whet.extend@0.9.9\n\u2502 \u2502 \u251c\u2500\u2500 postcss-unique-selectors@2.0.2\n\u2502 \u2502 \u2514\u2500\u2500 postcss-zindex@2.2.0\n\u2502 \u251c\u2500\u2500 lodash.camelcase@4.3.0\n\u2502 \u251c\u2500\u252c postcss@5.2.13\n\u2502 \u2502 \u251c\u2500\u2500 js-base64@2.1.9\n\u2502 \u2502 \u2514\u2500\u2500 supports-color@3.2.3\n\u2502 \u251c\u2500\u2500 postcss-modules-extract-imports@1.0.1\n\u2502 \u251c\u2500\u252c postcss-modules-local-by-default@1.1.1\n\u2502 \u2502 \u2514\u2500\u252c css-selector-tokenizer@0.6.0\n\u2502 \u2502   \u2514\u2500\u2500 regexpu-core@1.0.0\n\u2502 \u251c\u2500\u252c postcss-modules-scope@1.0.2\n\u2502 \u2502 \u2514\u2500\u252c css-selector-tokenizer@0.6.0\n\u2502 \u2502   \u2514\u2500\u2500 regexpu-core@1.0.0\n\u2502 \u251c\u2500\u252c postcss-modules-values@1.2.2\n\u2502 \u2502 \u2514\u2500\u2500 icss-replace-symbols@1.0.2\n\u2502 \u2514\u2500\u2500 source-list-map@0.1.8\n\u251c\u2500\u252c mocha@2.5.3\n\u2502 \u251c\u2500\u2500 commander@2.3.0\n\u2502 \u251c\u2500\u252c debug@2.2.0\n\u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n\u2502 \u251c\u2500\u2500 diff@1.4.0\n\u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.2\n\u2502 \u251c\u2500\u252c glob@3.2.11\n\u2502 \u2502 \u251c\u2500\u2500 inherits@2.0.3\n\u2502 \u2502 \u2514\u2500\u252c minimatch@0.3.0\n\u2502 \u2502   \u251c\u2500\u2500 lru-cache@2.7.3\n\u2502 \u2502   \u2514\u2500\u2500 sigmund@1.0.1\n\u2502 \u251c\u2500\u2500 growl@1.9.2\n\u2502 \u251c\u2500\u252c jade@0.26.3\n\u2502 \u2502 \u251c\u2500\u2500 commander@0.6.1\n\u2502 \u2502 \u2514\u2500\u2500 mkdirp@0.3.0\n\u2502 \u251c\u2500\u2500 supports-color@1.2.0\n\u2502 \u2514\u2500\u2500 to-iso-string@0.0.2\n\u251c\u2500\u252c react@15.4.2\n\u2502 \u251c\u2500\u252c fbjs@0.8.9\n\u2502 \u2502 \u251c\u2500\u2500 core-js@1.2.7\n\u2502 \u2502 \u251c\u2500\u252c isomorphic-fetch@2.2.1\n\u2502 \u2502 \u2502 \u251c\u2500\u252c node-fetch@1.6.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c encoding@0.1.12\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 iconv-lite@0.4.15\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 is-stream@1.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 whatwg-fetch@2.0.2\n\u2502 \u2502 \u251c\u2500\u252c promise@7.1.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 asap@2.0.5\n\u2502 \u2502 \u251c\u2500\u2500 setimmediate@1.0.5\n\u2502 \u2502 \u2514\u2500\u2500 ua-parser-js@0.7.12\n\u2502 \u2514\u2500\u2500 loose-envify@1.3.1\n\u251c\u2500\u2500 react-dom@15.4.2\n\u251c\u2500\u252c react-select@1.0.0-rc.3\n\u2502 \u251c\u2500\u2500 classnames@2.2.5\n\u2502 \u2514\u2500\u2500 react-input-autosize@1.1.0\n\u251c\u2500\u2500 style-loader@0.13.1\n\u251c\u2500\u252c webpack@2.2.1\n\u2502 \u251c\u2500\u2500 acorn@4.0.11\n\u2502 \u251c\u2500\u2500 acorn-dynamic-import@2.0.1\n\u2502 \u251c\u2500\u252c ajv@4.11.3\n\u2502 \u2502 \u251c\u2500\u2500 co@4.6.0\n\u2502 \u2502 \u2514\u2500\u252c json-stable-stringify@1.0.1\n\u2502 \u2502   \u2514\u2500\u2500 jsonify@0.0.0\n\u2502 \u251c\u2500\u2500 ajv-keywords@1.5.1\n\u2502 \u251c\u2500\u2500 async@2.1.4\n\u2502 \u251c\u2500\u2500 enhanced-resolve@3.1.0\n\u2502 \u251c\u2500\u2500 interpret@1.0.1\n\u2502 \u251c\u2500\u2500 loader-runner@2.3.0\n\u2502 \u251c\u2500\u252c memory-fs@0.4.1\n\u2502 \u2502 \u251c\u2500\u252c errno@0.1.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 prr@0.0.0\n\u2502 \u2502 \u2514\u2500\u252c readable-stream@2.2.2\n\u2502 \u2502   \u251c\u2500\u2500 buffer-shims@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 core-util-is@1.0.2\n\u2502 \u2502   \u251c\u2500\u2500 isarray@1.0.0\n\u2502 \u2502   \u251c\u2500\u2500 process-nextick-args@1.0.7\n\u2502 \u2502   \u2514\u2500\u2500 util-deprecate@1.0.2\n\u2502 \u251c\u2500\u252c node-libs-browser@2.0.0\n\u2502 \u2502 \u251c\u2500\u2500 assert@1.4.1\n\u2502 \u2502 \u251c\u2500\u252c browserify-zlib@0.1.4\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 pako@0.2.9\n\u2502 \u2502 \u251c\u2500\u252c buffer@4.9.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 base64-js@1.2.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 ieee754@1.1.8\n\u2502 \u2502 \u251c\u2500\u252c console-browserify@1.1.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 date-now@0.1.4\n\u2502 \u2502 \u251c\u2500\u2500 constants-browserify@1.0.0\n\u2502 \u2502 \u251c\u2500\u252c crypto-browserify@3.11.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c browserify-cipher@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c browserify-aes@1.0.6\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 buffer-xor@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c browserify-des@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 des.js@1.0.0\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 evp_bytestokey@1.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c browserify-sign@4.0.0\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 bn.js@4.11.6\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 browserify-rsa@4.0.1\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u252c elliptic@6.3.3\n\u2502 \u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 brorand@1.0.7\n\u2502 \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 hash.js@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u252c parse-asn1@5.0.0\n\u2502 \u2502 \u2502 \u2502   \u2514\u2500\u2500 asn1.js@4.9.1\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 create-ecdh@4.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c create-hash@1.1.2\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 cipher-base@1.0.3\n\u2502 \u2502 \u2502 \u2502 \u251c\u2500\u2500 ripemd160@1.0.1\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 sha.js@2.4.8\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 create-hmac@1.1.4\n\u2502 \u2502 \u2502 \u251c\u2500\u252c diffie-hellman@5.0.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 miller-rabin@4.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 pbkdf2@3.0.9\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 public-encrypt@4.0.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 randombytes@2.0.3\n\u2502 \u2502 \u251c\u2500\u2500 domain-browser@1.1.7\n\u2502 \u2502 \u251c\u2500\u2500 https-browserify@0.0.1\n\u2502 \u2502 \u251c\u2500\u2500 os-browserify@0.2.1\n\u2502 \u2502 \u251c\u2500\u2500 path-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u2500 process@0.11.9\n\u2502 \u2502 \u251c\u2500\u2500 punycode@1.4.1\n\u2502 \u2502 \u251c\u2500\u2500 querystring-es3@0.2.1\n\u2502 \u2502 \u251c\u2500\u2500 stream-browserify@2.0.1\n\u2502 \u2502 \u251c\u2500\u252c stream-http@2.6.3\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 builtin-status-codes@3.0.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 to-arraybuffer@1.0.1\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.1\n\u2502 \u2502 \u251c\u2500\u2500 string_decoder@0.10.31\n\u2502 \u2502 \u251c\u2500\u2500 timers-browserify@2.0.2\n\u2502 \u2502 \u251c\u2500\u2500 tty-browserify@0.0.0\n\u2502 \u2502 \u251c\u2500\u252c url@0.11.0\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 punycode@1.3.2\n\u2502 \u2502 \u251c\u2500\u252c util@0.10.3\n\u2502 \u2502 \u2502 \u2514\u2500\u2500 inherits@2.0.1\n\u2502 \u2502 \u2514\u2500\u252c vm-browserify@0.0.4\n\u2502 \u2502   \u2514\u2500\u2500 indexof@0.0.1\n\u2502 \u251c\u2500\u252c supports-color@3.2.3\n\u2502 \u2502 \u2514\u2500\u2500 has-flag@1.0.0\n\u2502 \u251c\u2500\u2500 tapable@0.2.6\n\u2502 \u251c\u2500\u252c uglify-js@2.7.5\n\u2502 \u2502 \u251c\u2500\u2500 async@0.2.10\n\u2502 \u2502 \u251c\u2500\u2500 uglify-to-browserify@1.0.2\n\u2502 \u2502 \u2514\u2500\u252c yargs@3.10.0\n\u2502 \u2502   \u251c\u2500\u2500 camelcase@1.2.1\n\u2502 \u2502   \u251c\u2500\u252c cliui@2.1.0\n\u2502 \u2502   \u2502 \u251c\u2500\u252c center-align@0.1.3\n\u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c align-text@0.1.4\n\u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 longest@1.0.1\n\u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 repeat-string@1.6.1\n\u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 lazy-cache@1.0.4\n\u2502 \u2502   \u2502 \u2514\u2500\u2500 right-align@0.1.3\n\u2502 \u2502   \u2514\u2500\u2500 window-size@0.1.0\n\u2502 \u251c\u2500\u2500 watchpack@1.2.1\n\u2502 \u251c\u2500\u2500 webpack-sources@0.1.4\n\u2502 \u2514\u2500\u252c yargs@6.6.0\n\u2502   \u251c\u2500\u2500 camelcase@3.0.0\n\u2502   \u251c\u2500\u252c cliui@3.2.0\n\u2502   \u2502 \u2514\u2500\u2500 wrap-ansi@2.1.0\n\u2502   \u251c\u2500\u2500 get-caller-file@1.0.2\n\u2502   \u251c\u2500\u252c os-locale@1.4.0\n\u2502   \u2502 \u2514\u2500\u252c lcid@1.0.0\n\u2502   \u2502   \u2514\u2500\u2500 invert-kv@1.0.0\n\u2502   \u251c\u2500\u252c read-pkg-up@1.0.1\n\u2502   \u2502 \u2514\u2500\u252c read-pkg@1.1.0\n\u2502   \u2502   \u251c\u2500\u252c load-json-file@1.1.0\n\u2502   \u2502   \u2502 \u251c\u2500\u2500 pify@2.3.0\n\u2502   \u2502   \u2502 \u2514\u2500\u252c strip-bom@2.0.0\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 is-utf8@0.2.1\n\u2502   \u2502   \u251c\u2500\u252c normalize-package-data@2.3.5\n\u2502   \u2502   \u2502 \u251c\u2500\u2500 hosted-git-info@2.2.0\n\u2502   \u2502   \u2502 \u251c\u2500\u252c is-builtin-module@1.0.0\n\u2502   \u2502   \u2502 \u2502 \u2514\u2500\u2500 builtin-modules@1.1.1\n\u2502   \u2502   \u2502 \u251c\u2500\u2500 semver@5.3.0\n\u2502   \u2502   \u2502 \u2514\u2500\u252c validate-npm-package-license@3.0.1\n\u2502   \u2502   \u2502   \u251c\u2500\u252c spdx-correct@1.0.2\n\u2502   \u2502   \u2502   \u2502 \u2514\u2500\u2500 spdx-license-ids@1.2.2\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 spdx-expression-parse@1.0.4\n\u2502   \u2502   \u2514\u2500\u2500 path-type@1.1.0\n\u2502   \u251c\u2500\u2500 require-directory@2.1.1\n\u2502   \u251c\u2500\u2500 require-main-filename@1.0.1\n\u2502   \u251c\u2500\u2500 set-blocking@2.0.0\n\u2502   \u251c\u2500\u252c string-width@1.0.2\n\u2502   \u2502 \u251c\u2500\u2500 code-point-at@1.1.0\n\u2502   \u2502 \u2514\u2500\u252c is-fullwidth-code-point@1.0.0\n\u2502   \u2502   \u2514\u2500\u2500 number-is-nan@1.0.1\n\u2502   \u251c\u2500\u2500 which-module@1.0.0\n\u2502   \u251c\u2500\u2500 y18n@3.2.1\n\u2502   \u2514\u2500\u252c yargs-parser@4.2.1\n\u2502     \u2514\u2500\u2500 camelcase@3.0.0\n\u2514\u2500\u252c webpack-dev-server@2.3.0\n  \u251c\u2500\u2500 ansi-html@0.0.7\n  \u251c\u2500\u252c chokidar@1.6.1\n  \u2502 \u251c\u2500\u252c anymatch@1.3.0\n  \u2502 \u2502 \u2514\u2500\u2500 arrify@1.0.1\n  \u2502 \u251c\u2500\u2500 async-each@1.0.1\n  \u2502 \u251c\u2500\u252c fsevents@1.0.17\n  \u2502 \u2502 \u251c\u2500\u2500 nan@2.5.1\n  \u2502 \u2502 \u2514\u2500\u252c node-pre-gyp@0.6.32\n  \u2502 \u2502   \u251c\u2500\u252c mkdirp@0.5.1\n  \u2502 \u2502   \u2502 \u2514\u2500\u2500 minimist@0.0.8\n  \u2502 \u2502   \u251c\u2500\u252c nopt@3.0.6\n  \u2502 \u2502   \u2502 \u2514\u2500\u2500 abbrev@1.0.9\n  \u2502 \u2502   \u251c\u2500\u252c npmlog@4.0.2\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c are-we-there-yet@1.1.2\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 delegates@1.0.0\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 readable-stream@2.2.2\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 console-control-strings@1.1.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c gauge@2.7.2\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 aproba@1.0.4\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 has-unicode@2.0.1\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 object-assign@4.1.0\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 signal-exit@3.0.2\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c string-width@1.0.2\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 code-point-at@1.1.0\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u252c is-fullwidth-code-point@1.0.0\n  \u2502 \u2502   \u2502 \u2502 \u2502   \u2514\u2500\u2500 number-is-nan@1.0.1\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c strip-ansi@3.0.1\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 ansi-regex@2.0.0\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 supports-color@0.2.0\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 wide-align@1.1.0\n  \u2502 \u2502   \u2502 \u2514\u2500\u2500 set-blocking@2.0.0\n  \u2502 \u2502   \u251c\u2500\u252c rc@1.1.6\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 deep-extend@0.4.1\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 ini@1.3.4\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 minimist@1.2.0\n  \u2502 \u2502   \u2502 \u2514\u2500\u2500 strip-json-comments@1.0.4\n  \u2502 \u2502   \u251c\u2500\u252c request@2.79.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 aws-sign2@0.6.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 aws4@1.5.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 caseless@0.11.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c combined-stream@1.0.5\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 delayed-stream@1.0.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 extend@3.0.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 forever-agent@0.6.1\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c form-data@2.1.2\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 asynckit@0.4.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c har-validator@2.0.6\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c chalk@1.1.3\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 ansi-styles@2.2.1\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 escape-string-regexp@1.0.5\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 has-ansi@2.0.0\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 supports-color@2.0.0\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c commander@2.9.0\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 graceful-readlink@1.0.1\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c is-my-json-valid@2.15.0\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 generate-function@2.0.0\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u252c generate-object-property@1.2.0\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 is-property@1.0.2\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 jsonpointer@4.0.1\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 xtend@4.0.1\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c pinkie-promise@2.0.1\n  \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 pinkie@2.0.4\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c hawk@3.1.3\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 boom@2.10.1\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 cryptiles@2.0.5\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 hoek@2.16.3\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 sntp@1.0.9\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c http-signature@1.1.1\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 assert-plus@0.2.0\n  \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u252c jsprim@1.3.1\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 extsprintf@1.0.2\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u251c\u2500\u2500 json-schema@0.2.3\n  \u2502 \u2502   \u2502 \u2502 \u2502 \u2514\u2500\u2500 verror@1.3.6\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c sshpk@1.10.1\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 asn1@0.2.3\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 assert-plus@1.0.0\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 bcrypt-pbkdf@1.0.0\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u252c dashdash@1.14.1\n  \u2502 \u2502   \u2502 \u2502   \u2502 \u2514\u2500\u2500 assert-plus@1.0.0\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 ecc-jsbn@0.1.1\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u252c getpass@0.1.6\n  \u2502 \u2502   \u2502 \u2502   \u2502 \u2514\u2500\u2500 assert-plus@1.0.0\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 jodid25519@1.0.2\n  \u2502 \u2502   \u2502 \u2502   \u251c\u2500\u2500 jsbn@0.1.0\n  \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 tweetnacl@0.14.5\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 is-typedarray@1.0.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 isstream@0.1.2\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 json-stringify-safe@5.0.1\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c mime-types@2.1.13\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 mime-db@1.25.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 oauth-sign@0.8.2\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 qs@6.3.0\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 stringstream@0.0.5\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c tough-cookie@2.3.2\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 punycode@1.4.1\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 tunnel-agent@0.4.3\n  \u2502 \u2502   \u2502 \u2514\u2500\u2500 uuid@3.0.1\n  \u2502 \u2502   \u251c\u2500\u252c rimraf@2.5.4\n  \u2502 \u2502   \u2502 \u2514\u2500\u252c glob@7.1.1\n  \u2502 \u2502   \u2502   \u251c\u2500\u2500 fs.realpath@1.0.0\n  \u2502 \u2502   \u2502   \u251c\u2500\u2500 inflight@1.0.6\n  \u2502 \u2502   \u2502   \u251c\u2500\u252c minimatch@3.0.3\n  \u2502 \u2502   \u2502   \u2502 \u2514\u2500\u252c brace-expansion@1.1.6\n  \u2502 \u2502   \u2502   \u2502   \u251c\u2500\u2500 balanced-match@0.4.2\n  \u2502 \u2502   \u2502   \u2502   \u2514\u2500\u2500 concat-map@0.0.1\n  \u2502 \u2502   \u2502   \u251c\u2500\u2500 once@1.4.0\n  \u2502 \u2502   \u2502   \u2514\u2500\u2500 path-is-absolute@1.0.1\n  \u2502 \u2502   \u251c\u2500\u2500 semver@5.3.0\n  \u2502 \u2502   \u251c\u2500\u252c tar@2.2.1\n  \u2502 \u2502   \u2502 \u251c\u2500\u2500 block-stream@0.0.9\n  \u2502 \u2502   \u2502 \u251c\u2500\u252c fstream@1.0.10\n  \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u2500 graceful-fs@4.1.11\n  \u2502 \u2502   \u2502 \u2514\u2500\u2500 inherits@2.0.3\n  \u2502 \u2502   \u2514\u2500\u252c tar-pack@3.3.0\n  \u2502 \u2502     \u251c\u2500\u252c debug@2.2.0\n  \u2502 \u2502     \u2502 \u2514\u2500\u2500 ms@0.7.1\n  \u2502 \u2502     \u251c\u2500\u2500 fstream-ignore@1.0.5\n  \u2502 \u2502     \u251c\u2500\u252c once@1.3.3\n  \u2502 \u2502     \u2502 \u2514\u2500\u2500 wrappy@1.0.2\n  \u2502 \u2502     \u251c\u2500\u252c readable-stream@2.1.5\n  \u2502 \u2502     \u2502 \u251c\u2500\u2500 buffer-shims@1.0.0\n  \u2502 \u2502     \u2502 \u251c\u2500\u2500 core-util-is@1.0.2\n  \u2502 \u2502     \u2502 \u251c\u2500\u2500 isarray@1.0.0\n  \u2502 \u2502     \u2502 \u251c\u2500\u2500 process-nextick-args@1.0.7\n  \u2502 \u2502     \u2502 \u251c\u2500\u2500 string_decoder@0.10.31\n  \u2502 \u2502     \u2502 \u2514\u2500\u2500 util-deprecate@1.0.2\n  \u2502 \u2502     \u2514\u2500\u2500 uid-number@0.0.6\n  \u2502 \u251c\u2500\u2500 glob-parent@2.0.0\n  \u2502 \u251c\u2500\u252c is-binary-path@1.0.1\n  \u2502 \u2502 \u2514\u2500\u2500 binary-extensions@1.8.0\n  \u2502 \u251c\u2500\u252c is-glob@2.0.1\n  \u2502 \u2502 \u2514\u2500\u2500 is-extglob@1.0.0\n  \u2502 \u2514\u2500\u252c readdirp@2.1.0\n  \u2502   \u2514\u2500\u2500 set-immediate-shim@1.0.1\n  \u251c\u2500\u252c compression@1.6.2\n  \u2502 \u251c\u2500\u2500 bytes@2.3.0\n  \u2502 \u251c\u2500\u2500 compressible@2.0.9\n  \u2502 \u251c\u2500\u252c debug@2.2.0\n  \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n  \u2502 \u2514\u2500\u2500 on-headers@1.0.1\n  \u251c\u2500\u2500 connect-history-api-fallback@1.3.0\n  \u251c\u2500\u2500 html-entities@1.2.0\n  \u251c\u2500\u252c http-proxy-middleware@0.17.3\n  \u2502 \u251c\u2500\u252c http-proxy@1.16.2\n  \u2502 \u2502 \u251c\u2500\u2500 eventemitter3@1.2.0\n  \u2502 \u2502 \u2514\u2500\u2500 requires-port@1.0.0\n  \u2502 \u251c\u2500\u252c is-glob@3.1.0\n  \u2502 \u2502 \u2514\u2500\u2500 is-extglob@2.1.1\n  \u2502 \u2514\u2500\u252c micromatch@2.3.11\n  \u2502   \u251c\u2500\u252c arr-diff@2.0.0\n  \u2502   \u2502 \u2514\u2500\u2500 arr-flatten@1.0.1\n  \u2502   \u251c\u2500\u2500 array-unique@0.2.1\n  \u2502   \u251c\u2500\u252c braces@1.8.5\n  \u2502   \u2502 \u251c\u2500\u252c expand-range@1.8.2\n  \u2502   \u2502 \u2502 \u2514\u2500\u252c fill-range@2.2.3\n  \u2502   \u2502 \u2502   \u251c\u2500\u2500 is-number@2.1.0\n  \u2502   \u2502 \u2502   \u251c\u2500\u2500 isobject@2.1.0\n  \u2502   \u2502 \u2502   \u2514\u2500\u2500 randomatic@1.1.6\n  \u2502   \u2502 \u251c\u2500\u2500 preserve@0.2.0\n  \u2502   \u2502 \u2514\u2500\u2500 repeat-element@1.1.2\n  \u2502   \u251c\u2500\u252c expand-brackets@0.1.5\n  \u2502   \u2502 \u2514\u2500\u2500 is-posix-bracket@0.1.1\n  \u2502   \u251c\u2500\u2500 extglob@0.3.2\n  \u2502   \u251c\u2500\u2500 filename-regex@2.0.0\n  \u2502   \u251c\u2500\u252c kind-of@3.1.0\n  \u2502   \u2502 \u2514\u2500\u2500 is-buffer@1.1.4\n  \u2502   \u251c\u2500\u2500 normalize-path@2.0.1\n  \u2502   \u251c\u2500\u252c object.omit@2.0.1\n  \u2502   \u2502 \u251c\u2500\u252c for-own@0.1.4\n  \u2502   \u2502 \u2502 \u2514\u2500\u2500 for-in@0.1.6\n  \u2502   \u2502 \u2514\u2500\u2500 is-extendable@0.1.1\n  \u2502   \u251c\u2500\u252c parse-glob@3.0.4\n  \u2502   \u2502 \u251c\u2500\u2500 glob-base@0.3.0\n  \u2502   \u2502 \u2514\u2500\u2500 is-dotfile@1.0.2\n  \u2502   \u2514\u2500\u252c regex-cache@0.4.3\n  \u2502     \u251c\u2500\u2500 is-equal-shallow@0.1.3\n  \u2502     \u2514\u2500\u2500 is-primitive@2.0.0\n  \u251c\u2500\u252c opn@4.0.2\n  \u2502 \u2514\u2500\u252c pinkie-promise@2.0.1\n  \u2502   \u2514\u2500\u2500 pinkie@2.0.4\n  \u251c\u2500\u252c portfinder@1.0.13\n  \u2502 \u2514\u2500\u2500 async@1.5.2\n  \u251c\u2500\u252c serve-index@1.8.0\n  \u2502 \u251c\u2500\u2500 batch@0.5.3\n  \u2502 \u251c\u2500\u252c debug@2.2.0\n  \u2502 \u2502 \u2514\u2500\u2500 ms@0.7.1\n  \u2502 \u2514\u2500\u252c http-errors@1.5.1\n  \u2502   \u2514\u2500\u2500 setprototypeof@1.0.2\n  \u251c\u2500\u252c sockjs@0.3.18\n  \u2502 \u2514\u2500\u252c faye-websocket@0.10.0\n  \u2502   \u2514\u2500\u252c websocket-driver@0.6.5\n  \u2502     \u2514\u2500\u2500 websocket-extensions@0.1.1\n  \u251c\u2500\u252c sockjs-client@1.1.1\n  \u2502 \u251c\u2500\u252c eventsource@0.1.6\n  \u2502 \u2502 \u2514\u2500\u252c original@1.0.0\n  \u2502 \u2502   \u2514\u2500\u2500 url-parse@1.0.5\n  \u2502 \u251c\u2500\u2500 faye-websocket@0.11.1\n  \u2502 \u251c\u2500\u2500 json3@3.3.2\n  \u2502 \u2514\u2500\u252c url-parse@1.1.7\n  \u2502   \u2514\u2500\u2500 querystringify@0.0.4\n  \u251c\u2500\u252c spdy@3.4.4\n  \u2502 \u251c\u2500\u2500 handle-thing@1.2.5\n  \u2502 \u251c\u2500\u2500 http-deceiver@1.2.7\n  \u2502 \u251c\u2500\u2500 select-hose@2.0.0\n  \u2502 \u2514\u2500\u252c spdy-transport@2.0.18\n  \u2502   \u251c\u2500\u2500 hpack.js@2.1.6\n  \u2502   \u251c\u2500\u2500 obuf@1.1.1\n  \u2502   \u2514\u2500\u252c wbuf@1.7.2\n  \u2502     \u2514\u2500\u2500 minimalistic-assert@1.0.0\n  \u251c\u2500\u252c strip-ansi@3.0.1\n  \u2502 \u2514\u2500\u2500 ansi-regex@2.1.1\n  \u2514\u2500\u2500 supports-color@3.2.3. \n@joemcelroy I will try that, but thinking in commits matter, what is there that is not on 1.0.0-4 ? Because this started could work but real time project as is will not work.\nI forked 1.0.0-4 and applied some default usage isn't that starter-app ?\nI need sources, not only from npm and case is that after pulling out 1.0.0-4 and installing with those deps I get this error.\n\u279c  project git:(project-beta) npm list react\n/node_modules/searchkit/project\n\u2514\u2500\u2500 react@15.4.2. @joemcelroy  its ok. I've added alias resolve since my project build was inside searchkit working dir. @ssetem  isn't that you was working on ?. @ssetem the general case is that I need to filter through nested fields whitin different filtering components and build reliable query (filter) object which access specific path for this nested element.\n@ssetem by ID you mean \"id\" or \"field\" ? \nSee my mapping below:\n{\n  \"directory.v1\" : {\n    \"mappings\" : {\n      \"profile\" : {\n        \"properties\" : {\n          \"address\" : {\n            \"type\" : \"nested\",\n            \"properties\" : {\n              \"address\" : {\n                \"type\" : \"string\"\n              },\n              \"city\" : {\n                \"type\" : \"string\",\n                \"fields\" : {\n                  \"raw\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  }\n                }\n              },\n              \"country\" : {\n                \"type\" : \"string\",\n                \"fields\" : {\n                  \"raw\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  }\n                }\n              },\n              \"state\" : {\n                \"type\" : \"string\",\n                \"fields\" : {\n                  \"raw\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  }\n                }\n              }\n            }\n          },\n          \"company_name\" : {\n            \"type\" : \"string\",\n            \"fields\" : {\n              \"raw\" : {\n                \"type\" : \"string\",\n                \"index\" : \"not_analyzed\"\n              }\n            }\n          },\n          \"email\" : {\n            \"type\" : \"string\",\n            \"index\" : \"not_analyzed\"\n          },\n          \"events\" : {\n            \"type\" : \"nested\",\n            \"properties\" : {\n              \"categories\" : {\n                \"type\" : \"nested\",\n                \"properties\" : {\n                  \"ancestors\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  },\n                  \"level\" : {\n                    \"type\" : \"integer\"\n                  },\n                  \"order\" : {\n                    \"type\" : \"integer\"\n                  },\n                  \"value\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  }\n                }\n              },\n              \"id\" : {\n                \"type\" : \"integer\"\n              },\n              \"name\" : {\n                \"type\" : \"string\",\n                \"index\" : \"not_analyzed\"\n              },\n              \"opportunities\" : {\n                \"type\" : \"nested\",\n                \"properties\" : {\n                  \"attributes\" : {\n                    \"type\" : \"nested\",\n                    \"properties\" : {\n                      \"key\" : {\n                        \"type\" : \"string\",\n                        \"index\" : \"not_analyzed\"\n                      },\n                      \"name\" : {\n                        \"type\" : \"string\",\n                        \"fields\" : {\n                          \"raw\" : {\n                            \"type\" : \"string\",\n                            \"index\" : \"not_analyzed\"\n                          }\n                        }\n                      }\n                    }\n                  },\n                  \"category\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  },\n                  \"description\" : {\n                    \"type\" : \"nested\",\n                    \"properties\" : {\n                      \"description_field\" : {\n                        \"type\" : \"string\"\n                      }\n                    }\n                  },\n                  \"group\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  },\n                  \"key\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  },\n                  \"name\" : {\n                    \"type\" : \"string\",\n                    \"fields\" : {\n                      \"raw\" : {\n                        \"type\" : \"string\",\n                        \"index\" : \"not_analyzed\"\n                      }\n                    }\n                  }\n                }\n              },\n              \"participant_id\" : {\n                \"type\" : \"integer\"\n              },\n              \"primary_function\" : {\n                \"type\" : \"string\",\n                \"fields\" : {\n                  \"raw\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  }\n                }\n              },\n              \"profile_attributes\" : {\n                \"type\" : \"nested\",\n                \"properties\" : {\n                  \"business_certification\" : {\n                    \"properties\" : {\n                      \"attributes\" : {\n                        \"type\" : \"nested\",\n                        \"properties\" : {\n                          \"key\" : {\n                            \"type\" : \"string\",\n                            \"index\" : \"not_analyzed\"\n                          }\n                        }\n                      },\n                      \"category\" : {\n                        \"type\" : \"string\"\n                      }\n                    }\n                  },\n                  \"product_certs\" : {\n                    \"properties\" : {\n                      \"attributes\" : {\n                        \"type\" : \"nested\",\n                        \"properties\" : {\n                          \"key\" : {\n                            \"type\" : \"string\",\n                            \"index\" : \"not_analyzed\"\n                          }\n                        }\n                      },\n                      \"category\" : {\n                        \"type\" : \"string\"\n                      }\n                    }\n                  }\n                }\n              },\n              \"role\" : {\n                \"type\" : \"nested\",\n                \"properties\" : {\n                  \"name\" : {\n                    \"type\" : \"string\",\n                    \"index\" : \"not_analyzed\"\n                  }\n                }\n              }\n            }\n          },\n          \"full_name\" : {\n            \"type\" : \"string\",\n            \"fields\" : {\n              \"raw\" : {\n                \"type\" : \"string\",\n                \"index\" : \"not_analyzed\"\n              }\n            }\n          },\n          \"phone\" : {\n            \"type\" : \"string\"\n          },\n          \"title\" : {\n            \"type\" : \"string\"\n          },\n          \"update_time\" : {\n            \"type\" : \"long\"\n          },\n          \"url\" : {\n            \"type\" : \"string\"\n          }\n        }\n      }\n    }\n  }\n}. @ssetem it does not seem this works as expected. I'm reconsidering flattening structure. . Yes, I had this before. Seems like typescript version missmatch. \nI've pruned and reinstalled all deps so it cannot be reproduced.. Deps update worked well.. Another bad depedency. . @joemcelroy Ok, I'm closing this PR. This produces error: post_filter was not build correctly - instead of that it is impossible to wrap BoolMust([])  with single element. I had to put manually\n{\n    bool:{\n        must: head(elements)\n   }\n}\nwhen multiple elements works correctly with only return BoolMust(elements);. @ssetem Great! let me do a proposal. ",
    "rohit-raj": "@GregoryPotdevin \nI am using the following filters:\nMenuFilter\nDynamicRangeFilter\nRefinementListFilter\n<Hits\n   mod=\"sk-hits-grid\" hitsPerPage={6} listComponent={this.hitsGridItem}\n   sourceFilter={['title', 'status', 'academics']}\n/>\n<SearchBox\n    autofocus\n    searchOnChange\n    placeholder=\"Search...\"\n    prefixQueryFields={['status^2', 'title^10']}\n    name=\"page\"\n   queryFields={['type']}\n />\nIs there any problem with the component or filters that I am using ?\n. @ssetem No, I am using it just once.\n. I have added the search page implementation and the package json. \n. I have figured out the issue, it is due to server rendering.\ncomponentWillMount () {\n    if (!isServer()) {\n      this.sKit = new SearchkitManager(ELASTICSEARCH_URL);\n      this.sKit.addDefaultQuery((query)=> {\n        return query.addQuery(FilteredQuery({\n          filter:BoolShould([\n            TermQuery(\"status\", 1)\n          ])\n        }));\n      });\n    } else {\n      this.sKit = new SearchkitManager(ELASTICSEARCH_URL, {\n        useHistory: false,\n      });\n    }\n  }\nchecking the env as server we need to render the useHistory as false.\n. @ssetem I am facing one more issue with respect to the history. the url generated after searching or filtering, if copied and pasted to another window will fetch the same result but in my case it is not. \nin SearchkitManager.js\nSearchkitManager.prototype.listenToHistory = function () {\n        var _this = this;\n        var callsBeforeListen = (this.options.searchOnLoad) ? 1 : 2;\n        this._unlistenHistory = this.history.listen(after(callsBeforeListen, function (location) {\n            //action is POP when the browser modified\n            if (location.action === \"POP\") {\n                _this.registrationCompleted.then(function () {\n                    _this.searchFromUrlQuery(location.query);\n                }).catch(function (e) {\n                    console.error(e.stack);\n                });\n            }\n        }));\n    };\n_this.registrationCompleted is not getting resolved during first loading and during url hit with query parameters.\n. @ssetem When I am trying to use MenuFilter, it is working with listComponent as ItemHistogramList but not with any other option, I have imported the other options that it supports but still the issue persist.\n. @ssetem I am not able to understand whether the curent is dependent on [URGENT] issue or not. Once I figured the way out of the main issue, I ended up in this.\nPlease suggest if I need to open a new issue or is this fine .\n. @ssetem They simply doesn't work, without any error, do not respond on selected item.\nPFA the file in zip. \nPlease let me know if any thing is required\n. @tengis, this is happening because your version of react js is different than of the searchkit.\nsoln:\n- fork the searchkit to your account\n- change the version of react js in searchkit's package json as in your project\n- remove the lib from gitignore\n- push it to your account\n- import this version from your repo with your hashid to your project's package json\nAlong with this, your searchkit should not communicate to the store, if you are creating one.\nInvoke the searchkit only to the client side, you can refer my code above, I am bypassing the server rendering.\n. Hi @chrisfinch ,\nI have already posted the solution above in the chain. Please refer it. Do let me know if you still face the same issue after working out the solution.. @chrisfinch ,\nI think, you might refer to my forked repo, because I faced some react js version incompatibility during the implementation.\nYou can check the react js versions of searchkit and your project. This was the problem which I encountered. Along with that I had to stop server rendering, hence it fixed my issue. (!isServer)\nI see that you are not checking the server rendering in your code. Please check it. \nAlso, saw your new issue, in which Ash has been working on server rendering part of searchkit. Actually this is the problem base. When searchkit will have a new build, I think this must be solved.. ",
    "tengis": "Hi guys,\nI'm also experiencing same issue.  _this.registrationCompleted is not getting resolved during first load.\n. ",
    "astanway": "nvm - I had incorrectly set the ES mapping.\n. ",
    "cvinson": "@joemcelroy @ssetem \nAny advice on how to proceed with the failing test? It is caused by a mismatch in how enzyme and react render whitespace in the inline style tag for the slider component.\n. ",
    "gabriprat": "Some spaces were missing in the test. I added them and created a new pull request: #370 . ",
    "alx": "Just in case someone needs a copy/paste:\n// Override default 5s timeout with 20s timeout\nimport {AxiosESTransport} from \"searchkit\";\nAxiosESTransport.timeout = 20000;\n. There is this searchkit-daterangefilter component available:\nhttps://github.com/GregoryPotdevin/searchkit-daterangefilter/\n. ",
    "aquaristar": "Can you please explain more detail? I am using now webpack.\n. ",
    "fabarea": "I faced this problem as well and could resolved it by adding into my webpack config file the lines bellow. To my understanding, it tells webpack to load only the first encountered react version and be \"satisfied\" with it - instead of loading multiple versions per package requirements e.g  searchkit requires a react 0.14.\nresolve: {\n        ...\n        alias: {\n            react: path.resolve('./node_modules/react')\n        }\n    },\n. I found the problem. It was somehow connected with React 15 compatibility. I could solve it by adding in my webpack config file.\nresolve: {\n        ...\n        alias: {\n            react: path.resolve('./node_modules/react')\n        }\n    },\n. ",
    "nikieshady": "when i click in one filter appears in console\n\"type: parsing_exception, reason: Unknown key for a START_OBJECT in [filter]...\"\n. ",
    "sebolek": "I'm having exact same issue \"Unknown key for a START_OBJECT in [filter].\" any update on this yet?. ",
    "LucaWintergerst": "I just pushed a PR for the filter issue.\nhttps://github.com/searchkit/searchkit/pull/363\nYou can change the file yourself until the PR is accepted.\nDisclaimer: I did not test all scenarios, I really only tested the faceting since that was something I was working on right now. Thanks for taking over \ud83d\udc4d . Thank you as well. I just added this as quick fix and tested this myself with faceting.\nSince it is the exact same thing in Elasticsearch, nothing should break. ",
    "Marina-Miranovich": "Hi @infacq @GregoryPotdevin , \nActually i faced with the same challenge and noticed that you could actually create your own React component and pass to rangeComponent attribute in RangeFilter. To perform search - call this.props.onFinished\nI created a small example app to show how it works https://github.com/Marina-Miranovich/searchkit-date-picker\n. ",
    "aliceriot": "It looks like it will! We're getting build failures on Heroku related to this problem now, so it would be :100: to see that get merged.. @sadovnychyi can confirm that there is a bug with pagination in the current @latest release - we ran into it and ended up patching the <Pagination /> component to fix it.\nOur fix is here:\nhttps://github.com/mitodl/micromasters/pull/2337/files. ",
    "thenayr": "Same issue here,  anyway to override the aggregate name?. Is there an official changelog or discussion centered around the 1.0.0 launch?  I'm happy to test out the beta 7, but a summary of changes from earlier versions would be super helpful. . ",
    "GibranPolonsky": "Is there support for React-Native?. ",
    "schermannj": "Anything new on this? . @ElviraCB have the same after migration to elasticsearch 6.2. ",
    "Sundin": "+1. ",
    "jayshah123": "The core can be used independent of react components for react-native.\nI see the core depends on axios for transport which is well supported in react-native. (https://facebook.github.io/react-native/docs/network.html#using-other-networking-libraries).. Was not able to build code at any of the present tags(due to typescript erros). Works like a charm. Thanks!\nI'll update any progress regarding use in react native in https://github.com/searchkit/searchkit/issues/357.. ",
    "pcolmer": "It is actually \"sudo npm install searchkit --save\" but leaving \"--save\" off doesn't make any difference.\n. Thanks - that was it. Ubuntu ships (by default) with a really old version of npm. After updating it and nodejs, I've managed to get searchkit to install.\n. ",
    "sadovnychyi": "Hot fix until this is merged:\njavascript\nsearchkit.setQueryProcessor((plainQueryObject) => {\n  if (plainQueryObject.filter != undefined) {\n    // hot fix for ES5\n    plainQueryObject.post_filter = plainQueryObject.filter\n    delete plainQueryObject.filter\n  }\n  return plainQueryObject\n}). Possible regression in pagination (due to lodash update?).\njavascript\nget(this.getResults(), \".hits.total\", 1)\nYou will always get default value here because of the dot as a prefix. This one works correctly:\njavascript\nget(this.getResults(), \"hits.total\", 1)\nhttps://github.com/searchkit/searchkit/blob/develop/src/components/search/pagination/src/Pagination.tsx#L81. @aliceriot Yep, I actually have most of components I use patched in this way, good thing it's easy with React :). https://github.com/rollup/rollup-plugin-commonjs/issues/105.. @ssetem Well for example for RefinementFilter with Tabs I had to make a global aggregation filtering it by whole current query except the filter produced by itself. So yeah, it's definitely not a simple fix.. ",
    "deanthemachine": "Figured it out! If anyone else is confused, here's the example I'm using:\n```\nconst customQueryBuilder = (query, options) => {\nreturn {\n    \"bool\": {\n        \"should\": [\n            { \n                    \"query_string\": {\n                    \"query\": query\n            }\n        }, \n        {\n            \"has_child\": {\n                \"type\": \"file\",\n                \"query\": {\n                \"query_string\": {\n                \"query\": query\n                }\n        },\n        \"inner_hits\" : {\"size\":5,\n\n          \"highlight\":{\n\"require_field_match\": false,\n\"fields\":{\n  \"*\":{}\n\n}\n},\n\"_source\": {\"excludes\": [ \"attachment.content\" ]}\n        }\n            }\n        }\n    ]\n}\n}\n\n}\n```\nand this:\n<SearchBox\n                  autofocus={true}\n                  searchOnChange={false}\n                            placeholder=\"Search stuff...\"\n                    queryBuilder={customQueryBuilder}\n                  />. ",
    "yih-en": "Thanks:). ",
    "ThaDafinser": "Please not...\nhttps://en.wikipedia.org/wiki/Internet_Explorer_9#Release_history. I wanted to try out 1.0.0-4 with the https://github.com/searchkit/searchkit-boilerplate code.\nThen i could test ES 5.1.1 or 5.2.0 - but i couldn't got it running until yet.\nReceiving those errors:\nWarning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `SearchPage`.\nUncaught Error: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: undefined. You likely forgot to export your component from the file it's defined in. Check the render method of `SearchPage`.\nv1.0.0-3 does work\nAs soon as 1.0.0-4 does work (with a guid or boilerplate) i would be happy to help out testing with ES 5.1/5.2. I just updated and its seems to work generally really well :+1: \nOne small issue i get with the HierarchicalMenuFilter.\nWhen i dont set something like size={10} i get the following error\n\n\n. @mhilaire \n1) npm install -g create-react-app\n2) create an empty directory and browse to it\n3) git clone https://github.com/searchkit/searchkit.git .\n4) npm install\n  WARNING! currently 1.0.0-5 will be installed...you may modify it to the latest version\n5) npm start\n6) magic starts in your browser :smile: . @sayeeguru u need to post at least:\n- what you did\n- where you stand\n- what is your failure\nThat anybody can help u. Please open a seperate issue.\nAnd I won't be able to help you - please check https://upthemes.com/blog/2014/02/writing-useful-github-issues/\nI ask\n\nwhat is your failure\n\nYou are writing\n\nand ran into another issues.\n. @leandermelms you do this step at the indexing. So this will work with searchkit out of the box then. http://stackoverflow.com/questions/41285790/what-differs-between-post-filter-and-global-aggregation-for-faceted-search?answertab=active#tab-top\nhttps://www.elastic.co/blog/found-optimizing-elasticsearch-searches. Just use a wildcard or \",\"\n\ne.g.\nmy_index_1\nmy_index_2\nyou can do:\nmy_index_*\nor\nmy_index_1,my_index2. ",
    "coveralls": "\nCoverage decreased (-1.007%) to 96.65% when pulling aee914d109aadcdd7907f5c402054e12a29a4925 on feature/react-15 into f59f28398928c47ef0ec3b25706c224b008766b5 on develop.\n. \n\nCoverage decreased (-0.7%) to 96.961% when pulling 38e7f8fa5162810b85da5f6389ac08fd7fb24f6f on feature/react-15 into f59f28398928c47ef0ec3b25706c224b008766b5 on develop.\n. \n\nCoverage decreased (-2.2%) to 95.452% when pulling dc4432856eaac0e4b69cc2edb79bf0417af2470e on feature/react-15 into f59f28398928c47ef0ec3b25706c224b008766b5 on develop.\n. \n\nCoverage decreased (-2.03%) to 95.628% when pulling 6aeb0308c3faf2a258d821d66a1b5bb40e429d50 on feature/react-15 into f59f28398928c47ef0ec3b25706c224b008766b5 on develop.\n. \n\nCoverage decreased (-2.03%) to 95.628% when pulling 2505a69e1119c0b991e7d64cb6c3bc75cf9c90c9 on feature/react-15 into f59f28398928c47ef0ec3b25706c224b008766b5 on develop.\n. \n\nCoverage increased (+0.004%) to 96.291% when pulling 75a3e5a02e585189431c58b680870b0be94f905c on feature/qs-upgrade into a88d5a3eb989daa5462dd4efcff1fbd366d2baf0 on develop.\n. \n\nCoverage increased (+0.004%) to 96.291% when pulling 75a3e5a02e585189431c58b680870b0be94f905c on feature/qs-upgrade into a88d5a3eb989daa5462dd4efcff1fbd366d2baf0 on develop.\n. \n\nCoverage increased (+0.004%) to 96.291% when pulling 75a3e5a02e585189431c58b680870b0be94f905c on feature/qs-upgrade into a88d5a3eb989daa5462dd4efcff1fbd366d2baf0 on develop.\n. \n\nCoverage increased (+0.004%) to 96.291% when pulling 75a3e5a02e585189431c58b680870b0be94f905c on feature/qs-upgrade into a88d5a3eb989daa5462dd4efcff1fbd366d2baf0 on develop.\n. \n\nCoverage increased (+0.02%) to 96.308% when pulling 1b4de4719346a1703a6ce86e7e08b76529bd1791 on history_updates into 19bb6f0f85e082d053233363074fc7c4323b7713 on develop.\n. \n\nCoverage increased (+0.02%) to 96.308% when pulling 1b4de4719346a1703a6ce86e7e08b76529bd1791 on history_updates into 19bb6f0f85e082d053233363074fc7c4323b7713 on develop.\n. \n\nCoverage increased (+0.02%) to 96.308% when pulling 1b4de4719346a1703a6ce86e7e08b76529bd1791 on history_updates into 19bb6f0f85e082d053233363074fc7c4323b7713 on develop.\n. \n\nCoverage increased (+0.02%) to 96.308% when pulling 1b4de4719346a1703a6ce86e7e08b76529bd1791 on history_updates into 19bb6f0f85e082d053233363074fc7c4323b7713 on develop.\n. \n\nCoverage decreased (-0.01%) to 96.308% when pulling d3d450fe195e922b9792c31a54382bdf28e6ee55 on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage decreased (-0.01%) to 96.308% when pulling d3d450fe195e922b9792c31a54382bdf28e6ee55 on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage decreased (-0.01%) to 96.308% when pulling d3d450fe195e922b9792c31a54382bdf28e6ee55 on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage decreased (-0.01%) to 96.308% when pulling d3d450fe195e922b9792c31a54382bdf28e6ee55 on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling b294ff70eaf430789267840e0044ca6fd65b5b9b on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling b294ff70eaf430789267840e0044ca6fd65b5b9b on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling b294ff70eaf430789267840e0044ca6fd65b5b9b on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling b294ff70eaf430789267840e0044ca6fd65b5b9b on docbook_fixes into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling 5cdf3cd490d16c818a2651f61eefa0a016196fe3 on docbook_updates into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling 5cdf3cd490d16c818a2651f61eefa0a016196fe3 on docbook_updates into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling 5cdf3cd490d16c818a2651f61eefa0a016196fe3 on docbook_updates into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage remained the same at 96.318% when pulling 5cdf3cd490d16c818a2651f61eefa0a016196fe3 on docbook_updates into 86754921386dbcfeda0a6a962a022916054d0b9f on develop.\n. \n\nCoverage increased (+0.06%) to 96.397% when pulling 39e272f06f3ca6079a0828ca052aa5d00fee03e9 on universal into 68315ab464d370e28c0b642048c1b0156b4f0e24 on develop.\n. \n\nCoverage increased (+0.06%) to 96.397% when pulling 39e272f06f3ca6079a0828ca052aa5d00fee03e9 on universal into 68315ab464d370e28c0b642048c1b0156b4f0e24 on develop.\n. \n\nCoverage increased (+0.06%) to 96.397% when pulling 39e272f06f3ca6079a0828ca052aa5d00fee03e9 on universal into 68315ab464d370e28c0b642048c1b0156b4f0e24 on develop.\n. \n\nCoverage increased (+0.06%) to 96.397% when pulling 39e272f06f3ca6079a0828ca052aa5d00fee03e9 on universal into 68315ab464d370e28c0b642048c1b0156b4f0e24 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0a7cdeaf028a2cf4b31cb98e7bc4725040afefe6 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0a7cdeaf028a2cf4b31cb98e7bc4725040afefe6 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0a7cdeaf028a2cf4b31cb98e7bc4725040afefe6 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0a7cdeaf028a2cf4b31cb98e7bc4725040afefe6 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0c504d9f9fe5b6f1fd3bf9d8f1d2141dd55e7a96 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0c504d9f9fe5b6f1fd3bf9d8f1d2141dd55e7a96 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0c504d9f9fe5b6f1fd3bf9d8f1d2141dd55e7a96 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage decreased (-0.1%) to 96.291% when pulling 0c504d9f9fe5b6f1fd3bf9d8f1d2141dd55e7a96 on react16-compat into 40a39e2d055f270d3157d5376e9f1f9ae40002a2 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 3374003bd863757e1e77561f384b7cbd90ed1bea on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 3374003bd863757e1e77561f384b7cbd90ed1bea on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 3374003bd863757e1e77561f384b7cbd90ed1bea on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 3374003bd863757e1e77561f384b7cbd90ed1bea on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 7e60575b3fecfff41951d335193dd1dd67bddaee on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 7e60575b3fecfff41951d335193dd1dd67bddaee on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 7e60575b3fecfff41951d335193dd1dd67bddaee on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.1%) to 96.405% when pulling 7e60575b3fecfff41951d335193dd1dd67bddaee on build-updates into 689737cec96c762f3da417ffe190c8653ec4f285 on develop.\n. \n\nCoverage increased (+0.007%) to 96.412% when pulling 8867906243c3efd314b9cdfd0fe553bd4efdbb6e on boolean-agg-type-fix into 28670a124f112e07b82b2e41a424d2669849a007 on develop.\n. \n\nCoverage increased (+0.007%) to 96.412% when pulling 8867906243c3efd314b9cdfd0fe553bd4efdbb6e on boolean-agg-type-fix into 28670a124f112e07b82b2e41a424d2669849a007 on develop.\n. \n\nCoverage increased (+0.007%) to 96.412% when pulling 8867906243c3efd314b9cdfd0fe553bd4efdbb6e on boolean-agg-type-fix into 28670a124f112e07b82b2e41a424d2669849a007 on develop.\n. \n\nCoverage increased (+0.007%) to 96.412% when pulling 8867906243c3efd314b9cdfd0fe553bd4efdbb6e on boolean-agg-type-fix into 28670a124f112e07b82b2e41a424d2669849a007 on develop.\n. \n\nCoverage increased (+0.01%) to 96.414% when pulling 7c6234e761c76344942fd428b53c5d4d8f500ccd on formatting_translate_fixes into d6165ba053d9a4a8e867c019f85667f91c06ddfd on develop.\n. \n\nCoverage increased (+0.01%) to 96.414% when pulling 7c6234e761c76344942fd428b53c5d4d8f500ccd on formatting_translate_fixes into d6165ba053d9a4a8e867c019f85667f91c06ddfd on develop.\n. \n\nCoverage increased (+0.01%) to 96.414% when pulling 7c6234e761c76344942fd428b53c5d4d8f500ccd on formatting_translate_fixes into d6165ba053d9a4a8e867c019f85667f91c06ddfd on develop.\n. \n\nCoverage increased (+0.01%) to 96.414% when pulling 7c6234e761c76344942fd428b53c5d4d8f500ccd on formatting_translate_fixes into d6165ba053d9a4a8e867c019f85667f91c06ddfd on develop.\n. \n\nCoverage decreased (-0.005%) to 96.323% when pulling d771f30a478b4b4bea1bf9c23e272b6c6156a391 on typescript_fixes into fb95b6aae95b67d95c0c4727eba61b032cdd8246 on develop.\n. \n\nCoverage decreased (-0.005%) to 96.323% when pulling d771f30a478b4b4bea1bf9c23e272b6c6156a391 on typescript_fixes into fb95b6aae95b67d95c0c4727eba61b032cdd8246 on develop.\n. \n\nCoverage decreased (-0.005%) to 96.323% when pulling d771f30a478b4b4bea1bf9c23e272b6c6156a391 on typescript_fixes into fb95b6aae95b67d95c0c4727eba61b032cdd8246 on develop.\n. \n\nCoverage decreased (-0.005%) to 96.323% when pulling d771f30a478b4b4bea1bf9c23e272b6c6156a391 on typescript_fixes into fb95b6aae95b67d95c0c4727eba61b032cdd8246 on develop.\n. \n\nCoverage decreased (-0.005%) to 96.326% when pulling 94e63e673856cb47e6eb73d84ef4ee64d8dfe4a6 on typescript_fixes into 8b40320fae8f42ebdbb8c9e8723ba3f52cf93ae3 on develop.\n. \n\nCoverage decreased (-0.005%) to 96.326% when pulling 94e63e673856cb47e6eb73d84ef4ee64d8dfe4a6 on typescript_fixes into 8b40320fae8f42ebdbb8c9e8723ba3f52cf93ae3 on develop.\n. \n\nCoverage decreased (-0.005%) to 96.326% when pulling 94e63e673856cb47e6eb73d84ef4ee64d8dfe4a6 on typescript_fixes into 8b40320fae8f42ebdbb8c9e8723ba3f52cf93ae3 on develop.\n. \n\nCoverage decreased (-0.005%) to 96.326% when pulling 94e63e673856cb47e6eb73d84ef4ee64d8dfe4a6 on typescript_fixes into 8b40320fae8f42ebdbb8c9e8723ba3f52cf93ae3 on develop.\n. \n\nCoverage remained the same at 98.691% when pulling 8dc4902eca4b3284180eb0d0a9321c293c654354 on pixcai:develop into 1bda358265fc07e8fff3798ee5f0decb1bf230ec on searchkit:develop.\n. \n\nCoverage remained the same at 98.691% when pulling ad075b28547effdd2c59002cd1f6182cd2fa0fc3 on pixcai:develop into 1bda358265fc07e8fff3798ee5f0decb1bf230ec on searchkit:develop.\n. \n\nCoverage remained the same at 98.691% when pulling 345d28b1dbde94f3019970dd673f4294cd49e8a3 on pixcai:develop into 8fa6c17ca879df171e920d46e71d1f91dda2f244 on searchkit:develop.\n. \n\nCoverage remained the same at 98.691% when pulling 49925b455723c47b49c283e4ebfb14c01c84895d on lib_fix into 1bda358265fc07e8fff3798ee5f0decb1bf230ec on develop.\n. \n\nCoverage remained the same at 98.691% when pulling 464e49dfb1eb8d6cf4b63ece551fbf78e50a6d66 on lib_fix into 1bda358265fc07e8fff3798ee5f0decb1bf230ec on develop.\n. \n\nCoverage remained the same at 98.691% when pulling cbf3c23634d6ac91a1819a7247522b6b77624a11 on kud:patch-1 into a19285ed6b3fde7695be2e2d8b2a019350d132c7 on searchkit:develop.\n. \n\nCoverage decreased (-0.002%) to 98.691% when pulling a797a389fa2c4053739c61ec2b578370400ffb39 on LukasDrgon:patch-1 into 61c7d0e52d4334516120af335588ab77df81a0b2 on searchkit:develop.\n. \n\nCoverage decreased (-0.003%) to 98.69% when pulling 17c6a9929506754d200081f81b77123031424210 on hierarchical_fixes into 847463d807ab2f9aa7a31adfab156cb09754c5fe on develop.\n. \n\nCoverage decreased (-0.4%) to 97.201% when pulling c0327c57b8d91c298f0f7dbf3de3a65c01798a1c on trekhleb:master into 754ab1be00f0ea64e825d40e1c847038492735dd on searchkit:master.\n. \n\nCoverage remained the same at 98.69% when pulling 110d8f31feb153e14773ce76dd2710438e167359 on release/v2.3.0 into 8b26b0a1da60572d6c313b1077fdfdf1a97c487a on develop.\n. \n\nCoverage remained the same at 98.69% when pulling c3bc51baaeae9847cb2ad5d7d0b74689743288d7 on Xrampino:develop into e0df076a956ab4776b093a57b51ab1f27928d5d8 on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling d854b1524d9d1abcda97272813725b29e1f72873 on kud:update-docs into 97da842cf71324e13e9791471031361e1c57768a on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 197218ef93e211be5fc8d3976cba33d0be6bf181 on kud:update-docs into 97da842cf71324e13e9791471031361e1c57768a on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 730da89589f0f636511e1e996656ef2ef320038b on kud:update-docs into 97da842cf71324e13e9791471031361e1c57768a on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 730da89589f0f636511e1e996656ef2ef320038b on kud:update-docs into 97da842cf71324e13e9791471031361e1c57768a on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling c43ee6edd0c0689e1384ae971593997bca82915e on kud:update-docs into 97da842cf71324e13e9791471031361e1c57768a on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling f500059fe0ede680421b48e42dd5affb33ca326e on kud:update-docs into 97da842cf71324e13e9791471031361e1c57768a on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 8336fa8e5d7d5055a40e72b6610937ebb4a0f462 on moersoy:develop into 6e308b31ff45fea0c1263601ca73c6f67628dd80 on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 8a4c1293e32fd47457f9c9325a8454bac7c6f14f on Quadric:update-changelog into 9cd00cd2d5ae444f56ae499e59f39938719fb8f2 on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 1ea4ec0203307289e61e571f9cceb2110746edba on mhelleboid:develop into ad876728c129959891a18c753dbccdb3db33212c on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 5a14d03f033814b62f51afb3d39f24508809f263 on Crop-R:global_css_definitions into ad876728c129959891a18c753dbccdb3db33212c on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 76efa2b00565377d04cc6d78a3632445f8393bb5 on richtera:develop into ad876728c129959891a18c753dbccdb3db33212c on searchkit:develop.\n. \n\nCoverage decreased (-0.07%) to 98.624% when pulling 70828bef40c57d71436d5f137fdd881dd76810a5 on richtera:develop into fefd99a0d3f2ba95bff0d565c5b53fe9937e14d2 on searchkit:develop.\n. \n\nCoverage increased (+1.04%) to 98.69% when pulling f41f296a432b3f1038076246b82fbfd855158122 on opencollective:opencollective into 754ab1be00f0ea64e825d40e1c847038492735dd on searchkit:master.\n. \n\nCoverage remained the same at 98.69% when pulling 4d7fdb2b35f0147ad949edc6c87c7f2eeeec332e on Financial-Times:include-array-limit-option-argument-qs-parse-call into fefd99a0d3f2ba95bff0d565c5b53fe9937e14d2 on searchkit:develop.\n. \n\nCoverage increased (+0.005%) to 98.694% when pulling 307dec411294046c28736d0dcc5f325eb690f838 on brunoAltinet:React-16-Compatibility into fefd99a0d3f2ba95bff0d565c5b53fe9937e14d2 on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 9f539e07d13af5e45c6b87306c0dd185e044c097 on kud:patch-1 into fefd99a0d3f2ba95bff0d565c5b53fe9937e14d2 on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling 7493c7e7006432f225ebb54796e245b0727a5dfb on kud:update-doc into fefd99a0d3f2ba95bff0d565c5b53fe9937e14d2 on searchkit:develop.\n. \n\nCoverage remained the same at 98.69% when pulling d2aa53ca1677f101b21b6965bce6e78ec0447134 on lasseborly:patch-1 into fefd99a0d3f2ba95bff0d565c5b53fe9937e14d2 on searchkit:develop.\n. ",
    "wangchuande": "Is there a method to change the size value?\nhttps://github.com/searchkit/searchkit/blob/master/src/core/accessors/NestedFacetAccessor.ts#L104. ",
    "arthurgimpel": "+1. ",
    "joepio": "I had a similar error.\nThis often means that multiple React instances were loaded. \nWe managed to solve this by explicitly importing one single version of react:\n```` javascript\n// In webpack.config.js\nresolve: {\n    alias: {\n      react: path.resolve('node_modules/react'),\n    },\n  },\n````\nEDIT1: adjusted path, inostia is right.\nEDIT2: However, importing React like this caused errors when building in testing environment. \nModule not found: ../../../node_modules/react.js in /home/runner/aod_demo/app/components/Dropdown\nEDIT3: I managed to fix Module not found in our testing environment by adding this environment variable: NODE_PATH : $(pwd)/node_modules/\n. ",
    "vincentfretin": "I got the same error some days ago where I had in package.json \"searchkit\": \"^1.0.0-4\" and it actually installed a old? version (in src: common, components, domain folders). Fixing \"searchkit\": \"1.0.0-4\" (without the ^) in package.json fixed the issue for me.. FYI lodash 4.17.5 reports security vulnerabilities.\nIf you're using yarn you can add to your package.json the following:\n\"resolutions\": {\n    \"searchkit/lodash\": \"^4.17.11\"\n  },\nto force using a more recent lodash version.. ",
    "arnvol": "@mbm-rafal did you find a solution for this other than flattening the structure? I'm also having a case where i need to combine terms from different fields in the same bool query.\nhttps://github.com/searchkit/searchkit/issues/592. Great, thanks voke! I read that section in the documentation but didn't realize it was possible to send the nested_path as an option. . Which version of searchkit are you using? Don't know if it's related but going from 2.2.0 to 2.3.0 introduced a problem for me. I'm using searchOnLoad, but in version 2.3.0 it doesn't search on load the second time I open the search view, in 2.2.0 it does. . Thanks a lot for your response Toksa! Sounds managable.. I need some more advice. \nI've extended RefineMentListFilter and added a custom Accessor (FilterBasedAccessor )\nIn buildSharedQuery in the accessor I'm adding a filter:\nquery = query.addFilter(this.uuid, {\n        bool: \n          {\n            must: [\n              {\n                nested: {\n                  path: 'details.parts',\n                  query: {\n                    bool: {\n                      must: [\n                        {\n                          term: { \"details.parts.size\": \"small\" } //Needs to be set from filterTerms? \n                        }\n                      ]\n                    }\n                  }\n                }\n              }\n            ]\n          }        \n      });\nThe QueryDSL with NestedQuery misplaced the nested part for my case so had to create object manually. So I have multiple custom RefinementListFilters. How would I add the next term. Only thing I can think of is to check for the existence of the filter and then try to add the next term as a sibliing to the first term. But this is ugly as hell, does anyone see a less ugly way to sew together the terms from multiple filters inside the must clause? Or just a completely different way of doing this :)\n. Hmm, should perhaps try to change the NestedQuery function so that it meets my needs. . ",
    "MyraBaba": "when we could expect :)  \n\nOn 25 Oca 2017, at 22:59, Joseph McElroy notifications@github.com wrote:\nThat's the plan for the next release :-)\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/searchkit/searchkit/issues/381#issuecomment-275216081, or mute the thread https://github.com/notifications/unsubscribe-auth/AQscn2dZbShkLe1rna6-TGHMoj3wYxTsks5rV6mMgaJpZM4Lt7WI.\n\n\n. any news for ES 5  support :). I will try..\nthere is only \n363\n\nquery.post_filter = BoolMust(this.index.filters)\n\nchanges as far as I saw.\nthx\n\nOn 14 \u015eub 2017, at 20:50, Joseph McElroy notifications@github.com wrote:\nThose changes were merged and released 1.0.0-4. Should be ready for you to try out!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/searchkit/searchkit/issues/381#issuecomment-279782316, or mute the thread https://github.com/notifications/unsubscribe-auth/AQscnz0zhlL2fJEgKrw1yMvQSIA5fn61ks5rcemDgaJpZM4Lt7WI.\n\n\n. bythe way have you any idea for :  \n382\nthx\n\nOn 14 \u015eub 2017, at 20:50, Joseph McElroy notifications@github.com wrote:\nThose changes were merged and released 1.0.0-4. Should be ready for you to try out!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub https://github.com/searchkit/searchkit/issues/381#issuecomment-279782316, or mute the thread https://github.com/notifications/unsubscribe-auth/AQscnz0zhlL2fJEgKrw1yMvQSIA5fn61ks5rcemDgaJpZM4Lt7WI.\n\n\n. any idea ?. ",
    "vanzi6": "NumericRefinementList works just fine. So simple. Thank you so much. \nI see that Selected Filters has an override exapmle. It would be nice to have a small example in the Checkbox Filter section too.. ",
    "radomirml": "It would be great to have better getting started docs. For someone without nodejs & company experience it's confusing. For example, it's not clear which version of npm (and other tools) is needed for 1.0 and startup instructions have been deleted from readme.\nDocumenting initial steps for dev setup, preferably with a recommended Vagrant image having required dev tools (or instructions to install on a top of it) would be very helpful. . That's a great news! Looking forward to it. Thanks!. @joemcelroy Thanks! I plan to try it out during the weekend or early next week. Could you just clarify in document which version of npm (and possibly other tools) is required? . +1 for the searchkit-starter-app @joemcelroy, runs nicely. Thanks!. Thanks @ssetem , I've found similar approach:\nsearchkitInstance.getQueryAccessor().getQueryString()\n. ",
    "Wozacosta": "Nice @joemcelroy I'll also try this out this weekend.\nUpdate, so far on a small project based around an ES5.2 server, all seem to work fine.\nUsing node 7.3 / npm 4.2. ",
    "sayeeguru": "@ThaDafinser\nsteps are failing.. any secret to make it run?. Thanks ThaDafinser. I tried https://github.com/searchkit/searchkit-starter-app, only challenge with my ES was due to CORS i fixed that and ran into another issues. My cluster is simple content and no image links. Is there a simple way to get this demo http://demo.searchkit.co/taxonomy, running?. ",
    "aabanaag": "Hi, I know this is closed but looking at gitter either I couldn't back track to the solution. I encountered the same error when adding SearchBox /> into my code. Its in meteor + react.. Thanks! \ud83d\udc4d \n. ",
    "florianbepunkt": "@ssetem Thank you!. Can someone from the Searchkit team help?. Thank you guys.. Hi @joemcelroy, no network errors. But I use server side rendering. ES 5.1. @ssetem I would like to have the hits and all apllied filters in my store. Can you give me a bare-bones example? . It seems that this behaviour happends if the RefinementListFilter component is unmounted.\nHaven't found this in the docs, but is this intentional? Unmounting an UI component should not modify the query in my opinion, especially since this is the React-recommended way for conditional items. Okay, in case anyone has the same problem. This is a rather hacky workaround and more of an react-antipattern, but seems like the only solution.\nThe problem is that unmounting a searchkit component does modify the query. So if you dynamically want to show hide filters in an own component, for example a modal that contains all filters, you would need to hide it without unmounting it.\nThis is a HOC that would get a ref to a component that would show/hide it via css style. This makes use of the new React ref api (>= 16.3), but you could backport it to use the former way to create refs.\nBesides IMO there should be an option to disable the current behaviour (which seems like an anti-pattern in itself)\n```\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nexport default class ReactNoUnmountHide extends Component {\n  constructor() {\n    super();\nthis.ref = React.createRef();\n\n}\ntoggle(value) {\n    this.dom.style.display = value ? null : \"none\";\n  }\ncomponentDidMount() {\n    this.dom = ReactDOM.findDOMNode(this.ref.current);\n    this.toggle(this.props.value);\n  }\ncomponentWillReceiveProps(nextProps) {\n    if (nextProps.value !== void 0) {\n      this.toggle(nextProps.value);\n    }\n  }\nrender() {\n    return React.cloneElement(this.props.children, { ref: this.ref });\n  }\n}\n```. Also facing this issue. Will ES6 be supported by searchkit?. ",
    "davireis": "CLA signed.. ",
    "aleybovich": "Guys, how do I enable withCredentials in my code?. New release v2.1.1 has the latest version of rc-slider. . Ok, digging deeper, I found the bug in searchkit code causing withCredentials getting lost. SearchkitManager.ts line 70:\nthis.transport = this.options.transport || new AxiosESTransport(host, {\n      headers:this.options.httpHeaders,\n      basicAuth:this.options.basicAuth,\n      searchUrlPath:this.options.searchUrlPath,\n      timeout: this.options.timeout\n    })\nAs you see, withCredentials value doesn't get passed to axios. Can you please fix it?. I created a pull request for the issue, please review and merge it. @joemcelroy - Thank you. Any ideas when is this code fix going to be released? I.e. when are you releasing the next version?. They have, get the latest version. It works fine for me now\nOn Jul 31, 2017 9:49 AM, \"Chris Finch\" notifications@github.com wrote:\n\n\ud83d\udc4d also having this issue - any plans for a release?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/481#issuecomment-319072484,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAkqkU8iRbwU4ll6FRuFvm-Qq5EyrVUsks5sTduBgaJpZM4OSmFR\n.\n. \n",
    "sheilagithub": "Any updates on this?  Is there a workaround?. ",
    "Alfreddd": "Just a note, the issue is not just limited to RefinementListFilter but also MenuFilter.\nexample of using the component that when selecting an item from the list yields the error\n<Searchkit.MenuFilter\n    field=\"actors.name\"\n    fieldOptions={{\"type\":\"nested\", \"options\": {\"path\":\"actors\"}}}\n    title=\"Actors\"\n    listComponent={Searchkit.Select}\n    id=\"type\"/>. Brilliant!. Any news on a beta release coming soon ?. Thanks!. ",
    "leanderme": "Thanks, this was what I was looking for!. Thank you!. ",
    "singingwolfboy": "How would FastClick be able to reliably determine if there was an event dispatched by mousedown, when deciding whether or not to swallow a click event? If your concern is about performance, I would expect that holding on to prior events is going to cause a performance penalty.\nThere's also a nice usability perk that comes from using the click event instead of the mousedown event -- the user can mousedown on an element, change their mind, move the mouse off the element, and then release the mouse in order to cancel the impending event. It's a little thing, but it's a bit disappointing that you can't do that with the way you've implemented FastClick.\nI guess my question is, why is speed so important in this case? I agree that performance is an important metric, but not to the extent that it negates others like usability and accessibility.. The way I see it, the two options are:\n\nSqueeze out a tiny bit more performance, at the expense of making Searchkit inaccessible to keyboard users\nMake Searchkit accessible to everyone, at the expense of a tiny bit of performance\n\nI believe that accessibility matters. I want to stress that performance matters as well! However, performance will not meaningfully suffer if we use the click event instead of mousedown. Accessibility will meaningfully suffer if we use mousedown instead of click.\nIf you want to make this a configurable option, then we can do that, but even in that case, defaults matter. And the question that I'm trying to ask is, should Searchkit be accessible to everyone by default? I believe that it should. (And personally, I don't know why you would intentionally turn that off, but I'm willing to believe that someone might decide to make that trade-off.). @ssetem I would be happy to send a pull request, after we decide what the best course of action is here. I don't want to spend several hours writing code and modifying tests, only for us to decide that we need to do something different. Can you elaborate on your backwards compatibility concerns?\n@joemcelroy That works. Can you describe a mechanism for how users might opt in for this feature? I can follow that example when making a pull request.\nAlternatively, if one of you wants to make this change instead of waiting for my pull request, that's perfectly fine with me. \ud83d\ude04 . ",
    "MarttiR": "FastClick seems to be quite problematic on mobile: I have users finding search filters hard to use because they are \"too sensitive\". I agree, it's almost impossible to touch-scroll past the filters without accidentally activating something, which makes for a frustrating user experience.\nI'm also seeing behavior where content inside the Hits component gets selected when user clicks on a Pagination button. This doesn't happen every time, though; it seems that sometimes a render manages to happen entirely after mousedown but before mouseup, in effect making the browser think that the user dragged the mouse to select text.\nIf the only reason for using FastClick is mobile performance, and if that performance can also be achieved using <meta name=\"viewport\" content=\"width=device-width\">, there should be a way to completely disable FastClick and/or hand in a plain click handler. The site I'm working on already uses that particular viewport setting anyway, as any modern sites should, so FastClick seems to be a solution to a non-problem.\nIn any case, using a different component for \"mobile\" and another for \"desktop\" sounds a bit magical and scary. Making this choice explicit by design and not automatic by default would probably be more predictable and thus more developer-friendly.. @timmetj Check out the test app, it does have a working datepicker out-of-the-box!\nI'll see about creating a separate package for the component(s). There's some work involved for it to be maintainable and I'm a bit starved for resources right now, so it might take until next week.. @timmetj Sorry, I should have been more explicit. It's this one: https://github.com/MarttiR/searchkit/tree/date-range-filtering/test/e2e/server/apps/calendar-app. A package is now available in npm: npm install --save-dev searchkit-datefilter. \nPull requests are welcome!\nhttps://www.npmjs.com/package/searchkit-datefilter\nhttps://github.com/MarttiR/searchkit-datefilter. scrollTo now accepts Function as well, and in that case leaves scrolling entirely up to the user.\nExample:\nscrollTo={() => {\n  document.body.scrollTop = 100;\n}}. ",
    "saracook": "Is there a way to turn off FastClick, even if it's hacky?  . ",
    "giskarda": "\u2794  npm --version\n4.1.2\n\u2794\n...incredible amount of noise...\nweb-search@0.1.0 /Users/giskard/src/github.com/giskarda/totc/web-search\n\u2514\u2500\u252c searchkit@0.10.1\n  \u251c\u2500\u2500 qs@6.0.1  (git://github.com/ssetem/qs.git#fb2b80ac750fa375e0d69643adb0840e7e04d1d3)\n  \u2514\u2500\u2500 UNMET PEER DEPENDENCY react@0.14.8\nnpm WARN react-addons-update@0.14.8 requires a peer of react@^0.14.8 but none was installed.\nMy understanding from that line, but keep in mind I have no clue about how versioning is done via npm, is that the project requires a specific version of react instead of >= or maybe this is intentional and searchkit support only 0.14.8\n\u2794  npm list  | grep react\n\u251c\u2500\u252c react@15.4.2\n\u251c\u2500\u2500 react-dom@15.4.2\n\u251c\u2500\u252c react-scripts@0.9.5. can confirm I was able to install it using that specific release.. ",
    "wagger301": "npm version 4.1.2\nwhy was this closed? I've already tried installing the beta (npm install searchkit@1.0.0-7) and it still stops mid install and hangs.\nThe end of my log:\nnpm verb afterAdd ~/.npm/@types/react-router/2.0.49/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/react-dom@0.14.23\nnpm verb afterAdd ~/.npm/@types/react-dom/0.14.23/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/source-map@0.5.0\nnpm verb afterAdd ~/.npm/@types/source-map/0.5.0/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/jasmine@2.5.45\nnpm verb afterAdd ~/.npm/@types/jasmine/2.5.45/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/enzyme@2.7.5\nnpm verb afterAdd ~/.npm/@types/enzyme/2.7.5/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/react-addons-create-fragment@0.14.16\nnpm verb afterAdd ~/.npm/@types/react-addons-create-fragment/0.14.16/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/sinon@1.16.35\nnpm verb afterAdd ~/.npm/@types/sinon/1.16.35/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/history@2.0.48\nnpm verb afterAdd ~/.npm/@types/history/2.0.48/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/lodash@4.14.55\nnpm verb afterAdd ~/.npm/@types/lodash/4.14.55/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/classnames@0.0.32\nnpm verb afterAdd ~/.npm/@types/classnames/0.0.32/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/jasmine-ajax@3.1.33\nnpm verb afterAdd ~/.npm/@types/jasmine-ajax/3.1.33/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm sill cache afterAdd @types/react@0.0.0\nnpm verb afterAdd ~/.npm/@types/react/0.0.0/package/package.json not in flight; writing\nnpm verb correctMkdir ~/.npm correctMkdir not in flight; initializing\nnpm verb afterAdd ~/.npm/@types/es6-promise/0.0.32/package/package.json written\nnpm verb afterAdd ~/.npm/@types/source-map/0.5.0/package/package.json written\nnpm verb afterAdd ~/.npm/@types/react-router/2.0.49/package/package.json written\nnpm verb afterAdd ~/.npm/@types/selenium-webdriver/2.53.42/package/package.json written\nnpm verb afterAdd ~/.npm/@types/react-dom/0.14.23/package/package.json written\nnpm verb afterAdd ~/.npm/@types/jasmine/2.5.45/package/package.json written\nnpm verb afterAdd ~/.npm/@types/enzyme/2.7.5/package/package.json written\nnpm verb afterAdd ~/.npm/@types/sinon/1.16.35/package/package.json written\nnpm verb afterAdd ~/.npm/@types/react-addons-create-fragment/0.14.16/package/package.json written\nnpm verb afterAdd ~/.npm/@types/lodash/4.14.55/package/package.json written\nnpm verb afterAdd ~/.npm/@types/history/2.0.48/package/package.json written\nnpm verb afterAdd ~/.npm/@types/classnames/0.0.32/package/package.json written\nnpm verb afterAdd ~/.npm/@types/jasmine-ajax/3.1.33/package/package.json written\nnpm verb afterAdd ~/.npm/@types/react/0.0.0/package/package.json written\n. Turns out that the query string generated by the CheckboxFilter was using a \"filter\" which was merged with queries. See: queryDSL Filters so I had to change the queryProcessor explained in SearchKitManger to create a valid query.. ",
    "KunmyonChoi": "Hi, I also faced the same issue with following code. \n<RangeFilter min={0.0} max={1.0} field=\"confidence\" id=\"confidence\" title=\"confidence\" interval={0.1} step={0.1} showHistogram={true}/>\n. ",
    "Xrampino": "@ssetem Do you remember why step prop was removed ? https://github.com/searchkit/searchkit/commit/f957c3310eae3260b35df732e4be47b659fafcf6\nIt could fix this issue. Sure, I forgot to tell it in my PR description, but this can be any field, back since ES2 : https://www.elastic.co/guide/en/elasticsearch/reference/2.0/search-suggesters-phrase.html\nfield : The field to fetch the candidate suggestions from.\n. ",
    "DanielConlin": "Hey @juan-fdz-hawa I have been searching for this solution for a few weeks now. Thanks for bringing up the issue. I just made the file changes from this commit, but when I do , I still get the same error. Am I missing something else?\nThanks,\nDaniel. @joemcelroy We have implemented this in our project, and it seems to fix the problem.. ",
    "neaplus": "+1 HierarchicalRefinementFilter not working es 5.0 and above. size should not 0.\n[https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_50_aggregations_changes.html]. ",
    "bjlange": "I've just run into this same problem. @Jaikant how did you resolve it? Was it Bootstrap interfering, or did including the Bootstrap styles help?. Nevermind, I resolved it by adding import 'rc-slider/assets/index.css'; to the top of my file, as in the rc-slider docs examples.. Happy to submit a PR if you want, I think it just involves removing the sorting code.. ",
    "s-corley": "package for this would be awesome. @MarttiR yes, thanks for working on this!. @MarttiR I'm using the date filter and it's awesome. Could you please show me very quickly how you would use the rangeFormatter to change the display from dd.mm.yyyy to mm/dd/yyyy. Or would I have to mess around with the package? Thanks again. ",
    "tienthanhdhcn": "Hello, \nDate range filter is really important. Is there any update on this feature?. ",
    "Kubitomakita": "Any chance to get this merged?. ",
    "leroy0211": "Yes, I have seen it's been done with CSS, but then all panels which are disabled won't disappear anymore. It's not just on a RangeFilter, or specific RangeFilters (or any other filters). . ",
    "mcastre": "@TheDolo @ssetem I'd like to expound on this question, as I am running into the same issue. Is there a way to determine which view you are currently in? Say I have 2 hitComponents in my ViewSwitcherHits: MapView and ListView. I want to set the size to 0 if on the MapView, and set size to 10 if on the ListView. Is that possible? . +1. ",
    "blastah-code": "I'm seeing the same exact issue. I'm using ES 5 and see that the \"filter\" now needs to be wrapped in \"query\" and then \"bool\".. ",
    "CWolfAnderson": "I'm using 2.0.0-10 but I'll update to 2.0.0 right now.\n. It turns out updating searchkit to 2.0.0 solved the problem. Thanks!. ",
    "MarcoTroost": "Hi Joel,\nThank you for your reply. I would love to see a feature like that!\ngr Marco. Hi Ash,\nThe product detailpage is a completely different server page, but that is beside the point. \nRendering a full serverpage will paint the DOM once again, unless this page is already cached. This is obviously not the case with Searchkit.\nI'm looking for ways to take advantage of the realtime searchkit-filtering, but still keep the browsing experience similar to what users are used to. \ngrtz Marco. ",
    "Nostres": "@joemcelroy \nI would like to suggest just throw event types when you apply filter or search or apply pagination, which can catch in setQueryProcessor listener because I have similar issue, I need to do something when I apply filter or search but not when applying pagination\nThanks . Thank you @joemcelroy \nbut how I should add the additional query to the first request? \nHow do I understand search kit manager send the first request when a mounting component, then when you use search box you can change only content of query?. ",
    "voke": "The following markup\n<SortingSelector options={[\n  {label:\"Relevance\", field:\"_score\", order:\"desc\", defaultOption:true},\n  {label:\"Color\", key:\"whatever\", fields: [\n    { field:\"offer.price\", options: {\n      order:\"asc\", nested_path: 'offer',\n      nested_filter: { term: { \"offer.color\": \"blue\" } }}}\n  ]}\n]}/>\nwill generate this query:\njson\n\"sort\":[  \n   {  \n      \"offer.price\":{  \n         \"order\":\"asc\",\n         \"nested_path\":\"offer\",\n         \"nested_filter\":{  \n            \"term\":{  \n               \"offer.color\":\"blue\"\n            }\n         }\n      }\n   }\n]\nwhich seems to correspond to the sorting example you linked to. I found it in Advanced Sorting section.\n. I guess It's because GroupedSelectedFilters are reading it's values from the actual query and has no connection to the RangeFilter component nor it's options (rangeFormatter). Same goes for the translations option in other components.\n\n\n. ",
    "vvo": "FWIW this is how we did it in react-instantsearch: https://community.algolia.com/react-instantsearch/guide/Server-side_rendering.html\nSince we had a declarative API that was then translated to search queries, we had to render it twice somehow and that was a challenge with ReactDOMServer.\nDone by @mthuret\n. ",
    "devssh": "Can you document how to change the timeout from 5000 ms?. I added this \nimport {AxiosESTransport} from 'searchkit'\nAxiosESTransport.timeout = 20000\nLet me check your suggestion olf!\nThanks!. ",
    "olf": "This would set it to 10000ms:\nthis.searchkit = new SearchkitManager('localhost:9200/movies', { timeout: 10000 });\n. @joemcelroy It's a bit clearer in the v2.3.0 docs. Maybe it'd be worth updating the docs site with the latest docs?. Sorry, screwed up the commit by deleting the source branch...\n... and it also contains the patch from #524 now... Sorry about that.. @jmrichardson which version of SearchKit are you using? I'm using 2.3.0-6 with ES 6.0.0 and don't have any empty query warnings in the deprecation log.. Two ways come to my mind: \n\nwhen you use the Hits  component, you can use the hitsPerPage attribute to limit the query to a fixed number of results.\nyou can specify a default query with the setSize-Method of the ImmutableQuery.. You can pass the q=[query terms from landing page] URL parameter to the SearchKit application, like this: http://demo.searchkit.co/?q=matrix. \n",
    "iamacewhite": "Is this PR released on npm yet? @joemcelroy (sorry for posting here, will delete this comment after getting confirmation). If not, when will a new version including this PR be published? Thanks. ",
    "webmagicc": "work if i wrap query in \n{\"query\": { \n    \"bool\": { \n// my query\n}\n}\n}\nFor example\n{\n  \"query\": { \n    \"bool\": { \n  \"filter\": [ \n    { \"term\":  { \"brand\": \"ventolux\" }}\n  ]\n}\n\n}\n}\nThis example work\n. ",
    "TCMiranda": "@webmagicc seems like a difference between es versions. https://stackoverflow.com/questions/40996266/elasticsearch-5-1-unknown-key-for-a-start-object-in-filters\nDid you manage to fix it using some post processing feature of searchkit?. ",
    "PRANAYDALALA4": "@daviddahl  any luck till now?. Can you please provide the sample of data that you received and what changes have you done with the data?. ",
    "daviddahl": "No, I had to change the data received. ",
    "shawnmmatthews": "For those that stumble across this. \nFollow the guide to setting up elastic search from elastics website, and then install coffee script globally via npm.\nAt which point you can run \ncoffee indexer.coffee localhost:9200 which will index the demo content.\nHappy searching!. ",
    "paweloque": "Hi Joe\nThanks for your response. That's great, I'm looking forward to hear about your thoughts on this component. \nIt's a reasonable approach to provide this as an additional component and see whether and how others use it!\nCheers\npawel. ",
    "jmrichardson": "Sorry, I figured out my mistake.  I didn't update the searchbox prefixQueryFields from the boilerplate.  Please close.  Thanks.. Using keyword.  Close. Any help here?. I am getting this empty filter error in ES6.  How do I update searchkit to include the fix?. Thank you for your response.  I was able to remove the all tab with the code below (not sure if this is a good way to do it or not).  But, I am having trouble with selecting the default tab (as you mentioned above).  I can't figure out where that is done in the code?  Can you point me in the right direction?\nThanks for any help and here is the code I used to remove the all tab:\nexport class NewMenuFilter extends MenuFilter {\n  getItems() {\n    var obj = super.getItems()\n    var i\n    for (i in obj) {\n      if (obj[i].label === \"All\") {\n        obj.splice(i,1)\n      }\n    }\n    return (obj)\n  }\n}\n. I got the following to work:\n```\nconst isUndefined = require(\"lodash/isUndefined\")\nexport class NewMenuFilter extends MenuFilter {\ngetSelectedItems() {\n    let selectedValue = this.accessor.state.getValue()[0]\n    return [!isUndefined(selectedValue) ? selectedValue:\"Documents\"]\n  }\ngetItems() {\n    var obj = super.getItems()\n    var i\n    for (i in obj) {\n      if (obj[i].label === \"All\") {\n        obj.splice(i,1)\n      }\n    }\n    return (obj)\n  }\n}\n```\n. Sorry, I am a react newbie...  I didn't realize the virtual DOM is rendered.  When I did an alert(), the page is empty but the virtual dom exists.  . Wondering if this is/going to be considered?  . +1,  Not working with ES6 caused by empty filter clause I believe related to #423 . @olf, I am running 2.2.0.  This is what shows with npm list:\n```\n\u251c\u2500\u252c searchkit@2.2.0\n\u2502 \u251c\u2500\u2500 @types/classnames@0.0.32\n\u2502 \u251c\u2500\u252c @types/enzyme@2.8.12\n\u2502 \u2502 \u251c\u2500\u2500 @types/cheerio@0.22.5\n\u2502 \u2502 \u2514\u2500\u2500 @types/react@0.0.0 deduped\n\u2502 \u251c\u2500\u2500 @types/es6-promise@0.0.32\n\u2502 \u251c\u2500\u2500 @types/history@4.5.0\n\u2502 \u251c\u2500\u2500 @types/lodash@4.14.85\n\u2502 \u251c\u2500\u2500 @types/react@0.0.0\n\u2502 \u251c\u2500\u252c @types/react-addons-create-fragment@0.14.17\n\u2502 \u2502 \u2514\u2500\u2500 @types/react@0.0.0 deduped\n\u2502 \u251c\u2500\u252c @types/react-dom@0.14.23\n\u2502 \u2502 \u2514\u2500\u2500 @types/react@0.0.0 deduped\n\u2502 \u251c\u2500\u252c @types/react-router@2.0.53\n\u2502 \u2502 \u251c\u2500\u2500 @types/history@2.0.49\n\u2502 \u2502 \u2514\u2500\u2500 @types/react@0.0.0 deduped\n\u2502 \u251c\u2500\u2500 @types/selenium-webdriver@2.53.43\n\u2502 \u251c\u2500\u2500 @types/sinon@1.16.36\n\u2502 \u251c\u2500\u2500 @types/source-map@0.5.2\n\u2502 \u251c\u2500\u252c axios@0.15.3\n\u2502 \u2502 \u2514\u2500\u252c follow-redirects@1.0.0\n\u2502 \u2502   \u2514\u2500\u2500 debug@2.6.9 deduped\n\u2502 \u251c\u2500\u2500 bem-cn@1.3.1\n\u2502 \u251c\u2500\u2500 es6-promise@3.3.1\n\u2502 \u251c\u2500\u252c history@4.6.1\n\u2502 \u2502 \u251c\u2500\u2500 invariant@2.2.2 deduped\n\u2502 \u2502 \u251c\u2500\u2500 loose-envify@1.3.1 deduped\n\u2502 \u2502 \u251c\u2500\u2500 resolve-pathname@2.2.0 deduped\n\u2502 \u2502 \u251c\u2500\u2500 value-equal@0.2.1\n\u2502 \u2502 \u2514\u2500\u2500 warning@3.0.0 deduped\n\u2502 \u251c\u2500\u2500 lodash@4.14.2\n\u2502 \u251c\u2500\u2500 prop-types@15.6.0 deduped\n\u2502 \u251c\u2500\u2500 qs@6.4.0\n\u2502 \u251c\u2500\u252c rc-slider@8.1.2\n\u2502 \u2502 \u251c\u2500\u2500 babel-runtime@6.26.0 deduped\n\u2502 \u2502 \u251c\u2500\u2500 classnames@2.2.5 deduped\n\u2502 \u2502 \u251c\u2500\u2500 prop-types@15.6.0 deduped\n\u2502 \u2502 \u251c\u2500\u252c rc-tooltip@3.7.0\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 babel-runtime@6.26.0 deduped\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 prop-types@15.6.0 deduped\n\u2502 \u2502 \u2502 \u2514\u2500\u252c rc-trigger@2.3.0\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 babel-runtime@6.26.0 deduped\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 create-react-class@15.6.2 deduped\n\u2502 \u2502 \u2502   \u251c\u2500\u2500 prop-types@15.6.0 deduped\n\u2502 \u2502 \u2502   \u251c\u2500\u252c rc-align@2.3.4\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 dom-align@1.6.5\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 prop-types@15.6.0 deduped\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 rc-util@4.3.0 deduped\n\u2502 \u2502 \u2502   \u251c\u2500\u252c rc-animate@2.4.1\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u2500 babel-runtime@6.26.0 deduped\n\u2502 \u2502 \u2502   \u2502 \u251c\u2500\u252c css-animation@1.4.1\n\u2502 \u2502 \u2502   \u2502 \u2502 \u251c\u2500\u2500 babel-runtime@6.26.0 deduped\n\u2502 \u2502 \u2502   \u2502 \u2502 \u2514\u2500\u252c component-classes@1.2.6\n\u2502 \u2502 \u2502   \u2502 \u2502   \u2514\u2500\u2500 component-indexof@0.0.3\n\u2502 \u2502 \u2502   \u2502 \u2514\u2500\u2500 prop-types@15.6.0 deduped\n\u2502 \u2502 \u2502   \u2514\u2500\u2500 rc-util@4.3.0 deduped\n\u2502 \u2502 \u251c\u2500\u252c rc-util@4.3.0\n\u2502 \u2502 \u2502 \u251c\u2500\u252c add-dom-event-listener@1.0.2\n\u2502 \u2502 \u2502 \u2502 \u2514\u2500\u2500 object-assign@4.1.1 deduped\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 babel-runtime@6.26.0 deduped\n\u2502 \u2502 \u2502 \u251c\u2500\u2500 prop-types@15.6.0 deduped\n\u2502 \u2502 \u2502 \u2514\u2500\u252c shallowequal@0.2.2\n\u2502 \u2502 \u2502   \u2514\u2500\u252c lodash.keys@3.1.2\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 lodash._getnative@3.9.1\n\u2502 \u2502 \u2502     \u251c\u2500\u2500 lodash.isarguments@3.1.0\n\u2502 \u2502 \u2502     \u2514\u2500\u2500 lodash.isarray@3.0.4\n\u2502 \u2502 \u2514\u2500\u2500 warning@3.0.0 deduped\n\u2502 \u2514\u2500\u252c react-addons-update@15.6.2\n\u2502   \u251c\u2500\u2500 fbjs@0.8.16 deduped\n\u2502   \u2514\u2500\u2500 object-assign@4.1.1 deduped\n```\nI am not sure how to upgrade to 2.3.0-6.  I have tried doing a \"npm update\" but it doesn't pick it up.  Can you help? \n. I did the following in my existing searchkit directory:\nnpm install searchkit@2.3.0-9\nThen updated the package.json using package.json from \n https://github.com/searchkit/searchkit/tree/develop/packages/searchkit\nThen I did a npm start and got this error:\n```\nes@es1:~/elastic/wmsearch$ npm start\nnpm ERR! missing script: start\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /home/es/.npm/_logs/2017-11-28T20_20_50_094Z-debug.log\n```\nHere is a listing of the directory:\nes@es1:~/elastic/wmsearch$ ls\netc  node_modules  package.json  package.json~  package-lock.json  public  README.md  src  yarn-error.log  yarn.lock\nes@es1:~/elastic/wmsearch$\nI am not sure what went wrong.  Please help. Thanks\n. Ok, got it working.  For some reason I thought the new version had to use that package.json.  Sorry, I am noob :). I think I found the answer.  Using the ^notation\n[\"content\", \"name^5\"]. +1. Thank you @ssetem , that looks really nice :) I actually have that functionality with the searchkit-multiselect from Gregory Potdevin.  However, I was hoping for more of a dynamic way to change from your RefinementAutosuggest to a RefinementList Checkbox.  So lets say there are 100 different/unique platform choices in your example, it would initially be a RefinementAutosuggest as well as for the others.  Then, when you refine the search, when any of the select boxes become less than say a definable number of choices say 7, it displays checkboxes/radios.  . ",
    "dcworldwide": "See https://www.elastic.co/blog/strings-are-dead-long-live-strings. Will you accept a pr that switches all lodash package deps for lodash function specific deps?. Asking around for additional admims would be a good idea . It is an interesting question...more generally...is it possible to use searchkit with a custom ui...either in whole or part. . Should this not override the  renderResult(result:any) method instead of specifying it's own render?. The docs had an example .... ",
    "MattSurabian": "Thanks @joemcelroy! I did play around a bit with creating a new searchkit instance but ultimately it was adding a lot of complexity for the folks that need to maintain this application. I think a core searchkit component doing that makes a lot of sense, but am planning to stick with using axios directly.\nAnother thing I was considering was trying to use call on some of the existing searchkit prototype methods to make working with the returned results a little easier but that's something I've got to play around with more.\nEither way thanks for the quick response :+1: and great component library.. :+1:. ",
    "Phocea": "Thanks Ash. I actually realised this (got wrong information from my team), which is why I removed my comment.\nWe are going to try it out asap\n\nFrom: Ash notifications@github.com\nSent: Friday, January 5, 2018 2:43 PM\nTo: searchkit/searchkit\nCc: Greg; Comment\nSubject: Re: [searchkit/searchkit] React 16.0.0 Errors (#519)\nHi Greg,\nv2.3.0 should be v16 compat\nOn 5 January 2018 at 12:25, Greg notifications@github.com wrote:\n\nHello, Is there any effort planned to push a React 16 compatible version\nto npm ?\nSearchkit is the last of the component we use in our application which is\nnot ready for React 16.x.\nIs there a @next https://github.com/next branch we could grab from now\nwith that beta maybe?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/519#issuecomment-355543294,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AAq9wgXINSG87io7CkHnYBLFuHUgv1cGks5tHhS3gaJpZM4PlCyP\n.\n\n\n\u2014\nYou are receiving this because you commented.\nReply to this email directly, view it on GitHubhttps://github.com/searchkit/searchkit/issues/519#issuecomment-355570730, or mute the threadhttps://github.com/notifications/unsubscribe-auth/AAsNJsNiA5F1YOggJ8DVUekRLFm5zddJks5tHjUUgaJpZM4PlCyP.\n. ",
    "richtera": "Unfortunately I don't have a public site showing this right now. I will try to do a fork.. I see a similar issue using\njsx\n<RefinementListFilter operator=\"OR\" orderKey=\"_term\" orderDirection=\"desc\" field=\"stats.year\" id=\"years\" title=\"Year\" fieldOptions={{type: \"nested\", options: {path: \"stats\"}}} size={20}/>\nSelecting some items (the field is nested and of type long.\nI get the URL as:\n...ate?years[0]=2008&years[1]=2009\nThe list looks like this:\n\nBut refreshing keeps the URL and \"the filter\" but not the List checkboxes.\n\nBut the list itself shows up without checkboxes. NOTE: That initially I can see the screen flash with the correct image of the checkboxes but then when the display settles they get unchecked and re-render.\n\nThen checking an item... the URL changes:\n...te?years[0]=2008&years[1]=2009&years[2]=2008\nBut the current version no longer causes an error in the DSL so that part seems ok (at least during this test)\n. Works in 2.3.0-0. Works in 2.3.0-0. FYI I forked a built version to npm install \"git+https://github.com/richtera/searchkit.git#develop\". Right searchkit is now constructing the wrong DSL.\nThis comparison had some copy paste problems. Corrected. Obviously the labels of the attributes don't matter, but something is different with \"size\" and \"filter\" in some cases.\nThe diff between the two DSLs is:\n```diff\n12c12\n<                 \"size\": 0\n\n\n            \"size\": 20\n\n19c19\n<     \"difficultyLevel39\": {\n\n\n\n\"difficultyLevel4\": {\n\n35c35\n<     \"assigned.key44\": {\n\n\n\n\"assigned.key9\": {\n\n58c58\n<     \"meta.createdBy.key45\": {\n\n\n\n\"meta.createdBy.key10\": {\n\n74c74\n<     \"attributes.challenge46\": {\n\n\n\n\"attributes.challenge11\": {\n\n90c90\n<     \"attributes.starterPlus47\": {\n\n\n\n\"attributes.starterPlus12\": {\n\n116c116\n<     \"attributes.basic50\": {\n\n\n\n\"attributes.basic15\": {\n\n132c132\n<     \"attributes.starter51\": {\n\n\n\n\"attributes.starter16\": {\n\n158c158\n<     \"attributes.exclude54\": {\n\n\n\n\"attributes.exclude19\": {\n\n174c174\n<     \"attributes.lotd56\": {\n\n\n\n\"attributes.lotd21\": {\n\n190c190\n<     \"media_stem57\": {\n\n\n\n\"media_stem22\": {\n\n206c206\n<     \"media_answer58\": {\n\n\n\n\"media_answer23\": {\n\n222c222\n<     \"media_explanation59\": {\n\n\n\n\"media_explanation24\": {\n\n238c238\n<     \"stats.year60\": {\n\n\n\n\"stats.year25\": {\n\n268c268\n<           \"filter\": {\n\n\n\n      \"query\": {\n\n303c303\n<           \"filter\": {\n\n\n\n      \"query\": {\n\n```\n\nHere it is with 2.2.1-0:\njavascript\n{\n  \"aggs\": {\n    \"subspecialties\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"subspecialties_0\": {\n          \"filter\": {},\n          \"aggs\": {\n            \"subspecialties_0\": {\n              \"terms\": {\n                \"field\": \"subspecialties_0\",\n                \"size\": 20\n              }\n            }\n          }\n        }\n      }\n    },\n    \"difficultyLevel4\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"difficultyLevel\": {\n          \"terms\": {\n            \"field\": \"difficultyLevel\",\n            \"size\": 50\n          }\n        },\n        \"difficultyLevel_count\": {\n          \"cardinality\": {\n            \"field\": \"difficultyLevel\"\n          }\n        }\n      }\n    },\n    \"assigned.key9\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"assigned\"\n          },\n          \"aggs\": {\n            \"assigned.key\": {\n              \"terms\": {\n                \"field\": \"assigned.key\",\n                \"size\": 10\n              }\n            },\n            \"assigned.key_count\": {\n              \"cardinality\": {\n                \"field\": \"assigned.key\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"meta.createdBy.key10\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"meta.createdBy.key\": {\n          \"terms\": {\n            \"field\": \"meta.createdBy.key\",\n            \"size\": 10\n          }\n        },\n        \"meta.createdBy.key_count\": {\n          \"cardinality\": {\n            \"field\": \"meta.createdBy.key\"\n          }\n        }\n      }\n    },\n    \"attributes.challenge11\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.challenge\": {\n          \"terms\": {\n            \"field\": \"attributes.challenge\",\n            \"size\": 3\n          }\n        },\n        \"attributes.challenge_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.challenge\"\n          }\n        }\n      }\n    },\n    \"attributes.starterPlus12\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.starterPlus\": {\n          \"terms\": {\n            \"field\": \"attributes.starterPlus\",\n            \"size\": 3\n          }\n        },\n        \"attributes.starterPlus_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.starterPlus\"\n          }\n        }\n      }\n    },\n    \"attributes.originalId\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.originalId\": {\n          \"stats\": {\n            \"field\": \"attributes.originalId\"\n          }\n        }\n      }\n    },\n    \"attributes.basic15\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.basic\": {\n          \"terms\": {\n            \"field\": \"attributes.basic\",\n            \"size\": 3\n          }\n        },\n        \"attributes.basic_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.basic\"\n          }\n        }\n      }\n    },\n    \"attributes.starter16\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.starter\": {\n          \"terms\": {\n            \"field\": \"attributes.starter\",\n            \"size\": 3\n          }\n        },\n        \"attributes.starter_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.starter\"\n          }\n        }\n      }\n    },\n    \"attributes.amount\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.amount\": {\n          \"stats\": {\n            \"field\": \"attributes.amount\"\n          }\n        }\n      }\n    },\n    \"attributes.exclude19\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.exclude\": {\n          \"terms\": {\n            \"field\": \"attributes.exclude\",\n            \"size\": 3\n          }\n        },\n        \"attributes.exclude_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.exclude\"\n          }\n        }\n      }\n    },\n    \"attributes.lotd21\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.lotd\": {\n          \"terms\": {\n            \"field\": \"attributes.lotd\",\n            \"size\": 3\n          }\n        },\n        \"attributes.lotd_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.lotd\"\n          }\n        }\n      }\n    },\n    \"media_stem22\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"media_stem\": {\n          \"terms\": {\n            \"field\": \"media_stem\",\n            \"size\": 50\n          }\n        },\n        \"media_stem_count\": {\n          \"cardinality\": {\n            \"field\": \"media_stem\"\n          }\n        }\n      }\n    },\n    \"media_answer23\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"media_answer\": {\n          \"terms\": {\n            \"field\": \"media_answer\",\n            \"size\": 50\n          }\n        },\n        \"media_answer_count\": {\n          \"cardinality\": {\n            \"field\": \"media_answer\"\n          }\n        }\n      }\n    },\n    \"media_explanation24\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"media_explanation\": {\n          \"terms\": {\n            \"field\": \"media_explanation\",\n            \"size\": 50\n          }\n        },\n        \"media_explanation_count\": {\n          \"cardinality\": {\n            \"field\": \"media_explanation\"\n          }\n        }\n      }\n    },\n    \"stats.year25\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.year\": {\n              \"terms\": {\n                \"field\": \"stats.year\",\n                \"size\": 20,\n                \"order\": {\n                  \"_term\": \"desc\"\n                }\n              }\n            },\n            \"stats.year_count\": {\n              \"cardinality\": {\n                \"field\": \"stats.year\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"stats.pdis\": {\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"stats\",\n          \"query\": {\n            \"range\": {\n              \"stats.pbis\": {\n                \"gte\": 0,\n                \"lte\": 100\n              }\n            }\n          }\n        }\n      },\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.pdis\": {\n              \"histogram\": {\n                \"field\": \"stats.pbis\",\n                \"interval\": 5,\n                \"min_doc_count\": 0,\n                \"extended_bounds\": {\n                  \"min\": 0,\n                  \"max\": 100\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"stats.pval\": {\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"stats\",\n          \"query\": {\n            \"range\": {\n              \"stats.pval\": {\n                \"gte\": 0,\n                \"lte\": 100\n              }\n            }\n          }\n        }\n      },\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.pval\": {\n              \"histogram\": {\n                \"field\": \"stats.pval\",\n                \"interval\": 5,\n                \"min_doc_count\": 0,\n                \"extended_bounds\": {\n                  \"min\": 0,\n                  \"max\": 100\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"size\": 12,\n  \"sort\": [\n    {\n      \"_score\": \"desc\"\n    }\n  ],\n  \"highlight\": {\n    \"fields\": {\n      \"content.english\": {},\n      \"content.spanish\": {},\n      \"content.german\": {},\n      \"content.french\": {},\n      \"content.italian\": {},\n      \"content\": {},\n      \"content.keyword\": {}\n    }\n  }\n}\nAnd here it is using the same page but with the latest develop commit:\njavascript\n{\n  \"aggs\": {\n    \"subspecialties\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"subspecialties_0\": {\n          \"filter\": {},\n          \"aggs\": {\n            \"subspecialties_0\": {\n              \"terms\": {\n                \"field\": \"subspecialties_0\",\n                \"size\": 0\n              }\n            }\n          }\n        }\n      }\n    },\n    \"difficultyLevel39\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"difficultyLevel\": {\n          \"terms\": {\n            \"field\": \"difficultyLevel\",\n            \"size\": 50\n          }\n        },\n        \"difficultyLevel_count\": {\n          \"cardinality\": {\n            \"field\": \"difficultyLevel\"\n          }\n        }\n      }\n    },\n    \"assigned.key44\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"assigned\"\n          },\n          \"aggs\": {\n            \"assigned.key\": {\n              \"terms\": {\n                \"field\": \"assigned.key\",\n                \"size\": 10\n              }\n            },\n            \"assigned.key_count\": {\n              \"cardinality\": {\n                \"field\": \"assigned.key\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"meta.createdBy.key45\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"meta.createdBy.key\": {\n          \"terms\": {\n            \"field\": \"meta.createdBy.key\",\n            \"size\": 10\n          }\n        },\n        \"meta.createdBy.key_count\": {\n          \"cardinality\": {\n            \"field\": \"meta.createdBy.key\"\n          }\n        }\n      }\n    },\n    \"attributes.challenge46\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.challenge\": {\n          \"terms\": {\n            \"field\": \"attributes.challenge\",\n            \"size\": 3\n          }\n        },\n        \"attributes.challenge_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.challenge\"\n          }\n        }\n      }\n    },\n    \"attributes.starterPlus47\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.starterPlus\": {\n          \"terms\": {\n            \"field\": \"attributes.starterPlus\",\n            \"size\": 3\n          }\n        },\n        \"attributes.starterPlus_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.starterPlus\"\n          }\n        }\n      }\n    },\n    \"attributes.originalId\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.originalId\": {\n          \"stats\": {\n            \"field\": \"attributes.originalId\"\n          }\n        }\n      }\n    },\n    \"attributes.basic50\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.basic\": {\n          \"terms\": {\n            \"field\": \"attributes.basic\",\n            \"size\": 3\n          }\n        },\n        \"attributes.basic_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.basic\"\n          }\n        }\n      }\n    },\n    \"attributes.starter51\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.starter\": {\n          \"terms\": {\n            \"field\": \"attributes.starter\",\n            \"size\": 3\n          }\n        },\n        \"attributes.starter_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.starter\"\n          }\n        }\n      }\n    },\n    \"attributes.amount\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.amount\": {\n          \"stats\": {\n            \"field\": \"attributes.amount\"\n          }\n        }\n      }\n    },\n    \"attributes.exclude54\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.exclude\": {\n          \"terms\": {\n            \"field\": \"attributes.exclude\",\n            \"size\": 3\n          }\n        },\n        \"attributes.exclude_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.exclude\"\n          }\n        }\n      }\n    },\n    \"attributes.lotd56\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"attributes.lotd\": {\n          \"terms\": {\n            \"field\": \"attributes.lotd\",\n            \"size\": 3\n          }\n        },\n        \"attributes.lotd_count\": {\n          \"cardinality\": {\n            \"field\": \"attributes.lotd\"\n          }\n        }\n      }\n    },\n    \"media_stem57\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"media_stem\": {\n          \"terms\": {\n            \"field\": \"media_stem\",\n            \"size\": 50\n          }\n        },\n        \"media_stem_count\": {\n          \"cardinality\": {\n            \"field\": \"media_stem\"\n          }\n        }\n      }\n    },\n    \"media_answer58\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"media_answer\": {\n          \"terms\": {\n            \"field\": \"media_answer\",\n            \"size\": 50\n          }\n        },\n        \"media_answer_count\": {\n          \"cardinality\": {\n            \"field\": \"media_answer\"\n          }\n        }\n      }\n    },\n    \"media_explanation59\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"media_explanation\": {\n          \"terms\": {\n            \"field\": \"media_explanation\",\n            \"size\": 50\n          }\n        },\n        \"media_explanation_count\": {\n          \"cardinality\": {\n            \"field\": \"media_explanation\"\n          }\n        }\n      }\n    },\n    \"stats.year60\": {\n      \"filter\": {},\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.year\": {\n              \"terms\": {\n                \"field\": \"stats.year\",\n                \"size\": 20,\n                \"order\": {\n                  \"_term\": \"desc\"\n                }\n              }\n            },\n            \"stats.year_count\": {\n              \"cardinality\": {\n                \"field\": \"stats.year\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"stats.pdis\": {\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"stats\",\n          \"filter\": {\n            \"range\": {\n              \"stats.pbis\": {\n                \"gte\": 0,\n                \"lte\": 100\n              }\n            }\n          }\n        }\n      },\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.pdis\": {\n              \"histogram\": {\n                \"field\": \"stats.pbis\",\n                \"interval\": 5,\n                \"min_doc_count\": 0,\n                \"extended_bounds\": {\n                  \"min\": 0,\n                  \"max\": 100\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"stats.pval\": {\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"stats\",\n          \"filter\": {\n            \"range\": {\n              \"stats.pval\": {\n                \"gte\": 0,\n                \"lte\": 100\n              }\n            }\n          }\n        }\n      },\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.pval\": {\n              \"histogram\": {\n                \"field\": \"stats.pval\",\n                \"interval\": 5,\n                \"min_doc_count\": 0,\n                \"extended_bounds\": {\n                  \"min\": 0,\n                  \"max\": 100\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"size\": 12,\n  \"sort\": [\n    {\n      \"_score\": \"desc\"\n    }\n  ],\n  \"highlight\": {\n    \"fields\": {\n      \"content.english\": {},\n      \"content.spanish\": {},\n      \"content.german\": {},\n      \"content.french\": {},\n      \"content.italian\": {},\n      \"content\": {},\n      \"content.keyword\": {}\n    }\n  }\n}. Kibana says:\n\n. Ok doing a bit more research but I can make/break it by changing from searchkit to searchit2 and searchkit2 is just a clone of the repo with npm run build:watch running. . Once I figure out which component it is :). Ok removing all and adding one at a time switching back and forth.. Ok adding this component will break the new commit build:\njsx\n<RangeFilter min={0} max={100}\n    rangeFormatter={(val) => (val / 100).toFixed(2)}\n    showHistogram={true}\n    field=\"stats.pbis\"\n    id=\"stats.pbis\" title=\"pbis\"\n    fieldOptions={{\n      type: \"nested\",\n      options: {\n        path: \"stats\"\n       }\n    }}/>. So here is the weirdness:\nHere is the DSL fragment:\njavascript\n\"stats.pbis\": {\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"stats\",\n          \"filter\": {\n            \"range\": {\n              \"stats.pbis\": {\n                \"gte\": 0,\n                \"lte\": 100\n              }\n            }\n          }\n        }\n      },\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.pbis\": {\n              \"histogram\": {\n                \"field\": \"stats.pbis\",\n                \"interval\": 5,\n                \"min_doc_count\": 0,\n                \"extended_bounds\": {\n                  \"min\": 0,\n                  \"max\": 100\n                }\n              }\n            }\n          }\n        }\n      }\n    }\nReplacing it with:\njavascript\n\"stats.pbis\": {\n      \"filter\": {\n        \"nested\": {\n          \"path\": \"stats\",\n          \"query\": {   <<<<<< CHANGING THIS TO QUERY SHOULD BE CORRECT <<<<<<\n            \"range\": {\n              \"stats.pbis\": {\n                \"gte\": 0,\n                \"lte\": 100\n              }\n            }\n          }\n        }\n      },\n      \"aggs\": {\n        \"inner\": {\n          \"nested\": {\n            \"path\": \"stats\"\n          },\n          \"aggs\": {\n            \"stats.pbis\": {\n              \"histogram\": {\n                \"field\": \"stats.pbis\",\n                \"interval\": 5,\n                \"min_doc_count\": 0,\n                \"extended_bounds\": {\n                  \"min\": 0,\n                  \"max\": 100\n                }\n              }\n            }\n          }\n        }\n      }\n    }\nMakes it work. i.e.: the property should be called \"query\" and not \"filter\".\n. Going to upgrade today and check. Sorry didn't get to it the last couple of days. I am using latest. It's not that it doesn't load the second time when I go to the page. My problem is that I am providing the searchkit using mobx or redux and I want the page to search again if the manager interface changes. But looking at the code the searchkitprovider doesn't handle componentWillReceiveProps. This one can be fixed by doing:\njavascript\nimport { SearchkitComponent, ViewOptionsAccessor, RenderComponentType } from \"../../../core\";\nimport { HitsProps, HitItemProps, HitsListProps } from \"../../\";\nexport interface ViewSwitcherHitsProps extends HitsProps {\n    hitComponents?: Array<{\n        key: string;\n        title: string;\n        itemComponent?: RenderComponentType<HitItemProps>;\n        listComponent?: RenderComponentType<HitsListProps>;\n        defaultOption?: boolean;\n    }>;\n}\nexport declare class ViewSwitcherHits extends SearchkitComponent<ViewSwitcherHitsProps, any> {\n    accessor: ViewOptionsAccessor;\n    static propTypes: any;\n    defineAccessor(): ViewOptionsAccessor;\n    render(): JSX.Element;\n}\n\nIs someone working on this or should I make a pull request?. Added pull request. Ref #626\n. FYI: I noticed a bunch of updates inside of package-lock.json but didn't check those in as part of the pull request.. Sorry I had the wrong emails in my commit. Fixed it.. Would it be possible to publish a new NPM after this PR was committed? It would help to cleanup typescript and tslint errors.. Note sure why an additional typedef would decrease the coverage?. I understand what you were trying to accomplish with Utils.guid = () => ''; in terms of the suffix, but can you explain why you want to remove the suffix. There were code changes around the suffix and I had some struggles before the code changes before with the suffix, but I had never attempted to remove it. . Oh the easiest way is to iterate through the accessors since they have the id and actually the full name of the aggregate. That way you'd be getting the correct stuff. If that's not doable I can check whether there is another hack to remove the suffix, but the part of the discussion I was involved in was to make sure the uuids re-initialized after a searchkit was unmounted and remounted to make sure the URL arguments correctly matched to reinitialize the new query.. searchKit.accessors will be the AccessorManager which contains various ways to get all accessors. For example learnStore.searchKit.accessors.getActiveAccessors().\nIf you have a particular searchkit component on the screen and would like to get it's accessor then each component has a accessor property which you could reach from a ref to the component. For example I added a ref=\"searchBox\" to my search box and then I can get it's accessor using this.refs.searchBox.accessor. ",
    "joeldavuk": "Agree, there's also no way to easily show the current page e.g the template I'm working to has < currentPage > \nhad to extend Pagination and override the render method\nlet pages = this.getPages();\n        pages.splice(1,0,{disabled: false, key: \"current\", label:pages[pages.length - 1].page - 1, page: pages.length - 1});\npassing that to items in the renderComponent. ",
    "johnecon": "+1 Looking forward :). ",
    "yassminesakhri": "Hello, \nCan i use elasticsearch 5.6 with searchkit ? \ni'am actually using ES 2.4.3 and i would like to upgrade it to ES 5.6.2\n Will searchkit still be working? \nthanks. ",
    "wirtsi": "Cool, thanks for the suggestions ... I will go that way then.\nJust one last thing, how do Searchkit components know that they should re-render? \nSince they all derive from PureComponent and they receive SearchkitManager as their context, the only thing that changes is SearchkitManager is loading true/false. Is this what triggers a redraw?\nBests & Thanks!. @ssetem helped me in the chat, thanks for the support!. ",
    "zoomore": "@ssetem Yeah it could be good if the searchbox had an option to format the url. Maybe a callback fonction that the user of the searchbox could define to transform the string before updating the url.\nAlso a callback fonction to format back the url to the searchbox itself.\nThe main reason is that url with %20 appearing in a google search might discourage a user from clicking on that url because it appears spammy.\n . ",
    "mstalfoort": "To be honest, I could use a more worked out example then showed here since I'm also struggling with this issue.\nWhat I'm trying to achieve is to have the 0 count checkboxfilter to render as disabled yet visible to the user so any further help on this issue would be very much appreciated\n. ",
    "trekhleb": "Looks like there is already something done to fix that https://github.com/searchkit/searchkit/issues/519\nWaiting for the solution to be reviwed. ",
    "cmstroscio": "@ssetem Thanks for the answer! . ",
    "bleep-io": "Yes I'd like to do something like this:\n<MenuFilter\n                field=\"hidden.keyword\"\n                title=\"Hidden\"\n                id=\"hidden\"\n                **default=\"true\"**\n                />. So in my UI if I load it as a checkbox it looks like this and will default to \"ALL\"\n\nI would like it to default to \"Hidden\". Thanks never thought of that! . ",
    "BorsukIvan": "@ssetem \nWhat should I do in this case? \ndon't return anything, right?\n. @ssetem \nThanks it works!. ",
    "kanishk-mehta": "Thank you @joemcelroy, @jmrichardson and @olf .. I was running version 2.2.0 of searchkit as well. Updating it and checking now... :). Perfect ..worked like a charm. Don't know how I missed the http.cors.allow-methods: ...Thanks a ton @a-magdy ! \n\nThis allows more headers to ALL origins, if it works for you, you need to update it to your production domain before deploying it, so that no other domains could access it\n\nWill do ! Thanks again... ",
    "DavidMagem": "I want to filter through a list of items in an array that is not in ElasticSearch. For this reason I can not use a Searchkit filter and I do not want to use the SearchBox either. The behavior would be closer to being able to activate or deactivate the user request through a UI component that incorporates a query or can remove it on user request.\nMaybe an alternative would be to use a CheckBoxFilter? but I preferred to be able to control how to present the list of items to filter in the UI.\nIs there a simple example of the setQueryProcessor?. A CheckboxFilter just work great!\nThanks for your help!. ",
    "motordigital": "Hello. Regarding IE11: It even does now run on your public website examples.\n\n. The hint of @joemcelroy is valid and adding babel polyfill solves the compatibility issue on ie11.\nOn lower versions of ie it does not work. But older version are not supported by Microsoft anymore.. ",
    "Bonobomagno": "i see, but that demo is old, did this is still up to date with version 2?. ",
    "derekolson": "Just ran into this myself... in order to handle body scrolling with html5 doctypes this handler needs to use document.documentElement.scrollTop:\nhttps://github.com/searchkit/searchkit/blob/16a178f03254fab5e01197d60e3cf042cb005b1d/packages/searchkit/src/core/accessors/HitsAccessor.ts#L22\nMaybe ill put in a PR if i have some time.... ",
    "Milananas": "Is there already a stable release with this change? Or is there a way around it in the current release? . ",
    "christopher-johnson": "@ssetem \ncan you cut a new release with this commit please?   Thank you. this is not a searchkit issue.  it occurs (in 16.8 +) when there are multiple Reacts in the bundle.. ",
    "Toksa": "Create new custom Accessor and use buildOwnQuery function where you can manipulate the query. In your RefinementListFilters use defineAccessor function to define your custom Accessor.. ",
    "phillipb": "@ssetem yes, it does look like it's fixed in v2.3.0. When trying to upgrade though, I get this strange error. \nFastClick.js:6 Uncaught TypeError: Object prototype may only be an Object or null: undefined\n    at setPrototypeOf (<anonymous>)\n    at __extends (FastClick.js:6)\n    at FastClick.js:15\n    at Object.require.751../RenderComponent (FastClick.js:25)\n    at s (_prelude.js:1)\n    at _prelude.js:1\n    at Object.require.757../FastClick (index.js:6)\n    at s (_prelude.js:1)\n    at _prelude.js:1\n    at Object.require.718../AccessorManager (index.js:7). For posterity's sake, I wasn't able to upgrade to 2.3.0 because of some issue with typescript + webpack + searchkit. Decided to stay on 2.2.0 for now and just add a post_install script. \"postinstall\": \"rm -rf node_modules/@types/es6-promise\",. ",
    "zvictor": "the commit message states that there is a breaking change on it, however the notice didn't go to the changelog. it would be a good practice to always add such messages to the changelog in the same commit that causes the break.\n@ssetem . ",
    "kdabo": "@chrisfinch thank you for your help! I am going to give it a try! . ",
    "brunoAltinet": "Hey guys, been running into the same issue. Is there a possibility to move that code from componentWillmount to componentDidMount? That's the suggested solution from React peeps anyway?. ",
    "a-magdy": "Hi @kanishk-mehta \nI am guessing it might be a CORS issue, can you update you elasticsearch.yml config to include:\nyaml\nhttp.cors.enabled: true\nhttp.cors.allow-credentials: true\nhttp.cors.allow-origin: \"/.*/\"\nhttp.cors.allow-headers: \"X-Requested-With, WWW-Authenticate, X-Auth-Token, Content-Type, Content-Length, Authorization, Access-Control-Allow-Origin\"\nhttp.cors.allow-methods: \"GET, POST, PATCH, PUT, DELETE, OPTIONS\"\nThis allows more headers to ALL origins, if it works for you, you need to update it to your production domain before deploying it, so that no other domains could access it -unless you want that-. ",
    "rajgupt": "I was using latest tsc globally \nI was able to compile after matching tsc with the repository.\nClosing the issue.. ",
    "mhelleboid": "see #610 . ",
    "Timothylawler": "It seems as Searchkitcomponent is using componentWillMount for creating the searchkit object. The searchkit object is accessible by calling super.componentWillMount() like so:\njavascript\nclass a extends SearchkitComponent {\n  componentWillMount() {\n    super.componentWillMount()\n    // this will now work\n    this.searchKit.reloadSearch()\n  }\n}. Are you getting any errors from this? have you tried reloading the search after setting the queryProcessor?\neg:\njavascript\nupdateSearch = () => {\n  searchkit.setQueryProcessor(() => {\n    // set query processor as you showed\n  })\n  searchkit.reloadSearch() // reloads the search with the new queryProcessor\n}. @ElviraCB I think i understand your question(hopefully), correct me if i'm wrong\nif you for example set query processor in componentWillReceiveProps then you will always have control over what you set by passing the data as a prop. \nyou can access what searchkit would put as query processor through the query prop in searchkit.setQueryProcessor(query => {}). Most likely contained in query.should by default. I extend the search by taking what searchkit would like to send and tweak that to my needs. @dgastudio What do you want to accomplish with this? render the grouped results separately or you just want to aggregate on a specific field? \nLatter is possible and quite simply done by just aggregating on the desired field Aggregation Elastic search. The former will be a bit trickier but please elaborate. @dgastudio A little late back to the party but future people might get some help. \nThe searchkit library does not include any component for that kind of layout no. But what you could do is just extract the search result with a simple wrapper and treat it the way you want.\nEg: \n```javascript\nexport default class HitsExtractor extends SearchkitComponent {\n  render() {\n    const { results } = this.searchkit\n    const hits = _get(results, 'hits.hits', [])\n    const hitCount = _get(results, 'hits.total', 0)\nreturn this.props.children({ hits, hitCount })\n\n}\n}\n```\nAnd use it as:\njsx\n<SearchkitProvider>\n  <HitsExtractor>\n    {({ hits, hitCount }) => (\n      <SomeComponent data={hits} />\n    )}\n  </HitsExtractor>\n</SearchkitProvider>. javascript\nconst MovieHitsTable = (props)=> {  \n  const { hits } = this.props\n  ....\n}\nSecond row, you are accessing this.props where I assume you mean props without the this?. ",
    "SimpleCookie": "Thank you for commenting @joemcelroy. Perhaps you guys can start with just the search option and include the preview etc in a later stage? I believe it would make a huge difference. It doesn't even have to be a great one.\nI do find the irony very funny though \ud83d\ude06 . Honestly, that could be a simple temporary solution. You can just create a simple input field that does a google search, with the site: dork prefixed.. ",
    "ElviraCB": "I've tried a lot of things to figure out how to get it to work again. A problem was that the filter is empty, it should have match_all in the body with Elasticsearch 6.2.\nI don't know if it's going to help you out but, I've:\n\nupgraded Searchkit to ^2.3.0-9, since I was still using 2.2.1-0 before.\nI've reseted my docker, which made me need to rebuild every project, but when I've finished the building it and rebooting my mac, suddenly my filter started to work when I run the project and started to search.\n. @Timothylawler  How do I remove the setted query when I want to search again in the searchbox?\nBecause it's now limited to the query I have.\n\n. ",
    "ab-mannan": "@richtera\n@joemcelroy\nany idea about that fix ?. Well the reason why I want to remove the suffix is that I had an array of\nmy entities and after the _search query, I need to extract the same\nentities from the response aggregations, using the array of entities I have\ndefined locally. But because of the suffix, I now had to loop through the\naggregations (response) and apply the Regex to match the response object\none by one with my array of entities, which isn't a good solution though.\nThere should be some sort of configuration may be to remove the suffix as\npreviously that Utils.guid hack was working. Also it would be great if you\ncan share your code changes around the suffix thing.\nThanks\nOn Wed, May 16, 2018 at 7:36 PM, Andreas Richter notifications@github.com\nwrote:\n\nI understand what you were trying to accomplish with Utils.guid = () =>\n''; in terms of the suffix, but can you explain why you want to remove the\nsuffix. There were code changes around the suffix and I had some struggles\nbefore the code changes before with the suffix, but I had never attempted\nto remove it.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/631#issuecomment-389542244,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AFCVDaMXTga-ep3ImV0NMGdwmDrLucsTks5tzDmBgaJpZM4T28JX\n.\n\n\n-- \nRegards,\nAbdul Mannan\nMob: +923206660088\nWebsite: www.pakace.com\n. Can you please mention the place which you are talking about, where I need to iterate?. Yes, I am able to get the stateful accessors too from the searchKit.accessors. So its OK for now, but I would love to hear some sort of configuration for this or some decent hack to avoid concatenating uuids.\nMuch appreciated. \n. whoa... just found after debugging alot of different things. In my manager file(entity manager file) where I am managing all functions from searchKit manager like setQueryProcessor etc.. I have added a small hack in listener function like this.uuid = ( ) => ''; . In this I have context to the searchKitManager of the component where I have access to accessors and statefull accessors too. Thanks @richtera  for pointing me to the right direction. Thanks a lot.. ",
    "analisaw": "\u200b: )\u200b\nOn Mon, May 14, 2018 at 9:35 PM Joshua C. Jackson notifications@github.com\nwrote:\n\nI think the issue is that TagFilterConfig /> is not adding the accessor\nto the searchkit object in 2.3.0. I was able to add it manually using the\nfollowing code:\nconst searchkit = new SearchkitManager(\"/search/courses\");\n// ...\nconst facetOptions = {\n  field: \"instructor_list_filter\",\n  id: \"instructor\",\n  operator: \"AND\",\n  title: \"Instructor\",\n  size: 1,\n  loadAggregations: false\n}\nconst instructorAccessor = new FacetAccessor(\"instructor_list_filter\", facetOptions);\nsearchkit.addAccessor(instructorAccessor);\nI don't know if the required props to TagFilterConfig changed and whether\nthere is a discrepancy on the docs, but it looks like field is the prop\nto add.\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/searchkit/searchkit/issues/634#issuecomment-389040030,\nor mute the thread\nhttps://github.com/notifications/unsubscribe-auth/Ah3X1WX3l5wzD4Ne5JmGZMlQY4HPRapsks5tylsWgaJpZM4T-qO-\n.\n\n\n-- \nANALISA Woo Associate Director, Web and Mobile Services\nanalisa@cca.edu | o 415.551.9315\n1111 Eighth St. | San Francisco, CA | 94107\n. ",
    "skout90": "did you check this? https://github.com/searchkit/searchkit-examples. ",
    "ghaseminya": "ok, i found a good way,\njust add react-with-direction to project, and use directionprovider tag befor default searchkit tag.. ",
    "dajinchu": "Works perfectly on that branch. Thanks!. ",
    "AYWK": "Thanks for your suggestion, I decided to build it outside of Searchkit and do some analysis-related work with elasticsearch.js and Echarts.\n thanks.. ",
    "donaldallen": "@joemcelroy Is this going to be merged?. Is there anything I can do to help get this merged?. > hey @donaldallen similar changes were merged recently actually (#678) and on the latest alpha release. Fine to close this issue?\nAh, I must have missed that. Thanks for all your hard work!. Any chance of this being merged?. ",
    "shawnco": "I can second this. In fact it looks like anything embedded from Codepen is failing to show up as well.. ",
    "dgastudio": "Hello Timothy, and, thank you for your response.\ni would like to acomplish this: https://c2n.me/3VTylyT.png. ",
    "nchevobbe": "\nthanks, could you fix the test? Il get this merged once it passes\n\nsure, I modified the test and they pass locally.\nLet's see if circle is green now.. looks \u2705. ",
    "jackerjay": "I has found the ways to fix it.. ",
    "24ma13wg": "This page suggests that the component markup can be altered. I'm not familiar with Material UI, but if you can change the markup and add new classes, I imagine you could integrate a UI framework. The problem might be that you can only alter the markup of some components.. You can alter components, also, by extending their class. See this example: http://docs.searchkit.co/v0.3.5/docs/components/basics/hits.html. So, you should be able to add any necessary wrappers to whatever components you want to integrate. For example, to integrate the SearchBox component with Semantic UI's input element:\nclass MovieSearchBox extends SearchBox {\n  render() {\n    let block = this.bemBlocks.container;\n    return (\n      <div className={block().state({focused:this.state.focused})}>\n        <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"ui fluid icon input\">\n            <input type=\"text\"\n                   data-qa=\"query\"\n                   className={block(\"text\")}\n                   placeholder={this.props.placeholder || this.translate(\"searchbox.placeholder\")}\n                   value={this.getValue()}\n                   onFocus={this.setFocusState.bind(this, true)}\n                   onBlur={this.setFocusState.bind(this, false)}\n                   ref=\"queryField\"\n                   autoFocus={this.props.autofocus}\n                   onInput={this.onChange.bind(this)}/>\n            <i className=\"search icon\"></i>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}. @dcworldwide maybe, yes. How would you write this?. My solution:\nPUT jackie_chan\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"csv_analyzer\": {\n          \"tokenizer\": \"csv_tokenizer\",\n          \"filter\": \"trim\"\n        }\n      },\n      \"tokenizer\": {\n        \"csv_tokenizer\": {\n          \"type\": \"pattern\",\n          \"pattern\": \",\"\n        }\n      }\n    },\n    \"index.mapping.ignore_malformed\": true\n  }\n}\nPUT jackie_chan/movie/_mapping\n{\n  \"properties\": {\n    ...\n    \"actors\": {\n      \"type\": \"text\",\n      \"analyzer\": \"csv_analyzer\",\n      \"fielddata\" : true\n    },\n    ...\n  }\n}. ",
    "ACPrice": "I think I'm seeing an analogous issue on the input filter here. I'd take a swing at fixing (assuming I'm right), but I'm buried in a project.. ",
    "tristanreid": "Submitted PR to fix the InputFilter.  I did a search of the codebase, and don't see any other instances that would be impacted.. @joemcelroy any chance you could merge?  It's just an error message, but would be nice to clean up the console.. ",
    "benwfreed": "@joemcelroy @ssetem Wasn't sure whether to use develop or staging as a base branch, using staging because it's the default.. Awesome, thanks @joemcelroy. Yep, this change is backwards compatible with older versions of ES.. ",
    "dtrinh100": "I am using the React Router (HashRouter) with the hash symbol in it and trying to do this causes some strange issues with the search like the term not populating. I have tried using window.location.href += \"?q=${queryString}\" upon user submitting the search from the landing page and I have tried using the Router's own history object as well. Is there a workaround for this issue?. "
}