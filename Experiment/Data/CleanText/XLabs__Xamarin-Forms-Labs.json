{
    "rmarinho": "done! \n. fix #3 \n. @sami1971  can you check this PR for wp? i m on my mac this weekend. \n. i m having a problem with my git setup on windows, can't find a way to check this pr on my machine.\ncan someone check and merge this please ? @sami1971  ?\n. yeah not perfect, but it's a checkbox :) \nCan you pull that in, i will then give it a look too. \nBtw what tools do you use with git @sami1971 ? can get a way of checking PR with the tools i m using. \n. Ok, yap it makes perfect sense, mybe adding the clickable to the already Existing ExtendedLabel, and use that in this checkbox control:\nIf anyone can merge this is ... i can't in my windows machine GitHub for windows  is always crashing.\n. yeah on my mac github client works good , but my windows machine it's grashing all the time, spend all night re-installing and trying other tools and always same error. guess i have something creating conflicts in my machine. \n@sami1971 merge this PR please.\n. @ravensorb no, i tried the github client, git extensions, sourcetree any gitsmc .. the only one that i can get to work is the built in git support on visual studio. \n@ofcoursedude ok, thanks. \n. So is this needed or not?\n. @sami1971  fixed it \n. hi @bob3695 , so why don't  you used the switch view?\nhttp://iosapi.xamarin.com/?link=T%3aXamarin.Forms.Switch \n. Thanks. Fast typing issues :)\n. humm, i m hit the same issue, when the scripts are \nGet-ChildItem : Cannot find path 'C:\\Users\\rmarinho\\Documents\\GitHub\\Xamarin-Forms-    Labs\\src\\Xamarin.Forms.Labs\\Xamarin.\nForms.Labs\\Bin\\Release\\Xamarin.Forms.Labs.dll' because it does not exist.\nAt C:\\Users\\rmarinho\\Documents\\GitHub\\Xamarin-Forms-Labs\\src\\Xamarin.Forms.Labs\\.nuget\\Definition\\Build.ps1:121 char:21\n+     $cslaAssembly = Get-ChildItem \"$pathToBin\\Xamarin.Forms.Labs.dll\" | Select-O ...\n+                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n   + CategoryInfo          : ObjectNotFound: (C:\\Users\\rmarin....Forms.Labs.dll:String) [Get-ChildItem], ItemNotFound\n   Exception\n    + FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetChildItemCommand\n. I think here's the problem :\n$pathToBin = [System.IO.Path]::GetFullPath( \"$basePath....\\Xamarin.Forms.Labs\\Bin\\$configuration\" )\n. fixed :\n$pathToBin = [System.IO.Path]::GetFullPath( \"$basePath........\\ReleaseBuild\" ) \nlooks good @Bowman74  ?\n. thanks :+1: \n. plus 1 for this one, we could even show a loading while is getting a image.\nNice one thanks! \n. yeah, i have done that in a image gallery myself on ios, spinning multiple threads to getting the asset.\n. uhuh! gonna try it in a couple hours @Bowman74 \n. Great discussion guys, i agree with overall, BaseView is just so we don't colide with View that is already in Xamarin,Forms. \nGood reminder about marking stuff as obsolete so we don't break existing code. \nI agree that ViewModel could be separate class so we can have a view model with navigation that makes sense when is binding to a page, but i think we have to change the VIewFactory way it works to make it work with ContentView and other elements.\n. Thanks!\n. Thanks!\nclose #139\n. Thanks! , what version were you seeing this? i made a change recently to this.\n. can you add to the wiki and maybe some screenshots ? \n. How about a Android and and Windows implementation, any suggestions to achieve the same? :) \n. Awesome stuff Eric, i have added you to the contributors , you now have full access to accept pr and manage everything u need.\n. I think i mentioned in the renderers request or something .. but we should add it to the user voice \nhttps://xamarin.uservoice.com/forums/258559-xamarin-forms-suggestions/suggestions/6267219-allow-navigation-histroy-recreation-or-implement-p\n. I have added you to the contributors team, you can now check in on the source or accept PR. \n. yupi!! we have ExtendedScrollView complete in all 3 platforms.\nThanks\n. Thanks! need this acouple of days ago :)\n. I get that it uses the Icon helper, and that is awesome, but i think it could be to much confusion, do you guys think we can merge this with ImageButton ? \n. yest , i agree, i think we should create a new ExtendedButton that tryes to merge, ImageButton, IconButton and  ContentButton #241 \nOpinions ? \n. this sounds good :)\n. Awesome thanks, gonna see if someone can get the windows phone version working too..\n. Awesome @nrogoff i added you to the contributors team so i can \"assign\" you to the task and we keep track of who will help in what :)\n. No really sure what's the best way, but i think  yes, i did it for you, but you could do it to..(removing the flags)  that way people that come to help focus where we need.\n. yeah you can create a XPath and Ypath properties where one can specify the name of the property to bind to X and Y for the Itemssource i have done it somewhere in the Labs project, i will check.\n. I was waiting for that :) thanks @Vratislav  it will go in the next nuget\n. thanks, was hitting this issue right now.. \n. @Bowman74 do you think you can push the fix to 1.2 branch ? \n. Thank you .. \n. Thanks!\n. You should only submit the changes you made and not the all file please. \nI m closing for now .. feel free submit a new PR \n. Please submit just the changes not the old file. \nThanks. \n. Do you think you can work it for the 2 other platforms?\n. Hi Paul , nice to see that PR :) let me just see how we will work for other platforms, we are trying to make a stable version of Labs where everything works on every platform. \n. @bluechiperic can you rebase so i can merge it ? thanks\n. hey @bluechiperic i didn't merge because it needs to  resolve some conflicts, since people change labs during the days the PR was up, if you can just merge with current master i will accept it right away,.\n. We need some samples pages and documentation. \n. About the all question about platform support, we are all right. we should support all platforms, and as @sami1971 pointed out 2.0 release will only have features that exist in 3 platforms, this is one of objectives of next Labs release since is based on feedback from a lot of people using the controls and contributing. \nFor now we can add it to the master, this is our development branch.. when we get our new base structure for 2.0 (plugins) in place, we will create a new branch 2.0 that will contain the release code, nugget aspects etc.. and where all controls work on all 3 platforms (only special cases like a feature is present like NFC).\nAll the controls even if in development on master should have at least a sample page on the gallery so developers can run the app and check how it behaves on other platforms. \nI will try to create issues for missing functionality and platform support and tag them as up-for-grabs. And anyone can do that to.. if you see some feature is missing you should create a new issue so we can track them. \n. Awesome :)  just needs  a wiki page\nhttps://github.com/XLabs/Xamarin-Forms-Labs/wiki/XLabs-Wiki-Feature-Details-Template-Page\n. needs rebase :) \n. Can you rebase please. \n. just missing a rebase @BrillioMobility\n. Looks good. i think you just missed 1 tab. no big deal\n. Have you look at Application class Properties in Xamarin Forms 1.3 ?\n. seems that is already fixed, or the repo has changed and this needs rebase.. please check and reopen if is still necessary\n. other pr from @onovotny fixed this\n. Can you rebase @onovotny ?\ni working on labs this weekend and will have some time to look at it better.\nthanks\n. sorry to ask you this again :P but can you rebase so it easier to merge, i looked the code and looks ok, we ned some more samples about it \n. Nice work @saramgsilva \n. @rid00z the master is already on unified too ..\nthere's some bugs i m still figuring out in XS \n. thanks!\n. @sami1971 can you review this please? \nWe should start doing everything as a PR and review each others..\n. yeah but this doesn't hurt right @sami1971  ? we have the dll loaded already please review and merge \n. Hmm you are changing the all file.. please check whats wrong, and only commit the lines that we care. \nthanks\n. please remove resources files thanks\n. Please just submit the lines you changed, thanks\n. can you clean up just for the lines you don't change.. that are tabs vs spaces \nThanks\n. that's why i wanted someone to review first :) \n. ok #604 is up\n. please submit only the changed lines, not the all files. \nThanks\n. yeah don't remember me that.. i was kinda sad about that.. but moving on... \nbtw @sami1971  can you get a new nuget up ? i m having problems build in VS, i get that dl's are being used a lot of times.. think is because we are copying on debug to a different folder.. not sure why .. \nand i can't build the packages myself.\ni wanted to keep updating one of my apps to see more breaking changes we are making and help guide people to 2.0\n. I think this caused other side effects ... right @sami1971   ? \n. uff... big PR....\n. Please add also a sample so we can try the new feature out .. \n. nop 1.3.4 is out \n. please rebase and reopen\n. Helps with someone not very familiar to github \n. Can someone review this @sami1971 ?\n. Very nice! \nCan you add just a sample to the gallery, so one can test and see how it works? \nThanks. \n. Sorry, can you rebase ? and reopen \n. do we still need this? if so rebase and reopen\n. I agree.. can you rebase and reopen? thanks\n. needs rebase\n. @sami1971 i m back :)\n. Can you rebase? thanks\n. please rebase and reopen\n. please rebase\n. Misses WP, shouldn't be that hard just set a GradientBrush as the background\n. Looks good\nPlease remove the changes in the Droid csproj \nThanks\n. yeah i know it works.. but is just cleaner to just commit the changed bits that matter ;) \n. needs rebase\n. New feedback.\n. Nice,, needs a new merge with master so i can merge\n. The PR has multiple changes.. please clean it up and submit submit the changes needed .\nReopen when it's good.\nThanks\n. Way better, but needs rebase with master, and documentation on the public api of the control, we are fixing all the missing documentation. \n. Thanks @guitcastro !\n@Axel3232 You are also missing the XML documentation needed.. \n. yeah i forgot that.. all my ide's are with other settings.. \nbut i had to do this .. \n. Please merge master to see if the CI works ok\n. Ok, let's add the other implementations and that we will reopen\n. Needs rebase\n. Please explain the PR\n. Needs Windows and Android implementation, please reopen when you have it. \n. Please reopen after address feedback \n. was old.. if you want to rebase i can accept , we won't be shipping but take the code for new versions. . Nice :)\n. Why do we need this?\n. what happens if OldItems >1\n. Did you a tried a complex layout ? like a stack panel inside of a grid?\n. this is not needed\n. you are missing this for no reason\n. no need for this \n. not needed\n. fix spacing here please\n. no comment code \n. please format correctly\n. this should be SetMaxLength\n. this is not needed\n. We need to check the OldElement == null and do inittialization, and remove the events for the e.OldElement if it's different from null\n. don't know but maybe -1 can remove the selection? \n. can you fix formatting :) \n. why so many empty lines?\n. maybe a Observable Collection so we can add remove dates and it autoupdates the UI ?\n. Please no commented code\n. get rid of these empty lines\n. no comment code please\n. we should remove this in a final pr\n. Need Android and WP implementations\n. Is this ok @sami1971 ? Seems so!\n. Please remove changes to the Sln that aren't needed\n. this should be here.. but.. it's a big pr.. \n. this is the tool that fixes the missing space\n. you need to rework this code to see if the Control is null (first time being used) and check e.NewElement and e.OldEment so it could properly reused\n. Same that above\n. You need to unsubscribe this or it can leak.. Implement Dispose.\n. We could start using c#6 features here nameof(Element.Icon)\n. please remove comment code if not necessary\n. Needs documentation\n. Please remove this file \n. And this one\n. this will leak.. \nso make sure you check the OldValue , and unsubscribe if already added buttons..\n. We should call dispose of the all radio buttons and unsubscribe\n. please remove it in your branch.\n. let's try not hardcode values\n. ",
    "ofcoursedude": "Actually the code doesn't work with latest xamarin.forms build which introduced breaking changes. I've made the necessary changes locally, let me check in the update first.\n. closing\n. Should be working now\n. I did some extra improvements in the past few days, added some more events and such. I'm sure fixing default vertical layout shouldn't be an issue...\nAlso, does it make sense to put in a \"clickable label\"? (essentially just a subclassed label that also responds to a tap event, not much more - in general I find lack of events in x.f to be a pain)\nP.\n\nFrom: Rui Marinhomailto:notifications@github.com\nSent: \u200e20. \u200e6. \u200e2014 12:53\nTo: XForms/XForms-Toolkitmailto:XForms-Toolkit@noreply.github.com\nCc: ofcoursedudemailto:pavel@simsa.cz\nSubject: Re: [XForms-Toolkit] Checkbox + WP8 Renderer (#25)\nyeah not perfect, but it's a checkbox :)\nCan you pull that in, i will then give it a look too.\nBtw what tools do you use with git @sami1971 ? can get a way of checking PR with the tools i m using.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/XForms/XForms-Toolkit/pull/25#issuecomment-46666647\n. Sure. I'll get to it only late Saturday or Sunday though...\n\nOn Jun 20, 2014, at 15:57, \"Sami M. Kallio\" notifications@github.com wrote:\n@ofcoursedude, can you pull the master branch to your fork and then create a new pull request. There are too many conflicts and I am afraid I will override some of the new features/fixes if I try to manually merge them in. Also a test page for the button would be a nice addition.\n\u2014\nReply to this email directly or view it on GitHub.\n. \n",
    "sami1971": "What is it supposed to do? I get the following screen rendered with the control:\nhttps://onedrive.live.com/redir?resid=CA84936FF490EEDC!1919&authkey=!AK29iaLmSawxqtA&v=3&ithint=photo%2c.png\nAlso is the namespace correct, XControls, or should it be changed to XForms format?\n. @rmarinho, I am using the GitHub client with Git shell command prompt when I am on Windows. At work I am using the GitHub client on a Mac and use Windows through Parallels.\n. @ofcoursedude, can you pull the master branch to your fork and then create a new pull request. There are too many conflicts and I am afraid I will override some of the new features/fixes if I try to manually merge them in. Also a test page for the button would be a nice addition.\n. WP8 includes heading by default so it's an argument that can be ignored.\n. Should we at some point review the StyleCop rules? I know we are not enforcing them but keeping things up to date would be good so we don't fall so far behind nobody wants to bother. Some of the rules could use some tweaking...\n. Should we consider adding an option to use caching with web images? Either download the image file async to file folder or use caching provider interface. This way images are not reloaded whenever user scrolls back and forth. I don't think the native platforms effectively cache image downloads (although I could be wrong).\n. Thanks!\n. Few requests before I can pull this in:\n1) remove the Base suffix as this is not recommended naming convention. ViewModel should stay ViewModel. \n2) Why not just extend the ViewModel instead of creating another inheritance in the chain? Is there a specific use case for this?\n3) Renaming methods is OK as long as you leave the old method in there as well with Obsolete attribute. If you want to rename ChangeAndNotify to SetProperty that is fine but leave the ChangeAndNotify with a simple call to SetProperty inside. This way existing code doesn't break and it can be refactored gracefully into the new naming convention.\n. I will merge this request.\n1) The use of Base should be avoided as much as possible especially if it doesn't add any value to the class. In this case ViewModel is pretty obviously not a complete implementation as one would ask \"ViewModel for what?\". \nhttp://blogs.msdn.com/b/kcwalina/archive/2005/12/16/basesuffix.aspx\n2) That is true although I would avoid putting too much stuff into the ViewModel for the same reasons you mentioned for the observable data model. Keep data model plain without property notifications, add in basic view model with notifications and then inherit navigation view model from the view model perhaps. To me view model is not necessarily a complete page so having full navigation functionality on every single one is overkill.\n. IResolver implementation fails unit testing since it throws an exception when the item is not found. \nMicrosoft.Practices.Unity.ResolutionFailedException would need to caught and in that case null returned. All other exceptions would be let through. I fixed this in the latest commit.\n. Did you run any of the unit tests?\n. I was planning to do similar functionality to a layout. BoxView seems to render a border on iOS but not on Android or WP8.\n. Thanks!\n. Minor fixes about code formatting would be nice-to-have. I will try to review the code later today for functionality.\n1) Fix tabs to spaces\n2) Fix curly braces (should start on new line)\n-           if(view.Font != Font.Default) { // <- to new line\n-               Control.TextSize = view.Font.ToScaledPixel();\n-               Control.Typeface = view.Font.ToExtendedTypeface(Context);\n-           }\nI apologize if this seems like nit-picking but if you look at f.e. MonthView.cs from browser it looks very messy so anytime you get a chance to fix formatting it would help.\nhttps://github.com/Applifting/Xamarin-Forms-Labs/blob/e50fc574b4fcb80f4b434d5a17a61695a010f0ee/src/Xamarin.Forms.Labs/Xamarin.Forms.Labs.Droid/Controls/Calendar/MonoDroid.TimesSquare/MonthView.cs\nThe following probably should be refactored to if-elif statements to simplify things:\n```\n        if (!string.IsNullOrEmpty(view.FontName))\n        {\n            string filename = view.FontName;\n            //if no extension given then assume and add .ttf\n            if (filename.LastIndexOf(\".\", System.StringComparison.Ordinal) != filename.Length - 4)\n            {\n                filename = string.Format(\"{0}.ttf\", filename);\n            }\n            control.Typeface = TrySetFont(filename);\n        }\n    //======= This is for backward compatability with obsolete attrbute 'FontNameAndroid' ========\n    if (!string.IsNullOrEmpty(view.FontNameAndroid))\n    {\n        control.Typeface = TrySetFont(view.FontNameAndroid); ;\n    }\n    //====== End of obsolete section ==========================================================\n\n    if(string.IsNullOrEmpty(view.FontNameAndroid) && string.IsNullOrEmpty(view.FontName) && view.Font != null){\n        control.Typeface = view.Font.ToExtendedTypeface(Context);\n    }\n\n```\n. Tell me about it!!! One thing that might help is StyleCop as it is now available in XS. It will highlight the code and I do believe also offers automatic formatting options. We now have a code base that is mixed with code written in VS and XS, and of course the default settings in XS are almost opposite to the defaults in VS. I do encourage everyone to set the XS settings to Visual Studio formatting or customizing so they will match VS.\n. I didn't have time to extend the review but it looked pretty good on the first run. I have merged the change, thanks! Unfortunately I haven't had much time to commit to Labs lately since we are in the process of building a house and it is taking majority of my free time.\n. Thanks!\n. If the methods are public they should be in the interface first and then in the platform implementations. Better place for the property would probably be in the INetwork interface?\n. Good to see someone working on this! I added swipe (left/right) gestures directly to ExtendedEntry and HybridWebView. On the latter it was easy since it doesn't inherit from existing view but on the former the Android version was a hack since the gestures do not come through and I had to calculate the swipe from the touch event instead. WP8 isn't currently implemented.\n@rmarinho the gestures are currently a weak point on the Forms and the API really could use some opening up so we can easily add more gestures. \n@Choran66 is this implemented on all 3 platforms?\n. Looking at market shares I think the 10% figure is good enough to support it, especially when iOS is hovering around 20% market share. In any case powerdude is right, if the feature isn't complete, or if there isn't a good way to indicate the feature is missing at runtime (some features simply aren't possible on all platforms, like NFC on iOS), it should be omitted from NuGet releases until it has been resolved.\n. I agree, we should not expect one developer to implement all platforms so contributing to one platform is perfectly fine (in my opinion). It will then find its way to NuGet once others have completed the other 2 platforms. And yes, that's sale figures. US figures are actually very low compared to world sales but with all the devices I am seeing around I would not be surprised that to turn around at some point. Especially kids seem to be carrying a lot of Lumia 521's since they are around $50 un-subsidized.\n. BTW, the market share in Europe for WP is ~10% (varies by country) and for iOS it is ~15%.\n. Thanks!\n. Merged to master and 1.2.1.\n. -        private static int CTL_HW = 6; /* generic cpu/io /\n-        private static int HW_PHYSMEM = 5; /* int: total memory /\nThe above probably should be const's instead but I can change those. @rmarinho, everything else seem ok?\n. I guess it wasn't completed before I replaced the master with xlabs2. I suspect this was a pull request to master instead of xlabs2?\n. Can you merge the changes with the current master and I will do a quick review and pull them in?\n. Thanks! Would you mind also merging this in xlabs2 branch? We are moving the services to a new assembly so this would not merge automatically.\n. I don't believe this would be a good idea as it now introduces a dependency to BaseView. Maybe if the sender was an object instead of BaseView?\n. @JKennedy24 the preferred method is to use Ioc container and the Resolver class.\n. Correct, it won't hurt. I will merge changes tonight and hopefully we can make a release NuGet this weekend.\n. Would it make sense to use the \"GetInstalledLanguages\" method on Android to determine available languages? Also couple minor code format notes:\nOn WP probably cleaner to set the default and be done with one line:\n-           var voice = InstalledVoices.All.FirstOrDefault (c => c.Language == language);\n-           if (voice != null)\n-               voice = InstalledVoices.Default;\nSame on iOS, use ?? to assign the value:\nvar voice = AVSpeechSynthesisVoice.FromLanguage (language) ?? AVSpeechSynthesisVoice.FromLanguage (DEFAULT_LOCALE);\nLast but NOT least, don't forget to use the language... :)\nhttps://github.com/XLabs/Xamarin-Forms-Labs/blob/c80718ba9a38367c1d183cafb3dc42024027f9e1/src/Platform/XLabs.Platform.iOS/Services/TextToSpeechService.cs#L30\n. I'll give it a closer look with some more time. I left a lot of code untouched just to avoid breaking anything. Anyone remember whose original code this is? Our 2.0 refactoring breaks the history chain unfortunately.\n. This should be OK. The BT problems were due to some of the functionality being in Xamarin Alpha or Beta channel.\n. @ibauersachs, can you fix the formatting? Tabs into spaces.\n. Any volunteers who want to review?\n. It's only a few lines of code but the big question is how secure it is.\n. One concern is the output type of the bytes. On Android it returns a bitmap, PNG on iOS and Jpeg on Windows Phone. Will there be an issue if the user wants to store the image to file and don't know what the file extension should be? Should the method also return the compression type?\n. @ravensorb the project paths are relative on purpose as that way you can reference them from a different solution. If they use solution paths then resolving NuGet packages is going to fail unless one is building from XLabs solution.\n. Thanks!\n. Thanks!\n. If the latest NuGet package still doesn't have this fix then the problem hasn't been fixed. The NuGet was released May 13th and the fix was done on March 12th.\nhttp://www.nuget.org/packages/XLabs.Forms/2.0.5610.2\n. Sorry, haven't had time to review. I will get it done by tomorrow.\n. Nice! Welcome back!\n. Pushing pre2 to NuGet. Fixed some of the iOS issues as well that are present with VS2015.\n. Thanks!\n. @ravensorb it might be good idea to add in unit testing for the implementations. I noticed that XamSettings doesn't really support full generic range. For example DateTime will fail to save and you will have to convert it manually to ticks and back. To make it more robust you could add an optional ISerializer parameter so it would be easy to store complex objects as well. If you don't want to add a reference to XLabs.Serialization then one option would be to provide some sort of delegate mechanism so one could provide (de)serialization callback instead.\n. it's a good idea to go through all the files that have changed and see if they really need to be included in the commit. If the change is just an automatic update caused by the IDE then uncheck that file and exclude it from the commit. Might be harder if you're using command line which is why for commits I use SourceTree: https://www.sourcetreeapp.com/ \n. It's all good. The build path I missed as that's a Debug config and should not matter. Release goes into build folder for NuGet publishing.\nSolution versions don't matter as Xamarin Studio and Visual Studio can handle the changes. VS2013 opens VS2015 solutions without issues.\n. Rui, you might want to check your tab/space settings as I see a lot of tabs in the mix.\n. We aren't using it now but very soon we probably will be. Some things on Windows Phone (and Windows Universal) are only possible with C++ so I do recommend we keep those references even when they aren't currently being used.\n. Yes, ARM for devices and X86 for emulators.\n. This:\n-           if (SelectedIndex != -1)\n-           {\n-               this.SelectedItem = ItemsSource[SelectedIndex];\n-           }\nshouldn't it set the item to Null if index is -1?\n-           this.SelectedItem = (SelectedIndex != -1) ? ItemsSource[SelectedIndex] : null;\n. The change seems to be in CalendarMonthView.cs. While this is better than the original implementation I would suggest looking into making the screen width a public property, or at least to adjust to orientation. What happens with this control right now when the device is in landscape mode? Does it keep its width and center (if keeping the width is desired result) or does it keep its width and align to the left?\n. Correct. You would have the option to either install \na) XLabs.Web.Portable for any project as a single DLL and use the MS Portable HttpClient library.\nb) XLabs.Web which would pull in XLabs.Web + platform specific libraries. This means no need to reference the MS HttpClient from Droid, iOS or NET45 as they all have HttpClient as part of the BCL libraries.\nI know it would have been easier to just reference the MS HttpClient and be done with single DLL but this gives more options for everyone. \n. ",
    "ravensorb": "A clickable label would be a great addition.\nFrom: ofcoursedude [mailto:notifications@github.com]\nSent: Friday, June 20, 2014 7:29 AM\nTo: XForms/XForms-Toolkit\nSubject: Re: [XForms-Toolkit] Checkbox + WP8 Renderer (#25)\nI did some extra improvements in the past few days, added some more events and such. I'm sure fixing default vertical layout shouldn't be an issue...\nAlso, does it make sense to put in a \"clickable label\"? (essentially just a subclassed label that also responds to a tap event, not much more - in general I find lack of events in x.f to be a pain)\nP.\n\nFrom: Rui Marinhomailto:notifications@github.com\nSent: \u200e20. \u200e6. \u200e2014 12:53\nTo: XForms/XForms-Toolkitmailto:XForms-Toolkit@noreply.github.com\nCc: ofcoursedudemailto:pavel@simsa.cz\nSubject: Re: [XForms-Toolkit] Checkbox + WP8 Renderer (#25)\nyeah not perfect, but it's a checkbox :)\nCan you pull that in, i will then give it a look too.\nBtw what tools do you use with git @sami1971 ? can get a way of checking PR with the tools i m using.\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/XForms/XForms-Toolkit/pull/25#issuecomment-46666647\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XForms/XForms-Toolkit/pull/25#issuecomment-46669025.\n. Have you tried the tortoise client?\nSent from my Windows Phone\n\nFrom: Rui Marinhomailto:notifications@github.com\nSent: \u00fd6/\u00fd20/\u00fd2014 9:10 AM\nTo: XForms/XForms-Toolkitmailto:XForms-Toolkit@noreply.github.com\nCc: Shawn Andersonmailto:sanderson@eye-catcher.com\nSubject: Re: [XForms-Toolkit] Checkbox + WP8 Renderer (#25)\nyeah on my mac github client works good , but my windows machine it's grashing all the time, spend all night re-installing and trying other tools and always same error. guess i have something creating conflicts in my machine.\n@sami1971https://github.com/sami1971 merge this PR please.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XForms/XForms-Toolkit/pull/25#issuecomment-46675957.\n. Question, I just tried to do this and hit a lot of errors.  It looks like the \"build all\" script is still looking in the individual release build folders instead of the consolidated central \"ReleaseBuild\" folder.  Anyone else having this issue?\n. That's a bummer -- but very understandable.  The hard part is without us working to support all of the platforms it is hard for other developers to build the apps so it gets into a cycle where without the framework the apps are too hard to build so they don't get built so people don't look at the platform.  \n@Choran66 thanks for putting all of this together -- looks really great and with a bit of luck we can get a few other involved to fill out the windows portion and get it included for everyone.\n. @Choran66, like I said, I completely understand ?. And I agree, with what you have created, it should be pretty easy for someone else to pick up and fill it in (if I have some time I'll try and take a look).\n. There should not be.  I just finished cleaning them all up on Tuesday.  What are the words you are running into? And do you have the latest project files?\nSent from my Windows Phone\n\nFrom: Oren Novotnymailto:notifications@github.com\nSent: \u00fd1/\u00fd2/\u00fd2015 8:18 AM\nTo: XLabs/Xamarin-Forms-Labsmailto:Xamarin-Forms-Labs@noreply.github.com\nSubject: Re: [Xamarin-Forms-Labs] Correcting using statements to fix solution build. (#548)\nThere's more broken in the build than using statements -- there's also some bad baths in the nuget package checks for Xam Forms.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/548#issuecomment-68525781.\n. I did a quick review \u2013 it looks good enough to merge.  Only thing I haven\u2019t don\u2019t is validated it in the new build (the one for XF 1.3.1).  Can you do a quick test and if it looks good to you, we can merge the request in to the master.\n. @onovotny if you can rebase it one more time, we should be able to merge it right away this time\n. Is this similar to this conversation?\nhttps://github.com/XLabs/Xamarin-Forms-Labs/issues/542\nIf so, maybe you could go that route as it may be cleaner than brining the UI into the business layer?\n. I am curious on why -- isn't that the value of source control?  To track changes :smile: \n. Note: 2 files got caught in \"line ending\" changes -- that is why it looks like they were completely changed.\n. @sami1971 - hmm, the resaon I switched is because I was running into issue with the relative paths.  Now when I build via batch (or curise control) it works more consistently.  Is there a specific build error you are running into?\n. Nice idea!  Any chance you'd consider adding support in for iOS and Windows -- we re trying to keep things even between the platforms going forward\n. Question -- any reason you switched over to reference based on the packages folder rather than the individual project files?  This could result in some odd issues when testing.\n. Not sure I understand -- why replicate code that another library already does rather well?\n. Ok, good points :smile: \n- Exif is needed on Windows\n- Point on iOS is valid\n- Exif could easily be updated to include additional tags\n- For the coupling, this one I am in pretty strong disagreement on. The value of the different libraries/packages is to reduce the need for one team to maintain a massive code base.  I'd rather have the owner of the ExifLib own this :smile: \nMaybe we can create a simple contract for accessing the metadata and then implement it as needed on each platform.  If you want a native implementation you would be free to create one, if other wanted a basic one that was \"good enough\" it would be provided through something like ExifLib.\nWould that work?\n. Ok, I like the idea of the separate interface that you did.  Can you extra this into a new package?  Maybe XLabs.Forms.Media for now?\n. I'll merge it today (and take care of the conflicts).  Any chance you could also add the fix for the Windows renderes?\n. If its ok with you, I am going to split this up in to two seperate commits (one for the upgrade to 2.0 and one for the appveyor fixes)\n. Is there a test case for this?\n. Maybe a change to the sample app that allows for randomly generating new items in the ItemSource (or adding a new one on button click?)\n. Looks good.  Do you want to take that idea and add it into the Sample App?\nHere is a link to the GridViewPage in the sample app\nhttps://github.com/XLabs/Xamarin-Forms-Labs/blob/master/Samples/XLabs.Sample/Pages/Controls/GridViewPage.xaml\n. Nice!  Now all we need is a Windows implementation of this control. \n. Annoying -- I though as long as it wasn't the enterprise edition it qualified :-/  \nBTW -- I was thinking maybe we use the ItemsControl as the underlying control for Windows.  Thoughts?\n. an you implement the same functionality in the Windows and Android controls as well?  Ideally the hope is to keep them all in sync.\n. Anyone have any concerns with merging this into the main branch?\n. Thanks :)  You beat me to it\n. Can you rename the projects and files to be UWP (instead of UAP)?\n. Please check the latest build -- I believe everything you are looking for is now included in the core framework\n. Do we need to update anything in the samples to demonstrate the fixes?\n. From what I can tell -- there is only one real code change in this PR, correct? That is the Height on iOS for 198+20 to 400.  Can you revert all of the other changes (to the solution and project files) and just PR the single cs file change.  \nAlso -- ideally the height would be based on device screensize and DPI -- not hard coded :smile:\n. Here is a link on how to revert a specific commit\nhttps://www.atlassian.com/git/tutorials/undoing-changes/git-checkout\n. So the goal of this is to split out Portable as a separate implementation correct?\n. Ok, that makes sense.  It looks good -- let me double check a few things and then I'll merge in the request.\n. Interesting.  How standard is this?  Is there enough demand to add it to the core framework?  Or would this make more sense as a standalone serializer for now?\n. Couldn't this also be done with a Converter?\n. What if we created a converter for this in the framework - then it would work across multiple controls, right?\n. I manually added this to the v2.3 branch\n. This is great.  Let me finish up the support for XF 2.2 and 2.3 and then we can look at merging these in.\n. @gabornemeth can you re-do the pull request for v2.3?\n. v2.3 will actually become the master -- there are too many changes to merge it back in.  So if you could merge you changes into v2.3 that would be very helpful\n. yes at least for the next few days.  I am working on cleaning things up enough to move v2.3 to master.  Sorry for the confusion (its only temporary)\n. I am curious as to why we are removing SimpleInjector?  If that is causing a build error -- we need to fix it :)\n. @gabornemeth BTW -- thanks for making the changes! \n. Would it make more sense to move these classes into the Platform component?  Core is mean to be pretty light weight.\n. I was just curious.   thanks for adding the unit test!\n. Can you submit another PR against the 2.3 branch instead of the master branch\n. Yes I believe that is what is needed -- there was a lot of refactoring in the 2.3 branch.\n. @powerdude can you provide some detail or description on what this PR does?\n. Ok that makes sense.  Any chance you want to create a sample that goes with this?  Main a XLabs.Samples.MaterialDesign.Droid sample?  or is that not worth it?\n. Not sure I see why this is needed -- the build wasn't breaking for me or on my AppVeyor instance.  Am I missing something? :)\n. that one has been broken for a while -- as we haven't updated it for the new folder structure \n. Thank you!  The hard part is, we do not normally take PRs anymore unless they cover all 3 of the platforms.  Is there any chance you can implement a basic version for UWP?\n. Thanks! I was hoping to avoid strings however it looks like there might be no other option right now.  Surprised though that mono script doesn't support enums.\n. Can you split the cakebuild fix into a separate PR?\n. What was the reason for this change?\n. Shouldn't this be based on the device screen size?\n. ",
    "saramgsilva": "I am not sure if that code is complete ok, I don\u00b4t use timeout...\n. I did not want to close it, only want that pull request be related with this issue :/\nSomeone can open it again, is not completed.\n. sorry this is ok, the issue opened is: https://github.com/XForms/Xamarin-Forms-Labs/issues/73\nI confused :/\n. We are not using StyleCop in build process.\n. @tophathacker you defined in iOS to change the master page? I tried to  use it for Android, but I got \n       \"Error   1   The name 'DrawerWidth' does not exist in the current context    \"\n. @sami1971 The pull request wasn\u00b4t accepted? \n. I did the pull request before all changes.....I did not applied the pull request because I would feedback and the pull request solve some open issues.\n. I can try, do not know when. My VS instances, in my pc, not works even\nXamarin... need to format it and install all again...but not worry, I will\nreply to you when I change it again.\nOn 19 December 2014 at 20:35, Sami M. Kallio notifications@github.com\nwrote:\n\nCan you merge the changes with the current master and I will do a quick\nreview and pull them in?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/511#issuecomment-67693689\n.\n\n\nBest Regards / Cumprimentos\nSara Silva\nMicrosoft MVP | MCPD | MCTS\nNokia Developer Champion\nhttp://saramgsilva.com http://btt.saramgsilva.com\nhttp://www.windowsphone.com/pt-PT/search?q=Sara+Silva\nhttp://pt.linkedin.com/in/saramgsilva\nhttps://twitter.com/#%21/saramgsilva\nhttps://www.facebook.com/saramgsilva http://netponto.org/\nhttp://www.windowsphone.com/pt-PT/search?q=Sara+Silva\nhttp://www.maia-fitness.com/\n. Thanks @jguertl for provide it, I requested help for it, sometime ago :)\n. ",
    "Bowman74": "You probably still have the old 'New' folder and thus are trying to run an old version of the new scripts.  That folder is gone and the script moved to the one above it.  The only reason why the ReleaseBuild folder exists is to work with the new scripts.\nSent from my Windows Phone\n\nFrom: Shawnmailto:notifications@github.com\nSent: \u200e7/\u200e14/\u200e2014 3:54 PM\nTo: XForms/Xamarin-Forms-Labsmailto:Xamarin-Forms-Labs@noreply.github.com\nCc: Kevin E. Fordmailto:bowman74@hotmail.com\nSubject: Re: [Xamarin-Forms-Labs] #69 New Nuget Scripts (#82)\nQuestion, I just tried to do this and hit a lot of errors.  It looks like the \"build all\" script is still looking in the individual release build folders instead of the consolidated central \"ReleaseBuild\" folder.  Anyone else having this issue?\n\nReply to this email directly or view it on GitHub:\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/82#issuecomment-48950985\n. Still worth updating.  Lack of documentation, different use of braces, etc.\nSent from Windows Mail\nFrom: Sara Silva\nSent: \u200eTuesday\u200e, \u200eJuly\u200e \u200e1\u200e, \u200e2014 \u200e8\u200e:\u200e18\u200e \u200eAM\nTo: XForms/Xamarin-Forms-Labs\nCc: Kevin Ford\nWe are not using StyleCop in build process.\n\u2014\nReply to this email directly or view it on GitHub.\n. ",
    "mgwalm": "You should remove StyleCop from your released source. You shouldn't force me to use it and download it. it is now effecting all my projects.\n. Thanks, Willow, good work\nI have one issue and that is it doesn't work with the ViewModelNavigation and only works on a Navigation page.\nHowever, with ViewModelNavigation  you can use push and pushmodal with any page type, contentpage, etc.\n. I realise its a problem with the xamarin classes. ive done something similar, but I just had too repeat most of the code 5 times in some extension methods.\n. No, the navigation service allows all page types to navigate to another.\nWhich, IMO, is the way it should be.\n. WillooWisp\nIve been thinking about the need to pass the page to the methods in INavigationAware, and strictly I don't think its valid MVVM. The ViewModel shouldn't know about the View.\nHowever in the not so rarefied air of real programming it is probably ok.\nMaybe it would be better to have an interface which could be mocked out in unit testing.\n. aslo, having access to the page it would mean you could display a message in the viewmodel. because this is where most of the processing occurs, this is where most messages would be raised.\ncurrently is is difficult top do this.\n. The new code still has the same problem I previously reported, namely\n. The interface AutoCompleteSearchObject means I have to carry a reference to xamarin.forms.labs all over the place, including my business layer, web ui layer, data access layer. because the objects I need to display in the autocomplete are used at all layers of my applications. it would be better if you had a displaypath property which, through reflection, can be resolved. if that property is not set it could use the object's tostring.\n. The name ExtendedButton doesn't really represent what the button does. Nearly everything in the labs is an extension of Xamarin.Forms, except where a new object.\nHowever ContentButton tells me a lot about what the button does - it contains a content which could be almost anything.\n. Very good.\nHowever I have a problem with this. Basically the way it is done means we can use this view, but not another based on the labs framework. Eg, repeater vew, grid view, mvvm base view, etc.\nWe should have one view in the framework and combine all the extras from the different views. or not have so many views but have layouts, eg, the grid view could be a layout. or, the gestures could be like attached dependency properties that we can add to any view.\nIm not sure if this can be done with Xamarin forms, but surely its a better way to solve the problem then having different views and controls where the extensions we do cant be shared.\n. ",
    "excessuk": "no probs! :)\nOn 2 July 2014 18:41, Rui Marinho notifications@github.com wrote:\n\nthanks [image: :+1:]\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/100#issuecomment-47761142\n.\n. \n",
    "ryanwischkaemper": "Yes, a loading symbol would be nice. I plan on making the loading of the image asynchronous and will include the loading symbol. One page in a project I'm working on needs to load several images from the web, and there is a slight delay when navigating to the page.\n. @sami1971 If the native platforms don't already effectively cache image downloads, then using caching for the web images would be an excellent addition. Briefly Googling the subject seems to indicate that image downloads aren't automatically cached - you have to implement it yourself. On iOS, for example, there is the NSCache class\n. @rmarinho I was thinking the same thing, but what might be more appropriate is to follow the existing convention for this project and just make it an ExtendedButton? I can think of other scenarios where a button could be extended further\n. ",
    "WillooWisp": "Hi,\nOkay, perfect will do, some comments though.\n1)\nIt's quite common I think to call abstract base classes like this with Base\nas suffix or preview. Since you call it BaseView, BaseViewModel would be\nbetter or ViewBase and ViewModelBase.\n2)\nI want to keep it as two separate classes since I think ViewModel will\nexpand even further, I think of support for NavigatedTo, NavigatedFrom,\nLoaded, Unloaded, or something, and perhaps a GoBackCommand that is related\nto a view model base class. IsBusy is there already. These things are not\nneeded and does not belong for simple Data objects, e.g. entities that only\nwant to be able to notify bindings about updates. Therefore a clean and\nsimple NotifyPropertyChangedBase class is a good practice.\n3)\nI thought the same, had the old one left in there to start with, but then\ndecided not to. But obsolete sounds good, I'll do that!\n/ Joel\nOn Sun, Jul 13, 2014 at 6:31 PM, Sami M. Kallio notifications@github.com\nwrote:\n\nFew requests before I can pull this in:\n1) remove the Base suffix as this is not recommended naming convention.\nViewModel should stay ViewModel.\n2) Why not just extend the ViewModel instead of creating another\ninheritance in the chain? Is there a specific use case for this?\n3) Renaming methods is OK as long as you leave the old method in there as\nwell with Obsolete attribute. If you want to rename ChangeAndNotify to\nSetProperty that is fine but leave the ChangeAndNotify with a simple call\nto SetProperty inside. This way existing code doesn't break and it can be\nrefactored gracefully into the new naming convention.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/138#issuecomment-48845221\n.\n. Hi,\n\nNot exactly sure what you mean, it works with ViewModelNavigation (which I\nuse for navigation) when within the context of the NavigationView\n(inheriting standard NavigationPage). If you want navigation I thought you\nwhere supposed to be withing the context of a NavigationPage?\nRegards,\nJoel\nOn Sun, Aug 10, 2014 at 11:55 AM, mgwalm notifications@github.com wrote:\n\nI realise its a problem with the xamarin classes. ive done something\nsimilar, but I just had too repeat most of the code 5 times in some\nextension methods.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/199#issuecomment-51710631\n.\n. Okay, sounds good, but then what is the use case for the NavigationPage? I\nguess it then only gives you back button, title and bar support.\n\nBut since having a NavigationPage as root does not really give you any\nlimitations, at least that I am aware of, I guess you could document that\nit is required for the INavigationAware scenario to work?\nPerhaps name the NavigationView something like NavigationAwareHostPage for\nall classes to be related in names and behavior.\n/ Joel\nOn Sun, Aug 10, 2014 at 12:54 PM, mgwalm notifications@github.com wrote:\n\nNo, the navigation service allows all page types to navigate to another.\nWhich, IMO, is the way it should be.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/199#issuecomment-51711695\n.\n. Okay, have you asked Xamarin about better exposure of the internals of\ntheir navigation service, in order to support getting the stack (i.e.\nprevious page). Then it would be possible to make this all more general.\n\nOn Sun, Aug 10, 2014 at 4:58 PM, Rui Marinho notifications@github.com\nwrote:\n\nMerged #199 https://github.com/XForms/Xamarin-Forms-Labs/pull/199.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/199#event-151131095.\n. I first had the viewmodel passed in, but since it is easy to retrieve from the binding context I thought it would be more flexible passing in the view, even If not strictly MVVM.\n\n-----Original Message-----\nFrom: \"mgwalm\" notifications@github.com\nSent: \u200e2014-\u200e08-\u200e11 11:13\nTo: \"XForms/Xamarin-Forms-Labs\" Xamarin-Forms-Labs@noreply.github.com\nCc: \"WillooWisp\" will_o_wisp@hotmail.com\nSubject: Re: [Xamarin-Forms-Labs] Navigation aware viewmodel support added.(#199)\naslo, having access to the page it would mean you could display a message in the viewmodel. because this is where most of the processing occurs, this is where most messages would be raised.\ncurrently is is difficult top do this.\n\u2014\nReply to this email directly or view it on GitHub.\n. Hi,\nI have noticed an unexpected behavior for iOS and Android, compared to\nWindows Phone and how it should work.\nI have reported this to the Xamarin support, see below.\nWe have developed a NavigationView class in order to be able to notify\nview models about NavigatedTo and NavigatedFrom, with the views coming from\nand going to.\nIt works perfectly fine on Windows Phone, but for Android and iOS, when\nnavigating back to your main view, the OnCurrentPageAppearing event\nhandler, _in the NavigationView, _is not called. It is however working\nfor other views that you navigate to from your main view.\nThe problem for Android (and iOS) is that you get the Appearing on your\nmain page called before PropertyChanging is called where we setup previous\npage and hook up Appearing. Seems wrong since PropertyChanging should\nappear before actually being changed and then I mean before Appearing is\nraised, and as I mentioned it only seems to be wrong for main page.\nOn Mon, Aug 11, 2014 at 12:47 PM, Joel Fjord\u00e9n joel.fjorden@gmail.com\nwrote:\n\nI first had the viewmodel passed in, but since it is easy to retrieve from\nthe binding context I thought it would be more flexible passing in the\nview, even If not strictly MVVM.\nFrom: mgwalm notifications@github.com\nSent: \u200e2014-\u200e08-\u200e11 11:13\nTo: XForms/Xamarin-Forms-Labs Xamarin-Forms-Labs@noreply.github.com\nCc: WillooWisp will_o_wisp@hotmail.com\nSubject: Re: [Xamarin-Forms-Labs] Navigation aware viewmodel support\nadded.(#199)\naslo, having access to the page it would mean you could display a message\nin the viewmodel. because this is where most of the processing occurs, this\nis where most messages would be raised.\ncurrently is is difficult top do this.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/199#issuecomment-51757275\n.\n. \n",
    "Elywejnak": "In last one in master. I used older version before and there was UIImage.Draw (which i think scales the image) and after that was CreateResizableImage which makes things like these stretchable bubbles\nhttp://tirania.org/monomac//archive/2012/Jan.html \n. ",
    "samu192": "usage:\n<loca l : SegmentedControlView\n    WidthRequest=\"250\" HeightRequest=\"30\"\n    TintColor=\"Blue\"\n    SegmentsItens=\"Item1;Item2;Item3\"\n   />\n. Sure\n. Android comming soon :).\nWindows maybe i need some help.\n. ",
    "bluechiperic": "Thanks!\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Tuesday, August 5, 2014 4:09 PM\nTo: XForms/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Added RepeaterView to controls list and added my contact info (#193)\nAwesome stuff Eric, i have added you to the contributors , you now have full access to accept pr and manage everything u need.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XForms/Xamarin-Forms-Labs/pull/193#issuecomment-51252333.\n. Sorry Rui, I\u2019ve been slammed with stuff here at work. I\u2019ll get to it soon I hope.\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Saturday, November 1, 2014 12:36 PM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\n@bluechiperichttps://github.com/bluechiperic can you rebase so i can merge it ? thanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417#issuecomment-61373973.\n. Rui,\nIs there something I need to do to get the pull request I created last week completed?  I am not very familiar with GitHub, so I don\u2019t know if there is anything I still need to do to complete the merge.\nThanks.\n. Yes, I have tried complex layouts.\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Thursday, October 23, 2014 4:46 AM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nIn src/Xamarin.Forms.Labs/Xamarin.Forms.Labs/Controls/RepeaterView.cs:\n\n\n{\nvar cell = this.ItemTemplate.CreateContent();\nView view;\nif (cell is ViewCell)\nview = ((ViewCell)cell).View;\nelse\nview = (View)cell;\n\n+\n- view.BindingContext = item;\n- this.Children.Insert(ItemsSource.IndexOf(item), view);\n- NotifyItemAdded(view, item);\n- }\n+\n- this.UpdateChildrenLayout();\n- this.InvalidateLayout();\n- ```\n             }\n   }\n\n}\n  ```\n\nDid you a tried a complex layout ? like a stack panel inside of a grid?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417/files#r19265356.\n. Was that part of my commit?  If so, it is in error.  I didn\u2019t touch the Geolocator stuff.\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Thursday, October 23, 2014 4:43 AM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nIn samples/Xamarin.Forms.Labs.Sample/ViewModel/GeolocatorViewModel.cs:\n\n@@ -9,7 +9,7 @@ namespace Xamarin.Forms.Labs.Sample\n```\n /// The Geo-locator view model.\n/// \n[ViewType(typeof(GeolocatorPage))]\n-\n  public class GeolocatorViewModel : ViewModel\n  ```\n-    public class GeolocatorViewModel : Xamarin.Forms.Labs.Mvvm.ViewModel\n\nWhy do we need this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417/files#r19265232.\n. Yeah, that is a problem, and I couldn\u2019t think of a clever way around it.\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Thursday, October 23, 2014 4:45 AM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nIn src/Xamarin.Forms.Labs/Xamarin.Forms.Labs/Controls/RepeaterView.cs:\n\n{\n- var cell = this.ItemTemplate.CreateContent();\n- var view = ((ViewCell)cell).View;\n- view.BindingContext = item;\n- this.Children.Insert(ItemsSource.IndexOf(item), view);\n- this.Children.RemoveAt(e.OldStartingIndex);\n\nwhat happens if OldItems >1\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417/files#r19265302.\n. That issue has been around since my first submission of the control.\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Thursday, October 23, 2014 4:45 AM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nIn src/Xamarin.Forms.Labs/Xamarin.Forms.Labs/Controls/RepeaterView.cs:\n\n{\n- var cell = this.ItemTemplate.CreateContent();\n- var view = ((ViewCell)cell).View;\n- view.BindingContext = item;\n- this.Children.Insert(ItemsSource.IndexOf(item), view);\n- this.Children.RemoveAt(e.OldStartingIndex);\n\nwhat happens if OldItems >1\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417/files#r19265302.\n. Rui,\nI am a bit lost with GIT at the moment.  How can I go about backing out the change to the ViewModels I made in error?\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Thursday, October 23, 2014 4:43 AM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nIn samples/Xamarin.Forms.Labs.Sample/ViewModel/GeolocatorViewModel.cs:\n\n@@ -9,7 +9,7 @@ namespace Xamarin.Forms.Labs.Sample\n```\n /// The Geo-locator view model.\n/// \n[ViewType(typeof(GeolocatorPage))]\n-\n  public class GeolocatorViewModel : ViewModel\n  ```\n-    public class GeolocatorViewModel : Xamarin.Forms.Labs.Mvvm.ViewModel\n\nWhy do we need this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417/files#r19265232.\n. Nevermind, I think I figured it out.\nFrom: Grover, Eric\nSent: Thursday, October 23, 2014 9:51 AM\nTo: 'XLabs/Xamarin-Forms-Labs'; XLabs/Xamarin-Forms-Labs\nSubject: RE: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nRui,\nI am a bit lost with GIT at the moment.  How can I go about backing out the change to the ViewModels I made in error?\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Thursday, October 23, 2014 4:43 AM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nIn samples/Xamarin.Forms.Labs.Sample/ViewModel/GeolocatorViewModel.cs:\n\n@@ -9,7 +9,7 @@ namespace Xamarin.Forms.Labs.Sample\n```\n /// The Geo-locator view model.\n/// \n[ViewType(typeof(GeolocatorPage))]\n-\n  public class GeolocatorViewModel : ViewModel\n  ```\n-    public class GeolocatorViewModel : Xamarin.Forms.Labs.Mvvm.ViewModel\n\nWhy do we need this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417/files#r19265232.\n. Ok, I think I have the code check-in issue stabilized.\nFrom: Grover, Eric\nSent: Thursday, October 23, 2014 9:56 AM\nTo: 'XLabs/Xamarin-Forms-Labs'; 'XLabs/Xamarin-Forms-Labs'\nSubject: RE: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nNevermind, I think I figured it out.\nFrom: Grover, Eric\nSent: Thursday, October 23, 2014 9:51 AM\nTo: 'XLabs/Xamarin-Forms-Labs'; XLabs/Xamarin-Forms-Labs\nSubject: RE: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nRui,\nI am a bit lost with GIT at the moment.  How can I go about backing out the change to the ViewModels I made in error?\nFrom: Rui Marinho [mailto:notifications@github.com]\nSent: Thursday, October 23, 2014 4:43 AM\nTo: XLabs/Xamarin-Forms-Labs\nCc: Grover, Eric\nSubject: Re: [Xamarin-Forms-Labs] Updated RepeaterView (#417)\nIn samples/Xamarin.Forms.Labs.Sample/ViewModel/GeolocatorViewModel.cs:\n\n@@ -9,7 +9,7 @@ namespace Xamarin.Forms.Labs.Sample\n```\n /// The Geo-locator view model.\n/// \n[ViewType(typeof(GeolocatorPage))]\n-\n  public class GeolocatorViewModel : ViewModel\n  ```\n-    public class GeolocatorViewModel : Xamarin.Forms.Labs.Mvvm.ViewModel\n\nWhy do we need this?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/417/files#r19265232.\n. ",
    "Snorvisable": "Thanks!\n. Thanks again :+1: \n. I was hoping you guys would say this. Yes, there should be one button within Labs with extended options. \nI like the concept of the ContenButton, it's the way to implement those extra features. In my opinion the ImageButton and IconButton should be implemented in the 'ContentButton-way'.\n. Yes, it should be double, my bad. Will change it soon. :)\nDo you have any other things you would like to see? Or is this what you were expecting?\n. Fixed in #284. Thanks for noticing.\n. I chose for a set of classes to make conversion possible from datatypes like arrays and lists (perhaps more if necessary). \nAbout the values: i'm planning to support more datatypes for the x-axis and y-axis. Currently the x-axis needs a string and y-axis a double so it can be tested and used in Alpha. The comment somewhere in code about y & x is wrong and should be x & y.\n. However your $0.02 are worth a lot to me ;), you're always welcome to submit a pull request (on this project or my fork).\nI'll replace the ItemsSource with an IEnumerable type for now. #291 \n. Exactly, with a little reflection it should be done in a minute. :)\n. I'll take it in consideration. I'm not sure about this yet. I'll let you know about any progress!\n. ",
    "Qwin": "I didn't run the unit tests but I did test it out with my Android and iOS project. Next time I'll run the Unit test. Also I added an issue where an example of the usage is given and asking if someone could test it to make sure I am doing it right. https://github.com/XForms/Xamarin-Forms-Labs/issues/224\nUpdate: I added the unit tests and corrected the namespace with the new pull request. (see the pull request for all changes)\n. Always handy I guess. :) Keeps it all in one place. Merged.\n. ",
    "powerdude": "Hi,\nJust looking over the code, wouldn\u2019t it be best to convert the data point for the X-axis to a double or decimal, instead of an int?   \nFrom: Bart Kardol [mailto:notifications@github.com] \nSent: Thursday, September 4, 2014 3:53 AM\nTo: XForms/Xamarin-Forms-Labs\nSubject: Re: [Xamarin-Forms-Labs] [Charting] DataSourceProperty & example of using the property (#281)\nMerged #281 https://github.com/XForms/Xamarin-Forms-Labs/pull/281 .\n\u2014\nReply to this email directly or view it on GitHub https://github.com/XForms/Xamarin-Forms-Labs/pull/281#event-161055004 .  https://github.com/notifications/beacon/780882__eyJzY29wZSI6Ik5ld3NpZXM6QmVhY29uIiwiZXhwaXJlcyI6MTcyNTQzOTk3NiwiZGF0YSI6eyJpZCI6NDE1MTg1NTF9fQ==--ac16e176f1773c170aa90d8c4168152c92e82a5d.gif \n. It is slightly what i was expecting.  I wasn't expecting to pass it a special set of classes, but this is ok.  I was wondering why the \"y\" value is a string instead of a double too.\n. I understand, but controls like ListView have ItemsSource property that works with any IEnumerable.  That combined with custom converters usually do the trick.  I think your goal should be, like other controls, to not impose a special class if possible and allow people to specify data bindings for all properties, or as many as possible, \nMy comment about the \"y\" value was based on what I saw in code near the Int32 conversion.  I thought there was just DataPoint.Y.ToString() or something.  \nthanks for the work and if I can get permission from work, maybe i'll be able to help you, otherwise i'll just have to keep providing my $0.02.  :)\ncliff\n. I'd propose, maybe something a little different if you were thinking of adding these fields to the chart.  There currently is a model like so:\n   Chart\n   -- SeriesCollection\n       --Series\n          -- DataPoints\n             -- DataPoint\nI'd propose maybe adding a Chart.SeriesTemplate and a Series.DataPointTemplate (or PointTemplate).  In each of those I could specify what I want to bind to.  So imagine XAML like this:\n<Chart>\n<SeriesTemplate ItemsSource=\"{Binding Series}\" >\n<Series Type=\"{Binding Type, Converter={x:local someConverter}}\">\n<DataPointTemplate ItemsSource=\"{Binding Point}\">\n<DataPoint XValue={Binding Date} XValueLabel={Binding Date, StringFormat={0:mm/yy} YValue={Binding Price} YValueLabel=\"{Binding Price, Converter={x:local specialConverter}}\"/>\n<DataPointTemplate>\n</Series>\n</SeriesTemplate>\n</Chart>\nDoes that make sense?\ncliff\n. @Choran66: I\u2019m hoping this is indeed sarcasm based on the emoticon, but not a great attitude to have for a cross-platform library.\n. This isn\u2019t a case of the open market or what Microsoft wants and doesn\u2019t apply in this discussion.  Xamarin.Forms is targeting all three platforms.  All of their code works on all 3 platforms.  This is a library that supports that effort and works for all 3 platforms.  Yes, it is open-source, and yes contributions are valuable and appreciated for the platforms that people are experienced in, but these features won\u2019t (or shouldn\u2019t) go live in the nuget package unless all 3 platforms are implemented.  It\u2019s what users would expect after using the Xamarin.Forms and is a standard we must strive to.  \nIf you can help do that when you submit the code, I\u2019m sure that would be ideal.  Thanks for the great features you\u2019ve added and if I had the experience to implement for WP, I would.\n. It would be better if the methods in the view model didn't take the view.  If you're following the pattern as intended, the view model should never know about the view\n. sure.  It provides a version of the XFormApp for material design which is the FormsAppCompatActivity and allows the IXFormApp interface to be useful for apps that inherit from FormsAppCompatActivity instead of FormsApplicationActivity\n. ",
    "nrogoff": "I can look at the windows phone if you like\n. @rmarinho  Thanks. I found your issue entry and assigned myself. Hope that's OK. \n. @rmarinho Not sure of the etiquette here. Should I remove the 'Help wanted' and 'Up for grabs' flag from the issue?\n. @winnicki Great stuff. Can you update the documentation for this enhancement please. Also will you be implementing this in Android and WinPhone?\nDoc page is https://github.com/XLabs/Xamarin-Forms-Labs/wiki/ExtendedLabel\n. @chrisriesgo I'm not sure I understand this new feature. This is a label control, why would it need a placeholder? The ExtendedEntry has a placeholder property already.\n. @chrisriesgo - OK I see. Do you mind updating the wiki page (https://github.com/XLabs/Xamarin-Forms-Labs/wiki/ExtendedLabel ) with your new feature. We are trying to keep the docs as current as possible. Thanks\n. Is there any wiki page for this control? I can see it. If there is some documentation for this control I am willing to take on the Windows Phone side of things.\n. @rmarinho @alexlau811 I think you reverted all the changes. Only needed to revert the FontName and FontFriendlyName props. All else should go. @rmarinho are you going to do this?\n. ",
    "TR500": "@rmarinho @Snorvisable \nPlease pardon me i am new to C# and am trying to get this to work\nI have a List and i am trying to bind it with the DataSource property given is my code I guess I might be doing something wrong here can you please guide\n```\n\n  <charting:Chart.Series>\n\n    <!--Items not in used-->\n    <charting:Series Type=\"Bar\" Color=\"Gray\" >\n      <charting:Series.Points>\n        <charting:DataPoint Color=\"Green\"  Label=\"Jan\" Value=\"{Binding PercentageQuantityLeft}\"/>\n\n      </charting:Series.Points>\n    </charting:Series>\n\n    <!--Items in used-->\n    <charting:Series Type=\"Bar\" Color=\"#36577A\">\n      <charting:Series.Points>\n       <charting:DataPoint  Color=\"Green\"  Label=\"Jan\" Value=\"{Binding PercentageQuantityUsed}\"/>\n\n      </charting:Series.Points>\n\n    </charting:Series>\n  </charting:Chart.Series>\n</charting:Chart>\n\n```\nHere CommitmentsModelList is the object of `IEnumerable<CommitmentsModel> \n. ",
    "Vratislav": "I have merged the separator control with the changes you guys made in the last couple of days so you can merge this pull request more easily :smile:. I kindly ask for a merge, @rmarinho \n. Thanks for the feedback,\nI will clean up the formatting. I am really missing ReSharper in XamarinStudio.\n. I have formatted the code as you requested @sami1971 . You can actually set all the formatting options in Xamarin Studio, globally or more specifically per project and then use Edit->Format->Format Document functionality.\nI've configured per project formatting options for Xamarin.Forms.Labs solution so it matches the style you desire and it appeared in the .sln file but I am too afraid to push it. (Xamarin Studio does crazy things with .sln files...)\nAnyway. This code snippet appeared in .sln file if you want to merge it somehow:\n```\n    GlobalSection(MonoDevelopProperties) = preSolution\n        StartupItem = ....\\samples\\Xamarin.Forms.Labs.Sample.Droid\\Xamarin.Forms.Labs.Sample.Droid.csproj\n        Policies = $0\n        $0.TextStylePolicy = $1\n        $1.FileWidth = 120\n        $1.inheritsSet = VisualStudio\n        $1.inheritsScope = text/plain\n        $1.scope = text/x-csharp\n        $0.CSharpFormattingPolicy = $2\n        $2.StatementBraceStyle = NextLine\n        $2.BeforeMethodDeclarationParentheses = False\n        $2.BeforeMethodCallParentheses = False\n        $2.BeforeConstructorDeclarationParentheses = False\n        $2.BeforeIndexerDeclarationBracket = False\n        $2.AfterIndexerDeclarationParameterComma = False\n        $2.BeforeDelegateDeclarationParentheses = False\n        $2.AfterDelegateDeclarationParameterComma = True\n        $2.NewParentheses = False\n        $2.IfParentheses = False\n        $2.WhileParentheses = False\n        $2.ForParentheses = False\n        $2.ForeachParentheses = False\n        $2.CatchParentheses = False\n        $2.SwitchParentheses = False\n        $2.LockParentheses = False\n        $2.UsingParentheses = False\n        $2.SpacesBeforeBrackets = False\n        $2.inheritsSet = Mono\n        $2.inheritsScope = text/x-csharp\n        $2.scope = text/x-csharp\n        $0.TextStylePolicy = $3\n        $3.inheritsSet = null\n        $3.scope = application/config+xml\n        $0.XmlFormattingPolicy = $4\n        $4.inheritsSet = null\n        $4.scope = application/config+xml\n        $0.StandardHeader = $5\n        $5.Text = \n        $5.IncludeInNewFiles = True\n    EndGlobalSection\n```\n. @sami1971 did you find some time to review the code? I really think this (or something similiar) is the way to go with custom fonts support.\n. ",
    "joshcomley": "No problem! Labs is a great project, happy to contribute\nOn 24 Sep 2014 21:08, \"Sami M. Kallio\" notifications@github.com wrote:\n\nThanks!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XForms/Xamarin-Forms-Labs/pull/334#issuecomment-56722191\n.\n. \n",
    "PenaPP": "You saved my day - thank you :)\n. ",
    "winnicki": "Yw. I know it wasn't a request or anything but I'm using it in my own project and thought I would start getting used to PR's. \n. @nrogoff K Will do. I wasn't planning on doing the other platforms but maybe on the weekend I can have a look and do it. \n. ",
    "JKennedy24": "Yes good point. I forgot about the interface. My Bad. I am very new to github\n. I was just about to ask why this hadn't been done on any of the services? Is there a different way to get service implementations now?\n. ",
    "tophathacker": "This is more of a feature addition for Android, for something I think was missing in Forms. in iOS it is handled correctly as MasterDetail acts differently between the two. I've also never turned on a Windows phone, so for that I'm not sure.\n. ",
    "chrisriesgo": "@nrogoff - It's just a way to stylistically have a placeholder text value in your label that is different than what a properly populated label might look like.  An example might be a readonly customer detail screen where you might have an italicized \"N/A\" show when a field doesn't have a backing value. Exactly like the entry, but not editable inline. It's been useful for me when databinding labels. \n. ",
    "Choran66": "Sample Xaml:\n<labcontrols:GesturesContentView>\n  <StackLayout>\n    <Label Text=\"Gesture me NOW!\" lb:Gestures.LongPress =\"{Binding DumpParam}\" lb:Gestures.LongPressParameter=\"boo\" lb:Gestures.SwipeLeft=\"{Binding DumpParam}\" lb:Gestures.SwipeLeftParameter=\"{Binding SomeBoundParam}\"/>\n    <Label Text=\"I do nothing\"/>\n  </StackLayout>\n</labcontrols:GesturesContentView>\n. Xamarin would have to open up some low level api's to allow attached properties to support gestures on an arbitrary View subclass.\nThere is nothing stopping you from (and indeed it is how it is meant to be used) from:\n``` Xaml\n    \n\n\n\n\n\n\n\n\n\n.\n.\n.\n                     \n\n\n\n\n\n\n \n```\nRight there I am combining the RepeaterView and the GestureContentView.  Any of the other View derived classes (and that includes all the layout classes) can be combined as well.\nI choose this approach since a contentview is effectively a wrapper with no visible presence.  \nI also choose to not integrate this with the TemplateSelector or the TemplateContentView since as it stands the user can combine the wrappers in whatever fashion makes sense to them.  \nDon't need template selection?  Don't use them.  Don't need gestures?  Don't use them.\nNeed them both?  Use them both.\nIn my project it is not uncommon for me to have a GestureContentView wrapped around a RepeaterView using a TemplateSelector.  It all works well. \nI can appreciate trying to have it all in one control, but I see two issues with that:\n1)  Code complexity will rise with those inherent problems.\n2)  The user could easily become overwhelmed with such a heavy control.\n. Shall do sometime tonight :D\nI'm adding more goodies as well..like a real awaitable dialog page base\nclass :D\nOn Wed, Nov 5, 2014 at 10:19 AM, Mitch Milam notifications@github.com\nwrote:\n\n@Choran66 https://github.com/Choran66 do you have time to put that code\ninto a full sample page that we can add to the samples project? If not, let\nme know and I'll do it.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-61822689\n.\n. @Sami\nCurrently only implemented on Android.  I will implement for iOS by the\nweekend. (I just have to implement one render so it should be\nstraightforward).\n\nI don't have a windows phone so I can't implement the WP8.\nTBH considering the WP8 market share.....I'm not crying over it ;)\nOn Wed, Nov 5, 2014 at 10:39 AM, Sami M. Kallio notifications@github.com\nwrote:\n\nGood to see someone working on this! I added swipe (left/right) gestures\ndirectly to ExtendedEntry and HybridWebView. On the latter it was easy\nsince it doesn't inherit from existing view but on the former the Android\nversion was a hack since the gestures do not come through and I had to\ncalculate the swipe from the touch event instead. WP8 isn't currently\nimplemented.\n@rmarinho https://github.com/rmarinho the gestures are currently a weak\npoint on the Forms and the API really could use some opening up so we can\neasily add more gestures.\n@Choran66 https://github.com/Choran66 is this implemented on all 3\nplatforms?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-61826246\n.\n. There is both sarcasm and truth in it.\n\nIf microsoft wants me to commit scant development resources to windows\nphone, perhaps they should move above 4% market share in the US(it's even\nworse worldwide.)\nWindows Phone is a case of spare cycles right now.  I prioritize it right\nup there with Blackberry.\nThis is not me saying that there windows phone is a bad platform.  This is\nme saying that time is scarce and Windows Phone is a not succeeding in the\nonly venue that counts.  The open market.\nSo no Windows Phone is not a priority for me.  If it is a priority for\nyou,feel free to implement the required renderer (that is all you need to\ndo).  Other than that Windows Phone will get love when I have spare\ntime,not until.\nOn Wed, Nov 5, 2014 at 1:13 PM, cliff v notifications@github.com wrote:\n\n@Choran66: I\u2019m hoping this is indeed sarcasm based on the emoticon, but\nnot a great attitude to have for a cross-platform library.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-61854300\n.\n. In an ideal world I would agree with you, this isn't an ideal world.\n\nMy target market is Android/iOS. Would I like to have a Windows Phone\nversion? Sure.  Is it s priority? No.\nIt is unrealistic to expect contributors to support all three platforms all\nthe time.  Specifically in this case the code for the renderer in question\nis simple and I'm sure someone interested in WP8 can finish it easily\nenough.   If they need to chat with me to make it happen I'm more than\nhappy to do so.  For my end I'm quite content with Android/iOS.\nThis response is the exact reason I have hesitated to contribute on more\ncomplex issues.  You will never get 3/3 Platform specific code from me you\nwill only get 2/3, mInd you that 2/3 is misleading since it represents\n93%(ish) of the devices out there.\nIf 93% support isn't enough to get into the nuget package, well that's your\ncall and certainly not the one that I would make.\nOn Wed, Nov 5, 2014 at 1:50 PM, cliff v notifications@github.com wrote:\n\nThis isn\u2019t a case of the open market or what Microsoft wants and doesn\u2019t\napply in this discussion. Xamarin.Forms is targeting all three platforms.\nAll of their code works on all 3 platforms. This is a library that supports\nthat effort and works for all 3 platforms. Yes, it is open-source, and yes\ncontributions are valuable and appreciated for the platforms that people\nare experienced in, but these features won\u2019t (or shouldn\u2019t) go live in the\nnuget package unless all 3 platforms are implemented. It\u2019s what users would\nexpect after using the Xamarin.Forms and is a standard we must strive to.\nIf you can help do that when you submit the code, I\u2019m sure that would be\nideal. Thanks for the great features you\u2019ve added and if I had the\nexperience to implement for WP, I would.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-61860328\n.\n. 1) If Windows phone was near 10% I'd be more interested in it.  However it\nis below 4% (dropped .3% in the last quarter)\n2) I suspect you are looking at sales, I'm looking at devices in use, very\ndifferent numbers.\n3) I suspect we will have to agree to disagree, there is simply no chance\nthat I am going to invest the time, money and effort to support Windows\nPhone for an open source project.  If that means that one of my\ncontributions doesn't get into a nuget so be it.\n\nIf someone wants to implement the Windows Phone renderer to support\ngestures, great.  That someone however won't be me.\nOn Wed, Nov 5, 2014 at 3:03 PM, Sami M. Kallio notifications@github.com\nwrote:\n\nLooking at market shares I think the 10% figure is good enough to support\nit, especially when iOS is hovering around 20% market share. In any case\npowerdude is right, if the feature isn't complete, or if there isn't a good\nway to indicate the feature is missing at runtime (some features simply\naren't possible on all platforms, like NFC on iOS), it should be omitted\nfrom NuGet releases until it has been resolved.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-61871910\n.\n. @Shawn\n\nSorry to disappoint.  As a gearhead I'd love to do it all.  Unfortunately I\nhave these silly clients that want products out the door..very unreasonable\npeople clients ;)\nOn a slightly more serious note..there is literally one class that needs to\nbe implemented for windows phone support..just one :D\nOn Thu, Nov 6, 2014 at 7:23 AM, Shawn notifications@github.com wrote:\n\nThat's a bummer -- but very understandable. The hard part is without us\nworking to support all of the platforms it is hard for other developers to\nbuild the apps so it gets into a cycle where without the framework the apps\nare too hard to build so they don't get built so people don't look at the\nplatform.\n@Choran66 https://github.com/Choran66 thanks for putting all of this\ntogether -- looks really great and with a bit of luck we can get a few\nother involved to fill out the windows portion and get it included for\neveryone.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-61971435\n.\n. Thanks Nicholas,\n\nI have no idea how to edit a wiki, but I'll be putting up a sample this\nweekend.\nThe only class that needs a WP8 do over is GetsureContentViewRenderer.cs.\nAnd there is no visual element :D\nOn Fri, Nov 7, 2014 at 7:25 AM, Nicholas Rogoff notifications@github.com\nwrote:\n\nIs there any wiki page for this control? I can see it. If there is some\ndocumentation for this control I am willing to take on the Windows Phone\nside of things.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-62135476\n.\n. GestureContentView and TemplateContentView both inherit from ContentView so\nyou can use them as a top level control, of they can be nested the same as\nany layout class.\n\nTemplateSelector technically isn't a control at all.  It is there to allow\nus to create templated controls (controls that select the datatemplate by\neither datatype of the item to be displayed or via a user supplied\nfunction) without having to reinvent the wheel on each one.\nOn Fri, Nov 7, 2014 at 10:31 AM, Mitch Milam notifications@github.com\nwrote:\n\n@Choran66 https://github.com/Choran66 I created a wiki page for\nCarouselView:\nhttps://github.com/XLabs/Xamarin-Forms-Labs/wiki/CarouselView\nIt's all done in Markup and there should be an edit button in the\ntop/right corner of the page to allow you to edit it.\nLet me know if you have any questions or issues.\nQuestion:\nShould GestureContentView, TemplateContentView, and TemplateSelector be\nconsidered top-level controls?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-62160608\n.\n. LOL I was thinking \"top level\" as in where they could go in the view\nhierarchy..:D\n\nIf you like these, check out the validation push from this morning..and I'm\nadding more validators as we speak...\nOn Fri, Nov 7, 2014 at 11:25 AM, Mitch Milam notifications@github.com\nwrote:\n\n@Choran66 https://github.com/Choran66 the way I look at it is if they\nare top-level controls that people can use, then we need samples and\ndocumentation. They look too cool not too, anyway. :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-62169967\n.\n. Agreed.\n\nWith validators in place now I think I've filled my most obvious holes so\nit's time to pause and document :D\nOn Fri, Nov 7, 2014 at 11:35 AM, Rui Marinho notifications@github.com\nwrote:\n\nWe need some samples pages and documentation.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/456#issuecomment-62171533\n.\n. The validator, and associated classes, allow for Xaml based Validation like this:\n\nxml\n<lb:Validator>\n      <lb:Validator.Sets>\n          <lb:ValidationSet>\n            <lb:ValidationSet.Rules>\n              <lb:ValidationRule Element=\"{x:Reference EmailAddress}\" Property=\"Text\" Validators=\"Required,Email\"/>\n            </lb:ValidationSet.Rules>\n            <lb:ValidationSet.Actions>\n              <lb:ValidationActions>\n                <lb:ValidationAction x:TypeArguments=\"sys:Boolean\" Element=\"{x:Reference btnregister}\" Property=\"IsEnabled\" ValidValue=\"true\" InvalidValue=\"false\"/>\n              </lb:ValidationActions>\n            </lb:ValidationSet.Actions>\n          </lb:ValidationSet> \n      </lb:Validator.Sets>\n    </lb:Validator>\n. I've tried resolving the conflict, at this point I'm worried about losing\nmy changes...not sure how to proceed.\nOn Mon, Nov 10, 2014 at 12:38 PM, Rui Marinho notifications@github.com\nwrote:\n\nneeds rebase :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/472#issuecomment-62422142\n.\n. Looks like I got it sorted.\n\nOn Mon, Nov 10, 2014 at 1:49 PM, Charles Horan charles.horan@gmail.com\nwrote:\n\nI've tried resolving the conflict, at this point I'm worried about losing\nmy changes...not sure how to proceed.\nOn Mon, Nov 10, 2014 at 12:38 PM, Rui Marinho notifications@github.com\nwrote:\n\nneeds rebase :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/472#issuecomment-62422142\n.\n. Looks like this one was successful :dancers: \n. Not sure where you are going this.  A few questions if you don't mind:\n1)  Why IEnumerable, you seem to looking for INotifyCollectionChanged, but IEnumerable does not in fact implement it.\n2) What is the purpose of the CollectionChangedHandle class?  That seems to be an abstraction looking for a purpose.  It is only used in one spot, and does nothing of note there.  Could you please amplify what it's purpose is?\n3) In a more general sense what is your design goal?\n. I was a bit more curious so I did some spelunking.  The only standard collection classes available to us that implement INotifyCollectionChanged are:\n\n\nObservableCollection(T) and ReadOnlyObservableCollection(T), this makes the IEnumerable(T) decision even more perplexing....\nThere are a few Xamarin classes but they are really not relevant for this discussion.\n\nTaking a peek at the previous commit I see this class:\n``` c#\nprivate class CollectionChangedHandle : IDisposable\n        {\n            private INotifyCollectionChanged _itemsSource;\n            private NotifyCollectionChangedEventHandler _eventHandler;\n        public CollectionChangedHandle(RepeaterView<T> repeater, IEnumerable<T> itemsSource)\n        {\n            _itemsSource = itemsSource as INotifyCollectionChanged;\n\n            if (_itemsSource != null)\n            {\n                _eventHandler = new NotifyCollectionChangedEventHandler(repeater.ItemsSource_CollectionChanged);\n                _itemsSource.CollectionChanged += repeater.ItemsSource_CollectionChanged;\n            }\n        }\n\n        public void Dispose()\n        {\n            if (_eventHandler != null)\n            {\n                _itemsSource.CollectionChanged -= _eventHandler;\n                _eventHandler = null;\n            }\n        }\n    }\n\n```\nYou are testing to see if the IEnumerable(T) implements INotifyCollectionChanged, but you do nothing if it does not.  This is a silent failure which will lead to future \"what the heck\" bugs.  Someone will see that RepeaterView only needs IEnumerable(T) and will pass in a List(T) (that doesn't implement INotifyCollectionChanged) and be reasonably upset when changes to their collection are not reflected in the controls state.\nEven worse than the suspected is bug is clearly evident bug.\nLets call repeater.ItemsSource_CollectionChanged delegateA.\nLets call the wrapped instance of delegateA (new NotifyCollectionChangedEventArgs(...) delegateB.\ndelegateA is assigned to the CollectionChanged event.\n.....later on when dispose occurs\ndelegateB is removed form the CollectionChanged event.\nThis leaves a leak where the collection has a strong reference to delegateA.\nHeck I'm not even sure why you're wrapping delegateA in a wrapper, since delegateA is already the correct type.\nIf I was forced to write this class I think I would end up with something like this:\n``` c#\n private class CollectionChangedHandle : IDisposable\n        {\n            private readonly INotifyCollectionChanged _itemsSource;\n            private NotifyCollectionChangedEventHandler _eventHandler;\n        public CollectionChangedHandle(NotifyCollectionChangedEventHandler handler, INotifyCollectionChanged itemsSource)\n        {\n            Contract.Assert(itemsSource !=null, \"Items source cannot be null\");\n            Contract.Assert(handler != null,\"Handler cannot be null\");\n            _itemsSource = itemsSource;\n            _eventHandler = handler;\n            _itemsSource.CollectionChanged += _eventHandler;\n        }\n\n        public void Dispose()\n        {\n            if (_eventHandler != null)\n            {\n                _itemsSource.CollectionChanged -= _eventHandler;\n                _eventHandler = null;\n            }\n        }\n    }\n\n```\nIt doesn't really do anything for me, but at least it doesn't introduce any bugs or side effects either.\nYour  code confuses me, I don't see what issue it is trying to solve.  Worse I know that a new bug has been introduced into working code and expect that a design flaw will surface later to confound users.\nPlease enlighten me.\n. I hadn't considered static lists....I do so little with them.  My fault.\nGlad you like the templateselector :D\nFound one more bug for you...\nc#\n  public IEnumerable<T> ItemsSource\n        {\n            get { return\n(ObservableCollection<T>)GetValue(ItemsSourceProperty); }\n            set { SetValue(ItemsSourceProperty, value); }\n        }\nIf you set ItemsSource to List the get accessor will (or at least\nshould) throw an invalid cast exception.\nOn Mon, Nov 10, 2014 at 11:54 PM, Yi Gyuwon notifications@github.com\nwrote:\n\nFirst of all, I apologize my poor English. I need much time to understand\nyou said and tell you my opinion. I hope there would be no misunderstanding\n:'(\nXamarin Forms does not have ItemsControl(of WPF) and RepeaterView is\nvery good alternative rather than ListView. In HEAD commit RepeaterView\nhave even TemplateSelector for subtypes of T. It's amazing.\nThere are several reasons why I choose IEnumerable for ItemsSource.\n1. I think it'd better RepeaterView is used more widely(as much as\n   ItemsControl of WPF) not only for dynamic collections but also static\n   collections(non-observable) with items of various types.\n2. ReadOnlyObservableCollection is INotifyCollectionChanged but not\n   ObservableCollection. ReadOnlyObservableCollection is useful for\n   some scenario such as a collection projection.\n3. INotifyCollectionChanged is not generic.\nThe purpose of CollectionChangedHandle is that make ItemsChanged(BindableObject,\nIEnumerable, IEnumerable) simple so it need not consider whether\nvalues are INotifyCollectionChanged or not.\n_itemsSource.CollectionChanged += repeater.ItemsSource_CollectionChanged;\nis my mistake and another serious bug. It should be _itemsSource.CollectionChanged\n+= _eventHandler.\nThanks so much for the review!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/479#issuecomment-62502080\n.\n. I saw :D\n\nOn Tue, Nov 11, 2014 at 8:55 PM, Yi Gyuwon notifications@github.com wrote:\n\nEvent handler bug of CollectionChangedHandle is fixed.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/479#issuecomment-62657568\n.\n. OldItems can never have more than a single item.\n\nThere is no way to remove more than 1 item from an observable collection.\nIf you clear the observablecollection then a reset event is sent.\n. ",
    "MitchMilam": "@Choran66 do you have time to put that code into a full sample page that we can add to the samples project?  If not, let me know and I'll do it.\n. Thanks.  I look forward to seeing it.\n. @Choran66 I created a wiki page for CarouselView:\nhttps://github.com/XLabs/Xamarin-Forms-Labs/wiki/CarouselView\nIt's all done in Markup and there should be an edit button in the top/right corner of the page to allow you to edit it.\nLet me know if you have any questions or issues.\nQuestion:\nShould GestureContentView, TemplateContentView, and TemplateSelector be considered top-level controls?\n. @Choran66 the way I look at it is if they are top-level controls that people can use, then we need samples and documentation.  They look too cool not too, anyway. :)\n. ",
    "gyuwon": "@rmarinho Thanks :-)\n. First of all, I apologize my poor English. I need much time to understand you said and tell you my opinion. I hope there would be no misunderstanding :'(\nXamarin Forms does not have ItemsControl(of WPF) and RepeaterView<T> is very good alternative rather than ListView. In HEAD commit RepeaterView<T> have even TemplateSelector for subtypes of T. It's amazing.\nThere are several reasons why I choose IEnumerable<T> for ItemsSource.\n1.  I think it'd better RepeaterView<T> is used more widely(as much as ItemsControl of WPF) not only for dynamic collections but also static collections(non-observable) with items of various types.\n2.  ReadOnlyObservableCollection<T> is INotifyCollectionChanged but not ObservableCollection<T>. ReadOnlyObservableCollection<T> is useful for some scenario such as a collection projection.\n3.  INotifyCollectionChanged is not generic.\nThe purpose of CollectionChangedHandle is that make ItemsChanged(BindableObject, IEnumerable<T>, IEnumerable<T>) simple so it need not consider whether values are INotifyCollectionChanged or not.\n_itemsSource.CollectionChanged += repeater.ItemsSource_CollectionChanged; is my mistake and another serious bug. It should be _itemsSource.CollectionChanged += _eventHandler.\nThanks so much for the review!\n. Commit '79e1c05' fixes it. :-)\n\nIf you set ItemsSource to List the get accessor will (or at least should) throw an invalid cast exception.\n. Event handler bug of CollectionChangedHandle is fixed.\n. \n",
    "BrillioMobility": "please review and accept the request\n. @rmarinho already done, please check \n. fixed\n. fixed\n. fixed\n. ",
    "alaatm": "Oh, I wasn't aware of that. I was using the wrapper for a long time and thought I would move it here. Thanks for pointing that out.\n. ",
    "davidtavarez": "Ok, I will.\n. ",
    "bokmadsen": "Why is this closed? I've a situation where I reload a HybridWebView and it crashed because Element is null\n. Can't see that's it's fixed \n. Can't seem to find a place to reopen the pullrequest?\n. ",
    "onovotny": "There's more broken in the build than using statements -- there's also some bad baths in the nuget package checks for Xam Forms. I've submitted a PR with those fixes too.\n. @ravensorb  I have the latest, see my PR #551 for the changes; there aren't many. It was some old -pre4 stuff hanging around.\n. This PR is up-to-date with master.\n. Ping @rmarinho? Can this please get reviewed/merged so it can be in the 2.0 nuget?\n. Works for me\n. ",
    "guitcastro": "Hey guys, any work on this ?\n. Can you merge this now please ? \n. Done. \n. Done.\n. @Axel3232   He wants you to rebase, because by the time that you did the PR some commits were made in the master branch, so your branch is not up to date with master and have some conflicts. You need to merge your changes in the master and then make the PR again.\n. Can you show me an example of a Control implementing IDisposable ?\n. ",
    "benpage": "OK cool - i've removed any reference to 'baseview' now.\n. hmm from my perspective, it's just telling the viewmodel that it's appearing or disappearing - hence I removed any reference to the view/page UI.\n. ",
    "rid00z": "@rmarinho So that's Labs converted to Unified? Great work!\n. ",
    "gabornemeth": "I think this should be done on CustomRadioButton also.\n. Is there any chance it become merged? I have also made some fixes on the iOS renderers since then.\n. Thank you. I'm going to check WinPhone renderers for Checkbox and RadioButton. As I can see there are currently no renderers at all for IconLabel and IconButton on Windows platforms. I also plan to create some UWP renderers as well, as I'd like to use XLabs for UWP apps.\n. No you don't. Now the samples are just working consistently across platforms.\n. Are these modifications planned to be merged?\n. Thanks.\nMeanwhile I fetched v2.3 branch, now looking into tests, we discussed.\n. When will be the v2.3 branch merged into master? Is it planned? I need my modifications and also UWP support.\n. @ravensorb My v2.3 branch does not contain these changes. Won't v2.3 be merged into master? I can make a pull request from my master branch, but that cannot be merged automatically - there are conflicts. This is the same as if you try merge the main master branch to v2.3.\n. Ok. I'm gonna merge them to my v2.3 fork and make a pr. So I should do any further development, fixes, etc. on v2.3, right?\n. We cannot use SimpleInjector in a MonoAndroid project directly, because it brings its dependencies (System.Reflections.Extensions and the others you can see at https://www.nuget.org/packages/SimpleInjector/3.1.4). But these dependencies cannot be installed by Nuget in the MonoAndroid60 profile. I think SimpleInjector package's owner can fix this.\nYou can however reference a PCL using SimpleInjector from a MonoAndroid60 project. But in this case the test projects (XLabs.IOC.NUnit.Droid and XLabs.NUnit.Droid) needed SimpleInjector directly because of SimpleInjectorResolveTests. I have removed this from Android projects to be able to run the tests.\nI see if I can move this to a PCL project - that just came to my mind now :)\n. Which classes do you think of? As I can see BigEndianReader is a basic low-level component, implemented in a cross platform way. To me it seems right in the Core.\n. I have also fixed issues of Cake build mentioned in #1253 plus modified IncrementVersion task to actually update version.json. Please review and merge if you agree with those!\n. I have updated my branch. Now here should be only the changes of PopupLayout.\nWould you like me to create another pr for the Cake build script (using Mac agent correctly) or you don't want to use it?\n. ",
    "reinhardsual": "Is this applied to the latest Nuget? I still have this problem in 2.0.5546.35667.\n. ",
    "kirtisagar": "@MitchMilam  @reinhardsual I have tested the code is working fine but looks like its not updated in Nuget, Can anybody help me to resolve the Nuget issue?\n. ",
    "mahabaleshwarhnr": "@kirtisagar radiobutton image still not showing in iOS even installing package XLabs - Forms 2.0.5564.1-pre1.\n. ",
    "jsmarcus": "Can I +1 this? The old navigation was much better.\n. Ugh, this file has a mix of spaces and tabs for it's formatting.\n. VS automatically made that change. Sorry for the extra commits, not sure why they got added to the PR. Still a bit new to github.\n. ",
    "r2d2rigo": "Ugh, damn line endings. Will revert, fix and send a new commit when I have time.\n. ",
    "philipag": "sorry. I restored old formatting.\n. ",
    "ibauersachs": "Sure, no problem. Only the new/modified lines or the whole file?\nWhat about the rest of the project and a note in CONTRIBUTING.md?\n. ",
    "andreinitescu": "any issues with this PR?\nlet me know any I will modify\n. ",
    "alexlau811": "According to latest XF implementation, there is no way to use custom font in Android without a CustomRenderer. Therefore FontName and FontFriendlyName should not be removed and should be added back.\n. ",
    "dhindrik": "Have updated the code and added sample code\n. What do you think about the updates?\n. ",
    "arividar": "Waiting for a Nuget package update with this fix - any news on that?\n. ",
    "ghost": "yea, can do. I just haven't got there yet. iOS is tricky since the underlying UILabel doesn't have a \"placeholder\" property.\nI can take a look at it this weekend and see if I can make it work.\n. ",
    "zippo227": "Does anyone have any questions for me on this? Am wondering why no one has commented.\n. Thanks @sami1971 Happy to contribute to XLabs.\n. @sami1971 Hi Sami, I've now also added a fix for the picture in the hybrid web view renderer sometimes failing to draw on Android. As described here. \nhttp://stackoverflow.com/a/12039477/1894055\n. ",
    "JasonBSteele": "Totally agree, generics didn't give us anything for this Control apart from added complexity. Thanks,\n. ",
    "j0nscalet": "Hi everyone...how come this was never merged? I agree completely and just wondering if I'm missing something. Thanks!. ",
    "jguertl": "DropShadowColor for Android and WP\n671 @rmarinho\n. ",
    "ramonharrington": "This is intended to address #870 \n. ",
    "Xerosigma": "You are awesome. Thank you.\n. ",
    "nsainaney": "Fixed the Readme.md conflict\n. ",
    "maurizioceravolo": "Is it working? I'm trying to use it on iOs but I can't see any gradient\n. ",
    "HNordhaus": "Exactly! On Android the Gradient works perfectly, on iOS it does not work. Any ideas?\n. ",
    "jevonsflash": "it cannot works on latest version of xamarin.forms, both Android and iOS can't display out now. ",
    "nmano2188": "Gradient does not work in ios.. ",
    "bigemon": "It's very helpful to me.\n. ",
    "Kingwl": "it's amazing!!!!!!!!!!\n. ",
    "nicolai-hugelawn": "Sorry, included too many commits in this pull request.\n. ",
    "DevinvN": "Sorry forgot to add the usings...\n. ",
    "keozx": "ok removed the changes with new commit, my VS changes it automatically to 5.1 even when undo :S don't know how to prevent that\n. ok copy that :+1: \n. Uhm I see but how can I compile for Any CPU when using C++? I should use ARM or x86 right? \n. I'm not sure whether I need to merge this or reset this? :S\n. It looks like I need to add the declaration to Android and iOS even if it is not implemented now, I will implement it anyway soon\n. Is it ok then to leave it for VS 2015? I think this was changed because I opened in 15\n. ",
    "Axel3232": "Not sure what you mean by \"rebase with master\", but I can update the doc in an other PR ?\n. Updated the code according to your comments, except for C#6\n. Several explanations : \n- Because the Exif parser is only needed for Android (dont know for win), on iOS the Exif metadata are retreived using AssetsCatalog or PhotoKit.\n- Because the ExifLib implementation does not retreive all tags (Gps Bearing for instance)\n- To get rid of an external dependency and reduce coupling\n. Hi, \nI agree on your proposal, I agree because it is already the case in my PR  :smile:\nSee the XLabs.Platform.Services.Media.IExifReader interface and his implementation in each plateform project : \n- ExifBinaryReader in Droid (this one use the extracted ExifLib service)\n- ExifAssetsCatalogReader or ExifPhotoKitReader in iOS project (depending on iOS version)\nThe main problem regarding coupling is that the MediaInfo class has a JpegInfo prop wich is defined inside ExifLib and wrap some metadata but not all...so we are stuck with this external implementation...\nFor me, that is bad coupling.\nThat's why I decided to include the ExifLib implementation in the XLab code this way ExifBinary reader only expose a generic method to get any Exif tags using an Enum Key.\nAnd it is the responsability to the platform project to wrap metadata in more \"friendly shortcut object\" that implement the IJpegInfo interface\nAnd that explains the breaking change in MediaFile : \nWarning there is a breaking change in MediaFile, the JpegInfo prop has been replaced by ExifInfo.\nTell me if it is not clear :smile: \n. So for me there is 2 solutions : \n- Use my PR as it is :smile: \n- Ask the ExifLib owner to implement a method letting us ask for any ExifTags using an enum key, then I'd be able to use his librairy in my PR without intrudcing coupling with his JpegInfo object\n. Any feedback ?\n. ",
    "Johan-dutoit": "Can't seem to separate the two commits... into separate pull requests... sorry.\n. Does this make it easier to merge?\n. ",
    "DavidStrickland0": "need to move the new Test Project under the UnitTest Folder also created a XStudio sln file so I can submit it as well.\n. Redoing with the SQLCaching add since those are ready now,\n. Didn't actually mean to push this all the way up yet. \nMy apology however TBH I thought Xlabs was dead I was starting to work on a Fork.\n. ",
    "DavePilks": "Has anyone had a chance to review this?\n. ",
    "pfaucon": "I'm not sure exactly how to add a test case for this, if you could advise I would be happy to take a look at it though(I don't find any examples in the iOS unit testing).\nThe expected behavior is:\n- Attach a new ObservableCollection as an items source\n- Modify the observable collection\n- The DataCollectionChanged should be called \nIn my manual tests it was not, but it was called after the sign inversion.\nThe other commit with modifications to the actual dataCollectionChanged I'm also not sure how to test.  Can we inject a different Control in for the Control property and verify the changes?\n. That makes sense, here(1) is a basic project showing the two examples; the one from nuget, and the custom one copied from my proposed changes (with the namespace changed to match the project).\nYou won't notice a loading lag when adding items because the cells are very simple and light, but in our use case where the gridview is full of camera images (stored as byte[] and converted when shown the reload is much more obvious). If I get time I'll update it, but think I it would be enough to show that the converter is being called multiple times whenever a new item is added (without the proposed modification).\n(1) https://github.com/pfaucon/XamarinFormsGridExample\n. Sorry, yeah, that would have made a lot more sense to do directly.  I added the changes with some commits to the patch-1 branch.  \nI think the reason that the original developer heavy-handedly did a reloadData was that calls that are made asynchronously to the UI are basically ignored, so my approach actually didn't work directly in the sample app, but I modified it to queue a block on the made thread before inserting indexes (lightweight so it shouldn't be a problem).\nIn the renderer there is a try-catch block, I don't think that it belongs there (in my experience nothing inside should be in a situation to throw exceptions), but I don't feel comfortable modifying that.\n. I would be willing but I don't have a win10 vm, and my windows 8 vm won't update, apparently virtual machines aren't eligible for the update :) \n. ",
    "haroldma-zz": "This is the building error one gets using XLabs.Forms in UWP:\n\nType universe cannot resolve assembly: Xamarin.Forms.Platform.WP8, Version=1.5.0.0, Culture=neutral, PublicKeyToken=null.\nCannot resolve Assembly or Windows Metadata file 'Xamarin.Forms.Platform.WP8.dll'\n. \n",
    "trevoriancox": "Very helpful fix, thanks! \nNote it still has the original design intention of filling the screen width, and still has a hardcoded height. \n. Code from this pull request was really helpful for getting the control to be usable. Specifically _screenWidth = UIScreen.MainScreen.Bounds.Width. Thanks @nixx00 !\n. ",
    "nixx00": "I can't see the code from where I am, but the main piece of code was not in\nthe constructor.   There is a value that sets the width based on the max\nscreen size width.   I think it was in the calendarView.cs?\nOn Saturday, 26 March 2016, Shawn notifications@github.com wrote:\n\nFrom what I can tell -- there is only one real code change in this PR,\ncorrect? That is the Height on iOS for 198+20 to 400. Can you revert all of\nthe other changes (to the solution and project files) and just PR the\nsingle cs file change.\nAlso -- ideally the height would be based on device screensize and DPI --\nnot hard coded [image: :smile:]\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1111#issuecomment-201908551\n. Thanks. I'll look at this on Monday.\n\nOn Saturday, 26 March 2016, Shawn notifications@github.com wrote:\n\nHere is a link on how to revert a specific commit\nhttps://www.atlassian.com/git/tutorials/undoing-changes/git-checkout\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1111#issuecomment-201908824\n. Without a doubt more can be done with this. My goal was to simply fix the\nportrait view on the larger screens.\n\nOn Saturday, 26 March 2016, Sami M. Kallio notifications@github.com wrote:\n\nThe change seems to be in CalendarMonthView.cs. While this is better than\nthe original implementation I would suggest looking into making the screen\nwidth a public property, or at least to adjust to orientation. What happens\nwith this control right now when the device is in landscape mode? Does it\nkeep its width and center (if keeping the width is desired result) or does\nit keep its width and align to the left?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1111#issuecomment-201912848\n. Ah so iOS would execute.  You can ignore that change. Sorry\n\nOn Saturday, 26 March 2016, Shawn notifications@github.com wrote:\n\nIn Samples/XLabs.Sample.iOS/Info.plist\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1111#discussion_r57517276\n:\n\n@@ -71,5 +69,7 @@\n        NSAllowsArbitraryLoads\n\n\n-   CFBundleIdentifier\n-   ca.sk.paradigm.www\n\nWhat was the reason for this change?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1111/files/a3c6a92b8aee344df3520b51c7cf3215eee41759#r57517276\n. As far as I can tell those numbers didn't do anything.\n\nOn Saturday, 26 March 2016, Shawn notifications@github.com wrote:\n\nIn src/Forms/XLabs.Forms/Controls/CalendarView.cs\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1111#discussion_r57517291\n:\n\n@@ -979,7 +979,8 @@ public static DateTime LastDayOfMonth(DateTime date)\n        public CalendarView()\n        {\n            if(Device.OS == TargetPlatform.iOS){\n-               HeightRequest = 198 + 20; //This is the size of the original iOS calendar\n-               //HeightRequest = 198 + 20; //This is the size of the original iOS calendar\n-                HeightRequest = 400;\n\nShouldn't this be based on the device screen size?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly or view it on GitHub\nhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1111/files/a3c6a92b8aee344df3520b51c7cf3215eee41759#r57517291\n. \n",
    "Mardaneus86": "Any reason for closing this PR? Because the issue still exists.. Okay, I'll take a look at it when I find time!. ",
    "cdie": "Sure it can, but it's more easy for developers to enter an attribute than\nwriting a converter (this is WPF idea based, I thought it was not bad)\n. ",
    "JasonGowthorpe": "Hi Shawn,\nThat was submitted against 2.3, locally it was from master, do I need to merge it to the 2.3 local branch (if such a thing exists) then send the pull request from there?\nThanks\n. Is there something I need to do before this can be merged?\nThanks\n. I'm happy to make any required changes if you can just tell me what is problematic with my commit. I would really like to see this get into an offical release so I don't have to worry about releasing an update when Apple decide its time for iPhone 7 etc.\nThanks\n. Thanks a lot.\nIs there any schedule for when the next nuget packages will be released?\nMy app is due for submission imminently, i'm just wondering if I should try to stall with the hope of avoiding an update for iPhone 7.\nThanks again,\nJason\n\nFrom: Shawn notifications@github.com\nSent: 04 July 2016 18:11\nTo: XLabs/Xamarin-Forms-Labs\nCc: JasonGowthorpe; Author\nSubject: Re: [XLabs/Xamarin-Forms-Labs] Issue #1167: Don't rely on knowing the hardware version number to identify details about the device. (#1191)\nMerged #1191https://github.com/XLabs/Xamarin-Forms-Labs/pull/1191.\n\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHubhttps://github.com/XLabs/Xamarin-Forms-Labs/pull/1191#event-712244189, or mute the threadhttps://github.com/notifications/unsubscribe/ASq6I3YJPFDMTsOwn9ToQUacWD9y3mVPks5qST7LgaJpZM4I_YSt.\n. ",
    "halkar": "@ravensorb yes, that's really weird but this one is broken https://ci.appveyor.com/project/xlabs/xamarin-forms-labs And I wasn't able to build it locally as well.\n. @ravensorb ok, but still I can't build latest master locally (Xamarin Studio 6.0, Mac).\n. How it's possible to build this file without this missing comma?\n. ",
    "Tharkius": "I might find some time to later today, if what I have in mind works out :)\n. Ok, I've been doing some research about the better way around this for UWP, and so far, this seems to be the best approach:\nhttps://github.com/VincentH-Net/WinRT-RichTextBlock.Html2Xaml\nI'm not really experienced in WinRT programming though, but my idea is to create a renderer that binds some basic properties of the Label class, to the ones of RichTextBlock, and make use of that library I linked for the HTML processing.\nAny thoughts? Anyone interested? Would this be feasible?\nEventually, I'll be closing this PR and create a new one (gotta do some cleanup in my fork) when I'm done. That is, if I actually manage all this, ofc.\n. ",
    "liambluebox": "I can confirm this fixes the issue I was having with PopupLayout. Would be nice to have merged in.\n. ",
    "neoncube2": "Thanks! :). ",
    "weitzhandler": "Closing this PR, as it contains C#7 code, please accept this one instead.. Once I see this PR is accepted I'll update some more NullReferenceExceptions this repo is flooded with.. ",
    "saamerm": "Whats MD?. ",
    "vasani-arpit": "Mark down. ",
    "danhuynhdev": "Reference #1087 . ",
    "vizee": "nice code\n. ",
    "zapline": "cooooooooooool!!!!!!!!\n. "
}