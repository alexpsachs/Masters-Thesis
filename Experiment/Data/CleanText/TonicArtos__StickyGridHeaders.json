{
    "TonicArtos": "Closed in cbb7e21c9d647b785cc725aea9831005a35c4793\n. I have an idea of what is causing the problem. I've just moved apartments so it'll probably be a couple of days before I can fix it.\n. I used the callback model the listview already uses for item clicks. This means you need to set a header click, or long click, listener on your SGHGridView, not a listener on the actual header view.\nThough I imagine, should you found it convenient, you could set a click listener on your view as you mentioned you tried above, and trigger the click event on the view from the callback from SGHGridView.\n. It may be possible to honour the expected behaviour of android:verticalSpacing, I'll look into it. \nPlease file the second problem as a new issue.\n. The vertical spacing between the item rows and header rows can't be separated from the vertical spacing elsewhere in the current design (read. hack around GridView) of StickyGridHeadersGridView.\n. Vertical spacing is just an offset like top margin. I am not sure if it will work but maybe just using top padding to get your card offset might work. Sorry, I don't quite understand what you mean by double padding.\n. Talking about padding actually gave me an idea of a possible, crazy, solution. If I put it in a branch, can you test it? I don't have any complex code using StickyGridHeaders right now.\n. Okay, check out the branch pad_vspacing. It is an implementation of vertical spacing using padding in SGHs internal view wrappers. It doesn't support negative vertical spacing at the moment. That can only be done using the native implementation and the two can live side by side.\nThere are outstanding issues with the changed touch targets with this method.\n. I am curious to know if you need negative vertical spacing with this implementation.\n. The list selectors will not overlap with this. Try this out when you can, however I am thinking the hack around the native implementation is the best, least disruptive approach. Perhaps I can add this implementation as an alternative attribute. It would be nice if list views weren't so hands off. Thanks Google!\n. Ah, my mistake. I thought you were describing two unrelated bugs. I understand how the flickering problem is created through interaction with the vertical spacing attribute now.\nThanks.\n. In the example code I saw good results with values up to -15dip, I'd be more confident with values <10dip though. I am guessing your max negative value is half the height of the shortest row that will be displayed in the grid view.\n. There are at most two duplicates of a header around at a time. The sticky version and the list version. Just keep a reference of the header views you return in the adapter (getHeaderView()) like you mentioned. To track the stickied header is a bit harder but possible. However, it would just be easier to add a call to get the stickied header from the gridview :).\npublic View getStickiedHeader()\nI am going to sleep now, please feel free to add it yourself if you like.\n. or perhaps boolean isStickiedHeader(View)\nAh, I am too tired right now. Sorry.\n. The fix for #14 should fix this additional issue.\n. Can you elaborate or provide code demonstrating your problem. I am currently unable to replicate your issue. \n. What kind of container?\nOn 26 Mar 2013 20:21, \"alioooop\" notifications@github.com wrote:\n\nIm at work right now but I can describe my code and hopefully its enough!\nI got a viewpager with three fragments, the last fragment has a\nstickygridheadersgridview :)\nthe headers has two textviews, one on the right side that wraps content\nand one on the left side that fills the space like this: | | |\nwhen changing orientation, the headers width stays the same as before and\nwont adapt to the new width...\nIf this doesnt help I will send some real code later! :)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/14#issuecomment-15444649\n.\n. Just checking back, did the fix work for you?\n. I tested the layout you gave in a view pager with this most recent commit and it would appear to be fixed.\n. Check out my file picker project. It uses a StickyGridHeadersGridView\ninside a ViewPager without the problem you are having.\n. I put your layout in it to test. That was when I noticed that the padding\nwasn't being added to the measuring spec.\n\nAre there any differences to how you are integrating StickyGridHeaders into\nyour project compared with file picker?\n. I was thinking along those lines as well. I have tested on various nexus devices and a Lenovo tablet my work has.\n. It does seem strange to me that the measurement lags the configuration change. Why don't you throw a call to measureHeader in onSaveInstance state in your local copy of SGH and see if that fixes the bug?\n. Okay, that could mean something. I'll look into it.\n. Okay, these configuration change overrides replicate the bug for the stickied header. I'll look into a solution.\n. It may be of interest that the bug only manifests with the combination of orientation and screenSize overrides.\n. Confirmed.\n. I haven't been able to replicate this issue with RelativeLayout on my side. Can you show the code snippet where you are inflating your header please. \n. Try using\nvi.inflate(R.layout.headline_list_first_item1, arg2, false);\nThe relative layout requires the layout parameters from the container arg2, and you need to make sure it does not attach by passing false as the third argument to the inflate call.\n. After looking through how things are done in the stock views I decided to ensure the adapter view has layout params. This issue shouldn't come up again.\n. Presently, you can collect the touch events using a listener on StickyGridHeadersGridView. It will give you the view and you can pass the event onto your widget inside the header.\nI am looking into how to pass the touch event through to nested widgets automatically.\n. Okay, I have worked out what needs to be done to make the touch events flow on down to the headers. I just have to figure out how to make it all work with the great big hack around GridView. This will probably take me a while to get done as it will probably change pretty much how StickyGridHeadersGridView works.\n. I am working on it at the moment.\n. This issue is being addressed in the branch touchable_headers, it won't be merged into master until a small number of issues are resolved. If you want to check out the branch touchable_headers, test it in your code bases, and provide feedback in #65, I'd be very happy.\n. Resolved in 824f97b6d3cf44ae2efc060012420f72bba297bb.\n. Fair enough :). Thanks!\n. I presume you mean the current stickied header.\nThis will have to be a non-XML API, for .jar reasons.The same as toggling the stickiness of headers.\n. Released. Tagged as 1.0.\n. Thank you for the bug report. I'll look into it.\n. I haven't been able to reproduce this issue with the device emulator.\nCan I see your XML layout for the header and the relevant XML for the SGHGridView configuration. Perhaps there is something in there that might explain things.\n. Hi there, sorry for disappearing like I did. I've made some considerable changes to SGH. If you are still interested I'd appreciate it if you could try the latest code, it is possible the changes may fix the problem. Otherwise, I'll see what can be done. Thanks.\n. \u2026of course.\n. Thanks for your pull request. My apologies for taking so long to get around to this. As a part of the latest changes ReferenceViews were removed from SGH; so I won't be merging your changes. The issue with the wrong view being returned to the client from the GridView shouldn't happen now either.\n. I'm guessing this is related to some other problems with the view wrappers. When those problems are fixed I'll check back here.\n. Ah, that is some debug code. I thought I removed it.\n. Is it a large space below every header?\nOn 29 Jul 2013 11:08, \"Mory30\" notifications@github.com wrote:\n\nOk for the blue color, but I still got a hudge space before the first row\n(I didn't mention it on my last message but it was there)\nThanks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/30#issuecomment-21693191\n.\n. The problem must be related to the fillers used to space the header. The current design is the the filler points to the last item created for its row and uses its measured height as a reference to determine its own height. Is it possible for your header to give a different height at different times?\n. It looks like the HeaderFillerViews in the first row are pointing to the wrong item.\n. Wait, so you are getting this large space in the middle of the grid too?\n. Could you please pull the temp branch and tell me what you observe. The fillers in the header rows should be coloured blue, and the fillers in the content rows should be coloured green. The headers in your case will hide the blue.\n. What is the output in the log? I am looking for something like this.\n\nD/getView (10956): Position: 0, Kind: -2\nD/getView (10956): Position: 1, Kind: -3\nD/getView (10956): Position: 2, Kind: -3\nD/getView (10956): Position: 3, Kind: 0\nD/getView (10956): Position: 4, Kind: 1\nD/getView (10956): Position: 5, Kind: 2\nD/getView (10956): Position: 6, Kind: 3\nD/getView (10956): Position: 7, Kind: 4\nD/getView (10956): Position: 8, Kind: 5\nD/getView (10956): Position: 9, Kind: 6\nD/getView (10956): Position: 10, Kind: 7\nD/getView (10956): Position: 11, Kind: 8\nD/getView (10956): Position: 0, Kind: -2\n. Thanks. Could you also show me the XML you are using for your header and the style, or drawable you are using in that header. Also, it'll be handy to know the version of Android you are using and the Phone OEM, or ROM you are using. The behaviour of the GridView is different from what is expected so I need to know more. Thanks.\n. Maybe, could you try resetting your image cache when you resume, or attach.\n. Right now, for me, the highest culprit on my list is the handling of layout parameters, right now things are pretty loosely handled.\n. Okay, I am going to try and replicate the problem on an 4.1 AVD.\n. Okay, can you try pulling from temp again please. I've just restored some of the old behaviour that might fix the problem. I vaguely remember some of the older versions of the GridView code doing some weird things with the order with which it measured items. It was part of the reason I had the old bad way of measuring items.\n. Sorry, I misunderstood you earlier. I haven't been able to replicate the problem anyway. There must be something I am missing.\n. Okay, that'll work for me. Thanks.\n. I got an opportunity to look at this again just a few minutes ago. There is a bug when measuring the headers that really only shows with long text strings. It seems the reason why I didn't pick this up is because none of my test cases used long strings in the first item which is the only one to reliably replicate the error. Thank you for your demonstration. I'll see about a fix now.\n. There is an extra pass of measuring at the moment and a few wrappers which\nare probably slowing things down. Including, IIRC, some unnecessary\nreflection.\nIn other words, there is plenty of room for optimisation in the library,\nincluding some easy low hanging fruit. If you have time, please feel\nwelcome to do so. I am completely swamped right now.\nOn 5 Jun 2013 23:39, \"Eugene Popovich\" notifications@github.com wrote:\n\nI've noticed the issue when i tried to apply StickyGridHeadersGridView to\nshow image thumbnails in the grid with categories like this\n[image: image]https://f.cloud.github.com/assets/2315223/610890/2b4b4dea-cdc2-11e2-8e4d-216c3424e013.png\nThe scroll is slower and not so smooth in compare with regular GridView.\nIt happens even if i use standard adapter without headers.\nIs there any workarounds for this? Thanks\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/32\n.\n. I'll be taking a look at it this week. From here it looks good. Of course, I'll just test it to make sure :). Thanks guys.\n. I've merged it in my local repo. It seems performance on Android 4.3 is much worse on my test device and this patch doesn't fix that. I am currently seeing what can be done.\n. Thanks for your patch. In the end I ended out not using it because the changes needed were far more extensive. However your initial work was very helpful. Thanks.\n. This trace indicates the problem was caused by the view tracking internal to the base adapter wrapper. As this portion of the wrapper has been entirely redesigned I am closing this issue.\n\nIf the problem occurs again with the new changes please file a new issue and reference this one.\nThe commit at present is 46f945725c3cfc74c5601672f303863cde212f58.\n. There are probably all sorts of things wrong with animations. I want to get the header view hierarchy problem resolved before I tackle this.\n. It is possible that this issue has been resolved. I'd appreciated it if you could try your code with the latest changes in master. Thanks.\n. I haven't looked into supporting multichoice yet, it is in my todo list.\n. Sorry for the delay in replying. Are there any commonalities between null pointer exceptions when they occur? I am particularly concerned with the content type being revealed, or is it a header being revealed with the scroll action? Also, does the error only happen when scrolling in a particular direction, or does scroll direction not matter?\n. Okay I've managed to duplicate the error. I am looking into the fix at the moment.\n. The code related to this trace has been removed entirely so I am closing the issue.\n. There are some strange things with the adapters. I'll see about a better\nexample, but for now you can look at the simple adapter version coupled\nwith its wrapper.\nThe reason you aren't getting your adapter back out of the GridView is\nbecause it has been wrapped.\nNow that it has been some time I think whole arrangement of the adapters\nand their wrappers needs to be looked at.\nOn 11 Jul 2013 21:23, \"King64rus\" notifications@github.com wrote:\n\nHi\nI'm trying to implement my own StickyGridHeadersBaseAdapter, my current\nsource code here - http://paste.org.ru/?11jrjh, and I use it like\nModeAdapter adapter = new ModeAdapter(this);\nmodeGridView.setAdapter(adapter);\nProblems which I have is that\n1) I have no idea how to call notifyDataSetChanged() for this adapter, so\nI can't change items\n2) And implementation of AdapterView.OnItemClickListener (\nhttp://paste.org.ru/?mvgt7b) works strange\nMode mode = (Mode) adapter.getItem(position);\nreturns null for items with 1st and 2nd positions, item on 3rd position is\nactual 1st item in adapter.\nWhere is my fault here?\nOne more question is why I can't cast adapterView.getAdapter() in my\nOnItemClickListener to my \"ModeAdapter\" class. What if I want to call\nnotifyDataSetChanged() here?\nI didn't find any examples for custom implementation of\nStickyGridHeadersBaseAdapter here.\nThanks in advance.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/39\n.\n. Oh, I realise it has been some time, but here it is.\n1. You generally want to extend BaseAdapter when implementing your own Adapter. So your code should be\n\npublic class ModeAdapter extends BaseAdapter implements StickyGridHeadersBaseAdapter {\n1. Keep a reference to the adapter you put into setAdapter(...), the one you get from AdapterView<?>.getAdapter() isn't the one you put in.\nThere is no demonstration for the use of StickyGridHeadersBaseAdapter, however StickyGridHeadersSimpleAdapterWrapper is an implementation of BaseAdapter. It is in the source tree.\n. Looks like a problem in the view wrappers somewhere. I'll see if I can replicate it. I'd appreciate it if you could tell me which adapter kind you are using.\n. There have been significant changes in the code around this area. The problem should be resolved so I am closing this issue for now.\n. What version are you running?\nOn 24 Sep 2013 01:50, \"ayziaa\" notifications@github.com wrote:\n\nI'm having this issue very often. I'm using a custom adapter thaht\nimplements StickyGridHeadersBaseAdapter.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/40#issuecomment-24920062\n.\n. I'll see if I can replicate the error and get it fixed.\n\nBTW, I also have an embeddable file browser implementation up at https://github.com/TonicArtos/FilePicker. It provides a fragment that you can integrate into your app for file browsing. It isn't perfect yet, basically I wrote it in some spare time and I haven't done much on it since.\n. What kind of view pager adapter are you using? I think this might be an error cropping up from some state not being preserved over the view life cycle.\n. @ayziaa; are you updating the contents of an adapter and notifying the data set observer, or are you creating a new adapter and calling setAdapter(...)?\n. Sorry, I meant the adapter that changes the content of the GridView.\nOn 26 September 2013 06:41, ayziaa notifications@github.com wrote:\n\nIn the Activity (FragmentActivity) which contains the Viewpager, in the\nonCreate the code setting up the viewpager look like this:\n\"mSectionsPagerAdapter = new\nSectionsPagerAdapter(getSupportFragmentManager());\nmViewPager = (ViewPager) findViewById(R.id.pager);\nmViewPager.setAdapter(mSectionsPagerAdapter);\nmViewPager.setOffscreenPageLimit(3);\"\nmSectionsPagerAdapter class extends FragmentPagerAdapter.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/40#issuecomment-25113477\n.\n. @pablojacobi \nI'm using a gridview\n\nDoes the error also crop up when backing into an activity or restoring a fragment?\n. Have you considered using the StickGridHeaders replacement? I know it isn't exactly the same and I am still working on it. However, I think it is much better. \nIf you don't want to use it, please tell me why. Thanks.\n. It is mentioned in the readme. It is a RecyclerView LayoutManager called SuperSLiM. You can find it here.\n. I haven't tried supporting multichoice yet. I'll have time to look at it soon.\n. Hi Pablo, can you please update to HEAD on master and confirm if the error still occurs.\n. Taking a closer look at your trace I am pretty sure this is a symptom of the same bug that caused #30, which has been fixed.\n. That's great! I am going to close this issue for now, but if you have the problem again please open this issue again and post another trace. Thanks. :)\n. I'll look into this and see if I can replicate the issue using the view recycling sample app.\n. A quick fix would be to force a layout update on the GridView when you have\nloaded a header image. It isn't pretty but it should work for now.\nThe truth is that the current implementation as a manipulation (hack) of\nGridView has a lot of limitations. Recently I have come to the conclusion\nthat the only good implementation is a completely new view. I have started\non it but it'll be quite some time before it is done.\nOn 17 Aug 2013 07:54, \"igdoty\" notifications@github.com wrote:\n\nHi TonicArtos, I have headers that consist of a an imageview and two\ntextviews, where the image is loaded asynchronously using Picasso. It seems\nthat the height of the header is being calculated before the image loads\nmaking it smaller then it should be. When the image does load, it pushes\nthe textviews out of the header. Scrolling past the header and back up\ncorrects the height. I'd appreciate any help with getting the header\ndisplayed correctly the first time, let me know if you need more details.\nThanks!\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/47\n.\n. That would be my reading of the error too. I am not familiar with how the ActionBar-PullToRefresh library works, for now, I imagine the assumptions both libraries make are incompatible.\n. Sorry, the Header and Filler views do not support selection. I haven't tested with keyboard navigation, but I presume it breaks this. While at some point I intend on adding support for these it won't be done for quite some time.\n. Thanks, I'll get this into SGH.\n. Those views are insensitive and will never respond to touch or be selected. At some point I'd like the header views themselves will react to selection.\n. I have just been moving city so everything has been in disarray. I'll find\nsome time in the next few days to go over this and merge it.\nOn 27 Aug 2013 08:38, \"caguilar187\" notifications@github.com wrote:\nHad to add a second commit to this, noticed on some devices clicks weren't\nworking since AttackInfo wasn't being set. The above change works and seems\nto get the job done.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/pull/52#issuecomment-23289525\n.\n. For some reason, some clicks pass through the stickied header to the first\nview visible in the GridView. I am thinking that perhaps using touch\ndelegates might be a better solution. Also, attaching and removing headers\nto and from the view hierarchy multiple times seems to interfere with\npeoples image caching solutions.\n\nAlso, I made a naive test the with a header with a button and events didn't\nseem to be passed to it. I didn't have much time to work out what was going\non so I reverted the patch until I had more time. Sorry about that.\nOn 15 Sep 2013 18:06, \"caguilar187\" notifications@github.com wrote:\n\nJust noticed this, whats the issue (aka what did i break :) )? Maybe I can\ntake a look at it.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/pull/52#issuecomment-24465076\n.\n. Okay, right now the touch event does actually pass through to the stickied header, but the header does not give visual feedback because it isn't attached to the view hierarchy anywhere, at least I think this is why. I've been trying to avoid doing any major changes but I think the only real solution is to wrap the underlying GridView such that there is a common parent for the GridView and the headers. I started to do this months ago but I changed my mind. :(\n. I had some time after dinner so I explored your suggested method. It does solve the problem for now. I only did the reflection method for attaching the stickied header. I've pushed it in a branch called touchable_headers. \n\nhttps://github.com/TonicArtos/StickyGridHeaders/tree/touchable_headers\n. I'll find some time to put together a few extra demo apps that should\nnicely test it. The key issue seems to be caching images, and making\nbuttons in headers cooperate with onHeaderItemClicked; which still needs\nto be done.\n. This is probably a bug, at the moment the position you are getting is\nrelevant only to SGH. I guess, what should be happening, is that you should\nget the same position as you would expect from a normal GridView.\nOn 3 Sep 2013 20:22, \"ayziaa\" notifications@github.com wrote:\n\nInside \"onItemClick(AdapterView<?> Grid_sdcard, View v, int position, long\nid) {}\"\nI get the position plus one row, I\"m guessing it's because the header\ntakes on row. I would minus on row but I'm using\nandroid:numColumns=\"auto_fit\" in my xml and the method to get the number of\nitems in a row is only starting at API 16. What can I do to get the correct\nposition?\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/53\n.\n. Hi, could you please check that your problem is occurring in HEAD. Thanks.\n. Ah, can you please try using the latest code from the GitHub report and see\nif your problem still occurs.\nOn 26 Sep 2013 20:02, \"ayziaa\" notifications@github.com wrote:\nI don't really know what that mean sorry.\nLe 26 sept. 2013 09:59, \"Tonic Artos\" notifications@github.com a \u00e9crit\n:\n\nHi, could you please check that your problem is occurring in HEAD.\nThanks.\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25149848>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25149984\n.\n. At the moment I have no idea. I'll try a bisect and see which commit introduces the fault.\n. Okay, I've taken a look myself now, there is definitely something strange going on, I have a slightly different manifestation on my end. Did you say the problem wasn't present in 1.0.1?\n. Bug is introduced in 46f945725c3cfc74c5601672f303863cde212f58.\n. Thanks for pushing this issue up to me, it turned out to be a simple accounting error on my part.\n. You're welcome :)\n. Yup, that looks like a bug.\n. Actually, I was thinking about it this morning. Have you checked out the latest code. There was a problem in the draw code that was fixed in ea9b74cf32646592f17e0ea72c7d85c099e3977e. It could have cause a bug like this too. Otherwise I'll take a look at it sometime during my weekend.\n. This was fixed a while ago but a stable release hasn't been made yet.\n. For now there is no ETA as there is no established release process. There are some substantial under the hood changes going on at the moment, until this is done there won't be a new release. For now please just checkout the code from the git repo.\n. Request completed in 7dbd8509fe9c93062d3a7de50cac8715bbe10864.\n. Size determination isn't changed from the original GridView.\n. Could you please give a code example that describes your problem and highlights any change in behaviour from the standard GridView. Thanks.\n. There must be something else to this. Is there anything not ordinary that might effect text display? Possibly something in AndroidManifest.xml?\n. It is possible this might be an animation related bug.\n. Thank you for your pull request.\n\nWhen making the pull request can you please keep it concise, that is, just the changes mentioned in the request. Also, I would appreciate more descriptive documentation on the added methods; e.g. \"Translate adapter position to actual view position\" should be \"Translate adapter position to position of visible view in GridView. If the adapter position does not correlate to a visible view position then INVALID_VIEW is returned.\"\n. Hi, I'll see about getting your changes merged, but first can you please explain to me the rationale behind these methods. e.g. How are you using the methods, and why are they needed; as opposed to some other method?\n. Have you considered having your adapter trigger preloading of items when a\nview is fetched. Say the GridView grabs item 11, from that you know to also\nstart the load for items 10, 9, 8, and 12, 13, 14. Your preloader can just\nthrow away spurious requests and all preloading is entirely driven from the\nadapter view without having to query it.\nOn 26 Sep 2013 21:06, \"bejibx\" notifications@github.com wrote:\n\nSure. I'm writing image gallery using your library with \"preload image\"\nfeature. This means, that when user scroll down gallery, I'm preloading\nnext few pictures to memory, so when user scroll gallery next time images\nload immediately and everything looks very smooth and cool. On scroll idle\nI need to know first and last gallery item so I can get some next and\nprevious images from my adapter and preload them to memory. That's about\n\"getFirstVisibleAdapterPosition\" and \"getLastVisibleAdapterPosition\".\nAbout \"findViewPosition\" method... damn, I can't rememer why I was used\nthis method. I was used it before, when there was \"measure row height\"\nfeature in your library. At the time, I had a lot of problems with\nselection inside GridView and wrote this method for something, but after\nyou remove this feature I rewrote a tonn of code and now can't find any\nusages of this method, so I think probably now it's kind of unused. Yeah, I\nthink I should not have include it to pull request.\nI think I'm really should close this pull request, make it right way and\npost it again without any mistakes and so on.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/pull/62#issuecomment-25153114\n.\n. I'll make getting the number of columns available for all platforms, then\nyou'll be able to put load x rows using the method I described.\nOn 27 Sep 2013 21:36, \"bejibx\" notifications@github.com wrote:\nThe problem is I show multiple pictures at a time. Screen may looks like\nthis:\n...\n[HEADER 1]\n10 11 12\n13 14 15\n16 17\n[HEADER 2]\n...\nSo I need to preload images before 10 and after 17. For that I need to\nknow current display range.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/pull/62#issuecomment-25233483\n.\n. At the moment there are various problems related to drawing headers. It is probable that a complete redesign of SGH will be needed to support animations and similar features.\n. Hi, you may notice the grid view items also do not respond, however\nembedded widgets do. This is normal behaviour for the grid view.\n\nOn 26 September 2013 01:19, elgui notifications@github.com wrote:\n\nHi,\nwhen the grid is flinging, the headers seem not to respond to TouchEvent.\nOnce the grid stops scrolling, everything works.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/64\n.\n. I understand \"flinging\". Generally speaking, if the problem doesn't crop up\nin the example app there is something else going on.\n\nOn 26 September 2013 05:07, elgui notifications@github.com wrote:\n\nBy \"flinging\", I mean scrolling pretty fast, and that's the status of the\ngrid keeping scrolling while there is no touch anymore.\nAnd yes, you can obviously stop that scroll by touching a \"regular\" item,\nbut it does not work if I touch my headers, until the fling stops (it works\nwith the demo you provided though)\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/64#issuecomment-25105846\n.\n. Small commits are the best :)\n. This is good work. The long click on headers isn't working (in conjunction with embedded buttons) so I'll fix that. I'll also put together a demo with caching images to get that side of testing the headers changes done.\n. Okay, I fixed the long click problem and merged into master. However, I have now decided to do the rewrite. It'll be a container with an embedded GridView. This will allow for a near complete separation between headers and items, and should fix header animation. I'll have to monkey up some kind of coordination between the two layers to get key based navigation working.\n. For some reason the header views and item views are getting mixed up. I am working on a re-write that should remove a lot of the complexity that is at the root of the problem.\n. Already fixed in 8dc4c77cc754956f2c4999de164f71b1a339fa6b.\n. Thanks, I appreciate the pull request.\n. Please check two things, does the problem exists in HEAD on master, and also, do you have the same error using a stock GridView.\n. Sorry, life has been too hectic to find the time. I hope to be on the project again in about a month, once I've settled in a new country.\n. Yes, at the moment, you have to process the data set to count the number of items in a section and generate the headers. I am working on other ways, which may be better, but at the moment I have no time between another project and moving country.\n. There is no good solution at the moment. There is a rewrite I am working on which should fix this sort of problem. There is no ETA for this at the moment as I have just moved to the UK and for now I don't have Internet or somewhere to live.\n. Clipping in headers is not honoured at the moment.\n. Ah, sorry, I've forgotten to keep the jar up to date. I'll put up a new one\nas soon as I can. Also, the maven repo is out of date too, but I've had\nproblems getting it to update with the maven android plugin.\nOn 17 Aug 2014 19:26, \"Manuel del Olmo\" notifications@github.com wrote:\nFor me this only happens when I use the library as a packaged jar. When I\nintegrated the code into my project in order to debug, I was not able to\nreproduce the issue.\nIs that jar file really the latest version available? Is it possible that\nit is fixed in master but not on that release?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/89#issuecomment-52430315\n.\n. This is due to a dirty hack that should never have been done and I am very sorry I did it. If you are not using widgets other than a text view then I suggest grabbing an earlier version of SGH. I am working on a new version of SGH but that work is dependent on RecyclerView in the Android L preview of the v7 compatibility library.\n\nThis is the last commit before all the bad things started 8c14279e04ff94c51d5e385f5ad3954035f38685.\n. Just using TextViews in the header should fix the issue.\n. I use SGH myself in my apps without any problems, and I only ever use TextViews for my headers.\n. Actually I just looked closer at the issue. From what I can tell, for some reason there is a null value getting substituted for your header at some point. For various reasons this is hidden behind the platform support exception you are seeing.\nThis will also explain why the problem is intermittent.\n. Not possible until the API 20 support library comes out of preview.\n. This project is no longer supported and has been replaced by SuperSLiM. While SuperSLiM is still in heavy development, I already consider it much better and more stable than StickyGridHeaders. SuperSLiM also sees regular versioned releases.\n. I am working on a replacement to StickyGridHeaders called SuperSLiM. You\ncan see an early release linked in the readme on the StickyGridHeaders\nproject page.\nIt isn't quite a replacement for StickyGridHeaders but it will be in the\nnext few days.\nPlease take a look.\nOn 16 Oct 2014 22:26, \"goonerDroid\" notifications@github.com wrote:\n\nI used FragmentPagerAdapter instead of using\nFragmentStatePagerAdapter.Worked for me like a charm!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/101#issuecomment-59433369\n.\n. I am working on a replacement to StickyGridHeaders called SuperSLiM. You\ncan see an early release linked in the readme on the StickyGridHeaders\nproject page.\n\nIt isn't quite a replacement for StickyGridHeaders but it will be in the\nnext few days.\nPlease take a look.\nOn 11 Dec 2014 08:46, \"PankhuriMishra\" notifications@github.com wrote:\n\nSeeing same issue, did you find any solutions to the flicker ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/108#issuecomment-66588649\n.\n. Yes, you can toggle clipping the drawable area under the headers. However,\nI'd prefer for you to migrate away from StickyGridHeaders soon.\n\nHere is the blurb...\nI am working on a replacement to StickyGridHeaders called SuperSLiM. You\ncan see an early release linked in the readme on the StickyGridHeaders\nproject page.\nIt isn't quite a replacement for StickyGridHeaders but it will be in the\nnext few days.\nPlease take a look.\nOn 1 Oct 2014 15:11, \"prodaea\" notifications@github.com wrote:\n\nThis may be a unique issue, I'm not totally sure.\nI have your grid list showing above layers of content and want to have\nsome level of transparency. After setting the backgrounds of all the\nlayouts to a color with a correct alpha value, everything looks good. The\nproblem occurs when the grid is scrolled, the grid content is clipped at\nthe header so that the grid content doesn't show behind the sticky header.\nI'm not sure if this would be a bug or if there's a method available to\ncause the list to draw beneath the headers when they are stickified.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/109.\n. I am working on a replacement to StickyGridHeaders called SuperSLiM. You\ncan see an early release linked in the readme on the StickyGridHeaders\nproject page.\n\nIt isn't quite a replacement for StickyGridHeaders but it will be in the\nnext few days.\nPlease take a look.\nOn 10 Oct 2014 12:25, \"burakkilic\" notifications@github.com wrote:\n\nHi;\nI am implementing StickyGridHeadersSimpleAdapter but getHeaderId and\ngetHeaderView are never called. My getCount function is like:\npublic int getCount() {\n            int count = 0;\n            for (int i = 0; i<category.getChildren().size(); i++){\n                count += category.getChildren().get(i).getItems().size();\n            }\n            return count;\n        }\nWhat is wrong with it?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/110.\n. I am working on a replacement to StickyGridHeaders called SuperSLiM. You\ncan see an early release linked in the readme on the StickyGridHeaders\nproject page.\n\nIt isn't quite a replacement for StickyGridHeaders but it will be in the\nnext few days.\nPlease take a look.\nOn 3 Dec 2014 10:52, \"PankhuriMishra\" notifications@github.com wrote:\n\nHi I see that the header gradient lightens on scrolling in my app, after I\nmoved to lollipop. Is this a know issue ? Are there some known resolutions ?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/112.\n. This project is no longer supported and has been replaced by SuperSLiM. While SuperSLiM is still in heavy development, I already consider it much better and more stable than StickyGridHeaders. SuperSLiM also sees regular versioned releases.\n. This project is no longer supported and has been replaced by SuperSLiM. While SuperSLiM is still in heavy development, I already consider it much better and more stable than StickyGridHeaders. SuperSLiM also sees regular versioned releases.\n. This project is no longer supported and has been replaced by SuperSLiM. While SuperSLiM is still in heavy development, I already consider it much better and more stable than StickyGridHeaders. SuperSLiM also sees regular versioned releases.\n. Is the header larger than the screen?\n. Sorry, this project has been discontinued for a long time. Now that there is the feature on GitHub, I'll be archiving it.. \n",
    "ffgiraldez": "fine!!! thank a lot!!\n. ",
    "agarrigan": "just seen this fix, thanks\n. me too, any fix?\n. ",
    "alirahimpour89": "Okay thanks! \nI wrote both problems in the same thread because both can be tracked back to android:verticalSpacing but of course I can add a new one! :) \nEDIT: Now the other thread is added and removed the second issue from this one! \n. That sucks... the reason I use verticalSpacing is for getting the space around each google now styled cards equal... If i use normal padding I will get double padding between the cards...\n. if I use padding on the top only, I will get the result I want on all cards except for the last cards in each section, i I use bottom padding I will have the same problem for the first card of each section, if I have a padding on both I will get double padding between cards(bottom padding + top padding)... but I haven't tried margin, maybe I can get it the way I want with margin :) will try that after work\n. Of course! :) Im home in about 4 hours so can try then!\n. One other reason I use a negative value is that I want my list selectors to overlap, if you see my design you understand why :) but I will try it out later\n. okay! :) \n. the function worked as expected but it is not fixing my problem :) \n. I made some design changes so I dont need negative vertical spacing :)\n. One thing that I can add is that I use a negative value at android:verticalSpacing, don't know if the problem remain if I use a positive value \n. Im using -8dip, will that be small enough? saw that it only works with \"small negative values\" :)\n. yeah each row is around 80dip if I remember correctly :) \n. okay found what I did wrong, I didn't store all, just one of each :) \n. I got a header looking like this:\nTEXTVIEW1TEXTVIEW1TEXTVIEW1 | TEXTVIEW2\nthe headers has two textviews, one on the right side that wraps content and one on the left side that fills the space...\nIf I update the right one, the width of the textview wont update for the new content if the header is sticky so the text will ether be too small for the textview or to big...\nbut if the header is in a normal state this will update as it should...\n. Im at work right now but I can describe my code and hopefully its enough!\nI got a viewpager with three fragments, the last fragment has a stickygridheadersgridview :) \nthe headers has two textviews, one on the right side that wraps content and one on the left side that fills the space like this:\nTEXTVIEW1TEXTVIEW1TEXTVIEW1 | TEXTVIEW2\nwhen changing orientation, the headers width stays the same as before and wont adapt to the new width...\nIf this doesnt help I will send some real code later! :) \n. dont know how to format a comment as code but hope you understand:\n<LinearLayout \nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"wrap_content\"\nadroid:orientation=\"horizontal\">\n    <TextView \n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\"\n         android:lines=\"1\"/>\n    <TextView \n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:lines=\"1\"/>\n</LinearLayout>\n. Im at work but will test this in 4-5 hours :) \n. it doesnt work :\\ you fixed the notifydatasetchanged() bug, I can update header content and it measures right but still this orientation bug exists... :\\ have you tested putting it in a viewpager?\n. Will try after work! :) Thanks for the great support\n. sorry it doesnt work... I scroll down, change orientation, then the width of the header is the same width as it should be in portrait... when I change orientation back to portrait again, it changes to the width it should be in landscape...\n. The reason I still think you can do something is that if I try to update a header after orientation change like in the other topic I had here, it measures everything right so probably you only need to call the same function for measuring the sticky header again after orientation change, as I saw in that sample you only got one textview in the header so you wont see if it measures wrong in the filepicker... Or am I wrong? :)\n. no there is no difference :\\ maybe its a ROM problem? haven't tried on my nexus 7.. so maybe your filepicker has the same error on paranoid android? but I dont know... just brainstorming \n. because some other third party apps have orientation problems on that rom... will try some things later today :) \n. Tested my app on my nexus 7 and got the same problems... :\\ \none thing that maybe is the cause is that I have this in my manifest:\nandroid:configChanges=\"keyboardHidden|orientation|screenSize\"\nhaven't got the time to test it so if you have the time, please try it :) \n. Sorry for the late answer, its easter so im skiing and stuff and wont be home for a few days :) hmm okay, the reason I got both is because I read somewhere that it is best practice when targeting some of the older android versions and newer... have you found any kind of work around or something interesting? \n. best practice if you want to use orientation because newer versions need screenSize too :)\n. I never use RDP privately but this time I love that I have it configured! I updated the library and built a new APK with my phone and downloaded it with dropbox and can now confirm that this fixed it! :) thanks for the great support! \n. haven't tried this but does it work if you add\nandroid:focusable=\"false\"\nandroid:focusableInTouchMode=\"false\"\nto your button? :) it is how to add buttons inside list items so maybe that works\n. ",
    "vitaliylodoss": "To inflate I use .\n@Override\npublic View getHeaderView(int arg0, View convertView, ViewGroup arg2) {\n    LayoutInflater vi = LayoutInflater.from(context);\n    convertView = vi.inflate(R.layout.headline_list_first_item1, null);\n    return convertView;\n}\nAll work fine then R.layout.headline_list_first_item1 is:\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n< LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"#000\" >\n\nAnd I took error then R.layout.headline_list_first_item1 is:\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n< RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"#000\" >\n\n```\n. Thanks. I will try to use it.\n. alioooop, I tried this, but it doesn't work.\n. TonicArtos, Thanks for your answer. I will try.\n. ",
    "thunderousNinja": "Has this issue been addressed yet? I have a couple buttons in my header that I would like to get the listeners working on.\n. Sweet! I'll give it a try and give any feedback. \nWhat are the issues BTW?\n. Nvm I looked at the 65 and saw them :)\n. ",
    "czaku": "This is an image when there is no text in header view (please notice also strange thing on the top like a part of the same layout appeared on the top):\n\nThis is a correct behaviour (text in header) image:\n\nThis is XML for header:\n``` java\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<TextView\n    android:id=\"@+id/menuFavouritesHeaderTitleTextView\"\n    style=\"@style/ListingWhiteSmallText\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"@drawable/filter_item_background\"\n    android:ellipsize=\"end\"\n    android:gravity=\"center\"\n    android:maxLines=\"@integer/textview_max_lines_one\"\n    android:padding=\"@dimen/margin_padding_tiny\"\n    android:scrollHorizontally=\"true\"\n    android:text=\"Favourites\" />\n\n\n```\nThis is main layout for SGHGridView\n``` java\n\n<TextView\n    android:id=\"@+id/menuFavouritesItemTitleTextView\"\n    style=\"@style/ListingWhiteMediumText\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:background=\"@drawable/actionbar_gradient_background\"\n    android:gravity=\"center_vertical\"\n    android:minHeight=\"@dimen/abs__action_bar_default_height\"\n    android:paddingLeft=\"@dimen/margin_padding_large\"\n    android:text=\"@string/menuFavouritesTitleTextView\"\n    android:textAppearance=\"?android:attr/textAppearanceLarge\" />\n\n<com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView\n    android:id=\"@+id/menuFavouritesGridView\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"fill_parent\"\n    android:layout_below=\"@+id/menuFavouritesItemTitleTextView\"\n    android:columnWidth=\"@dimen/menu_favourites_image_size_width\"\n    android:gravity=\"center\"\n    android:horizontalSpacing=\"@dimen/margin_padding_regular\"\n    android:numColumns=\"2\"\n    android:padding=\"@dimen/margin_padding_large\"\n    android:stretchMode=\"spacingWidth\"\n    android:verticalSpacing=\"@dimen/margin_padding_regular\" />\n\n\n```\nEverything works with grid cells so that I am not pasting cell XML.\n. ",
    "MoshDev": "even i've implemented it with this library, it behaves wrongly :( so sad 2 hours work wasted \n. ",
    "KrisGroove": "So it's no way to do that?\n. ",
    "Mory30": "Hi same problem for me...\nthe Image loading capabilities provided in the sample code from Google do not work with StickyGridHeaders while working with standard GridView and StickyListHeaders. I can't understand why.\nRegards.\n. Hi,\nTested the patch in #32 with no luck. The scroll is smoother indeed, but I still have the image loading problem.\n. Nice work no more image loading problem, that's great !!!\nBut I got blue shapes instead of items when the row is not full and in the headers\nThanks\n. Ok for the blue color, but I still got a hudge space before the first row (I didn't mention it on my last message but it was there)\nThanks.\n. Not every headers but almost. Always the first one anyway.\nBut if i switch the device orientation while the grid is visible, everythings became good.\n. No, my header is a simple TextView with wrap_content as height. I did not have this problem before applying the patch 53f0d85\nI updated my last comment (don't know if you saw if): If i switch the device orientation while the grid is visible, everythings become good.\n. The space, indeed is in the header \n\n. It could also be like that in the middle of the grid.\n. First picture : the grid when I open the view\n\nSecond, I just scroll down a little :\n\nthird In the middle of the grid \n\n. 07-29 02:45:51.925: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.930: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.930: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.930: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.935: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.940: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.940: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.940: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.940: D/getView(4152): Position: 1, Kind: -3\n07-29 02:45:51.940: D/getView(4152): Position: 2, Kind: -3\n07-29 02:45:51.955: D/getView(4152): Position: 3, Kind: 0\n07-29 02:45:51.970: D/getView(4152): Position: 4, Kind: 1\n07-29 02:45:51.975: D/getView(4152): Position: 5, Kind: -1\n07-29 02:45:51.975: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.980: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.980: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:51.980: D/getView(4152): Position: 1, Kind: -3\n07-29 02:45:51.980: D/getView(4152): Position: 2, Kind: -3\n07-29 02:45:51.985: D/getView(4152): Position: 3, Kind: 0\n07-29 02:45:52.005: D/getView(4152): Position: 4, Kind: 1\n07-29 02:45:52.015: D/getView(4152): Position: 5, Kind: 2\n07-29 02:45:52.025: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:52.025: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:52.025: D/getView(4152): Position: 0, Kind: -2\n07-29 02:45:52.025: D/getView(4152): Position: 1, Kind: -3\n07-29 02:45:52.025: D/getView(4152): Position: 2, Kind: -3\n07-29 02:45:52.030: D/getView(4152): Position: 3, Kind: 0\n07-29 02:45:52.040: D/getView(4152): Position: 4, Kind: 1\n07-29 02:45:52.050: D/getView(4152): Position: 5, Kind: 2\n. \nthe style just define the text color\nTested on Samsung Galaxy S3 - Os 4.1.2\n. There is no problem on a fresh install, but that's appear after the second launch... Could it be related with the image cache feature ?\nTested on Nexus 7 too, with Android 4.3 \n. No more luck by removing the image cache system. \n. Same thing. But I didn't understand what do you mean by older versions of the GridView. I got the same things on my Nexus 7 with Android 4.3 and with an 4.2.2 AVD (nexus 4) \n. Ok, I'll try to send you a example tomorrow if you're ok with that.\n. Thank's to you for the time spent\n. ",
    "httpdispatch": "It may be related to #32, such as views gets recreated to often with null convertView parameter.\n. Found this thing inside getView method \njava\nmRowSiblings[i] = getView(position + i, null, parent);\nhttps://github.com/TonicArtos/StickyGridHeaders/blob/master/Library/src/com/tonicartos/widget/stickygridheaders/StickyGridHeadersBaseAdapterWrapper.java#L197\nSecond parameter is null, so you force to recreate views for each element which may cause performance problems\n. I've checked GridView source and it creates views in the row sequentially so we can avoid force initialization of the mRowSiblings array. I've removed that stuff from the StickyGridHeadersBaseAdapterWrapper and adjusted ReferenceView.onMeasure. Now the scroll is much faster and more smooth\n. @rilley i've created pull request #33 so you can check it\n. @tavrinn yep that was an issue. Try my pull request. Would be good if we test it and @TonicArtos will merge it then.\n. @tavrinn checked again. convertView is not null in most cases for me in getHeaderView and in getView methods if i use this patch https://github.com/httpdispatch/StickyGridHeaders/commit/b751c89fb4ad084b4813a4d9018271943d3106cb\n. @TonicArtos thank you for fixing an issue. For sure you know the lib internals much better so your fix should be much better. Thanks again.\n. ",
    "cotfas": "@httpdispatch Can you share with me the problem about scrolling faster?\nPlease\n. ",
    "tavrinn": "I'm having a similar issue too, I have noticed the convertView is always null and the getHeaderView callback keeps getting invoked even though no scroll action is being performed\n. No Luck, convertview is still null & the callback still gets called.\nMy adapter is set as follows: private class GvAdapter extends BaseAdapter implements StickyGridHeadersSimpleAdapter\n. Works great thanks :)\n. ",
    "sahilmiglani": "This is happening for me with the latest library.. Any solution?\n. Stack trace - \n02-05 13:31:58.114: E/AndroidRuntime(1724):     at com.tonicartos.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper.getView(StickyGridHeadersBaseAdapterWrapper.java:193)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.AbsListView.obtainView(AbsListView.java:2263)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.GridView.makeAndAddView(GridView.java:1345)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.GridView.makeRow(GridView.java:345)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.GridView.fillDown(GridView.java:287)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.GridView.fillFromTop(GridView.java:421)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.GridView.layoutChildren(GridView.java:1233)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.AbsListView.onLayout(AbsListView.java:2091)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.RelativeLayout.onLayout(RelativeLayout.java:1055)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1671)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.LinearLayout.layoutHorizontal(LinearLayout.java:1660)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.LinearLayout.onLayout(LinearLayout.java:1436)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.ScrollView.onLayout(ScrollView.java:1468)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at couk.jenxsol.parallaxscrollview.views.ParallaxScrollView.onLayout(ParallaxScrollView.java:277)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.support.v4.view.ViewPager.onLayout(ViewPager.java:1589)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at com.android.internal.widget.ActionBarOverlayLayout.onLayout(ActionBarOverlayLayout.java:374)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.layoutChildren(FrameLayout.java:453)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.widget.FrameLayout.onLayout(FrameLayout.java:388)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.View.layout(View.java:14817)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewGroup.layout(ViewGroup.java:4631)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:1987)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:1744)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1000)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:5670)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.Choreographer$CallbackRecord.run(Choreographer.java:761)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.Choreographer.doCallbacks(Choreographer.java:574)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.Choreographer.doFrame(Choreographer.java:544)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:747)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.os.Handler.handleCallback(Handler.java:733)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.os.Handler.dispatchMessage(Handler.java:95)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.os.Looper.loop(Looper.java:136)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at android.app.ActivityThread.main(ActivityThread.java:5017)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at java.lang.reflect.Method.invokeNative(Native Method)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at java.lang.reflect.Method.invoke(Method.java:515)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:779)\n02-05 13:31:58.114: E/AndroidRuntime(1724):     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:595)\n. ",
    "ascorbin33": "I will try it and give feedback, thanks. \n. ",
    "shalommelamed": "found the solution at\nhttp://stackoverflow.com/questions/16898876/stickygridheader-example\n. the problem was in this method:\n@Override\npublic int getCountForHeader(int position) \n{\n    int RetVal = 0;\n    try \n    {\n        boolean isSaleTemp = getItem(position).isTemporarySale;\n        if(isSaleTemp)\n        {\n            RetVal = App.salesByType.get(headers[0]).size();\n        }\n        else\n        {\n            RetVal = App.salesByType.get(headers[1]).size();\n        }\n    }\n    catch (Exception e) {}\n    return RetVal;\n}\nwhat I supposed to do is:\n@Override\npublic int getCountForHeader(int position) \n{\n    int RetVal = 0;\n    try \n    {\n       RetVal = App.salesByType.get(headers[position]).size()\n    }\n    catch (Exception e) {}\n    return RetVal;\n}\n. ",
    "pablojacobi": "I have been using the Grid Adapter. Now i have downloaded the StickyGridHeaders code, caught the exception and recreate the layout if the error happens. now this works fine but I think isn't efficient. \nregards\n. I'm using a gridview\n. Cool, I just updated the library, if I have an issue again I'll tell you :) Thanks!\n. ",
    "ayziaa": "I'm having this issue very often. I'm using a custom adapter that implements StickyGridHeadersBaseAdapter.\n. Well the last one I think, I downloaded a zip yesterday and replace the lib folder by this one. The StickyGridHeader is used in my app to display a basic file explorer, the weird thing is navigating down the folder tree (by clicking on folder ) never trigger this problem, but it appears when I press the back button,back button fonction is called in the activity, then it call another fonction in a fragment located in a viewpager, this fonction get the upper directory and display the files in the StickyGridHeaders lib and very often, an very irregularly it display the header on top of the gridview then a scrolling trigger a force close. It's annoying because other than that it's working beautifully.\n\n\n. Ok, great, thanks. I guess a logcat is not enought?! The problem is, it's completly random so I could not find any pattern to this error. I hope you'll be able to fix it anyway. Thank for sharing your file browser, drag and drop is very atractive but I have a lot to do first.\n. It's a FragmentPagerAdapter. Also I'm beginner in android developpement, so I could be wrong. What I know is that it's a \"custom\" class  that extends FragmentPagerAdapter\n. In the Activity (FragmentActivity) which contains the Viewpager, in the onCreate the code setting up the viewpager look like this:\n\"mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());\n mViewPager = (ViewPager) findViewById(R.id.pager);\n mViewPager.setAdapter(mSectionsPagerAdapter);\n mViewPager.setOffscreenPageLimit(3);\"\nmSectionsPagerAdapter class extends FragmentPagerAdapter.\n. Ho, yeah I'm using setAdapter to change the content of the GridView.\n. I don't really know what that mean sorry.\nLe 26 sept. 2013 09:59, \"Tonic Artos\" notifications@github.com a \u00e9crit :\n\nHi, could you please check that your problem is occurring in HEAD. Thanks.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25149848\n.\n. Yes it seems to be working now!\n\n2013/9/26 Tonic Artos notifications@github.com\n\nAh, can you please try using the latest code from the GitHub report and\nsee\nif your problem still occurs.\nOn 26 Sep 2013 20:02, \"ayziaa\" notifications@github.com wrote:\n\nI don't really know what that mean sorry.\nLe 26 sept. 2013 09:59, \"Tonic Artos\" notifications@github.com a\n\u00e9crit\n:\n\nHi, could you please check that your problem is occurring in HEAD.\nThanks.\n\u2014\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25149848>\n\n.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25149984>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25166303\n.\n. Well scratch my last message it's not working, position returned in the\nonClick is correct but using  parent.getItemAtPosition(position) item returned is the one\nat the position minus one row. \n\n2013/9/26 Audren Teissier audren.teissier@gmail.com\n\nYes it seems to be working now!\n2013/9/26 Tonic Artos notifications@github.com\n\nAh, can you please try using the latest code from the GitHub report and\nsee\nif your problem still occurs.\nOn 26 Sep 2013 20:02, \"ayziaa\" notifications@github.com wrote:\n\nI don't really know what that mean sorry.\nLe 26 sept. 2013 09:59, \"Tonic Artos\" notifications@github.com a\n\u00e9crit\n:\n\nHi, could you please check that your problem is occurring in HEAD.\nThanks.\n\u2014\nReply to this email directly or view it on GitHub<\n\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25149848>\n\n.\n\n\u2014\nReply to this email directly or view it on GitHub<\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25149984>\n.\n\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/53#issuecomment-25166303\n.\n. \n\n",
    "zoltish": "Im also getting this, only setting the adapter once and it throws the exception right away.\nEdit: I was getting this because I had overridden Adapter.getItemId(), thought this might help you out :)\n. Do you have any ETA on the stable version?\n. ",
    "poi519": "Hello, I am getting similar error with library compiled from today's code.\nERROR/AndroidRuntime(8801): FATAL EXCEPTION: main\n        java.lang.ClassCastException: android.widget.ImageView cannot be cast to com.tonicartos.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$HeaderFillerView\n        at com.tonicartos.widget.stickygridheaders.StickyGridHeadersGridView.dispatchDraw(StickyGridHeadersGridView.java:867)\nHappens when using .setAdapter() during Grid View scrolling\n. ",
    "parulbh": "Hi, I am having the same issue\njava.lang.ClassCastException: android.widget.RelativeLayout cannot be cast to com.tonicartos.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper$FillerView\nat com.tonicartos.widget.stickygridheaders.StickyGridHeadersBaseAdapterWrapper.getFillerView(StickyGridHeadersBaseAdapterWrapper.)\nhappens when we scroll the grid and StickyGridHeadersSimpleAdapter is reset in between. I am also using view pager and Fragment pager adapter and my sticky grid is set on one of the fragment of view pager.\nPlease reply i am somewhat stuck here.\n. Hi, I have the same issue. Please reply.\n. ",
    "ghost": "For those struggling to find a workaround:\nI have this problem when I try to set adapter while GridView is being scrolled. This might occur when you load new data and create new adapter instance.\nSolution: don't create new adapter instance. Instead use Adapter.notifyDataSetChanged().\n. I agree.\nI am having performance issues as well\n. I use Picasso as well. \nReally looking for a stable solution using Picasso and sticky grid headers \n. ",
    "antpuleo2586": "@mighter1488 I just registered so I could say thanks for that (although I'm way overdue for registering).\nI'm pretty new to android development and I've had this problem for months. So thanks again!\n. ",
    "tolbkni": "Hi, all. I have the same issue when I open the gridview activity and scroll immediately.\n. Hi, all. I fix it by recall setNumColumns() method after call setAdapter(). It seems work fine now.\n. Yes, Wrapper classes does not deal this correctly. Maybe I will create a pull request to fix it with a few days.\n. I have the same issue.\n. I think you can create a interface like this:\njava\npublic interface ButtonOnClickListener {\n    public OnClick(Button button, int position)\nthen in the CustomAdapter, pass interface implementation to it's constructor as a argument. And set listener for the buttons in the getView() function like this:\njava\npublic View getView(final int position, View convertView, ViewGroup parent) {\n    ...\n    button.setOnClickListener(new View.OnClickListener() {\n        mButtonOnClickListener.OnClick(button, position);\n    }\n    ...\n}\n. This repository is now deprecated and will no longer see any development.\n. ",
    "anbarasu-seven": "Hi, am having 2 tabs at the top of the activity,below that a stickyHeaderGridView that will update its content depends on the tab selected at the top, here the problem is when clicking 2'nd tab i need stickyHeaderGridView funtionality that works fine, but when clicking the 1'st tab i want to use the normal gridview functionality instead stickyHeaderGridView, am stucking more than 2 days ,kindly give me any suggestion.\n. sorry for late reply. i fixed it using the same way you mentioned above,\nafter some documentation about updating data in list and in grids\n..thanks for reply\nOn Fri, Mar 6, 2015 at 8:51 PM, Marco HC notifications@github.com wrote:\n\nUsing Adapter.notifyDataSetChanged() instead of creating it again works\nfine and fix the bug. Thank you all.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/40#issuecomment-77575840\n.\n. can you say me clearly, in which class and line you face the problem\nexactly......\n\nOn Mon, Mar 9, 2015 at 4:20 PM, Marco HC notifications@github.com wrote:\n\nEh...ok it does not work, even using the notifyDataSetChanged() it throws\nfrom time to time the same exception, any other walk around or fix?\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/40#issuecomment-77832807\n.\n. hello marco,\n\nyour calling this getFillerView(View convertView, ViewGroup parent, View\nlastViewSeen) from 2 places.ie (from)inside the getView method of the same\nadapter class\nlike below\n@Override\n    public View getView(int position, View convertView, ViewGroup parent) {\n        Position adapterPosition = translatePosition(position);\n        if (adapterPosition.mPosition == POSITION_HEADER) {\n            HeaderFillerView v =\ngetHeaderFillerView(adapterPosition.mHeader, convertView, parent);\n            View view = mDelegate.getHeaderView(adapterPosition.mHeader,\n(View)v.getTag(), parent);\n            mGridView.detachHeader((View) v.getTag());\n            v.setTag(view);\n            mGridView.attachHeader(view);\n            convertView = v;\n            mLastHeaderViewSeen = v;\n            v.forceLayout();\n        } else if (adapterPosition.mPosition == POSITION_HEADER_FILLER) {\n            convertView = getFillerView(convertView, parent,\nmLastHeaderViewSeen);\n            convertView.forceLayout();\n        } else if (adapterPosition.mPosition == POSITION_FILLER) {\n            convertView = getFillerView(convertView, parent, mLastViewSeen);\n        } else {\n            convertView = mDelegate.getView(adapterPosition.mPosition,\nconvertView, parent);\n            mLastViewSeen = convertView;\n        }\nreturn convertView;\n}\nin the above get view method note the FIRST if condition,\nie.   if (adapterPosition.mPosition == POSITION_HEADER) {\n            HeaderFillerView v =\ngetHeaderFillerView(adapterPosition.mHeader, convertView, parent);\n            View view = mDelegate.getHeaderView(adapterPosition.mHeader,\n(View)v.getTag(), parent);\n            mGridView.detachHeader((View) v.getTag());\n            v.setTag(view);\n            mGridView.attachHeader(view);\n            convertView = v;\n            mLastHeaderViewSeen = v;\n            v.forceLayout();\n        }\nin the above code: note the 2nd line\nHeaderFillerView v = getHeaderFillerView(adapterPosition.mHeader,\nconvertView, parent);\nabove line of code creates view that a type of HeaderFillerView (NOTE - NOT\nA TYPE OF FillerView).\nin the 6th line you are backing up that view to convertview  as\n convertView = v;\nnow your convertView is ready with type of HeaderFillerView.\nYOUR PROBLEM ARISES HERE:\nie in both the \"else if\" condition of the same getView method\nelse if (adapterPosition.mPosition == POSITION_HEADER_FILLER) {\n            convertView = getFillerView(convertView, parent,\nmLastHeaderViewSeen);\n            convertView.forceLayout();\n        } else if (adapterPosition.mPosition == POSITION_FILLER) {\n            convertView = getFillerView(convertView, parent, mLastViewSeen);\n        }\nnote 2nd line(or 5th line) of the above code\nalready your convertView is ready with the type of HeaderFillerView(ie.\nconvertView = v;), your passing that converView to another method like below\ngetFillerView(convertView, parent, mLastHeaderViewSeen);\nright,,,\nbut in the getFillerView method definition your trying to convert(cast)\nthat view to FillerView, actualy that is not a type of FillerView,actually\na type of HeaderFillerView\nthat is why it shows classcasting exception;\nie your Casting a view that is type of HeaderFillerView to FillerView......\nOn Fri, Mar 13, 2015 at 8:55 PM, Marco HC notifications@github.com wrote:\n\nInside StickyGridHeadersBaseAdapterWrapper\nprivate FillerView getFillerView(View convertView, ViewGroup parent, View lastViewSeen) {\n    FillerView fillerView = (FillerView) convertView;\n    if (fillerView == null) {\n        fillerView = new FillerView(mContext);\n    }\n```\nfillerView.setMeasureTarget(lastViewSeen);\nreturn fillerView;\n```\n}\nThis cast FillerView fillerView = (FillerView) convertView; throws the\nClassCastException.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/40#issuecomment-79043273\n.\n. Step 1:\nprivate HeaderFillerView getHeaderFillerView(int headerPosition, View\nconvertView,\n            ViewGroup parent) {\n        HeaderFillerView headerFillerView = (HeaderFillerView)convertView;\n        if (headerFillerView == null) {\n            headerFillerView = new HeaderFillerView(mContext);\n        }\n\nreturn headerFillerView;\n}\nreplace above method by\nprivate HeaderFillerView getHeaderFillerView(int headerPosition, View\nconvertView,\n            ViewGroup parent) {\nif(convertView instanceOf HeaderFillerView ){\n HeaderFillerView headerFillerView = (HeaderFillerView)convertView;\n}else{\n// convertView==null also come here\n  headerFillerView = new HeaderFillerView(mContext);\n}\n}\nStep 2:\nprivate FillerView getFillerView(View convertView, ViewGroup parent, View\nlastViewSeen) {\n        FillerView fillerView = (FillerView)convertView;\n        if (fillerView == null) {\n            fillerView = new FillerView(mContext);\n        }\n```\n    fillerView.setMeasureTarget(lastViewSeen);\nreturn fillerView;\n\n}\n```\nreplace above method by\nprivate FillerView getFillerView(View convertView, ViewGroup parent, View\nlastViewSeen) {\nif(convertView instanceOf FillerView){\n FillerView fillerView = (FillerView)convertView;\n}else{\n//convertView==null also come here\n fillerView = new FillerView(mContext);\n}\n       fillerView.setMeasureTarget(lastViewSeen);\n        return fillerView;\n    }\nOn Mon, Mar 16, 2015 at 7:30 AM, Tonic Artos notifications@github.com\nwrote:\n\nHave you considered using the StickGridHeaders replacement? I know it\nisn't exactly the same and I am still working on it. However, I think it is\nmuch better.\nIf you don't want to use it, please tell me why. Thanks.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/40#issuecomment-81346508\n.\n. thanks , happy coding.......enjoy exceptions.......\n\nOn Tue, Mar 17, 2015 at 4:04 PM, Marco HC notifications@github.com wrote:\n\nI can't reproduce the CastException again, thanks a lot @anbarasu-seven\nhttps://github.com/anbarasu-seven!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/TonicArtos/StickyGridHeaders/issues/40#issuecomment-82264130\n.\n. \n",
    "marcohc": "Using Adapter.notifyDataSetChanged() instead of creating it again works fine and fix the bug. Thank you all.\n. Eh...ok it does not work, even using the notifyDataSetChanged() it throws from time to time the same exception, any other walk around or fix?\n. Inside StickyGridHeadersBaseAdapterWrapper\n```\nprivate FillerView getFillerView(View convertView, ViewGroup parent, View lastViewSeen) {\n    FillerView fillerView = (FillerView) convertView;\n    if (fillerView == null) {\n        fillerView = new FillerView(mContext);\n    }\nfillerView.setMeasureTarget(lastViewSeen);\n\nreturn fillerView;\n\n}\n```\nThis cast FillerView fillerView = (FillerView) convertView; throws the ClassCastException.\n. I can't reproduce the CastException again, thanks a lot @anbarasu-seven!\n. ",
    "gentledepp": "@anbarasu-seven : Can you provide a fix? :-/\n. @anbarasu-seven Hey thanks - I'll see if that fixes the bug :)\nBzw - why don't you want to send a pull-request? Seems you already fixed it, right?\nI have no problem re-compiling the library on my own, but you might do a loooots of folks out there a big favor ;-)\n@TonicArtos I don't know anything about a \"StickyGridHeaders repalcement\" - please tell me more! What is it, where can I find it?\n. ",
    "mcohnen": "Great, thank you!\n. ",
    "vovan888": "Any updates on this ? getCheckedItemIds() always returns empty list\n. ",
    "hendrawd": "How do you guys resolve this issue? I need to resolve this issue too. I first use https://github.com/TonicArtos/SuperSLiM and then use this one instead because super slim can't detect end of scroll correctly. Now i need to implement contextual action bar for selecting multiple items on grid view. If you guys have workaround let me know, thank you very much.\n. If anyone want to solve the same problem i have a solution here. The idea is that you must handle the contextual action bar and checked ids by yourself\nset these in your fragment or activity\ngridView.setChoiceMode(GridView.CHOICE_MODE_NONE);\n   gridView.setOnItemLongClickListener(this);\n   gridView.setOnItemClickListener(this);\nwhere gridView is your StickyGridHeadersGridView and you should implement AdapterView.OnItemClickListener, AdapterView.OnItemLongClickListener or make a new one that can be used on that setOnItemLongClickListener and OnItemClickListener\nCreate this class on your activity or fragment\n```\n private class ActionModeCallback implements ActionMode.Callback {\n@Override\npublic boolean onCreateActionMode(ActionMode mode, Menu menu) {\n    // inflate contextual menu\n    mode.getMenuInflater().inflate(R.menu.do_something, menu);\n    return true;\n}\n\n@Override\npublic boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n    return false;\n}\n\n@Override\npublic boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n    switch (item.getItemId()) {\n        case R.id.do_something:\n            SparseBooleanArray selected = yourAdapter.getSelectedIds();\n            StringBuilder sb = new StringBuilder();\n            for (int i = (selected.size() - 1); i >= 0; i--) {\n                if (selected.valueAt(i)) {\n                    sb.append(selected.keyAt(i));\n                    if (i > 0) {\n                        sb.append(\", \");\n                    }\n                }\n            }\n            //this is a custom toast that i made, you can replace it with toast or whatever\n            Utils.showCustomToast(NewMainActivity.this, sb.toString());\n            mode.finish();\n            return true;\n        default:\n            return false;\n    }\n}\n\n@Override\npublic void onDestroyActionMode(ActionMode mode) {\n    yourAdapter.removeSelection();\n    mActionMode = null;\n}\n\n}\n```\nthen make these methods\n```\n@Override\npublic void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n    if (mActionMode == null) {\n        //perform your standard operation when item on click\n    } else\n        onListItemSelect(position);\n}\n@Override\npublic boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n    onListItemSelect(position);\n    return true;\n}\nprivate void onListItemSelect(int position) {\n    yourAdapter.toggleSelection(position);\n    boolean hasCheckedItems = yourAdapter.getSelectedCount() > 0;\nif (hasCheckedItems && mActionMode == null)\n    // there are some selected items, start the actionMode\n    mActionMode = startActionMode(new ActionModeCallback());\nelse if (!hasCheckedItems && mActionMode != null)\n    // there no selected items, finish the actionMode\n    mActionMode.finish();\n\nif (mActionMode != null)\n    mActionMode.setTitle(String.valueOf(yourAdapter\n            .getSelectedCount()) + \" selected\");\n\n}\n```\nAdd this variable to your activity or fragment as global variable\nprivate ActionMode mActionMode;\nThen in your adapter, add this variable\nprivate SparseBooleanArray mSelectedItemsIds = new SparseBooleanArray();\nAnd add these methods\n```\npublic void selectView(int position, boolean value) {\n    if (value)\n        mSelectedItemsIds.put(position, true);\n    else\n        mSelectedItemsIds.delete(position);\n    notifyDataSetChanged();\n}\npublic void toggleSelection(int position) {\n    selectView(position, !mSelectedItemsIds.get(position));\n}\npublic void removeSelection() {\n    mSelectedItemsIds = new SparseBooleanArray();\n    notifyDataSetChanged();\n}\npublic int getSelectedCount() {\n    return mSelectedItemsIds.size();\n}\npublic SparseBooleanArray getSelectedIds() {\n    return mSelectedItemsIds;\n}\n```\nI hope this solution will help you guys, sorry if too long, contact me if you have any problem or didn't understand\n. These code is cleaner i think\nsuper.setOnItemClickListener(listener == null ? null : this);\nsuper.setOnItemLongClickListener(listener == null ? null : this);\nsuper.setOnItemSelectedListener(listener == null ? null : this);\n. This problem still occurred until now. I don't switch to SuperSLiM yet, because last time i use it, it can't detect end of scroll :(. Is there any workaround to solve this problem?\n. But from the last version of SuperSLiM that i used(0.4.13), we can't detect end of scroll. Can you confirm that it works now?\n. ",
    "riverandroid": "I got the same issue,can you resolved it?\n. ",
    "lions88": "thanks for reply\nnow I override the OnKeyListener\nmStickyGridView.setOnKeyListener(cutsomGridViewOnKeyListener);\nbut it's unskillful, I think it's better that implement this inside of StickyGridHeadersGridView:)\nprivate View.OnKeyListener customGridViewOnKeyListener = new View.OnKeyListener() {\n```\n    @Override\n    public boolean onKey(View v, int keyCode, KeyEvent event) {\n        if (event.getAction() == KeyEvent.ACTION_DOWN) {\n            if (keyCode == KeyEvent.KEYCODE_DPAD_RIGHT) {\n                GridView parent = (GridView) v;\n                int tmp = parent.getSelectedItemPosition();     \n            tmp += 1;\n            if( translatePosition(tmp).mPosition == StickyGridHeadersBaseAdapterWrapper.POSITION_FILLER ||\n                    translatePosition(tmp).mPosition == StickyGridHeadersBaseAdapterWrapper.POSITION_HEADER_FILLER){                                                \n                return true;\n            }\n        }else if(keyCode == KeyEvent.KEYCODE_DPAD_LEFT){\n            GridView parent = (GridView) v;\n            int tmp = parent.getSelectedItemPosition();\n            boolean flag = false;\n            while( translatePosition(tmp).mPosition \n                    == StickyGridHeadersBaseAdapterWrapper.POSITION_FILLER ||\n                    translatePosition(tmp).mPosition \n                    == StickyGridHeadersBaseAdapterWrapper.POSITION_HEADER_FILLER){\n                tmp--;\n                flag = true;\n            }\n            if(flag){\n                mGridView.setSelection(tmp);\n                return true;\n            }\n        }else if(keyCode == KeyEvent.KEYCODE_DPAD_UP){\n            GridView parent = (GridView) v;\n            int tmp = parent.getSelectedItemPosition();\n            Position transPos2 = translatePosition(tmp - 4);\n            if(transPos2.mPosition == StickyGridHeadersBaseAdapterWrapper.POSITION_HEADER_FILLER\n                    || transPos2.mPosition == StickyGridHeadersBaseAdapterWrapper.POSITION_HEADER){\n                tmp -= COLUMN_NUM * 2;\n                while( translatePosition(tmp).mPosition \n                        == StickyGridHeadersBaseAdapterWrapper.POSITION_FILLER){\n                    tmp--;\n                }\n                if(tmp < 0){                            \n                    mEditBtn.requestFocus();                            \n                }else{\n                    mGridView.setSelection(tmp);\n                    return true;\n                }\n            }\n        }else if(keyCode == KeyEvent.KEYCODE_DPAD_DOWN){\n            GridView parent = (GridView) v;\n            int tmp = parent.getSelectedItemPosition();\n            Position transPos = translatePosition(tmp);\n            Position transPos2 = translatePosition(tmp + 4);\n            if(transPos.mHeader == transPos2.mHeader){\n                if(transPos2.mPosition == StickyGridHeadersBaseAdapterWrapper.POSITION_FILLER){\n                    tmp += COLUMN_NUM;\n                    while( translatePosition(tmp).mPosition \n                            == StickyGridHeadersBaseAdapterWrapper.POSITION_FILLER){\n                        tmp--;\n                    }\n\n                    View itemView = mGridView.getChildAt(tmp-mGridView.getFirstVisiblePosition());\n                    if(itemView == null){\n                        int distance = Utils.dip2px(getActivity().getApplicationContext(), 170);\n                        mGridView.smoothScrollBy(distance, 0);\n                        mGridView.setSelection(tmp);\n                    } else {\n                        mGridView.setSelection(tmp);\n                    }\n                    return true;\n                }\n            }else if(transPos2.mPosition == StickyGridHeadersBaseAdapterWrapper.POSITION_HEADER_FILLER\n                    || transPos2.mPosition == StickyGridHeadersBaseAdapterWrapper.POSITION_HEADER){\n                tmp += COLUMN_NUM * 2;\n                while( translatePosition(tmp).mPosition \n                        == StickyGridHeadersBaseAdapterWrapper.POSITION_FILLER){\n                    tmp--;\n                }\n\n                View itemView = mGridView.getChildAt(tmp-mGridView.getFirstVisiblePosition());\n                if(itemView == null){\n                    int distance = Utils.dip2px(getActivity().getApplicationContext(), 218);\n                    mGridView.smoothScrollBy(distance, 0);\n                    mGridView.setSelection(tmp);\n                } else {\n                    mGridView.setSelection(tmp);\n                }\n                return true;\n            }\n        }               \n    }\n    return false;\n}\n\n};\n```\n. ",
    "caguilar187": "Had to add a second commit to this, noticed on some devices clicks weren't working since AttackInfo wasn't being set. The above change works and seems to get the job done.\n. Just noticed this, whats the issue (aka what did i break :) )? Maybe I can take a look at it.\n. Correct thats why I had added the second commit but that seems to have had some unexpected consequences. Its due to the way the android touch/rendering system works. \nWhen a user clicks it does a post with a message/runnable that sets the state to be pressed the problem is that without adding the view to a view hierarchy the view won't have a mAttachInfo which is technically the activity or context wrapper used by the view system and since this attachinfo doesn't exist the post does nothing, since there is no handler, and asking for a redraw doesn't change the state of the view.\nMaking a view that wraps is probably the proper clean solution, but I think we can make this work by using reflection and thinking about when a view is going to be recycled. AttachInfo is private but its been around since the beginning pretty much, so i believe this should be safe enough. All we need to do is set the attachinfo of the GridView to the Header and we would have the headers working properly. \nYou know the implementation better than I do the things we need to do are the following.\nWhen a header is going to be drawn on screen we need to attach the AttachInfo.\nWhen a header is going to become sticky the attachinfo should stay or be readded\nWhen a header is being recycled or removed from view the attachInfo must be cleared to ensure no context leaking.\n. If you just tell me the best place in the code where I can ensure those three events are taking place I can do the actual implementation of attaching the attachinfo. Am going to be reviewing the android source for how attaching works and stuff to make sure I use the best way. Am thinking of calling the private method dispatchAttachedToWindow is the best way but we will see. \nAs i said this is probably a good way to add this functionality for now while deciding on whether to make the wrapper view or fine tune this a little more and figure out what the issues were with my original commit for fixing the state issue.  Either way let me know what your thoughts are on this and how you would prefer to proceed.\n. Cool I guess that just leaves doing the same thing for normal headers as they are added and recycled. Looks good to me for the sticky header so far, later tonight I will look at updating my fork over to that branch and seeing how its behaving in my app as well and dispatch was definitely the method after looking over View and ViewRootImpl implementations.\nWere you also having trouble with my original commit or do you know who was so they can test out that branch for us once that last layer is added?\n. I made a few new commits to touchable_headers on my fork. So now it supports the HeaderClickListener and touches to other elements. Am going to look at adding the detach and attach to other headers now\n. Alright with the last few commits I made this now seems to be working fully using the sample app you had made originally with only a button added to each header. I changed the WrapperAdapter to use the same detach and attach instead of adding the view which was probably causing the issue with caching. \nAm sending you another pull request to make this easier.\n. Sorry for all the small commits but I figured it would be better to see the progression between things and really make sure it it looked right.\n. Oops forgot about those its probably the same isFocusable code that was added to the click listener.\n. ",
    "kyleparker": "I'd like to +1 this issue...  I'm using the latest version from GitHub and cannot seem to get the position/selected item to work as I need it.\nThe adapter position doesn't correlate to the GridView position - although in a way, it does.  In this setup:\n[ GRID HEADER  #1]\n[1]        [2]        [3]\n[4]        [5]        [6]\n[7]        [8]        [9]\n[10]\n[ GRID HEADER  #2]\n[11]      [12]      [13]\n[14]      [15]      [16]\nI get the following info:\nClick Item 1\nadapter position = 0\ngridview item checked position = 3\nClick item 2\nadapter position = 1\ngridview item checked position = 4\nClick Item 11\nadapter position = 10\ngridview position = 18\nIs there a way to have the gridview position actually return/correspond to the correct value without having to resort to inspecting the items to determine A) blank items and B) grid headers?  18 makes sense - Item 10 is position 12, add 2 for the empty items on the same row, add 3 for the column span of the header. Then that makes the 1st row of header 2, grid position 18.  \nAs a note - where this becomes an issue is using a viewpager and the gridview on the same screen - like on a tablet.  The ViewPager is unable to set the appropriate selection in the gridview because the position does not match.  Another use case is when using a tablet - gridview on screen 1, select item, go to screen 2, that same gridview appears and attempting to select the item.\nI'm going to attempt the logic in the adapter, so any pointers, thoughts or alternatives would be appreciated!\n. ",
    "xufan": "has the same problem at onItemLongClick using parent.getItemAtPosition(position) when position is 1.it's correct \nbut in my StickyGridAdapter :\n@Override\npublic Object getItem(int position) {\n    return list.get(position);\n}\nposition is -3 and app crash...\n. ",
    "UweTrottmann": "I just saw that you have a sample app and I could reproduce it there, too. Actually the scroll bar does not duplicate, but it jumps to the far left and the scroll position indicator is at the very top.\nI enabled fast scrolling via XML in fragment_item_grid.xml and targeted and built for API level 18.\n. Confirming this fix, wohoo! Thanks for the quick response.\n. ",
    "bytekode": "Yeah. Any idea when this issue will be resolved ?\n. Yeah!!. It seems like this bug is resolved after replacing the following two lines in StickyGridHeadersGridView.java (line no 887)\ncanvas.restore();\ncanvas.restore();\nwith\nif (mHeaderBottomPosition != headerHeight) {\n            canvas.restore();\n}\ncanvas.restore();\nThanks a Ton!!\n. Ok, I'll check and try to update this thread asap\n. Hi Tonic Artos, I just confirmed the problem exists in HEAD on master, and also I was NOT able to reproduce the same error using a stock GridView so may be library bug.\nPlease check.\nThanks :+1: \n. Hi Tonic, Did you get chance to look into this issue?\n. ",
    "paulovap": "25 seems to be related to this one. But i'm on android 4.2\n. ",
    "bogdanzurac": "I can duplicate this on Nexus 5 4.4.2. However, I've noticed some differences from the reported issue:\nIf I have a long text, only the first line appears. Also, if the header is sticky and the gridview's scroll is max top, the textview is invisible; if the gridview scrolls down, so that the header starts to appear on top of the items, the textview appears completely, as if nothing happened. Something's messed up.\n. Also, same thing happens with text in a webview set as header.\n. ",
    "doridori": "Im having the issue where multiline text only shows the first line when in the header. n4 v4.4\n. ",
    "mavihot": "This happens when you set singleLine to true on header TextView.\n. ",
    "bejibx": "I,m so sad that I made so many mistakes in such a small pull request. Sorry, but this is my first. There are really many stylistic changes, next time I'll made it right way.\n. Sure. I'm writing image gallery using your library with \"preload image\" feature. This means, that when user scroll down gallery, I'm preloading next few pictures to memory, so when user scroll gallery next time images load immediately and everything looks very smooth and cool. On scroll idle I need to know first and last gallery item so I can get some next and previous images from my adapter and preload them to memory. That's about \"getFirstVisibleAdapterPosition\" and \"getLastVisibleAdapterPosition\".\nAbout \"findViewPosition\" method... damn, I can't rememer why I was used this method. I was used it before, when there was \"measure row height\" feature in your library. At the time, I had a lot of problems with selection inside GridView and wrote this method for something, but after you remove this feature I rewrote a tonn of code and now can't find any usages of this method, so I think probably now it's kind of unused. Yeah, I think I should not have include it to pull request.\nI think I'm really should close this pull request, make it right way and post it again without any mistakes and so on.\n. The problem is I show multiple pictures at a time. Screen may looks like this:\n...\n[HEADER 1]\n10 11 12\n13 14 15\n16 17 \n[HEADER 2]\n...\nSo I need to preload images before 10 and after 17. For that I need to know current display range.\n. StickyGridHeadersGridView is scrollable by itself. You should never put one scrollable view inso another. \n. ",
    "elgui": "Ok,\nthanks for your quick answer, your commitment, and the good job !\nOn Wed, Sep 25, 2013 at 4:31 PM, Tonic Artos notifications@github.comwrote:\n\nAt the moment there are various problems related to drawing headers. It is\nprobable that a complete redesign of SGH will be needed to support\nanimations and similar features.\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com/TonicArtos/StickyGridHeaders/issues/63#issuecomment-25090575\n.\n. By \"flinging\", I mean scrolling pretty fast, and that's the status of the grid keeping scrolling while there is no touch anymore.\nAnd yes, you can obviously stop that scroll by touching a \"regular\" item, but it does not work if I touch my headers, until the fling stops (it works with the demo you provided though)\n. \n",
    "omihaz": "Can you bring back support API 7?\nMay be better use this feature when API >=9, and disable it if API < 9?\n. ",
    "tenaz92": "I have got the same issue.Is any fix available?\n. ",
    "mingfai": "This is not an issue with StickyGridHeader but an issue with GridView in general. At the end, i implemented a solution that \n- with row number and number of columns, keep tracks of the largest height\n- set the item's height to the largest one at its onMeasure\nThe solution is similar to http://stackoverflow.com/questions/7545915/gridview-rows-overlapping-how-to-make-row-height-fit-the-tallest-item/7568226#7568226\n. ",
    "jeffreydelooff": "Updated to 2.0-SNAPSHOT and seems to have been fixed.\n. ",
    "fampinheiro": "+1 \n. ",
    "amrfaisal": "Any updates on this issue?\n. ",
    "dmitry-zaitsev": "@djastro Please reformat your code according to Java code conventions\n. ",
    "NicolasSiver": "Easy fix:\n@Override\n    public Object getItem(int position) throws ArrayIndexOutOfBoundsException {\n        return mDelegate.getItem(position);\n    }\n. After some investigation, yep, It works, but to check first item, index should be 0 + numberOfColumns \u2026\n. ",
    "jam01": "The fix you suggest is to modify the getItem in StickyGridHeadersBaseAdapterWrapper, right? Or can you override it from somewhere else?\n. ",
    "zonkzen": "Do you have any suggestion on what I could do?\n. ",
    "ubuntudroid": "Any news on when this could get fixed or how one can work around the current behavior?\n. ",
    "gmale": "Just pull the latest and run the following to verify that it builds, as expected using Gradle 1.9 (even if you don't have it installed on your machine):\n./gradlew assemble\n. ",
    "neilbantoc": "I'm having the same issue, so bump, I guess? Any help would be appreciated!\n. ",
    "mehdok": "I have the same issue.\n. ",
    "Lingviston": "Also looking for that functionality. I want to ahve semi-transparent headers to make items below them visible. This is how StickyListHeader work.\n. I understand how to get position related to dataset correctly but I at least need to know number of headers before view/position which I can't get from StickyGridHeadersGridView.\n. Of caurse this is a solution but I want to have listeners inside Activity not Adapter. For example to achieve this I can also set position as Tag for my Button.\n. Found the solution. After receiving position I don't request item from my Adapter using it but call getAdapter() method of StickyGridHeadersGridView and use it's getItem() method.\n. ",
    "HomHomLin": "I found the question too.\nAnd I also found a method which named \"dispatchDraw(Canvas canvas)\" in StickyGridHeadersGridView.java and draw something in the canvas like canvas.drawColor(Color.RED), the header's bg will be the color you draw, but canvas.drawColor(Color.TRANSPARENT) is not work.\nI don't know how to do . \n. OK,I'm fool.\nLet us look this.\n\"transparent header item\" https://github.com/TonicArtos/StickyGridHeaders/issues/23\nTonicArtos added a new method named \"public void setStickyHeaderIsTranscluent(boolean isTranscluent)\" in StickyGridHeadersGridView, and you give the method \"true\" and everything will be good.\n. ",
    "a-thomas": "That NPE occured when I was using a TextView as the parent of the item view. I added a FrameLayout as parent to fix that crash. It's a quick fix but it works ;)\n. Exactly ;) \n. ",
    "AndroidDeveloperLB": "you mean putting the header as a frameLayout that has a textview ?\n. @a-thomas it was a long time ago. maybe that's how i've used it in the end.\n. ",
    "karllindmark": "I'm seeing the same issue, and it re-occurs while scrolling through the list and back.\n. ",
    "nbutton23": "could be a memory pressure issue. Is it happening on old devices?\nDo you know what error its throwing? \n. Should be fixed by pull request #92 \n. The ready me shows that this is for Android 2.3 and above. \n. ",
    "hijamoya": "Any update about this?\n. ",
    "mdelolmo": "For me this only happens when I use the library as a packaged jar. When I integrated the code into my project in order to debug, I was not able to reproduce the issue.\nIs that jar file really the latest version available? Is it possible that it is fixed in master but not on that release?\n. ",
    "jillmoto": "It seems that it's the id in the XML - i was using the same id for both grid views. No more crash reports after i changed it to use different ids.\n. ",
    "yakubbaev": "I have the same problem\n. ",
    "R4md4c": "Any updates on this problem ? I'm having the same problem too \n. For anyone who was searching for a solution, I've copied the library code, and made the onHeaderClick listener to send the MotionEvent parameter and then did a view.onTouchEvent(ev); and it worked !\nI know that this is a dirty and hacky solution but it did the job.\n. ",
    "SylvainRousson": "thank you for your fast answer.\nCould you please recommand me the best version to use ? I integrated it in my application which is an update of a famous sport application. I really need to fix it as fast as I can !\n. Or maybe just removing the complex view I put in the Header, and replace it with TextView without images ?\nThis is my header view (non sticky header view in this case) : \n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n```\n\n<com.kreactive.feedget.customfont.CustomFontButton\n    android:id=\"@+id/btn_video_list\"\n    style=\"@style/live_header_button\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"@dimen/header_button_item_height\"\n    android:layout_marginLeft=\"@dimen/margin_small\"\n    android:layout_weight=\"1\"\n    android:drawableLeft=\"@drawable/picto_popular\"\n    android:paddingLeft=\"@dimen/padding_default\"\n    android:paddingRight=\"@dimen/padding_default\"\n    android:text=\"@string/stories_tab_videos\"\n    customfonts:font=\"@string/roboto\" />\n\n<com.kreactive.feedget.customfont.CustomFontButton\n    android:id=\"@+id/btn_story_popular\"\n    style=\"@style/live_header_button\"\n    android:layout_width=\"0dp\"\n    android:layout_height=\"@dimen/header_button_item_height\"\n    android:layout_marginLeft=\"@dimen/margin_small\"\n    android:layout_weight=\"1\"\n    android:drawableLeft=\"@drawable/picto_popular\"\n    android:paddingLeft=\"@dimen/padding_default\"\n    android:paddingRight=\"@dimen/padding_default\"\n    android:text=\"@string/stories_tab_popular\"\n    customfonts:font=\"@string/roboto\" />\n\n\n\n```\n\n. I removed the drawable left I put, and get the error again (once only).\nI should have mentionned that my headers textview are customed (for fontt changing) and are clickable).\nDo you think it is the way I use it that can cause crash ?\n. ",
    "goonerDroid": "@YlorD I used FragmentPagerAdapter instead of using FragmentStatePagerAdapter.Worked for me like a charm!\n. ",
    "drhr": "See the above PR. Seems to work. My layout shows up as designed:\n\n. ",
    "runningcode": "I noticed this as well. I deleted the StickyGridHeadersGridView#onTouchEvent(MotionEvent ev) function and my scrolling became buttery smooth. I also didn't notice any loss of functionality but I'm not using the more advanced feature like long clicks or header click listeners.\n. ",
    "serandel": "My Picasso-powered grid items now stay blank for seconds before starting to load its images.\n. I'm getting the feeling that item views are not being recycled properly, as the performance drops in direct proportion to the number of items, and items near the bottom have to wait por its images to be loaded far longer than the top ones.\n. ",
    "crafter": "@Override\npublic long getHeaderId(int i) {\n    return set_headerId(i);\n}\nYou need to return different header id for your each header \nI'm trying to do date filter for headers i hope this helps.\n```\n public int set_headerId(int position){\nint Id = 0;\nint year = Integer.parseInt(arrayListForAdapterSpending.get(position).getDate().substring(0,4));\n\nLog.d(\"Date\",\" = \" + arrayListForAdapterSpending.get(position).getDate());\nLog.d(\"Year\",\" = \" + arrayListForAdapterSpending.get(position).getDate().substring(0,4));\nLog.d(\"Month\",\" = \" + arrayListForAdapterSpending.get(position).getDate().substring(5,6));\n\nId = year + getHighNumberMonth(position);\n\nLog.d(\"Last\",\"Id = \" + Id);\n\nreturn Id;\n\n}\n```\n. ",
    "xgear-public": "I found the way to implement this through changing getCount in StickyGridHeadersBaseAdapterWrapper and adding header filler views and fake header and disabling sticky feature. So i just appended additional header to the end. As i understand it is possible to implement support of 'like in listview' header and footer for StickyGridHeaders GridView in the way i described. If this is reasonable(i think it is reasonable because i haven't find implementation of gridview with header and footer using android GridView as base) - i can pull request.\n. ",
    "PankhuriMishra": "Seeing same issue, did you find any solutions to the flicker ?\n. ",
    "naclach85": "Can you help to fix this bug?\n. The sample code:\n```\n@Override\npublic View getHeaderView(int position, View convertView, ViewGroup parent) {\n    ViewHeaderHolder mViewHeaderHolder = null;\n    final int idx = position;\n    LogUtils.logd(\"getHeaderView position = \" + position + \" idx = \" + idx);\nif ((convertView == null) || (null == convertView.getTag())) {\n    mViewHeaderHolder = new ViewHeaderHolder();\n    convertView = LayoutInflater.from(mContext).inflate(R.layout.cloud_photo_video_grid_view_header, parent, false);\n    mViewHeaderHolder.imageViewEditStatus = (ImageView) convertView.findViewById(R.id.imageview_gridview_select);\n    mViewHeaderHolder.locationTextView = (TextView) convertView.findViewById(R.id.textview_gridview_location);\n    mViewHeaderHolder.timeTextView = (TextView) convertView.findViewById(R.id.textview_gridview_time);\n\n    mViewHeaderHolder.imageViewEditStatus.setOnClickListener(new OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            LogUtils.logd(\"onClick getView idx = \" + idx);\n            UiInfoConst.UI_EDIT_STATUS status = getUiEditStatus(idx);\n\n            if(status.isBrowse()) {\n                status = UI_EDIT_STATUS.UI_EDIT_STATUS_SELECT;\n            } else if(status.isSelect()) {\n                status = UI_EDIT_STATUS.UI_EDIT_STATUS_NO_SELECT;\n            } else {\n                status = UI_EDIT_STATUS.UI_EDIT_STATUS_SELECT;\n            }\n            setUiEditStatus(idx, status, true);\n            notifyDataSetChanged();\n        }\n    });\n\n    convertView.setTag(mViewHeaderHolder);\n} else {\n    mViewHeaderHolder = (ViewHeaderHolder) convertView.getTag();\n}\n\nString locationName = getHeaderLocation(idx);\n\nif (TextUtils.isEmpty(locationName)) {\n    mViewHeaderHolder.locationTextView.setVisibility(View.GONE);\n} else {\n    mViewHeaderHolder.locationTextView.setVisibility(View.VISIBLE);\n    mViewHeaderHolder.locationTextView.setText(locationName);\n}\n\nupdatetStatusSelectImage(mViewHeaderHolder.imageViewEditStatus, getUiEditStatus(idx));\n\nmViewHeaderHolder.timeTextView.setText(getHeaderTimeName(idx));\n\nreturn convertView;\n\n}\nprivate class ViewHeaderHolder {\n    public ImageView imageViewEditStatus;\n    public TextView locationTextView;\n    public TextView timeTextView;\n}\n```\n. My adapter implements StickyGridHeadersBaseAdapter. \nWhen i click the imageview imageViewEditStatus in three header, I ecpect the idx = 2, however, I find the idx = 0.\n. I have fix this bug. \n. ",
    "engr-erum": "@wyy283  u found solution ? \n. ",
    "pchauhan": "any one found any solution?\n. ",
    "YLBFDEV": "GridView\u5df2\u7ecf\u53ef\u4ee5\u6eda\u52a8\u4e0d\u9700\u8981\u5728\u5916\u9762\u5d4c\u5957 Scrollview\u3002\u53ef\u4ee5\u628aScrollview\u53bb\u6389\u8bd5\u8bd5\u770b\n. ",
    "Tipsyume": "\u5177\u4f53\u662f\u8fd9\u6837\u7684\uff0c\u4e00\u4e2a\u9875\u9762\u9664\u4e86gridview\u8fd8\u6709\u4e00\u4e9b\u5934\u90e8\u5e03\u5c40\u7684\uff0c\u76ee\u524d\u8fd9\u4e2agridview\u4e0d\u80fdaddheader,\u5d4c\u5957\u5728Scrollview\u91cc\u4e86\uff01\n. ",
    "wangshaolei": "@Tipsyume hi, how do you solve the problem? can y help me?\n. I try the code : overriide onMeasure(){super.onMeasure(widthMeasureSpec, MeasureSpec.makeMeasureSpec(Integer.MAX_VALUE >> 2, MeasureSpec.AT_MOST));}\nbut find big empty view in the scrollview's bottom.\n. "
}