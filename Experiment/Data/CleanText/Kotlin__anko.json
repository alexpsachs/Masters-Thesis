{
    "xgrommx": "I found how can I to use certain this \njava\nlineChart {\n setOnChartValueSelectedListener(this@MainActivity)\n}\nBut my other issues still to be resolved.\n. @yanex I don't know when I should put this code =(\njava\nvar <T> Chart<T>.data: T\n    set(value) = setData(value)\n. Also I have yet another question. Now I use this construction:\njava\n                    var set1 = RadarDataSet(generateSourceY(2), \"Set 1\")\n                    set1.setColor(Color.RED)\n                    set1.setDrawFilled(true)\n                    set1.setLineWidth(2f)\nBut I would like use it as in C#(I'm .net developer, but kotlin of interest to me)\ncsharp\n                    RadarDataSet() {\n                        source = generateSourceY(2)\n                        label = \"Set 1\"\n                        color = Color.RED\n                        drawFilled = true\n                        lineWidth = 2f\n                    }\nor\ncsharp\n                    RadarDataSet(generateSourceY(2), \"Set 1\") {\n                        color = Color.RED\n                        drawFilled = true\n                        lineWidth = 2f\n                    }\nCould you please explain how can I do it?\n. But with return Unit type instead of a new instance RadarDataSet =( and if I use without with operator I got errors => \njava\nvar set = RadarDataSet(generateSourceY(2), \"Set 1\") {\n                        color = Color.RED\n                    }\n. Thanks! It's work now!)\n``` java\n    public var RadarDataSet.color: Int\n        get() = getColor()\n        set(value) = setColor(value)\npublic var RadarDataSet.lineWidth: Float\n    get() = getLineWidth()\n    set(value) = setLineWidth(value)\n\npublic var RadarDataSet.drawFilled: Boolean\n    get() = isDrawFilledEnabled()\n    set(value) = setDrawFilled(value)\n\nfun RadarDataSet(list: ArrayList<Entry>, label: String, init: RadarDataSet.() -> Unit): RadarDataSet {\n    val obj = RadarDataSet(list, label)\n    obj.init()\n    return obj;\n}\nvar set = RadarDataSet(generateSourceY(2), \"Set1\") {\n    color = Color.RED\n    lineWidth = 2f\n    drawFilled = true\n}\n\n}\n```\nAs I understood the same way for radarChart?\njava\n    fun ViewManager.radarChart(init: RadarChart.() -> Unit = {}) = __dslAddView({ RadarChart(it)}, init, this)\nI just need create similar function and getters, setters and I could be use it like a RadarDataSet?\n. But that is not working in this case. RadarChart has the method getXLabels() which return XLabels class.\njava\n    public var XLabels.textSize: Float\n        get() = getTextSize()\n        set(value) = setTextSize(value)\nAnd this code doesn't work now. No errors but and no results of work\njava\n    getXLabels() {\n        textSize = 9f\n    }\nHow can I solve this case?\n. Sure, all files you can see in my repository. Now I use java way https://github.com/xgrommx/KoanMPAndroidChartExample/blob/master/app/src/main/kotlin/com/gromm/koanexample/MainActivity.kt#L152 but will be good if I can use a declarative style.\n. Awesome! Thanks, as for me Kotlin looks very clearly unlike Scala and it's good. And for Android Scala has very big runtime library. My choise for Android it's Kotlin =) Could I to ask you in future if I have questions?\n. Also I have one small question. This is correct syntax or I could you use smth instead of a ViewManager\njava\nfun ViewManager.radarChart(init: RadarChart.() -> Unit = {}) = __dslAddView({ RadarChart(it)}, init, this)\nNow I cannot extract a declaration of my radarChart in another function because this one required parent layout like a verticalLayout or etc.\n. ",
    "yanex": "Hello, @xgrommx!\nYou can make use of ctx and act extension properties in any class that extends Activity (explained in Instance shorthands part of manual) as well as using this@MainActivity syntax.\nAs for replacing setData() with data property, Kotlin does not provide native properties for Java classes automatically. Properties for the Views in Android SDK are contained in Koan, though you must write your own for the custom types.\nFor example,\nkotlin\nvar <T> Chart<T>.data: T\n    get() = getData()\n    set(value) = setData(value)\n. > I don't know when I should put this code =(\nYou could put it in any .kt file in your project from where you could import it.\nIf you have lots of custom components, it would be easier to manage them if put in the separate file (CustomDslComponents.kt or similar).\nBy the way, your property declaration doesn't contain get() clause. As for now, val property in Kotlin must contain a getter, and var (mutable) property \u2014 a pair of getter and setter.\n\nCould you please explain how can I do it?\n\nThe code is similar as for getData() except it has different types:\nkotlin\nvar RadarDataSet.lineWidth: Float\n    get() = getLineWidth()\n    set(value) = setLineWidth(value)\nAnd so on. Also you could use a Kotlin's with() function:\nkotlin\nwith(RadarDataSet()) {\n    // `this` now is a RadarDataSet instance\n    color = Color.RED\n    lineWidth = 2f\n}\nYou can read more about extension functions and properties here.\n. Well, you can either return this from lambda:\nkotlin\nval dataSet = with(RadarDataSet()) {\n    color = Color.RED\n    this\n}\nor replace with function with the custom function that returns the argument instead of lambda calculation result:\n``` kotlin\ninline fun  have(obj: T, init: T.() -> Unit): T {\n    obj.init()\n    return obj\n}\nval dataSet = have(RadarDataSet()) {\n    color: Color.RED\n}\n```\nAs an alternative, you could make a new function specially for the RadarDataSet() type that imitates constructor:\n``` kotlin\nfun RadarDataSet(init: RadarDataSet.() -> Unit): RadarDataSet {\n    val obj = RadarDataSet()\n    obj.init()\n    return obj\n}\nval dataSet = RadarDataSet {\n    color: Color.RED\n}\n``\n. Yes, that's it!\n. WhichgetXLabels()function do you use? If one defined inRadarChart.java`, the code you provided is unlikely to compile.\nIt would be better if you show some additional code.\n. Well, you could write this (the fastest way if you don't need the result):\nkotlin\nwith (getXLabels()) {\n    setTextSize(9f)\n}\nOr write an another extension function:\n``` kotlin\nfun RadarChart.xLabels(init: XLabels.() -> Unit): XLabels {\n    val obj = getXLabels()\n    obj.init()\n    return obj\n}\nxLabels {\n    setTextSize(9f)\n}\n```\n. Sorry for the long response.\nYou could extract part of your DSL as an extension function.\nkotlin\nverticalLayout {\n  frameLayout {\n    textView(\"Text\")\n  }\n}\nAnd extracted version:\n``` kotlin\nverticalLayout {\n  extractedFunction()\n}\nfun LinearLayout.framedText() {\n  frameLayout {\n    textView(\"Text\")\n  }\n}\n```\n. Koan currently has not special DSL for custom adapters yet.\nHowever, it's quite simple to make your own adapters with Koan. I will modify a koan-demo-gradle project tomorrow and add some ListView-related code.\n. There was a bug in Koan which made List adapter handling not obvious in the past. With Koan 0.3 there's no problem! Here's the example:\nhttps://github.com/yanex/koan-demo-gradle/blob/master/app/src/main/kotlin/org/example/koandemo/CountriesActivity.kt \n. Done!\n. Yes, there is a template project.\n. Thank you for the contribution! :penguin: \n. What platforms do you mean?\n. The reason for creating Anko was to get rid of numerous problems of Android development. So it is quite unlikely for Anko to become platform-independent.\n. It is simple.\nkotlin\ntextView(if (configuration.portrait) \"Portrait\" else \"Landscape\")\ntextView(if (displayMetrics.densityDpi == XHDPI) \"Xhdpi\" else \"Non-xhdpi\")\n. That's a good idea, thank you!\nI can't say now if the string description like \"sw600dp-v17\" would be safe enough cause we have to throw Exceptions on runtime it argument has an invalid format, but it's definitely worth considering.\n. Sounds reasonable. TextView.textSize is a kind of special attribute (it accepts sp float instead of px Int, thus has different semantics).\nFor any other attributes, dim(R.dimen.<id>) function (doesn't exist yet but in the plans) should be enough.\n. Fixed.\n. I really like this. Indeed, it requires an additional block level, but, among all other benefits, it goes well with auto-completion in IDE.\n. Fixed.\n. Done.\n. Fixed.\n. Fixed.\n. Anko has a style() function, though traditional Android XML styles are unsupported now.\nAndroid SDK does not provide a good way to set View styles in code out of the box, and we are trying to find a way to support it.\n. @hannesstruss I've created the new issue for this: #361.\nI also mark this issue as \"closed\". If you have other problems with themed views, please feel free to create the new issues.. Just in case: Kotlin now has late-initialized variables (https://kotlinlang.org/docs/reference/properties.html#late-initialized-properties) which don't create an extra delegate object.. What is a superclass of your Activity?\n. Duplicated by #72.\n. 1. Maybe there will be an intension in Anko plugin that will create new properties for Java get/set methods.\n2. There is a property View.minimumHeight : Int.\n3. backgroundColor = getResources().getColor(android.R.color.primary_text_dark).\n. What hardcoded attrs do you mean?\n. @yoavst @pawegio What functions can you suggest?\n. Fixed.\n. Can you provide an example, please?\n. You can always put it explicitly by setting the layoutParams property.\nPlease create the new issue if it is unacceptable for you for some reason.. @phajduk Hello! Code is ok!\nI moved all custom widgets to OtherWidgets.kt file. You can add all new widgets there; if it is not a container like verticalLayout(), an extension function for ViewManager would be pretty enough.\nEditText actually has lots of input types, such as person name or a signed number. Probably, it's better to have a single fun editText(format: TextFormat, ...) and a enum class TextFormat, so one could write something like this:\nkotlin\neditText(InputConstraints.NUMBER, \"12345\")\nThough, the TextFormat name is discussable.\n. Fixed.\n. Versions 0.6-15s and 0.6-19s include functions and properties for support-v4 and appcompat-v7 libraries as well.\n. Yes, that's right.\n. Related issue: #58.\n. Fixed. Thank you!\n. Fixed. Thank you!\n. Relevant issue: https://github.com/JetBrains/anko/issues/29\n. It was a BinTray issue, and now it should be fixed.\n. Duplicated by #72.\n. Merged. Thank you!\n. This feature is currently under the development.\nThe first (more obvious and straightforward) way is to add some functions like editTextCompat() which will add AppCompatEditText if the Android SDK version < 21.\nThe other way is to modify standard functions (button(), editText()) and so on so they produce tinted Views seamlessly.\nThe preferred way is the first: one always knows what he is doing, and it requires no modifications in versions without an appcompat-v7 library.\n. Done.\n. Fixed. Thank you!\n. Unfortunately, it's impossible to create a fragment in Android without an explicit class declaration.. I've created the new issue for this: #362.. Merged. Thank you!\n. Merged. Thank you!\n. Thank you for the pull request!\n1. Maybe Fragment should then have startService() function as well. Please look into the ContextUtils.kt and Support.kt files.\n2. This change breaks existing code. You can annotate the old val with deprecated (there's an example: https://github.com/JetBrains/kotlin/blob/master/libraries/stdlib/src/kotlin/collections/Sequence.kt#L307).\n. Merged!\n. Nobody made the detailed Anko/XML performance test yet.\nThough, Anko doesn't need to parse binary XML layouts, and all the widgets are created without using Java Reflection (unless you explicitly use customView() or include()), so, probably, Anko is a bit faster than XML.\n. Update:\nSome comparisons:\n- https://android.jlelse.eu/400-faster-layouts-with-anko-da17f32c45dd\n- https://nethergrim.github.io/performance/2016/04/16/anko.html. Merged. Thank you!\n. Fixed. Thank you!\n. Thank you for the pull request!\nCould you fix the formatting?\n. Merged!\n. According to Resources,\n\nReturn a global shared Resources object that provides access to only system resources (no application resources), and is not configured for the current screen (can not use dimension units, does not change based on orientation, etc).\n. Anko 0.6.2 was released just now and should be available via Maven soon.\n. Duplicate of: https://github.com/JetBrains/anko/issues/49.\n. Merged. Thank you!\n. This approach is not so good as it is not extensible (ActionBar class names are hardcoded, and it would take the same time to support any other class in Android SDK).\nAnko now can resolve external annotations, so putting a custom annotation on ActionBar class would be much cleaner solution.\n. It's actually very easy. I added a custom annotation in https://github.com/JetBrains/anko/commit/ed39f2cf6a7464b444e2f9f91e6066a42c840a27 to support  _Layout helper class generation for ImageSwitcher.\nI will try to spend some time today to handle external annotations in property generation.\n. Fixed.\n. The problem is being fixed now.\nSorry for the inconvenience!\n. Fixed!\n. Thank you for the pull request!\nBut, actually, it lacks corresponding test data changes. Renderer is now under refactoring, and the annotation format was updated in https://github.com/JetBrains/anko/commit/5ffb14d34f84730b39a416cf74ef2fe17a38db8c.\n. Packing everything to the single jar file is not the best choice. The main reasons are:\n1. It increases the library size;\n2. ART prints an error message if it bumps into an unknown type on loading class.\n\nThere are plans to make individual artefacts for support libraries such as CardView, RecyclerView and so on.\n. Anko 0.7 has bindings for almost all Android support libraries so I think this PR can be closed.\nAnyway, thank you for the contribution!\n. Yes, it is in the plans.\n. It will be supported in Anko just after all the changes described here will take place.\n. Thank you for the pull request!\nlayoutParams() functions don't make much sense for some widgets (e.g. ZoomControls), so _Layout classes should not be generated. Please tell me if I am wrong.\nAlso, although AbsoluteLayout is deprecated, it is the part of Android SDK (and, probably, is used by someone cause of its uniqueness), so its support should not be dropped.\nI added LayoutParams resolving for the existing classes in https://github.com/JetBrains/anko/commit/dad92b7b1032f257872d6b246738a11a912745ef, this should fix https://github.com/JetBrains/anko/issues/54.\n. I believe that adding new files with exceptions will result in a big mess one day.\nAnko supports external annotations, so I used it to generate _ImageSwitcher class in https://github.com/JetBrains/anko/commit/ed39f2cf6a7464b444e2f9f91e6066a42c840a27.\n. @EddieRingle Thank you for the valuable advices!\n. Fixed.\n. You can find all changes for a particular release in the Releases page.\n. Yes, it would be nice! :)\n. The jar file collector does not exist anymore, so I think this request may be closed.\nAnyway, thank you for the contribution!. Thanks!\n. Related Kotlin issue: https://youtrack.jetbrains.com/issue/KT-4250\n. The bug is fixed since at least Kotlin 1.0.1.. You can get a content View in Android.\nhttp://stackoverflow.com/questions/5273436/how-to-get-activitys-content-view\n. I have been thinking about implementing a \"id generator\" some time, but now it is unclear where should generator cache live.\nThe most appropriate candidate is UiHelper, though there are many questions to find answers for.\n. The problem with referencing Views from inside the DSL can be solved by using lateinit var properties.\nSome View id generator would be very handy, though it's not clear how it could be done without writing the Kotlin compiler plugin.\nI mark the issue as \"closed\". Please create the new issue if you still have any troubles.. http://blog.jetbrains.com/kotlin/2015/04/announcing-anko-for-android/#comment-33273:\n\nYou could though it is not recommended.\nSuppose you have a LinearLayout inside a RelativeLayout container, and you want to set LayoutParams for the inner LinearLayout. In this case, layoutParams() function you write inside the inner {} will be for LinearLayout, and you might not notice this fact some time.\n. I don't understand a problem mentioning View.layoutProperties. Could you provide an example?\n. Setting a RecyclerView.LayoutParams to the view that is inside a SwipeRefreshLayout container is what you want to do?\n. The problem should be fixed with the DslMarker annotation support from Kotlin 1.1 (#300).\nStarting from Anko 0.10, you simply can't apply the wrong lparams since no candidates other than the direct parent ones are available.\nIf you have some another problem with the recommended syntax, please feel free to file the new issue.. Maybe you are talking about this bug?\nIt is fixed, though now it is only in the master branch. Artefacts from master branch can be downloaded here.\n. You can log in as guest.\n. Is it really needed?\nYou can always call e.printStackTrace() in such cases.\n. Oh, I understood, you are talking about http://developer.android.com/reference/android/util/Log.html#e(java.lang.String,%20java.lang.String,%20java.lang.Throwable).\n\nIt will be supported in next versions.\n. Fixed in 017494b7e7b4c4a72af44a7ba309e5162566eeb0.\n. @schwiz All artefacts should be available in jcenter.\n. I tried to debug your project.\nI don't know about the original getActivity() must not be null exception cause I couldn't reproduce it, but PkmnPkmnFragment does not have an empty constructor (and it is required).\njava.lang.InstantiationException: can't instantiate class fr.ribesg.android.encypokedia.activity.fragment.PkmnPkmnFragment; no empty constructor\nis thrown.\n. Also, you save View references in PkmnPkmnFragment even when an underlying Activity is gone. It leads to memory leaks.\nYou can clean View references, for example, in overriden Fragment.onDetach() method.\n. Does this happen every time, even in case of the very simple layout?\n. New DSL preview is coming soon, so this bug will eventually become obsolete.\n. Done.\n. Done.\n. Proposed fix:\n``` kotlin\npublic fun  T.asyncResult(task: AnkoAsyncContext.() -> R): Future {\n    val context = AnkoAsyncContext(WeakReference(this))\n    return BackgroundExecutor.submit { context.task() }\n}\npublic fun  T.asyncResult(executorService: ExecutorService, task: AnkoAsyncContext.() -> R): Future {\n    val context = AnkoAsyncContext(WeakReference(this))\n    return executorService.submit { context.task() }\n}\n```\n. So the only thing that should be done is a warning in IDE:\n\nAnko IDEA plugin must show the warning when the lambda passed to async captures an underlying Activity/Fragment/whatever.\n. kotlinx.coroutines is the recommended way to start the background tasks since Kotlin 1.1.\nThere's no need in adding the IDE support to old async() functions.. Considering the Java synthetic properties and the apply function in stdlib are available now, such DSL is not really needed anymore.\n. Thank you for the contribution!\nActually, in the newer version of Anko this bug was fixed.\n. Fixed. Thank you!\n. New version will be available today.\n. Done. https://github.com/JetBrains/anko/releases/tag/v0.7\n. :+1: !\n. By the way, why startActivity is bad? I think that the name start is not concrete. Below that, it can easily clash with something in user code.\n. Merged. Thank you!\n. In what case you need to set top-level layout parameters?\n. Anko doesn't know what the layout is available on the top DSL level, so you obviously can't set it via lparams. Please use the layoutParams synthetic property (setLayoutParams() method) to set it in this case.\n\n@aneophyte you can also use the apply function from stdlib so you don't have to explicitly return this.\n. Merged. Thank you!\n. Anko 0.7.1 is released https://github.com/JetBrains/anko/releases/tag/v0.7.1.\n. Could you please try jars from here https://github.com/JetBrains/anko/releases/tag/v0.7.1 ? If all is ok, I will re-upload fixed artefacts to Maven.\n. Fixed JARs are available on Gradle. Sorry for inconvenience!\n. You can set an Activity theme as explained there.\n. Merged manually: https://github.com/JetBrains/anko/commit/2a67399a9289aa77ecf1df45341061c80fd1c7da. Thanks!\n. You are free to reference anko-common library if you don't need any of DSL features :)\nActually, it was the main reason for library partitioning.\n. Merged. Thank you!\n. Isn't the new AnkoContext<*>.dip() function enough in this case?\n. Added manually: a44aa5311f35d03ab45a384055da1e3b4ee0f8f4. Anyway, thanks for the idea!\n. Anko 0.7.2 is out: https://github.com/JetBrains/anko/releases/tag/v0.7.2.\n. Merged. Thank you!\n. Anko DSL Preview plugin was updated just now. Sorry for the inconvenience!\n. Merged manually https://github.com/JetBrains/anko/commit/92bab698d4415e035f77d010db7e387058312bf8. Thanks!\n. Merged. Thank you!\n. AnkoLogger uses Log.isLoggable() under the hood which ignores VERBOSE and DEBUG log levels by default.\nYou can read more about it here: https://mobiarch.wordpress.com/2012/05/11/proper-logging-from-android-application/.\n. Duplicated by #72.\n. It is actually supported, see anko-support-v4 artifact.\n. Please use Anko 0.7.3.\n. Well, 0.8 is not fully ready right now, but I can release the 0.8-rc version.\n. @greenspand Anko 0.8 is planned to be released on Monday (Nov 30).\n. Done!\n. Anko 0.8 contains the new DSL Preview Plugin, so this issue is considered obsolete now.\nPlease create a new issue if the exception still remains in your case.\n. Thank you!\n. AnkoComponent is not exist in Anko 0.7.3 and will be available since 0.8.\n. Fixed in 9fddf09bad996609b8396b29d0fbc2de319c3a8e.\n. What IDE to you use? AS/IDEA? Version?\n. Preview is currently provided only for AnkoComponent implementations. It is quite useful to have it for View classes written in Kotlin (and maybe in Java as well).\n. Preview is available for AnkoComponent implementations in Anko 0.8.\n. Fixed in Anko DSL Preview IDEA Plugin 0.8.1a.\n. I see no reason for supporting that cause (almost) all layouts use android:, not notandroid: or something like that.\n. 1. We lose the type-safety here. And get the runtime exceptions (or suffer because of undefined behaviour).\n2. We can't properly extend such a DSL. Or, at least, I don't see a good way to do this.\n3. It adds an another level of abstraction, and it _is not cheap_.\n. See also #314..View.setTagshould not be used in Anko because users should be able to use it directly.\nAlso, using text contacts (\"style1\"`) is not the best practice as such constants can't be verified at compile-time.\nWhat I recommend is to do this:\n``` kotlin\nfun  makeStyle(style: T.() -> Unit) = { v : T -> v.style() }\nclass ExampleComponent : AnkoComponent {\n    val buttonStyle = makeStyle {\n        textColor = Color.CYAN\n    }\noverride fun createView(ui: AnkoContext<Context>) = ui.apply {\n    button(\"Click me\") {\n        onClick { toast(\"Hello, world!\") }\n    }.apply(buttonStyle)\n}.view\n\n}\n. FYI: `style()` was renamed to `applyRecursively()`.\n. Thank you!\n. Can you please try Anko 0.8.1?\n. Looks like the renaming is not needed anymore with the introducing of \"DslMarker\" support.\nPlease create the new issue if you still have the problem.. Merged.Thank you!\n. Done.\n. Updated in https://github.com/Kotlin/anko/commit/c33e4dc0bfee9c289938002071d6c18ca055a696: `async` \u2192 `async()`. Thank you!\n. kotlin\ninline fun  dsl(crossinline f: AnkoContext<*>.() -> T): T {\n    var view: T? = null\n    getContext().UI { view = f() }\n    return view!!\n}\n``\n. This issue is already fixed: https://youtrack.jetbrains.com/issue/KT-11944.\nP.S.: Please use the main Kotlin issue tracker for bugs in Android Extensions.\n.anko-commonshould not be dependent on any of the support libraries Google provide.\nWhat is possible is to create the newanko-support-v4-commonand make theanko-support-v4artifact dependent on it.\n. Can you show some code?\n. Do you have any exceptions in logs? Looks likereadText()failed to load the page content, and the default error handler inasync()(ordoAsync()` now) is:\nkotlin\nprivate val crashLogger = { throwable : Throwable -> throwable.printStackTrace() }. What about extracting the view DSL into AnkoComponent and using it inside your tests?. What do you mean?\n. Maybe add an optional body parameter?\nkotlin\nintent.putExtra(\"sms_body\", message)\n. @carmas123 Definitely.\n. Old listeners are made inline in 0.10.\nThe new listeners with coroutines can't be inline (inline suspend functions are not supported yet).. Fixed in https://github.com/Kotlin/anko/commit/878882a6f8708a8002cd2c34c0e2cd8c5e521b9d (new plugin.xml location).\nThanks!\n. As async() accepts everything as a receiver, you can pass something that will not be collected by GC for sure (System.out for example). In this case uiThread will be always executed.\nHowever, I admit there could be a reason for the done() function. It will be added in Anko 0.9.\n. onComplete() is added: https://github.com/Kotlin/anko/commit/f0b6ee5e81b4f54ab163ccb95c5ed30b6da3f012.\n. exceptionHandler parameter was added to async() functions.\n. @kingsleyadio Sure, you can just not to use the exceptionHandler functionality.\nexec() function is interesting, but I think it's completely irrelevant to AnkoAsyncContext. You can actually use it in cases like: exec { string.toInt() }.value, converting the \"dangerous\" function call into a nullable result.\nI like the exec() function, though the name is too general. How about attempt()?\n. setMarginEnd is only available since Android API 17.. @matthewdias What version of Anko do you use?\n. This bug was fixed in Anko 0.9, please see #76.\n. @matoushybl About making Bundle from pairs, please see the bundleOf() function (https://github.com/Kotlin/anko/blob/2af6ff83d414f78f3f5195c98b7785f29444fcd9/anko/library/static/common/src/ContextUtils.kt#L78).\n. Because Anko DSL is just code in Kotlin, the build is required before the preview can be shown.\nTry to use incremental compilation in Gradle (available in Kotlin 1.0.2), it works much faster with it. \ud83d\udc4d\n. @Adambl4 Can you provide a code fragment?\n. See also #314.. @Hesamedin Unfortunately, DSL Preview plugin is not available for AS 2.2 yet, sorry. We will try to fix this as early as possible, but for now the only possible way is to use AS 2.1 or IntelliJ IDEA.\n. See also #314.. Yes, sure.\n. @BryanJBryce Snackbar extensions will be added in Anko 0.10.. Looks like this is a well-known problem and it's unrelated to Anko:\nhttp://stackoverflow.com/questions/34631818/leakcanary-report-leak-in-inputmethodmanager.\nhttps://code.google.com/p/android/issues/detail?id=34731\n. All other RelativeLayout helpers are defined twice for View and id.\nkotlin\ninline fun LayoutParams.topOf(view: View): Unit = addRule(ABOVE, view.id)\n...\ninline fun LayoutParams.topOf(id: Int): Unit = addRule(ABOVE, id)\nI think it's better to add not only baselineOf(view: View), but also baselineOf(id: Int).\n. The build() method is added to the new AlertBuilder interface.. So I think the issue can be closed? :)\n. getSystem() returns \n\na global shared Resources object that provides access to only system resources (no application resources), and is not configured for the current screen (can not use dimension units, does not change based on orientation, etc),\n\nso it is very questionable if it can be used.\n. Here we create a new instance of DipsContext each time we want to write something like 8.dip, and it looks like nothing but a memory waste.\nIn theory, such extension properties can be added to AnkoContext, in which we have access to the Context instance.\nIs the 8.dip syntax significantly better than the dip(8)? The latter couldn't be deprecated anyway (AnkoContext is not available everywhere), so we would have two different syntaxes for doing exactly the same. As for me it smells.\n. The bug is fixed in 0.10: all block functions that accept a theme parameter are now renamed to \"themed\u2026()\" (e.g. themedImageButton()).. Fixed.\n. Fixed. Thank you!\n. Will be fixed in 0.10.. Anko officially supports Android SDK starting from the version 15.\n. It's better to extract the lambda to some private-in-file variable to avoid creating 4 separate function objects.\n. Solution: do not generate TextView.enabled.\n. Change the code to button().lparams { } and set the columnSpec inside the lambda.\n. See also #314.. Merged. Thank you!. Please check Extending Anko.. Fixed in ccb672a5e399203d1aa990000e0e235fa72e4609.. The erroneous lparams() from the RelativeView is now forbidden by DslMarker annotation.\nThe problem now is the lack of lparams() inside the CardView.. Unfortunately, RelativeLayout does not provide the functionality. Maybe it can be solved with some custom layout (RelativeLayout fork?).\nAnyway, I opened the new issue (#270) about throwing Exceptions on using leftOf(), rightOf(), ... functions on views without the id being set.. Exceptions are logged by default:\nkotlin\nprivate val crashLogger = { throwable : Throwable -> throwable.printStackTrace() }\nYou can also specify the custom error handler:\nkotlin\ndoAsync(exceptionHandler = { e -> reportException(e) }) {\n    // Your asynchronous code\n}. Also, you can use the kotlinx.coroutines library so you can set the completion handler:\nkotlin\nlaunch { /* ... */ }.invokeOnCompletion { e ->\n    // Handle an exception\n}. See also #314.. On the desktop JDK, an iterator initiating is very cheap, and for the numerous reasons using indices is considered a bad practice. But Android is another story: its virtual machine is not smart enough to optimize the code with iterators, so it's quite common to iterate with the index variable.. setBackground(Drawable) is available since API level 16. Anko currently supports API level 15.. Probably relevant: #361.. Please use isClickable = true.. Thank you for the fast report! Fixed.. As JCenter publishing is fixed now, the pull request becomes obsolete.\nAnyway, thank you for the contribution!. See also #313.. I can't reproduce the bug (Kotlin 1.0.5-2 or 1.1-rc-86 from https://bintray.com/kotlin/kotlin-dev, Gradle 2.14.1, Android Gradle plugin 2.2.1). Can you provide some more information about your Gradle setup?. This sounds like an error in kotlinc. If you are still able to reproduce the issue, can you please share the example project?. The issue is closed because of no response. Please file the new issue if the problem still exists.. Fixed in ccb672a5e399203d1aa990000e0e235fa72e4609.. The files you changed are auto-generated and will be changed next time the generator will be executed.\nBy the way, _BottomNavigationView is generated after the support libraries update. It will be available in 0.10, so I think this pull request may be closed.\nAnyway, thank you for the contribution!. master branch migrated to Kotlin 1.1, supporting the @DslMarker annotation, so this issue may be closed as \"fixed\".\nIssue relevant to the coroutines support: #327. Duplicate of #361.. Fixed manually in cd2b30d0dc54ff8998a1c3a2159967515ac45498 due to the merge conflicts.\nAnyway, thank you!. Please share the code so we can look that is going wrong.. The issue is closed because of no response. Please file the new issue if the problem still exists.. See also #313.. Does it have something to do with Anko?. Can you share the sample project then?. The issue is closed because of no response. Please file the new issue if the problem still exists.. Bintray support fixed the problem with the syncing so the issue is fixed.. Anko DSL Preview plugin is rewritten in order to support Android Studio 2.4.\nThe updated plugin will be released with the upcoming Anko 0.10.. @Miha-x64 This would be quite difficult to implement. By the way, here's the feature request about supporting custom View classes: https://github.com/Kotlin/anko/issues/116.. The first parameter in the button() function is theme. Please change your code to button(text = R.string.login).\nIt will be changed in Anko 0.10, though (the button() function that accepts the theme parameter will be renamed to themedButton()).. Fixed in a2f55e63431eec358d951f587e333e9359ce11d7.. Ideally, selector function should be generic and return the selected item to the handler.. @adelnizamutdinov Yes, of course. If any part of Anko will become significantly huge, it will be moved to the separate JAR.\nBy the way, 'kotlinx.coroutines' provide decent \"promise\" support so this issue may be closed.. It would be a completely new DSL with much more complicated wrappers. If even JetBrains will create the reactive Android UI framework someday, most likely it will have the different name.. Duplicate of #311.. Fixed in a2f55e63431eec358d951f587e333e9359ce11d7.. There are already such methods in Views.kt: https://github.com/Kotlin/anko/blob/master/anko/library/generated/sdk15/src/Views.kt#L1008.\nWhat are you trying to achieve by this? Also, $$Anko$Factories$Sdk15View identifier won't work for platform artifacts other than anko-sdk15.. Top-level DSL blocks are only generated for containers (like LinearLayout or FrameLayout). Block functions are not generated for the ordinary views to keep the JAR size and method count small.\nIn order to use DSL blocks, you can create an AnkoContext.\nI also updated the documentation in Wiki.. What is the receiver? The compiler says the receiver should be Context, Fragment or AnkoContext (e.g. context.intentFor<MyBroadcastReceiver>()).. Duplicate of #311.. Thank you for the contribution!. Thank you for the contribution!. The AlertDialogBuilder class is deprecated.\nAlertBuilder interface, which is designed to support both native and support versions of alerts, already has the build() method.. It's not available yet (will be in 0.10).. @eygraber Anko snapshots are not published now.. That might be a bug in the Kotlin plugin (it ignores source jars for the Kotlin libraries).\nPlease try if you can navigate to sources for some other Kotlin library. If no, please file an issue to the Kotlin YouTrack: http://youtrack.jetbrains.com/. Duplicate of #205.. Thank you for the contribution!. http://stackoverflow.com/questions/11554078/set-textcursordrawable-programmatically. Merged. Thank you!. There are helpers for startActivityForResult. They support Activity or Fragment receivers:\nhttps://github.com/Kotlin/anko/blob/master/anko/library/static/common/src/Intents.kt#L41. In what cases do you want to delay the dialog displaying?. You can just write a custom try/finally block inside doAsync {}.. Merged. Thank you!. setTextAppearance() looks nice.\nBy the way, is there need in horizontalLayout {}? It already exists and is called linearLayout {}.. Merged. Thank you!. Merged. Thank you!. @MiguelAngelLV This is a completely valid point, and I overlooked it. Will revert this commit. Thank you!. I don't know about such plugins. Moreover, not all XML layouts may be converted to Anko DSL as is, and it would be the hard job to make a converter that will work in 100% cases.. This is as designed, see https://github.com/Kotlin/anko/issues/104#issuecomment-155486633 for more information.. It will work again very soon, so the new plugin is hardly needed.. Can you please attach the complete stack trace?. I can't find the setForeground() method for FrameLayout here: https://developer.android.com/reference/android/widget/FrameLayout.html.. Turns out you're not the first who asks this question :) https://github.com/Kotlin/anko/issues/220. This was intentional :)\nThe non-DSL part is now called \"Anko Commons\".\nanko-common artifact is still available in 0.10.0, but it is deprecated and will be eventually removed.. Please test anko-ide-plugin.zip from this: https://teamcity.jetbrains.com/viewLog.html?buildId=1067204&tab=artifacts&buildTypeId=ProjectsWrittenInKotlin_Anko\nThe bug was fixed in Anko 0.10.. @deviant-studio The preview is only available to AnkoComponent classes with the zero-parameter constructor. Add a default value to that parameter or add some another constructor.\nThe exception shown, though, is a bug. I will investigate this shortly.. @deviant-studio You mean that the preview pops up on unrelated classes even if it was hidden? Or you mean it is not hidden automatically?. @deviant-studio Well, in case of the XML layout, the XML file being shown is a complete declaration. In case of DSL, any other files may potentially contain significant portions of the layout, so the preview tool window is not hidden automatically.\nBut if you still think it is a user-experience issue, please create a ticket with this. Maybe some preference may be added later.. As the DSL layout is Kotlin code, the project build is required in order to get the updated preview.\nAfter the code modification, press Ctrl+F9 (or Cmd+F9 on Mac) and the updated preview will be shown after the successful build.. Thank you for the contribution!. Merged. Thank you!. I don't think the versions in Maven and in Releases must be literally the same. You can see the list of actual Maven versions in BinTray: https://bintray.com/jetbrains/anko/anko. Fixed. Thank you!. There's a brief artifact list in the README: https://github.com/Kotlin/anko#gradle-based-project. What kind of the details do you need?\ncommon is the old name of the commons artifact. The name change is described in the changelog (https://github.com/Kotlin/anko/releases/tag/v0.10).. CoordinatorLayout is a part of the design support library.\nPlease add compile \"org.jetbrains.anko:anko-design:$anko_version\" to your project dependencies (https://github.com/Kotlin/anko#gradle-based-project).. Relevant issue in Kotlin issue tracker: https://youtrack.jetbrains.com/issue/KT-18103. Can you please share the exception stacktrace?. Merged.\nThank you for the contribution!. \ud83d\udc4d \nBy the way, what about makeGone(), makeVisible(), makeInvisible()?. You should always write\nkotlin\nverticalLayout {\n    // code\n}.lparams { ... }\nThe other ways may be bug-prone. For example, by writing this:\nkotlin\nverticalLayout {\n    lparams { ... }\n}\nyou actually say \"I want to put the newly created verticalLayout into another LinearLayout\". If you put it to some other layout, you'll get a runtime exception.. What Android Studio version do you use?. 1. Yes. Anko is a single Gradle project.\n2. Yes, because it downloads the fixed versions of Android platforms and IDE. You can link the dependencies/android-sdk, though it requires some additional manipulations.\n3. I think you will need IntelliJ (Community edition is OK). I didn't try to import the Anko project into Android Studio, but I afraid the project structure is quite complicated for it.. Can you please show the class that you want to preview (or at least its part)?\nIs the error stable, or it goes away after the re-importing (or building) the project?. Anko Support plugin is now only supported in Android Studio Preview 2.4/3.0.. \n. extendable \u2192 extensible\n. if (tag.length() <= 23) {\n. } else {\n. 0, 23\n. get() {\n. ",
    "aplavin": "I also tried to subclass the ArrayAdapter:\nlistView {\n            adapter = object : ArrayAdapter<String>(ctx, 0, listOf(\"a\", \"b\")) {\n                override fun getView(position: Int, convertView: View?, parent: ViewGroup): View? {\n                    val view = with(parent) {\n                        textView {\n                            text = \"abc\"\n                        }\n                    }\n                    return view\n                }\n            }\n        }\nHowever, this raises an exception: addView(View) is not supported in AdapterView. As I understand it's because the DSL calls addView on parent after creating the view.\n. ",
    "pasniak": "the link to Koan does not work. ",
    "colriot": "Welcome!\n. Aha! Well, if you don't mind, I'll create CHANGELOG.md based on Releases page. It's common practice and it's independent from GitHub.\n. Woops. Missed that.\n. ",
    "sirinath": "At least iOS\n. ",
    "polenchheang": "I get your idea, thanks you!\n. ",
    "evant": "Would be nice if there was a little sugar around this, as it can get a bit verbose for more configuration combinations. I really like android's resource selection in this regard. Could you create something like this (bikesheading on the syntax, I haven't thought too much about it)\nkotlin\nconfigurations {\n  on(\"land\") {\n    textView(\"Landscape\")\n  }\n  on(\"sw600dp-v17\") {\n    textView(\"On api 17+ tablets\")\n  }\n}\nand it would pick the best one based on the same algorithm as described here.\n. you could do something like on(orientaion = LANDSCAPE) or on(sw = dip(600), version = 17) instead if you want more type safety, you have a trade off of a bit of verboseness though.\n. I actually have an implementation of the resource selection algorithm if that would help things. It works directly on the qualifier strings instead of a collection of qualifiers, so it would have to be modified a bit if you want to go with the more typesafe route (which the more I think about it, the more I like as well)\nhttps://github.com/willowtreeapps/resPeeker/blob/master/resPeeker-idea/src/com/willowtreeapps/respeeker/idea/res/ResourceFinder.java\n. ",
    "EddieRingle": "I really like @evant's proposal. I particularly don't have an issue with the extra verbosity of the type-safe configuration parameters; in fact, I think I prefer them to strings.\n. @yanex This can probably be closed now that the configuration DSL is in, right?\n. You would use the android.animation APIs like you would with any other view. Anko doesn't provide a DSL for animations.\n. @yanex I thought it was odd that View.isEnabled() was being forgotten only for TextView. This PR re-enables accessing that through the enabled property. Was there a particular reason it was excluded for TextView in the first place?\n. @yanex Are you interested in adding support for these libraries into Anko?\n. Thanks for creating Anko!\n\nAlso, although AbsoluteLayout is deprecated, it is the part of Android SDK (and, probably, is used by someone cause of its uniqueness), so its support should not be dropped.\n\nThere's no reason to use AbsoluteLayout. Instead you can use a FrameLayout and the translationX and translationY properties.\nRegardless, if Anko can still generate helpers for it, you're right, it might as well be included.\n\nlayoutParams() functions don't make much sense for some widgets (e.g. ZoomControls), so _Layout classes should not be generated. Please tell me if I am wrong.\n\nI agree. It looks like your change successfully avoids generating classes for these widgets by checking to see if the node contains a LayoutParams InnerClassNode. However, this fails to generate classes for some widgets that do intend to have child views, such as GestureOverlayView or ImageSwitcher.\nIn ImageSwitcher's case, I thought it was odd since Anko was generating a _TextSwitcher class, which is also a subclass of ViewSwitcher like ImageSwitcher is. I added some debugging output and found that TextSwitcher's innerClasses field contains a ViewGroup$LayoutParams node while ImageSwitcher's does not. I was confused at first, but I believe this is due to the fact that in the source for these views, TextSwitcher references ViewGroup$LayoutParams (in an overridden addView method) while ImageSwitcher does not, so ASM does not include it in the innerClasses field.\nI don't know of another way to gather more information about these views to determine whether or not custom _Layout classes should be generated. There exists a android.annotation.Widget annotation, but among other issues it is a source-level-only annotation and so isn't available when scanning the compiled android.jar classes.\nPerhaps we need to add another file to dsl/props to specify which widgets should be excluded from _Layout class generation, or do the opposite and skip the innerClass check if the class passed to extractLayoutParams() exists in the prop file. What do you think, @yanex?\n. Ah, that works! I didn't even consider external annotations as an option. You can close this now if you'd like, I think you've already implemented everything else.\n. @yanex I did this in an application I was working on, but being paranoid about id collisions I ended up sticking to defining IDs in an XML resource instead. I was hoping Kotlin had some sort of sugar for this akin to Ruby Symbols.\n. @schwiz That's very similar to the generator I wrote.\nI'm not worried about colliding with IDs from the same generator, but more paranoid about colliding with IDs generated from XML resources. Of course, I use the term \"paranoid\" because the integers generated in the R class begin at 0x7f000000 and my worrying about colliding with those IDs is crazy. :)\nStill, it'd be nice if this was baked into the language runtime (again, like Ruby symbols).\n. @schwiz I know. I'm more or less just complaining that Kotlin doesn't have sugar for this, that's all. :)\n. I like this approach as well. The DSL generator could scan for classes extending ViewGroup.LayoutParams and aggregate the fields it finds. It's shame to lose proper type safety, but this is a shortcoming of Kotlin, I suppose. To remedy this somewhat, I believe Lint checks could also be added to warn you if you're using layout properties that are useless for a given parent type.\n. ",
    "KosratDAhmad": "The last part of the question is not solved \n\nFinally, startActivity is defined for Activity and android.app.Fragment but not for android.support.v4.app.Fragment. \n",
    "4u7": "Contributions are welcome!. Looks like this pull request is obsolete now. Thanks for the contribution!. Looks like this issue is obsolete and may be closed. Fixed with 570f9dbbbd40e8c28bc2e33e52c65a1d80fef335. Closing since it's unfinished and haven't got any attention for a log time. Fixed with 7c64c4bd9951de333277db947e3815ce268a1d1e. Fixed with 1b5653cdb9648ebc316aeeb13179ebddfd91d4fa. Obsolete since Anko already has BottomNavigationView. Fixed with a9fb4771c4ac8a211839bdb9174bf967595a36aa. Thank you for contribution! Sorry for late response. Thanks for the contribution!. Thanks for the contribution, but this should be done by anko generator! Fixed with 7c64c4bd9951de333277db947e3815ce268a1d1e. Try Anko 0.10.2, fixed with a9fb477. Fixed with a9fb477. Fixed in 0.10.2 with c685e07256673f144d788c51865c6a42e13da120. Take a look https://github.com/JetBrains/kotlinconf-app/blob/master/android/app/src/main/java/com/jetbrains/kotlinconf/ui/SessionListFragment.kt#L99. Fixed with c685e07256673f144d788c51865c6a42e13da120. https://github.com/Kotlin/anko/blob/master/anko/library/static/commons/src/dialogs/Selectors.kt\nhttps://github.com/Kotlin/anko/blob/master/anko/library/static/commons/src/dialogs/Dialogs.kt. Thanks for the contribution and sorry for late response. You should never change files in generated folder. They'll be overwritten on the next generator run. If you run ./gradlew dist after your changes you will see generator error. \nYou should add your extensions to static/appcompatV7\n. Thanks for the contribution and sorry for late response. You should never change files in generated folder. They'll be overwritten on the next generator run. If you run ./gradlew dist after your changes you will see generator error.\nProbably this should be done by modifying generator. Fixed with bebbc8ae71063502005a95c4a306cf792998bde4. Thanks for the contribution!. Thanks for the contribution!. Thanks for the contribution!. Thanks for the contribution!. Fixed with a9fb4771c4ac8a211839bdb9174bf967595a36aa. Fixed with c685e07256673f144d788c51865c6a42e13da120. There is formatting broken in your code, mixed tabs and spaces and missing spaces after : before parameter types. Could you reformat it, please? (there is reformat action in idea)\nOtherwise, looks good to me.. Why have you closed it? i would like to merge it. Thank you for contribution!. @xilingit Take a look  https://github.com/JetBrains/kotlinconf-app/tree/master/android. @raveeshtech This may help you https://github.com/JetBrains/kotlinconf-app/tree/master/android. Fixed with a9fb477. @mrp14 Thank you for contribution!. Thanks for the contribution!. Thanks for the contribution!\nFailed to build, ./gradlew dist fails with this:\nException in thread \"main\" java.io.FileNotFoundException: dependencies/android-sdk/extras/m2repository/com/android/support/constraint/constraint-layout/1.1.0-beta3/constraint-layout-1.1.0-beta3.aar (No such file or directory)\n. Merged manually. Thanks for contribution!\nWhy not to use constants instead of int literals?\nAnd I think those methods should be annotated with @RequiresApi(Build.VERSION_CODES.JELLY_BEAN_MR1)\n. Thank you!. What problem do you have using if conditions and loops with Anko? You can use any Kotlin feature with Anko.. We have pretty good docs about Kotlin https://kotlinlang.org/docs/reference/control-flow.html. You can use everything you find there with Anko. Anko DSL is just Kotlin code.. @yaosongqwe Could you post stacktrace of the exception?. I don't think it is possible now, since toast functions don't return toast object. But it could be fixed easily. Contributions are welcome!. Any logged exceptions? . @DFreds Could you please post stacktrace? It should be available via red icon in bottom-right corner after exception happened.. This issue is related to Kotlin 1.1.6+, fixed plugin will be published soon . exception fixed with 3367ad5cda1a510514012ddd12c7ad052ed9f9e6. Preview should work normally with upcoming AS 3.1 Canary 5 update, otherwise feel free to reopen.. Fixed in 0.10.3, will be released soon. Thanks for the contribution!. Thanks for the contribution!. Thanks for the contribution! If you run ./gradlew dist you will see that SupportDialogs.kt doesn't compile, please fix those errors. Otherwise looks good to me!. Please try plugin 0.10.3. I'm not sure what are you trying to achieve, but i think you need to set scrollFlags for toolbar. Something like scrollFlags = SCROLL_FLAG_SCROLL or SCROLL_FLAG_ENTER_ALWAYS. Some examples of CoordinatorLayout with Anko: #1 #2 #3. There are some inconsistencies in xml and programmatically created layouts. In this case when AppBarLayout.LayoutParams is created from xml  scrollFlags is initialised with 0. When you create it programmatically it is initialised with SCROLL_FLAG_SCROLL. It's a bug in design library.. Thanks for the contribution!. Thanks for the contribution!. Thanks for the contribution!. Could you try this hotfix build? (Click \"Login as guest\")\nhttps://teamcity.jetbrains.com/repository/download/ProjectsWrittenInKotlin_Anko/1288995:id/anko-ide-plugin.zip. Make sure that you have the $ANKO_VERSION settled in your gradle file at the project level:\next.ANKO_VERSION = '0.10.4'\n. Could you try this hotfix build? (Click \"Login as guest\")\nhttps://teamcity.jetbrains.com/repository/download/ProjectsWrittenInKotlin_Anko/1288995:id/anko-ide-plugin.zip. Could you try this hotfix build? (Click \"Login as guest\")\nhttps://teamcity.jetbrains.com/repository/download/ProjectsWrittenInKotlin_Anko/1288995:id/anko-ide-plugin.zip. It is in org.jetbrains.anko:anko-support-v4-commons. Sorry for late response. I like the idea but to merge this we need to have some tests. To see usage examples and make sure it works properly. If you would like to finish it you may take a look at this test\nhttps://github.com/Kotlin/anko/blob/master/anko/library/robolectricTests/src/test/java/AnkoSQliteTest.kt. Closing this for now, but if you would like to finish it feel free to reopen. It should be something like this\nsearch.setOnQueryTextListener(object : SearchView.OnQueryTextListener {\n    override fun onQueryTextSubmit(query: String): Boolean {\n            Log.i(TAG,\"Press querysubmit\")\n            return false\n    }\n    override fun onQueryTextChange(newText: String): Boolean {\n            Log.i(TAG,\"Press querytextchange\")\n            return true\n    }\n}). Thanks for the contribution!. Thanks for the contribution!. Unfortunately anko preview supports only AnkoComponents. https://github.com/Kotlin/anko/wiki/Anko-Layouts#ankocomponent . I think previous version is also ok. Added note to the wiki page. I like the idea but your function looks a bit odd. May be it would be better if it was extension function Intent.isSafeToInvoke(): Boolean ? Also name could be even more descriptive if you have ideas. Thanks for the contribution!. It will be released in 0.10.5. There is no async in anko, it is part of coroutines library and used to create new coroutine. doAsync is part of anko-commons and is used to execute task on background thread.\n. Try to use AUTOINCREMENT without UNIQUE, i think they are mutually exclusive. Yes, most of anko-commons will be deprecated at some point in favor of Android KTX. Probably closer to Android KTX release. If you wish to mark something already present in Android KTX with @Deprecated feel free to send pull request.. Thanks for the contribution!. Maybe we should split commons into smaller parts, but I think we'll deprecate most of it in favor of android ktx anyways.. Could you please revert:\n- changes under generated/\n- useCursor -> use changes in sqlite\n- dropped tests\n- forEachWithIndex deprecation for List, as i recall compiler can\u2019t optimise foreach for list\nAnd i'll be able to merge this =)\n. Thank you!. Fixed in 0.10.5-2. @jeancharles-roger Looks like KotlinTypeMapper has been changed several times. What version of Kotlin plugin do you have installed?. Published Anko preview 0.10.7 with the fix. Yes, my bad, didn't realise that. I believe that breaking existing codebase to fix minor styling issue is not a good thing. You may try to use @JvmName to change signature of new function. Could you rebase on current master, please?. You should use 0.10.5 version number, -2 suffix is plugin hotfix. Are you sure it is an exception? As you may see in the provided code all exceptions from close are being eaten.. I think it should, feel free to send pull request. Thanks for the contribution!. I think having those for View is unnecessary and feels like overkill. Why context extensions is not enough?. Thanks for the contribution!. Maybe make title nullable with default value null and remove if-empty check?. Thanks for the contribution!. When you create new project in Android Studio 3.2, API 15 is selected by default and it says: \"By targeting API 15 and later, your app will run on 100%** of devices\"\n. Merged manually. @ittianyu I've pushed Android Studio run configuration\nc338731784926bb4f6961f550c7626cc26e15460. You should never edit files under library/generated/.. manually. They are autogenerated. If there is something wrong with them generator should be patched instead.. Tests are still useful even if they test deprecated stuff. I believe we shouldn't deprecate extension function because of receiver type. It's not our responsibility to deprecate Fragment.. It is worth to mention that FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET is deprecated since API 21. In API 15 Cursor doesn't implement Closable so this method makes sense since Anko supports API 15. What is wrong with buildSpanned ?. This method makes sense, since it doesn't allocate iterator. It may be useful in allocation critical places like onDraw() methods. Same ^^^. This (and all other forEach methods here) makes sense since it doesn't allocate iterator. It may be useful in allocation critical places like onDraw() methods. This differs from Array version which is optimised by Kotlin compiler.. This will throw on API 15 device. Semantics is changed here, previously this method would throw if no view is found. We shouldn't deprecate methods because of it's receiver. It isn't our responsibility but Android SDK's. Semantics is changed here, previously find would throw if no view is found. This method is usable because in API 15 Cursor doesn't implement Closable. This method is useful because it doesn't allocate iterator. It may be useful in OnDraw methods where allocations are undesirable. It is true for all forEaches except forEachByIndex for Array since Kotlin foreach is optimised by compiler to the same bytecode.. Sounds reasonable, so let's mention that Fragment is deprecated in Android SDK since API 28.. https://developer.android.com/guide/topics/ui/dialogs. Why written is not good enough here?. ",
    "sfunke": "Inspired by the default Anko textView extension methods, and after doing some research on how to set a theme to a view by code, I came up with the following extension methods, which work very well so far (can be applied to any view class):\n```\npublic inline fun ViewManager.textView(text: CharSequence?, styleRes: Int = 0, init: TextView.() -> Unit): TextView {\n    return ankoView({ if (styleRes == 0) TextView(it) else TextView(ContextThemeWrapper(it, styleRes), null, 0) }) {\n        init()\n        setText(text)\n    }\n}\npublic fun ViewManager.textView(text: CharSequence?, styleRes: Int = 0): TextView = textView(text, styleRes) {}\n```\nKey is, you have to use ContextThemeWrapper, and the 3 argument constructor of the passed view, see this link: http://stackoverflow.com/a/28613069/1128600\nThat allows to pass an XML style, and have it fully applied to the newly created view (not comparable to the crappy setTextAppearance method)\n@yanex Would it make sense to consider this for potential adoption into the standard library?\n. ",
    "dennislysenko": "@sfunke, does this only work for styling the text in a TextView, or is it generalized to applying any style resource to any view (including things like padding, backgrounds, borders, etc.?)\n. Nevermind. I created this shim:\n```\npublic inline fun ViewManager.styledButton(text: CharSequence?, styleRes: Int = 0, init: Button.() -> Unit): Button {\n    return ankoView({ if (styleRes == 0) Button(it) else Button(ContextThemeWrapper(it, styleRes), null, 0) }) {\n        init()\n        setText(text)\n    }\n}\npublic fun ViewManager.styledButton(text: CharSequence?, styleRes: Int = 0): Button = styledButton(text, styleRes) {}\n```\nWorks perfectly, I just call styledButton(\"text\", R.style.MyStyle). Thanks @sfunke!\n. +1, I still get this error with Kotlin version 1.0.0-beta-3594, gradle 2.8, and the following anko dependencies in build.gradle:\ncompile 'org.jetbrains.anko:anko-sdk15:0.8'\ncompile 'org.jetbrains.anko:anko-appcompat-v7:0.8' // For appcompat-v7 bindings\nThe dontwarn silenced this error, but I'd still like to see an official response if possible.\n. ",
    "BennyWang": "@sfunke I think \npublic inline fun ViewManager.AnyView(theme: Int = 0, init: TextView.() -> Unit): AnyView\nis enough. \n. @fboldog +1\n. ..\n. I update IDEA to 15, then the exception gone\n. sorry style is a generic function like this, style, so you can styling any View\n. +1\n. Add you item view to relativelayout with item view width matchparent\n. ",
    "fboldog": "https://github.com/Kotlin/anko/issues/143\n;)\n. conflict fixed :) hoping for merge.\n. PR updated to solve actual conflicts.\n. And @AttrRes for all attribute extensions. Finally. Thanks! :). You can use View.generateViewId() to create unique ids.\nhttps://github.com/fboldog/AnkoMaterialSamples/blob/master/src/main/kotlin/com/ferencboldog/ankomaterial/extensions/AnkoViewCompat.kt\nAfter this, you can use this ids in your test code, like this:\nval list = activity.find(ReferenceToYour.VIEW_ID)\nor this: https://github.com/fboldog/AnkoMaterialSamples/blob/master/src/main/kotlin/com/ferencboldog/ankomaterial/launcher/ui/LauncherComponent.kt\nFYI: if you would like test android-23 targets, you need build roboelectric from source and if you run similar error: \ne: /Volumes/REPOS/own/AnkoMaterialSamples/src/test/kotlin/com/ferencboldog/ankomaterial/ExampleRobolectricTest.kt: (28, 9): org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Error type encountered: ('[ERROR : Unresolved java classifier: Path]'..'[ERROR : Unresolved java classifier: Path]?') (DelegatingFlexibleType).\nCause: Error type encountered: ('[ERROR : Unresolved java classifier: Path]'..'[ERROR : Unresolved java classifier: Path]?') (DelegatingFlexibleType).\nFile being compiled and position: (28,9) in /Volumes/REPOS/own/AnkoMaterialSamples/src/test/kotlin/com/ferencboldog/ankomaterial/ExampleRobolectricTest.kt\nPsiElement: assertThat(list)\nThe root cause was thrown at: JetTypeMapper.java:436\nchange your kotlin version to 1.0.2-eap-15 or newer (maven repository: https://dl.bintray.com/kotlin/kotlin-eap)\nI will publish working roboelectric test code to AnkoMaterialSamples later today.\n. This call only works with android.support.v7.view.ContextThemeWrapper because in system framework base ContextThemeWrapper is hide this call and the existence of getThemeResId not guaranteed.\n. Yes, clone, build, import into your project. ;)\n. Could you provide a simplified example (xml vs anko)? \n. This is the correct behaviour because view must have id if you would like use in this case.\nRelated code:\nhttps://github.com/Kotlin/anko/blob/master/anko/library/static/common/src/RelativeLayoutLayoutParamsHelpers.kt#L43\n. related #206 \n. ",
    "simophin": "Is there any way to set style? So now you can set theme for each widget, like AppTheme, AppTheme.Light, but what if you need to set individual styles, eg. Widget.Button, Widget.Button.Colored?\n. ",
    "gregschlom": "@simophin depends on what version you're targeting. on API 21+, Google added a 4th parameter to all Views constructors allowing you to set the style resource: https://developer.android.com/reference/android/view/View.html#View(android.content.Context,%20android.util.AttributeSet,%20int,%20int)\nSo if you're only targeting devices running 21+, it's easy to make custom Anko views calling that constructor. If you want to target devices running below 21, you're out of luck. There's no (easy) way to set the style programmatically because it's all private APIs used by the XML layout inflater. \nWhat we ended up doing was to create very small XML layout files containing just <Button style=\"@style/WhiteButton\" /> and then instantiating that layout with Anko's include<Button>(R.layout.white_button)\n. Note that using lateinit var deviceNameInput: EditText might be more convenient\n. I think the easiest way is to assign an id to your toolbar, and set the action bar in onCreate(), like this:\nIn res/values/ids.xml\n<resources>\n        <item name=\"toolbar\" type=\"id\"/>\n    </resources>\nIn your MainActivity class:\n```\n    onCreate(...) {\n        super.onCreate(...)\n        setSupportActionBar(findOptional(R.id.toolbar))\n    }\ntoolbar {\n    title = \"Mist Player\"\n    id = R.id.toolbar\n}\n\n```\n. ",
    "mvysny": "Works great, thanks! If you wish to resolve attr value from Activity theme to style resource, just use this code:\n```\nval View.contextThemeWrapper: ContextThemeWrapper\nget() = context.contextThemeWrapper\nval Context.contextThemeWrapper: ContextThemeWrapper\nget() = when (this) {\n    is ContextThemeWrapper -> this\n    is ContextWrapper -> baseContext.contextThemeWrapper\n    else -> throw IllegalStateException(\"Context is not an Activity, can't get theme: $this\")\n}\n@StyleRes\nfun View.attrStyle(@AttrRes attrColor: Int): Int = contextThemeWrapper.attrStyle(attrColor)\n@StyleRes\nprivate fun ContextThemeWrapper.attrStyle(@AttrRes attrRes: Int): Int =\n        attr(attrRes) {\n            it.getResourceId(0, 0)\n        }\nprivate fun  ContextThemeWrapper.attr(@AttrRes attrRes: Int, block: (TypedArray)->R): R {\n    val typedValue = TypedValue();\n    if (!theme.resolveAttribute(attrRes, typedValue, true)) throw IllegalArgumentException(\"$attrRes is not resolvable\")\n    val a = obtainStyledAttributes(typedValue.data, intArrayOf(attrRes));\n    val result = block(a)\n    a.recycle()\n    return result\n}\n```\nthen,\ntextView(attrStyle(R.attr.my_title)) {\n}\n. This would be immensely helpful, for a couple of reasons, when you have to extend View instead of implementing AnkoComponent:\n\nWhen one needs to override a method of a View\nIt is sometimes handy for a View to have to implement some kind of an interface. This is impossible to achieve with AnkoComponent when AnkoComponents are nested in a view tree - the AnkoComponent instance is often lost and forget after it produced the View.\nIt's not possible to inflate AnkoComponent from layout.xml. Inflating from layout.xml is immensely helpful when gradually converting the UI.\nIt's arguably easier to work with a View (since there's just one instance of View - this so you can add utility methods directly to the View's extender) than with AnkoComponent (since that's a factory producing Views, often one has to rely that the createView has been called only once, to e.g. add utility methods which modify the views).\n. Working great, thank you. What I'm missing though is the @StyleRes annotation on the theme parameter. This would warn user not to use the R.attr.* values by mistake.\n. I don't understand: the getThemeResId() function is not part of Android API, regardless of the SDK API version. Yet, ContextThemeWrapper in support library is also marked as \"@hide\", so I guess there is no way to detect the current Theme. Android is really not that open as I thought before.. I'm using the following theme for the activity: Theme.AppCompat.Light.DarkActionBar. Just got another one, similar:\nCaused by java.lang.RuntimeException: Failed to resolve attribute at index 96\n       at android.content.res.TypedArray.getColor(TypedArray.java:401)\n       at android.widget.TextView.<init>(TextView.java:717)\n       at android.widget.TextView.<init>(TextView.java:648)\n       at android.widget.TextView.<init>(TextView.java:644)\n       at android.widget.TextView.<init>(TextView.java:640)\n       at org.jetbrains.anko.$$Anko$Factories$Sdk15View$TEXT_VIEW$1.invoke(Views.kt:52)\n       at org.jetbrains.anko.$$Anko$Factories$Sdk15View$TEXT_VIEW$1.invoke(Views.kt:13)\nThis happened on ASUS_Z00ED Android 5.0.2, when trying to use                 streamName = textView(R.style.TextAppearance_AppCompat_Title_Inverse) { ... }. The activity extends AppCompatActivity and should have the following theme Theme.AppCompat.Light.DarkActionBar. It seems that Android inflater contains some patches regarding this that Anko can't possibly contain, so I'll avoid using broken Android theming from now on.. Also reproducible with Anko 0.9.1a:\n\njava.util.NoSuchElementException\nat org.jetbrains.anko.ViewChildrenRecursiveSequence$RecursiveViewIterator.next(viewChildrenSequences.kt:129)\nat org.jetbrains.anko.ViewChildrenRecursiveSequence$RecursiveViewIterator.next(viewChildrenSequences.kt:123). Interestingly, the sources for anko-sdk15 0.9 are present just fine in my Android Studio. I'm really at loss as to what's happening here.. It seems that Android Studio also fails to download sources for Koi-0.5.4 as well; filed a bug against the Kotlin plugin: https://youtrack.jetbrains.com/issue/KT-17317\nThanks for help! Closing the bug since this is definitely not a bug in Anko, but rather probably in the Kotlin plugin.. Ah right, I was using Anko 0.10.6, 0.10.8 fixed the issue.. ",
    "hannesstruss": "Resolving the attr does not actually work in all cases. Example:\nbutton(\"My Button\", theme = attrStyle(R.attr.buttonBarButtonStyle))\nwill not apply the correct background, since the one-argument constructor of Button that Anko uses calls through to the three-argument constructor with a default value for int defStyleAttr which overrides the button background with the default.\nWhile working in some cases, the theme support of Anko 0.9 is not a full replacement for the style XML attribute. Can we reopen this issue?. This happens for the following reason:\n\nResolving the attr does not actually work in all cases. Example:\nbutton(\"My Button\", theme = attrStyle(R.attr.buttonBarButtonStyle))\nwill not apply the correct background, since the one-argument constructor of Button that Anko uses calls through to the three-argument constructor with a default value for int defStyleAttr which overrides the button background with the default.. \n",
    "ayinmursalin": "now you can use horizontalProgressBar { }\nso no need to set style horizontal to progressBar. ",
    "DavidYKay": "Update:\nI got this working by using an instance variable, like so:\n```\nvar nameBox: EditText? = null\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    relativeLayout {\n        verticalLayout {\n            val name = editText() {\n                id = nameId\n            }\n            nameBox = name\n        }\n        button(\"Register\") {\n            onClick {\n                toast(\"Hello, ${nameBox!!.text}!\")\n            }\n        }\n    }\n}\n```\n. Excellent. I'm a Kotlin newbie and was unaware of that. Thanks again and sorry for not reading the docs more closely!\n. Oops. this is a mistake. So sorry!\n. ",
    "yoavst": "better use var nameBox: EditText by Delgates.notNull()\n. can we have something like easy way to pass hardcoded attrs?\n. custom attrs :)\n. Hi, how do I get  android:layout_height=\"?attr/actionBarSize\" functionality? or any other attr?\n. https://github.com/yoavst/ohelshem/blob/master/app/src/main/res/layout/lesson_view.xml\nI want to make a recyclerView of those item. It is impossible currently since you cannot put layoutParams to the outside viewgroup.\n. Also, I've noticed that AnkoLogger.loggerTag is recalculated every time. Maybe it is better to switch to lazy delegate.\n. Because Intellij doesn't auto-import the extension method, since there is regular method with the same name.\n. +1\n. @yanex So what was the problem on the maven artifacts? for general knowledge.\n. ",
    "Pianco": "I've tried using a subclass of Fragment.\n. ",
    "schwiz": "Here is what I ended up doing for this...\n```\nfun Context.attribute(value : Int) : TypedValue {\n    var ret = TypedValue()\n    getTheme().resolveAttribute(value, ret, true)\n    return ret\n}\nfun Context.attrAsDimen(value : Int) : Int{\n    return TypedValue.complexToDimensionPixelSize(attribute(value).data, getResources().getDisplayMetrics())\n}\n//inside the DSL of an activity onCreate\n    val toolbar = toolbarSupport{\n        setTitle(\"hello\")\n        setElevationCompat(dip(4))\n        backgroundColor = attribute(R.attr.colorPrimary).data\n    }.layoutParams(width = org.jetbrains.anko.matchParent, height = attrAsDimen(net.schwiz.koat.R.attr.actionBarSize))\n```\n. Actionbar is deprecated support should not be added for it to this library. \n. I think the solution to the original question is to use View.inflate rather than the constructor, just make a layout file containing only a AppCompatEditText. \nAlternatively try using the include tag instead as a work around. \n. When will this be released to jcenter and what version will it be in?\n. These solutions all require a known id to be set and have the function call\noverhead of finding the view by that id. Also, without testing it looks like most of these solutions would return the parent of my layout rather than the root of my layout. \nKnowing the id wouldn't be horrible if we had some good syntax for generating a known id. ie @+id/ on the xml side.  Creating a val, assigning it, and holding onto it globally is a lot of work and kind of defeats the purpose of this library I think.  \nThe only reason I should ever need an id is when using something like RelativeLayout that requires it. In that case generating an id from kotlin is fine and easy because we can just say id = genId() and never need to know or care about what that id was.\nOn Jun 21, 2015 5:50 AM, \"Yan Zhulanow\" notifications@github.com wrote:\n\nYou can get a content View in Android.\nhttp://stackoverflow.com/questions/5273436/how-to-get-activitys-content-view\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/JetBrains/anko/issues/66#issuecomment-113884677.\n. That gives me an idea. Perhaps a global id generator class could be useful in this library. You could create ids with an overloaded operator like this.\n\nid = Id + \"textview\"\nThe + operator should check an inner map for an id that already matches \"textview\" to reuse or create a new one store it in the map and return the id.\nThen in kotlin would it be possible to expose ids by keys like this? \n//shows up automatically now that we have called Id + \"textview\"\nId.textview : Int\n. Ok well this isn't exactly as handy as I originally thought. I didn't realize you could just do this.\n```\n    var layout : FrameLayout by Delagates.notNull()\n    var toolbar : Toolbar by Delagates.notNull()\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    layout = frameLayout {\n         toolbar = toolBar{}\n    }\n}\n\n```\n. I think the id generator would need to be some kind of statically generated class, unless\nthere is a way to expose mutable map keys as properties in kotlin.\nOn Tue, Jun 23, 2015 at 2:00 PM, Yan Zhulanow notifications@github.com\nwrote:\n\nI have been thinking about implementing a \"id generator\" some time, but\nnow it is unclear where should generator cache live.\nThe most appropriate candidate is UiHelper, though there are many\nquestions to find answers for.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/JetBrains/anko/issues/66#issuecomment-114608911.\n\n\nNathan Schwermann\n785-312-0080\n. @EddieRingle you are guaranteed not to collide with this. Found on gist https://gist.github.com/schwiz/0152caee426e247f90ce\n```\nprivate object ViewCounter {\n    private val viewCounter = AtomicInteger(1)\n    public fun generateViewId(): Int {\n        while (true) {\n            val result = viewCounter.get()\n            // aapt-generated IDs have the high byte nonzero; clamp to the range under that.\n            var newValue = result + 1\n            if (newValue > 16777215) newValue = 1 // Roll over to 1, not 0.\n            if (viewCounter.compareAndSet(result, newValue)) {\n                return result\n            }\n        }\n    }\n}\nfun View.generateViewIdCompat(): Int {\n    if (android.os.Build.VERSION.SDK_INT >= 19)\n        return View.generateViewId()\n    else\n        return ViewCounter.generateViewId()\n}\n```\n. @EddieRingle Yes that is what I'm trying to say, this function clamps the generated ids to be lower than what aapt generates. Its backported from kitkat.\n. I see. Can you give an example? I'm not familiar with ruby.\nOn Jun 26, 2015 4:53 PM, \"Eddie Ringle\" notifications@github.com wrote:\n\n@schwiz https://github.com/schwiz I know. I'm more or less just\ncomplaining that Kotlin doesn't have sugar for this, that's all. :)\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/JetBrains/anko/issues/66#issuecomment-115900838.\n. I think I was way overthinking this particular problem. Default layouts can be done like this pretty easy.\n\n```\npublic fun _ToolbarSupport.defaultToolbar() {\n    setElevationCompat(getContext().dip(4))\n    backgroundColor = getContext().attrAsInt(R.attr.colorPrimary)\n    layoutParams(width = matchParent, height = getContext().attrAsDimen(R.attr.actionBarSize))\n}\nsupportToolbar{defaultToolbar()}\n```\nHowever, adding an empty _View interface to generated classes could still be handy I think and an additional _ViewGroup for those types.\n. closing this issue\n. Yeah I'm having a really hard time understanding how this works. I am having lots of issues with getting layoutParams to even compile a lot of the time it tries to goto theval View.layoutProperties helper instead. At runtime I get exceptions because my dsl is trying to add the incorrect layout params to the view.\n. Sure inside a support Fragment the following won't compile because layoutParams for swipeRefreshLayout is scoping to public var android.view.View.layoutParams: android.view.ViewGroup.LayoutParams? inside of Properties.kt\n```\n        UI {\n            swipeRefreshLayout = swipeRefreshLayout{\n                setColorSchemeResources(R.color.primary, R.color.primary_light, R.color.accent, R.color.primary_dark)\n                setOnRefreshListener(this@RecyclerFragment)\n                recyclerView = customView {\n                    layoutParams = RecyclerView.LayoutParams(matchParent, matchParent)\n            }\n        }.layoutParams(matchParent, matchParent)\n\n    }\n\n``\n. I just simply want both views to match parent rather than wrap content. If I had margins and stuff to set it would be a big problem but for now I just put the layoutParams call inside of the swipeRefreshLayout instead, like I'm doing for the recyclerView.  The recyclerView also has the same problem and I can not call layoutParams in the suggested way. \n. I think that is the issue I was having! The link you gave me requires a login though.\n. Yes I use this api all of the time.e.printStackTrace()` doesn't put your tag on the stacktrace. Also, the lazy lambdas are nice to have and the check for the log.tag being set.\n. Any ETA on maven release?\n. ",
    "smallmouse2009": "custom views \uff1asetBackgroundResource\u3001setBackgroundColor() both don't work even though i override the onDraw method.. this is how i use attr.\nval a = context.obtainStyledAttributes(attrs, R.styleable.CustomTitleView)\n        //\u83b7\u53d6\u5c5e\u6027\n        if (a.hasValue(R.styleable.CustomTitleView_center_title)) {\n            centerTitle = a.getString(R.styleable.CustomTitleView_center_title)\n        }\n        if (a.hasValue(R.styleable.CustomTitleView_right_title)){\n            rightTitle = a.getString(R.styleable.CustomTitleView_right_title)\n        }\n        if(a.hasValue(R.styleable.CustomTitleView_bgcolor)){\n            bgcolor = a.getResourceId(R.styleable.CustomTitleView_bgcolor, R.color.colorAccent)\n        }\n        if(a.hasValue(R.styleable.CustomTitleView_leftsrc)){\n            leftsrc = a.getResourceId(R.styleable.CustomTitleView_leftsrc, R.drawable.abc_btn_radio_material)\n        }. or use like this.\n        //\u83b7\u53d6\u5c5e\u6027\n        for (i: Int in 0..a.indexCount) {\n            var attr : Int = a.getIndex(i)\n            when(attr){\n                R.styleable.CustomTitleView_leftsrc ->\n                        leftsrc = a.getResourceId(attr, R.drawable.abc_btn_radio_material)\n                R.styleable.CustomTitleView_right_title -> rightTitle = a.getString(attr)\n                R.styleable.CustomTitleView_center_title -> centerTitle = a.getString(attr)\n            }\n        }.\n",
    "ezamelczyk": "There's now a method for this dimenAttr(R.attr.actionBarSize). It's been 4 months since the first stable release of AndroidX and Anko is still not compatible with it. Jetifier adds a lot of overhead to the build time so it would be nice if we could get it sometime soon.\nAre there any blockers for this? I'm happy to help resolve any issues.. Is that an issue with Anko? No. Then why did you ask this here? Please go to stackoverflow with questions like that.. ",
    "pawegio": "Mine too (KAndroid), I was thinking about giving up my project when I heard about anko, but finally decided to continue to support it as a lightweight dsl-free alternative.\n. Every time, I use simple activity with layout from readme:\n```\nimport android.app.Activity\nimport android.os.Bundle\nimport org.jetbrains.anko.*\npublic class KotlinActivity : Activity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\n    relativeLayout {\n        val name = editText()\n        button(\"Say Hello\") {\n            onClick { toast(\"Hello, ${name.text}!\") }\n        }\n    }\n}\n\n}\n```\nI tried gradle clean & rebuild, removing build dir and invalidating & restarting IntelliJ.\nEDIT: doesn't work even for anko-template-project\n. same for Android Studio and clear project\n. Occurs also in clear install of Android Studio.\n. ",
    "phajduk": "Hi @yanex, I would like to implement this enhancement. Could you advise me if following solution would be OK?\nkotlin\n[suppress(\"NOTHING_TO_INLINE\")]\npublic inline fun ViewManager.passwordEditText(): android.widget.EditText = passwordEditText({})\npublic inline fun ViewManager.passwordEditText(inlineOptions(InlineOption.ONLY_LOCAL_RETURN) init: android.widget.EditText.() -> Unit): android.widget.EditText = addView {\n    ctx ->\n    val view = android.widget.EditText(ctx)\n    view.setInputType(InputType.TYPE_CLASS_TEXT or InputType.TYPE_TEXT_VARIATION_PASSWORD)\n    view.init()\n    view\n}\nI'm not sure if DSL generator could be used to auto-generate it. I suppose more methods like above one needs to be implemented by hand e.g. numberEditText(), phoneEditText() etc.\n. ",
    "lucky-dev": "@yanex , I added some properties of ActionBar in this pull request: https://github.com/JetBrains/anko/pull/53 and two methods. If something is wrong, let me know, please.\n. Thanks for your reply. I updated my pull request.\n. it would take the same time to support any other class in Android SDK\nI agree with you. I have a question: could you give an example of this: putting a custom annotation on ActionBar class would be much cleaner solution? It's interesting.\n. Thanks for explanation\n. ",
    "SalomonBrys": "OK, if I understand correctly, the 15 and 19 are the SDK level, and the s is for support. Is that right ?\n. A diff between anko-0.6-15-sources.jar and anko-0.6-19-sources.jar shows:\n- A lot of difference in InterfaceWorkarounds.java that I don't understand.\n- Adding support for creating LayoutParams by copy, which is a feature that came with SDK 19\n- Addition of listener builder methods:\n  -  AutoCompleteTextView.onDismiss for the AutoCompleteTextView.OnDismissListener that came with SDK 17\n  - VideoView.onInfo for the MediaPlayer.OnInfoListener that came with SDK... 3! So I don't understand why it is in -19 and not in -15.\n- Lots of additions for all the view getters, setters and methods that came after SDK 15\n- Access to all services that were added after SDK 15 such as BLUETOOTH_SERVICE, PRINT_SERVICE, etc.\nWhat I don't understand is why creating two libraries, You can use the -19 library with your app without problems as long as you are not using functions that refer to features that are over SDK 16.\nSo why two library ? And why specifically SDK 15 and 19 ?\n. Sorry for the duplicate.\n. Confirmed. Thanks a lot ;)\n. ",
    "damianpetla": "Maybe its a stupid question but it's not clear for me when should I use 0.6-15s and when 0.6-19s? I have minSdk = 16 in my project and I use support library.\n. There you have a dependencies tree\n- org.jetbrains.anko:anko-support-v4:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n- org.jetbrains.anko:anko-sdk15:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n- org.jetbrains.anko:anko-recyclerview-v7:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n- org.jetbrains.anko:anko-percent:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n- org.jetbrains.anko:anko-gridlayout-v7:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n- org.jetbrains.anko:anko-design:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n- org.jetbrains.anko:anko-cardview-v7:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n- org.jetbrains.anko:anko-appcompat-v7:0.8.1\n  - org.jetbrains.anko:anko-common:0.8.1\n  - org.jetbrains.anko:anko-support-v4:0.8.1 (*)\nIt was useful for me to check.\n. You can go to JCenter URL https://jcenter.bintray.com/org/jetbrains/anko\n. I would simplify this code to:\nkotlin\nval Activity.contentView: View?\n    get() = findOptional<ViewGroup>(android.R.id.content)?.getChildAt(0)\n. In version 0.9 I was able to call cancellable(false). It was removed from builder in 0.10 I wonder if there was a reason for that or was it forgotten during refactoring. It should be easy to restore if there is no reason behind it.. I am getting same warnings using coroutines without Anko so there is probably nothing wrong with Anko itself.\nEvery reported line ends with doResume(java.lang.Object, java.lang.Throwable). ",
    "axierjhtjz": "Same here. Doesn't break up but it shows nothing on the preview window.\n. ",
    "bj0": "Is there a workaround for this?  Would a  custom inline function that accomplishes this be difficult to make?\n. @yanex I don't think anyone is saying to create a fragment without an explicit class declaration.  In Android xml layouts, you can insert a <fragment> tag directly, instead of inserting a container element and then using FragmentManager to inject the fragment into the placeholder.\nBoth methods require explicit Fragment classes.  I believe this issue was created because we couldn't figure out how to translate XML layouts with <fragment> tags into Anko language.. ",
    "dave08": "This would be a nice little feature, since as far as I know, the only solution is a \"long\" piece of code (at least compared to how much anko tries to save us), see: http://stackoverflow.com/questions/18296868/how-to-add-a-fragment-to-a-programmatically-generated-layout\nI think the problem is that this does not conform to just creating a view like the rest of the dsl...\nBut for those that are lazy like me, we are force to still keep some xml layouts around just because of this feature not being implemented...\nNice job to the anko team anyways for all the rest of the features they give us!!\n. Same with me, I can't even open the IDE as long as the plugin is enabled...\n. ",
    "gregpardo": "I included in my example of what it might look like while referencing the class. . ",
    "timfreiheit": "pull request updated :)\n. ",
    "foobnix": "also add the same behavior for sp, px etc\n    val Int.dp:Int\n        get(){\n            return dip(this)\n        }\nverticalLayout(){\n            padding = 15.dp\n....\n}\nI think this code read much better\n. ",
    "tahmidsadik112": "Sorry for noob question. I just had to use the version of Anko that includes the support libs.\ncompile 'org.jetbrains.anko:anko:0.6-15s'\n. ",
    "danijoo": "any news on this? \n. ",
    "Ribesg": "Isn't this done? If you just use org.jetbrains.anko:anko-common?\n. You're using the latest version, it's a work in progress. Thanks for pointing those errors out.\nThe version the error occured in is here https://github.com/Ribesg/Encypokedia/tree/fb499fe2519b1e9fc6c22253e8c69c3372ee0db3\n. @cavega you need an anko-sdk lib. I'm not sure which version to choose, you should always compile with the latest and target whichever minimal version you want, so I guess that you need to specify this minimal version here? That's what I do.\nThen for each support lib you use, you add the associated anko lib. This is what I have:\n``` groovy\nbuildscript {\n    ext.kotlin_version = '0.13.1514'\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\napply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\nandroid {\n    compileSdkVersion 23\n    buildToolsVersion \"23.0.1\"\ndefaultConfig {\n    applicationId 'fr.ribesg.android.xxx'\n    minSdkVersion 15 // Min SDK version is 15\n    targetSdkVersion 23\n    versionName '0.0.1'\n    versionCode 1\n}\n\nbuildTypes {\n    release {\n        minifyEnabled false\n    }\n}\n\nsourceSets {\n    main.java.srcDirs += 'src/main/kotlin'\n}\n\n}\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n// Note the used support libs\ncompile 'com.android.support:appcompat-v7:23.0.1'\ncompile 'com.android.support:design:23.0.1'\ncompile 'com.android.support:recyclerview-v7:23.0.1'\n\ncompile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\ncompile 'org.jetbrains.anko:anko-sdk15:0.7' // So here it's 15 too\n\n// Same Anko libs than support libs\ncompile 'org.jetbrains.anko:anko-appcompat-v7:0.7'\ncompile 'org.jetbrains.anko:anko-design:0.7'\ncompile 'org.jetbrains.anko:anko-recyclerview-v7:0.7'\n\n}\n```\nSupport libs ARE split into multiple different packages. It seems logical for Anko to follow the same, to get only what matches what you already have.\n. It has been renamed to lparams. (See https://github.com/JetBrains/anko/commit/246ad696babbd044626b27853f8677647c68bf2c).\nIt took me quite some time to figure it out, hope this issue helps!\nThere is still some docs to change I guess, so this issue is still valid.\n. All the libs I depend on are now available, I guess it's done :)\n. It was not entirely available on jcenter until 10 minutes ago for some reasons.\n. I have no idea how I could \"try jars from here\" as I'm referencing the repository. Adding the jars in local folder 'libs' doesn't work.\n. We really need a fix for this!\n. As this was a release, Gradle, like Maven, doesn't try and get new release package of the same version. After removing ~/.gradle/caches (Or X:\\Users\\Y\\.gradle\\caches on Windows), Gradle successfully downloads the entire internet again and it compiles successfully. Thanks!\n. Any reason to use an non-stable version?\n. You can now update this to 2.8, I guess.\n. Ok let me fix it :)\n. I'm not even sure why this function is associated to a class in fact. I'm a noob but I don't think the result depends on the View/Fragment/Activity/Context you use it on?\nShouldn't this function be \"alone\"?\n. +1\n. Well I don't get this error.\n. No (or I should say not yet), it may be the cause. Try to disable it to confirm.\n. Anko 0.7.1 is for Kotlin M14.\nYou want Anko 0.7.2.\n. I want to understand why this is still not done.\nI see other changes after 0.8, is 0.8 done or not @yanex?\nDo we have to wait for a 0.8.1?\nThanks\n. Thanks for the info, I'll just stay on Beta 1 for now!\n. It's not an Anko issue, it's a classic matter of variable scope in code blocks.\nYou declare a local variable input in the block of initialization of your verticalLayout. It obviously does not exist out of its scope.\nIn this very specific example, you don't actually use the reference to the verticalLayout, but you use a reference to the text input inside it. So just get that reference, declaring the variable in a scope high enough for you to use it.\n``` kotlin\nalert {\n    var deviceNameInput: EditText? = null\ncustomView {\n    verticalLayout {\n        textView {\n            text = \"Edit device name\"\n            textColor = resources.getColor(R.color.highlight)\n            textSize = 24F\n        }\n        textInputLayout {\n            deviceNameInput = editText {\n                hint = \"Name\"\n                textColor = resources.getColor(R.color.highlight)\n            }\n        }\n    }\n\n    positiveButton(\"OK\") { \"${deviceNameInput!!.text}\" }\n}\n\n}.show()\n```\n. More convenient, maybe. But it's a bad idea to keep a reference to a view part of an alert outside of the alert.\n. I suggest using this instead of bintray: \nmd\n![GitHub version](https://badge.fury.io/gh/Kotlin%2Fanko.svg)\nThis uses the tag version of the Github repo.\n. Note that I tried with the more common http://shields.io/ first, but the Github tag/release version support is broken.\n. You're only styling TextViews in your applications?\n. +1 on this, I would add that IDEA is completely lost because of this.\nI just spent an hour wondering why my text wasn't centered, because IDEA told me I was using the right gravity.\nI recommend renaming the layout's gravity to layoutGravity and the textview's gravity to textGravity.\nFor now, you have to use this.gravity to set the text gravity in a TextView:\nkotlin\ntextView {\n    this.gravity = Gravity.CENTER\n}\n. This kind of code has always worked for me. At some point you had to specify the return type for everything public, then it was no longer enforced for some reasons. Maybe it is now in the more recents betas?\n. I'm able to reproduce this error in an emulator running Android 4.1. Only happens on Android 4.1, but 8.8% of every Android phones isn't nothing.\nI tried to compile Anko myself using Kotlin 1.0, but the build process is a hell. Ant? Really?\n. kotlin\n/**\n * Gets the content view of this Activity if set, null otherwise.\n */\nval Activity.contentView: View?\n    get() = (findViewById(android.R.id.content) as ViewGroup?)?.getChildAt(0)\n. See this SO question and its answer.\n\nit seems to be impossible to enable scroll bars programmatically [on RecyclerViews]\n\nYou could use the suggested solution, inflate a view.\n. As far as I know, uiThread will not be called if the context it was associated to is null (associated activity died for example), or something like that. Try using appCtx.uiThread.\nBut in the end I think that you're trying to reinvent the wheel. I highly suggest you use libraries like Picasso, Glide, Fresco or other similar libraries.\n. 1. async became a reserved* word in Kotlin. It was intended that we only had to write async { and not async() { in Anko originally. Changing to doAsync allows us to write doAsync { without parentheses.\n2. The exception handler function does not have to be called on the UI thread imho. If I just want to log the exception with something which does not care about which thread it's being called from (like Crashlytics), then it's better to not run something on the UI thread if you don't have to. (Makes sense with my answer to 3. below)\n3. For me the exceptionHandler is a way to set a standard \"catch all unexpected\" exception handler. If you expect an exception, you should use a try-catch in the doAsync { bloc. The exceptionHandler may be some kind of global variable stored somewhere in your Application, which basically logs the exception as it should not occur. val exceptionHandler = { e -> Crashlytics.logException(e) }\n4. uiThread will not be called if the context \"disappeared\". onComplete will be called with a null argument. It's the only difference between the two inside a doAsync { afaik.\n*: not really, but still\n. I think it's an idea a lot of people would obviously agree with, default behavior on error should not be silent. I guess opening a new issue would give more visibility.\n. The example is outdated, you need to do exactly what AS says you should do: add a type.\nIn this case the type should be your MainActivity I guess. Setting this type will make you able to reach your MainActivity via ui.owner.\n. Yes.\n. There are so many reasons this may not work... What do you mean by \"when I run it\"? Are you sure you're recompiling everything and pushing it where you \"run it\"? Are you sure you run the right Activity?\n. ",
    "brennantaylor": ":trophy: \n. ",
    "pTalanov": "Hello. Can't say about anko. This problem may arise if you add top level member (property or function) to that package (org.jetbrains.anko). If you're not doing anything of the sort, disregard my comment.\n. ",
    "cypressious": "That was it! Thanks for the help.\n. The signature of asyncResult\nkotlin\npublic fun <T> T.asyncResult(task: AnkoAsyncContext<T>.() -> T): Future<T>\ndoesn't seem to make any sense to me. Why should the type of the Future be the same as the receiver type? This way, all I can ever produce is of type Fragment, Activity and so on.\nI think the signature should be \nkotlin\npublic fun <T, R> T.asyncResult(task: AnkoAsyncContext<T>.() -> R): Future<R>\n. Looks fine!\n. @yanex Could you please take a look at https://github.com/JetBrains/anko/issues/78 before releasing? asyncResult is basicly useless now.\n. 2.8 is supposedly faster than 2.7 and didn't cause any issues in my personal projects so far. We could change it to 2.7 stable, too. That's still better than 2.2.\n. done\n. Good idea!\n. any progress on this?. When you ignore the warning, you get a different one:\njava.lang.IllegalArgumentException: Stacks have different current sizes [0] and [1]\nUnexpected error while performing partial evaluation:\nClass = [org/jetbrains/anko/AsyncKt$doAsync$1]\nMethod = [invoke()Ljava/lang/Object;]\nException = java.lang.IllegalArgumentException\n. You need to use the proguard-android-optimize.txt configuration for ProGuard for https://github.com/Kotlin/anko/issues/206#issuecomment-225512019 to appear.\n. I see. ",
    "snice": "I am a Chinese developers, also encountered this kind of situation\n. ",
    "wangjiegulu": "I had same problem.\nintellij idea: 14.1.1\nkotlin: 0.12.1230\nanko: 0.6.3-15\nAnko DSL Preview plugin: 0.6.3\n. ",
    "IceCivet": "i have also problem, i cannot finish. i look the above solution . i also don't kown how to slove it? Can help me, thanks.\n. ",
    "sidius": "kotlin 1.0.0-beta-1038\nanko 0.7.2\ndoesn't work with the simplest layout. gives the exact error as in this issue for a couple of tries and then throws this exception:\njava.lang.NoSuchMethodError: org.jetbrains.android.facet.AndroidFacet.isGradleProject()Z\n        at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.render(DslPreviewToolWindowManager.kt:265)\n        at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager$RefreshDslAction.actionPerformed(DslPreviewToolWindowManager.kt:365)\n        at com.intellij.openapi.actionSystem.ex.ActionUtil.performActionDumbAware(ActionUtil.java:182)\n        at com.intellij.openapi.actionSystem.impl.ActionButton.actionPerformed(ActionButton.java:163)\n        at com.intellij.openapi.actionSystem.impl.ActionButton.performAction(ActionButton.java:127)\n        at com.intellij.openapi.actionSystem.impl.ActionButton.processMouseEvent(ActionButton.java:304)\n        at java.awt.Component.processEvent(Component.java:6290)\n        at java.awt.Container.processEvent(Container.java:2234)\n        at java.awt.Component.dispatchEventImpl(Component.java:4881)\n        at java.awt.Container.dispatchEventImpl(Container.java:2292)\n        at java.awt.Component.dispatchEvent(Component.java:4703)\n        at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4898)\n        at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4533)\n        at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4462)\n        at java.awt.Container.dispatchEventImpl(Container.java:2278)\n        at java.awt.Window.dispatchEventImpl(Window.java:2739)\n        at java.awt.Component.dispatchEvent(Component.java:4703)\n        at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:746)\n        at java.awt.EventQueue.access$400(EventQueue.java:97)\n        at java.awt.EventQueue$3.run(EventQueue.java:697)\n        at java.awt.EventQueue$3.run(EventQueue.java:691)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)\n        at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:86)\n        at java.awt.EventQueue$4.run(EventQueue.java:719)\n        at java.awt.EventQueue$4.run(EventQueue.java:717)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:716)\n        at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:734)\n        at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:565)\n        at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:382)\n        at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n        at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.jav\n. Jars are working fine. Waiting for fixed maven artifacts.\n. ",
    "guuilp": "This is happening to me on Anko 0.10.4 and Kotlin 1.2.10. @yanex may you help me?. ",
    "alexustinovsm": "It doesn't work for 0.13.1513! I have to rollback to M12\n. ",
    "tmiyamon": "I'm waiting for the release!\n. I'm also waiting for the updating which has the compatibility to the kotlin beta2.\n. ",
    "mboudraa": "@yanex Will it still be released today ?\n. ",
    "udev": "Any word on those resources?. ",
    "cavega": "I agree. Right now if I want to use Anko for the first time I don't know which modules (or packages) need to be added to my project in order to experiment with the different features outlined in the README file.  \nAs an example, I just added the following dependencies to an Android project:\ncompile 'org.jetbrains.anko:anko-common:0.7'\ncompile 'org.jetbrains.anko:anko-appcompat-v7:0.7'\nIn one of my activities I'm trying to replace Butterknife which uses this syntax:\nval artistBio: TextView by bindView(R.id.artistBio)\nWith Anko's syntax\nval artistBio = find<TextView>(R.id.artistBio)\nI'm using Intellij 15 with ext.kotlin_version = '0.13.1513'. The IDE does not recognize the \"find\" keyword and I get the following build error if I attempt to build the project:\nError:(32, 21) Gradle: Unresolved reference: anko\nError:(44, 20) Gradle: Unresolved reference. None of the following candidates is applicable because of receiver type mismatch:\nkotlin.inline public fun <T> kotlin.Array<out android.widget.TextView>.find(predicate: (android.widget.TextView) -> kotlin.Boolean): android.widget.TextView? defined in kotlin\nkotlin.inline public fun kotlin.BooleanArray.find(predicate: (kotlin.Boolean) -> kotlin.Boolean): kotlin.Boolean? defined in kotlin\nkotlin.inline public fun kotlin.ByteArray.find(predicate: (kotlin.Byte) -> kotlin.Boolean): kotlin.Byte? defined in kotlin\nkotlin.inline public fun kotlin.CharArray.find(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Char? defined in kotlin\nkotlin.inline public fun kotlin.DoubleArray.find(predicate: (kotlin.Double) -> kotlin.Boolean): kotlin.Double? defined in kotlin\nkotlin.inline public fun kotlin.FloatArray.find(predicate: (kotlin.Float) -> kotlin.Boolean): kotlin.Float? defined in kotlin\nkotlin.inline public fun kotlin.IntArray.find(predicate: (kotlin.Int) -> kotlin.Boolean): kotlin.Int? defined in kotlin\nkotlin.inline public fun <T> kotlin.Iterable<android.widget.TextView>.find(predicate: (android.widget.TextView) -> kotlin.Boolean): android.widget.TextView? defined in kotlin\nkotlin.inline public fun kotlin.LongArray.find(predicate: (kotlin.Long) -> kotlin.Boolean): kotlin.Long? defined in kotlin\nkotlin.inline public fun <T> kotlin.Sequence<android.widget.TextView>.find(predicate: (android.widget.TextView) -> kotlin.Boolean): android.widget.TextView? defined in kotlin\nkotlin.inline public fun kotlin.ShortArray.find(predicate: (kotlin.Short) -> kotlin.Boolean): kotlin.Short? defined in kotlin\nkotlin.inline public fun kotlin.String.find(predicate: (kotlin.Char) -> kotlin.Boolean): kotlin.Char? defined in kotlin\n. @Ribesg Thanks for the response. After some experimentation with the different modules it looks like the \"find\" view binding feature is part of the main Anko module (I used \"org.jetbrains.anko:anko-sdk15:0.7\" for my minSdk 15 project).\nThe original comment by @cypressious still stands: what can the \"core\", \"recyclerview\", \"appcompat\", etc modules be used for? A summary in the README would be nice.\n. ",
    "claudiug": "+1 for improvements documents. \nFor me know anko looks like an showcase.\nI maybe will use in the future, until then, I wait for better docs, API links :)\n. ",
    "Amagi82": "Also looks like recyclerview is misspelled as \"recycleriew\"\nhttps://bintray.com/jetbrains/anko/anko/anko-recycleriew-v7-0.8.3/view\n. ",
    "peleteiro": "When I want to set margins/padding and when I want to extract parts of my UI to methods on the activity? I'm newbie on Anko, but I guess it's needed. At least, in my understand, layoutParams use to work.\n. On anko-commons the only components that does not work with android.support.v4.app.Fragment is Dialogs and toasts. Every other component works.\nanko-support-v4 brings every anko component with it. We need a anko-commons-support-v4.\n. ",
    "lukaspili": "Same problem here.\nIt's especially an issue when using Anko within a custom view, because you don't set a top-level layout.\nEdit: Actually you can fix it by extending the Anko custom view. For instance _RelativeLayout rather than RelativeLayout, but it's rather limited and restraining.\n. It doesn't, but you still need to access the Resources instance in order to get the screen density.\nThus, having the View.dip() allows the following code:\njava\nclass PagerPageView(context: Context) : FrameLayout(context) {\n       private fun setupView() {\n            verticalLayout {\n                lparams(matchParent, wrapContent) {\n                    topMargin = dip(40) // with View.dip()\n                    horizontalMargin = context.dip(20) // without View.dip()\n                }\n           }\n       }\n}\n. Cool thanks!\n. +1 with @Ribesg on the renaming to layoutGravity and textGravity\n. This would also resolve the issue of having to manually instanciate AppCompat views, like AppCompatImageView. 1-liner :\nkotlin\nankoView(::CustomToolbarView, 0) {\n   backgroundColor = Color.RED\n}. ",
    "brolund": "I have the same problem. I need to set height=matchParent to avoid having empty space at the bottom of a page. \nIs there a compelling reason to treat top level elements differently? Since you actually can set layout parameters on a top level XML layout, it seems a bit strange not being able to do that in anko. \nSure, I can probably hack around it, but since anko is so elegant otherwise, this seems very odd, and it took me a while to realize I wasn't doing anything wrong.\nBTW, thanks for anko! Awesome initative!\n. ",
    "bkach": "@brolund Looks like the functionality you're looking already exists using lparams within the top level element.\nFor example:\n```\n        verticalLayout {\n        lparams {\n            width = matchParent\n            height = matchParent\n        }\n\n...\n}\n```\n. ",
    "aneophyte": "That doesn't work. I applied the layout explicitly, only that worked.\nkotlin\nverticalLayout {\n    ...\n}.layoutParams = with(FrameLayout.LayoutParams(matchParent, matchParent)) {\n    leftMargin = dip(16)\n    rightMargin = dip(16)\n    this\n}\n. ",
    "jupl": "Hmm. I'm not getting lparams as an option in Android Studio. I'm currently using org.jetbrains.anko:anko-sdk15:0.7.\n. ",
    "rainerborene": "Same here.\n. ",
    "kamoljan": "@yaegor thank you!\n. ",
    "clemp6r": "With anko 0.7.2 and Kotlin 1.0.0-beta-1038 I get the following error (proguard enabled)\nWarning: org.jetbrains.anko.ContextUtilsKt__ContextUtilsKt: can't find referenced method 'void reifySafeCheckcast(java.lang.String)' in program class kotlin.jvm.internal.Intrinsics\nWarning: org.jetbrains.anko.support.v4.SupportKt__SupportKt: can't find referenced method 'void reifySafeCheckcast(java.lang.String)' in program class kotlin.jvm.internal.Intrinsics\nWarning: there were 2 unresolved references to program class members.\n         Your input classes appear to be inconsistent.\n         You may need to recompile the code.\n         (http://proguard.sourceforge.net/manual/troubleshooting.html#unresolvedprogramclassmember)\n. I think we might reopen the issue as it seems there is a compatibility problem between the released version of anko 0.7.2 and Kotlin 1.0.0 beta.\n. Do you use ProGuard?\n. I can't (because of the 65k methods limit).\nAdding -dontwarn kotlin.jvm.internal.Intrinsics to my proguard configuration file fixes the build (but the problem may still be present)\n. ",
    "tagantroy": "Last version of Anko DSL Preview plugin - 0.7.1 updated 02.10.15\n. ",
    "dcalano": "This is a pretty poor design choice imo. There is no need for the extra effort just to get a statement to print to logcat.... ",
    "hendrawd": "So how can I enable the log for VERBOSE and DEBUG?. Actually, I am trying to explore Kotlin and still a newbie in this field. I already cloned the project, had an error when building the project, either with android studio directly or with the steps from https://github.com/Kotlin/anko/wiki/Building-Anko\n```\nFAILURE: Build completed with 4 failures.\n1: Task failed with an exception.\n\n\nWhat went wrong:\nExecution failed for task ':ide:intentions:compileKotlin'.\n\nInternal compiler error. See log for more details\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n==============================================================================\n\n\n2: Task failed with an exception.\n\n\nWhat went wrong:\nExecution failed for task ':testUtils:compileKotlin'.\n\nInternal compiler error. See log for more details\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n==============================================================================\n\n\n3: Task failed with an exception.\n\n\nWhat went wrong:\nExecution failed for task ':static:commons:compileReleaseKotlin'.\n\nInternal compiler error. See log for more details\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n==============================================================================\n\n\n4: Task failed with an exception.\n\n\nWhat went wrong:\nExecution failed for task ':ide:attrs:compileKotlin'.\n\nInternal compiler error. See log for more details\n\n\n\nTry:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n==============================================================================\n\n\nBUILD FAILED\nI have search the github issues, but found nothing.\nIf you have any idea how to solve the problem, i would love to contribute back to this repository..kotlin\nui.owner.finish()\nWhere ui is `AnkoContext<YourActivity>`. I think you don't even need anko to make the text(String) upper case. From kotlin-stdlib itself, StringsJVM.kt file, there is an extension function that you can use.kotlin\n/*\n * Returns a copy of this string converted to upper case using the rules of the default locale.\n /\n@kotlin.internal.InlineOnly\npublic actual inline fun String.toUpperCase(): String = (this as java.lang.String).toUpperCase()\n. I don't think you should use anko in the first place, because like the description: \"Pleasant Android application development\", anko purpose is for supporting android development. Can you be more specific about \"model\" here? If what you mean is android ViewModel, then\n`val yourViewModel = ViewModelProviders.of(activityOrFragment).get(YourViewModel::class.java)`.kotlin\nval intent = intentFor(\n        \"ID\" to \"0001\",\n        \"NAME\" to \"bangtiray\",\n        \"ADDRESS\" to \"jakarta\"\n)\nstartActivity(intent)\n// or\nstartActivity(\n        \"ID\" to \"0001\",\n        \"NAME\" to \"bangtiray\",\n        \"ADDRESS\" to \"jakarta\"\n)\n```. @4u7 Yes sounds good, thanks for the review. I will fix it right away. ",
    "jonmcclung": "@hendrawd It seems the way to enable the log is to do the following:\n$ adb shell\n$ setprop  log.tag.TAG  VERBOSE\nwhere TAG is any tag you want to see (This is probably the name of the class doing the logging.). ",
    "NataliaUkhorskaya": "Which version of Android Studio or IDEA do you use?\n. ",
    "liaction": "Android Studio 1.4   AI-141.2343393\nAndroid Studio 1.5 Preview    AI-141.2343905\nThey have the same error .\nThank you \uff01\uff01\uff01\n. ",
    "8enet": "yes, it's all the same to me!\nAndroid Studio 1.5 Beta AI-141.2384911\nAnko DSL Preview version 0.7.3\nKotlin plugin version 1.0.0-beta-1103-IJ141-23\n. ",
    "rciurkot": "Same issue here.\nWorkaround: add this line to proguard config\n-dontwarn kotlin.jvm.internal.Intrinsics\n. ",
    "greenspand": "Quick tip. You can still use the v0.7 despite the fact the eystem is showing that dreaded notification to update library. Also, if you use kotlin.x.synthetic injections don't forget to clear chached resources in onDestroyView() method. It is still a bug.\n. Please update the repo. I have a production ready small utility app that depends on it.I mean I could rewrite it but I just love the Anko Library it eases my life. \n. Hi vincaslt. You can replace the exact version with + , for the latest version. Apparently, the system doesn't complain any longer.\n. Does it make a difference?\nOn Sat, Nov 28, 2015, 8:06 PM Vincas notifications@github.com wrote:\n\nYes, but latest version in repository is v0.7.3. And I'd like to use 0.8.\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Kotlin/anko/issues/110#issuecomment-160329673.\n. I see. Well I wish our tickets would be answered. I mean anko has gained\nmomentum and it would be a potty if they spoiled their reputation.\n\nOn Sat, Nov 28, 2015, 8:43 PM Vincas notifications@github.com wrote:\n\nAnkoComponent doesn't seem to exist in 0.7.3\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Kotlin/anko/issues/110#issuecomment-160331739.\n. Awesome. Thx  alot.\n\nOn Tue, Dec 1, 2015, 8:08 PM Yan Zhulanow notifications@github.com wrote:\n\nDone!\n\u2014\nReply to this email directly or view it on GitHub\nhttps://github.com/Kotlin/anko/issues/110#issuecomment-161065011.\n. \n",
    "vincaslt": "When is 0.8 being released? Is there any way to use it in my project already?\n. Yes, but latest version in repository is v0.7.3. And I'd like to use 0.8.\n. AnkoComponent doesn't seem to exist in 0.7.3\n. When is 0.8 being released and is there a way for me to use it already?\n. ",
    "rondou": "me too \n. ",
    "gabriel-fallen": "Crashes with the same message (and couple similar messages) in IDEA Community 15.\nPreview plugin version is 0.7.3a.\n. I'm using IDEA 15 community.\nI'm sorry I couldn't provide full stacktrace and version of IDE. Plugin crash disturbed work of IDEA so I couldn't copy-paste text and had to disable plugin and restart.\n. As far as I understood from the stackrace the exception is caused by some combobox on the plugin panel. I guess it's the combobox for AnkoComponent class selection for preview.\nAt the moment I don't have access to that working environment. I'll be able to provide additional details this evening (Moscow time).\nThanks!\n. ",
    "autrilla": "I have the same issue too. I'm using IntelliJ IDEA 15, and here's the stacktrace:\n```\nkotlin.StringsKt.isNotBlank(Ljava/lang/CharSequence;)Z\n    java.lang.NoSuchMethodError: kotlin.StringsKt.isNotBlank(Ljava/lang/CharSequence;)Z\n        at org.jetbrains.kotlin.android.dslpreview.PreviewClassDescription.toString(PreviewClassDescription.kt:26)\n        at javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(BasicComboBoxRenderer.java:121)\n        at com.intellij.openapi.ui.ComboBoxWithWidePopup$AdjustingListCellRenderer.getListCellRendererComponent(ComboBoxWithWidePopup.java:120)\n        at javax.swing.plaf.basic.BasicListUI.updateLayoutState(BasicListUI.java:1361)\n        at javax.swing.plaf.basic.BasicListUI.maybeUpdateLayoutState(BasicListUI.java:1311)\n        at javax.swing.plaf.basic.BasicListUI$Handler.valueChanged(BasicListUI.java:2623)\n        at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:184)\n        at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:164)\n        at javax.swing.DefaultListSelectionModel.fireValueChanged(DefaultListSelectionModel.java:211)\n        at javax.swing.DefaultListSelectionModel.changeSelection(DefaultListSelectionModel.java:405)\n        at javax.swing.DefaultListSelectionModel.changeSelection(DefaultListSelectionModel.java:415)\n        at javax.swing.DefaultListSelectionModel.setSelectionInterval(DefaultListSelectionModel.java:459)\n        at javax.swing.JList.setSelectedIndex(JList.java:2210)\n        at javax.swing.plaf.basic.BasicComboPopup.setListSelection(BasicComboPopup.java:1168)\n        at javax.swing.plaf.basic.BasicComboPopup.access$300(BasicComboPopup.java:63)\n        at javax.swing.plaf.basic.BasicComboPopup$Handler.itemStateChanged(BasicComboPopup.java:999)\n        at javax.swing.JComboBox.fireItemStateChanged(JComboBox.java:1223)\n        at javax.swing.JComboBox.selectedItemChanged(JComboBox.java:1280)\n        at javax.swing.JComboBox.contentsChanged(JComboBox.java:1330)\n        at javax.swing.AbstractListModel.fireContentsChanged(AbstractListModel.java:118)\n        at javax.swing.DefaultComboBoxModel.setSelectedItem(DefaultComboBoxModel.java:93)\n        at javax.swing.DefaultComboBoxModel.addElement(DefaultComboBoxModel.java:131)\n        at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.resolveAvailableClasses(DslPreviewToolWindowManager.kt:266)\n        at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.initToolWindow(DslPreviewToolWindowManager.kt:148)\n        at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$5.run(AndroidLayoutPreviewToolWindowManager.java:480)\n        at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:337)\n        at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:327)\n        at com.intellij.util.ui.update.MergingUpdateQueue$3.run(MergingUpdateQueue.java:271)\n        at com.intellij.util.ui.UIUtil.invokeLaterIfNeeded(UIUtil.java:2321)\n        at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:283)\n        at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:244)\n        at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:234)\n        at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n        at com.intellij.util.Alarm$Request$1.run(Alarm.java:352)\n        at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.a(LaterInvocator.java:337)\n        at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.run(LaterInvocator.java:321)\n        at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\n        at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:756)\n        at java.awt.EventQueue.access$500(EventQueue.java:97)\n        at java.awt.EventQueue$3.run(EventQueue.java:709)\n        at java.awt.EventQueue$3.run(EventQueue.java:703)\n        at java.security.AccessController.doPrivileged(Native Method)\n        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)\n        at java.awt.EventQueue.dispatchEvent(EventQueue.java:726)\n        at com.intellij.ide.IdeEventQueue.f(IdeEventQueue.java:861)\n        at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:649)\n        at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:380)\n        at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n        at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n        at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n        at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\n        at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\njava.lang.NoSuchMethodError: kotlin.StringsKt.isNotBlank(Ljava/lang/CharSequence;)Z\n    at org.jetbrains.kotlin.android.dslpreview.PreviewClassDescription.toString(PreviewClassDescription.kt:26)\n    at javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(BasicComboBoxRenderer.java:121)\n    at com.intellij.openapi.ui.ComboBoxWithWidePopup$AdjustingListCellRenderer.getListCellRendererComponent(ComboBoxWithWidePopup.java:120)\n    at com.intellij.ide.ui.laf.darcula.ui.DarculaComboBoxUI.getDisplaySize(DarculaComboBoxUI.java:159)\n    at javax.swing.plaf.basic.BasicComboBoxUI.getMinimumSize(BasicComboBoxUI.java:934)\n    at javax.swing.plaf.basic.BasicComboBoxUI.getPreferredSize(BasicComboBoxUI.java:923)\n    at javax.swing.JComponent.getPreferredSize(JComponent.java:1662)\n    at com.intellij.openapi.ui.ComboBox.getPreferredSize(ComboBox.java:268)\n    at com.intellij.openapi.ui.ComboBox.getMinimumSize(ComboBox.java:263)\n    at com.intellij.uiDesigner.core.Util.getMinimumSize(Util.java:27)\n    at com.intellij.uiDesigner.core.DimensionInfo.getMinimumSize(DimensionInfo.java:239)\n    at com.intellij.uiDesigner.core.HorizontalInfo.getMinimumWidth(HorizontalInfo.java:40)\n    at com.intellij.uiDesigner.core.GridLayoutManager.getMin2(GridLayoutManager.java:734)\n    at com.intellij.uiDesigner.core.GridLayoutManager.getMinOrPrefSizes(GridLayoutManager.java:645)\n    at com.intellij.uiDesigner.core.GridLayoutManager.getMinSizes(GridLayoutManager.java:626)\n    at com.intellij.uiDesigner.core.GridLayoutManager.minimumLayoutSize(GridLayoutManager.java:221)\n    at java.awt.Container.minimumSize(Container.java:1848)\n    at java.awt.Container.getMinimumSize(Container.java:1832)\n    at javax.swing.JComponent.getMinimumSize(JComponent.java:1746)\n    at com.intellij.uiDesigner.core.Util.getMinimumSize(Util.java:27)\n    at com.intellij.uiDesigner.core.DimensionInfo.getMinimumSize(DimensionInfo.java:239)\n    at com.intellij.uiDesigner.core.HorizontalInfo.getMinimumWidth(HorizontalInfo.java:40)\n    at com.intellij.uiDesigner.core.GridLayoutManager.getMinOrPrefSizes(GridLayoutManager.java:645)\n    at com.intellij.uiDesigner.core.GridLayoutManager.getPrefSizes(GridLayoutManager.java:630)\n    at com.intellij.uiDesigner.core.GridLayoutManager.preferredLayoutSize(GridLayoutManager.java:274)\n    at com.intellij.uiDesigner.core.GridLayoutManager.layoutContainer(GridLayoutManager.java:409)\n    at java.awt.Container.layout(Container.java:1510)\n    at java.awt.Container.doLayout(Container.java:1499)\n    at java.awt.Container.validateTree(Container.java:1695)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validateTree(Container.java:1704)\n    at java.awt.Container.validate(Container.java:1630)\n    at com.intellij.openapi.wm.impl.ToolWindowsPane$AddDockedComponentCmd.run(ToolWindowsPane.java:754)\n    at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.a(LaterInvocator.java:337)\n    at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.run(LaterInvocator.java:321)\n    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\n    at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:756)\n    at java.awt.EventQueue.access$500(EventQueue.java:97)\n    at java.awt.EventQueue$3.run(EventQueue.java:709)\n    at java.awt.EventQueue$3.run(EventQueue.java:703)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:726)\n    at com.intellij.ide.IdeEventQueue.f(IdeEventQueue.java:861)\n    at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:649)\n    at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:380)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\n\n```\n. ",
    "DmitriyZaitsev": "+1\nAndroid Studio 2.0 Preview 2\nThe problem is keyboard doesn't work after plugin's crash until restart.\n. ",
    "Miha-x64": "This would be very helpful for non-Kotlin projects. Especially when comes understanding that XML, themes, and layout inflater ultimately suck. :). Withou this PR, I'm copying attribute-resolving code each time I use Anko DSL.. Such tasks are solved by factories like horizontalProgressBar.. I think this implementation is OK, because SparseArrays have no iterators and thus it will be impossible to check for comodification fast and clearly. Unlike iterators, given extensions do not use any extra allocations, which is much appreciated in Android.\nAlso:\n\u2014 you can use 0 until size instead of 0 .. size-1, this is less error-prone and more self-explanatory;\n\u2014 it is also possible to implement forEachKey and forEachValue;\n\u2014 there are also SparseArrayCompat and SimpleArrayMap, they could be iterated this way too.. In DrawerLayout(Context, AttributeSet), it does some work related to fitsSystemWindows XML property. So, as a workaround, I have the only XML layout in my project \u2014 an empty Drawer. :). IMO, a related problem: if you create a typical layout:\nkt\ndrawerLayout {\n    coordinatorLayout {\n        themedAppBarLayout(R.style.AppTheme_AppBarOverlay) {\n            toolbar {\n                popupTheme = R.style.AppTheme_PopupOverlay\n                backgroundResource = R.color.colorPrimary\n            }.lparams(width = matchParent) {\n                height = TypedValue.complexToDimension(context.attr(R.attr.actionBarSize).data, resources.displayMetrics).toInt()\n            }\n        }\n    }\n}\n, you will be able to move a toolbar under the statusbar by your finger, which is wrong and impossible when a layout inflated from XML.\nAll view class constructors should be examined, and a list of precautions created. Also, it's possible to emulate XML inflation by creating AttributeSets from code, but this is kinda quirky and crutchy.. I guess, that when multiple receiver support in Kotlin will be implemented, these classes will go away.. If this plugin is going to be reworked, what about previewing not only for AnkoComponent, but also for arbitrary expression, e. g. preview createTheCoolestItemView() function call output?. ...what about using scripting engine to run updated core on-the-fly?. It's quite easy to emulate such behaviour by defining your layout in a method and re-rendering (invoking) it when you need.. It's not that critical, I think.. Obviously, you need to set ID.\nviewPager {\n    id = 100500\n}. 1.\nval pager = ...\nval pager = ...\nSomething is wrong here, isn't it?\n\n\u00abInstant crash\u00bb does not help understanding what's going on. Stack trace does.. Your problem is not related to Anko.. > the problem is setting the adapter\n\n\nusing the xml equivalent should fail too\n\nNo way to set adapter through XML.\nYour question is unrelated to this issue \u2014 you can ask it on StackOverflow or in Kotlin Slack.. Should it really be a part of Anko?\nHere's standalone implementation: https://github.com/Miha-x64/reactive-properties#sample-usage-in-gui-application. @jlberrocal I don't think Anko should re-implement observables, bindings, etc. It's better to find one good implementation and contribute to it.. It looks extremely immature. With a single commit. It's just an idea, a prototype.\nWhich way do you unbind views?. Thank you for pointing this out! Fixed.. ",
    "devliber": "Unfortunately with doFromSdk I get the \"Call requires API level\" error in Android Studio. If I use an if statement, the error no longer appears:\n\n. ",
    "SanoKriss": "Same behavior, what I can do with that, except use if (Build ....) ?. ",
    "rovkinmax": "Thanks! Try it.\n. I have the same issue.\n@k-kagurazaka you found solution?. I use org.jetbrains.anko:anko-design:0.9.1\nFor example, simple code\n```\nclass ActivityComponent : AnkoComponent {\noverride fun createView(ui: AnkoContext<Activity>): View = with(ui) {\n    textInputLayout {\n        editText().lparams(width = matchParent)\n    }\n}\n\n}\n``\nthrowjava.lang.ClassCastException: android.widget.LinearLayout$LayoutParams cannot be cast to android.widget.FrameLayout$LayoutParams`\n. ",
    "jophde": "I am having this same issue and using AnkoComponent\n```\nclass MainActivityUi : AnkoComponent {\noverride fun createView(ui: AnkoContext<MainActivity>): View {\n    return ui.apply {\n        recyclerView {\n            var projects: List<Project> = emptyList()\n\n            class ViewHolder(textView: TextView) : RecyclerView.ViewHolder(textView)\n\n            layoutManager = LinearLayoutManager(ui.owner)\n            adapter = object : RecyclerView.Adapter<ViewHolder>() {\n                override fun getItemCount(): Int {\n                    return projects.size\n                }\n\n                override fun onBindViewHolder(holder: ViewHolder?, position: Int) {\n                    if (holder?.itemView is TextView) {\n                        holder?.itemView.text = projects.get(position).projectName\n                    }\n                }\n\n                override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): ViewHolder? {\n                    return ViewHolder(textView())\n                }\n            }\n\n            ui.owner.manage(ui.owner.localProjects.subscribe { p ->\n                projects = p\n                adapter.notifyDataSetChanged()\n            })\n        }\n    }.view\n}\n\n}\n```\n. ",
    "hasanOryx": "I've the same issue with plugin 0.10.2. ",
    "eygraber": "What about having something like this:\ninline fun <reified R: ViewGroup.LayoutParams> ViewGroup.lparams(\n      width: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n      height: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n      noinline init: R.() -> Unit = defaultInit\n  ): ViewGroup {\n    val constructor = R::class.java.getConstructor(Int::class.java, Int::class.java)\n    val layoutParams = constructor.newInstance(width, height)\n    layoutParams.init()\n    this@lparams.layoutParams = layoutParams\n    return this\n  }\nThis way you have to explicitly specify the type of the parent, so it should be pretty easy to find mistakes.. Never mind. I git reset --hard and re-imported. Intellij didn't nuke the .idea directory this time.\n. ",
    "UnknownJoe796": "I am getting the same error from the preview, and I am also using AnkoComponent.\nSo others can find this error by search:\nThe following classes could not be found:\n-\u00a0__anko.preview.View (Change to com.lightningkite.kotlincomponents.viewcontroller.implementations.VCView, Change to android.media.tv.TvView, Fix Build Path, Create Class)\nTip: Try to build the project.\nMy code:\n```\nabstract class AnkoViewController() : StandardViewController(), AnkoComponent {\n    override final fun makeView(activity: VCActivity): View {\n        return createView(AnkoContextImpl(activity, activity, false))\n    }\n}\n//----\nclass ListTestVC(val stack: VCStack) : AnkoViewController() {\noverride fun createView(ui: AnkoContext<VCActivity>): View = ui.verticalLayout {\n    gravity = Gravity.CENTER\n...\n}\n\n```\n. ",
    "danstewart": "Any chance you two are using Linux with open JDK?\n. ",
    "trevorwang": "I have also met this issue on mac with Oracle JDK 8u51\n```\napply plugin: 'com.android.application'\napply plugin: 'kotlin-android'\ndef anko_ver = 0.9\nandroid {\n    compileSdkVersion 24\n    buildToolsVersion \"23.0.3\"\ndefaultConfig {\n    applicationId \"mingsin.hellog\"\n    minSdkVersion 15\n    targetSdkVersion 24\n    versionCode 1\n    versionName \"1.0\"\n}\nbuildTypes {\n    release {\n        minifyEnabled false\n        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n    }\n}\nsourceSets {\n    main.java.srcDirs += 'src/main/kotlin'\n}\n\n}\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    testCompile 'junit:junit:4.12'\n    compile 'com.android.support:appcompat-v7:24.0.0'\n    compile \"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\"\n    compile \"org.jetbrains.anko:anko-common:$anko_ver\"\n    compile \"org.jetbrains.anko:anko-sdk15:$anko_ver\" // sdk19, sdk21, sdk23 are also available\n    compile \"org.jetbrains.anko:anko-appcompat-v7:$anko_ver\"\n    compile \"org.jetbrains.anko:anko-support-v4:$anko_ver\"\n    compile \"org.jetbrains.anko:anko-recyclerview-v7:$anko_ver\"\n    compile \"org.jetbrains.anko:anko-gridlayout-v7:$anko_ver\"\n    compile \"org.jetbrains.anko:anko-cardview-v7:$anko_ver\"\n    compile \"org.jetbrains.anko:anko-design:$anko_ver\"\n    compile \"org.jetbrains.anko:anko-percent:$anko_ver\"\n}\nbuildscript {\n    ext.kotlin_version = '1.0.2-1'\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\nrepositories {\n    mavenCentral()\n}\n```\n. ",
    "theangrydev": "Same issue,  Oracle JDK 8u101\n. ",
    "raveesh-me": "I have a question. what if I wanted to declare lparams on the layout as well as applyrecursively() on the same? Can I write as a fluentAPI?. I was just doing this!\nsee if it helps:\nlinearLayout {\n                ....//add all of your EditTexts\n            }.applyRecursively { view -> when(view) {\n                is EditText -> view.lparams {\n                    weight = 1f // put your layout parameters here\n                    width = dip(0)\n                }\n            }}\nSorry, I don't really know how to format it well, but this will solve your problem :-). ",
    "ReDreamport": "I fix the build by update kotlin plugin:\next.kotlin_version = '1.0.0-beta-2423'\n. ",
    "red1004g": "OK! It works for me! Thank you :) \n. ",
    "andrisutanto": "It working for me. Thanks Dude!. ",
    "CodingPapi": "but I just tried anko 0.7.2 is ok\n. ",
    "bfdeitch": "Anko 0.8.1 fixed this issue for me.\n. ",
    "PopTudor": "ups https://github.com/Kotlin/anko/releases/tag/v0.8.1\n. ",
    "yole": "Please follow the instructions provided in the message that you have quoted and update the Anko library to version 0.8.2.\n. See answer on SO.\n. The error is caused by an incompatibility between the Anko DSL preview plugin and Kotlin 1.0.3. You can disable it until a compatible update is released.\n. When we have an update, we'll update the issue. Before that, we'd appreciate if you could refrain from posting further \"Any update?\" comments. Thanks.. The new DSL preview plugin is only compatible with Android Studio 3.0 Canary. Don't install it if you're using Android Studio 2.3. The plugin from Anko 0.9b is not compatible with any modern version of Android Studio, so you shouldn't install it at all.. This is not related to Anko in any way. Please ask general Kotlin questions on the Kotlin forums at https://discuss.kotlinlang.org/. Thanks!. Just merged another pull request that fixed this. Thanks anyway!. This is not a correct change. The Anko dependency needs to be added to the compile dependency scope, not classpath.. ",
    "dbacinski": "@yanex Is it ok? When do you plan to release Anko with this change?\n. I am writing blog post about it. It will be released soon but in the meantime have a look at code samples:\n```\nclass LunchMenuAdapter(var mealList: List) : RecyclerView.Adapter() {\n   override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): LaunchMenuItemViewHolder? {\n       return LaunchMenuItemViewHolder(LunchMenuItemUI().createView(AnkoContext.create(parent!!.context, parent)))\n   }\noverride fun onBindViewHolder(holder: LaunchMenuItemViewHolder?, position: Int) {\n       val meal = mealList[position]\n       holder!!.bind(meal)\n   }\noverride fun getItemCount(): Int {\n       return mealList.size\n   }\n}\nclass LunchMenuItemUI : AnkoComponent {\n   override fun createView(ui: AnkoContext): View {\n       return with(ui) {\n           linearLayout {\n               lparams(width = matchParent, height = dip(48))\n               orientation = LinearLayout.HORIZONTAL\n               textView {\n                   id = R.id.lunch_menu_name\n                   textSize = 16f\n               }\n           }\n       }\n   }\n}\nclass LaunchMenuItemViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n   val name: TextView = itemView.find(R.id.lunch_menu_name)\nfun bind(meal: Meal) {\n       name.text = meal.name\n   }\n}\n```\n. ",
    "LouisCAD": "The README.md should be updated to reflect changes about this issue and #16 so we know how to use it.\n. @yanex Hi, could you clarify what is the file you attached in the first post and how to use it if it's what intended?\n. Hi,\nI'm going to do a talk about Kotlin for Android Development, in which I'll cover anko in 2017, February. Using anko without layout preview is almost a show stopper. Is there any chance this can be working again by the end of 2016, or 2017 January?\n. @sindrenm I personally gave up using Anko for now, because writing xml is more convenient with the preview, and the fact that I'm more used to it. Still looking forward anko preview support comeback though.. @twero Which error which was gone, where? Could you elaborate please?. Thanks! Version 0.9.1 which is released fixes this issue!. There's no RemoteViews constructor which takes a View, but only layout resource id, so it's not possible. The response is in Android API itself, and RemoteViews don't accept objects because the layout will be displayed by another app (launcher or SystemUI) while your app is not in the VM (killed).\n. Had the same issue. I commented the breaking change in the commit here: https://github.com/Kotlin/anko/commit/d57195f3461d666a7ccd5929c81579efe6708534#commitcomment-21486936. The workaround is to use version 0.9.1 for the anko sqlite dependency. This doesn't appear to bring any conflict even if you use other anko libraries with version 0.10.0-beta-2. I investigated in applying xml styles programmatically and saw that it's only possible with the 4 arguments View constructor available only on select views on API 21+, excluding Android support libraries/AndroidX views, so there's no viable option. The third parameter expects an attribute resource id, not a style resource id, so it only works for styles defined in the theme like buttonStyle.\nOk, Airbnb engineers found an over-engineered way to apply xml styles programmatically: https://github.com/airbnb/paris. @yanex I'd like to have let's say a table showing each artifact and what it contains. There's tons of coroutines, listeners and other sort of artifacts that would take , to each user of this library wanting to know what's inside, too much time to analyze.. @4u7 Isn't this caused by the fact that ConstraintLayout 1.1.1-beta3 isn't in the SDK anymore, but in the google() maven repository? FYI, if you're not using Gradle, it's url is the following: https://dl.google.com/dl/android/maven2/. ",
    "yaymalaga": "Any idea why this commit hasn't been merged? It's really useful\n. Now, with the new com.android.support:design:24.2.0 library, apps force close: java.lang.ClassCastException: android.widget.EditText cannot be cast to android.support.design.widget.TextInputEditText\nAny workaround to use before TextInputEditText is added in anko @yanex ?\n. @abond working perfectly, thanks for the help!\n. ",
    "georgeci": "it's all for create a row parser from class constructor classParser<Country>()\n. Fix 136\n. ",
    "anakin78z": "I had the same issue. Specifying org.jetbrains.anko:anko-sdk23:0.8.2 instead of just 0.8 did the trick \n. ",
    "speedcell4": "@anakin78z Thank you, that works for me~\n. ",
    "rothso": "I ran into the same issue. I'm able to use @fboldog's workaround, but digging deeper it looks like all the children of CollapsingToolBar are using FrameLayout.LayoutParams instead of CollapsingToolBar.LayoutParams: e.g. LayoutsTest.kt#L84\nThis would explain why children can't access CollapsingToolbarLayout's DSL. Trying to call any of these lparams also throws a nasty ClassCastException.\nkotlin\nopen class _CollapsingToolbarLayout(ctx: Context): android.support.design.widget.CollapsingToolbarLayout(ctx) {\n    fun <T: View> T.lparams(\n            c: android.content.Context?,\n            attrs: android.util.AttributeSet?,\n            init: android.widget.FrameLayout.LayoutParams.() -> Unit = defaultInit\n    ): T {\n        val layoutParams = android.widget.FrameLayout.LayoutParams(c!!, attrs!!)\n        layoutParams.init()\n        this@lparams.layoutParams = layoutParams\n        return this\n    }\n    // ... and the others ...\nIt looks like all we need to do is just change the functions to use CollapsibleToolbarLayout.LayoutParams. I'll open a PR tonight if this is the proper approach.\n. ",
    "nomisRev": "Has anything happened here yet? I will look into it tomorrow.\n. @yanex I was unable to build the project. I tried AS and IDEA but without success. Neither dev or master. Also followed doc/building.md but without luck.\nI think I have pinpointed the problem. In https://github.com/Kotlin/anko/blob/master/anko/library/generator/src/org/jetbrains/android/anko/generator/layoutParamsUtils.kt, you use the generateLayoutParams method to determine the LayoutParams from the return type but you should use generateDefaultLayoutParams since that one always return the correct LayoutParams.\nFor collapsing CollapsingToolbarLayout generateLayoutParams it returns FrameLayout.LayoutParams and thus does not accept any configuration for CollapsingToolbarLayout.\nOn a side note, if you could help me to build I'd be happy to fix this. And do some more contributing for 9.1 release.\n. Is there any solution for this? Because I'm stuck getting it to work with width = matchParent, and I'm not to excited about introducing a container around my view.. ",
    "kengorab": "Has there been any work done to fix this issue yet?\n@nomisRev I don't know if this was the build issue you were seeing back in October, but I just tried to build the project locally and encountered an error during the ant -f update_dependencies.xml step, since apparently the ant-contrib library is no longer present at http://heanet.dl.sourceforge.net/project/ant-contrib/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.zip (the route in the update_dependencies.xml file). I plan on putting up a pull request which fixes this issue soon.. Note that the build still fails due to some failing tests (there are 5 failures, in the org.jetbrains.kotlin.android.xmlconverter.XmlConverterTest suite). I'll try to see if I can address these, but it may be beyond my comfort level with the library, since I've only started to familiarize myself with it.. I'm not too familiar with how java's File class determines its abstract pathname, but this was trying to read the resource at /code/github/anko/anko/idea-plugin/xml-converter/attrs.json, when it should be /code/github/anko/anko/idea-plugin/attrs.json (and likewise for views.json). I'm not sure if the abstract pathname is only set to /code/github/anko/anko/idea-plugin/xml-converter during the tests, but I'm not sure how this was working in production in the past.. See my comment above; the test was failing because the abstract pathname was set incorrectly. This was looking at /code/github/anko/anko/idea-plugin/xml-converter/xml-converter/testData, when it should be /code/github/anko/anko/idea-plugin/xml-converter/testData. \nAgain, if I'm incorrect with these path changes, please let me know, because I'm not too certain how the abstract pathname gets set.. ",
    "kirillkh": "This issue has been up for a year and a half now... Is Anko dead?. Haven't tried it yet, but thanks for fixing this!. Note that this problem also exists with ListView and ScrollView. And there is a way to fix it without using XML layouts, see this answer: https://stackoverflow.com/a/41937476/3646645. @4u7 Kudos for making this happen!. I ran into the same problem with Anko. Currently using static constants for ids as a workaround. E.g.:  \nobject Id {\n  @IdRes val toolbar = View.generateViewId()\n  @IdRes val container = View.generateViewId()\n  // ...\n}\nBut I don't like adding a custom place to store ids, when there is a standardized location: ids.xml.. The menu option \"Anko Layout Preview\" is greyed out for me in Android Studio 3.0 Canary 5 (Anko 0.10.1).. Actually, it says \"supported only in Android Studio 2.4+\". The version 3.0 matches that requirement.. ",
    "alm494": "I broke my head. This material design with flying and disappearing widgets is weird itself but Anko could add more headache. ",
    "PaulWoitaschek": "+1. \nAlso the row parser throws an exception if a type is nullable and you specify it as nullable. Then it throws an exception that for example Unit cant be converted to String?.\n. ",
    "dstd": "SqlParsers.kt\n``` kotlin\nprivate fun Cursor.getColumnValue(index: Int): Any? {\n    if (isNull(index)) return null\nreturn when (getType(index)) {\n    Cursor.FIELD_TYPE_INTEGER -> getLong(index)\n    Cursor.FIELD_TYPE_FLOAT -> getDouble(index)\n    Cursor.FIELD_TYPE_STRING -> getString(index)\n    Cursor.FIELD_TYPE_BLOB -> getBlob(index)\n    else -> Unit\n}\n\n}\n```\n@yanex I'm not sure why Unit is used here. But if the column's value is null, then getType will not return a correct type, and this Unit will cause the java.lang.ClassCastException in org.jetbrains.anko.db.rowParser.parseRow (in generated SqlParserHelpers.kt).\nIn my project I made these null-safe wrappers to workaround this issue:\n``` kotlin\nfun Any.nonUnit() = if (this is Unit) null else this\nfun  rowSafeParser(parser: (T1, T2) -> R): RowParser {\n    return object : RowParser {\n        override fun parseRow(columns: Array): R {\n            if (columns.size != 2)\n                throw SQLiteException(\"Invalid row: 2 columns required\")\n            @Suppress(\"UNCHECKED_CAST\")\n            return parser(columns[0].nonUnit() as T1, columns[1].nonUnit() as T2)\n        }\n    }\n}\n``\n. and it was replaced withdoAsync` in the latest release\n. ",
    "adelnizamutdinov": "this is how I'm creating item views:\nhttps://github.com/adelnizamutdinov/kasosalo/blob/master/app/src/main/kotlin/adeln/zasosalo/res/layout/message-item.kt#L25-L67\nbasically you'll need to create some container to get the access to lparams\nor you could manually call setLayoutParams on any kind of view\n. I use anko for layouts and absolutely love it, but there is so much more to anko than just layouts, and that adds to the method count\nare there any plans to keep the anko lib small and lean?. ",
    "antoniolg": "@nomisRev probably a little late, but ran into the same issue, and this is what it's working for me:\nhttps://github.com/antoniolg/Bandhook-Kotlin/blob/888d01a52270097492443202f700ed751326ad46/app/src/main/java/com/antonioleiva/bandhookkotlin/ui/adapter/TracksAdapter.kt#L53-L53\nBasically, using an AnkoContext of the proper parent, and doing it inside the ViewGroup, instead of doing it at the end:\n```kotlin\n        override fun createView(ui: AnkoContext) = with(ui) {\n        linearLayout {\n\n            lparams(width = matchParent)\n            padding = dip(16)\n\n            ...\n        }\n\n    }\n\n```\nNot sure if this is the best way, just been playing with Anko for a few hours.. ",
    "hobo05": "+1\n. ",
    "moslem-deris": "I have the same problem in version 2017.1.3\nThe IDE wont run while the plugin is enable.. ",
    "sczerwinski": "It would also be great to have a convenient way of setting error message in the validated TextView, e.g.:\nkotlin\nnotEmpty().orError(\"Name must not be empty\")\ntext(maxLength = 40).orError(R.string.error_max_length, 40)\nfirstLetter { isUpperCase() }.orError(R.string.error_start_with_upper_case)\n. ",
    "denghongcai": "my fault, must access controls from uiThread\n. ",
    "otomatik": "@yanex thanks for the suggestion, I just updated the code accordingly ;)\n. @carmas123 thanks for the suggestion, @yanex done ;)\n. ",
    "carmas123": "Maybe a good choice rename \"sendText\" to \"sendSMS\" to have no conflict with other methods in app.\n. I do that, thank you so much\n. There is a method to do a queued async tasks?\nSo, to download an image l(like Picasso or Glide) into a listview we can use this async {} and then update the ui with uiThread...but if call for each Holder an async task is degree for the performance and I've more task.\n. You can use \nsetLineSpacing()\n. You can do (like documentation):\n```\nclass MainActivity : AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?, persistentState: PersistableBundle?) {\n        super.onCreate(savedInstanceState, persistentState)\n        MainActivityUI().setContentView(this)\n    }\ninner class MainActivityUI : AnkoComponent {\n    override fun createView(ui: AnkoContext): View = with(ui) {\n        verticalLayout {\n            padding = dip(100)\n            button(\"test\")\n        }\n    }\n  }\n}\n```\n. oh no...I try it and it's work fine check your code\n. ",
    "aleksandar-stefanovic": "I've used something like this in my project. However, I cannot overload the lparams(int, int) function, since that signature is already taken. My function looks like this:\nfun <T: View> T.gridlparams(width: Int, height: Int): T {\n    val layoutParams = GridLayout.LayoutParams(GridLayout.spec(1, width), GridLayout.spec(1, height))\n    this@gridlparams.layoutParams = layoutParams\n    return this\n}\nI've removed the inline tag the original lparams functions have because Android Studio advised that performance gains are insignificant if there is no lambda expression present.\nThis example could be expanded with (row, column, width, height) signature as well, as a shortcut to manually setting GridLayout.Spec.. ",
    "netdur": "@Ribesg thanks, I indeed use Ion for network calls and image loading, I do not need async for this\nwhat I need is to offload heavy calculations off main thread, in above example there no network calls, what I did is to load image off local cache, crop and apply a filter, those are heavy calculations, in this case even if activity is still on uiThread will not be called\nanother example using iconics https://github.com/mikepenz/Android-Iconics\nasync {\n  // I need about 20 icons\n  val android = new IconicsDrawable(this@MainActivity).icon(FontAwesome.Icon.faw_android).color(Color.RED).sizeDp(24)\n  uiThread {\n     image.setImageBitmap(android)\n  }\n}\nuiThread in above example may not be called\n. @mykhailo-gaidai I do not have Instant Run feature on\n. @yanex thank you\n. ",
    "mykhailo-gaidai": "some wild guess here - if you're using Android Studio 2.x, make sure to disable Instant Run feature under the settings\nI've encountered issues with Kotlin code not being executed when it's on\n. ",
    "kingsleyadio": "Hello,\nI was checking through the commits. I noticed async is being replaced with doAsync, and the exception handler mechanism added. However I have a few reservations\n1. I actually do prefer async to the new doAsync. Are there any reasons for this change?\n2. The exception handler function should also be called on the UI  thread, and the same restrictions as with uiThread should apply, since some UI states might also need to be updated\n3. The exceptionHandler argument feels like something that should be placed after the completion handlers instead of before, as it currently is. Since it's optional anyway. Having completion before exception also kind of feels more natural\n4. What are possible situations where the new onComplete will be useful? Since at that point, we might not even have any reference to the caller anymore, and executing stuff might cause some random crashes here and there\nOn a slightly different note, I am thinking of a situation where both exceptions and results are made available at the time of executing uiThread or its other variants.\nSince we can have valid results (e.g from an API call), but they might not necessarily be successful responses, having both completion and exception handler means we will have to handle exceptional cases in two different sections of the code. \nI haven't really thought about how the implementation of a case like this will be, but usage could be something like:\nasync() {\n  var (result, exception) = exec { /* Do long running task */ }\n  uiThread {\n    // React from the UI thread\n  }\n}\nDo you think these are viable considerations?\n. 1. Ah. True. That makes sense.\n2. More often than not, I show the user a kind of progress indicator when I'm about to perform a long running task. Once this task completes (due to successful run or an exception), one of the first things to do is to dismiss the indicator and notify them of the result, which happens on the UI thread. So I would expect any callback on completion of my task to naturally take place on the UI thread. I suppose Crashylitics and co usually queue the heavy logging work to run on some background thread (not particularly sure about Crashylitics internal implementation, but seems like a logical approach), so I don't see a problem with calling it from the UI.\n3. As I explained in 2, cleaning up the UI is a higher priority, I can then do other stuff in the background if I really feel it will take a while to complete\n4. True. I suppose there could be some non UI work that one might really want to do\nWith the example I described initially, since I have both result and exception, I could just do the non UI work outside the uiThread block, and everybody will be fine. This is inline with 2 & 3 above. Something like this:\ndoAsync {\n  var (result, exception) = exec { /* Do long running task */ }\n  // Do non UI work\n  uiThread {\n    // React from the UI thread\n  }\n  // Do more non UI work. e.g Crashylitics.logException(exception)\n}\nA possible implementation of exec could go like:\nfun <T, R> AnkoAsyncContext<T>.exec(f: () -> R): Pair<R?, Throwable?> {\n    var result: R? = null\n    var exception: Throwable? = null\n    try {\n        result = f()\n    } catch(t: Throwable) {\n        exception = t\n    }\n    return result to exception\n}\n. @yanex \nTruly, exec can exist completely independent of AnkoAsyncContext. I can see myself using it in a number of situations, a lot more than I would use the exceptionHandler (personal preference though). Even then, there is no reason why both of them cannot co-exist\nI'll love to see a standard function like it in anko, maybe even in the Kotlin stdlib :)\nYes, attempt() actually sounds more like it. :100:\n. By the way @Ribesg, I see your point with the global exceptionHandler variable. :+1: \nIn fact, in some other non async() context, say we already declared\nval exceptionHandler = { e: Throwable -> XYZ.log(e) }\nOne could use it together with a try/catch block like\ntry {\n  // Do something that could throw an exception\n} catch (ex: Exception) {\n  exceptionHandler(ex)\n}\n. ",
    "BoD": "Sorry to comment on a closed issue but I think the current default implementation (doing nothing, not even a log) is a bad idea.\nI really think the default behavior should be to not catch exceptions - that is, let them be thrown, which in turn will 1/ make the exception reported by tools like Crashlytics  2/ make the app crash.\nIf an exception is \"normal\" (expected) then you can already, as mentioned in a previous comment above,  put a try catch inside the lambda.  But I am talking about the abnormal (bug) case - ignoring such a case by default is a mistake IMHO.  It makes the developer's life needlessly complicated.  \nBasically this makes it easy to miss bugs :)\nAlso this would be in line with Android's standard behavior (both in Thread and AsyncTask).\nAt the very minimum the exception should be logged - but I'd really prefer if the exception was not caught at all.\n. Should I open a new issue instead then?\n. Am I understanding correctly that it is currently not possible to use Anko and have proguard enabled because of this issue?\n. ok :'(\n. Just to clarify, for future people having the same problem: the workaround is to add\n-dontwarn org.jetbrains.anko.internals.AnkoInternals to your proguard config file \nand to use proguard-android.txt (not proguard-android-optimize.txt) in your gradle build file.\n. Related article about how you should not try to silently swallow exceptions: http://jeroenmols.com/blog/2017/03/08/appcrash/. ",
    "ZelphirKaltstahl": "@Ribesg I don't understand where it wants me to add a type? Isn't AnkoComponent the type I want? It's supposed to be a View class, which designs the GUI using the DSL.\n(like the Kenji btw.)\n. @krissrex Thanks, that solves the red underlining. I think I have to take a deeper dive into Kotlin to understand that code though. I should probably take a more step by step apporach and first learn more Kotlin and then try to do some Android stuff with it. Otherwise it's too many new ways of writing things in a very compact way and it can be confusing.\n. ",
    "krissrex": "Should look something like this\nkotlin\nclass MainActivityView : AnkoComponent<Activity> {\n    override fun createView(ui: AnkoContext<Activity>) : View = with(ui) {\n        return verticalLayout {\n            val name = editText()\n            button(\"Say Hello\") {\n                onClick {\n                    ctx.toast(\"Hello, ${name.text}!\")\n                }\n            }\n        }\n    }\n}\n. @ZelphirKaltstahl Alright. The Koans are great for learning kotlin.\nI could try to explain it a litte. The AnkoComponent<Activity> wants you to implement a function createView that returns a View. Its parameter is an AnkoContext<Activity> named ui\nkotlin\ninterface AnkoComponent<Activity> {\n    fun createView(ui: AnkoContext<Activity>) : View \n}\nWe implement it using with(ui), so we can act on ui as if we wrote code inside the AnkoContext<Activity> class.\n``` kotlin\nclass MainActivityView : AnkoComponent {\n    override fun createView(ui: AnkoContext) : View = with(ui) {\n}\n\n}\n```\nWith looks like this:\nkotlin\ninline fun <T, R> with(receiver: T, block: T.() -> R): R\nThat is, a function named with that takes in an object named reciever (for us, it is ui and the type template T is AnkoContext<Activity>), and an extension function named block.\nIt extends T (which is AnkoContext<Activity>), and returns R. R is of type View, which is deduced from what the function createView expects. \nFor block we pass a function with the following code:\nkotlin\nreturn verticalLayout {\n            val name = editText()\n            button(\"Say Hello\") {\n                onClick {\n                    ctx.toast(\"Hello, ${name.text}!\")\n                }\n            }\n        }\nNote that we are using the following convention: \n\nIn Kotlin, there is a convention that if the last parameter to a function is a function, that parameter can be specified outside of the parentheses\n\nwhich is why you don't see block being passed in to with after ui. The same convention is being used by anko for verticalLayout (from CustomViews line 56):\nkotlin\ninline fun Activity.verticalLayout(theme: Int = 0, init: _LinearLayout.() -> Unit): LinearLayout {\n    return ankoView(`$$Anko$Factories$CustomViews`.VERTICAL_LAYOUT_FACTORY, theme, init)\n}\nwhere init contains this code that we wrote:\nkotlin\nval name = editText()\nbutton(\"Say Hello\") {\n    onClick {\n            ctx.toast(\"Hello, ${name.text}!\")\n     }\n }\nSo, to conclude: createView is a function that takes in ui and returns a verticalLayout. The verticalLayout is constructed inside ui with an extension function and with.\nI hope that cleared it up a little. And if anyone spots any mistakes, tell me and I'll fix them :sweat_smile: \n. ",
    "vlonjatg": "Yeah setLineSpacing() does it for the line height.\n. ",
    "takahawk": "Personally for me setting typeface instead of textStyle worked great. This question StackOverflow may be useful: http://stackoverflow.com/questions/7919173/android-set-textview-textstyle-programmatically\n. ",
    "matthewdias": "I tried that first, and it didn't work either.\n. @yanex 0.8.3 for sdk21\n. This is after a full clean and build, and I only have one activity.\n. ",
    "scottmmjackson": "@matthewdias when you say \"it doesn't work\", there are so many things that could be going wrong. Is it failing to compile? Is it coming up blank on your emulator? Is it throwing an exception?\nPeople seem to be having trouble replicating your issue, so you might want to see if you can describe some important details, like the structure of your project and the exact nature of the failure you're encountering.\n. This is great! I was getting exceptions being thrown in the most recent repository version, but this seemed to clear them right up. I dropped a comment on the JB Plugins Repository pointing errant googlers here.\n. ",
    "jonatbergn": "I guess you are using the wrong onCreate() method.\nYou've overwritten onCreate(Bundle savedInstanceState, PersistableBundle persistentState) which only gets called \n\nfor those activities created with the attribute android.R.attr.persistableMode set to persistAcrossReboots\n\nUse onCreate(Bundle savedInstanceState) instead.\n. ",
    "yperess": "I have an alternative approach. I use to use the same method, but got frustrated maintaining the ids.xml file and the needless overhead of the findViewById. I now use the following:\n```\nclass LunchMenuAdapter(var mealList: List\n): RecyclerView.Adapter() {\n   override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): LunchMenuItemViewHolder {\n       return LunchMenuItemUI().createView(\n                AnkoContext.create(parent.context, parent)).tag as LunchMenuItemViewHolder\n   }\noverride fun onBindViewHolder(holder: LaunchMenuItemViewHolder, position: Int) {\n       val meal = mealList[position]\n       holder.bind(meal)\n   }\noverride fun getItemCount(): Int = mealList.size\n}\nclass LunchMenuItemUI: AnkoComponent {\n    override fun createView(ui: AnkoContext): View {\n        var name: TextView by Delegates.notNull()\n        var itemView = with(ui) {\n            linearLayout {\n                lparams(width = matchParent, height = dip(48))\n                orientation = LinearLayout.HORIZONTAL\n                textview {\n                    name = this // Save a reference as you create the object\n                    textSize = 16f\n                }\n            }\n        }\n        itemView.tag = LunchMenuItemViewHolder(itemView, name)\n        return itemView\n    }\n}\nclass LunchMenuItemViewHolder(\n    itemView: View,\n    val name: TextView\n): RecyclerView.ViewHolder(itemView) {\n    fun bind(meal: Meal) {\n        name.text = mean.name\n    }\n}\n```\nNote that the ViewHolder is created along with the view and is returned as the view's tag.\nAs a note for the great folk @anko, MVP (Model, View, Presenter) is really the best way to build UI and AnkoComponents get so close but not quite there in enabling this easily. Trying to adapt the lessons at Google's codelab is difficult with AnkoComponents. In java we'd have (using the example above) a new View class that implemented some LunchMenuContract.View interface but in Anko we only create an instance of a View, not a new type. I've played around with a few ideas but nothing seemed right (I tried creating an extension property for the view but I can't get it to specify a type, I tried some combination of typealias to similarly return a custom view type but I couldn't get it working). I wish I had more ideas on this, but the desired end result would be to return a view that also extends the LunchMenuContract.View interface.. Update:\nI've found a better way, I'm now using the following in my own Custom.kt file:\n```\ninterface AnkoViewProvider {\n    val view: View\n}\ninline fun  ViewManager.ankoComponent(factory: (ctx: Context) -> T, theme: Int, init: T.() -> Unit): View\n        where T: AnkoComponent, T: AnkoViewProvider {\n    val ctx = AnkoInternals.wrapContextIfNeeded(AnkoInternals.getContext(this), theme)\n    val ui = factory(ctx)\n    ui.init()\n    AnkoInternals.addView(this, ui.view)\n    return ui.view\n}\n```\nThis can be used to create the following:\n```\ninline fun ViewManager.lunchMenuItem(theme: Int = 0) = lunchMenuItem(theme) {}\ninline fun ViewManager.lunchMenuItem(theme: Int = 0, init: LunchMenuItemUI.() -> Unit): View =\n    ankoComponent({LunchMenuItemUI(it)}, theme, init)\nclass LunchMenuItemUI(private val context: Context): AnkoComponent, AnkoViewProvider {\n    override val view: View by lazy {\n        createView(AnkoContext.create(context))\n    }\noverride fun createView(ui: AnkoContext<ViewGroup>): View {\n    var name: TextView by Delegates.notNull()\n    var itemView = with(ui) {\n        linearLayout {\n            lparams(width = matchParent, height = dip(48))\n            orientation = LinearLayout.HORIZONTAL\n            textview {\n                name = this // Save a reference as you create the object\n                textSize = 16f\n            }\n        }\n    }\n    itemView.tag = LunchMenuItemViewHolder(itemView, name)\n    return itemView\n}\n\n}\n```\nWhile this doesn't quite solve the issue with ViewHolder's requirement to create the View prior to the constructor call, it is a nice way to create custom views with functionality in an AnkoComponent. The ViewHolder can be added in the same manner as the view property. The final step would be to be able to also have the component extend ViewHolder.. @davidbilik I know this is an old post, but it looks like you didn't quite get your answer, here's how I did it...\n```\n// Functions to allow me to use the DemoView directly in DSL\n// Note that the init function now accepts the DemoView as the first argument which is how I'm able\n// To make calls on the component.\ninline fun ViewManager.demoView(theme: Int = 0) = demoView(theme) {}\ninline fun ViewManager.demoView(theme: Int = 0, title: String = \"\", action: String = \"\",\n        init: View.(demoView: DemoView) -> Unit): View {\n    val demoView = DemoView(title, action)\n    return ankoView({ demoView.createView(AnkoContext.create(it)) }, theme, { init(demoView) })\n}\n// The DemoView component\nclass DemoView(val title: String, val action: String): AnkoComponent {\nprivate lateinit var ankoContext: AnkoContext<Context>\n\nprivate lateinit var buttonView: View\n\noverride fun createView(ui: AnkoContext<Context>): View = with(ui) {\n    ankoContext = ui\n\n    linearLayout {\n        orientation = HORIZONTAL\n        lparams(matchParent, wrapContent) {\n            padding = dip(8)\n        }\n        gravity = Gravity.CENTER_VERTICAL\n        textView(title).lparams(0, wrapContent) {\n            weight = 1f\n        }\n        button(action) {\n            this@DemoView.buttonView = this\n        }.lparams(wrapContent, wrapContent)\n    }\n}\n\nfun onClick(body: (title: String, action: String) -> Unit) {\n    buttonView.onClick { body(title, action) }\n}\n\n}\n// Small demo activity to create 2 instances of DemoView\nclass MainActivity: AppCompatActivity() {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        verticalLayout {\n            demoView(title = \"title1\", action = \"action1\") { demoView ->\n                demoView.onClick { title, action -> toast(\"$title: $action\") }\n            }\n            demoView(title = \"title2\", action = \"action2\") { demoView ->\n                demoView.onClick { title, action -> toast(\"$title: $action\") }\n            }\n        }\n    }\n}\n```. Looking at jcenter they never pushed 0.9.1\nhttps://jcenter.bintray.com/org/jetbrains/anko/anko-sdk23/. Looks like the bug is the use of testCoverageEnabled = true with this build tools version. Turn that off and the build will work again.. ",
    "lidudutju": "Your answer is very helpful to me. And I'm wondering if we could have an AnkoViewHolder interface to summary all the functionality a ViewHolder could have. Code as below:\n```kotlin\nabstract class AnkoViewHolder(ctx: Context) : AnkoViewProvider, AnkoComponent {\nabstract override fun createView(ui: AnkoContext<Context>): View\n\nabstract fun bindData(data: T)\n\noverride val view: View by lazy {\n    createView(AnkoContext.Companion.create(ctx))\n}\n\n}\n```\nThen if we want to crate a ViewHolder-Pattern Class, we could write like this:\n```kotlin\nclass ForumListViewHolder(ctx: Context) : AnkoViewHolder(ctx) {\nprivate var name: TextView by Delegates.notNull()\nprivate var image: SimpleDraweeView by Delegates.notNull()\nprivate var threads: TextView by Delegates.notNull()\n\noverride fun bindData(data: ForumListData) {\n    name.text = data.name\n    image.imageUrl = data.icon\n    threads.text = data.threads\n}\n\noverride fun createView(ui: AnkoContext<Context>): View = with(ui) {\n    return linearLayout {\n        orientation = LinearLayout.HORIZONTAL\n\n        image = simpleDraweeView {\n        }.lparams(width = dip(80 * 1.65f),\n                height = dip(80)) {\n            margin = dip(10)\n        }\n        verticalLayout {\n            name = textView {\n                textSize = 16f\n                textColor = Color.BLACK\n            }.lparams {\n                width = matchParent\n                height = wrapContent\n            }\n            threads = textView {\n                textSize = 13f\n                textColor = resources.getColor(R.color.customRed)\n            }.lparams {\n                width = matchParent\n                height = wrapContent\n            }\n\n        }.lparams(width = 0, height = wrapContent) {\n            weight = 1f\n            margin = dip(10)\n        }\n    }\n}\n\n}\n```\nAnd in Adapter Class(note I'm using the ListView):\nkotlin\n override fun getView(position: Int, convertView: View?, parent: ViewGroup?): View {\n        return if (convertView == null) {\n            val viewHolder = ForumListViewHolder(ctx)\n            val view = viewHolder.view\n            view.tag = viewHolder\n            viewHolder.bindData(data[position])\n            view\n        } else {\n            (convertView.tag as ForumListViewHolder).bindData(data[position])\n            convertView\n        }\n    }\n. ",
    "dpmaycry": "Is there any way better than passing \"R.id.xxx\" to viewHolder or tag as viewholder in anko way?\nFound it by myself, just passingby the ui class to viewholder:\n```kotlin\nclass MessageAdapter(val mainActivity: MainActivity) : RecyclerView.Adapter(), AnkoLogger {\nprivate var msgSet: MutableList<MessageData> = mutableListOf()\n\nfun insertMessage(msgs: List<MessageData>) {\n    msgSet.addAll(msgs)\n    notifyDataSetChanged()\n}\n\nclass ViewHolder(itemView: View,val messageItemUI: MessageItemUI) : RecyclerView.ViewHolder(itemView), AnkoLogger {\n    fun bind(msg: MessageData) {\n        val avatar: CircleImageView = messageItemUI.avatar\n        val name: TextView = messageItemUI.name\n        val date: TextView = messageItemUI.date\n\n        name.text = msg.msg\n        val time = Date(msg.time)\n        val formatter = SimpleDateFormat(\"yyyy-MM-dd hh:mm:ss\")\n        date.text = formatter.format(time)\n        val url = msg.kid_compare_image_url\n        if (url != null) {\n            val tool = Tools()\n            tool.urlImg(url) { bmp ->\n                if (bmp != null) avatar.setImageBitmap(bmp)\n            }\n        }\n\n    }\n}\n\n\noverride fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\n    val messageItemUI = MessageItemUI()\n    val viewHolder = ViewHolder(messageItemUI.createView(\n            AnkoContext.create(parent.context, parent)),messageItemUI)\n    return viewHolder\n}\n\noverride fun onBindViewHolder(holder: ViewHolder, position: Int) {\n    val msg = msgSet[position]\n    holder.bind(msg)\n    holder.itemView.onClick {\n        mainActivity.startActivity<MessageDetailActivity>(\"id\" to msg.msg_id)\n    }\n}\n\noverride fun getItemCount(): Int = msgSet.size\n\n}\n```. ",
    "AbduazizKayumov": "I have created companion ids to the anko component so that they can be used to identify in view holders. Let me know your thoughts about that:\n```\nclass MovieUI : AnkoComponent{\ncompanion object {\n    val tvTitleId = 1\n    val tvYearId = 2\n}\n\noverride fun createView(ui: AnkoContext<ViewGroup>): View = with(ui){\n    verticalLayout {\n        lparams(matchParent, wrapContent)\n        padding = dip(16)\n\n        textView {\n            id = tvTitleId\n            layoutParams = LinearLayout.LayoutParams(matchParent, wrapContent)\n            text = \"Sherlock\"\n            textSize = 16f // <- it is sp, no worries\n            textColor = Color.BLACK\n        }\n\n        textView {\n            id = tvYearId\n            layoutParams = LinearLayout.LayoutParams(matchParent, wrapContent)\n            text = \"2009\"\n            textSize = 14f\n        }\n    }\n}\n\n}\nAnd from the view holder, you may access them in this way:\n    inner class MovieViewHolder(itemView: View) : RecyclerView.ViewHolder(itemView) {\n    var tvTitle: TextView\n    var tvYear: TextView\n\n    init {\n        tvTitle = itemView.findViewById(MovieUI.tvTitleId)\n        tvYear = itemView.findViewById(MovieUI.tvYearId)\n    }\n\n}\n\n```\nThis approach is handy since ids are tied to the UI component itself, so wherever you re-use the component, it is easy to find the ids rather than searching through ids.xml.. ",
    "robertdo": "I've just been tackling with this issue as well. My main goal is to leverage the performance efficiencies of no inflation and no findViewbyId. The no inflation issue is already solved here, but I was struggling to avoid findViewById. Below is my solution. Would love to hear thoughts.\n```kotlin\nclass LunchMenuAdapter(var mealList: List) : RecyclerView.Adapter() {\n   override fun onCreateViewHolder(parent: ViewGroup?, viewType: Int): LaunchMenuItemViewHolder? {\n       return LaunchMenuItemViewHolder(LunchMenuItemUI(AnkoContext.createReusable(parent!!.context, parent)))\n   }\noverride fun onBindViewHolder(holder: LaunchMenuItemViewHolder?, position: Int) {\n       val meal = mealList[position]\n       holder!!.bind(meal)\n   }\noverride fun getItemCount(): Int {\n       return mealList.size\n   }\n}\nclass LunchMenuItemUI(ankoContext: AnkoContext) : AnkoComponent {\n   val container: LinearLayout\n   lateinit var name: TextView\ninit {\n      container = createView(ankoContext)\n   }\noverride fun createView(ui: AnkoContext): View {\n       return with(ui) {\n           linearLayout {\n               lparams(width = matchParent, height = dip(48))\n               orientation = LinearLayout.HORIZONTAL\n               name = textView {\n                   id = R.id.lunch_menu_name\n                   textSize = 16f\n               }\n           }\n       }\n   }\n}\n// The ViewHolder takes in a LunchMenuItemUI rather than a View\nclass LaunchMenuItemViewHolder(itemView: LunchMenuItemUI) : RecyclerView.ViewHolder(itemView.container) {\n   val name: TextView = itemView.name // No findViewById needed here\nfun bind(meal: Meal) {\n       name.text = meal.name\n   }\n}\n```. ",
    "mridah": "@gregschlom findOptional gives an error? how to use it ? and what it does ?. ",
    "SupaHam": "At first it didn't work, but then I realised I needed to hit the refresh button in the UI (which refreshed gradle?) then it worked. Currently using Anko 0.8.3, works great! Thanks a bunch.\n. ",
    "Adambl4": "Android Studio 2.1.1\ncompile 'org.jetbrains.anko:anko-sdk23:0.9-beta1'\nGot the error :\nRendering Problems The following classes could not be found:\n-\u00a0__anko.preview.View\n. @yanex \nclass NotificationsListUI : AnkoComponent<NotificationsList> {\n    override fun createView(ui: AnkoContext<NotificationsList>) = with(ui) {\n        textView {\n            text = \"test\"\n        }\n    }\n}\n. Yes, it's a bug. Just put the following code anywhere:\nfun <T : android.view.View> T.collapsingToolbarlparams(\n        width: kotlin.Int = wrapContent, height: kotlin.Int = wrapContent,\n        init: android.support.design.widget.CollapsingToolbarLayout.LayoutParams.() -> kotlin.Unit = {}): T {\n    val layoutParams = android.support.design.widget.CollapsingToolbarLayout.LayoutParams(width, height)\n    layoutParams.init()\n    this.layoutParams = layoutParams\n    return this\n}\nAnd then\ncollapsingToolbarLayout {\n                    view().collapsingToolbarlparams {\n                        collapseMode = CollapsingToolbarLayout.LayoutParams.COLLAPSE_MODE_PARALLAX\n                    }\n                }. No, it's something wrong with your code. Post it.. FrameLayout.LayoutParams doesn't have weight property.. ",
    "niray": "I'm installed the v0.9 ,and click the refresh button ,but when builded finish ,\nwill display some wrong , that's the log ,please fix it.\n11:34:42 Plugin Error: Kotlin threw an uncaught IndexNotReadyException. Disable Plugin\n11:34:42 IndexNotReadyException: Please change caller according to com.intellij.openapi.project.IndexNotReadyException documentation\nRendering Problems\n The following classes could not be found:\n-\u00a0__anko.preview.View (Change to android.media.tv.TvView, Fix Build Path, Create Class)\n Tip: Try to build the project.\n. 11:18:12 Plugin Error: Kotlin threw an uncaught IndexNotReadyException. Disable Plugin\n11:18:12 IndexNotReadyException: Please change caller according to com.intellij.openapi.project.IndexNotReadyException documentation\n. ",
    "OuSatoru": "Error with: com.intellij.diagnostic.PluginException: org/jetbrains/android/uipreview/AndroidLayoutPreviewToolWindowManager [Plugin: org.jetbrains.kotlin.android.dsl] when open a recent or start a new project when installed 0.9b, Android Studio 2.2.3. ",
    "chengxinping": "Cannot load project: com.intellij.ide.plugins.PluginManager$StartupAbortedException: com.intellij.diagnostic.PluginException: org/jetbrains/android/uipreview/AndroidLayoutPreviewToolWindowManager [Plugin: org.jetbrains.kotlin.android.dsl]    when open an Android Project (0.9b android studio 2.2.3). ",
    "gaojingwen945": "0.10.4-2 Always resulting in: Plugin Error: Anko Support threw an uncaught RuntimeException.. ",
    "revarnami": "I Cannot load project: \ncom.intellij.ide .plugins.PluginManager$StartupAbortedException:\ncom.intellij.diagnostic.PluginException:\norg/jetbrains/android/uipreview/AndroidLayoutPreviewToolWindowManager\n[Plugin: org.jetbrain.kotlin.android.dsl]\n. ",
    "IgorGee": "I'm getting the same error as @revarnami \n. ",
    "niilante": "Sup Guys\n Any one with a fix cause I have a same problem with my view. Android studio threw me this:\nCannot load project: com.intellij.ide.plugins.PluginManager$StartupAbortedException: com.intellij.diagnostic.PluginException: org/jetbrains/android/uipreview/AndroidLayoutPreviewToolWindowManager [Plugin: org.jetbrains.kotlin.android.dsl]\n. ",
    "Hesamedin": "I just upgraded my AndroidStudio on stable channel and got this error. any solution/workaround?\n. I just deleted Anko DSL plugin and AS 2.2 could start without problem.\n. ",
    "faith-hb": "\u89e3\u51b3\u529e\u6cd5\uff1a\u5c06anko\u63d2\u4ef6\u5378\u8f7d\u6389\u5c31\u53ef\u4ee5\u4e86\uff1b\n. ",
    "baghad": "I just deleted Anko DSL plugin and AS 2.2 could start without problem.\nHesamedin : this is ok , thanks verymacth\n. ",
    "Edward608": "I hope the Anko team can fix this problem ASAP as this is one of the main feature of anko, without the preview its quite hard to use Anko to build layouts\n. Still no preview in AS 3.0 beta 4. When did google talked about anko? Can someone give me the source of reference?. ",
    "BukT0p": "Still there, AndroidStudio 2.2.1. Anko version 0.9\n. ",
    "SuhairZain": "@yanex Hi, any updates on this issue? I'm having a bit of a trouble designing layouts without a preview. Any workaround other than downgrading to AS 2.1?\n. @neverwoodsS \nThat's a good workaround. I was thinking of doing a PR to make Anko generate an id by default if it's not already set. I haven't received any comment on it so far. Think I'll go ahead and do it anyway.. ",
    "yousuf-haque": "\nWe will try to fix this as early as possible, but for now the only possible way is to use AS 2.1 or IntelliJ IDEA.\n\nHey I'm using intellij ultimate 2016.3 and can't seem to get this to work. Any tips?. ",
    "piotrek1543": "@yousuf-haque nope as well with Android Studio 2.2.1. @blazeur Anko is not compatible with all 2.1 and later Android Studio versions.. @cuddlecheek check this post: http://yaronvazana.com/2015/10/29/adding-rtl-support-to-your-android-app-tutorial/\nAll you need to do is set marginStart, marginEnd, paddingStart, paddingEnd etc.\nwhere:\nstart is a position left on the phones with RTL support enabled.\nend is a position right on the phones with RTL support enabled.. @mikesol add new pull request with your changes, It might be useful. I've founded it here: https://github.com/Kotlin/anko/blob/8f8a6c7485fab9c8492f2ccfd5cecb97e3ce7f30/anko/library/static/platform/src/CustomViewProperties.kt\nhttps://github.com/Kotlin/anko/blob/8f8a6c7485fab9c8492f2ccfd5cecb97e3ce7f30/anko/library/static/platform/src/CustomViewProperties.kt\nI'm new here, but I think that it would generate properties for specific sdk version in your project. So if guy would set in his project buildsdk25 it would have your change, but if he would downgrade it to sdk23 he would miss your change, so... add in both files, just in case ;-). Could you explain why did you add this in sdk25 folder? It already exists in sdk23 version of Properties file.\n. ",
    "sindrenm": "@LouisCAD: Funny, I'm doing the exact same thing, February 2nd, 2017. Was also hoping to have this fixed by then. It's a bit annoying to have to first create an XML layout for the preview and then convert to Anko DSL.. @pinkApple: Not right now. The plugin doesn't support newer versions of Android Studio.. @stackprogramer: You will need to disable the Anko\u00a0DSL\u00a0Preview plugin, as mentioned above.\nConfigure \u2192 Settings \u2192 Plugins \u2192 Anko\u00a0DSL\u00a0Preview (untick the checkbox to the right). This is probably a duplicate of #308. :wink: \nHowever, I would suggest leaving this issue open until the JetBrains folks see this and are able to push it out. :smile: . Nice, @yanex!. Now that they've [landed on ConstraintLayout 1.0][1], perhaps they're also done changing up the internals of the Previewer? :tada: \n[1]: https://sites.google.com/a/android.com/tools/recent/constraintlayout10isnowavailable. IIRC, doAsync was called async previously. It was renamed as to not conflict with the kotlinx.coroutines function by the same name. So Anko's async is probably deprecated in favor of doAsync, but not removed entirely because of backward compatibility.. Perhaps a different name that is a little bit more descriptive of what it's getting for you? Something like resource() or something?. Oh, sorry, I totally misread the function. Carry on, nothing to see here. :roll_eyes: . ",
    "krokofant": "Sad to see that this has been broken for so long and that support is only for legacy versions. I got my hopes up from reading the documentation. \ud83d\ude2c . @tmseiler There is a new issue for all these related issues, check #314 . @trubitsyn It's already been out a while.. The documentation still seem to contain broken code. Using kotlin 1.0.5-3 and anko 0.9.\n\nMixing named and positioned arguments is not allowed\n\ndb?.createTable(\"Customer\", ifNotExists = true,\n                \"_id\" to INTEGER + PRIMARY_KEY + UNIQUE,\n                \"name\" to TEXT,\n                \"photo\" to BLOB). I've spent hours with scratching my head about this today... . Does this mean something is happening around this issue?. ",
    "pinkApple": "I also got this error until  disabled anko plugin, any other way to solve this problem?. not support 2.2.3, you should disable the plugin.. ",
    "stackprogramer": "when i updated android studio \ud83d\udc4d \nit returns this errors and can not open android project\nCannot load project: com.intellij.ide.plugins.PluginManager$StartupAbortedException: com.intellij.diagnostic.PluginException: com/android/builder/model/BaseArtifact [Plugin: org.jetbrains.android]. i did this,error not fix finally i uninstalled and i downloaded most updated  stable android studio thanks. ",
    "haydenholligan": "Is there an update on the progress of this? . ",
    "Prokky": "Any update on this bug?. Any update?. ",
    "twero": "I am now trying to update!\nbecause i am also having this kind of error!. i already okay with this\ni noticed error was gone\nOn Tue, Jan 24, 2017 at 5:27 AM, Xavier Fern\u00e1ndez Salas \nnotifications@github.com wrote:\n\n+1, this issue blocks our team to use Anko... :(\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/202#issuecomment-274622286, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ANpW09WdCZDkrfFil800e71KSuYhEDysks5rVRs1gaJpZM4Iq490\n.\n. \n",
    "MewX": "@twero You should downdate :-(. ",
    "xavier-fernandez": "+1, this issue blocks our team to use Anko... :(. It would also be interesting to support co-routines natively :). ",
    "glnix": "+1\nAS 2.2.3\nAnko Preview Plugin 0.9b. ",
    "dEn13L": "The problem still here\nAndroid Studio 2.3 Beta 4\nBuild #AI-162.3715353, built on February 8, 2017\nJRE: 1.8.0_112-release-b06 x86_64\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\nAnko DSL Preview 0.9b. ",
    "tmseiler": "Just encountered this myself.. ",
    "zhiqizhu": "Any update?. ",
    "trubitsyn": "Still there with AS 2.3.3, Anko DSL Preview 0.9b\nUPD: Looking forward to getting 0.10 released. Unfortunately 0.10.1 is not available through AS plugin installer yet.. ",
    "kevinvanmierlo": "It says in the wiki: \n\nThe Anko Support plugin is currently supported only in Android Studio 2.4+.\n\nThe stable version is at 2.3.0 right now. So it probably only works with the canary version. Which is 3.0 canary 5. . ",
    "Aheadboy": "plugin can not use in IntelliJ IDEA  too @yanex 171.46..... i have already install the plugin,and extend the AnkoComponent interface.but there is nothing show for me.event not show grey \"anko layout preview\".am i find wrong place?where you gays\nfind \"anko layout preview\" .my android studio is 3.0,  canary 8.\nhope solve this  as quick as possible. ",
    "BryanJBryce": "@rakshakhegde Whats the status on this?. ",
    "AdamRoweSys": "Has anyone been able to use this yet? I'm getting unresolved reference using anko version 0.10.1. @jorgegil96 Yeah, I was using the meta-dependency compile \"org.jetbrains.anko:anko:$anko_version\" not realizing the design components were separate. Thanks!. ",
    "jorgegil96": "@AdamRoweSys Make sure you have compile \"org.jetbrains.anko:anko-design:$anko_version\" in your dependencies. ",
    "abond": "Define this somewhere:\ninline fun ViewManager.textInputEditText() = textInputEditText {}\ninline fun ViewManager.textInputEditText(theme: Int = 0, init: TextInputEditText.() -> Unit) = ankoView({ TextInputEditText(it) }, theme, init)\nand you'll be able to write this:\ntextInputLayout {\n    textInputEditText {\n        ...\n    }\n }\n. @Rahulkr2 The principles of building DSL's in Kotlin well described in this article https://kotlinlang.org/docs/reference/type-safe-builders.html. \nReading it should help you understand how Anko DSL works.. You are right. \nAdded this one too.\n. Find out that it is official android documentation error. \nThe method introduced in API lvl 23 View.setForegroud, is reported to be API level 1 on the Android Developer Guide. \n. Ofcourse\ud83d\ude03\n. ",
    "Rahulkr2": "@abond Could you please elaborate ?  Why does this work ?. @jonathanrz Could you please elaborate ? Why does this work ?. val dd: AlertDialog = alert {  }\nAbove code giving below error.\nError:(621, 35) Type mismatch: inferred type is AlertBuilder but AlertDialog was expected\nHow to do it correctly. . ",
    "megifernanda": "how to make XML android.support.design.widget.TextInputEditText in kotlin?. ",
    "wiradikusuma": "Any workaround while waiting 0.9.1?\n. ",
    "LloydBlv": "@fboldog do we have any fix other than building and compiling the project on this issue?\n. ",
    "ChristianBecker": "@BoD: You can of course use an older version, like 0.8.3:\ncompile 'org.jetbrains.anko:anko-common:0.8.3'\n. ",
    "edunuzzi": "Same problem here...\n. ",
    "lhc-clover": "Not working in 2.0 too.\n. ",
    "squeezymo": "Indeed, I missed it somehow. Also, it does not reproduce on Android M.\nThanks.\n. ",
    "seaskyways": "What is the progress of this ?. I am having exact similar error.\nThe following classes could not be instantiated:\n-\u00a0android.support.v7.widget.AppCompatImageView (Open Class, Show Exception, Clear Cache)\n-\u00a0__anko.preview.View (Open Class, Show Exception, Clear Cache)\n-\u00a0android.support.v7.widget.AppCompatTextView (Open Class, Show Exception, Clear Cache)\n. +1. Snackbar takes two parameters, the first is View, the second is the message. SQlite itself doesn't have dates and booleans, instead sqlite uses integer for both. ",
    "rostopira": "Since PercentLayout is deprecated now, will ConstraintLayout be supported soon?\n\nThe support-percent module has been deprecated. Clients of this module should migrate to the new ConstraintLayout widget\n\nhttps://developer.android.com/topic/libraries/support-library/revisions.html. #333 \nFound that issue after created PR. OMG, they caught it by default? Awesome, going to remove all that crappy try-catch blocks\nActually, I think it should log by default but also be configurable. But that just an IMHO. @yanex And how can I use it? I missed something in docs?. ",
    "guoyingtao": "I want to know the progress too.. ",
    "Lakedaemon": "I'm considering using anko for my next project, but this issue worries me.\nAt the moment, is it possible to embed a ConstraintLayout inflated through xml in a view built with anko ?\nAre there trade off ?. ",
    "vcuhar": "yes, it should be possible to inflate. But from my little experience it is better to stick with standard layouts for now. Anko feels like is not complete in term of designer and different configurations. But you can mix both approaches at some extent.\nTake a look at kotlin compiler android extensions.. I think project is almost dead. Maybe maintainer is busy on other tasks. ",
    "GrzegorzDyrda": "Any update on this?. ",
    "kuhnroyal": "Added a PR, using this in a project. So check it out if you can.. @spkingr At the moment you need to checkout my fork and build it yourself. I am not sure when and if this will get merged. But I am sure people testing it will help.. Yes, I just replaced my code from the PR with the 0.10.4. Works like a charm!. ",
    "spkingr": "@kuhnroyal  Great job, so, how to get it added to my project? 'org.jetbrains.anko:anko-constraint-layout:0.10.2' does not work, thanks very much!. @kuhnroyal I will try, thank you!. Same question, anyone can help?. Solved my problem! Great!. @pandasys Thank you very much! I tried and the code compiles successfully, but when the other views connect to the guideline, the constraint layout will display incorrectly, in my recyclerview the item use anko constraintlayout with guideline displays nothing:\napplyConstraintSet {\n        connect(\n                START of ID_IMAGE_VIEW to START of PARENT_ID margin dip(10),\n                END of ID_IMAGE_VIEW to START of ID_GUIDELINE margin dip(10)\n        ). @pandasys Thanks again, I have solved this problem, just set the LayoutParams in the item view of RecyclerView:\n```\nconstraintLayout {\n            layoutParams = ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)\n        guideline {\n            id = ID_GUIDELINE\n        }.lparams(width = matchConstraint, height = matchConstraint){\n            orientation = ConstraintLayout.LayoutParams.VERTICAL\n            guidePercent = 0.25f\n        }\n        //................\n\n}\n``. Doesanko` work with AndroidX now?. ",
    "Antimonit": "Hi guys. I really liked using the constraint layout but also using Anko for building stuff. The two are not compatible with each other, so I decided to make a library ^_^\nhttps://github.com/AckeeCZ/anko-constraint-layout\nIt is a bigger project than I originally intended. It adds custom DSL specifically made for use with constraint layout and other stuff like automatic generation of ids for views. Readme should be explanatory enough.\nWe use it in our company for new projects and so far everyone is happy with it. Hopefully, it will be useful for others as well.\n. ",
    "paulblessing": "If this gets changed, the same logic likely applies to bundleOf() and Fragment.withArguments() (both versions).\n. ",
    "Anthonyeef": "All right, just figure it out if I wrote gravity in lparams, that will be layout_gravity as I wish.\nissue close.\n. @kiangtengl \nlparams should be wrap under layout. You can apply lparams method to whatever view you want.\nFor example:\nKotlin\ntextView {\nxxx\n}.lparams {\nxxx\n}\nThis won't work.\nWhile try to wrap this textView under linearLayout:\nKotlin\nlinearLayout {\n   lparams {\n      width = wrapContent\n      height = wrapContent\n    }\n    textView {\n    xxxx\n    }.lparams {\n    width = matchParent\n    height = wrapContent\n    }\n}\nThis should work.\n. All right I found the answer via Android's document. There is another method called setLineSpacing which I could use to set extra line spacing as I wish.\nclose this issue.\n. @fboldog  sure. The project I mentioned above is quite business thus I can't directly post its code and screenshot here, but I am willing to create a project to demonstrate what the issue looks like.\nThx for the reply, btw ;-)\n. I finally figured out what's going wrong there in our project. It's our fault and I think Anko do it in the right way.\nFor some reason we decided to use dp as the font unit in our app. We are making a digital reader application and our designer somehow wish our user don't try to change font scale via system settings( so we use dp unit which won't change font size once user try to change it via system setting). And when we use Anko for TextView in our app, anko will apply default sp unit for TextView, which cause some different display results( but it should be correct to use sp as default unit in Android development)\nIt should not be considerd as Anko's bug, it's more like my misunderstood of something. And for that reason I mentioned above, I think I have to continue using dp as the unit of our app( and I just found that it's simple with Kotlin's extension method)\nI will close this issue. Thanks for taking a look at this issue( and figured out it's actually not an issue at all...\n. Looks like there's not an Anko attribute for drawableLeft. But it makes sense: if you use normal way to implement drawableLeft with Java, you also need to do it programmatically.\nI suggest you make it an extension method with Kotlin, later make it a self define attribute for TextView.\nFor example:\nvar TextView.drawableLeft: Int\n    get = throw UnsupportOperationException(\"get method for drawableLeft is not supported\")\n    set(value) = Utils.setDrawableLeft(this, value)\nYou need to implement the detail with Utils.setDrawableLeft() method yourself. Then after all this is ready, it should be able to use drawableLeft as a TextView attribute inside Anko.. ",
    "alan-rodriguez": "My project is not using the DSL features of Anko (yet). Being able to access builder: AlertDialog.Builder? was important because it let me call AlertDialog.Builder.setView(int layoutResId) when creating dialogs with custom layouts.\n. ",
    "kevinmost": "I agree it is annoying to have to have the Context and value involved every time you want to convert pixels to dps, but as @yanex pointed out, getSystem() is definitely unsafe, considering that multi-screen is a possibility.\nHow about some sort of DSL for this?\n``` kotlin\ninline fun Context.dips(block: DipsContext.() -> Unit) {\n  DipsContext(this).apply(block)\n}\nclass DipsContext(context: Context) {\n  private val density = context.resources.displayMetrics.density\nval Int.dp: Int\n    get() = (this * density).toInt()\n}\n```\nUsage would be:\nkotlin\ncontext.dips {\n  8.dp.let { view.setPadding(it, it, it, it) }\n}\nSimilar extensions would be nice to have for sp and things like that of course.\n. ++ on this, this is really important for interop in my opinion. It would be great if I could make my custom views extend _LinearLayout, for example, so that I can access lparams as I create them, but extending _LinearLayout would make my view broken for XML inflation.. ",
    "pcholt": "Did this ever get resolved? Because I'm thinking along the same lines.\nI don't think it would be hard to do an idiomatic kotlin menu builder.. So... you would use bottomSheet instead of alert to create the bottom sheet dialog? Probably with the ability to create a customView instead of a list, and intercept the cancel and dismiss actions:\n```\nbottomSheet {\n    customView {\n        editText()\n    }\n    onCancel {\n    }\n    onDismiss {\n    }\n}.show()\n```. ",
    "u201701": "Please do another release (it's been a while) -- the pull request has been merged but it is not included in the current release.. +1 need this a lot. +1 @developers please at least confirm that this is not just a matter of adding a dependency and indeed needs some work on the dsl; thanks. ",
    "Gorita": "I opened a pull request #228 \nI hope it would be merged \ud83d\ude03 \n. ",
    "cryser29": "I'm getting the same error +1\n. @yole Thanks! It works for me\n. ",
    "kpiljoong": "All Log.* will log to logcat regardless of what the current log level is. However, AnkoLogger.* will only log to logcat when its log level is loggable.\n. ",
    "mseleng": "Oh, thanks for the explanation. \nI am closing the issue.\n. ",
    "dlazerka": "Not sure it it's the same problem, or a bug in Proguard:\n[proguard] Unexpected error while performing partial evaluation:\n [proguard]   Class       = [kotlin/reflect/jvm/internal/impl/renderer/DescriptorRendererImpl]\n [proguard]   Method      = [renderPossiblyInnerType(Ljava/lang/StringBuilder;Lkotlin/reflect/jvm/internal/impl/descriptors/PossiblyInnerType;)V]\n [proguard]   Exception   = [java.lang.IllegalArgumentException] (Stacks have different current sizes [0] and [1])\n [proguard] Error: Stacks have different current sizes [0] and [1]\nCan be workarounded by using -dontoptimize Proguard option.\nProguard version 5.2.1\nKotlin version 1.1.2-4. ",
    "JNexil": "May'be async reserved as keyword.\n. ",
    "yybear": "hi @Jamefrus , here is the async:\nfun <T> T.async(task: AnkoAsyncContext<T>.() -> Unit): Future<Unit> {\nval context = AnkoAsyncContext(WeakReference(this))\nreturn BackgroundExecutor.submit { context.task() }\n}\nfrom anko-common-0.8.3-sources.jar!\\org\\jetbrains\\anko\\Async.kt\ni think it's just a fun.\n. it's really strange. in anko-common-0.8.3-sources.jar!\\org\\jetbrains\\anko\\Async.kt, there is another fun asyncResult:\nfun <T, R> T.asyncResult(task: AnkoAsyncContext<T>.() -> R): Future<R> {\nval context = AnkoAsyncContext(WeakReference(this))\nreturn BackgroundExecutor.submit { context.task() }\n}\nit can be used like asyncResult {...}\nso async is really special, but we don't know the reason.\n. @Jamefrus  u r right, http://stackoverflow.com/questions/34803897/what-are-the-reserved-keywords-in-kotlin\nthanks!\n. ",
    "kufii": "Ok that makes sense\n. ",
    "hoha": "This is a report I've got from IntelliJ exception analyzer (Android Studio build 143.1821):\n```\norg/jetbrains/kotlin/asJava/KtLightElement\njava.lang.NoClassDefFoundError: org/jetbrains/kotlin/asJava/KtLightElement\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.getKtClass(DslPreviewToolWindowManager.kt:332)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.resolveClassDescription(DslPreviewToolWindowManager.kt:366)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.getAncestors(DslPreviewToolWindowManager.kt:354)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.resolveAvailableClasses(DslPreviewToolWindowManager.kt:319)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewToolWindowManager.initToolWindow(DslPreviewToolWindowManager.kt:162)\n    at org.jetbrains.android.uipreview.AndroidLayoutPreviewToolWindowManager$5.run(AndroidLayoutPreviewToolWindowManager.java:491)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:337)\n    at com.intellij.util.ui.update.MergingUpdateQueue.execute(MergingUpdateQueue.java:327)\n    at com.intellij.util.ui.update.MergingUpdateQueue$3.run(MergingUpdateQueue.java:271)\n    at com.intellij.util.ui.UIUtil.invokeLaterIfNeeded(UIUtil.java:2361)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:283)\n    at com.intellij.util.ui.update.MergingUpdateQueue.flush(MergingUpdateQueue.java:244)\n    at com.intellij.util.ui.update.MergingUpdateQueue.run(MergingUpdateQueue.java:234)\n    at com.intellij.util.concurrency.QueueProcessor.runSafely(QueueProcessor.java:238)\n    at com.intellij.util.Alarm$Request$1.run(Alarm.java:352)\n    at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.runNextEvent(LaterInvocator.java:337)\n    at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.run(LaterInvocator.java:321)\n    at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)\n    at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:749)\n    at java.awt.EventQueue.access$500(EventQueue.java:97)\n    at java.awt.EventQueue$3.run(EventQueue.java:702)\n    at java.awt.EventQueue$3.run(EventQueue.java:696)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:75)\n    at java.awt.EventQueue.dispatchEvent(EventQueue.java:719)\n    at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:866)\n    at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:654)\n    at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:381)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\nCaused by: java.lang.ClassNotFoundException: org.jetbrains.kotlin.asJava.KtLightElement PluginClassLoader[org.jetbrains.kotlin.android.dsl, 0.9b]\n    at com.intellij.ide.plugins.cl.PluginClassLoader.loadClass(PluginClassLoader.java:68)\n    at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n    ... 34 more\n```\n. ",
    "leandroBorgesFerreira": "same here\n. Same here with AS 3.0.0. ",
    "audax": "Will there be a fix for that or is the preview plugin deprecated/unmaintained?\n. ",
    "Dragas": "In my opinion, it should follow the iterator implementation, not for(i in 0..size()-1), as that would prevent possible discrepancies if the said array modifies itself.\nThat said, current implementation does seem to be prone to IndexOutOfBoundsException if the former happens by self modification as well as ConcurrentModificationException\n. ",
    "miquelbeltran": "This issue was referring to the documentation in the docs folder, but since the documentation was moved to the wiki it was not fixed there.\nAlso is unnecessary the safe-call to createTable as db is a non-null receiver.. ",
    "ndac-todoroki": "can't we do something like this?\nkotlin\ndb.createTable(\"Customer\",\n                ifNotExists = true,\n                columns = *arrayOf(\n                        \"id\" to INTEGER + PRIMARY_KEY + UNIQUE,\n                        \"name\" to TEXT,\n                        \"photo\" to BLOB\n                )\n        ). I think this isn't fixed in the 1.10.1 source file (nor built through Gradle).\nThe master is fixed, but the changes are not included in the release somehow\nEDIT\n1.10.0 was OK, it reverted in 1.10.1. ",
    "not3": "I use version:0.10.0-beta-1, throw java.lang.ClassCastException: android.widget.LinearLayout$LayoutParams cannot be cast to android.widget.FrameLayout$LayoutParams\ntextInputLayout {\n                        emailView = autoCompleteTextView {\n                            hintResource = R.string.prompt_email\n                            inputType = InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS\n                            maxLines = 1\n                        }.lparams(width = matchParent)\n                    }.lparams(width = matchParent). can anyone fix this bug\njust like this, so simple\n```open class _CollapsingToolbarLayout(ctx: Context): CollapsingToolbarLayout(ctx) {\n    fun  T.lparams(\n            c: Context?,\n            attrs: AttributeSet?,\n            init: CollapsingToolbarLayout.LayoutParams.() -> Unit = org.jetbrains.anko.design.defaultInit\n    ): T {\n        val layoutParams = CollapsingToolbarLayout.LayoutParams(c!!, attrs!!)\n        layoutParams.init()\n        this@lparams.layoutParams = layoutParams\n        return this\n    }\nfun <T: View> T.lparams(\n        width: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n        height: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n        init: CollapsingToolbarLayout.LayoutParams.() -> Unit = org.jetbrains.anko.design.defaultInit\n): T {\n    val layoutParams = CollapsingToolbarLayout.LayoutParams(width, height)\n    layoutParams.init()\n    this@lparams.layoutParams = layoutParams\n    return this\n}\n\nfun <T: View> T.lparams(\n        width: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n        height: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n        gravity: Int,\n        init: CollapsingToolbarLayout.LayoutParams.() -> Unit = org.jetbrains.anko.design.defaultInit\n): T {\n    val layoutParams = CollapsingToolbarLayout.LayoutParams(width, height, gravity)\n    layoutParams.init()\n    this@lparams.layoutParams = layoutParams\n    return this\n}\n\nfun <T: View> T.lparams(\n        source: ViewGroup.LayoutParams?,\n        init: CollapsingToolbarLayout.LayoutParams.() -> Unit = org.jetbrains.anko.design.defaultInit\n): T {\n    val layoutParams = CollapsingToolbarLayout.LayoutParams(source!!)\n    layoutParams.init()\n    this@lparams.layoutParams = layoutParams\n    return this\n}\n\nfun <T: View> T.lparams(\n        source: ViewGroup.MarginLayoutParams?,\n        init: CollapsingToolbarLayout.LayoutParams.() -> Unit = org.jetbrains.anko.design.defaultInit\n): T {\n    val layoutParams = CollapsingToolbarLayout.LayoutParams(source!!)\n    layoutParams.init()\n    this@lparams.layoutParams = layoutParams\n    return this\n}\n\nfun <T: View> T.lparams(\n        source: CollapsingToolbarLayout.LayoutParams?,\n        init: CollapsingToolbarLayout.LayoutParams.() -> Unit = org.jetbrains.anko.design.defaultInit\n): T {\n    val layoutParams = CollapsingToolbarLayout.LayoutParams(source!!)\n    layoutParams.init()\n    this@lparams.layoutParams = layoutParams\n    return this\n}\n\n}\n```\nwe need someone to do this job\n. ",
    "jonathanrz": "I overrode the textInputLayout also and it solved the problem:\ninline fun ViewManager.appCompatEditText(theme: Int = 0, init: AppCompatEditText.() -> Unit) = ankoView(::AppCompatEditText, theme, init)\ninline fun ViewManager.textInputLayout(theme: Int = 0, init: TextInputLayout.() -> Unit) = ankoView(::TextInputLayout, theme, init)\n. @Rahulkr2 actually I don't know. I can only think that the TextInputLayout that the native anko function textInputLayout creates is different from the TextInputLayout from android support library.. ",
    "jayrave": "Reason for ClassCastException => setting layout params via anko's lparams sets the params only after the view is added to its parent. While this works out for other ViewGroups, it doesn't work while adding an EditText to a TextInputLayout (which by itself is a LinearLayout) because of its addView method\n```java\n    @Override\n    public void addView(View child, int index, final ViewGroup.LayoutParams params) {\n        if (child instanceof EditText) {\n            // Make sure that the EditText is vertically at the bottom, so that it sits on the\n            // EditText's underline\n            FrameLayout.LayoutParams flp = new FrameLayout.LayoutParams(params);\n            flp.gravity = Gravity.CENTER_VERTICAL | (flp.gravity & ~Gravity.VERTICAL_GRAVITY_MASK);\n            mInputFrame.addView(child, flp);\n        // Now use the EditText's LayoutParams as our own and update them to make enough space\n        // for the label\n        mInputFrame.setLayoutParams(params);\n        updateInputLayoutMargins();\n\n        setEditText((EditText) child);\n    } else {\n        // Carry on adding the View...\n        super.addView(child, index, params);\n    }\n}\n\n```\nAs we can see from the implementation, instead of adding the child which is an EditText to itself, it is instead added to a FrameLayout (mInputFrame). When params are set via lparams for the EditText added to TextInputLayout, it creates an instance of LinearLayout.LayoutParams & sets it on the view (which by now lives inside a FrameLayout). During the measure pass, FrameLayout assumes that all its children are going to have valid FrameLayout.LayoutParams & so tries to cast but it blows up with an exception\n. ",
    "krokyze": "Setting layoutParams this way works:\ntextInputLayout {\n    editText {\n        layoutParams = LinearLayout.LayoutParams(matchParent, wrapContent)\n    }\n}. Maybe it's possible to use App Compat views as default?\nFor example if you add to gradle org.jetbrains.anko:anko-appcompat-v7 then textView {} would create AppCompatTextView not TextView. This way it would work the same as expected like using TextView in xml.\nAs far as I understand if you use TextView in xml, then on build Android Studio replaces them with AppCompatTextView.\nAppCompatTextView: This will automatically be used when you use TextView in your layouts and the top-level activity / dialog is provided by appcompat. You should only need to manually use this class when writing custom views.. ",
    "TomislavHorvat1": "Why would you set lparams on the editText? The idea of the TextInputLayout is to hold an EditText, so you should set lparams on the textInpuLayout instead of the editText.\nDoing it this way you get no crashes.\npwdLayout = textInputLayout {\n\n    isPasswordVisibilityToggleEnabled = true\n\n    pwdEditText = editText {\n        inputType = TYPE_CLASS_TEXT or TYPE_TEXT_VARIATION_PASSWORD\n        hint = resources.getString(R.string.login_dialog_password_hint)            \n    }\n\n}.lparams(matchParent, wrapContent){\n    marginEnd = dip(24)\n    marginStart = dip(24)\n    bottomMargin = dip(8)\n}.\n",
    "sonhanguyen": "this is how I did it\n``` kotlin\n//views/utils.kt\nfun > ViewGroup.mount(component: T, onMount: (T.() -> Unit)? = null) =\n    context.render(component as AnkoComponent).apply {\n        addView(this)\n        onMount?.invoke(component)\n    }\ninline fun Context.render(component: AnkoComponent) =\n    (component as AnkoComponent).createView(AnkoContext.createReusable(this))\n```\nusage:\nkotlin\nclass Component: AnkoComponent<SomeActivity> {\n      // ...\n}\n// in a ViewGroup closure\n       verticalLayout {\n            mount(Component(/*some props*/)){ \n                // do smt with Component, eg: hook up to sinks\n            }\n        }\n. ",
    "davidbilik": "Well thanks for @lukaspili and @yanex tip, but neither answers my question. I was not talking about custom view but about AnkoComponents . You have instructions for building Anko here https://github.com/Kotlin/anko/wiki/Building-Anko. I've tried it just now, succesfully generated jar file for Idea plugin and preview is working <3 Unfortunately I cannot make it to work with subclasses of my own BaseAnkoComponent :( But better than nothing. preview.jar.zip\nBut keep in mind that JB has probably reasons why they didnt release it yet, so dont report bugs until they do. You have to extract the zip. Honestly I dont know if that plugin will help you, because you must build your project to display layout in preview correctly. ",
    "dvma04": "inline fun ViewManager.ankoComponent(component: AnkoComponent<Context>, theme: Int = 0) = ankoComponent(component, theme) {}\ninline fun ViewManager.ankoComponent(\n        component: AnkoComponent<Context>,\n        theme: Int = 0,\n        init: View.(component: AnkoComponent<Context>) -> Unit\n): View {\n    return ankoView({ component.createView(AnkoContext.create(it)) }, theme, { init(component) })\n}\nI've based on @yperess comment and make it easier to insert any ankoComponent. You can easily use it.\n`\n    verticalLayout {\n            ankoComponent(someUI)\n        }\n\n`\nsomeUI in this case is instance of anko component you need to inject. ",
    "neverwoodsS": "I meet this trouble too. My solution is below, it works any way :) \nfun RelativeLayout.LayoutParams.aboveOf(v: View) {\n    v.checkId()\n    addRule(RelativeLayout.ABOVE, v.id)\n}\nfun RelativeLayout.LayoutParams.belowOf(v: View) {\n    v.checkId()\n    addRule(RelativeLayout.BELOW, v.id)\n}\nfun RelativeLayout.LayoutParams.leftOf(v: View) {\n    v.checkId()\n    addRule(RelativeLayout.LEFT_OF, v.id)\n}\nfun RelativeLayout.LayoutParams.rightOf(v: View) {\n    v.checkId()\n    addRule(RelativeLayout.RIGHT_OF, v.id)\n}\nfun RelativeLayout.LayoutParams.sameLeftWith(v: View) {\n    v.checkId()\n    addRule(RelativeLayout.ALIGN_LEFT, v.id)\n}\nfun RelativeLayout.LayoutParams.sameRightWith(v: View) {\n    v.checkId()\n    addRule(RelativeLayout.ALIGN_RIGHT, v.id)\n}\nfun View.checkId() {\n    if (id <= 0) {\n        addRandomId()\n    }\n}\nfun View.addRandomId() {\n    id = Random().nextInt(99999999)\n}. ",
    "charleskorn": "Perhaps at the very least all of the different layout rule methods (leftOf, rightOf etc.) can check the ID and throw an exception or log a warning if it is not set? I spent 20 minutes trying to work out why my layout wasn't being applied and there was nothing obviously wrong - until I realised that I needed to set the ID.. ",
    "mradzinski": "I was about to give up on this already... Pretty weird and flawed to offer an overloaded method which doesn't take effect unless another condition is met. I'm with @charleskorn that an exception should be thrown letting the developer know that below(view) doesn't work unless the view you are using as reference has an id. And same for all other rules that require an id to be present but offer a view overload.. ",
    "palto-blubek": "I'm not sure I understand what you mean by that. Are you saying there was a change since this issue was opened and now there's a default exception handler? . ",
    "miketrewartha": "Sorry to comment on a closed issue, but I didn't want to open yet another for discussion on this exact thing. I really agree here that exceptions should not be caught, because unintended exceptions (i.e. bugs) can then be captured by whatever exception handler a project has in place, like Crashlytics. I understand that you can now pass an exceptionHandler to doAsync(...), but I really don't want to rely on myself and every other dev on my team remembering to do so. I can think of two solutions, but maybe someone else can think of another:\n\nMake the default exception handler configurable, so that I can set it one time (e.g. in my Application, while I'm configuring logging and exception handling) and never have to remember to pass it to doAsync(...)\nIs there some way I can override the doAsync(...) methods with my own default exception handler and then delegate to Anko's implementation of the functions? I can't see a way to do it while keeping the doAsync names, but I'm still pretty new to Kotlin, so maybe there's a way I'm not thinking of.\n\nAnywho, thank you guys/gals for a killer library \ud83e\udd18 We love Anko.. ",
    "andrejp88": "I'm having the exact same issue, and having dug through the code a bit I came to the same conclusion. Have you found a solution for this in the meantime?\nI think that using a ViewIndicatorStrategy would solve the problem, since it looks like that one does not use the mTabLayoutId property whereas Label/LabelAndIconIndiciatorStrategy do. But it would be much nicer if you could just pass in a string and a drawable instead of creating a custom view for this.... ",
    "gimlet2": "As you can see in my report - I've created two extension functions - tabHost1 and I'm using them instead original tabHost. I haven't try it for a while. Maybe it is fixed in latest version of Anko. . ",
    "jlberrocal": "a year later seems is still the same, anko development is very abandoned. 4 months and there is no tracking on this issue?. i'm not being able to use viewPager, it crash when i set the pager. i already did it but it doesn't fix my issue, i had to use XML views to that particular case\ni test using both access ways \nkotlin\nmyCustomLazyVar = viewPager {\n   id = R.id.pager\n}\nthen in activity...\nkotlin\nval pager = findViewById<ViewPager>(R.id.pager)\nval pager = ui.myCustomLazyVar\nnone of above worked, when i set the adapter it cause an instant crash. trust me if i were able to get any stack trace most probably i were able to fix it, how ever <> means exactly that, app crash with no exception throwing, seems to be something at a very low level\nBTW the problem is not on those lines, the problem is setting the adapter, after that line is that the application just crash. if anko were no the problem then using the xml equivalent should fail too right? well that's not my case because XML view is working properly. i mean using equivalent xml view then setting the adapter via myViewPager.adapter = myAdapter . it should, because is a basic feature in android, so most probably most of developers could want to use it too. i'm already using a small variant of this implementation and until now has been working fine. Dude did you read the link I share? There is explained how to unbind, anyway is not very common stop listening for changes, if you're going in data binding direction is because you need to check for changes, no because you could want to be binding and unbinding. Same here with similar environment. As far as i know this is an Android restriction, BTW as most SO answers says: you must store your password somewhere so, if someone decompiles your application data will vulnerable anyway. using encryption in Android database is just a fake perception of security, if you need to store sensible data do it on a server, never on the device . This project is seems to be abandoned by JetBrains. ",
    "NeoScript": "Can confirm, I am also running into this issue, It does seem to be resolved by replacing the tabHost method with the ones from the original post.. ",
    "christophpickl": "hi, i've just encountered the very same problem. nesting one layout (linear) into another (relative) leads to an ambiguous lparams reference:\n\nthere is no way i know to tell the compiler whichlparams i mean, so it takes always the linear layout one! even something like this@relativeLayout.lparams does not work...\nmy current workaround is to do it the hard way and dismiss the DSL approach:\nkotlin\nrelativeLayout {\n  linearLayout {\n    layoutParams = RelativeLayout.LayoutParams(wrapContent, wrapContent).apply {\n      alignParentRight() // which is only available for RelativeLayout params\n    }\n  }\n}\nthe long way as suggested above, by reimplementing lparams but with another name to avoid the name clash which leads to this ambiguity would be:\nkotlin\nprivate val defaultInit: Any.() -> Unit = {}\nfun <T: View> T.lparams_rl(\n        width: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n        height: Int = android.view.ViewGroup.LayoutParams.WRAP_CONTENT,\n        init: RelativeLayout.LayoutParams.() -> Unit = defaultInit\n): T {\n    val layoutParams = RelativeLayout.LayoutParams(width, height)\n    layoutParams.init()\n    this@lparams_rl.layoutParams = layoutParams\n    return this\n}\n so now we can tell the compiler with layout params we want:\n\n. ",
    "baoxin": "I tried before, can't use. Any update?. ",
    "NeverwinterMoon": "I just recently discovered Anko and was very excited about it, until I found out that preview plugin doesn't work with IDEA 2016.3. Been using that version from day one and definitely not about to go to older one.  \nIt's sad to see that plugin is still not supported for IDEA released over a month ago (November 22).. ",
    "bentolor": "Duplicate of #202 . Duplicate of #202. ",
    "Kimxu": "sorry \uff0c use the   setTextAppearance(ui.ctx,R.style.TextAppearance_AppCompat_Medium). ",
    "arvabalazs": "It is weird:\n1. It was still there\n2. I narrowed the problem to 3 source file. Every of them contains direct Anko-Rx integrations\n3. I have commented out the integrations and make the whole project buildable (fixed every import and others)\n4. When it compiled successfully, I try to turn on the suspicious section, and suprisingly immediatelly worked.\nThis issue may affect only code bases where one try to migrate from 1.x to 2.x AND there is direct integration between those libs.\nHowever, I solved the 'issue'. So if you want you can close the ticket. Thank you. ",
    "leesunghyun": "+1. ",
    "akamuza": "I still have the same issue. version 0.10.4. ",
    "blazeur": "Hi,\nI have the same problem on Android 2.3 with anko 0.9b.\nI don't find issue. ",
    "anujmiddha": "This can be fixed by including\nandroid {\n    dexOptions { \n          incremental true \n          javaMaxHeapSize \"4g\" \n    }\n    ...\n}\nin the build.gradle. ",
    "tkshnwesper": "``` kotlin\nframeLayout {\nhorizontalPadding = 0\nverticalPadding = 0\n\nzoomListView {\n    id = ViewID.ID_LIST\n}\n\nhorizontalProgressBar {\n    id = ViewID.ID_MV_PROGRESS_BAR\n    isIndeterminate = true\n    verticalPadding = 0\n}.lparams(width = matchParent, height = wrapContent, gravity = Gravity.BOTTOM) {\n    weight = 1\n}\n\n}\n``. See this [answer](http://stackoverflow.com/a/4099076/2513269).. Oh! I got it.horizontalProgressBar` doesn't have weight property. Thanks @Adambl4 !. You need to explicitly convert it to a Date object. See this.. ",
    "Corsage": "In regards to the movable toolbar, there is a workaround posted here: https://stackoverflow.com/questions/42189235/why-does-this-anko-layout-not-handle-the-system-ui-correctly\nWhich states, adding behavior = AppBarLayout.ScrollingViewBehavior() to the themedAppBarLayout should fix the movable toolbar.\nJust wanted to add this to get more transparency.. ",
    "alexeybrod": "Hi.\nI don't know why it's not on jcenter yet, but you can add JetBrains repository to your gradle file. Version 0.9.1 can be found there.\n...\nallprojects {\n    repositories {\n        ...\n        maven { url 'https://dl.bintray.com/jetbrains/anko' }\n    }\n}\n.... ",
    "matsu911": "Hi alexeybrod,\nYour suggestion works!\nThank you for your help.\n. ",
    "dokinkon": "I can resolve the dependency by typing org.jetbrains.anko:anko-sdk15:0.9. ",
    "ontherunvaro": "This should be opened again since the docs were removed in https://github.com/Kotlin/anko/commit/2dde2ddb3ea690cfe169f7e5965c142a64b640e7.. I can confirm that the issue is present on AS 3.0 Canary 5, and that @zergos 's workaround works perfectly.. ",
    "Hazer": "I am having the same problem for every Anko method that uses getActivity(): android.app.Activity somehow inside Support Fragment. Maybe instead of having to implement everything, AnkoLogger could use JakeWharton/timber and just provide a set of extensions and configurations for it? Most of my projects already use timber, I am currently using it together with ajalt/timberkt to get a more Kotlin friendly behaviour, I would love if Anko got baked with its own timber-powered logger.. ",
    "mikesol": "Looks like there is a Stack Overflow question reporting the same issue w/ Toasts.\nhttp://stackoverflow.com/questions/41932223/anko-toast-method-causes-java-lang-nosuchmethoderror-when-called-from-fragment. Looks like this problem does not happen in 0.8.3 but appears with 0.9.1.. Yup, that works!. ",
    "crasite": "I change 'ctx' into 'activity' (since Activity extends Context) and... it work. \n override fun onCreateView(inflater: LayoutInflater?, container: ViewGroup?, savedInstanceState: Bundle?): View?\n            = FragmentUi<Fragment>().createView(AnkoContext.create(activity, this))\n}. ",
    "Hackforid": "@mikesol \nthis bug also doesn't appear in 0.9\n ext.anko_version = \"0.9\". ",
    "hwchong": "Yes, I'm also experiencing this with startActivity<>. ",
    "westlinkin": "also happens in \n``` kotlin\ndoAsync(exceptionHandler) {\n            // something time consuming\n        supportFragmentUiThread {\n            // do something\n        }\n    }\n\n```\n. ",
    "mithun123456789": "hi am having issue with sign in using gmail in my android application.\njava.lang.NoSuchMethodError: No virtual method zzait()Ljava/util/ArrayList;\nand the error is pointing to   addApi(Auth.GOOGLE_SIGN_IN_API, gso).\nmGoogleApiClient = new GoogleApiClient.Builder(this)\n           .enableAutoManage(this, this)\n\n           .addApi(Auth.GOOGLE_SIGN_IN_API, gso)\n\n           .build();.\n",
    "robinkanters": "@yanex getting this same issue with a clean project, only Anko installed, so it would seem so. ",
    "stepango": "@yanex Is there any way we could see the preview without rebuilding the project?. Is there any particular reason why the whole project needs to be built to show preview? In plugin code I see there are fake XML gets generated from Anko Code, could we use some button to trigger the conversion of AnkoComponent to XML without compilation?. @jackxieweiwu you could just call BateryWidget functions directly, no need to use view attributes for it\n. ",
    "AlexSheiko": "Thank you.. ",
    "cuddlecheek": "@NeverwinterMoon\nI think you meant something called Data binding. I would like to see recommended way to make data binding too.\nThe closest thing I've found about it is: https://medium.com/lewisrhine/data-binding-in-anko-77cd11408cf9. We inherit from BroadcastReceiver when we need a class that catches a broadcast. A broadcast is sent when particular event occurs, they are either defined by system (like connectivity changes...) or app-defined. We use the for example to handle actions inside notification.\nThis is my code creating a 'StartAction' inside notification. it's a small button, when I click it, StartReceiver (inheriting from BroadcastReceiver) gets notified that event occurred.\ninternal fun createStartAction(context: Context): NotificationCompat.Action {\n    val intentStart = Intent(context, StartReceiver::class.java)\n    val pendingIntentStart = PendingIntent.getBroadcast(context, 0, intentStart, PendingIntent.FLAG_UPDATE_CURRENT)\n    return NotificationCompat.Action(\n            R.drawable.ic_play_arrow_white_24dp,\n            context.getString(R.string.notification_action_start),\n            pendingIntentStart)\n}\n\nIt looks quite inconsistent if I use intentFor<MyBroadcastReceiver>() for activities, but Intent(context, StartReceiver::class.java) for broadcast receivers when the design pattern is same.\nDocumentation for broadcasts is here: https://developer.android.com/guide/components/broadcasts.html. @piotrek1543 This isn't what I meant. I know how start/end properties work. I was talking about the Android layout mirroring. It is mentioned in your post too:\n\nAndroid automatically mirrors your layout, just make sure you\u2019re satisfied with the result. In case something went wrong, try to replace elements with other supported and newer once. I found the LinearLayout and the RelativeLayout to work perfectly.\n\nHowever, I didn't realize that the layout mirroring in LinearLayout won't work when orientation vertical is set. Which means I'll close this issue anyway.. ",
    "veyndan": "Are there any updates on this? The changes appear to be approved. ",
    "TaniaGoswami": "There is an example in the anko README under the Basics section (https://github.com/Kotlin/anko/blob/master/README.md#basics) that I was not able to reproduce without this change:\nval name: EditText = with(myContext) {\n    editText {\n        hint = \"Name\"\n    }\n}\nThe example uses EditText, but I needed it for TextView so those are the methods I added. Neither EditText or TextView currently has the methods necessary for that example to work.\nFor the identifier, which one should I use instead?. ",
    "julianostarek": "Same here, this prevents me from using 0.9.1. ",
    "semenoh": "same issue. ",
    "finchatticus": "https://github.com/Kotlin/anko/issues/314. ",
    "snpefk": "@yanex for example if I want to create a dialog with setCancelable() turned into false.  . ",
    "calintat": "Given there already is a verticalLayout, I thought it would make sense to also have a horizontalLayout just for completeness.. I removed horizontalLayout.. @arslancharyev31, DSL markers are explained in the Kotlin documentation.. ",
    "jlandrum": "Isn't this already available?\nhttps://github.com/Kotlin/anko/blob/master/anko/library/static/sqlite/src/sqlTypes.kt\n. Turns out to have been a pretty simple oversight and a quick fix:\n374 . From what I understand, currently, the plugin depends on a few Android Studio release-specific objects. IntelliJ Ultimate EAP and the Android Studio preview builds have a new-ish layout editor which seems to interfere with the preview plugin working..",
    "monxalo": "Yes, UNIQUE is already available. This is to support conflict clauses. . A simpler version of the example can also be written like so:\nCREATE TABLE table_name\n(\n  _id INTEGER PRIMARY KEY AUTOINCREMENT,\n  record_id INTEGER NOT NULL UNIQUE ON CONFLICT REPLACE,\n  ...\n). #374 already resolved this. Strangely it wasn't merged into the 0.10 branch.. ",
    "MiguelAngelLV": "getContext() in Fragment is available since api 23: https://developer.android.com/reference/android/app/Fragment.html?hl=es#getContext(). ",
    "hatzel": "I would love to see this fixed! I would be willing to take a look at this but I am not really sure where to get started. From what I gather the Factories for views are generated here: https://github.com/Kotlin/anko/blob/0f99e9fd5e4c8b44f5df645206005d3e2d7d958d/anko/library/generator/src/org/jetbrains/android/anko/render/viewRenderers.kt#L107-L112\nSo I guess you could generate code using the 3-argument constructor instead but I am really unsure of the details (like where to take the arguments for the constructor from). I will look into this some more but if anyone could provide a few details it would certainly help a lot.. No I have not made any progress, sorry. With some guidance I'd still be up for but I am mostly working on unrelated projects currently.. ",
    "filipproch": "@hatzel Have you made any progress on this? I would also love to see this fixed.\nI think the solution might be to have a factory lambda that takes style as second argument, and then ankoView function, that accepts factory with style argument.\nI would also like to help on this, as I wouldn't have to hack around this in my code.. ",
    "sixman9": "(Anko & Android Newbie) \nOk, I get that you're asking for an Anko DSL element to represent or be a 'place-holder' for a Fragment but, would it possible to somehow, programatically, add Fragments into pre-existing Anko DSL elements, i.e. wrap or insert the Fragment instance as a child of a pre-existing Anko container element?\nThe following Stackoverflow post describes programatically generating view Ids for Anko DSL components, so 'FindByView' can be used against them (etc) - could this same technique be used with the various [FragmentTransaction.add(...) implementations][frag-adds], in order to associate a Fragment instance with a View Id-tagged Anko component?\n```kotlin\n    // See https://stackoverflow.com/questions/34217789/how-to-reference-other-views-in-anko-dsl/34258396#34258396 and https://goo.gl/SY1JTJ\nval input = textInputLayout {\n                editText {\n                    id = A_VIEW_ID .   // or use 'View.generateViewId()' inline here\n                    hint = \"Name\"\n                }\n            }\n\ncompanion object {\n    @IdRes val A_VIEW_ID = View.generateViewId() //accessible outside DSL component's scope\n    ....\n\n```\n[frag-adds]: https://developer.android.com/reference/android/app/FragmentTransaction.html. Ok, a quick Google found me this rather helpful code Gist, on adding a Fragment programatically using Anko:\nhttps://gist.github.com/lynas/dcba002ce5afabf6454c8765ab3f3430. ",
    "FennyR": "I am trying to use the method setForeground() on a view.\nBut according to the Android documentation, setForeground() on a regular view is available form API level 23. Where as the method is avaialble for FrameLayout since API level 1.\nMy intention is to setForeground to a FrameLayout.\nbelow is how I set it for a FrameLayout:\n((FrameLayout)activity.findViewById(R.id.container_body)).setForeground(activity.getResources().getDrawable(R.drawable.foreground_for_popup));\n. Sorry, it is an typo.\nThe method is setForeground (Drawable drawable)\nhttps://developer.android.com/reference/android/view/View.html#setForeground(android.graphics.drawable.Drawable)\nThanks,\nFenny.\nOn Thu, May 11, 2017 at 11:53 AM, Yan Zhulanow notifications@github.com\nwrote:\n\nI can't find the setForeground() method for FrameLayout here:\nhttps://developer.android.com/reference/android/widget/FrameLayout.html.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/365#issuecomment-300850587, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AGLs3nfo5ZngBorso8wqzQIh07oq3DKkks5r4zz-gaJpZM4NSWIY\n.\n. \n",
    "deviant-studio": "I've been playing with Anko and done some working POC example:\nhttps://github.com/deviant-studio/anko-binding-poc/blob/master/app/src/main/java/ds/ankobindings/MainLayout.kt#L32. i've just tried new plugin and encountered with problems:\n1. the preview window pops up on activities and other classes that has nothing to do with anko. it would be nice if preview works only on supported classes (AnkoComponent)\n2. my ide hangs with no response when i'm trying to create AnkoComponent and copy-paste some layout snippet there.. I was able to see layout preview of my AnkoComponent. Now when i'm trying to add constructor param the preview window fails to render content\nException Details java.lang.NoSuchMethodError: ds.ankobindings.Component: method  ()V not found \u00a0\u00a0\nat __anko.preview.View.init\u00a0\u00a0at __anko.preview.View.<init>\u00a0\u00a0\nat java.lang.reflect.Constructor.newInstance(Constructor.java:423) \u00a0\u00a0\nat android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:727) \u00a0\u00a0\nat android.view.LayoutInflater.inflate(LayoutInflater.java:495) \u00a0\u00a0\nat android.view.LayoutInflater.inflate(LayoutInflater.java:397) Copy stack to clipboard. >  Add a default value to that parameter \nyep. already solved. thanks\n\nYou mean that the preview pops up on unrelated classes even if it was hidden?\n\ni mean hidden/visible state is mutual for all tabs, not per tab like it implemented in xml layouts. it is minor inconvenience though.. btw 'make project' builds whole set of flavors/build variants. so it is sometimes faster just to build current flavor apk. anyway google promised to fix it in upcoming gradle plugin releases.. ",
    "championswimmer": "This is a good and mature implementation \nhttps://github.com/lightningkite/kotlin-anko-observable . @4u7 \nIs the androidx branch where the work is going on for transforming into androidx compatible layouts ? Can we make PRs / contribute to that, or is something in-house being worked on that is not on Github yet ? \nI would love to help migrate to androidx, as I need it myself.. ",
    "tiamed": "Same on 3.0 canary.. ",
    "zergos": "It seem they just forgot to include a couple of json files in the package.\nI just made it manually and it working now.\nTo save your time, you can get updated JAR here.\nPut it in C:\\Users\\User\\.AndroidStudioPreview3.0\\config\\plugins\\Anko\\lib\\ over original one.. ",
    "JRoot3D": "Same on 3.0 canary 5. issue present on AS 3.0 RC 1 with 0.10.2 plugin.... ",
    "kartik-99": "Not able to install the updated JAR posted by @zergos \nAndroid studio says \"Plugin 'anko support' is incompatible with this installation\"\nEdit : I am using studio version 3.1\n    Also, I have tried installing this plugin after removing the present anko support plugin . ",
    "ParkerK": "Would also be useful for recyclerViews tools:listItem, so we could preview what a recyclerview will look like. Check the wiki. Whoops, looks like it is not specific to Alert Dialog, so it's just a duplicate of #421 . @kuleshovdv did you figure it out? I'm also curious as to how to do this.. ",
    "sofyanthayf": "toolsText and .tools{ } not resolved.  Is there anything to do before using it?. ",
    "juanchosaravia": "This is true, just a small comment that the version is 0.10.0 that works and 0.10.1 doesn't have the fix.. ",
    "bvolkmer": "Ah. Thanks. I missunderstood the README, as I thought the meta package includes the support libraries too.. ",
    "rocketsummer": "I'm seeing the same issue. How do I fix it?. ",
    "walfud": "I change buildscript deps to classpath 'com.android.tools.build:gradle:2.4.0-alpha7' solved the problem. but a warning: \"Warning:Ignoring Android API artifact com.google.android:android:2.3.1 for debug\"\nIt seems that newest 3.0 version treat it as error.. ",
    "sonnytron": "I guess we'll just have to wait for Anko to give an Alpha build that we can use. ",
    "m43bloe": "Obviously a hack for now, but I got this to build & run with 3.0.0-alpha1 by doing this:\ncompile(\"org.jetbrains.anko:anko:0.10.0\") {\n        exclude group: 'com.google.android', module: 'android'\n    }. ",
    "andre-artus": "I get the same warning for Anko 0.10.0 in Android Studio 2.3.2 \nBuild #AI-162.3934792, built on April 21, 2017\nJRE: 1.8.0_112-release-b06 amd64\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\n. ",
    "evolify": "i get the same error. ",
    "mengming": "I have the same error too. Any solution now?. I have the same problem. Any solution?. ",
    "qssq": "i not understand ,how to modify my code?  \nmax version is 0.10.0-beta -2\nhttps://jcenter.bintray.com/org/jetbrains/anko/anko-support-v4/\nthat link https://youtrack.jetbrains.com/issue/KT-18103\ni  show this error,\nError:Failed to resolve: org.jetbrains.anko:anko-support-v4:0.14\nOpen FileShow in Project Structure dialog. ",
    "bsimon36": "My bad- didn't see the note about anko--listeners. ",
    "JamesKarl": "I have the same requirements.. I have the  same issue.. ",
    "antoniovj1": "Same problem with AS v2.3.2 and Anko 0.9b. This is the IDE Fatal Error details :\n```\nAccess is allowed from event dispatch thread only.\n EventQueue.isDispatchThread()=false isDispatchThread()=false Toolkit.getEventQueue()=com.intellij.ide.IdeEventQueue@194cf2af Current thread: Thread[ApplicationImpl pooled thread 11,4,main] 1960035280 SystemEventQueueThread: Thread[AWT-EventQueue-0,6,main] 721795586\njava.lang.Throwable\n    at com.intellij.util.ExceptionUtil.currentStackTrace(ExceptionUtil.java:65)\n    at com.intellij.psi.impl.DebugUtil.currentStackTrace(DebugUtil.java:493)\n    at com.intellij.diagnostic.LogEventException.(LogEventException.java:32)\n    at com.intellij.openapi.application.impl.ApplicationImpl.assertIsDispatchThread(ApplicationImpl.java:1112)\n    at com.intellij.openapi.application.impl.ApplicationImpl.assertIsDispatchThread(ApplicationImpl.java:1101)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.assertDispatchThread(FileEditorManagerImpl.java:1513)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.getSelectedTextEditor(FileEditorManagerImpl.java:1196)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.getSelectedTextEditor(FileEditorManagerImpl.java:1191)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewClassResolver.getOnCursorPreviewClassDescription(DslPreviewClassResolver.kt:47)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager.refresh(AnkoNlPreviewManager.kt:127)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager.access$refresh(AnkoNlPreviewManager.kt:38)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager$2.execute(AnkoNlPreviewManager.kt:71)\n    at com.android.tools.idea.gradle.project.build.invoker.GradleTasksExecutor$GradleTasksExecutorImpl.lambda$showGradleOutput$4(GradleTasksExecutor.java:552)\n    at com.intellij.openapi.util.ExecutionCallback.setExecuted(ExecutionCallback.java:58)\n    at com.intellij.openapi.util.ActionCallback.setDone(ActionCallback.java:72)\n    at com.android.tools.idea.gradle.project.build.invoker.GradleTasksExecutor$GradleTasksExecutorImpl.lambda$collectMessages$5(GradleTasksExecutor.java:569)\n    at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\nAnd here all the infromation in threadDump.txt :100: : \nthreadDump.txt\n. ",
    "strahe": "fixed?. ",
    "yizhongliu": "I have the same problem.  What is the solution. ",
    "dashracer": "I have the same problem. What is the solution.. ",
    "sinadarvi": "i still have this problem, what is the solution ?. ",
    "iam1492": "+1. I was made mistake that I use with(context) {} and there addview called. \nI just remove that and now everythink OK!. ",
    "sw-alex-1": "I have same problem with plugin version 0.10.3, \nAndroid Studio 3.0.1 Build #AI-171.4443003, built on November 9, 2017\nJRE: 1.8.0_152-release-915-b01 amd64\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\nWindows 8.1 6.3\nAccess is allowed from event dispatch thread only.\n EventQueue.isDispatchThread()=false isDispatchThread()=false Toolkit.getEventQueue()=com.intellij.ide.IdeEventQueue@3c6d078c Current thread: Thread[ApplicationImpl pooled thread 8,4,main] 969683659 SystemEventQueueThread: Thread[AWT-EventQueue-0 3.0#AI-171.4443003 Studio, eap:false, os:Windows 8.1 6.3, java-version:JetBrains s.r.o 1.8.0_152-release-915-b01,6,main] 1566906155\njava.lang.Throwable\n    at com.intellij.util.ExceptionUtil.currentStackTrace(ExceptionUtil.java:65)\n    at com.intellij.psi.impl.DebugUtil.currentStackTrace(DebugUtil.java:493)\n    at com.intellij.diagnostic.LogEventException.(LogEventException.java:32)\n    at com.intellij.openapi.application.impl.ApplicationImpl.assertIsDispatchThread(ApplicationImpl.java:1112)\n    at com.intellij.openapi.application.impl.ApplicationImpl.assertIsDispatchThread(ApplicationImpl.java:1101)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.assertDispatchThread(FileEditorManagerImpl.java:1513)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.getSelectedTextEditor(FileEditorManagerImpl.java:1196)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.getSelectedTextEditor(FileEditorManagerImpl.java:1191)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewClassResolver$getOnCursorPreviewClassDescription$editor$1.compute(DslPreviewClassResolver.kt:49)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewClassResolver$getOnCursorPreviewClassDescription$editor$1.compute(DslPreviewClassResolver.kt:33)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:946)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewClassResolver.getOnCursorPreviewClassDescription(DslPreviewClassResolver.kt:48)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager.refresh(AnkoNlPreviewManager.kt:129)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager.access$refresh(AnkoNlPreviewManager.kt:40)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager$2.execute(AnkoNlPreviewManager.kt:73)\n    at com.android.tools.idea.gradle.project.build.invoker.GradleTasksExecutorImpl.lambda$showGradleOutput$4(GradleTasksExecutorImpl.java:472)\n    at com.intellij.openapi.util.ExecutionCallback.setExecuted(ExecutionCallback.java:58)\n    at com.intellij.openapi.util.ActionCallback.setDone(ActionCallback.java:72)\n    at com.android.tools.idea.gradle.project.build.invoker.GradleTasksExecutorImpl.lambda$collectMessages$5(GradleTasksExecutorImpl.java:489)\n    at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745). ",
    "neworld": "Naming depends. I personally and my colleagues prefer shorter. It is pretty intuitive, heavily used, especially my beloved visibleIf(...). However, the interface has to be consistent, so I don't see any problem to use longer names if they are following some consistency or conventions. . ",
    "Pfuster12": "Has this been implemented? I am personally using similar helpers and they're just what Anko commons should have. My extension functions, which are as concise as image_view.show():\nkotlin\n// shows this view\nfun View.show(): View {\n    this.visibility = View.VISIBLE\n    return this\n}\nkotlin\n// hides the view\nfun View.hide(): View {\n    this.visibility = View.INVISIBLE\n    return this\n}\nkotlin\n// makes the view gone\nfun View.gone(): View {\n    this.visibility = View.GONE\n    return this\n}. ",
    "MadeRelevant": "Alright, thanks for the heads up.. ",
    "SUPERCILEX": "I know this issue is waaay outdated, but I was poking around old issues and came across this one. The reason the inlined result doesn't work is a simple matter of understand how code is executed. In your first example, this is what happens:\nkt\nref()\nresult.await()\nrenderInt()\nWhereas your working version executes like so:\nkt\nresult.await()\nref()\nrenderInt()\nThat's because statements to the left are loaded onto the stack and popped only after being used, thus rendering the ref() call useless.. @yanex gentle bump. \ud83d\ude04. bg is being removed, it's unnecessary.. @4u7 What do you think?. @4u7 Sweet, see #617. I'd also love it if you could take a look at #616 since I rebased #617 out of it.. Yeah, absolutely. I'm talking about stuff that isn't in KTX because it's too specific a use case. For example, the doAsyncs, dialog builders, doFromSdk, buildSpanned, etc. I'd love to work with you to create tasteful modules that provide address tailored areas of Android development.. - Oops, I thought I had gotten rid of the generated changes\n  - What about bg? It's in generated, but doesn't look like it was generated. For now, I'm leaving it as deprecated.\n- Good catch, didn't notice the SqlParsers file. \ud83d\udc4d \n- Done\n- You're right, it creates an iterator.. Cool, my B.. I would disagree. All other libraries I know of are deprecating and then completely removing support for framework fragments to reduce method counts. What'd you think?. Ohhhh, that's what it meant. Gotya.. Makes sense \ud83d\udc4d . Pretty sure the compiler adds a check for a null result since we specified the return type as nonnull, but the old way has clearer intentions so I'll go back.. That's incorrect because the return type is nonnull:\nLINENUMBER 162 L2\n    ALOAD 1\n    ILOAD 2\n    INVOKEVIRTUAL android/view/View.findViewById (I)Landroid/view/View;\n    DUP\n    LDC \"findViewById(id)\"\n    INVOKESTATIC kotlin/jvm/internal/Intrinsics.checkExpressionValueIsNotNull (Ljava/lang/Object;Ljava/lang/String;)V. ",
    "kirtan403": "A much needed feature. ",
    "doitlite": "Before the new feature add to the library, you can try this:\nval pwAlert = activity.alert(Appcompat) {\n    titleResource = R.string.my_message\n    messageResource = R.string.my_message\n    okButton {}\n}.build()\npwAlert.setCancelable(false)\npwAlert.setCanceledOnTouchOutside(false)\npwAlert.show(). ",
    "VijayMakwana": "@doitlite  What Appcompat here? please explain more about it\nUPDATE:\n // Appcompat-v7 (only Anko Commons)\ncompile \"org.jetbrains.anko:anko-appcompat-v7-commons:$anko_version\"\nUse this for Appcompat (alert.build() returns android.support.v7.app AlertDialog) \n. ",
    "BurakDizlek": "Hi , You can use  after   \".show()\"   .setCancelable(false)\nfor example -> \n   alert(\"Body\") {\n                title = \"Title\"\n                positiveButton(\"ok\") {\n                }\n            }.show().setCancelable(false)     \nhttps://gist.github.com/BurakDizlek/4b026b3c8a736987902a7e65f73dc6da. ",
    "Zhuinden": "doitlite is correct:\nkotlin\nval pwAlert = activity.alert(Appcompat) {\n    titleResource = R.string.my_message\n    messageResource = R.string.my_message\n    okButton {}\n}.build().apply {\n    setCancelable(false)\n    setCanceledOnTouchOutside(false)\n}.show(). ",
    "iandreyshev": "I want to save dialog after screen rotation. but @doitlite and @Zhuinden don`t helps.\nI hope the best way is to use ViewModel.\nkotlin\n    val errorObservable: LiveData<SignInResult>\nkotlin\n    observe(errorObservable, ::handleError)\n``` kotlin\n    private fun handleError(error: Any?) {\n        if (error == null) {\n            return\n        }\n    activity.alert(Appcompat) {\n        titleResource = R.string.title\n        messageResource = R.string.message\n        okButton { mSignInViewModel.onErrorClosed() }\n    }.build().apply {\n        setCancelable(false)\n        setCanceledOnTouchOutside(false)\n    }.show()\n}\n\n```. ",
    "ashish2810": "Error is stable.\nThe class is:\nclass MyActivityUI : AnkoComponent<MyActivity>{\n    override fun createView(ui: AnkoContext<MyActivity>)=ui.apply {\n        verticalLayout{\n                backgroundColor=R.color.material_blue_grey_800\n                textView {\n                    text=\"Hello World!\"\n                }\n                button {\n                    toast(\"Click Me\")\n                }\n            }\n    }.view\n}. ",
    "imknown": "Ref: https://github.com/Kotlin/anko/pull/396. ",
    "Ornolfr": "I have the same issue too. Removing anko's alert {...} fixes this issue, and I can't seem to find which proguard rule helps in this situation. ",
    "huycn": "I have a similar issue for a different piece of code:\nclass DepotActivity {\n    var allCategories: SparseArray<Category>?\n    ...\n    fun showMenuFragment(fragmentTag: String, fragmentCreator: () -> DialogFragment) {...}\n    ...\n    private fun showCategoryChoice() {\n        allCategories?.let { allCats ->\n            showMenuFragment(\"categories\") {\n                val count = allCats.size()\n                val categories = ArrayList<Category>(count)\n                (0 until count).mapTo(categories) { allCats.valueAt(it) }\n                categories.sortBy { it.name.toLowerCase(Locale.getDefault()) }\n                CategoryViewFragment.newInstance(categories)\n            }\n        }\n    }\n}\n\nIt will raise a warning like: ...DepotActivity$showHideCategoryChoice$1$1$2: can't find referenced class ...DepotActivity$showHideCategoryChoice$1$1\nWhen look at the generated code, it will create a class like ...DepotActivity$showHideCategoryChoice$$inlined$let$lambda$1  extends Lambda implements Function0\nand the function showCategoryChoice is like:\nprivate final void showCategoryChoice() {\n  SparseArray var10000 = this.allCategories;\n  if(this.allCategories != null) {\n     SparseArray var1 = var10000;\n     this.showMenuFragment(\"categories\", (Function0)(new DepotActivity$showCategoryChoice$$inlined$let$lambda$1(var1, this)));\n  }\n}\n\nNow if I change a little bit the function into:\nprivate fun showCategoryChoice() {\n    val allCats = allCategories\n    if (allCats != null) {\n        showHideMenuFragment(\"categories\") {\n        ...\n        }\n    }\n}\n\nThen there will be no Proguard warnings and if we look at the generated code, everything is inlined as expected, no extra class generated.\nThat being said, I don't thing this is related to anko but rather a bug in kotlin compiler. I'm not sure why this issue was closed but the problem described in initial post is still true for today, i.e.\nclass MyClass {\n    fun show() {...}\n    fun task() {\n        doAsync {\n            //run data\n            uiThread {\n                show(); //some function under activity\n            }\n        }\n    }\n}\nwill hold strong reference to MyClass, which prevent it from gabage-collected.\nBut if uiThread is modified so that it accepts T.() -> Unit as argument, it will work as expected, MyClass can be gabage-collected  before show() is called.\nYes, I agree that with current interface, it.show() instead just show() will also work, but we are talking about avoiding easy mistakes.\nAlso yes, we can use coroutines, but uiThread is still available and we can easily make mistake with it, even we are aware of the issue.. ",
    "joshfriend": "Yes please! android.text.ClipboardManager has been deprecated since API 11 and Anko only supports down to API15!. ",
    "deva666": "ahh, yes. Removed, thanks.. Yep, makes more sense. Done.. ",
    "XieEDeHeiShou": "I hit the same problem..\nIt seems that they didn't override toString() for SqlTypeModifier\n\n. ",
    "arslancharyev31": "The same problem when trying to use UNIQUEmodifier. Good day, @calintat. Could you please explain what is the purpose of these Dsl markers?. Well yes, your are absolutely correct, I should've added it in sdk-23. Actually, I shouldn't have added it since it is already in master, it is just not released in new version yet.. This is because TextView's setTextSize already interprets value in scaled pixel units. Instead, you should be using just 16f. This is equivalent to 16sp in xml.. Yet another duplicate of #398, #414 and #421. @reflog, I've inquired devs about the status of this library in this thread. @reflog, Well, basically any library with version 0.x is not suited for production use. However, in this case, I suppose the major factor turning devs away from this outstanding library, for now, is its lack of documentation and previewing tools accompanied by the limited amount of resources invested by maintainers.. Another duplicate of #469 and #373. Really? About which branch are you talking about? I've checked out master, and it doesn't seem to have one: https://github.com/Kotlin/anko/blob/master/anko/library/generated/sdk23/src/Properties.kt\nBtw, what's the purpose of these packages ending with sdk number?. ",
    "mnishiguchi": "I got the same problem but found a workaround. I was able to hardcode that part of SQL.\nPersonTable.ID to SqlType.create(\"INTEGER PRIMARY KEY AUTOINCREMENT\"),. ",
    "nahojd": "The problem seems to occur whenever you use more than two modifiers, regardless of which ones. \nFor example INTEGER + AUTOINCREMENT works fine, so does PRIMARY_KEY + AUTOINCREMENT, but e.g. INTEGER + AUTOINCREMENT + PRIMARY_KEY causes this error as shown in the screenshot below. \n\nI am using Kotlin version 1.1.3-2 and Anko version 0.10.1.. ",
    "HenseyVenom": "\nI think the plus function should return return 'SqlTypeImpl(name, if (modifiers == null) m.modifier else \"$modifiers $m.modifiers \")'. ",
    "x13945": "I got the same error while use anko with \ngradle\nkotlin_version = \"1.1.4-3\"\nanko_version = \"0.10.1\"\nbut when I downgrade anko to below, everything goes well.\ngradle\nkotlin_version = '1.1.2-5'\nanko_version = '0.10.0'. ",
    "Amejia481": "Are you getting this Error, \"Cannot access class 'android.support.design.widget.Snackbar'. Check your module classpath for missing or conflicting dependencies\"?. Could you provide a gist of your code, please?\n. ",
    "wyllyamjesus-hotmart": "@Amejia481 \nI'm getting this error what to do?\n. @vbazh \nThanks, I had forgotten to add the support lib design!! :). ",
    "vbazh": "@Wyllyam \nMaybe you have forgotten to add design support library?\nimplementation \"com.android.support:design:$design_support_lib_version\". ",
    "ogasimli": "I am using library version 0.10.4. I have included both android design support library and anko design library. However, snackbar methods are not resolved at all. Plz help!. ",
    "junghoonshin1": "Not resolving for me either.. ",
    "gmikhail": "Do not forget to add\nimplementation \"org.jetbrains.anko:anko-design:$anko_version\"\nIt helped me.. Any news?. ",
    "erickok": "From the releases page under 0.10 I find:\n\nDSL listeners moved to anko-< platformName >-listeners artifacts (e.g. anko-sdk25-listeners);\n\nThat helped me.. ",
    "arezaee": "hey\nI don't understand what's that mean?\nDSL listeners moved to anko-< platformName >-listeners artifacts (e.g. anko-sdk25-listeners);\n\n.  @CliffBrown \nthank you so much . ",
    "CliffBrown": "@arezaee it means you should update your gradle file accordingly.\n\n. ",
    "er-abhishek-luthra": "I faced the same issue myself while migrating my project to kotlin . I spend some time to find reason to why it was happening and later discovered that jetbrains have forgotten to specify it in the official documentation. I have written a detailed post to answer how kotlin property generation works for java getters and setters . Just follow the post below.\nhttps://medium.com/@er.abhishek.luthra/how-does-kotlin-generated-property-from-java-getters-and-setters-undocumented-by-jetbrains-7e1ad88052b1. ",
    "albodelu": "Add the proper dependency:\n   implementation \"org.jetbrains.anko:anko-support-v4-commons:0.10.1\"\nAlso add the correct import manually (...anko.* it's not enough)\n   import org.jetbrains.anko.support.v4.*\nSupportIntents.kt:\n\nSupportDialogs.kt:\n\n. ",
    "nvlled": "What about \nval dialog: DialogInterface = alert { }.show()\nif (dialog is AlertDialog) {\n    // dialog is now smart-casted to AlertDialog\n    dialog.dismiss()\n}. The document is indeed lacking, and you have to do a bit of source digging to find what you are looking for. The list of views available can be found in Views.kt files such as \nhttps://github.com/Kotlin/anko/blob/master/anko/library/generated/sdk25/src/Views.kt\nThe BottomNavigationView seems to be defined here (bottomNavigationView) https://github.com/Kotlin/anko/blob/master/anko/library/generated/design/src/Views.kt\nThe package of that file is org.jetbrains.anko.design, so:\n```\nimport org.jetbrains.anko.design.*\nverticalLayout {\n    bottomNavigationView()\n}\n... still does not work unless you add the dependencies for support libraries in your build.gradle, as described here https://github.com/Kotlin/anko/blob/master/README.md#gradle-based-project\n// Design\ncompile \"org.jetbrains.anko:anko-design:$anko_version\"\n// Include this if you haven't done already\ncompile 'com.android.support:design:25.4.0'\n```\nIf you're like me, the above steps probably still would not work if your sdk versions doesn't match, which I fixed by setting my compileSdkVersion to 'android-25'. But to be fair this is a problem with the android project configuration itself.\n. ",
    "cjiahuan": "I want to use RecyclerView in SwipeRefreshLayout? Is this Right?4\nswipeRefreshLayout {\n                setColorSchemeColors(0xE94653)\n                RecyclerView(ui.owner)\n            }.lparams(matchParent, matchParent). ",
    "benluo": "It does not only preview, but does not render in programm neither.. it shows blank in android phone or in emulator.. I cannot show in the phone (n5, android 6.0) either.. same behavor. It shows blank in real phone (n5 with Android 6).. I tried again after change the dependency. But nothing changed. Anko layout does not work in real phone.\n```kotlin\nimport org.jetbrains.anko.*\nimport org.jetbrains.anko.sdk25.coroutines.onClick\nclass SignInActivityUI : AnkoComponent {\n    override fun createView(ui: AnkoContext) = with(ui) {\n        verticalLayout {\n            val textView = textView()\n            textView.text = \"hello\"\n            val workingNo = editText {\n                hintResource = R.string.working_no\n            }\n            val password = editText()\n            password.hint = R.string.password.toString()\n            button(R.string.title_activity_login) {\n                onClick { ctx.toast(\"Hello\")}\n            }\n        }\n    }\n}\n```. I have the same problem.. ",
    "tjt852": "@benluo Running on the phone no problem, that is, can not preview. ",
    "JoeMaher": "Im seeing the same issue, easily replicated with\nclass StartActivity: AppCompatActivity() {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        StartLayout().setContentView(this)\n    }\n}\n\nclass StartLayout: AnkoComponent<StartActivity> {\n\n    override fun createView(ui: AnkoContext<StartActivity>): View {\n        return with(ui) {\n            linearLayout {\n                lparams(width = matchParent, height = matchParent)\n                backgroundColor = ContextCompat.getColor(ctx, R.color.darkBlue)\n            }\n        }\n    }\n}\n\nIt seems to be working now though after dropping from beta2 to beta1. @elton2048 and @benluo make sure your appcompat dependency is com.android.support:appcompat-v7:26.0.0-beta1. ",
    "elton2048": "In Android Studio 3.0-alpha 5 (Canary 5) the issue still exists. There is no preview item to be selected.. ",
    "MichaelJokAr": "I have the same problem.. see the wiki  https://github.com/Kotlin/anko/wiki/Anko-Layouts#using-the-plugin ; it's not yet support android studio 3.0+. ",
    "etsit": "The \"Anko Layout Preview\" option is not visible at all on the \"Views -> Tool Windows\" menu\nin Android Studio 3.0 Beta 1 (MacOS Sierra)\nI'm first putting the cursor in my \"view declaration\" (my AnkoComponent) implementation according to https://github.com/Kotlin/anko/wiki/Anko-Layouts#using-the-plugin. ",
    "vafu": "same on 3.0 canary9 as said @etsit . anyway, xml -> anko conversion works, so plugin works too, I just can't get the preview. come on, JetBrains, did Google told you that anko is not the right way and you discontinued the library ?. ",
    "tyzero": "Still no preview in AS 3.0 beta 6\n. ",
    "AweiLoveAndroid": "\u5565\u65f6\u5019\u51fa\u6b63\u5f0f\u7248. ",
    "ShyamAg": "Just Change the theme \"AppTheme\"  to NoTitleBar . ",
    "duymon178": "The only solution now is to rebuild your project to see any changes.. ",
    "JacobAMason": "I still see this error on Anko 0.10.4 with Android Studio 3.0.1\nBuild #AI-171.4443003, built on November 9, 2017\nJRE: 1.8.0_152-release-915-b01 amd64\nJVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o\nLinux 4.14.13-1-ARCH\nI'm including Anko in my module's build.gradle as \ngradle\ndependencies {\n    ...\n    implementation \"org.jetbrains.anko:anko:$anko_version\"\n    ...\n}\nand my code seems to build okay, however the preview causes the java process running Android Studio to spike the CPU.. ",
    "iammiles": "I just started a new project today using minSdk of 25 and I'm getting the same issue with the example verticalLayout.. ",
    "honeymushroom": "Thank so much you for your help!\nUnfortunately, it's against my personal & professional policy to use undocumented libraries, as nice as they might be \ud83d\ude41 . I'll be excited to return to this library when it's documented!. ",
    "Anti-Alias": "I know this is late, but I felt like joining the party.\nI guess you can use anko if you're not afraid of IDE dependence. You'll just have to inspect fields/methods with autocomplete (Yay?)\nYou could also clone releases and generate documentation with dokka manually.\nThe anko repo has dokka-android included in its build.gradle file, so it should be as easy as a\ngit clone https://github.com/Kotlin/anko.git\ncd anko\n./gradlew dokka\nNot ideal, but hey!. ",
    "phash": "I appreciate this!. ",
    "nkanellopoulos": "To answer my own question, the problem here is that the receiver is actually _LinearLayout.\nSo adding an extension method to _LinearLayout does the job.\nkotlin\n    private fun _LinearLayout.test2() {\n        editText {\n            textSize = 20f\n        }.lparams {\n            width = matchParent\n            height = dip(40)\n        }\n    }\nHowever, could this be done without adding a method to _LinearLayout?\n. It seems Anko 0.10.2 has become more strict regarding the positioning of lparams.\nTo achieve my desired effect without having the TextView padding affect my Toolbar's position, I added another verticalLayout, after the Toolbar definition, to enclose the TextViews. My bad: I forgot to include onclick inside the button blocks. ",
    "Abegemot": "Best since sliced bread!. I'm too having following classes could not be found:\n-\u00a0__anko.preview.View (Change to android.media.tv.TvView, Fix Build Path, Edit XML, Create Class)\nI think it stopped working since Android 3.1.2 update, since then I been eagerly waiting for a new anko release but alas! still doesn't work   .....\nhttps://github.com/Kotlin/anko/issues. I too can confirm the same in android 3.2 canary\nSo we can conclude that anko preview does not work either in 3.1.2 as in 3.2 canary 14. ",
    "ZhangQixiangChina": "just use command+option+M in Android Studio ~ . ",
    "s4cha": "@nkanellopoulos I had the same issue and here is my take on it \nkotlin\nfun foodTypeFilter(vm: ViewManager, wording: String): View {\n    return vm.run {\n        relativeLayout {\n            button(wording).lparams {\n                alignParentBottom()\n                centerHorizontally()\n            }\n            backgroundColor = Color.GRAY\n            elevation = dip(10).toFloat()\n        }\n    }\n}\n// later... in side of createView(ui: AnkoContext<FoodFragment>): View {\nfoodTypeFilter(this, \"Croquettes\".toUpperCase())\nEssentially passing this in the function, the param being an abstract \"ViewManager\" \nHope this helps !. ",
    "hasenj": "You can already do this with basic kotlin:\nDefine the shape (as a function):\nfun buttonBg() = GradientDrawable().apply {\n    shape = GradientDrawable.RECTANGLE\n    cornerRadius = 6f\n    setStroke(2, grey)\n    ....\n}\n\nUse it on a button:\nbutton {\n    ....\n    background = buttonBg()\n}\n\nActually you can use it on anything, not just a button. In my project I use it on a linearLayout and it works just as well.. I made the mistake of \"upgrading\" libraries today, and I practically got NO BENEFIT, but I did run into this problem and it caused me needless headaches.\nThis seems to be the offending function:\n```Kotlin\nprivate fun hasApplicableType(type: Class<*>): Boolean {\n    if (type.isPrimitive) {\n        return true\n    }\nreturn when (type) {\n    java.lang.String::class.java, java.lang.CharSequence::class.java,\n    java.lang.Long::class.java, java.lang.Integer::class.java,\n    java.lang.Byte::class.java, java.lang.Character::class.java,\n    java.lang.Boolean::class.java, java.lang.Float::class.java,\n    java.lang.Double::class.java, java.lang.Short::class.java -> true\n    else -> false\n}\n\n}\n```\nByteArray is not an acceptable type, it seems :/\nIs there any reason why this was made the case? BlobParser still exists\nAnd also, it seems if I pass a data class that has Long, it also fails because Long has two constructors: the one from Java and the one from Kotlin.\nIs this not a commonly used feature of Anko? Why did it break?. ",
    "nickyhajal": "Perfect, thanks so much!. ",
    "zyongjun": "My error is cause by \n   db.use {\n            db.insert(TrainType.NAME,\n                    TrainType.ID to 0,...\n   }\non dbhelper oncreate\nso when I select data on other place will cause this exception\nremove db.use{ } , may be it is duplicate on dbopenhelper oncreate method. ",
    "zarmhast": "Kotlin\ndata class Class13(val id: Int, val b1: Boolean, val b2: Boolean)\nclassParser<Class13>().parseRow(arrayOf(123L, 0L, 1L))\n// Class13(id=123, b1=true, b2=true\nclassParser<Class13>().parseRow(arrayOf(123L, 0, 1))\n// Class13(id=123, b1=false, b2=true\nIt happens because the test is Long(0) != 0. Which due to some Java boxing rules ends up being true because Long != Int.\nSolutions:\nKotlin\nreturn value.toInt() != 0\nreturn value != 0L\nRelevant files:\nanko/library/static/sqlite/src/ClassParser.kt\nanko/library/robolectricTests/src/test/java/ClassParserTest.kt. ",
    "magneticflux-": "@4u7 Does this sound like a good idea? It seems in line with the other quick intent builders.. ",
    "thomhurst": "Yes please. Was just looking to implement this, but could only find a single choice selector!. ",
    "jackyhieu1211": "thanks you. . ",
    "yohni": "thanks . ",
    "AminRahkan": "you should use android studio 3 canary version . you shoud write \n    ext.anko_version='0.10.1'\nin build.gradle (module: app) the same as picture \n\n. ",
    "YZHIWEN": "i use android studio 3, but still some question, such can not preview activity, can not find the preview button after restart as3\n\n. ",
    "reflog": "any news on this issue? would really like to try out Anko, but without preview it's really hard to use :(. Thanks, interesting read. Basically, for the near future Anko DSL is not for production use I fear. But I hope it will be one day, really rooting for it :). ",
    "noln": "You can specify an ArrayAdapter as you would any other spinner in Kotlin.\nTry this:\n```\n// Items for spinner\nval items = arrayOf(\"One\", \"Two\", \"Three\", \"Four\", \"Five\")\n// Alert with a spinner\nalert(\"Example Alert\") {\n            title = \"Example Alert\"\n            customView {\n                verticalLayout {\n                    spinner {\n                        adapter = ArrayAdapter(ctx, android.R.layout.simple_spinner_dropdown_item, items)\n                    }\n                }\n            }\n        }.show()\n```. ",
    "mareksabo": "Try adding import explicitly:\njava\nimport org.jetbrains.anko.startActivity. Thank you, but I don't need to center radioGroup.\nLinear layout with horizontal orientation makes sure that radio buttons have the same \"boxes\" size.\nI need to center radio button inside the box, not center all the boxes.\nAgain, image and code example are better than 1000 words:\n\nThe radio buttons are not centered.\n```kotlin\nverticalLayout {\n radioGroup {\n  orientation = LinearLayout.HORIZONTAL\nrepeat(4) {\n    // 4 buttons have the same \"box size\"\n    // they have the same distance between each other, \n    // but are aligned to the left side, not the center\n    radioButton {\n        gravity = Gravity.CENTER\n    }.lparams {\n        width = matchParent\n        weight = 1f\n    }\n  }\n }\n}.lparams(width = matchParent)\n```. ",
    "akram-aq1": "Hey Parker,\nBeen a long time since you posted this, but wanted to share my experience for anyone who comes after - Android dialogs, by design, dismiss themselves after those buttons are tapped.\nThis isn't great, and I've found myself using the following reference to work around it: https://stackoverflow.com/a/40261920\nCheers,\nAkram. ",
    "AugustoFavretto": "alert {\n    titleResource = R.string.title\n    messageResource = R.string.message\n    positiveButton(R.string.ok, { dialog ->\n        dialog.dismiss()\n    })\n    negativeButton(R.string.cancel, { dialog ->\n        dialog.dismiss()\n    })\n    show()\n}. ",
    "AddictArts": "@Amejia481 \nHere it is. See the this message never appears in logcat\n```\nackage edu.northwestern.langlearn\nimport android.os.Bundle\nimport android.support.v7.app.AppCompatActivity\nimport kotlinx.android.synthetic.main.content_message.errorMessage\nimport org.jetbrains.anko.AnkoLogger\nimport org.jetbrains.anko.debug\nimport org.jetbrains.anko.intentFor\nimport org.jetbrains.anko.newTask\nimport org.jetbrains.anko.clearTask\nclass MessageActivity : AppCompatActivity(), AnkoLogger {\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        setContentView(R.layout.activity_message)\n        supportActionBar?.setDisplayHomeAsUpEnabled(true)\n        supportActionBar?.setDisplayShowHomeEnabled(true)\n    val msg = intent.getStringExtra(SleepMode.MESSAGE_INTENT_EXTRA)\n\n    debug(\"This never appears in the Device Monitor\")\n    debug(\"Msg: $msg\") // ./adb shell setprop log.tag.LangLearn DEBUG\n    errorMessage.text = msg\n}\n\noverride fun onBackPressed() {\n    startActivity(intentFor<MainActivity>().newTask().clearTask())\n    finish()\n}\n\n}\n```. ",
    "jmi2k": "I added another property. As it involves TextView too I decided to reuse this PR.. This should be reverted, it shouldn't point to your home dir.. ",
    "yagoazedias": "ext.anko_version='0.10.1'\nIt's a thing that should be in the readme file. ",
    "adrianbukros": "Good idea but I have just seen another PR which introduces LENGTH_INDEFINITE PR-454. So I didn't want to conflict with that one.. ",
    "pruas": "can u show some code snippet?. what error occurs? any err log? \ni think u should write like this:\njava\nval intent = Intent(ui.ctx, Private::class.java)\n                    intent.putExtra(\"arg\", \"0\")\n                    intent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP)\n                    ui.ctx.startActivity(intent)\nBecause the class MyActivityUI is not inner class of MainActivity, so u can't call startActivity directly.. ",
    "Mercury-Dai": "ahha,sorry,this should not be a sdk fault,i will close this issue and thanks.. ",
    "guidev224": "The error is not due to the AUTOINCREMENT. It occurs when you concatenate more than two values. I am stuck on the same issue.. ",
    "lucasvdev": "Hi, there is a new commit which correct bugs for AS 3.0. I dont know how to compile and make a jar plugin file ? Can anybody help me ?. Hey, thanks you, you could give me your jar idea plugin ?. Thanks you, yes i keep that in mind, but i tried everything and nothing worked and we really need that plugin because we working on a project which all views are written in Anko and we loose too much time to test views . You are right ... ",
    "JDDJJ": "will this plugin update? there are so many errors in 0.10.1. ",
    "ZhengKeli": "oh I'm new. I'm not very sure what will happen if I press any button here .... ",
    "jdtorregrosas": "Sorry, it was my fault. I was assigning everything included the .show()\nIt works like this:\n```\nval mProgressDialog = indeterminateProgressDialog(\"Description\", \"Title\")\nmProgressDialog.show()\nmProgressDialog.dismiss()\n```\n. ",
    "gouravkundu": "By Mistake. ",
    "Aetherna": "Are u addding LinearLayout in loop on purpose or want to add TextViews to one LinearLayout?. ",
    "MinkiPan": "on purpose, I want 10 Textviews in my LinearLayout. ",
    "JSila": "Have you solved the issue? I faced similar error and solved it by wrapping my layout definition with another linearLayout. IMO this error has to do with the fact there is more than one view at root level.. ",
    "at-vinhhuynh": "@MinkiPan \ntry\n...\n(1..10).forEach {\n                verticalLayout {\n                    textView {\n                         id = it\n                    }\n                }\n            }\n.... ",
    "Herryjoeson": "me to,please write sample for wiki.thank you. ",
    "abdul-rehman-2050": "I think It would be great to have demos. . ",
    "nbnbbs": "ViewModel contain data for your UI, what a problem to bind it to Anko view? . ",
    "partounian": "Came across this question while looking into Room vs Anko SQLite, would love to hear more about those modules, and the future of this project. ",
    "qbait": "Bug still exists, any workaround?. ",
    "Rawa": "I think this issue needs more attention. The AnkoLogger is not very user-friendly in it's current state. Maybe it would be possible to set this using BuildConfig. E.g If debug build print debug logs?. They are by default not turned on in Android. This is a according to design: See https://github.com/Kotlin/anko/issues/104#issuecomment-155486633 for more info. \nIf you want to be able to turn on this by default I guess upvoting this issue is the way to go.. ",
    "gaffonso": "I agree that Anko is doing \"the right thing\" by checking isLoggable() behind the scenes before it calls Log.  That's an important optimization to preserve.\nThe fact that, by default, isLoggable() returns false for VERBOSE and DEBUG logging levels isn't terribly convenient for devs.  It is, effectively, acting as a pre-filter to the log entries shown in Logcat. (For dev builds, I'd prefer to have all log entries \"written out\" and then just filter once they get to Logcat.)\nThe general guidance for enabling VERBOSE and DEBUG in Anko is to change the isLoggable default behavior when initiating runs via ADB by setting a system property on the command line to affect this, something like log.tag.MyAppTag=WARN\nHOWEVER\n\n\nAffecting the Anko log-level via a log.tag system property allows you to affect only a single tag-name at a time (Anko, with its \"terse\" logging statments auto-sets the tag to the classname).  This means you cannot \"enable debug logging\" for the entire application using this technique, you need to enable it on a tag-by-tag basis.\n\n\nIt's stupid-hard to find guidance on how to change the behavior of isLoggable (the log.tag System Property) when not initiating runs from adb but instead initiating runs via an Android Studio run configuration.  Android studio run configurations provide no way I can see to \"set system properties\".\n\n\n+1 for spending some more time getting this \"right\".  In the least I would suggest the following bare-minimum functionality:\n\nImproving the documentation for Anko Logging such that it's clear how to override the isLoggable() defaults in a variety of situations/contexts (notably, when running via Android Studio Run Configurations).\n\nOR (better yet)\n\nChange the underlying mechanism by which Anko determines what to \"pre-filter\".  Let whatever the underlying flag is that's used as a pre-filter check be able to affect logging app-wide (not just a single tag) AND ensure that this flag is controllable via Android Studio Run Configurations.  Perhaps do not use isLoggable() checks, they seem to be an arcane little corner of Android that's poorly documented, at least WRT to Android Studio.. \n",
    "berkus": "Anything being done on this front or it's just generally not recommended to use AnkoLogger now?. ",
    "Flo354": "Also interested. We can't use it for now. ",
    "JEKos": "@4u7 can you merge that please?. ",
    "mg2000": "Use AppCompatTextView instead of TextView. ",
    "suhocki": "I use such extension \nkotlin\ninline fun ViewManager.textViewCompat(init: (@AnkoViewDslMarker AppCompatTextView).() -> Unit): AppCompatTextView {\n    return ankoView({ ctx: Context -> AppCompatTextView(ctx) }, theme = 0) { init() }\n}\nkotlin\ntextViewCompat {\n    TextViewCompat.setAutoSizeTextTypeUniformWithConfiguration(\n        this, 1, 14, 1, TypedValue.COMPLEX_UNIT_SP\n    )\n}. ",
    "knuttyse": "Thank you for your suggestions! Unfortunately I do not have the time to try these solutions at the moment.. ",
    "AllanWang": "@1001101 correct, but the key is that you used with(it). What if someone doesn't do that by accident? (As I have until I've noticed it now). Would it not be better to have a redefined uiThread accepting T.() -> Unit vs (T) -> Unit?. The comment here is that the with usage can be avoided entirely if the lambda was of type Context.() -> Unit. People may not be aware of the weak references, and if it really made a difference, then our usage without it would break everything.. The difference here is that people may not realize the weak reference exists, and then try to access Context directly. Making it an extension would make things more natural, as you can write code in an Activity as you would normally, and the context used would instead be that from the unwrapped weak reference. If you supply a user with a function T.(T) -> Unit, their intuition may not always lead them to use the parameter, especially since it is hidden within single arg lambda notation. This naturally doesn't solve the problem if you are in a view and choose to get contexts through getContext().\nRegardless, this was a comment I made a year ago, as weakreferences were things I glossed over for months before realizing it. I understand that I have pointed to this issue within the kotlin slack for clarifications of the necessity of weak references, but I think I'm clear on that now with the lifecycles. Given that anko does not enforce destruction in the lifecycle, it needs weak references. Coroutines on the other hand are expected to handle it from the parent job, and don't need the weak references.. Another solution is to use delegation to keep a copy of the preference. That way, you will always be able to use apply() and you'll always avoid calling from IO if the variable is unchanged.\nHere is my implementation\nAnything delegated acts as if it's a normal variable. Relates to #542 . Isn't async deprecated in Anko?\nI think you should be using doAsync instead. Likewise, exceptions are consumed by default, but you can add your own consumer to log it in crashlytics.\nTo me at least, consuming exceptions is beneficial, as a lot of uses for async involves fetching something that may or may not help enhance the UI. In many cases, I'd rather have it fail silently and not crash the entire app if something changes.\nNaturally, if you want to avoid all this, you can simply supply your own try catch as well and handle everything before it makes it to the base consumer. You can also set your consumer to only throw the exceptions when debugging. As your referenced issue suggests, you may try propagating errors on launch. Maybe you'll also want to move this issue, as this no longer applies to Anko.\nAndroid Studio should already be warning you that async() is deprecated in Anko, and if you have lint, you'll get a warning there as well. I think that makes more sense than keeping a list of deprecations in the wiki. It looks like the constructor is the same for both, so have you tried passing in your own context that overrides the exception handler? (Link to post).. ",
    "humazed": "I think you could use activityUiThreadWithContext as it takes Context as a receiver.. ",
    "gildor": "I'm not sure that answer from @1001101 is correct, because anyObj and uIThread lambda are captured by background thread lambda and will leak during // background thread. invocation and dispatching. > Would this hold onto the activity reference, since it is needed to call show, which effectively renders the weak reference a strong reference?\nYes, to invoke activity method show() lambda has hard reference to activity. There is no difference how you use some variable as T.() -> Unit or (T) -> Unit or just T.doSomething(), all those cases are exactly the same in terms of memory management. Things like activityUiThreadWithContext just a wrapper for weak reference.\nAnyway, I wouldn't recommend using doAsync just because it doesn't work with cancellation and lifecycle. The only thing that you can do: use weak reference which is not perfect also can cause leaks (for example if this reference leaked to another code or even just saved to local variable). @AllanWang \n\nThe difference here is that people may not realize the weak reference exists, and then try to access Context directly\n\nI think the problem is much-much wider and you shouldn't focus on Context only, because capturing of the parent class (such as Activity) in lambda always cause at least temporary memory leak if your operation is not cancellable. In cases when you do not capture parent context, the compiler can avoid this implicit reference to parent class (which is not true if you use Java anonymous class which always keeps the implicit reference on parent class).\n\nGiven that anko does not enforce destruction in the lifecycle, it needs weak references\n\nYes, this is correct, because doAsync is blocking and non-cancellable operation. And this is fatal, non-solvable problem,.\nSo I think we shouldn't talk about lambdas with receiver (T.() -> Unit) or about getContext(), because in case of blocking/non-cancellable operations you must use only weak references to avoid leaks and this is very tedious (even with helprs that Anko provides) and very error-prone.\nSo my suggestion would be the same as @1001101, use some abstraction/framework for asynchronous operations that provides cancellation and lifecycle management out of the box, such as RxJava or Kotlin Coroutines (which is even more strict in terms of lifecycle and scopes)\n. ",
    "1001101": "\nI'm not sure that answer from @1001101 is correct, because anyObj and uIThread lambda are captured by background thread lambda and will leak during // background thread. invocation and dispatching\n\nThanks for reply and it noticed me. I deleted the answer. (But after I check the Anko source again, I can sure that I was correct.)\nThe receiver of doAsync is wrapped with WeakReference, it will not strong reference to AnkoAsyncContext, so it is safe to use it in uiThread.\nBTW, I suggest to use disposable with RxJava to release resources and reference. I have use RxJava and kotlin coroutines with custom dispatcher instead of anko async for a year.\n. Example:\n```\ninline fun LinearLayoutCompat.divider(color: Int, sizePx: Int) {\n    dividerDrawable = GradientDrawable().apply {\n        this.setSize(matchParent, sizePx)\n        this.setColor(color)\n    }\n    showDividers = LinearLayoutCompat.SHOW_DIVIDER_MIDDLE\n}\n```. ",
    "JimmyRobz": "Thanks for the review.\nI did use constants first but I saw that existing functions alignParentStart and alignParentEnd were using int literals. \nI agree that it would be better with constants and with @RequestApi annotation.\nI will update the PR with these modifications asap.. @4u7 PR updated with recommandations.. ",
    "gustavo-falarz": "Fixed by defining the target repository to \"jcenter()\" instead of \"mavenCentral()\". ",
    "zllbird": "pull. ",
    "paul-hammant": "That's great news - can you show some examples of the DSL showing for loops and if conditions?. The way the flutter team have their information architecture is really clear. Refer https://www.dartlang.org/samples#control-flow-statements for if conditional and for-loops. It's really easy for the casual reader to see the power of this stuff.. You're in charge of your own OSS pieces, we'll agree to disagree :). ",
    "yaosongqwe": "anko_version = '0.10.2'\nkotlin_version = '1.1.51'. Plugin version is also 0.10.2. when preview activity's UI\uff1a\nThe following classes could not be found:\n-\u00a0__anko.preview.View (Change to android.media.tv.TvView, Fix Build Path, Edit XML, Create Class). sorry\uff0cthe error just said so,\nwhen I try to use Anko Layout preview.\n. @ivankolev \nThank you very much.\nI have solved that by your way, and then i preview my DSL layout successfully.. ",
    "ivankolev": "Can confirm, the same happens to me. Here's the stack trace:\n2017-11-13 15:34:04,797 [ thread 72]  ERROR - plication.impl.ApplicationImpl - Access is allowed from event dispatch thread only. \ncom.intellij.diagnostic.LogEventException: Access is allowed from event dispatch thread only.\n    at com.intellij.openapi.application.impl.ApplicationImpl.assertIsDispatchThread(ApplicationImpl.java:1112)\n    at com.intellij.openapi.application.impl.ApplicationImpl.assertIsDispatchThread(ApplicationImpl.java:1101)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.assertDispatchThread(FileEditorManagerImpl.java:1513)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.getSelectedTextEditor(FileEditorManagerImpl.java:1196)\n    at com.intellij.openapi.fileEditor.impl.FileEditorManagerImpl.getSelectedTextEditor(FileEditorManagerImpl.java:1191)\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewClassResolver.getOnCursorPreviewClassDescription(DslPreviewClassResolver.kt:47)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager.refresh(AnkoNlPreviewManager.kt:129)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager.access$refresh(AnkoNlPreviewManager.kt:40)\n    at org.jetbrains.kotlin.android.dslpreview.AnkoNlPreviewManager$2.execute(AnkoNlPreviewManager.kt:73)\n    at com.android.tools.idea.gradle.project.build.invoker.GradleTasksExecutorImpl.lambda$showGradleOutput$4(GradleTasksExecutorImpl.java:472)\n    at com.intellij.openapi.util.ExecutionCallback.setExecuted(ExecutionCallback.java:58)\n    at com.intellij.openapi.util.ActionCallback.setDone(ActionCallback.java:72)\n    at com.android.tools.idea.gradle.project.build.invoker.GradleTasksExecutorImpl.lambda$collectMessages$5(GradleTasksExecutorImpl.java:489)\n    at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n2017-11-13 15:34:04,799 [ thread 72]  ERROR - plication.impl.ApplicationImpl - Android Studio 3.0  Build #AI-171.4408382 \n2017-11-13 15:34:04,799 [ thread 72]  ERROR - plication.impl.ApplicationImpl - JDK: 1.8.0_152-release \n2017-11-13 15:34:04,799 [ thread 72]  ERROR - plication.impl.ApplicationImpl - VM: OpenJDK 64-Bit Server VM \n2017-11-13 15:34:04,799 [ thread 72]  ERROR - plication.impl.ApplicationImpl - Vendor: JetBrains s.r.o \n2017-11-13 15:34:04,799 [ thread 72]  ERROR - plication.impl.ApplicationImpl - OS: Windows 10 \n2017-11-13 15:34:04,799 [ thread 72]  ERROR - plication.impl.ApplicationImpl - Last Action:. Ok, so the problem seems to be that we are not implementing an AnkoComponent, as outlined here:\nhttps://github.com/Kotlin/anko/wiki/Anko-Layouts#anko-support-plugin\nWhen I followed the steps there, the preview works properly.. ",
    "Ant8": "just a wild a** guess, but perhaps InstrumentationRegistry.getInstrumentation().runOnMainSync { } would help? Or better yet, externalising executor/thread pools and providing them to doAsync?. ",
    "FrancoSabadini": "Thanks for the answer @Ant8. In the end, I ended up moving to coroutines as I thought it was interesting to learn how to use them. I still had this issue in a different way (when using the UI constant that is used to run a coroutine on the main thread), so I created some custom code to use my own constant instead of UI so that I could override it in tests.\nI hope your answer can help other people that are having this issue!. ",
    "DFreds": "Same for 3.0. I get an \"Anko Support threw an uncaught NoClassDefFoundError\" and the preview view is grey with only the text \"__anko.preview.View\" in it.. ",
    "ti4n1993": "@4u7 do you mean this?\norg/jetbrains/kotlin/codegen/CodegenFileClassesProvider\njava.lang.NoClassDefFoundError: org/jetbrains/kotlin/codegen/CodegenFileClassesProvider\n    at org.jetbrains.kotlin.android.dslpreview.DslPreviewClassResolver.resolveClassDescription(DslPreviewClassResolver.kt:113)\n    at org.jetbrains.kotlin.android.dslpreview.UpdateActivityNameTask.processRequest(UpdateActivityNameTask.kt:42)\n    at org.jetbrains.kotlin.android.dslpreview.UpdateActivityNameTask.processRequest(UpdateActivityNameTask.kt:12)\n    at org.jetbrains.kotlin.idea.util.LongRunningReadTask$1$1.run(LongRunningReadTask.java:110)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:931)\n    at org.jetbrains.kotlin.idea.util.LongRunningReadTask$3.run(LongRunningReadTask.java:226)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)\n    at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)\n    at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)\n    at org.jetbrains.kotlin.idea.util.LongRunningReadTask.runWithWriteActionPriority(LongRunningReadTask.java:223)\n    at org.jetbrains.kotlin.idea.util.LongRunningReadTask$1.run(LongRunningReadTask.java:105)\n    at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745). ",
    "burkaslarry": "I follow your instruction and search \"Convert to Anko Layout DSL\" , can't find. ME TOO . \n4:09 PM Plugin Error: Anko Support threw an uncaught ExceptionInInitializerError. Disable Plugin\n```\nxml version=\"1.0\" encoding=\"utf-8\"?\n\n<include\n    layout=\"@layout/app_bar_ieover_view\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\" />\n\n<android.support.design.widget.NavigationView\n    android:id=\"@+id/nav_view\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"match_parent\"\n    android:layout_gravity=\"start\"\n    android:fitsSystemWindows=\"true\"\n    app:headerLayout=\"@layout/nav_header_ieover_view\"\n    app:menu=\"@menu/activity_ieover_view_drawer\" />\n\n\n```. I use 3.1 Canary 4 and still got. an Anko Support threw an uncaught ExceptionInInitializerError. \n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n\n<TextView\n    android:id=\"@+id/textView\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentTop=\"true\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"80dp\"\n    android:fontFamily=\"@font/proxima_nova_black\"\n    android:text=\"WCHING TMS\"\n    android:textColor=\"#ffffff\"\n    android:textSize=\"30sp\" />\n\n<EditText\n    android:id=\"@+id/editTextComp\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentTop=\"true\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"180dp\"\n    android:backgroundTint=\"@color/lightGrey\"\n    android:drawableStart=\"@drawable/ic_company\"\n    android:ems=\"10\"\n    android:inputType=\"textPersonName\"\n    android:drawablePadding=\"4dip\"\n    android:text=\"Name\"\n    android:textColor=\"@color/lightGrey\"\n    android:textColorHint=\"@color/lightGrey\" />\n\n\n<EditText\n    android:id=\"@+id/editTextUser\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentTop=\"true\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"240dp\"\n    android:backgroundTint=\"@color/lightGrey\"\n    android:drawableStart=\"@drawable/ic_user\"\n    android:ems=\"10\"\n    android:inputType=\"textPersonName\"\n    android:drawablePadding=\"4dip\"\n    android:text=\"Name\"\n    android:textColor=\"@color/lightGrey\"\n    android:textColorHint=\"@color/lightGrey\" />\n\n\n<EditText\n    android:id=\"@+id/editTextPassword\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentTop=\"true\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"300dp\"\n    android:backgroundTint=\"@color/lightGrey\"\n    android:drawableStart=\"@drawable/ic_password\"\n    android:ems=\"10\"\n    android:inputType=\"textPersonName\"\n    android:drawablePadding=\"4dip\"\n    android:text=\"Name\"\n    android:textColor=\"@color/lightGrey\"\n    android:textColorHint=\"@color/lightGrey\" />\n\n<Button\n    android:id=\"@+id/button\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_alignParentBottom=\"true\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginBottom=\"102dp\"\n    android:background=\"@color/blue\"\n    android:text=\"Login\"\n    android:textColor=\"@color/white\" />\n\n<Button\n    android:id=\"@+id/button2\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:layout_below=\"@+id/button\"\n    android:layout_centerHorizontal=\"true\"\n    android:layout_marginTop=\"-102dp\"\n    android:background=\"@null\"\n    android:text=\"Forget Password ? \"\n    android:textColor=\"@color/white\" />\n\n\n<Spinner\n    android:id=\"@+id/langSpinner\"\n    android:layout_width=\"214dp\"\n    android:layout_height=\"wrap_content\"\n    android:layout_below=\"@+id/button2\"\n    android:layout_centerHorizontal=\"true\"\n    android:background=\"@drawable/ic_world\"\n    android:drawablePadding=\"4dip\"\n    android:padding=\"5dip\"\n    android:entries=\"@array/language\" />\n\n\n```. ",
    "Feng0923": "How to solve it\njava.lang.NoSuchMethodError: org.jetbrains.anko.AnkoContext$Companion.create(Landroid/content/Context;Z)Lorg/jetbrains/anko/AnkoContext;\n    at __anko.preview.View.init(Unknown Source)\n    at __anko.preview.View.(Unknown Source)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at org.jetbrains.android.uipreview.ViewLoader.createNewInstance(ViewLoader.java:481)\n    at org.jetbrains.android.uipreview.ViewLoader.loadClass(ViewLoader.java:264)\n    at org.jetbrains.android.uipreview.ViewLoader.loadView(ViewLoader.java:222)\n    at com.android.tools.idea.rendering.LayoutlibCallbackImpl.loadView(LayoutlibCallbackImpl.java:211)\n    at android.view.BridgeInflater.loadCustomView(BridgeInflater.java:337)\n    at android.view.BridgeInflater.loadCustomView(BridgeInflater.java:348)\n    at android.view.BridgeInflater.createViewFromTag(BridgeInflater.java:248)\n    at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:730)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:492)\n    at android.view.LayoutInflater.inflate(LayoutInflater.java:394)\n    at com.android.layoutlib.bridge.impl.RenderSessionImpl.inflate(RenderSessionImpl.java:325)\n    at com.android.layoutlib.bridge.Bridge.createSession(Bridge.java:384)\n    at com.android.tools.idea.layoutlib.LayoutLibrary.createSession(LayoutLibrary.java:193)\n    at com.android.tools.idea.rendering.RenderTask.createRenderSession(RenderTask.java:547)\n    at com.android.tools.idea.rendering.RenderTask.lambda$inflate$3(RenderTask.java:681)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:266)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n. Thanks 4u7 @4u7. ",
    "heinrichreimer": "I guess a ViewStub might be what you're looking for.. ",
    "kizitonwose": "Closed this in favour of #512. @4u7 The errors are now fixed.. ",
    "muhrifqii": "I tried to make a trivial layout like the one when creating a new basic activity (from the android studio menu). A layout that has 1 toolbar, 1 fab, and 1 content (in my case a recyclerview) inside a coordinatorlayout. Actually a very basic layout without a collapsing toolbar. @4u7 Thank you. So in anko I have to define the scrollFlag on my toolbar whereas on xml layout I don't have to add scrollFlag to the toolbar to create a normal toolbar (non-collapsing)?\nBoth of these producing the same layout. The different is on the scrollfag defined on my anko to stop toolbar for scrolling up\n```xml\n\n\n\n\n\n\n\n```\n```kotlin\nclass MainActivityUI(\n    val adapter: RecyclerView.Adapter) : AnkoComponent {\nprivate lateinit var toolbar: Toolbar\noverride fun createView(ui: AnkoContext): View = with(ui) {\n    coordinatorLayout {\n      fitsSystemWindows = true\n      themedAppBarLayout(R.style.AppTheme_AppBarOverlay) {\n        toolbar {\n          id = Ids.toolbar\n          setTitleTextColor(WHITE)\n          popupTheme = R.style.AppTheme_PopupOverlay\n        }.lparams(width = matchParent){\n          scrollFlags = SCROLL_FLAG_ENTER_ALWAYS\n        }\n      }.lparams(width = matchParent) {\n        //        behavior = AppBarLayout.ScrollingViewBehavior()\n      }\n      frameLayout {\n        recyclerView {\n          id = Ids.mainList\n          layoutManager = LinearLayoutManager(ctx)\n          adapter = this@MainActivityUI.adapter\n          lparams(matchParent, matchParent)\n        }\n      }.lparams(width = matchParent, height = matchParent) {\n        behavior = AppBarLayout.ScrollingViewBehavior()\n      }\n      floatingActionButton {\n        id = Ids.faButton\n        imageResource = R.drawable.ic_add_circle_white\n      }.lparams {\n        gravity = Gravity.RIGHT or Gravity.BOTTOM\n        margin = dip(16)\n      }\n    }\n  }\n}\n```. Thank you, I didn't even know there's such an inconsistency on creating layout in xml & programatically. It is clearer now. ",
    "Uiasdnmb": "I found myself not using bg() since it does't allow usage of Ref<> values. \nbg{\n    ref()  // compiler doesn't let this through\n}\nasync(FixedCoroutineContext){ // this is a fixed threadpool context\n    ref() //this is fine\n}\nKotlin 1.2.10, Anko 0.10.4 I get \"suspension function can be called only form within coroutine body\".. ",
    "DHosseiny": "work is in progress to let crossinlinework with suspend: https://youtrack.jetbrains.com/issue/KT-19159. ",
    "neiljaywarner": "what about the documentation update? .... ",
    "tateisu": "allCaps. \n. \nalso There is a blur in naming.. for about paddingStart, I've prepare extension function.\n```\nvar View.paddingStartCompat :Int\n    get() = this.paddingStart\n    set(start){\n        setPaddingRelative(start,paddingTop,paddingEnd,paddingBottom)\n    }\nvar View.paddingEndCompat :Int\n    get() = this.paddingEnd\n    set(end){\n        setPaddingRelative(paddingStart,paddingTop,end,paddingBottom)\n    }\nfun View.setPaddingStartEnd(start:Int,end:Int ){\n    setPaddingRelative(start,paddingTop,end,paddingBottom)\n}\ntextView {\n    paddingStartCompat =dip(2)\n}\n```. I prepared extended properties to aid input completion for margin\n```\nvar ViewGroup.MarginLayoutParams.startMargin : Int\n    get() = marginStart\n    set(start) {\n        marginStart = start\n    }\nvar ViewGroup.MarginLayoutParams.endMargin : Int\n    get() = marginEnd\n    set(end) {\n        marginEnd = end\n    }\n```. extension function for help it.\nvar TextView.minWidthCompat : Int\n    get() = minWidth\n    set(value) {\n        minimumWidth = value\n        minWidth = value\n    }\n. ",
    "kuleshovdv": "@ParkerK Just use execSQL method\ndb.execSQL(\"ALTER TABLE mytable RENAME TO oldtable;\") \nand other ALTER TABLE requests this way. ",
    "sukill": "oh thanks.. i missed that point. . ",
    "ellsworthrw": "I have created similar coroutine functions in https://github.com/ellsworthrw/KtVolley which have the same compile issue. It would be good to know what the general fix to this is so it can be used elsewhere.. ",
    "nadim1992": "https://kotlinlang.org/docs/reference/compatibility.html. Welcome. ",
    "Joslyn-Chen": "@z3ndNadim thank you. \u8c22\u8c22\u3002. ",
    "Daemon-Devarshi": "Same problem here :(\nBelow is the stack trace:\n```\norg.jetbrains.kotlin.android.dslpreview.LayoutPsiFile cannot be cast to com.intellij.openapi.util.UserDataHolderEx\njava.lang.ClassCastException: org.jetbrains.kotlin.android.dslpreview.LayoutPsiFile cannot be cast to com.intellij.openapi.util.UserDataHolderEx\n    at com.intellij.psi.impl.source.tree.injected.InjectedLanguageUtil.getCachedInjectedDocuments(InjectedLanguageUtil.java:436)\n    at com.intellij.codeInsight.editorActions.TypedHandler.injectedEditorIfCharTypedIsSignificant(TypedHandler.java:341)\n    at com.intellij.codeInsight.editorActions.BackspaceHandler.handleBackspace(BackspaceHandler.java:82)\n    at com.intellij.codeInsight.editorActions.BackspaceHandler.executeWriteAction(BackspaceHandler.java:62)\n    at com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler$1.run(EditorWriteActionHandler.java:50)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(ApplicationImpl.java:1023)\n    at com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler.doExecute(EditorWriteActionHandler.java:63)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler$3$1.perform(EditorActionHandler.java:206)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.doIfEnabled(EditorActionHandler.java:109)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.access$000(EditorActionHandler.java:38)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler$3.perform(EditorActionHandler.java:203)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.lambda$runForEachCaret$2(CaretModelImpl.java:364)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.doWithCaretMerging(CaretModelImpl.java:453)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.runForEachCaret(CaretModelImpl.java:356)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.runForEachCaret(CaretModelImpl.java:347)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.execute(EditorActionHandler.java:200)\n    at com.intellij.codeInsight.lookup.impl.BackspaceHandler.doExecute(BackspaceHandler.java:38)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler$4.perform(EditorActionHandler.java:217)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.doIfEnabled(EditorActionHandler.java:109)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.execute(EditorActionHandler.java:214)\n    at com.intellij.openapi.editor.actionSystem.EditorAction.lambda$actionPerformed$0(EditorAction.java:98)\n    at com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(CoreCommandProcessor.java:149)\n    at com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(CoreCommandProcessor.java:109)\n    at com.intellij.openapi.editor.actionSystem.EditorAction.actionPerformed(EditorAction.java:107)\n    at com.intellij.openapi.editor.actionSystem.EditorAction.actionPerformed(EditorAction.java:86)\n    at com.intellij.openapi.actionSystem.ex.ActionUtil$1.run(ActionUtil.java:215)\n    at com.intellij.openapi.actionSystem.ex.ActionUtil.performActionDumbAware(ActionUtil.java:232)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher$1.performAction(IdeKeyEventDispatcher.java:570)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.lambda$processAction$2(IdeKeyEventDispatcher.java:619)\n    at com.intellij.openapi.application.TransactionGuardImpl.performUserActivity(TransactionGuardImpl.java:193)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.processAction(IdeKeyEventDispatcher.java:618)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.inInitState(IdeKeyEventDispatcher.java:477)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.dispatchKeyEvent(IdeKeyEventDispatcher.java:211)\n    at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:633)\n    at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:365)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\npluginDeclarationProviderFactory\nOn failure:\n-no synthetic files-\nOn creation:\n-no synthetic files-\nat org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)\nat org.jetbrains.kotlin.resolve.lazy.LazyDeclarationResolver.resolveToDescriptor(LazyDeclarationResolver.kt:91)\nat org.jetbrains.kotlin.resolve.lazy.ResolveSession.resolveToDescriptor(ResolveSession.java:331)\nat org.jetbrains.kotlin.idea.project.ResolveElementCache.resolveToElements(ResolveElementCache.kt:216)\nat org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.analyze(ResolutionFacadeImpl.kt:59)\nat org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.analyze(ResolutionFacadeImpl.kt:53)\nat org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.analyze(resolutionApi.kt:82)\nat org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptorIfAny(resolutionApi.kt:61)\nat org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptorIfAny$default(resolutionApi.kt:59)\nat org.jetbrains.kotlin.idea.core.PsiModificationUtilsKt.getModalityFromDescriptor(psiModificationUtils.kt:274)\nat org.jetbrains.kotlin.idea.core.PsiModificationUtilsKt.isInheritable(psiModificationUtils.kt:245)\nat org.jetbrains.kotlin.idea.core.PsiModificationUtilsKt.isOverridable(psiModificationUtils.kt:260)\nat org.jetbrains.kotlin.idea.highlighter.markers.KotlinLineMarkerProviderKt.collectOverriddenFunctions(KotlinLineMarkerProvider.kt:353)\nat org.jetbrains.kotlin.idea.highlighter.markers.KotlinLineMarkerProviderKt.access$collectOverriddenFunctions(KotlinLineMarkerProvider.kt:1)\nat org.jetbrains.kotlin.idea.highlighter.markers.KotlinLineMarkerProvider.collectSlowLineMarkers(KotlinLineMarkerProvider.kt:105)\nat com.intellij.codeInsight.daemon.impl.LineMarkersPass.queryProviders(LineMarkersPass.java:209)\nat com.intellij.codeInsight.daemon.impl.LineMarkersPass.lambda$doCollectInformation$3(LineMarkersPass.java:111)\nat com.intellij.codeInsight.daemon.impl.Divider.divideInsideAndOutsideInOneRoot(Divider.java:96)\nat com.intellij.codeInsight.daemon.impl.LineMarkersPass.doCollectInformation(LineMarkersPass.java:106)\nat com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)\nat com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)\nat com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)\nat com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)\nat com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)\nat com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)\nat com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)\nat com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)\nat com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)\nat com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)\nat com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)\nat com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)\nat com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)\nat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\nat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\nat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\nat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\n\n```. ",
    "luchonetvv": "same problem\norg.jetbrains.kotlin.android.dslpreview.LayoutPsiFile cannot be cast to com.intellij.openapi.util.UserDataHolderEx\njava.lang.ClassCastException: org.jetbrains.kotlin.android.dslpreview.LayoutPsiFile cannot be cast to com.intellij.openapi.util.UserDataHolderEx\n    at com.intellij.psi.impl.source.tree.injected.InjectedLanguageUtil.getCachedInjectedDocuments(InjectedLanguageUtil.java:436)\n    at com.intellij.codeInsight.editorActions.TypedHandler.injectedEditorIfCharTypedIsSignificant(TypedHandler.java:341)\n    at com.intellij.codeInsight.editorActions.BackspaceHandler.handleBackspace(BackspaceHandler.java:82)\n    at com.intellij.codeInsight.editorActions.BackspaceHandler.executeWriteAction(BackspaceHandler.java:62)\n    at com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler$1.run(EditorWriteActionHandler.java:50)\n    at com.intellij.openapi.application.impl.ApplicationImpl.runWriteAction(ApplicationImpl.java:1023)\n    at com.intellij.openapi.editor.actionSystem.EditorWriteActionHandler.doExecute(EditorWriteActionHandler.java:63)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler$3$1.perform(EditorActionHandler.java:206)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.doIfEnabled(EditorActionHandler.java:109)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.access$000(EditorActionHandler.java:38)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler$3.perform(EditorActionHandler.java:203)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.lambda$runForEachCaret$2(CaretModelImpl.java:364)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.doWithCaretMerging(CaretModelImpl.java:453)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.runForEachCaret(CaretModelImpl.java:356)\n    at com.intellij.openapi.editor.impl.CaretModelImpl.runForEachCaret(CaretModelImpl.java:347)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.execute(EditorActionHandler.java:200)\n    at com.intellij.codeInsight.lookup.impl.BackspaceHandler.doExecute(BackspaceHandler.java:38)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler$4.perform(EditorActionHandler.java:217)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.doIfEnabled(EditorActionHandler.java:109)\n    at com.intellij.openapi.editor.actionSystem.EditorActionHandler.execute(EditorActionHandler.java:214)\n    at com.intellij.openapi.editor.actionSystem.EditorAction.lambda$actionPerformed$0(EditorAction.java:98)\n    at com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(CoreCommandProcessor.java:149)\n    at com.intellij.openapi.command.impl.CoreCommandProcessor.executeCommand(CoreCommandProcessor.java:109)\n    at com.intellij.openapi.editor.actionSystem.EditorAction.actionPerformed(EditorAction.java:107)\n    at com.intellij.openapi.editor.actionSystem.EditorAction.actionPerformed(EditorAction.java:86)\n    at com.intellij.openapi.actionSystem.ex.ActionUtil$1.run(ActionUtil.java:215)\n    at com.intellij.openapi.actionSystem.ex.ActionUtil.performActionDumbAware(ActionUtil.java:232)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher$1.performAction(IdeKeyEventDispatcher.java:570)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.lambda$processAction$2(IdeKeyEventDispatcher.java:619)\n    at com.intellij.openapi.application.TransactionGuardImpl.performUserActivity(TransactionGuardImpl.java:193)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.processAction(IdeKeyEventDispatcher.java:618)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.inInitState(IdeKeyEventDispatcher.java:477)\n    at com.intellij.openapi.keymap.impl.IdeKeyEventDispatcher.dispatchKeyEvent(IdeKeyEventDispatcher.java:211)\n    at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:633)\n    at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:365)\n    at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)\n    at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)\n    at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)\n    at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)\n    at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)\nthe only way to solve it is to deactivate anko support for the moment, otherwise it does not allow modifying kotlin files. great, solved the problem that did not allow me to edit any kotlin file and anko layout preview working excellent, many thanks\n\n. ",
    "rytedesigns": "I was getting the same issue, and the hotfix works for me as well.. ",
    "lwegener": "thanks for the fix, works for me as well!. ",
    "naveedhasan": "+1\nThe converted to Anko example for Google's ConstraintLayout Codelab only works because of the preexisting IDs defined in the activity_main_done.xml layout file, which is confusing. The Anko code should work even if we delete all of the legacy layout XML files.. MainActivity.kt.txt - working update of MainActivity.kt that does not use data from layout XML files.. ",
    "mkubasz": "+1. ",
    "ahmafi": "+1. ",
    "kiratheone": "+1. If you have created custom view, you can do it like this\ninline fun ViewManager.loadingButton(init: (LoadingButton).() -> Unit): LoadingButton {\n    return ankoView({ ctx -> LoadingButton(ctx) }, theme = 0) {\n        init()\n    }\n}\nor custom view from anko\nfun ViewManager.customView(init: ConstraintLayout.() -> Unit): ConstraintLayout {\n    return constraintLayout {\n        init()\n        // custom view here\n    }\n}. ive had that error before\nim using anko 0.10.7 \nwith latest gradle, androidx and Android Studio\nand then that error is gone or you can Create Extensions androidx support for yourself\nsee also #634 for reference. ",
    "Rasalexman": "+1 must have. it's a simple as\nval alert = with(activity) {\nalert {\ncustomView = vertivalLayout {}\n}\n}\nalert.show()\n. ",
    "rafayali": "Tried using 0.10.3? As 0.10.4 is having some weird problems. See #536 . ",
    "bhbfhfb": "Thank you.\nThis problem does not occur.. ",
    "sd5869": "You can add listeners as follows:\n```\nalert{\n    layoutInflater.inflate(R.layout.dialog_city, null)\n}.setOnCancelListener(...).show()\n```. @evansherry  Please use this Plugin for the preview but you will need to build your project every time you need the preview.. ",
    "kobeumut": "well, the theme where to enter the style file?. ",
    "wisnukurniawan": "padding can be set inside view declaration, margin can be set inside lparams method.\nverticalLayout {\n            verticalLayout {\n                paddingStart = dip(8)\n                paddingEnd = dip(8)\n            }.lparams(width = matchParent, height = wrapContent) {\n                marginEnd = dip(8)\n                marginStart = dip(8)\n            }\n        }. ups sorry I'm wrong you right, that's from android SDK not from anko. ",
    "blackstardlb": "```\nfun PRIMARY_KEY(vararg columnNames: String): Pair {\n    return \"\" to SqlType.create(\"PRIMARY KEY (${actions.joinToString(\", \")}})\")\n}\ndb.createTable(crossTableName, true,\n        \"class_id\" to TEXT,\n        \"schedule_id\" to TEXT,\n        FOREIGN_KEY(\"class_id\", hhsClassTableName, \"id\", ON_DELETE(ConstraintActions.NO_ACTION)),\n        FOREIGN_KEY(\"schedule_id\", followableTableName, \"id\", ON_DELETE(ConstraintActions.CASCADE)),\n        PRIMARY_KEY(\"class_id\", \"schedule_id\")\n)\n```. You are droping the table in your onUpgrade. ",
    "evansherry": "@sd5869  I'm sorry, you are right , thx . ",
    "dawit-abraham": "@evansherry would you please provide a link to your working project repo. I am stack for 3 days with the same problem, and tried almost everything. ",
    "GraxMonzo": "You need to build your project everytime when you need preview. ",
    "MariusBoepple": "Ah sorry - We're using async() from kotlinx.coroutines - so that's not deprecated, right? Our solution now is the following: \nfun <T> asyncx(\n        context: CoroutineContext,\n        start: CoroutineStart = CoroutineStart.DEFAULT,\n        block: suspend CoroutineScope.() -> T\n) : DisposableHandle {\n    return  kotlinx.coroutines.experimental.async(context, start, block).invokeOnCompletion { e -> e?.let{\n        e.printStackTrace()\n        throw e\n    } }\n}\nDiscussed here: https://github.com/Kotlin/kotlinx.coroutines/issues/100\nI think the wiki should be updated and pointed out clearly that async() was moved to kotlinx.coroutines. But we want to use the async() functionalities with Deferred.await() to do multiple things concurrently (which is suggested in the wiki).\nAs far as I understand, Anko should be an abstraction layer for Android on top of the Kotlin coroutines -  so why shouldn't they provide an implementation of async {\u00a0} which throws exceptions (at least after completion)? . ",
    "liuyuran": "same here, but i'm using mac os, same Android studio version. ",
    "leslieharland": "Exactly the same issue I'm facing. I know this usually happens when I'm using a coordinator layout in Android Studio. Is there a bug with this plugin?. ",
    "louaydhyeb": "Same problem 2019. I have the same problem i'm blocked :/. ",
    "acrrono": "Same problem !!. same problem!. ",
    "easazade": "i think anko is an abandoned project. should we invest in anko or not?. ",
    "undali": "Following code centered radio buttons:\n```\n            radioGroup(){\n                orientation = LinearLayout.HORIZONTAL\n                radioButton {\n                    text = \"second(s)\"\n                }\n                radioButton {\n                    text = \"minutes(s)\"\n                }\n                radioButton {\n                    text = \"hour(s) !!\"\n                }\n            gravity = Gravity.CENTER\n        }\n\n```. ",
    "bapspatil": "Just tried that too. Not working.. That didn't work either. \nBut I found the solution.\nTurns out adding the org.jetbrains.anko:anko:$anko_version doesn't include the Snackbar.\nAdded org.jetbrains.anko:anko-design:$anko_version and it is now working fine.. ",
    "jppasa": "Had the same issue with the same version (0.10.4). I added a .show() and now it works.\nTry like snackbar(view, \"You just clicked me.\").show(). ",
    "veresvit": "Hi, Anko dialogs don't work either on the same Android Studio configuration as @erniealice described.. ",
    "DakotaWhipple": "I'm on build 3 but used 'com.android.tools.build:gradle:3.2.0-alpha04' and it fixed this for me.\n3.2 Canary 3 on Arch Linux . Fixed in #571 by updating to 'com.android.tools.build:gradle:3.2.0-alpha04'. Works in Android Studio 3.2-3. ",
    "erniealice": "Thank out @DakotaWhipple .. I'm using AS Canary 3.2 Build 4 and Gradle Alpha 4. Works fine now. Thanks!. You can still use Android Studio 3.3 Canary Build 5. The errors occur when using the Canary Build 6 and Gradle Alpha 6.\nAlso experiencing the same problem. IDE was throwing some errors though I haven't really changed my code, except for the necesaary build.gradle to match Gradle dependencies (Alpha 6).\nTo add, Context.alert functions to do not seem to work as well.. If you're comfortable with Canary builds, you can still use Android Studio 3.3 Canary Build 5. The errors occur when using the Canary Build 6 and Gradle Alpha 6.\nAlso experiencing the same problem. IDE was throwing some errors though I haven't really changed my code, except for the  necesaarybuild.gradle to match Gradle dependencies (Alpha 6).\nTo add, Context.alert functions to do not seem to work as well.. ",
    "joelhaasnoot": "Same as #571. ",
    "hendraanggrian": "Anytime!. But previous version has the same JVM signature with my version. If I combine both versions, it would cause platform declaration clash. I see 2 options here:\n * Abandon old version.\n * Update new version's function names.\nWhat do you think?. Yes that sounds reasonable. I have pushed an update containing previous version as deprecated. New Jvm function names have suffix 2 now.. ",
    "hotsxu": "thanks. ",
    "driff": "i know some time has passed but this is still open and  without a response.\ni had the same problem and with some searching i found this link\nhope it works!. ",
    "pandasys": "Maybe try something like:\nguideline {\n          id = ID_GUIDELINE\n        }.lparams(0, 0) {\n          orientation = ConstraintLayout.LayoutParams.VERTICAL\n          guideBegin = dip(80)\n        }\n. Sorry for late reply. Glad you fixed it. Here's a snippet of one of my ViewHolder views (no guideline in this,but you get the idea)\n```\nroot = constraintLayout {\n        id = ID_LAYOUT\n        layoutParams = ConstraintLayout.LayoutParams(MATCH_PARENT, dip(60))\n    selectedImage = imageView {\n      id = ID_IMAGE_VIEW\n      image = verifiedDrawable\n    }.lparams(imageSize, imageSize) {\n      bottomMargin = imageMargin\n      marginStart = startOrEnd\n      topMargin = imageMargin\n      bottomToBottom = PARENT_ID\n      startToStart = PARENT_ID\n      topToTop = PARENT_ID\n    }\n\n    titleView = textView {\n      id = ID_TITLE_VIEW\n      textAppearance = R.style.ApTextAppearance_Primary\n      maxLines = 1\n      singleLine = true\n      ellipsize = TextUtils.TruncateAt.END\n    }.lparams(0, wrapContent) {\n      marginEnd = startOrEnd\n      marginStart = between\n      bottomToTop = ID_ERROR_VIEW\n      endToEnd = PARENT_ID\n      horizontalBias = 0.5F\n      startToEnd = ID_IMAGE_VIEW\n      topToTop = PARENT_ID\n    }\n\n```. ",
    "rosariopfernandes": "Canceled and Cancelled are both correct as shown here, here and here.. I think removing it might be a harsh decision. I like @SUPERCILEX 's suggestion to mark it as deprecated.. I believe Bottom Sheets are not implemented in Anko, since it is not mentioned on the Dialogs Wiki. What problem are you facing? Is there any error output?. ",
    "HakuLess": "I meet same issue. ",
    "blastrock": "You can set up the behavior manually like this:\nkotlin\n            nestedScrollView {}.lparams(width = matchParent, height = matchParent) {\n                val bottomSheetBehavior = BottomSheetBehavior<NestedScrollView>()\n                bottomSheetBehavior.peekHeight = 0\n                bottomSheetBehavior.isHideable = false\n                // this calls CoordinatorLayout.LayoutParams.setBehavior\n                behavior = bottomSheetBehavior\n            }. I think I found the reason: the wrong editText() was called because the wrong customView was used.\ncustomView can't be called like that because it refers to the customView property, and not the extension function, this gives the following errors:\nUsing 'getter for customView: View' is an error. Property does not have a getter    \nExpression 'customView' of type 'View' cannot be invoked as a function. The function 'invoke()' is not found\n\nHere is a workaround that avoids calling the extension function:\nkotlin\n                    customView = ctx.UI {\n                        editText()\n                     }.view. ",
    "mgrmaxi": "this is the code you want\njust copy and monoplane as you need\nval toast = Toast.makeText(applicationContext,  \"HELLO\", Toast.LENGTH_SHORT)\n        toast.show()\n        toast.setGravity(Gravity.TOP or Gravity.CENTER, 0, 250)\n. ",
    "AkshayChordiya": "Yeah I agree removing is a bit harsh decision and let's go with marking it as deprecated. ",
    "JimmyTheNerd": "@seaskyways Thank you. I used GreenDAO before and wasn't aware of that.\nFor others:\n\nSQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in Date And Time Functions of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values:\n\nTEXT as ISO8601 strings (\"YYYY-MM-DD HH:MM:SS.SSS\").\nREAL as Julian day numbers, the number of days since noon in Greenwich on November 24, 4714 B.C. according to the proleptic Gregorian calendar.\nINTEGER as Unix Time, the number of seconds since 1970-01-01 00:00:00 UTC. \n\nApplications can chose to store dates and times in any of these formats and freely convert between formats using the built-in date and time functions.\n\nSource: https://www.sqlite.org/datatype3.html. ",
    "ajonno": "no takers ? i still can't figure this out!. ",
    "SeppPenner": "Hi @4u7. That's what I found out today in the morning, too.\n\nIf a column has the type INTEGER PRIMARY KEY AUTOINCREMENT then a slightly different ROWID selection algorithm is used. \n\nSee https://www.sqlite.org/autoinc.html.\nAnd it works this way:\nkotlin\noverride fun onCreate(db: SQLiteDatabase) {\n        db.createTable(\"FuelData\", false,\n                \"id\" to INTEGER + PRIMARY_KEY + AUTOINCREMENT,\n                \"fueled\" to REAL,\n                \"kilometers\" to REAL,\n                \"mileage\" to REAL,\n                \"consumption\" to REAL,\n                \"currentDate\" to TEXT)\n    }. According to the example it should be correct:\n\nAlso, you can create a row parser from the class constructor. Assuming you have a class:\nclass Person(val firstName: String, val lastName: String, val age: Int)\nThe parser will be as simple as:\nval rowParser = classParser()\n\nhttps://github.com/Kotlin/anko/wiki/Anko-SQLite#parsing-query-results. I found the issue: class org.jetbrains.anko.db.ClassParser.kt:\n```kotlin\nprivate fun hasApplicableType(type: Class<*>): Boolean {\n    if (type.isPrimitive) {\n        return true\n    }\nreturn when (type) {\n    java.lang.String::class.java, java.lang.CharSequence::class.java,\n    java.lang.Long::class.java, java.lang.Integer::class.java,\n    java.lang.Byte::class.java, java.lang.Character::class.java,\n    java.lang.Boolean::class.java, java.lang.Float::class.java,\n    java.lang.Double::class.java, java.lang.Short::class.java -> true\n    else -> false\n}\n\n}\n```\nand I used a Date datatype in the class, SQLite only supports the above datatypes.. I've now updated my data class to:\n```kotlin\npackage example.exampleproject.data\nimport java.util.*\nclass FuelData(\n        val id : Int,\n        val fueled: Double,\n        val kilometers: Double,\n        val mileage: Double,\n        val consumption: Double,\n        val currentDate: String\n)\n```. Ok, it's quite easy if you know how to get a raw query in Anko-SQLite...:\nUsing the following description: http://androidopentutorials.com/android-sqlite-join-multiple-tables-example/ I managed to do the following:\nI added a data class:\nkotlin\nclass FuelData2(\n        val id : Int,\n        val currentDate: String,\n        val litersPer100Km: Double\n)\nand added the logic to my activity class:\nkotlin\nprivate fun readFuelData2(): ArrayList<FuelData2> {\n        val resultList = ArrayList<FuelData2>()\n        val query = \"SELECT FuelData1.Id, FuelData2.CurrentDate, (FuelData2.Fueled / (FuelData2.Mileage - FuelData1.Mileage) * 100) AS LitersPer100Km\" +\n                \" FROM FuelData AS FuelData1\" +\n                \" INNER JOIN FuelData AS FuelData2\" +\n                \" ON FuelData1.Id = (FuelData2.Id - 1);\"\n        database.use {\n            val cursor = database.writableDatabase.rawQuery(query, null)\n            while (cursor.moveToNext()) {\n                val fuelData = FuelData2(id = cursor.getInt(0),currentDate = cursor.getString(1),\n                        litersPer100Km = cursor.getDouble(2))\n                resultList.add(fuelData)\n            }\n        }\n        return resultList\n    }. ",
    "alyyasser": "i got the same issue too.\nusing anko support plugin version 10.0.5 and android studio 3.1.2\nany workaround?. ",
    "bullWing": "I also have this problem.\nas 3.1.2 and anko anko support plugin 0.10.5. ",
    "panhs": "have you  solve it\uff1f. @4u7 i update anko support(0.10.5-2), does't work,\nerror is:\nThe following classes could not be found:\n-\u00a0__anko.preview.View (Change to android.media.tv.TvView, Fix Build Path, Edit XML, Create Class). ",
    "landongme": "Hi guys, add this code to build.gradle (App)  under dependencies\nkotlin {\n    experimental {\n        coroutines \"enable\"\n    }\n}\nthen, rebuild project and see... ",
    "touseefbsb": "this is surely a must do I think, will increase productivity of both libraries, as both libraries are great and must be simple to use together, and re implementing same thing with two libraries doesnt make any sense :). ",
    "yumeTsukiiii": "me too....... ",
    "Moosphan": "i face the same problem, have you solved it?. ",
    "alishir": "Hi,\nI didn't test it recently, I used bare UI access instead of using anko.\nOn Mon, Aug 27, 2018 at 5:39 AM Moos notifications@github.com wrote:\n\ni face the same problem, have you solved it?\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/619#issuecomment-416087685, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AA7tgsknQGL961rVtWmUQsD5ClrUpHIBks5uU0bKgaJpZM4T22bQ\n.\n. \n",
    "jeancharles-roger": "Hi, I do have the same problem with anko support 0.10.5-2 (using anko-0.10.6).. I've looked around a bit, KotlinTypeMapper seems to have a constructor with 7 parameters now (from 2 month ago Source).\njava\npublic KotlinTypeMapper(\n            @NotNull BindingContext bindingContext,\n            @NotNull ClassBuilderMode classBuilderMode,\n            @NotNull IncompatibleClassTracker incompatibleClassTracker,\n            @NotNull String moduleName,\n            @NotNull JvmTarget jvmTarget,\n            boolean isReleaseCoroutines,\n            boolean isIrBackend\n    )\n@4u7 in your commit you use 6 parameters. \nkoltin\nbindingContext,\nClassBuilderMode.LIGHT_CLASSES,\nIncompatibleClassTracker.DoNothing,\n\"main\",\nfalse,\nfalse\nI guess that JvmTarget jvmTarget is the one missing. I can't go much further since I don't have the dev env installed.. I have the 1.3.0-rc-146.. ",
    "dmitrijkiltau": "You can change colorPrimary, colorPrimaryDark and colorAccent in /res/values/colors.xml or create a  custom alert.. ",
    "jeiea": "I can use finish. But it is provided as Activity instance method. Where did you put that code?. It may be related with kotlinx-coroutines-android dependency. Dispatchers.UI was removed.. Why apologies? Isn't it anko's fault?\nI can't make a project work properly with the current version of anko and coroutines-0.30.2-eap13. Could you let me know the correct gradle configuration?. ",
    "TacoTheDank": "anko is a library for kotlin, not an app .-.. ",
    "dutchmo": "See also #624 Anko does not work with androidx. see #650. ",
    "hoornet": "I have the same problem with:\ntoast(\"test\"). I think I solved by adding:\nkotlin {\n    experimental {\n        coroutines 'enable'\n    }\n}\nand in the dependences also:\nimplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.23.3'\n. No I didn't!. ",
    "anargu": "At least for me is working anko doAsync { ... }\nI'm using the 0.10.5 version.. ",
    "EmmanuelGuther": "I'm using 0.10.5 version and the only thing that does not work for me is 'act'. Is very useful for work with context in fragment. But, 'toast' etc is working fine now.. same\n. \nI had the same problem, and after going crazy for hours, the only solution I found was to use android studio 3.2 and use the following configuration:\nAndroid studio 3.2\nKOTLIN PLUGIN: Version: 1.2.60-release-Studio3.2-1\nAndroid studio preferences --> Kotlin compiler\nLANGUAGE VERSION: 1.2\nAPI VERSION: 1.2\nbuild.gradle (project)\nbuildscript {\n    ext.kotlin_version = '1.2.60'\n    ext.anko_version='0.10.5'\n    repositories {\n        google()\n        jcenter()\n        maven { url 'https://maven.fabric.io/public' }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.3.0-alpha05'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n        classpath 'io.fabric.tools:gradle:1.+'\n    }\n}\nbuild.gradle (Module: App)\ndependencies {\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version\"\n    implementation \"androidx.lifecycle:lifecycle-extensions:2.0.0-rc01\"\n    kapt \"androidx.lifecycle:lifecycle-compiler:2.0.0-rc01\"\n    implementation \"org.jetbrains.anko:anko:$anko_version\"\n    implementation \"org.jetbrains.anko:anko-coroutines:$anko_version\"\n    ...more.....\ngradle.properties\ndistributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-4.9-all.zip. ",
    "stasbar": "Here is workaround:\nCreate Extensions.kt file, and paste there this aliases:\n```kotlin\ninline fun androidx.fragment.app.Fragment.toast(message: CharSequence): Toast? {\n    return activity?.toast(message)\n}\ninline fun androidx.fragment.app.Fragment.toast(message: Int): Toast? {\n    return activity?.toast(message)\n}\ninline fun androidx.fragment.app.Fragment.browse(url: String, newTask: Boolean = false) \n        = activity?.browse(url, newTask)\ninline fun androidx.fragment.app.Fragment.selector(\n        title: CharSequence? = null,\n        items: List,\n        noinline onClick: (DialogInterface, Int) -> Unit\n) = activity?.selector(title, items, onClick)\n```\nother apis are similarly. ",
    "rubengees": "See this thread on the issue tracker: https://issuetracker.google.com/issues/111195890\nAdding the latest jetifier (to your global build.gradle) like below works. At least for me and I use anko heavily in one of my projects.\ngroovy\ndependencies {\n        classpath 'com.android.tools.build.jetifier:jetifier-processor:1.0.0-alpha10'\n}. ",
    "psychehao": "\u73b0\u5728\u7684\u7248\u672c\u6709bug,\u53ea\u80fd\u7b49\u66f4\u65b0. @mhdtqq \u73b0\u5728\u7684\u7248\u672c\u6709bug,\u8bf7\u7b49\u66f4\u65b0\nThe following classes could not be found:\n-\u00a0__anko.preview.View\n\u53c2\u8003\n540. #540. ",
    "max-kammerer": "@seulkikims Workaround is to add to proguard next rule:\n-keepclassmembers class  *  {\n   void $$clinit();\n}. Related Kotlin issue: https://youtrack.jetbrains.com/issue/KT-24986. ",
    "JaymK": "Thanks a lot.\nOn Tue, Jun 19, 2018 at 12:36 PM, max-kammerer notifications@github.com\nwrote:\n\nWorkaround is to add to proguard next rule:\n-keepclassmembers class  *  {\n   void $$clinit();\n}\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/642#issuecomment-398338196, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AGXqB3e2N8dbxB5IOf7PBbBRlsohl60tks5t-MYtgaJpZM4Up67F\n.\n. \n",
    "seulkikims": "@max-kammerer Thanks!. ",
    "KevinPosim": "I have the same issue. Everything compiles and runs just get the warnings.. I am seeing the same issue. Just started my material design theme conversion today and I have the same smashed button look.. ",
    "wernerd": "Same with 3.2 release, updated this morning. This reads:\nAttempt to read local throwable but no local information was associated with the value being read\nAlso within coroutines: doResume(java.lang.Object, java.lang.Throwable). ",
    "senkwe": "You should use rightOf() and leftOf() instead of toLeftOf or toRightOf(). ",
    "rakaadinugroho": "nice idea, its make save time for everyone to create bottomsheet without create xml layout etc. nice!. ",
    "MSF-Jarvis": "Any progress on this?. ",
    "bstanleynerd": "Is there a target date for completing this?. ",
    "pedrofsn": "I removed anko from my projects. @Nekromancer I didn't find any solutions and I was forced to use androidX in many projects. It's unhappy but It was a kind of solution. I'm not suggesting anything, I'm pointing how I solved my problem.. ",
    "Nekromancer": "@pedrofsn and why are you telling us this? . Please just use search. There are 6 issues about that already.. https://github.com/Kotlin/anko/issues/650. ",
    "mfatiga": "@4u7 What is the status on this? Is anko being abandoned? Should we wait for this or should we move back to XML? Any information would be helpful. Thank you in advance!. ",
    "yvancoyaud": "Thank you for your prompt response.\nNow all is OK\nWith the version number 0.10.5  the error has disappeared and I can do the 'import' of anko in my class\nMerci\nYvan COYAUD. ",
    "nfode": "Yes, this also confused me. Luckily it works on all other devices. . ",
    "dkotrada": "Try Android Studio 3 in Ubuntu for examle. . ",
    "Tobibur": "Have you tried this?\nsetOnClickListener {\n                                   startActivity<SecondActivity>()\n                           }. ",
    "iceboundrock": "hi @mostifa , I think @Tobibur 's code works. Could you please confirm and close this issue? Thank you.. Please make sure you call await() inside a coroutine, because it needs to suspend until the computation finishes, and only coroutines can suspend in a non-blocking way.\nAs a matter of fact, doAsync returns a Future object, if you don't want to use coroutine, you can hook it up with RxJava, see this.. Hi @wschurman , your PR has been merged, could you please close this issue?. Did you grant sufficient permissions to your app? makeCall just starts an activity with Intent.ACTION_CALL which needs android.permission.CALL_PHONE. Here is the code:\n```kt\nfun Context.makeCall(number: String): Boolean {\n    try {\n        val intent = Intent(Intent.ACTION_CALL, Uri.parse(\"tel:$number\"))\n        startActivity(intent)\n        return true\n    } catch (e: Exception) {\n        e.printStackTrace()\n        return false\n    }\n}\n``. I think it should work, unless the user refuses to grant your appWRITE_EXTERNAL_STORAGEpermission.. TheaddOnTabSelectedListener method has been added since v26.1, so please make sure you use support library v26.1 or higher. See [this](https://developer.android.com/reference/android/support/design/widget/TabLayout.html#addOnTabSelectedListener(android.support.design.widget.TabLayout.OnTabSelectedListener)). Hi @xinnuo I am glad you resolved the problem, could you please close this issue? Thanks.. I don't thinkAnkocan do it since the [AlertDialog.Builder](https://developer.android.com/reference/android/app/AlertDialog.Builder) class in Android SDK does not expose such function. You need to customize the view all by yourself.. it is impossible since the type of dialog isAlertBuilderwhich does not have adismiss` method.\nI have an ulgry solution like this:\n```kt\nvar dialog: DialogInterface? = null\ndialog = alert {\n    val view = layoutInflater.inflate(R.layout.match_stats, null)\n    val closeButton = view.findViewById(R.id.closeButton)\ncloseButton.setOnClickListener { _ -> dialog?.dismiss() }\ncustomView = view\n\n}.show()\n```\n. Hi @jewom , if you fixed these problems, would you mind closing this issue? Thank you.. I am not an Anko team member. IMHO the Android KTX might be a better place for these extension functions.. doAysnc returns a Feature object, you need to await it. the doAsync may start slower than the thread version since it is backed by a ScheduledThreadPool, your unzip task may have to wait in the task queue for a while.\nIn the Thread version, how do you know the unzip operation is complete? \n. Please make sure you imported the org.jetbrains.anko package.\n. I am glad that you resolved the problem, would you mind closing this issue? Thanks.. Does this work for you?\nkt\nalert {\n    isCancelable = false\n    // your code ...\n}. This is expected and here is why.\nFor AlertBuilder, the yesButton and noButton are nothing but simple extension methods on top of positiveButton and negativeButton:\n```kt\ninline fun AlertBuilder<*>.yesButton(noinline handler: (dialog: DialogInterface) -> Unit) =\n    positiveButton(android.R.string.yes, handler)\ninline fun AlertBuilder<*>.noButton(noinline handler: (dialog: DialogInterface) -> Unit) =\n    negativeButton(android.R.string.no, handler)\n```\nIn Andorid SDK, the default value of android.R.strings.yes is OK and android.R.strings.no is Cancel, here is the code link\nYou can always use positiveButton and negativeButton to customize the text.. Sorry, but I dont understand your question.. I assume that you are referring to the AlertBuilder class since AlertDialogBuilder is deprecated.\nFor AlertBuilder, the yesButton and noButton are nothing but simple extension methods on top of positiveButton and negativeButton:\n```kt\ninline fun AlertBuilder<*>.yesButton(noinline handler: (dialog: DialogInterface) -> Unit) =\n    positiveButton(android.R.string.yes, handler)\ninline fun AlertBuilder<*>.noButton(noinline handler: (dialog: DialogInterface) -> Unit) =\n    negativeButton(android.R.string.no, handler)\n```\nso I think you can just call the positiveButton and negativeButton with the text you like.. Something like this:\nkt\nalert {\n    positiveButton(\"YES!!!\", {})\n    negativeButton(\"NOPE!!!, {})\n    // something else ...\n}\nAnd you can use resource id instead of literal string.. Well, contracts is a new feature in Kotlin 1.3 and Anko just migrated to Kotlin 1.3 in about 1 month ago.\nif you really want this feature, please send your PR. I think the Anko team would welcome your contribution.. You may want to read this page first.. ",
    "acherkashyn": "@4u7 In my project I don't have too many fragments, but have lots of custom views that trigger separate activities or Android intents. This is just a set of extensions that make these actions a bit easier for Views,  the same way as existing extension functions for Fragment or AnkoContext do.. ",
    "benibela": "These functions would be easier to use, if they were not extension functions, but global functions that get their context from some static global variable if that is possible. . I am porting an app from Java to Kotlin and thought Anko would help a lot, but then it did not compile due to this issue. Till this is resolved, I copied the functions I need to my project that is the simplest solution. And I was already upset that I had to increase minSdk from 9 to 14 for the support library of 27. ",
    "douglasalipio": "I did a trick for fixing that just creating another verticallayout which contains the webView and put the visibility for whatever I want.\nverticalLayout {\n                 val webTerms = webView { loadUrl(\"file:///android_asset/terms.html\")  }.\n                 visibility = visibilityWebView\n }. @BejanAlina make sense. I'm gonna change for that. Thanks. ",
    "BejanAlina": "@douglasalipio instead of creating a new layout which might affect performance, you could simply call the visibility outside the creation block \nval webTerms = webView {\n                loadUrl(\"file:///android_asset/terms.html\")\n            }.lparams(width = matchParent, height = dip(250))\nwebTerms.visibilty = [...]\nif anyone from contributors {@yanex} could tell us why, inside the block, the visibility modifier behaves strangely in this case . ",
    "gyf-dev": "same problem. ",
    "OleksiiAndroid": "Same error.... ",
    "geertberkers": "I fixed it by downgrading my build.grade dependencies to 'com.android.tools.build:gradle:3.2.0-rc01'. ",
    "wdharmana": "Just split it with comma. \nstartActivity<SecondActivity>(\n\"ID\" to \"001\",\n\"NAME\" to \"bangtiray\",\n\"ADDRESS\" to \"Jakarta\",\n\"ANOTHER\" to \"another data\"\n). ",
    "wschurman": "Looks like the blame rev is https://github.com/Kotlin/anko/pull/616/commits/60761efa2274f26b000ae090eeb1c8bf23e5b0e1. To fix it CustomViews will have to be placed separately within each SDK library since _LinearLayout is only available inside each (unless there's some trickery someone knows of).\ncc @4u7 . ",
    "Android-s14": "I believe this can be merged with https://github.com/Kotlin/anko/issues/673. ",
    "iFr0z": "because async(UI){} deprecated. @AlyssonPHN clear coroutines without Anko wrapping.\n\nExample:\n```\nabstract class ScopedAppActivity: AppCompatActivity(), CoroutineScope {\n    protected lateinit var job: Job\n    override val coroutineContext: CoroutineContext \n        get() = job + Dispatchers.Main\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    job = Job()\n}\n\noverride fun onDestroy() {\n    super.onDestroy()\n    job.cancel()\n}\n\n}\n```\n```\nclass MainActivity : ScopedAppActivity() {\nfun asyncShowData() = launch { // Is invoked in UI context with Activity's job as a parent\n    // actual implementation\n}\n\nsuspend fun showIOData() {\n    val deferred = async(Dispatchers.IO) {\n        // impl      \n    }\n    withContext(Dispatchers.Main) {\n      val data = deferred.await()\n      // Show data in UI\n    }\n}\n\n}\n```. https://github.com/Kotlin/anko/issues/676. \n",
    "AlyssonPHN": "What's the alternative?. Oh, Thanks.. ",
    "3moeslam": "Can you add crash log. ",
    "xinnuo": "java.lang.NoSuchMethodError: No virtual method addOnTabSelectedListener(Landroid/support/design/widget/TabLayout$OnTabSelectedListener;)V in class Landroid/support/design/widget/TabLayout; or its super classes (declaration of 'android.support.design.widget.TabLayout' appears in /data/app/com.ruanmeng.smart_parking-BO76hAaXXlKILy1CVIJXLw==/split_lib_dependencies_apk.apk)\n\n. Thank you. I already have a solution.. ok. ",
    "mrhammadasif": "You would get the reference of dialog in it. ",
    "ghosalmartin": "the latest jetifier beta fixed most of these issues. ",
    "jewom": "Great!. Yes thanks ! . ",
    "paolorotolo": "Probably duplicate of #690, I'm closing this.. ",
    "eitzend": "I got it going. I had some references to org.jetbrains.kotlinx:kotlinx-coroutines-android:0.30.2 that needed to be org.jetbrains.kotlinx:kotlinx-coroutines-android:0.30.2-eap13.\nMy apologies.. Are you using:\n  ext.anko_version = '0.10.7-rc13'\nThis is required to use Kotlin 1.3\nOn Thu, Nov 8, 2018, 9:48 PM jeiea <notifications@github.com wrote:\n\nWhy apologies? Isn't it anko's fault?\nI can't make a project buildable with the current version of anko and\ncoroutines-0.30.2-eap13. Could you let me know the correct gradle\nconfiguration?\n\u2014\nYou are receiving this because you modified the open/close state.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/694#issuecomment-437257424, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AP3leRDxowE_noLaTK4y8SbmPeywIkBoks5utRcngaJpZM4YVtfe\n.\n. \n",
    "carlos-mg89": "I'm using a BroadcastReceiver that awaits for a download to be completed. Once it completes, the the BroadcastReceiver.onReceive method gets an Intent with the information I need to unzip the downloaded file.\nSo actually this thread is already being called outside the user flow. And in that onReceive call, I simply open a thread (the one I tried to replace by Anko version) where I unzip the file.\nBut it makes sense now I had to wait for the doAsync to finish. Will test the Anko doAsync version somewhere else in my app, where I want to achieve a multithreaded code, so it runs faster with parallel threads for different tasks.\nThanks for replying back!. ",
    "alfawzaan": "Yeah thanks I discovered I was using anko and not anko-common\nOn Tue, Dec 18, 2018, 8:42 AM Ruoshi Li <notifications@github.com wrote:\n\nPlease make sure you imported the org.jetbrains.anko package.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/697#issuecomment-448126005, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AoJkG05ZR8ST87MabGlDeE1iGMjBdyxwks5u6Jx1gaJpZM4Ywx83\n.\n. Okay will do just that\n\nOn Wed, Dec 19, 2018, 7:40 AM Ruoshi Li <notifications@github.com wrote:\n\nI am glad that you resolved the problem, would you mind closing this\nissue? Thanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/697#issuecomment-448486476, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AoJkG-5NgRdpCQu_0LioievnuMUjUJ7Vks5u6d9UgaJpZM4Ywx83\n.\n. \n",
    "tej5530": "i want to setCancelable in alert dialog.. ",
    "Anilugale": "show why don't you add function to add  custom title . ",
    "Taonce": "I think you got it wrong,yesButton and noButton has nothing to do with the title,it decision is to confirm and cancel the button text.You can reframe your question.. ",
    "marcosvbras": "\nI assume that you are referring to the AlertBuilder class since AlertDialogBuilder is deprecated.\nFor AlertBuilder, the yesButton and noButton are nothing but simple extension methods on top of positiveButton and negativeButton:\n```kotlin\ninline fun AlertBuilder<*>.yesButton(noinline handler: (dialog: DialogInterface) -> Unit) =\n    positiveButton(android.R.string.yes, handler)\ninline fun AlertBuilder<*>.noButton(noinline handler: (dialog: DialogInterface) -> Unit) =\n    negativeButton(android.R.string.no, handler)\n```\nso I think you can just call the positiveButton and negativeButton with the text you like.\n\nHow can I call this in Anko dialogs?. ",
    "bartekpacia": "Compile has been deprecated. Use implementation or api instead.. You're right, sorry then . ",
    "mustafahmalik": "in fragment you can call activity?.toast(\"message\"). ",
    "KennedySDias": "The problem is no longer happening, but I don't know why.. ",
    "DaCodeShogun": "I had the same problem after upgrading to SDK 28. ",
    "harshmittal29": "@DaCodeShogun Its solved here https://stackoverflow.com/questions/54397500/proguard-error-illegalargumentexception-stack-size-becomes-negative. ",
    "wtuadn": "I have the same problem, on my phone, dip(1)=2 px, but 1dp in xml is 3 px. ",
    "christopheblin": "I completely agree with this issue : the documentation of anko coroutines is awful and in the end you never know what to do or if what you do is safe (in regard to the android lifecycles).\nFor ex, are the following code snippets 1. safe ? 2. equivalent ? :\ndoAsync {\n    val infos = model.getInfos(offerId!!)\n    fragmentUiThread { onInfos(infos) }\n}\n\nVersus\nonInfos(doAsyncResult { model.getInfos(offerId!!) }.get())\n//here I suppose that onInfos must check for detached state as well as activity.isFinishing ?\n\nPlease note that this is not a bash toward anko coroutines ! \nI find it way more clearer than any RxJava or Future or ..., it is just the documentation that is outdated and does not provide a real best practice \nAs a side note, I am using the first code snippet (I hope it is the good one :))    . ",
    "tprochazka": "@christopheblin Here is quite obvious that \nonInfos(doAsyncResult { model.getInfos(offerId!!) }.get())\nis wrong, because get() immediatelly block the main thread until background thread finish it's job.\nSo it is equivalent of onInfos(model.getInfos(offerId!!))\n. ",
    "ABStepanov": "same problem with Android Studio 3.3.2 with Kotlin plugin version: 1.3.21 and ext.anko_version = '0.10.7'. ",
    "Benjoyo": "I have this issue as well since migration to androidx, how can we fix this?. ",
    "JAICHANGPARK": "Try to change your style.xml file\n2019\u5e743\u67083\u65e5(\u65e5) \u5348\u5f8c10:20 Benjoyo notifications@github.com:\n\nI have this issue as well since migration to androidx, how can we fix this?\n\u2014\nYou are receiving this because you are subscribed to this thread.\nReply to this email directly, view it on GitHub\nhttps://github.com/Kotlin/anko/issues/731#issuecomment-469022320, or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/ASlPYzzuV_IHpNRL_0vX3yHlfM8Dw43iks5vS8w6gaJpZM4bItjR\n.\n. \n",
    "orangy": "Reads like this refers to Scaloid. Replace \"this\" with \"Anko' may be?\n. Replace with just \"Scaloid\" may be?\n. ",
    "hhariri": "Personally I think Why not Scaloid is fine since it's basically focusing on why this if there's Scaloid.\n. ",
    "gustavkarlsson": "I think this would make more sense as a property.. ",
    "creativecreatorormaybenot": "What do you mean? It is getting an IntegerRes. The name of the function for getting a DimensionRes is dimen(), so what is wrong with int()?. "
}